

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Sep 26 10:26:46 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1,group=2
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1,group=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1,group=2
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1,group=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1
   257                           	psect	text232,global,reloc=2,class=CODE,delta=1
   258                           	psect	text233,global,reloc=2,class=CODE,delta=1,group=1
   259                           	psect	text234,global,reloc=2,class=CODE,delta=1,group=1
   260                           	psect	text235,global,reloc=2,class=CODE,delta=1
   261                           	psect	text236,global,reloc=2,class=CODE,delta=1
   262                           	psect	text237,global,reloc=2,class=CODE,delta=1
   263                           	psect	text238,global,reloc=2,class=CODE,delta=1
   264                           	psect	text239,global,reloc=2,class=CODE,delta=1
   265                           	psect	text240,global,reloc=2,class=CODE,delta=1
   266                           	psect	text241,global,reloc=2,class=CODE,delta=1
   267                           	psect	text242,global,reloc=2,class=CODE,delta=1
   268                           	psect	text243,global,reloc=2,class=CODE,delta=1
   269                           	psect	text244,global,reloc=2,class=CODE,delta=1
   270                           	psect	text245,global,reloc=2,class=CODE,delta=1
   271                           	psect	text246,global,reloc=2,class=CODE,delta=1,group=2
   272                           	psect	text247,global,reloc=2,class=CODE,delta=1,group=2
   273                           	psect	text248,global,reloc=2,class=CODE,delta=1
   274                           	psect	text249,global,reloc=2,class=CODE,delta=1
   275                           	psect	text250,global,reloc=2,class=CODE,delta=1
   276                           	psect	text251,global,reloc=2,class=CODE,delta=1
   277                           	psect	text252,global,reloc=2,class=CODE,delta=1
   278                           	psect	text253,global,reloc=2,class=CODE,delta=1
   279                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   280                           	psect	text255,global,reloc=2,class=CODE,delta=1
   281                           	psect	text256,global,reloc=2,class=CODE,delta=1
   282                           	psect	text257,global,reloc=2,class=CODE,delta=1
   283                           	psect	text258,global,reloc=2,class=CODE,delta=1
   284                           	psect	text259,global,reloc=2,class=CODE,delta=1
   285                           	psect	text260,global,reloc=2,class=CODE,delta=1
   286                           	psect	text261,global,reloc=2,class=CODE,delta=1,group=1
   287                           	psect	text262,global,reloc=2,class=CODE,delta=1
   288                           	psect	text263,global,reloc=2,class=CODE,delta=1
   289                           	psect	text264,global,reloc=2,class=CODE,delta=1
   290                           	psect	text265,global,reloc=2,class=CODE,delta=1
   291                           	psect	text266,global,reloc=2,class=CODE,delta=1
   292                           	psect	text267,global,reloc=2,class=CODE,delta=1
   293                           	psect	text268,global,reloc=2,class=CODE,delta=1
   294                           	psect	text269,global,reloc=2,class=CODE,delta=1
   295                           	psect	text270,global,reloc=2,class=CODE,delta=1
   296                           	psect	text271,global,reloc=2,class=CODE,delta=1
   297                           	psect	text272,global,reloc=2,class=CODE,delta=1
   298                           	psect	text273,global,reloc=2,class=CODE,delta=1
   299                           	psect	text274,global,reloc=2,class=CODE,delta=1
   300                           	psect	text275,global,reloc=2,class=CODE,delta=1
   301                           	psect	text276,global,reloc=2,class=CODE,delta=1
   302                           	psect	text277,global,reloc=2,class=CODE,delta=1
   303                           	psect	text278,global,reloc=2,class=CODE,delta=1
   304                           	psect	text279,global,reloc=2,class=CODE,delta=1
   305                           	psect	text280,global,reloc=2,class=CODE,delta=1
   306                           	psect	text281,global,reloc=2,class=CODE,delta=1
   307                           	psect	text282,global,reloc=2,class=CODE,delta=1
   308                           	psect	text283,global,reloc=2,class=CODE,delta=1
   309                           	psect	text284,global,reloc=2,class=CODE,delta=1
   310                           	psect	text285,global,reloc=2,class=CODE,delta=1
   311                           	psect	text286,global,reloc=2,class=CODE,delta=1
   312                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   313                           	psect	text287,global,reloc=2,class=CODE,delta=1
   314                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   315                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   316  0000                     
   317                           ; Version 2.05
   318                           ; Generated 20/12/2018 GMT
   319                           ; 
   320                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   321                           ; All rights reserved.
   322                           ; 
   323                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   324                           ; 
   325                           ; Redistribution and use in source and binary forms, with or without modification, are
   326                           ; permitted provided that the following conditions are met:
   327                           ; 
   328                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   329                           ;        conditions and the following disclaimer.
   330                           ; 
   331                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   332                           ;        of conditions and the following disclaimer in the documentation and/or other
   333                           ;        materials provided with the distribution.
   334                           ; 
   335                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   336                           ;        software without specific prior written permission.
   337                           ; 
   338                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   339                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   340                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   341                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   342                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   343                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   344                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   345                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   346                           ; 
   347                           ; 
   348                           ; Code-generator required, PIC18LF46K22 Definitions
   349                           ; 
   350                           ; SFR Addresses
   351  0000                     
   352 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
   353  0000                     
   354 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
   355  0000                     
   356 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
   357  0000                     
   358 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   359 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   360 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   361 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   362 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   363 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   364 ;;_LORAWAN_LinkCheckCallback$2513	offset	0
   365 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   366 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   367 ;;_DutyCycleCallback$1859	offset	0
   368 ;;DutyCycleCallback@minim	offset	4
   369 ;;DutyCycleCallback@i	offset	8
   370 ;;DutyCycleCallback@found	offset	9
   371 ;;DutyCycleCallback@param	offset=-1 (param)
   372 ;;AutomaticReplyCallback@param	offset=-1 (param)
   373 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   374 ;;AckRetransmissionCallback@param	offset=-1 (param)
   375 ;;_param	offset=-1 (param)
   376 ;;_UpdateJoinSuccessState$2530	offset	0
   377 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   378                           
   379                           	psect	idataCOMRAM
   380  00A7FE                     __pidataCOMRAM:
   381                           	opt callstack 0
   382                           
   383                           ;initializer for _ticksToScheduledInterrupt
   384  00A7FE  FFFF               	dw	65535
   385  00A800  FFFF               	dw	65535
   386                           
   387                           	psect	idataBANK1
   388  00A6BA                     __pidataBANK1:
   389                           	opt callstack 0
   390                           
   391                           ;initializer for _randx
   392  00A6BA  0001               	dw	1
   393  00A6BC  0000               	dw	0
   394                           
   395                           ;initializer for _pulseSignal
   396  00A6BE  0222               	dw	546
   397  00A6C0  0208               	dw	520
   398                           
   399                           ;initializer for _address
   400  00A6C2  90                 	db	144
   401                           
   402                           ;initializer for _sensorsStringLength
   403  00A6C3  0A                 	db	10
   404                           
   405                           ;initializer for _stringValueLength
   406  00A6C4  05                 	db	5
   407                           
   408                           ;initializer for _stringLength
   409  00A6C5  05                 	db	5
   410                           
   411                           	psect	idataBANK3
   412  00A096                     __pidataBANK3:
   413                           	opt callstack 0
   414                           
   415                           ;initializer for GenerateSubkey@F5972
   416  00A096  00                 	db	0
   417  00A097  00                 	db	0
   418  00A098  00                 	db	0
   419  00A099  00                 	db	0
   420  00A09A  00                 	db	0
   421  00A09B  00                 	db	0
   422  00A09C  00                 	db	0
   423  00A09D  00                 	db	0
   424  00A09E  00                 	db	0
   425  00A09F  00                 	db	0
   426  00A0A0  00                 	db	0
   427  00A0A1  00                 	db	0
   428  00A0A2  00                 	db	0
   429  00A0A3  00                 	db	0
   430  00A0A4  00                 	db	0
   431  00A0A5  87                 	db	135
   432                           
   433                           ;initializer for _appKey
   434  00A0A6  58                 	db	88
   435  00A0A7  FD                 	db	253
   436  00A0A8  D5                 	db	213
   437  00A0A9  36                 	db	54
   438  00A0AA  9F                 	db	159
   439  00A0AB  84                 	db	132
   440  00A0AC  6D                 	db	109
   441  00A0AD  FA                 	db	250
   442  00A0AE  90                 	db	144
   443  00A0AF  16                 	db	22
   444  00A0B0  5B                 	db	91
   445  00A0B1  5F                 	db	95
   446  00A0B2  8E                 	db	142
   447  00A0B3  4D                 	db	77
   448  00A0B4  81                 	db	129
   449  00A0B5  F8                 	db	248
   450                           
   451                           ;initializer for _deviceEui
   452  00A0B6  E4                 	db	228
   453  00A0B7  43                 	db	67
   454  00A0B8  5F                 	db	95
   455  00A0B9  66                 	db	102
   456  00A0BA  BF                 	db	191
   457  00A0BB  8A                 	db	138
   458  00A0BC  57                 	db	87
   459  00A0BD  6D                 	db	109
   460                           
   461                           	psect	mediumconst
   462  00FE06                     __pmediumconst:
   463                           	opt callstack 0
   464  00FE06  00                 	db	0
   465  00FE07                     _STable:
   466                           	opt callstack 0
   467  00FE07  63                 	db	99
   468  00FE08  7C                 	db	124
   469  00FE09  77                 	db	119
   470  00FE0A  7B                 	db	123
   471  00FE0B  F2                 	db	242
   472  00FE0C  6B                 	db	107
   473  00FE0D  6F                 	db	111
   474  00FE0E  C5                 	db	197
   475  00FE0F  30                 	db	48
   476  00FE10  01                 	db	1
   477  00FE11  67                 	db	103
   478  00FE12  2B                 	db	43
   479  00FE13  FE                 	db	254
   480  00FE14  D7                 	db	215
   481  00FE15  AB                 	db	171
   482  00FE16  76                 	db	118
   483  00FE17  CA                 	db	202
   484  00FE18  82                 	db	130
   485  00FE19  C9                 	db	201
   486  00FE1A  7D                 	db	125
   487  00FE1B  FA                 	db	250
   488  00FE1C  59                 	db	89
   489  00FE1D  47                 	db	71
   490  00FE1E  F0                 	db	240
   491  00FE1F  AD                 	db	173
   492  00FE20  D4                 	db	212
   493  00FE21  A2                 	db	162
   494  00FE22  AF                 	db	175
   495  00FE23  9C                 	db	156
   496  00FE24  A4                 	db	164
   497  00FE25  72                 	db	114
   498  00FE26  C0                 	db	192
   499  00FE27  B7                 	db	183
   500  00FE28  FD                 	db	253
   501  00FE29  93                 	db	147
   502  00FE2A  26                 	db	38
   503  00FE2B  36                 	db	54
   504  00FE2C  3F                 	db	63
   505  00FE2D  F7                 	db	247
   506  00FE2E  CC                 	db	204
   507  00FE2F  34                 	db	52
   508  00FE30  A5                 	db	165
   509  00FE31  E5                 	db	229
   510  00FE32  F1                 	db	241
   511  00FE33  71                 	db	113
   512  00FE34  D8                 	db	216
   513  00FE35  31                 	db	49
   514  00FE36  15                 	db	21
   515  00FE37  04                 	db	4
   516  00FE38  C7                 	db	199
   517  00FE39  23                 	db	35
   518  00FE3A  C3                 	db	195
   519  00FE3B  18                 	db	24
   520  00FE3C  96                 	db	150
   521  00FE3D  05                 	db	5
   522  00FE3E  9A                 	db	154
   523  00FE3F  07                 	db	7
   524  00FE40  12                 	db	18
   525  00FE41  80                 	db	128
   526  00FE42  E2                 	db	226
   527  00FE43  EB                 	db	235
   528  00FE44  27                 	db	39
   529  00FE45  B2                 	db	178
   530  00FE46  75                 	db	117
   531  00FE47  09                 	db	9
   532  00FE48  83                 	db	131
   533  00FE49  2C                 	db	44
   534  00FE4A  1A                 	db	26
   535  00FE4B  1B                 	db	27
   536  00FE4C  6E                 	db	110
   537  00FE4D  5A                 	db	90
   538  00FE4E  A0                 	db	160
   539  00FE4F  52                 	db	82
   540  00FE50  3B                 	db	59
   541  00FE51  D6                 	db	214
   542  00FE52  B3                 	db	179
   543  00FE53  29                 	db	41
   544  00FE54  E3                 	db	227
   545  00FE55  2F                 	db	47
   546  00FE56  84                 	db	132
   547  00FE57  53                 	db	83
   548  00FE58  D1                 	db	209
   549  00FE59  00                 	db	0
   550  00FE5A  ED                 	db	237
   551  00FE5B  20                 	db	32
   552  00FE5C  FC                 	db	252
   553  00FE5D  B1                 	db	177
   554  00FE5E  5B                 	db	91
   555  00FE5F  6A                 	db	106
   556  00FE60  CB                 	db	203
   557  00FE61  BE                 	db	190
   558  00FE62  39                 	db	57
   559  00FE63  4A                 	db	74
   560  00FE64  4C                 	db	76
   561  00FE65  58                 	db	88
   562  00FE66  CF                 	db	207
   563  00FE67  D0                 	db	208
   564  00FE68  EF                 	db	239
   565  00FE69  AA                 	db	170
   566  00FE6A  FB                 	db	251
   567  00FE6B  43                 	db	67
   568  00FE6C  4D                 	db	77
   569  00FE6D  33                 	db	51
   570  00FE6E  85                 	db	133
   571  00FE6F  45                 	db	69
   572  00FE70  F9                 	db	249
   573  00FE71  02                 	db	2
   574  00FE72  7F                 	db	127
   575  00FE73  50                 	db	80
   576  00FE74  3C                 	db	60
   577  00FE75  9F                 	db	159
   578  00FE76  A8                 	db	168
   579  00FE77  51                 	db	81
   580  00FE78  A3                 	db	163
   581  00FE79  40                 	db	64
   582  00FE7A  8F                 	db	143
   583  00FE7B  92                 	db	146
   584  00FE7C  9D                 	db	157
   585  00FE7D  38                 	db	56
   586  00FE7E  F5                 	db	245
   587  00FE7F  BC                 	db	188
   588  00FE80  B6                 	db	182
   589  00FE81  DA                 	db	218
   590  00FE82  21                 	db	33
   591  00FE83  10                 	db	16
   592  00FE84  FF                 	db	255
   593  00FE85  F3                 	db	243
   594  00FE86  D2                 	db	210
   595  00FE87  CD                 	db	205
   596  00FE88  0C                 	db	12
   597  00FE89  13                 	db	19
   598  00FE8A  EC                 	db	236
   599  00FE8B  5F                 	db	95
   600  00FE8C  97                 	db	151
   601  00FE8D  44                 	db	68
   602  00FE8E  17                 	db	23
   603  00FE8F  C4                 	db	196
   604  00FE90  A7                 	db	167
   605  00FE91  7E                 	db	126
   606  00FE92  3D                 	db	61
   607  00FE93  64                 	db	100
   608  00FE94  5D                 	db	93
   609  00FE95  19                 	db	25
   610  00FE96  73                 	db	115
   611  00FE97  60                 	db	96
   612  00FE98  81                 	db	129
   613  00FE99  4F                 	db	79
   614  00FE9A  DC                 	db	220
   615  00FE9B  22                 	db	34
   616  00FE9C  2A                 	db	42
   617  00FE9D  90                 	db	144
   618  00FE9E  88                 	db	136
   619  00FE9F  46                 	db	70
   620  00FEA0  EE                 	db	238
   621  00FEA1  B8                 	db	184
   622  00FEA2  14                 	db	20
   623  00FEA3  DE                 	db	222
   624  00FEA4  5E                 	db	94
   625  00FEA5  0B                 	db	11
   626  00FEA6  DB                 	db	219
   627  00FEA7  E0                 	db	224
   628  00FEA8  32                 	db	50
   629  00FEA9  3A                 	db	58
   630  00FEAA  0A                 	db	10
   631  00FEAB  49                 	db	73
   632  00FEAC  06                 	db	6
   633  00FEAD  24                 	db	36
   634  00FEAE  5C                 	db	92
   635  00FEAF  C2                 	db	194
   636  00FEB0  D3                 	db	211
   637  00FEB1  AC                 	db	172
   638  00FEB2  62                 	db	98
   639  00FEB3  91                 	db	145
   640  00FEB4  95                 	db	149
   641  00FEB5  E4                 	db	228
   642  00FEB6  79                 	db	121
   643  00FEB7  E7                 	db	231
   644  00FEB8  C8                 	db	200
   645  00FEB9  37                 	db	55
   646  00FEBA  6D                 	db	109
   647  00FEBB  8D                 	db	141
   648  00FEBC  D5                 	db	213
   649  00FEBD  4E                 	db	78
   650  00FEBE  A9                 	db	169
   651  00FEBF  6C                 	db	108
   652  00FEC0  56                 	db	86
   653  00FEC1  F4                 	db	244
   654  00FEC2  EA                 	db	234
   655  00FEC3  65                 	db	101
   656  00FEC4  7A                 	db	122
   657  00FEC5  AE                 	db	174
   658  00FEC6  08                 	db	8
   659  00FEC7  BA                 	db	186
   660  00FEC8  78                 	db	120
   661  00FEC9  25                 	db	37
   662  00FECA  2E                 	db	46
   663  00FECB  1C                 	db	28
   664  00FECC  A6                 	db	166
   665  00FECD  B4                 	db	180
   666  00FECE  C6                 	db	198
   667  00FECF  E8                 	db	232
   668  00FED0  DD                 	db	221
   669  00FED1  74                 	db	116
   670  00FED2  1F                 	db	31
   671  00FED3  4B                 	db	75
   672  00FED4  BD                 	db	189
   673  00FED5  8B                 	db	139
   674  00FED6  8A                 	db	138
   675  00FED7  70                 	db	112
   676  00FED8  3E                 	db	62
   677  00FED9  B5                 	db	181
   678  00FEDA  66                 	db	102
   679  00FEDB  48                 	db	72
   680  00FEDC  03                 	db	3
   681  00FEDD  F6                 	db	246
   682  00FEDE  0E                 	db	14
   683  00FEDF  61                 	db	97
   684  00FEE0  35                 	db	53
   685  00FEE1  57                 	db	87
   686  00FEE2  B9                 	db	185
   687  00FEE3  86                 	db	134
   688  00FEE4  C1                 	db	193
   689  00FEE5  1D                 	db	29
   690  00FEE6  9E                 	db	158
   691  00FEE7  E1                 	db	225
   692  00FEE8  F8                 	db	248
   693  00FEE9  98                 	db	152
   694  00FEEA  11                 	db	17
   695  00FEEB  69                 	db	105
   696  00FEEC  D9                 	db	217
   697  00FEED  8E                 	db	142
   698  00FEEE  94                 	db	148
   699  00FEEF  9B                 	db	155
   700  00FEF0  1E                 	db	30
   701  00FEF1  87                 	db	135
   702  00FEF2  E9                 	db	233
   703  00FEF3  CE                 	db	206
   704  00FEF4  55                 	db	85
   705  00FEF5  28                 	db	40
   706  00FEF6  DF                 	db	223
   707  00FEF7  8C                 	db	140
   708  00FEF8  A1                 	db	161
   709  00FEF9  89                 	db	137
   710  00FEFA  0D                 	db	13
   711  00FEFB  BF                 	db	191
   712  00FEFC  E6                 	db	230
   713  00FEFD  42                 	db	66
   714  00FEFE  68                 	db	104
   715  00FEFF  41                 	db	65
   716  00FF00  99                 	db	153
   717  00FF01  2D                 	db	45
   718  00FF02  0F                 	db	15
   719  00FF03  B0                 	db	176
   720  00FF04  54                 	db	84
   721  00FF05  BB                 	db	187
   722  00FF06  16                 	db	22
   723  00FF07                     __end_of_STable:
   724                           	opt callstack 0
   725  00FF07                     _modulation:
   726                           	opt callstack 0
   727  00FF07  01                 	db	1
   728  00FF08  01                 	db	1
   729  00FF09  01                 	db	1
   730  00FF0A  01                 	db	1
   731  00FF0B  01                 	db	1
   732  00FF0C  01                 	db	1
   733  00FF0D  01                 	db	1
   734  00FF0E  00                 	db	0
   735  00FF0F                     __end_of_modulation:
   736                           	opt callstack 0
   737  00FF0F                     _rxWindowOffset:
   738                           	opt callstack 0
   739  00FF0F  DF                 	db	223
   740  00FF10  CE                 	db	206
   741  00FF11  C6                 	db	198
   742  00FF12  C2                 	db	194
   743  00FF13  BE                 	db	190
   744  00FF14  BC                 	db	188
   745  00FF15  F1                 	db	241
   746  00FF16  FE                 	db	254
   747  00FF17                     __end_of_rxWindowOffset:
   748                           	opt callstack 0
   749  00FF17                     _maxPayloadSize:
   750                           	opt callstack 0
   751  00FF17  33                 	db	51
   752  00FF18  33                 	db	51
   753  00FF19  33                 	db	51
   754  00FF1A  73                 	db	115
   755  00FF1B  F2                 	db	242
   756  00FF1C  F2                 	db	242
   757  00FF1D  F2                 	db	242
   758  00FF1E  38                 	db	56
   759  00FF1F                     __end_of_maxPayloadSize:
   760                           	opt callstack 0
   761  00FF1F                     _rxWindowSize:
   762                           	opt callstack 0
   763  00FF1F  08                 	db	8
   764  00FF20  0A                 	db	10
   765  00FF21  0E                 	db	14
   766  00FF22  1A                 	db	26
   767  00FF23  31                 	db	49
   768  00FF24  58                 	db	88
   769  00FF25  3C                 	db	60
   770  00FF26  08                 	db	8
   771  00FF27                     __end_of_rxWindowSize:
   772                           	opt callstack 0
   773  00FF27                     _macEndDevCmdReplyLen:
   774                           	opt callstack 0
   775  00FF27  01                 	db	1
   776  00FF28  02                 	db	2
   777  00FF29  01                 	db	1
   778  00FF2A  02                 	db	2
   779  00FF2B  03                 	db	3
   780  00FF2C  02                 	db	2
   781  00FF2D  01                 	db	1
   782  00FF2E                     __end_of_macEndDevCmdReplyLen:
   783                           	opt callstack 0
   784  00FF2E                     _bandwidth:
   785                           	opt callstack 0
   786  00FF2E  07                 	db	7
   787  00FF2F  07                 	db	7
   788  00FF30  07                 	db	7
   789  00FF31  07                 	db	7
   790  00FF32  07                 	db	7
   791  00FF33  07                 	db	7
   792  00FF34  08                 	db	8
   793  00FF35                     __end_of_bandwidth:
   794                           	opt callstack 0
   795  00FF35                     _spreadingFactor:
   796                           	opt callstack 0
   797  00FF35  0C                 	db	12
   798  00FF36  0B                 	db	11
   799  00FF37  0A                 	db	10
   800  00FF38  09                 	db	9
   801  00FF39  08                 	db	8
   802  00FF3A  07                 	db	7
   803  00FF3B  07                 	db	7
   804  00FF3C                     __end_of_spreadingFactor:
   805                           	opt callstack 0
   806  00FF3C  0A                 	db	10
   807  00FF3D  07                 	db	7
   808  00FF3E  04                 	db	4
   809  00FF3F  01                 	db	1
   810  00FF40  FE                 	db	254
   811  00FF41  FB                 	db	251
   812  00FF42                     __end_of_txPower433:
   813                           	opt callstack 0
   814  00FF42                     _txPower868:
   815                           	opt callstack 0
   816  00FF42  14                 	db	20
   817  00FF43  0E                 	db	14
   818  00FF44  0B                 	db	11
   819  00FF45  08                 	db	8
   820  00FF46  05                 	db	5
   821  00FF47  02                 	db	2
   822  00FF48                     __end_of_txPower868:
   823                           	opt callstack 0
   824  00FF48                     _DefaultChannels868:
   825                           	opt callstack 0
   826  00FF48  4220               	dw	16928
   827  00FF4A  33C4               	dw	13252
   828  00FF4C  01                 	db	1
   829  00FF4D  50                 	db	80
   830  00FF4E  0063               	dw	99
   831  00FF50  0000               	dw	0
   832  00FF52  0000               	dw	0
   833  00FF54  01                 	db	1
   834  00FF55  FF                 	db	255
   835  00FF56  34E0               	dw	13536
   836  00FF58  33C1               	dw	13249
   837  00FF5A  01                 	db	1
   838  00FF5B  50                 	db	80
   839  00FF5C  0063               	dw	99
   840  00FF5E  0000               	dw	0
   841  00FF60  0000               	dw	0
   842  00FF62  01                 	db	1
   843  00FF63  FF                 	db	255
   844  00FF64  27A0               	dw	10144
   845  00FF66  33BE               	dw	13246
   846  00FF68  01                 	db	1
   847  00FF69  50                 	db	80
   848  00FF6A  0063               	dw	99
   849  00FF6C  0000               	dw	0
   850  00FF6E  0000               	dw	0
   851  00FF70  01                 	db	1
   852  00FF71  FF                 	db	255
   853  00FF72  E608               	dw	58888
   854  00FF74  33D3               	dw	13267
   855  00FF76  01                 	db	1
   856  00FF77  50                 	db	80
   857  00FF78  0063               	dw	99
   858  00FF7A  0000               	dw	0
   859  00FF7C  0000               	dw	0
   860  00FF7E  01                 	db	1
   861  00FF7F  FF                 	db	255
   862  00FF80                     __end_of_DefaultChannels868:
   863                           	opt callstack 0
   864  00FF80                     _DefaultChannels433:
   865                           	opt callstack 0
   866  00FF80  B9D8               	dw	47576
   867  00FF82  19D1               	dw	6609
   868  00FF84  01                 	db	1
   869  00FF85  50                 	db	80
   870  00FF86  012E               	dw	302
   871  00FF88  0000               	dw	0
   872  00FF8A  0000               	dw	0
   873  00FF8C  01                 	db	1
   874  00FF8D  FF                 	db	255
   875  00FF8E  C718               	dw	50968
   876  00FF90  19D4               	dw	6612
   877  00FF92  01                 	db	1
   878  00FF93  50                 	db	80
   879  00FF94  012E               	dw	302
   880  00FF96  0000               	dw	0
   881  00FF98  0000               	dw	0
   882  00FF9A  01                 	db	1
   883  00FF9B  FF                 	db	255
   884  00FF9C  D458               	dw	54360
   885  00FF9E  19D7               	dw	6615
   886  00FFA0  01                 	db	1
   887  00FFA1  50                 	db	80
   888  00FFA2  012E               	dw	302
   889  00FFA4  0000               	dw	0
   890  00FFA6  0000               	dw	0
   891  00FFA8  01                 	db	1
   892  00FFA9  FF                 	db	255
   893  00FFAA                     __end_of_DefaultChannels433:
   894                           	opt callstack 0
   895  00FFAA                     log@coeff:
   896                           	opt callstack 0
   897  00FFAA  0000               	dw	0
   898  00FFAC  0000               	dw	0
   899  00FFAE  FFC4               	dw	65476
   900  00FFB0  3F7F               	dw	16255
   901  00FFB2  EF80               	dw	61312
   902  00FFB4  BEFF               	dw	48895
   903  00FFB6  E190               	dw	57744
   904  00FFB8  3EA9               	dw	16041
   905  00FFBA  82EC               	dw	33516
   906  00FFBC  BE76               	dw	48758
   907  00FFBE  AD82               	dw	44418
   908  00FFC0  3E2B               	dw	15915
   909  00FFC2  3C0E               	dw	15374
   910  00FFC4  BDC3               	dw	48579
   911  00FFC6  D187               	dw	53639
   912  00FFC8  3D13               	dw	15635
   913  00FFCA  7841               	dw	30785
   914  00FFCC  BBD3               	dw	48083
   915  00FFCE                     __end_oflog@coeff:
   916                           	opt callstack 0
   917  00FFCE                     sin@coeff_a:
   918                           	opt callstack 0
   919  00FFCE  F3EC               	dw	62444
   920  00FFD0  484A               	dw	18506
   921  00FFD2  9535               	dw	38197
   922  00FFD4  C795               	dw	51093
   923  00FFD6  C117               	dw	49431
   924  00FFD8  45DC               	dw	17884
   925  00FFDA  DBFD               	dw	56317
   926  00FFDC  C36D               	dw	50029
   927  00FFDE  B372               	dw	45938
   928  00FFE0  4033               	dw	16435
   929  00FFE2                     __end_ofsin@coeff_a:
   930                           	opt callstack 0
   931  00FFE2                     sin@coeff_b:
   932                           	opt callstack 0
   933  00FFE2  342B               	dw	13355
   934  00FFE4  4801               	dw	18433
   935  00FFE6  9D7F               	dw	40319
   936  00FFE8  45B0               	dw	17840
   937  00FFEA  FFE7               	dw	65511
   938  00FFEC  42D9               	dw	17113
   939  00FFEE  0000               	dw	0
   940  00FFF0  3F80               	dw	16256
   941  00FFF2                     __end_ofsin@coeff_b:
   942                           	opt callstack 0
   943  00FFF2                     _FskSyncWordBuff:
   944                           	opt callstack 0
   945  00FFF2  C1                 	db	193
   946  00FFF3  94                 	db	148
   947  00FFF4  C1                 	db	193
   948  00FFF5                     __end_of_FskSyncWordBuff:
   949                           	opt callstack 0
   950  00FFF5                     STR_1:
   951  00FFF5  41                 	db	65	;'A'
   952  00FFF6  00                 	db	0
   953  00FFF7                     STR_2:
   954  00FFF7  42                 	db	66	;'B'
   955  00FFF8  00                 	db	0
   956  00FFF9                     STR_5:
   957  00FFF9  43                 	db	67	;'C'
   958  00FFFA  00                 	db	0
   959  00FFFB                     STR_4:
   960  00FFFB  4C                 	db	76	;'L'
   961  00FFFC  00                 	db	0
   962  00FFFD                     STR_3:
   963  00FFFD  54                 	db	84	;'T'
   964  00FFFE  00                 	db	0
   965  0000                     
   966                           ; #config settings
   967  00FFFF  00                 	db	0	; dummy byte at the end
   968  0000                     
   969                           	psect	nvBANK1
   970  0001DD                     __pnvBANK1:
   971                           	opt callstack 0
   972  0001DD                     _TMR5_InterruptHandler:
   973                           	opt callstack 0
   974  0001DD                     	ds	2
   975  0001DF                     _timer5ReloadVal:
   976                           	opt callstack 0
   977  0001DF                     	ds	2
   978  0001E1                     _TMR3_InterruptHandler:
   979                           	opt callstack 0
   980  0001E1                     	ds	2
   981  0001E3                     _timer3ReloadVal:
   982                           	opt callstack 0
   983  0001E3                     	ds	2
   984  0001E5                     _TMR1_InterruptHandler:
   985                           	opt callstack 0
   986  0001E5                     	ds	2
   987  0001E7                     _timer1ReloadVal:
   988                           	opt callstack 0
   989  0001E7                     	ds	2
   990  0001E9                     _IOCB4_InterruptHandler:
   991                           	opt callstack 0
   992  0001E9                     	ds	2
   993  0001EB                     _INT2_InterruptHandler:
   994                           	opt callstack 0
   995  0001EB                     	ds	2
   996  0001ED                     _INT1_InterruptHandler:
   997                           	opt callstack 0
   998  0001ED                     	ds	2
   999                           
  1000                           	psect	nvBANK2
  1001  0002FA                     __pnvBANK2:
  1002                           	opt callstack 0
  1003  0002FA                     _EUSART2_ErrorHandler:
  1004                           	opt callstack 0
  1005  0002FA                     	ds	2
  1006  0002FC                     _EUSART2_OverrunErrorHandler:
  1007                           	opt callstack 0
  1008  0002FC                     	ds	2
  1009  0002FE                     _EUSART2_FramingErrorHandler:
  1010                           	opt callstack 0
  1011  0002FE                     	ds	2
  1012  0000                     _TMR5	set	3919
  1013  0000                     _T5GCONbits	set	3917
  1014  0000                     _T5CONbits	set	3918
  1015  0000                     _T5CON	set	3918
  1016  0000                     _TMR5L	set	3919
  1017  0000                     _TMR5H	set	3920
  1018  0000                     _T5GCON	set	3917
  1019  0000                     _ANSELA	set	3896
  1020  0000                     _ANSELE	set	3900
  1021  0000                     _ANSELB	set	3897
  1022  0000                     _ANSELC	set	3898
  1023  0000                     _ANSELD	set	3899
  1024  0000                     _TMR3	set	4018
  1025  0000                     _TMR1	set	4046
  1026  0000                     _WDTCON	set	4049
  1027  0000                     _PORTC	set	3970
  1028  0000                     _PORTD	set	3971
  1029  0000                     _PORTE	set	3972
  1030  0000                     _PORTA	set	3968
  1031  0000                     _IPR5bits	set	3967
  1032  0000                     _T3GCONbits	set	4020
  1033  0000                     _T3CONbits	set	4017
  1034  0000                     _T3CON	set	4017
  1035  0000                     _IPR2bits	set	4002
  1036  0000                     _TMR3L	set	4018
  1037  0000                     _TMR3H	set	4019
  1038  0000                     _T3GCON	set	4020
  1039  0000                     _TXREG2	set	3955
  1040  0000                     _RCREG2	set	3956
  1041  0000                     _RCSTA2bits	set	3953
  1042  0000                     _TXSTA2bits	set	3954
  1043  0000                     _PIR3bits	set	4004
  1044  0000                     _SPBRGH2	set	3958
  1045  0000                     _SPBRG2	set	3957
  1046  0000                     _TXSTA2	set	3954
  1047  0000                     _RCSTA2	set	3953
  1048  0000                     _BAUDCON2	set	3952
  1049  0000                     _ADCON0bits	set	4034
  1050  0000                     _ADRESH	set	4036
  1051  0000                     _ADRESL	set	4035
  1052  0000                     _ADCON2	set	4032
  1053  0000                     _ADCON1	set	4033
  1054  0000                     _ADCON0	set	4034
  1055  0000                     _T1GCONbits	set	4044
  1056  0000                     _T1CONbits	set	4045
  1057  0000                     _T1CON	set	4045
  1058  0000                     _IPR1bits	set	3999
  1059  0000                     _TMR1L	set	4046
  1060  0000                     _TMR1H	set	4047
  1061  0000                     _T1GCON	set	4044
  1062  0000                     _IOCBbits	set	3938
  1063  0000                     _WPUB	set	3937
  1064  0000                     _TRISD	set	3989
  1065  0000                     _TRISC	set	3988
  1066  0000                     _TRISB	set	3987
  1067  0000                     _TRISA	set	3986
  1068  0000                     _TRISE	set	3990
  1069  0000                     _LATC	set	3979
  1070  0000                     _LATB	set	3978
  1071  0000                     _LATA	set	3977
  1072  0000                     _LATD	set	3980
  1073  0000                     _LATE	set	3981
  1074  0000                     _OSCTUNE	set	3995
  1075  0000                     _OSCCON2	set	4050
  1076  0000                     _OSCCON	set	4051
  1077  0000                     _PIR2bits	set	4001
  1078  0000                     _PIE2bits	set	4000
  1079  0000                     _PIR5bits	set	3966
  1080  0000                     _PIE5bits	set	3965
  1081  0000                     _PIR1bits	set	3998
  1082  0000                     _PIE1bits	set	3997
  1083  0000                     _RCONbits	set	4048
  1084  0000                     _INTCON2bits	set	4081
  1085  0000                     _INTCON3bits	set	4080
  1086  0000                     _SSP2STATbits	set	3949
  1087  0000                     _SSP2BUF	set	3951
  1088  0000                     _SSP2CON1bits	set	3948
  1089  0000                     _SSP2ADD	set	3950
  1090  0000                     _SSP2CON1	set	3948
  1091  0000                     _SSP2STAT	set	3949
  1092  0000                     _PORTBbits	set	3969
  1093  0000                     _INTCONbits	set	4082
  1094  0000                     _LATD3	set	31843
  1095  0000                     _LATC2	set	31834
  1096  0000                     _TRISC2	set	31906
  1097                           
  1098                           	psect	cinit
  1099  00783E                     __pcinit:
  1100                           	opt callstack 0
  1101  00783E                     start_initialization:
  1102                           	opt callstack 0
  1103  00783E                     __initialization:
  1104                           	opt callstack 0
  1105                           
  1106                           ; Initialize objects allocated to BANK3 (40 bytes)
  1107                           ; load TBLPTR registers with __pidataBANK3
  1108  00783E  0E96               	movlw	low __pidataBANK3
  1109  007840  6EF6               	movwf	tblptrl,c
  1110  007842  0EA0               	movlw	high __pidataBANK3
  1111  007844  6EF7               	movwf	tblptrh,c
  1112  007846  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1113  007848  6EF8               	movwf	tblptru,c
  1114  00784A  EE03  F0D0         	lfsr	0,__pdataBANK3
  1115  00784E  EE20 F028          	lfsr	2,40
  1116  007852                     copy_data0:
  1117  007852  0009               	tblrd		*+
  1118  007854  CFF5 FFEE          	movff	tablat,postinc0
  1119  007858  50DD               	movf	postdec2,w,c
  1120  00785A  50D9               	movf	fsr2l,w,c
  1121  00785C  E1FA               	bnz	copy_data0
  1122                           
  1123                           ; Initialize objects allocated to BANK1 (12 bytes)
  1124                           ; load TBLPTR registers with __pidataBANK1
  1125  00785E  0EBA               	movlw	low __pidataBANK1
  1126  007860  6EF6               	movwf	tblptrl,c
  1127  007862  0EA6               	movlw	high __pidataBANK1
  1128  007864  6EF7               	movwf	tblptrh,c
  1129  007866  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1130  007868  6EF8               	movwf	tblptru,c
  1131  00786A  EE01  F0EF         	lfsr	0,__pdataBANK1
  1132  00786E  EE20 F00C          	lfsr	2,12
  1133  007872                     copy_data1:
  1134  007872  0009               	tblrd		*+
  1135  007874  CFF5 FFEE          	movff	tablat,postinc0
  1136  007878  50DD               	movf	postdec2,w,c
  1137  00787A  50D9               	movf	fsr2l,w,c
  1138  00787C  E1FA               	bnz	copy_data1
  1139                           
  1140                           ; Initialize objects allocated to COMRAM (4 bytes)
  1141                           ; load TBLPTR registers with __pidataCOMRAM
  1142  00787E  0EFE               	movlw	low __pidataCOMRAM
  1143  007880  6EF6               	movwf	tblptrl,c
  1144  007882  0EA7               	movlw	high __pidataCOMRAM
  1145  007884  6EF7               	movwf	tblptrh,c
  1146  007886  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1147  007888  6EF8               	movwf	tblptru,c
  1148  00788A  EE00  F052         	lfsr	0,__pdataCOMRAM
  1149  00788E  EE20 F004          	lfsr	2,4
  1150  007892                     copy_data2:
  1151  007892  0009               	tblrd		*+
  1152  007894  CFF5 FFEE          	movff	tablat,postinc0
  1153  007898  50DD               	movf	postdec2,w,c
  1154  00789A  50D9               	movf	fsr2l,w,c
  1155  00789C  E1FA               	bnz	copy_data2
  1156                           
  1157                           ; Clear objects allocated to BIGRAM (942 bytes)
  1158  00789E  EE05  F028         	lfsr	0,__pbssBIGRAM
  1159  0078A2  EE23 F0AE          	lfsr	2,942
  1160  0078A6                     clear_0:
  1161  0078A6  6AEE               	clrf	postinc0,c
  1162  0078A8  50DD               	movf	postdec2,w,c
  1163  0078AA  50D9               	movf	fsr2l,w,c
  1164  0078AC  E1FC               	bnz	clear_0
  1165  0078AE  50DA               	movf	fsr2h,w,c
  1166  0078B0  E1FA               	bnz	clear_0
  1167                           
  1168                           ; Clear objects allocated to BANK5 (40 bytes)
  1169  0078B2  EE05  F000         	lfsr	0,__pbssBANK5
  1170  0078B6  0E28               	movlw	40
  1171  0078B8                     clear_1:
  1172  0078B8  6AEE               	clrf	postinc0,c
  1173  0078BA  06E8               	decf	wreg,f,c
  1174  0078BC  E1FD               	bnz	clear_1
  1175                           
  1176                           ; Clear objects allocated to BANK4 (244 bytes)
  1177  0078BE  EE04  F000         	lfsr	0,__pbssBANK4
  1178  0078C2  0EF4               	movlw	244
  1179  0078C4                     clear_2:
  1180  0078C4  6AEE               	clrf	postinc0,c
  1181  0078C6  06E8               	decf	wreg,f,c
  1182  0078C8  E1FD               	bnz	clear_2
  1183                           
  1184                           ; Clear objects allocated to BANK3 (208 bytes)
  1185  0078CA  EE03  F000         	lfsr	0,__pbssBANK3
  1186  0078CE  0ED0               	movlw	208
  1187  0078D0                     clear_3:
  1188  0078D0  6AEE               	clrf	postinc0,c
  1189  0078D2  06E8               	decf	wreg,f,c
  1190  0078D4  E1FD               	bnz	clear_3
  1191                           
  1192                           ; Clear objects allocated to BANK2 (250 bytes)
  1193  0078D6  EE02  F000         	lfsr	0,__pbssBANK2
  1194  0078DA  0EFA               	movlw	250
  1195  0078DC                     clear_4:
  1196  0078DC  6AEE               	clrf	postinc0,c
  1197  0078DE  06E8               	decf	wreg,f,c
  1198  0078E0  E1FD               	bnz	clear_4
  1199                           
  1200                           ; Clear objects allocated to BANK1 (116 bytes)
  1201  0078E2  EE01  F000         	lfsr	0,__pbssBANK1
  1202  0078E6  0E74               	movlw	116
  1203  0078E8                     clear_5:
  1204  0078E8  6AEE               	clrf	postinc0,c
  1205  0078EA  06E8               	decf	wreg,f,c
  1206  0078EC  E1FD               	bnz	clear_5
  1207                           
  1208                           ; Clear objects allocated to COMRAM (20 bytes)
  1209  0078EE  EE00  F032         	lfsr	0,__pbssCOMRAM
  1210  0078F2  0E14               	movlw	20
  1211  0078F4                     clear_6:
  1212  0078F4  6AEE               	clrf	postinc0,c
  1213  0078F6  06E8               	decf	wreg,f,c
  1214  0078F8  E1FD               	bnz	clear_6
  1215  0078FA                     end_of_initialization:
  1216                           	opt callstack 0
  1217  0078FA                     __end_of__initialization:
  1218                           	opt callstack 0
  1219  0078FA  0100               	movlb	0
  1220  0078FC  EF5A  F033         	goto	_main	;jump to C main() function
  1221                           
  1222                           	psect	bssCOMRAM
  1223  000032                     __pbssCOMRAM:
  1224                           	opt callstack 0
  1225  000032                     _ticksAccounted:
  1226                           	opt callstack 0
  1227  000032                     	ds	4
  1228  000036                     _ticksAdded:
  1229                           	opt callstack 0
  1230  000036                     	ds	4
  1231  00003A                     TMR_SwapTimer@oldVal:
  1232                           	opt callstack 0
  1233  00003A                     	ds	2
  1234  00003C                     TMR_GetDeltaTime@tmrVal:
  1235                           	opt callstack 0
  1236  00003C                     	ds	2
  1237  00003E                     _reloadVal:
  1238                           	opt callstack 0
  1239  00003E                     	ds	2
  1240  000040                     I2C@flag:
  1241                           	opt callstack 0
  1242  000040                     	ds	1
  1243  000041                     _flag:
  1244                           	opt callstack 0
  1245  000041                     	ds	1
  1246  000042                     __rcon:
  1247                           	opt callstack 0
  1248  000042                     	ds	1
  1249  000043                     __roundCounter:
  1250                           	opt callstack 0
  1251  000043                     	ds	1
  1252  000044                     _timerOverflow:
  1253                           	opt callstack 0
  1254  000044                     	ds	1
  1255  000045                     _dioStatus:
  1256                           	opt callstack 0
  1257  000045                     	ds	1
  1258                           
  1259                           	psect	dataCOMRAM
  1260  000052                     __pdataCOMRAM:
  1261                           	opt callstack 0
  1262  000052                     _ticksToScheduledInterrupt:
  1263                           	opt callstack 0
  1264  000052                     	ds	4
  1265                           
  1266                           	psect	bssBANK1
  1267  000100                     __pbssBANK1:
  1268                           	opt callstack 0
  1269  000100                     _timer:
  1270                           	opt callstack 0
  1271  000100                     	ds	6
  1272  000106                     _upCnt:
  1273                           	opt callstack 0
  1274  000106                     	ds	4
  1275  00010A                     _value:
  1276                           	opt callstack 0
  1277  00010A                     	ds	4
  1278  00010E                     _rxPayload:
  1279                           	opt callstack 0
  1280  00010E                     	ds	4
  1281  000112                     TMR_GetDeltaTime@retVal:
  1282                           	opt callstack 0
  1283  000112                     	ds	4
  1284  000116                     _errno:
  1285                           	opt callstack 0
  1286  000116                     	ds	2
  1287  000118                     _result:
  1288                           	opt callstack 0
  1289  000118                     	ds	2
  1290  00011A                     _sCounter:
  1291                           	opt callstack 0
  1292  00011A                     	ds	2
  1293  00011C                     _msCounter:
  1294                           	opt callstack 0
  1295  00011C                     	ds	2
  1296  00011E                     TMR_SwapTimer@retVal:
  1297                           	opt callstack 0
  1298  00011E                     	ds	2
  1299  000120                     _nACK:
  1300                           	opt callstack 0
  1301  000120                     	ds	1
  1302  000121                     _low:
  1303                           	opt callstack 0
  1304  000121                     	ds	1
  1305  000122                     _high:
  1306                           	opt callstack 0
  1307  000122                     	ds	1
  1308  000123                     _clip:
  1309                           	opt callstack 0
  1310  000123                     	ds	1
  1311  000124                     _firstSend:
  1312                           	opt callstack 0
  1313  000124                     	ds	1
  1314  000125                     _joined:
  1315                           	opt callstack 0
  1316  000125                     	ds	1
  1317  000126                     _eusart2RxLastError:
  1318                           	opt callstack 0
  1319  000126                     	ds	1
  1320  000127                     _localDioStatus:
  1321                           	opt callstack 0
  1322  000127                     	ds	1
  1323  000128                     _allocatedTimers:
  1324                           	opt callstack 0
  1325  000128                     	ds	1
  1326  000129                     _RadioConfiguration:
  1327                           	opt callstack 0
  1328  000129                     	ds	54
  1329  00015F                     _aesBuffer:
  1330                           	opt callstack 0
  1331  00015F                     	ds	16
  1332  00016F                     _stringValue:
  1333                           	opt callstack 0
  1334  00016F                     	ds	5
  1335                           
  1336                           	psect	dataBANK1
  1337  0001EF                     __pdataBANK1:
  1338                           	opt callstack 0
  1339  0001EF                     _randx:
  1340                           	opt callstack 0
  1341  0001EF                     	ds	4
  1342  0001F3                     _pulseSignal:
  1343                           	opt callstack 0
  1344  0001F3                     	ds	4
  1345  0001F7                     _address:
  1346                           	opt callstack 0
  1347  0001F7                     	ds	1
  1348  0001F8                     _sensorsStringLength:
  1349                           	opt callstack 0
  1350  0001F8                     	ds	1
  1351  0001F9                     _stringValueLength:
  1352                           	opt callstack 0
  1353  0001F9                     	ds	1
  1354  0001FA                     _stringLength:
  1355                           	opt callstack 0
  1356  0001FA                     	ds	1
  1357                           
  1358                           	psect	bssBANK2
  1359  000200                     __pbssBANK2:
  1360                           	opt callstack 0
  1361  000200                     _string:
  1362                           	opt callstack 0
  1363  000200                     	ds	5
  1364  000205                     _loRa:
  1365                           	opt callstack 0
  1366  000205                     	ds	245
  1367                           
  1368                           	psect	bssBANK3
  1369  000300                     __pbssBANK3:
  1370                           	opt callstack 0
  1371  000300                     _swTimers:
  1372                           	opt callstack 0
  1373  000300                     	ds	160
  1374  0003A0                     _sensorsString:
  1375                           	opt callstack 0
  1376  0003A0                     	ds	40
  1377  0003C8                     _appEui:
  1378                           	opt callstack 0
  1379  0003C8                     	ds	8
  1380                           
  1381                           	psect	dataBANK3
  1382  0003D0                     __pdataBANK3:
  1383                           	opt callstack 0
  1384  0003D0                     GenerateSubkey@F5972:
  1385                           	opt callstack 0
  1386  0003D0                     	ds	16
  1387  0003E0                     _appKey:
  1388                           	opt callstack 0
  1389  0003E0                     	ds	16
  1390  0003F0                     _deviceEui:
  1391                           	opt callstack 0
  1392  0003F0                     	ds	8
  1393                           
  1394                           	psect	bssBANK4
  1395  000400                     __pbssBANK4:
  1396                           	opt callstack 0
  1397  000400                     _sinSignal:
  1398                           	opt callstack 0
  1399  000400                     	ds	20
  1400  000414                     _Channels:
  1401                           	opt callstack 0
  1402  000414                     	ds	224
  1403                           
  1404                           	psect	bssBANK5
  1405  000500                     __pbssBANK5:
  1406                           	opt callstack 0
  1407  000500                     _clearString:
  1408                           	opt callstack 0
  1409  000500                     	ds	40
  1410                           
  1411                           	psect	bssBIGRAM
  1412  000528                     __pbssBIGRAM:
  1413                           	opt callstack 0
  1414  000528                     _capValues:
  1415                           	opt callstack 0
  1416  000528                     	ds	400
  1417  0006B8                     _macBuffer:
  1418                           	opt callstack 0
  1419  0006B8                     	ds	271
  1420  0007C7                     _radioBuffer:
  1421                           	opt callstack 0
  1422  0007C7                     	ds	271
  1423                           
  1424                           	psect	cstackBANK1
  1425  000174                     __pcstackBANK1:
  1426                           	opt callstack 0
  1427  000174                     AESCmac@k2:
  1428                           	opt callstack 0
  1429                           
  1430                           ; 16 bytes @ 0x0
  1431  000174                     	ds	16
  1432  000184                     AESCmac@k1:
  1433                           	opt callstack 0
  1434                           
  1435                           ; 16 bytes @ 0x10
  1436  000184                     	ds	16
  1437  000194                     AESCmac@mLast:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 16 bytes @ 0x20
  1441  000194                     	ds	16
  1442  0001A4                     AESCmac@padded:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 16 bytes @ 0x30
  1446  0001A4                     	ds	16
  1447  0001B4                     AESCmac@y:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 16 bytes @ 0x40
  1451  0001B4                     	ds	16
  1452  0001C4                     AESCmac@x:
  1453                           	opt callstack 0
  1454                           
  1455                           ; 16 bytes @ 0x50
  1456  0001C4                     	ds	16
  1457  0001D4                     AESCmac@ptr:
  1458                           	opt callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x60
  1461  0001D4                     	ds	2
  1462  0001D6                     AESCmac@flag:
  1463                           	opt callstack 0
  1464                           
  1465                           ; 1 bytes @ 0x62
  1466  0001D6                     	ds	1
  1467  0001D7                     AESCmac@n:
  1468                           	opt callstack 0
  1469                           
  1470                           ; 1 bytes @ 0x63
  1471  0001D7                     	ds	1
  1472  0001D8                     AESCmac@j:
  1473                           	opt callstack 0
  1474                           
  1475                           ; 1 bytes @ 0x64
  1476  0001D8                     	ds	1
  1477  0001D9                     AESCmac@i:
  1478                           	opt callstack 0
  1479                           
  1480                           ; 1 bytes @ 0x65
  1481  0001D9                     	ds	1
  1482  0001DA                     LORAWAN_RxDone@buffer:
  1483                           	opt callstack 0
  1484                           
  1485                           ; 2 bytes @ 0x66
  1486  0001DA                     	ds	2
  1487  0001DC                     LORAWAN_RxDone@bufferLength:
  1488                           	opt callstack 0
  1489                           
  1490                           ; 1 bytes @ 0x68
  1491  0001DC                     	ds	1
  1492                           
  1493                           	psect	cstackBANK0
  1494  000060                     __pcstackBANK0:
  1495                           	opt callstack 0
  1496  000060                     ??_UpdateMinMaxChDataRate:
  1497  000060                     ??_FindSmallestDataRate:
  1498  000060                     ??_CountfOptsLength:
  1499  000060                     ??_i2c_sdaWrite:
  1500  000060                     ?_TMR1_ReadTimer:
  1501                           	opt callstack 0
  1502  000060                     ?_ExecuteDutyCycle:
  1503                           	opt callstack 0
  1504  000060                     ?_ExecuteDevStatus:
  1505                           	opt callstack 0
  1506  000060                     ?_ExecuteLinkCheck:
  1507                           	opt callstack 0
  1508  000060                     ?_ADC_GetConversion:
  1509                           	opt callstack 0
  1510  000060                     ?___wmul:
  1511                           	opt callstack 0
  1512  000060                     ?___awdiv:
  1513                           	opt callstack 0
  1514  000060                     ?___lwdiv:
  1515                           	opt callstack 0
  1516  000060                     ?___ltdiv:
  1517                           	opt callstack 0
  1518  000060                     ?_GetRx1Freq:
  1519                           	opt callstack 0
  1520  000060                     ?_LORAWAN_GetUplinkCounter:
  1521                           	opt callstack 0
  1522  000060                     ?_LORAWAN_GetStatus:
  1523                           	opt callstack 0
  1524  000060                     ?___lldiv:
  1525                           	opt callstack 0
  1526  000060                     ?___fltol:
  1527                           	opt callstack 0
  1528  000060                     ?___llmod:
  1529                           	opt callstack 0
  1530  000060                     ?___xxtofl:
  1531                           	opt callstack 0
  1532  000060                     INTERRUPT_GetDioStatus@a:
  1533                           	opt callstack 0
  1534  000060                     HALResetPinOutputValue@value:
  1535                           	opt callstack 0
  1536  000060                     SwTimerCreate@retVal:
  1537                           	opt callstack 0
  1538  000060                     SwTimerIsRunning@timerId:
  1539                           	opt callstack 0
  1540  000060                     SwTimerStop@timerId:
  1541                           	opt callstack 0
  1542  000060                     SwClearAllTimers@i:
  1543                           	opt callstack 0
  1544  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1545                           	opt callstack 0
  1546  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1547                           	opt callstack 0
  1548  000060                     RADIO_SetOutputPower@power:
  1549                           	opt callstack 0
  1550  000060                     RADIO_SetCRC@crc:
  1551                           	opt callstack 0
  1552  000060                     RADIO_SetIQInverted@iqInverted:
  1553                           	opt callstack 0
  1554  000060                     RADIO_SetBandwidth@bandwidth:
  1555                           	opt callstack 0
  1556  000060                     RADIO_SetModulation@modulation:
  1557                           	opt callstack 0
  1558  000060                     ValidateDataRate@dataRate:
  1559                           	opt callstack 0
  1560  000060                     ValidateTxPower@result:
  1561                           	opt callstack 0
  1562  000060                     UpdateDLSettings@dlRx1DrOffset:
  1563                           	opt callstack 0
  1564  000060                     UpdateDataRange@dataRangeNew:
  1565                           	opt callstack 0
  1566  000060                     UpdateChannelIdStatus@statusNew:
  1567                           	opt callstack 0
  1568  000060                     ValidateRxOffset@rxOffset:
  1569                           	opt callstack 0
  1570  000060                     ValidateChannelId@allowedForDefaultChannels:
  1571                           	opt callstack 0
  1572  000060                     ValidateChannelMaskCntl@result:
  1573                           	opt callstack 0
  1574  000060                     UpdateCurrentDataRate@valueNew:
  1575                           	opt callstack 0
  1576  000060                     UpdateTxPower@txPowerNew:
  1577                           	opt callstack 0
  1578  000060                     UpdateJoinInProgress@state:
  1579                           	opt callstack 0
  1580  000060                     SPI2_Exchange8bit@data:
  1581                           	opt callstack 0
  1582  000060                     GPIOAnalogMode@mode:
  1583                           	opt callstack 0
  1584  000060                     GPIOSet@mode:
  1585                           	opt callstack 0
  1586  000060                     GPIODigitalWrite@digOut:
  1587                           	opt callstack 0
  1588  000060                     GPIODigitalRead@GPIO:
  1589                           	opt callstack 0
  1590  000060                     ___abdiv@divisor:
  1591                           	opt callstack 0
  1592  000060                     FillSubKey@source:
  1593                           	opt callstack 0
  1594  000060                     SwTimerSetCallback@callback:
  1595                           	opt callstack 0
  1596  000060                     EncKeySchedule@key:
  1597                           	opt callstack 0
  1598  000060                     EncodeShiftRow@stateTable:
  1599                           	opt callstack 0
  1600  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1601                           	opt callstack 0
  1602  000060                     ExecuteDutyCycle@ptr:
  1603                           	opt callstack 0
  1604  000060                     ExecuteDevStatus@ptr:
  1605                           	opt callstack 0
  1606  000060                     UpdateDutyCycle@dutyCycleNew:
  1607                           	opt callstack 0
  1608  000060                     ValidateChannelMask@channelMask:
  1609                           	opt callstack 0
  1610  000060                     ExecuteLinkCheck@ptr:
  1611                           	opt callstack 0
  1612  000060                     IncludeMacCommandsResponse@macBuffer:
  1613                           	opt callstack 0
  1614  000060                     CheckFlags@hdr:
  1615                           	opt callstack 0
  1616  000060                     CheckMcastFlags@hdr:
  1617                           	opt callstack 0
  1618  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1619                           	opt callstack 0
  1620  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1621                           	opt callstack 0
  1622  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1623                           	opt callstack 0
  1624  000060                     TMR1_WriteTimer@timerVal:
  1625                           	opt callstack 0
  1626  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1627                           	opt callstack 0
  1628  000060                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1629                           	opt callstack 0
  1630  000060                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1631                           	opt callstack 0
  1632  000060                     EUSART2_SetErrorHandler@interruptHandler:
  1633                           	opt callstack 0
  1634  000060                     RxData@pData:
  1635                           	opt callstack 0
  1636  000060                     TMR3_SetInterruptHandler@InterruptHandler:
  1637                           	opt callstack 0
  1638  000060                     TMR5_SetInterruptHandler@InterruptHandler:
  1639                           	opt callstack 0
  1640  000060                     rn2483_delaysec@length:
  1641                           	opt callstack 0
  1642  000060                     adaptString@string:
  1643                           	opt callstack 0
  1644  000060                     pointAddition@element:
  1645                           	opt callstack 0
  1646  000060                     i2c_usdelay@time:
  1647                           	opt callstack 0
  1648  000060                     ___wmul@multiplier:
  1649                           	opt callstack 0
  1650  000060                     ___awdiv@dividend:
  1651                           	opt callstack 0
  1652  000060                     ___lwdiv@dividend:
  1653                           	opt callstack 0
  1654  000060                     memcpy@d1:
  1655                           	opt callstack 0
  1656  000060                     memset@p1:
  1657                           	opt callstack 0
  1658  000060                     strncat@to:
  1659                           	opt callstack 0
  1660  000060                     ___ltdiv@dividend:
  1661                           	opt callstack 0
  1662  000060                     SystemBlockingWaitMs@ms:
  1663                           	opt callstack 0
  1664  000060                     RADIO_SetChannelFrequency@frequency:
  1665                           	opt callstack 0
  1666  000060                     ValidateFrequency@frequencyNew:
  1667                           	opt callstack 0
  1668  000060                     UpdateFrequency@frequencyNew:
  1669                           	opt callstack 0
  1670  000060                     LORAWAN_SetUplinkCounter@ctr:
  1671                           	opt callstack 0
  1672  000060                     UpdateReceiveWindow2Parameters@frequency:
  1673                           	opt callstack 0
  1674  000060                     ___lldiv@dividend:
  1675                           	opt callstack 0
  1676  000060                     ___fleq@ff1:
  1677                           	opt callstack 0
  1678  000060                     ___fltol@f1:
  1679                           	opt callstack 0
  1680  000060                     ___llmod@dividend:
  1681                           	opt callstack 0
  1682  000060                     ___xxtofl@val:
  1683                           	opt callstack 0
  1684                           
  1685                           ; 4 bytes @ 0x0
  1686  000060                     	ds	1
  1687  000061                     ??_UpdateDataRange:
  1688  000061                     ??_UpdateChannelIdStatus:
  1689  000061                     ??___abdiv:
  1690  000061                     HALSPISend@data:
  1691                           	opt callstack 0
  1692  000061                     SwTimerIsRunning@isRunning:
  1693                           	opt callstack 0
  1694  000061                     ValidateDataRate@result:
  1695                           	opt callstack 0
  1696  000061                     ValidateTxPower@txPowerNew:
  1697                           	opt callstack 0
  1698  000061                     UpdateDLSettings@dlRx2Dr:
  1699                           	opt callstack 0
  1700  000061                     ValidateRxOffset@result:
  1701                           	opt callstack 0
  1702  000061                     ValidateChannelId@result:
  1703                           	opt callstack 0
  1704  000061                     ValidateChannelMaskCntl@channelMaskCntl:
  1705                           	opt callstack 0
  1706  000061                     UpdateMinMaxChDataRate@i:
  1707                           	opt callstack 0
  1708  000061                     FindSmallestDataRate@found:
  1709                           	opt callstack 0
  1710  000061                     GPIOAnalogMode@GPIO:
  1711                           	opt callstack 0
  1712  000061                     GPIOSet@GPIO:
  1713                           	opt callstack 0
  1714  000061                     GPIODigitalWrite@GPIO:
  1715                           	opt callstack 0
  1716                           
  1717                           ; 1 bytes @ 0x1
  1718  000061                     	ds	1
  1719  000062                     ??_TMR1_ReadTimer:
  1720  000062                     ??_EncKeySchedule:
  1721  000062                     ??_ValidateChannelMask:
  1722  000062                     ??_ExecuteDutyCycle:
  1723  000062                     ??_pointAddition:
  1724  000062                     ??_ADC_GetConversion:
  1725  000062                     ??_rn2483_delaysec:
  1726  000062                     SwTimerSetCallback@callbackParameter:
  1727                           	opt callstack 0
  1728  000062                     EncodeShiftRow@temp:
  1729                           	opt callstack 0
  1730  000062                     RADIO_RegisterWrite@value:
  1731                           	opt callstack 0
  1732  000062                     RADIO_RegisterRead@reg:
  1733                           	opt callstack 0
  1734  000062                     UpdateDataRange@channelId:
  1735                           	opt callstack 0
  1736  000062                     UpdateChannelIdStatus@channelId:
  1737                           	opt callstack 0
  1738  000062                     ValidateDataRange@result:
  1739                           	opt callstack 0
  1740  000062                     ValidateChannelId@channelId:
  1741                           	opt callstack 0
  1742  000062                     UpdateDutyCycle@channelId:
  1743                           	opt callstack 0
  1744  000062                     FindSmallestDataRate@i:
  1745                           	opt callstack 0
  1746  000062                     RxData@dataLength:
  1747                           	opt callstack 0
  1748  000062                     RxJoinResponse@status:
  1749                           	opt callstack 0
  1750  000062                     adaptString@length:
  1751                           	opt callstack 0
  1752  000062                     i2c_sdaWrite@data:
  1753                           	opt callstack 0
  1754  000062                     FillSubKey@key:
  1755                           	opt callstack 0
  1756  000062                     IncludeMacCommandsResponse@pBufferIndex:
  1757                           	opt callstack 0
  1758  000062                     i2c_usdelay@i:
  1759                           	opt callstack 0
  1760  000062                     ___wmul@multiplicand:
  1761                           	opt callstack 0
  1762  000062                     ___awdiv@divisor:
  1763                           	opt callstack 0
  1764  000062                     ___lwdiv@divisor:
  1765                           	opt callstack 0
  1766  000062                     memcpy@s1:
  1767                           	opt callstack 0
  1768  000062                     memset@c:
  1769                           	opt callstack 0
  1770  000062                     strncat@from:
  1771                           	opt callstack 0
  1772                           
  1773                           ; 2 bytes @ 0x2
  1774  000062                     	ds	1
  1775  000063                     ??_adaptString:
  1776  000063                     SwTimerSetCallback@timerId:
  1777                           	opt callstack 0
  1778  000063                     RADIO_RegisterWrite@reg:
  1779                           	opt callstack 0
  1780  000063                     RADIO_RegisterRead@readValue:
  1781                           	opt callstack 0
  1782  000063                     UpdateDataRange@i:
  1783                           	opt callstack 0
  1784  000063                     UpdateChannelIdStatus@i:
  1785                           	opt callstack 0
  1786  000063                     ValidateDataRange@dataRangeNew:
  1787                           	opt callstack 0
  1788  000063                     FindSmallestDataRate@dataRate:
  1789                           	opt callstack 0
  1790  000063                     RxData@status:
  1791                           	opt callstack 0
  1792  000063                     i2c_sdaWrite@i:
  1793                           	opt callstack 0
  1794  000063                     ___abdiv@counter:
  1795                           	opt callstack 0
  1796  000063                     rn2483_delaysec@counter:
  1797                           	opt callstack 0
  1798  000063                     ___ltdiv@divisor:
  1799                           	opt callstack 0
  1800                           
  1801                           ; 3 bytes @ 0x3
  1802  000063                     	ds	1
  1803  000064                     ??_SystemBlockingWaitMs:
  1804  000064                     ??___fltol:
  1805  000064                     ??___xxtofl:
  1806  000064                     FillSubKey@size:
  1807                           	opt callstack 0
  1808  000064                     RADIO_WritePower@ocp:
  1809                           	opt callstack 0
  1810  000064                     RADIO_UnhandledInterrupt@modulation:
  1811                           	opt callstack 0
  1812  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  1813                           	opt callstack 0
  1814  000064                     ValidateFrequency@result:
  1815                           	opt callstack 0
  1816  000064                     ValidateDataRange@dataRateMax:
  1817                           	opt callstack 0
  1818  000064                     UpdateFrequency@channelId:
  1819                           	opt callstack 0
  1820  000064                     ValidateChannelMask@i:
  1821                           	opt callstack 0
  1822  000064                     UpdateReceiveWindow2Parameters@dataRate:
  1823                           	opt callstack 0
  1824  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  1825                           	opt callstack 0
  1826  000064                     pointAddition@d:
  1827                           	opt callstack 0
  1828  000064                     ___abdiv@sign:
  1829                           	opt callstack 0
  1830  000064                     ___awdiv@counter:
  1831                           	opt callstack 0
  1832  000064                     EnableChannels1@channelMask:
  1833                           	opt callstack 0
  1834  000064                     TMR1_ReadTimer@readVal:
  1835                           	opt callstack 0
  1836  000064                     i2c_sendData@data:
  1837                           	opt callstack 0
  1838  000064                     ___wmul@product:
  1839                           	opt callstack 0
  1840  000064                     ___lwdiv@quotient:
  1841                           	opt callstack 0
  1842  000064                     memcpy@n:
  1843                           	opt callstack 0
  1844  000064                     memset@n:
  1845                           	opt callstack 0
  1846  000064                     strncat@size:
  1847                           	opt callstack 0
  1848  000064                     LORAWAN_GetStatus@status:
  1849                           	opt callstack 0
  1850  000064                     ___lldiv@divisor:
  1851                           	opt callstack 0
  1852  000064                     ___fleq@ff2:
  1853                           	opt callstack 0
  1854  000064                     ___llmod@divisor:
  1855                           	opt callstack 0
  1856                           
  1857                           ; 4 bytes @ 0x4
  1858  000064                     	ds	1
  1859  000065                     ??_FillSubKey:
  1860  000065                     ??_IncludeMacCommandsResponse:
  1861  000065                     ??_RADIO_DIO3:
  1862  000065                     ??_RADIO_DIO4:
  1863  000065                     ??_RADIO_DIO5:
  1864  000065                     RADIO_WriteMode@newModulation:
  1865                           	opt callstack 0
  1866  000065                     RADIO_WritePower@paDac:
  1867                           	opt callstack 0
  1868  000065                     ExecuteDutyCycle@maxDCycle:
  1869                           	opt callstack 0
  1870  000065                     ValidateDataRange@dataRateMin:
  1871                           	opt callstack 0
  1872  000065                     adaptString@flag:
  1873                           	opt callstack 0
  1874  000065                     ___abdiv@quotient:
  1875                           	opt callstack 0
  1876  000065                     ___awdiv@sign:
  1877                           	opt callstack 0
  1878  000065                     _EncKeySchedule$521:
  1879                           	opt callstack 0
  1880  000065                     ADC_GetConversion@result:
  1881                           	opt callstack 0
  1882                           
  1883                           ; 2 bytes @ 0x5
  1884  000065                     	ds	1
  1885  000066                     ??_sinGenStart:
  1886  000066                     FillSubKey@carry:
  1887                           	opt callstack 0
  1888  000066                     RADIO_WriteMode@blocking:
  1889                           	opt callstack 0
  1890  000066                     RADIO_WritePower@power:
  1891                           	opt callstack 0
  1892  000066                     LORAWAN_SetChannelIdStatus@channelId:
  1893                           	opt callstack 0
  1894  000066                     EnableChannels1@channelMaskCntl:
  1895                           	opt callstack 0
  1896  000066                     UpdateReceiveDelays@delay:
  1897                           	opt callstack 0
  1898  000066                     CountfOptsLength@macCommandLength:
  1899                           	opt callstack 0
  1900  000066                     TMR1_ReadTimer@readValHigh:
  1901                           	opt callstack 0
  1902  000066                     adaptString@deleteElem:
  1903                           	opt callstack 0
  1904  000066                     ___abdiv@dividend:
  1905                           	opt callstack 0
  1906  000066                     ___lwdiv@counter:
  1907                           	opt callstack 0
  1908  000066                     memcpy@tmp:
  1909                           	opt callstack 0
  1910  000066                     ___awdiv@quotient:
  1911                           	opt callstack 0
  1912  000066                     memset@p:
  1913                           	opt callstack 0
  1914  000066                     strncat@cp:
  1915                           	opt callstack 0
  1916  000066                     ___ltdiv@quotient:
  1917                           	opt callstack 0
  1918                           
  1919                           ; 3 bytes @ 0x6
  1920  000066                     	ds	1
  1921  000067                     ?_ExecuteRxTimingSetup:
  1922                           	opt callstack 0
  1923  000067                     FillSubKey@i:
  1924                           	opt callstack 0
  1925  000067                     RADIO_WriteMode@currentModulation:
  1926                           	opt callstack 0
  1927  000067                     EnableChannels1@channelIndexMin:
  1928                           	opt callstack 0
  1929  000067                     CountfOptsLength@i:
  1930                           	opt callstack 0
  1931  000067                     TMR1_ReadTimer@readValLow:
  1932                           	opt callstack 0
  1933  000067                     ADC_GetConversion@channel:
  1934                           	opt callstack 0
  1935  000067                     adaptString@i:
  1936                           	opt callstack 0
  1937  000067                     AESEncode@block:
  1938                           	opt callstack 0
  1939  000067                     ExecuteRxTimingSetup@ptr:
  1940                           	opt callstack 0
  1941  000067                     memcpy@d:
  1942                           	opt callstack 0
  1943                           
  1944                           ; 2 bytes @ 0x7
  1945  000067                     	ds	1
  1946  000068                     ??_LORAWAN_GetMaxPayloadSize:
  1947  000068                     ??___fleq:
  1948  000068                     ?_TMR_SwapTimer:
  1949                           	opt callstack 0
  1950  000068                     ?_GPIOAnalogRead:
  1951                           	opt callstack 0
  1952  000068                     ?_TMR_GetDeltaTime:
  1953                           	opt callstack 0
  1954  000068                     RADIO_WriteMode@dioMapping:
  1955                           	opt callstack 0
  1956  000068                     EnableChannels1@channelIndexMax:
  1957                           	opt callstack 0
  1958  000068                     ___fltol@sign1:
  1959                           	opt callstack 0
  1960  000068                     ___llmod@counter:
  1961                           	opt callstack 0
  1962  000068                     ___xxtofl@sign:
  1963                           	opt callstack 0
  1964  000068                     TMR_SwapTimer@timerVal:
  1965                           	opt callstack 0
  1966  000068                     sinGenStart@i_5310:
  1967                           	opt callstack 0
  1968  000068                     isJoined@value:
  1969                           	opt callstack 0
  1970  000068                     ___lldiv@quotient:
  1971                           	opt callstack 0
  1972                           
  1973                           ; 4 bytes @ 0x8
  1974  000068                     	ds	1
  1975  000069                     ??_EnableChannels1:
  1976  000069                     RADIO_WriteMode@currentMode:
  1977                           	opt callstack 0
  1978  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1979                           	opt callstack 0
  1980  000069                     ExecuteRxTimingSetup@delay:
  1981                           	opt callstack 0
  1982  000069                     ___fltol@exp1:
  1983                           	opt callstack 0
  1984  000069                     ___ltdiv@counter:
  1985                           	opt callstack 0
  1986  000069                     ___xxtofl@exp:
  1987                           	opt callstack 0
  1988  000069                     AESEncode@key:
  1989                           	opt callstack 0
  1990  000069                     memcpy@s:
  1991                           	opt callstack 0
  1992                           
  1993                           ; 2 bytes @ 0x9
  1994  000069                     	ds	1
  1995  00006A                     ?_averageMeasure:
  1996                           	opt callstack 0
  1997  00006A                     RADIO_WriteMode@newMode:
  1998                           	opt callstack 0
  1999  00006A                     LORAWAN_GetMaxPayloadSize@result:
  2000                           	opt callstack 0
  2001  00006A                     GPIOAnalogRead@result:
  2002                           	opt callstack 0
  2003  00006A                     sinGenStart@d:
  2004                           	opt callstack 0
  2005  00006A                     TMR_OverrideRemaining@ticksRemaining:
  2006                           	opt callstack 0
  2007  00006A                     ___xxtofl@arg:
  2008                           	opt callstack 0
  2009                           
  2010                           ; 4 bytes @ 0xA
  2011  00006A                     	ds	1
  2012  00006B                     ??_AESEncode:
  2013  00006B                     ?_ExtractMic:
  2014                           	opt callstack 0
  2015  00006B                     RADIO_WriteMode@opMode:
  2016                           	opt callstack 0
  2017  00006B                     InitDefault868Channels@i:
  2018                           	opt callstack 0
  2019  00006B                     InitDefault433Channels@i:
  2020                           	opt callstack 0
  2021  00006B                     EnableChannels1@i:
  2022                           	opt callstack 0
  2023  00006B                     RADIO_SetFSKSyncWord@syncWord:
  2024                           	opt callstack 0
  2025  00006B                     LORAWAN_SetDeviceEui@deviceEuiNew:
  2026                           	opt callstack 0
  2027  00006B                     LORAWAN_SetApplicationEui@applicationEuiNew:
  2028                           	opt callstack 0
  2029  00006B                     LORAWAN_SetApplicationKey@applicationKeyNew:
  2030                           	opt callstack 0
  2031  00006B                     PrepareSessionKeys@sessionKey:
  2032                           	opt callstack 0
  2033  00006B                     ExtractMic@buffer:
  2034                           	opt callstack 0
  2035  00006B                     AssembleEncryptionBlock@frameCounter:
  2036                           	opt callstack 0
  2037                           
  2038                           ; 4 bytes @ 0xB
  2039  00006B                     	ds	1
  2040  00006C                     ??_averageMeasure:
  2041  00006C                     ??_TMR_GetDeltaTime:
  2042  00006C                     ?_RADIO_ReadRandom:
  2043                           	opt callstack 0
  2044  00006C                     ?_frexp:
  2045                           	opt callstack 0
  2046  00006C                     IncludeMacCommandsResponse@i:
  2047                           	opt callstack 0
  2048  00006C                     GPIOAnalogRead@GPIO:
  2049                           	opt callstack 0
  2050  00006C                     isJoined@joined:
  2051                           	opt callstack 0
  2052  00006C                     sinGenStart@i:
  2053                           	opt callstack 0
  2054  00006C                     ___lldiv@counter:
  2055                           	opt callstack 0
  2056  00006C                     EnableChannels@channelMask:
  2057                           	opt callstack 0
  2058  00006C                     frexp@value:
  2059                           	opt callstack 0
  2060                           
  2061                           ; 4 bytes @ 0xC
  2062  00006C                     	ds	1
  2063  00006D                     ?_GPIOAverageRead:
  2064                           	opt callstack 0
  2065  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  2066                           	opt callstack 0
  2067  00006D                     IncludeMacCommandsResponse@bufferIndex:
  2068                           	opt callstack 0
  2069  00006D                     ExtractMic@bufferLength:
  2070                           	opt callstack 0
  2071  00006D                     sinGenStart@t:
  2072                           	opt callstack 0
  2073  00006D                     PrepareSessionKeys@appNonce:
  2074                           	opt callstack 0
  2075  00006D                     SwTimerSetTimeout@timeout:
  2076                           	opt callstack 0
  2077  00006D                     RADIO_WriteFrequency@frequency:
  2078                           	opt callstack 0
  2079  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  2080                           	opt callstack 0
  2081  00006D                     RADIO_WriteFSKBitRate@bitRate:
  2082                           	opt callstack 0
  2083                           
  2084                           ; 4 bytes @ 0xD
  2085  00006D                     	ds	1
  2086  00006E                     ??_TMR_OverrideRemaining:
  2087  00006E                     ??_RADIO_ReadRandom:
  2088  00006E                     EnableChannels@channelMaskCntl:
  2089                           	opt callstack 0
  2090  00006E                     ConfigureRadio@freq:
  2091                           	opt callstack 0
  2092                           
  2093                           ; 4 bytes @ 0xE
  2094  00006E                     	ds	1
  2095  00006F                     ??_ExtractMic:
  2096  00006F                     ??_GPIOAverageRead:
  2097  00006F                     ?_ExecuteLinkAdr:
  2098                           	opt callstack 0
  2099  00006F                     AssembleEncryptionBlock@blockId:
  2100                           	opt callstack 0
  2101  00006F                     RADIO_ReadRandom@retVal:
  2102                           	opt callstack 0
  2103  00006F                     ExecuteLinkAdr@ptr:
  2104                           	opt callstack 0
  2105  00006F                     PrepareSessionKeys@networkId:
  2106                           	opt callstack 0
  2107                           
  2108                           ; 2 bytes @ 0xF
  2109  00006F                     	ds	1
  2110  000070                     AssembleEncryptionBlock@firstByte:
  2111                           	opt callstack 0
  2112  000070                     TMR_OverrideRemaining@tmrVal:
  2113                           	opt callstack 0
  2114  000070                     frexp@eptr:
  2115                           	opt callstack 0
  2116                           
  2117                           ; 2 bytes @ 0x10
  2118  000070                     	ds	1
  2119  000071                     ??_ExecuteLinkAdr:
  2120  000071                     ??_SwTimerSetTimeout:
  2121  000071                     RADIO_ReadRandom@i:
  2122                           	opt callstack 0
  2123  000071                     PrepareSessionKeys@index:
  2124                           	opt callstack 0
  2125  000071                     AssembleEncryptionBlock@multicastStatus:
  2126                           	opt callstack 0
  2127  000071                     averageMeasure@value:
  2128                           	opt callstack 0
  2129  000071                     RADIO_WriteFrequency@num_mod:
  2130                           	opt callstack 0
  2131  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  2132                           	opt callstack 0
  2133  000071                     RADIO_WriteFSKBitRate@num:
  2134                           	opt callstack 0
  2135  000071                     ExtractMic@mic:
  2136                           	opt callstack 0
  2137                           
  2138                           ; 4 bytes @ 0x11
  2139  000071                     	ds	1
  2140  000072                     ??_frexp:
  2141  000072                     ConfigureRadio@dataRate:
  2142                           	opt callstack 0
  2143  000072                     AssembleEncryptionBlock@dir:
  2144                           	opt callstack 0
  2145  000072                     GPIOAverageRead@GPIO:
  2146                           	opt callstack 0
  2147  000072                     TMR_OverrideRemaining@oldReloadVal:
  2148                           	opt callstack 0
  2149  000072                     ExecuteLinkAdr@channelMask:
  2150                           	opt callstack 0
  2151  000072                     srand@x:
  2152                           	opt callstack 0
  2153                           
  2154                           ; 2 bytes @ 0x12
  2155  000072                     	ds	1
  2156  000073                     AssembleEncryptionBlock@bufferIndex:
  2157                           	opt callstack 0
  2158  000073                     _AESEncode$516:
  2159                           	opt callstack 0
  2160  000073                     GPIOAverageRead@i:
  2161                           	opt callstack 0
  2162  000073                     ConfigureRadioTx@freq:
  2163                           	opt callstack 0
  2164  000073                     ConfigureRadioRx@freq:
  2165                           	opt callstack 0
  2166                           
  2167                           ; 4 bytes @ 0x13
  2168  000073                     	ds	1
  2169  000074                     ?___fladd:
  2170                           	opt callstack 0
  2171  000074                     ExecuteLinkAdr@txPower:
  2172                           	opt callstack 0
  2173  000074                     averageMeasure@i:
  2174                           	opt callstack 0
  2175  000074                     ___fladd@b:
  2176                           	opt callstack 0
  2177                           
  2178                           ; 4 bytes @ 0x14
  2179  000074                     	ds	1
  2180  000075                     SwTimerSetTimeout@timerId:
  2181                           	opt callstack 0
  2182  000075                     _AESEncode$517:
  2183                           	opt callstack 0
  2184  000075                     ExecuteLinkAdr@redundancy:
  2185                           	opt callstack 0
  2186  000075                     GPIOAverageRead@finalValue:
  2187                           	opt callstack 0
  2188  000075                     RADIO_WriteFrequency@num:
  2189                           	opt callstack 0
  2190                           
  2191                           ; 4 bytes @ 0x15
  2192  000075                     	ds	2
  2193  000077                     ExecuteLinkAdr@dataRate:
  2194                           	opt callstack 0
  2195  000077                     ConfigureRadioTx@dataRate:
  2196                           	opt callstack 0
  2197  000077                     ConfigureRadioRx@dataRate:
  2198                           	opt callstack 0
  2199  000077                     _AESEncode$518:
  2200                           	opt callstack 0
  2201                           
  2202                           ; 2 bytes @ 0x17
  2203  000077                     	ds	1
  2204  000078                     ?_SwTimersInterrupt:
  2205                           	opt callstack 0
  2206  000078                     ConfigureRadioTx@txPower:
  2207                           	opt callstack 0
  2208  000078                     ___fladd@a:
  2209                           	opt callstack 0
  2210                           
  2211                           ; 4 bytes @ 0x18
  2212  000078                     	ds	1
  2213  000079                     AESEncode@aux:
  2214                           	opt callstack 0
  2215  000079                     RADIO_Init@radioBuffer:
  2216                           	opt callstack 0
  2217                           
  2218                           ; 2 bytes @ 0x19
  2219  000079                     	ds	1
  2220  00007A                     ??_RADIO_DIO2:
  2221  00007A                     AESEncode@aux2:
  2222                           	opt callstack 0
  2223                           
  2224                           ; 1 bytes @ 0x1A
  2225  00007A                     	ds	1
  2226  00007B                     AESEncode@aux1:
  2227                           	opt callstack 0
  2228  00007B                     RADIO_Init@frequency:
  2229                           	opt callstack 0
  2230                           
  2231                           ; 4 bytes @ 0x1B
  2232  00007B                     	ds	1
  2233  00007C                     ??___fladd:
  2234  00007C                     AESEncode@aux3:
  2235                           	opt callstack 0
  2236  00007C                     RADIO_DIO2@dioMapping:
  2237                           	opt callstack 0
  2238                           
  2239                           ; 1 bytes @ 0x1C
  2240  00007C                     	ds	1
  2241  00007D                     AESEncode@i:
  2242                           	opt callstack 0
  2243                           
  2244                           ; 1 bytes @ 0x1D
  2245  00007D                     	ds	1
  2246  00007E                     AESEncodeLoRa@block:
  2247                           	opt callstack 0
  2248                           
  2249                           ; 2 bytes @ 0x1E
  2250  00007E                     	ds	1
  2251  00007F                     ??_RADIO_Init:
  2252                           
  2253                           ; 1 bytes @ 0x1F
  2254  00007F                     	ds	1
  2255  000080                     ___fladd@signs:
  2256                           	opt callstack 0
  2257  000080                     AESEncodeLoRa@key:
  2258                           	opt callstack 0
  2259  000080                     SwTimersInterrupt@timeElapsed:
  2260                           	opt callstack 0
  2261                           
  2262                           ; 4 bytes @ 0x20
  2263  000080                     	ds	1
  2264  000081                     ___fladd@aexp:
  2265                           	opt callstack 0
  2266                           
  2267                           ; 1 bytes @ 0x21
  2268  000081                     	ds	1
  2269  000082                     ___fladd@bexp:
  2270                           	opt callstack 0
  2271  000082                     AESEncodeLoRa@useKey:
  2272                           	opt callstack 0
  2273                           
  2274                           ; 16 bytes @ 0x22
  2275  000082                     	ds	1
  2276  000083                     ___fladd@grs:
  2277                           	opt callstack 0
  2278                           
  2279                           ; 1 bytes @ 0x23
  2280  000083                     	ds	1
  2281  000084                     ?___flmul:
  2282                           	opt callstack 0
  2283  000084                     ?___flsub:
  2284                           	opt callstack 0
  2285  000084                     SwTimersInterrupt@ticksToNextTimerEvent:
  2286                           	opt callstack 0
  2287  000084                     ___flsub@b:
  2288                           	opt callstack 0
  2289  000084                     ___flmul@b:
  2290                           	opt callstack 0
  2291                           
  2292                           ; 4 bytes @ 0x24
  2293  000084                     	ds	4
  2294  000088                     SwTimersInterrupt@i:
  2295                           	opt callstack 0
  2296  000088                     ___flsub@a:
  2297                           	opt callstack 0
  2298  000088                     ___flmul@a:
  2299                           	opt callstack 0
  2300                           
  2301                           ; 4 bytes @ 0x28
  2302  000088                     	ds	1
  2303  000089                     ?_SwTimerReadValue:
  2304                           	opt callstack 0
  2305                           
  2306                           ; 4 bytes @ 0x29
  2307  000089                     	ds	3
  2308  00008C                     ??___flmul:
  2309  00008C                     
  2310                           ; 1 bytes @ 0x2C
  2311  00008C                     	ds	1
  2312  00008D                     SwTimerReadValue@ticksCount:
  2313                           	opt callstack 0
  2314  00008D                     SwTimerStart@ticksRemaining:
  2315                           	opt callstack 0
  2316                           
  2317                           ; 4 bytes @ 0x2D
  2318  00008D                     	ds	3
  2319  000090                     ___flmul@sign:
  2320                           	opt callstack 0
  2321                           
  2322                           ; 1 bytes @ 0x30
  2323  000090                     	ds	1
  2324  000091                     SwTimerReadValue@timerId:
  2325                           	opt callstack 0
  2326  000091                     SwTimerStart@timerId:
  2327                           	opt callstack 0
  2328  000091                     ___flmul@grs:
  2329                           	opt callstack 0
  2330                           
  2331                           ; 4 bytes @ 0x31
  2332  000091                     	ds	1
  2333  000092                     ??_UpdateRetransmissionAckTimeoutState:
  2334  000092                     ??_StartReTxTimer:
  2335  000092                     ?___lmul:
  2336                           	opt callstack 0
  2337  000092                     GenerateSubkey@key:
  2338                           	opt callstack 0
  2339  000092                     ComputeSessionKeys@joinAcceptBuffer:
  2340                           	opt callstack 0
  2341  000092                     EncryptFRMPayload@buffer:
  2342                           	opt callstack 0
  2343  000092                     ___lmul@multiplier:
  2344                           	opt callstack 0
  2345                           
  2346                           ; 4 bytes @ 0x32
  2347  000092                     	ds	2
  2348  000094                     EncryptFRMPayload@bufferLength:
  2349                           	opt callstack 0
  2350  000094                     GenerateSubkey@k1:
  2351                           	opt callstack 0
  2352                           
  2353                           ; 2 bytes @ 0x34
  2354  000094                     	ds	1
  2355  000095                     EncryptFRMPayload@dir:
  2356                           	opt callstack 0
  2357  000095                     ___flmul@aexp:
  2358                           	opt callstack 0
  2359                           
  2360                           ; 1 bytes @ 0x35
  2361  000095                     	ds	1
  2362  000096                     ___flmul@bexp:
  2363                           	opt callstack 0
  2364  000096                     GenerateSubkey@k2:
  2365                           	opt callstack 0
  2366  000096                     StartReTxTimer@minim:
  2367                           	opt callstack 0
  2368  000096                     EncryptFRMPayload@frameCounter:
  2369                           	opt callstack 0
  2370  000096                     ___lmul@multiplicand:
  2371                           	opt callstack 0
  2372                           
  2373                           ; 4 bytes @ 0x36
  2374  000096                     	ds	1
  2375  000097                     ___flmul@prod:
  2376                           	opt callstack 0
  2377                           
  2378                           ; 4 bytes @ 0x37
  2379  000097                     	ds	1
  2380  000098                     ??_GenerateSubkey:
  2381                           
  2382                           ; 1 bytes @ 0x38
  2383  000098                     	ds	1
  2384  000099                     GenerateSubkey@const_Rb:
  2385                           	opt callstack 0
  2386                           
  2387                           ; 16 bytes @ 0x39
  2388  000099                     	ds	1
  2389  00009A                     StartReTxTimer@i:
  2390                           	opt callstack 0
  2391  00009A                     EncryptFRMPayload@key:
  2392                           	opt callstack 0
  2393  00009A                     ___lmul@product:
  2394                           	opt callstack 0
  2395                           
  2396                           ; 4 bytes @ 0x3A
  2397  00009A                     	ds	1
  2398  00009B                     ___flmul@temp:
  2399                           	opt callstack 0
  2400                           
  2401                           ; 2 bytes @ 0x3B
  2402  00009B                     	ds	1
  2403  00009C                     EncryptFRMPayload@macBufferIndex:
  2404                           	opt callstack 0
  2405                           
  2406                           ; 1 bytes @ 0x3C
  2407  00009C                     	ds	1
  2408  00009D                     ?___fldiv:
  2409                           	opt callstack 0
  2410  00009D                     ?_eval_poly:
  2411                           	opt callstack 0
  2412  00009D                     EncryptFRMPayload@bufferToBeEncrypted:
  2413                           	opt callstack 0
  2414  00009D                     ___fldiv@b:
  2415                           	opt callstack 0
  2416  00009D                     eval_poly@x:
  2417                           	opt callstack 0
  2418                           
  2419                           ; 4 bytes @ 0x3D
  2420  00009D                     	ds	1
  2421  00009E                     ?_ExecuteNewChannel:
  2422                           	opt callstack 0
  2423  00009E                     ?_ExecuteRxParamSetupReq:
  2424                           	opt callstack 0
  2425  00009E                     ?_rand:
  2426                           	opt callstack 0
  2427  00009E                     RADIO_WriteConfiguration@symbolTimeout:
  2428                           	opt callstack 0
  2429  00009E                     ExecuteNewChannel@ptr:
  2430                           	opt callstack 0
  2431  00009E                     ExecuteRxParamSetupReq@ptr:
  2432                           	opt callstack 0
  2433  00009E                     UpdateCfList@joinAccept:
  2434                           	opt callstack 0
  2435  00009E                     LORAWAN_LinkCheckConfigure@period:
  2436                           	opt callstack 0
  2437                           
  2438                           ; 2 bytes @ 0x3E
  2439  00009E                     	ds	1
  2440  00009F                     EncryptFRMPayload@multicastStatus:
  2441                           	opt callstack 0
  2442                           
  2443                           ; 1 bytes @ 0x3F
  2444  00009F                     	ds	1
  2445  0000A0                     ??_LORAWAN_LinkCheckConfigure:
  2446  0000A0                     ??_EncryptFRMPayload:
  2447  0000A0                     ??_RADIO_WriteConfiguration:
  2448  0000A0                     ??_UpdateCfList:
  2449  0000A0                     ?___lwmod:
  2450                           	opt callstack 0
  2451  0000A0                     ExecuteNewChannel@drRange:
  2452                           	opt callstack 0
  2453  0000A0                     ___lwmod@dividend:
  2454                           	opt callstack 0
  2455  0000A0                     ExecuteRxParamSetupReq@frequency:
  2456                           	opt callstack 0
  2457                           
  2458                           ; 4 bytes @ 0x40
  2459  0000A0                     	ds	1
  2460  0000A1                     eval_poly@d:
  2461                           	opt callstack 0
  2462  0000A1                     ExecuteNewChannel@frequency:
  2463                           	opt callstack 0
  2464  0000A1                     ___fldiv@a:
  2465                           	opt callstack 0
  2466                           
  2467                           ; 4 bytes @ 0x41
  2468  0000A1                     	ds	1
  2469  0000A2                     ___lwmod@divisor:
  2470                           	opt callstack 0
  2471                           
  2472                           ; 2 bytes @ 0x42
  2473  0000A2                     	ds	1
  2474  0000A3                     RADIO_WriteConfiguration@i:
  2475                           	opt callstack 0
  2476  0000A3                     eval_poly@n:
  2477                           	opt callstack 0
  2478                           
  2479                           ; 2 bytes @ 0x43
  2480  0000A3                     	ds	1
  2481  0000A4                     ExecuteRxParamSetupReq@dlSettings:
  2482                           	opt callstack 0
  2483  0000A4                     UpdateCfList@bufferLength:
  2484                           	opt callstack 0
  2485  0000A4                     ___lwmod@counter:
  2486                           	opt callstack 0
  2487  0000A4                     RADIO_WriteConfiguration@tempValue:
  2488                           	opt callstack 0
  2489  0000A4                     _LORAWAN_LinkCheckConfigure$2499:
  2490                           	opt callstack 0
  2491                           
  2492                           ; 4 bytes @ 0x44
  2493  0000A4                     	ds	1
  2494  0000A5                     ??___fldiv:
  2495  0000A5                     ??_eval_poly:
  2496  0000A5                     ?_Random:
  2497                           	opt callstack 0
  2498  0000A5                     ExecuteNewChannel@channelIndex:
  2499                           	opt callstack 0
  2500  0000A5                     EncryptFRMPayload@k:
  2501                           	opt callstack 0
  2502  0000A5                     Random@max:
  2503                           	opt callstack 0
  2504  0000A5                     uint16ToString@value:
  2505                           	opt callstack 0
  2506  0000A5                     UpdateCfList@frequency:
  2507                           	opt callstack 0
  2508                           
  2509                           ; 4 bytes @ 0x45
  2510  0000A5                     	ds	1
  2511  0000A6                     ?_MacExecuteCommands:
  2512                           	opt callstack 0
  2513  0000A6                     EncryptFRMPayload@i:
  2514                           	opt callstack 0
  2515  0000A6                     MacExecuteCommands@buffer:
  2516                           	opt callstack 0
  2517                           
  2518                           ; 2 bytes @ 0x46
  2519  0000A6                     	ds	1
  2520  0000A7                     SearchAvailableChannel@transmissionType:
  2521                           	opt callstack 0
  2522  0000A7                     EncryptFRMPayload@j:
  2523                           	opt callstack 0
  2524  0000A7                     uint16ToString@output:
  2525                           	opt callstack 0
  2526                           
  2527                           ; 2 bytes @ 0x47
  2528  0000A7                     	ds	1
  2529  0000A8                     RADIO_WriteConfiguration@regValue:
  2530                           	opt callstack 0
  2531  0000A8                     LORAWAN_LinkCheckConfigure@iCtr:
  2532                           	opt callstack 0
  2533  0000A8                     MacExecuteCommands@fOptsLen:
  2534                           	opt callstack 0
  2535  0000A8                     SearchAvailableChannel@channelIndex:
  2536                           	opt callstack 0
  2537                           
  2538                           ; 2 bytes @ 0x48
  2539  0000A8                     	ds	1
  2540  0000A9                     ??_MacExecuteCommands:
  2541  0000A9                     ?_RADIO_Transmit:
  2542                           	opt callstack 0
  2543  0000A9                     ?_RADIO_ReceiveStart:
  2544                           	opt callstack 0
  2545  0000A9                     LORAWAN_Reset@ismBandNew:
  2546                           	opt callstack 0
  2547  0000A9                     UpdateCfList@channelIndex:
  2548                           	opt callstack 0
  2549  0000A9                     RADIO_Transmit@buffer:
  2550                           	opt callstack 0
  2551  0000A9                     RADIO_ReceiveStart@rxWindowSize:
  2552                           	opt callstack 0
  2553  0000A9                     ___fldiv@rem:
  2554                           	opt callstack 0
  2555  0000A9                     eval_poly@res:
  2556                           	opt callstack 0
  2557  0000A9                     GenerateSubkey@l:
  2558                           	opt callstack 0
  2559                           
  2560                           ; 16 bytes @ 0x49
  2561  0000A9                     	ds	1
  2562  0000AA                     ??_SearchAvailableChannel:
  2563  0000AA                     UpdateCfList@i:
  2564                           	opt callstack 0
  2565  0000AA                     LORAWAN_Init@RxPayload:
  2566                           	opt callstack 0
  2567                           
  2568                           ; 2 bytes @ 0x4A
  2569  0000AA                     	ds	1
  2570  0000AB                     ??_RADIO_ReceiveStart:
  2571  0000AB                     RADIO_Transmit@bufferLen:
  2572                           	opt callstack 0
  2573  0000AB                     MacExecuteCommands@done:
  2574                           	opt callstack 0
  2575  0000AB                     acquisitionData@string:
  2576                           	opt callstack 0
  2577                           
  2578                           ; 2 bytes @ 0x4B
  2579  0000AB                     	ds	1
  2580  0000AC                     ??_RADIO_Transmit:
  2581  0000AC                     LORAWAN_Init@RxJoinResponse:
  2582                           	opt callstack 0
  2583  0000AC                     MacExecuteCommands@ptr:
  2584                           	opt callstack 0
  2585                           
  2586                           ; 2 bytes @ 0x4C
  2587  0000AC                     	ds	1
  2588  0000AD                     ?_log:
  2589                           	opt callstack 0
  2590  0000AD                     acquisitionData@GPIO:
  2591                           	opt callstack 0
  2592  0000AD                     ___fldiv@sign:
  2593                           	opt callstack 0
  2594  0000AD                     log@x:
  2595                           	opt callstack 0
  2596                           
  2597                           ; 4 bytes @ 0x4D
  2598  0000AD                     	ds	1
  2599  0000AE                     SearchAvailableChannel@randomNumberCopy:
  2600                           	opt callstack 0
  2601  0000AE                     ___fldiv@new_exp:
  2602                           	opt callstack 0
  2603                           
  2604                           ; 2 bytes @ 0x4E
  2605  0000AE                     	ds	1
  2606  0000AF                     SearchAvailableChannel@result:
  2607                           	opt callstack 0
  2608  0000AF                     _RADIO_ReceiveStart$784:
  2609                           	opt callstack 0
  2610                           
  2611                           ; 4 bytes @ 0x4F
  2612  0000AF                     	ds	1
  2613  0000B0                     SearchAvailableChannel@maxChannels:
  2614                           	opt callstack 0
  2615  0000B0                     ___fldiv@grs:
  2616                           	opt callstack 0
  2617                           
  2618                           ; 4 bytes @ 0x50
  2619  0000B0                     	ds	1
  2620  0000B1                     SearchAvailableChannel@randomNumber:
  2621                           	opt callstack 0
  2622  0000B1                     log@exponent:
  2623                           	opt callstack 0
  2624                           
  2625                           ; 2 bytes @ 0x51
  2626  0000B1                     	ds	1
  2627  0000B2                     SearchAvailableChannel@i:
  2628                           	opt callstack 0
  2629                           
  2630                           ; 1 bytes @ 0x52
  2631  0000B2                     	ds	1
  2632  0000B3                     SelectChannelForTransmission@transmissionType:
  2633                           	opt callstack 0
  2634  0000B3                     LORAWAN_TxDone@timeOnAir:
  2635                           	opt callstack 0
  2636                           
  2637                           ; 2 bytes @ 0x53
  2638  0000B3                     	ds	1
  2639  0000B4                     SelectChannelForTransmission@result:
  2640                           	opt callstack 0
  2641  0000B4                     ___fldiv@bexp:
  2642                           	opt callstack 0
  2643  0000B4                     _RADIO_Transmit$781:
  2644                           	opt callstack 0
  2645                           
  2646                           ; 4 bytes @ 0x54
  2647  0000B4                     	ds	1
  2648  0000B5                     ??_LORAWAN_TxDone:
  2649  0000B5                     SelectChannelForTransmission@channelIndex:
  2650                           	opt callstack 0
  2651  0000B5                     ___fldiv@aexp:
  2652                           	opt callstack 0
  2653                           
  2654                           ; 1 bytes @ 0x55
  2655  0000B5                     	ds	1
  2656  0000B6                     ?_tempConversion:
  2657                           	opt callstack 0
  2658  0000B6                     tempConversion@adcValue:
  2659                           	opt callstack 0
  2660                           
  2661                           ; 2 bytes @ 0x56
  2662  0000B6                     	ds	2
  2663  0000B8                     RADIO_Transmit@regValue:
  2664                           	opt callstack 0
  2665  0000B8                     _tempConversion$6793:
  2666                           	opt callstack 0
  2667                           
  2668                           ; 4 bytes @ 0x58
  2669  0000B8                     	ds	1
  2670  0000B9                     GenerateSubkey@i:
  2671                           	opt callstack 0
  2672  0000B9                     RADIO_Transmit@i:
  2673                           	opt callstack 0
  2674                           
  2675                           ; 1 bytes @ 0x59
  2676  0000B9                     	ds	1
  2677  0000BA                     ??_LORAWAN_RxTimeout:
  2678  0000BA                     AESCmac@key:
  2679                           	opt callstack 0
  2680                           
  2681                           ; 2 bytes @ 0x5A
  2682  0000BA                     	ds	2
  2683  0000BC                     AESCmac@output:
  2684                           	opt callstack 0
  2685  0000BC                     tempConversion@val:
  2686                           	opt callstack 0
  2687                           
  2688                           ; 4 bytes @ 0x5C
  2689  0000BC                     	ds	1
  2690  0000BD                     _LORAWAN_TxDone$1673:
  2691                           	opt callstack 0
  2692                           
  2693                           ; 4 bytes @ 0x5D
  2694  0000BD                     	ds	1
  2695  0000BE                     AESCmac@input:
  2696                           	opt callstack 0
  2697  0000BE                     LORAWAN_RxTimeout@minim:
  2698                           	opt callstack 0
  2699                           
  2700                           ; 4 bytes @ 0x5E
  2701  0000BE                     	ds	2
  2702  0000C0                     AESCmac@size:
  2703                           	opt callstack 0
  2704  0000C0                     tempConversion@temp:
  2705                           	opt callstack 0
  2706                           
  2707                           ; 4 bytes @ 0x60
  2708  0000C0                     	ds	1
  2709  0000C1                     ??_AESCmac:
  2710  0000C1                     _LORAWAN_TxDone$1674:
  2711                           	opt callstack 0
  2712                           
  2713                           ; 4 bytes @ 0x61
  2714  0000C1                     	ds	1
  2715  0000C2                     LORAWAN_RxTimeout@i:
  2716                           	opt callstack 0
  2717                           
  2718                           ; 1 bytes @ 0x62
  2719  0000C2                     	ds	1
  2720  0000C3                     ??_RADIO_DIO1:
  2721                           
  2722                           ; 1 bytes @ 0x63
  2723  0000C3                     	ds	1
  2724  0000C4                     RADIO_DIO1@dioMapping:
  2725                           	opt callstack 0
  2726  0000C4                     tempSensAcquisition@value:
  2727                           	opt callstack 0
  2728                           
  2729                           ; 2 bytes @ 0x64
  2730  0000C4                     	ds	1
  2731  0000C5                     LORAWAN_TxDone@found:
  2732                           	opt callstack 0
  2733                           
  2734                           ; 1 bytes @ 0x65
  2735  0000C5                     	ds	1
  2736  0000C6                     tempSensAcquisition@temp:
  2737                           	opt callstack 0
  2738  0000C6                     LORAWAN_TxDone@delta:
  2739                           	opt callstack 0
  2740                           
  2741                           ; 4 bytes @ 0x66
  2742  0000C6                     	ds	2
  2743  0000C8                     ?_ComputeMic:
  2744                           	opt callstack 0
  2745  0000C8                     AssemblePacket@port:
  2746                           	opt callstack 0
  2747  0000C8                     ComputeMic@key:
  2748                           	opt callstack 0
  2749                           
  2750                           ; 2 bytes @ 0x68
  2751  0000C8                     	ds	1
  2752  0000C9                     AssemblePacket@buffer:
  2753                           	opt callstack 0
  2754                           
  2755                           ; 2 bytes @ 0x69
  2756  0000C9                     	ds	1
  2757  0000CA                     ComputeMic@buffer:
  2758                           	opt callstack 0
  2759  0000CA                     _LORAWAN_TxDone$6790:
  2760                           	opt callstack 0
  2761                           
  2762                           ; 4 bytes @ 0x6A
  2763  0000CA                     	ds	1
  2764  0000CB                     AssemblePacket@bufferLength:
  2765                           	opt callstack 0
  2766                           
  2767                           ; 2 bytes @ 0x6B
  2768  0000CB                     	ds	1
  2769  0000CC                     ComputeMic@bufferLength:
  2770                           	opt callstack 0
  2771                           
  2772                           ; 1 bytes @ 0x6C
  2773  0000CC                     	ds	1
  2774  0000CD                     ??_AssemblePacket:
  2775  0000CD                     ComputeMic@mic:
  2776                           	opt callstack 0
  2777                           
  2778                           ; 4 bytes @ 0x6D
  2779  0000CD                     	ds	1
  2780  0000CE                     LORAWAN_TxDone@ticks:
  2781                           	opt callstack 0
  2782                           
  2783                           ; 4 bytes @ 0x6E
  2784  0000CE                     	ds	1
  2785  0000CF                     AssemblePacket@confirmed:
  2786                           	opt callstack 0
  2787                           
  2788                           ; 1 bytes @ 0x6F
  2789  0000CF                     	ds	1
  2790  0000D0                     AssemblePacket@mhdr:
  2791                           	opt callstack 0
  2792                           
  2793                           ; 1 bytes @ 0x70
  2794  0000D0                     	ds	1
  2795  0000D1                     ??_PrepareJoinRequestFrame:
  2796  0000D1                     AssemblePacket@fCtrl:
  2797                           	opt callstack 0
  2798                           
  2799                           ; 1 bytes @ 0x71
  2800  0000D1                     	ds	1
  2801  0000D2                     AssemblePacket@macCmdIdx:
  2802                           	opt callstack 0
  2803  0000D2                     LORAWAN_TxDone@minim:
  2804                           	opt callstack 0
  2805                           
  2806                           ; 4 bytes @ 0x72
  2807  0000D2                     	ds	1
  2808  0000D3                     AssemblePacket@bufferIndex:
  2809                           	opt callstack 0
  2810  0000D3                     PrepareJoinRequestFrame@mic:
  2811                           	opt callstack 0
  2812                           
  2813                           ; 4 bytes @ 0x73
  2814  0000D3                     	ds	1
  2815  0000D4                     LORAWAN_Send@port:
  2816                           	opt callstack 0
  2817                           
  2818                           ; 1 bytes @ 0x74
  2819  0000D4                     	ds	1
  2820  0000D5                     LORAWAN_Send@buffer:
  2821                           	opt callstack 0
  2822                           
  2823                           ; 2 bytes @ 0x75
  2824  0000D5                     	ds	1
  2825  0000D6                     LORAWAN_TxDone@i:
  2826                           	opt callstack 0
  2827                           
  2828                           ; 1 bytes @ 0x76
  2829  0000D6                     	ds	1
  2830  0000D7                     LORAWAN_Send@bufferLength:
  2831                           	opt callstack 0
  2832  0000D7                     PrepareJoinRequestFrame@mhdr:
  2833                           	opt callstack 0
  2834  0000D7                     RADIO_TxDone@timeOnAir:
  2835                           	opt callstack 0
  2836  0000D7                     RADIO_FSKPacketSent@timeOnAir:
  2837                           	opt callstack 0
  2838                           
  2839                           ; 4 bytes @ 0x77
  2840  0000D7                     	ds	1
  2841  0000D8                     ??_LORAWAN_Send:
  2842  0000D8                     PrepareJoinRequestFrame@iCtr:
  2843                           	opt callstack 0
  2844                           
  2845                           ; 1 bytes @ 0x78
  2846  0000D8                     	ds	1
  2847  0000D9                     LORAWAN_Send@confirmed:
  2848                           	opt callstack 0
  2849  0000D9                     PrepareJoinRequestFrame@bufferIndex:
  2850                           	opt callstack 0
  2851                           
  2852                           ; 1 bytes @ 0x79
  2853  0000D9                     	ds	1
  2854  0000DA                     LORAWAN_Join@bufferIndex:
  2855                           	opt callstack 0
  2856  0000DA                     LORAWAN_Send@result:
  2857                           	opt callstack 0
  2858                           
  2859                           ; 1 bytes @ 0x7A
  2860  0000DA                     	ds	1
  2861  0000DB                     ??_LORAWAN_RxDone:
  2862  0000DB                     ??_SwTimersExecute:
  2863  0000DB                     LORAWAN_Join@result:
  2864                           	opt callstack 0
  2865  0000DB                     _RADIO_TxDone$796:
  2866                           	opt callstack 0
  2867  0000DB                     _RADIO_FSKPacketSent$800:
  2868                           	opt callstack 0
  2869                           
  2870                           ; 4 bytes @ 0x7B
  2871  0000DB                     	ds	1
  2872  0000DC                     LORAWAN_Join@activationTypeNew:
  2873                           	opt callstack 0
  2874                           
  2875                           ; 1 bytes @ 0x7C
  2876  0000DC                     	ds	3
  2877  0000DF                     SwTimersExecute@i:
  2878                           	opt callstack 0
  2879  0000DF                     RADIO_FSKPacketSent@irqFlags:
  2880                           	opt callstack 0
  2881                           
  2882                           ; 1 bytes @ 0x7F
  2883  0000DF                     	ds	1
  2884  0000E0                     LORAWAN_RxDone@fPort:
  2885                           	opt callstack 0
  2886                           
  2887                           ; 1 bytes @ 0x80
  2888  0000E0                     	ds	1
  2889  0000E1                     LORAWAN_RxDone@channelIndex:
  2890                           	opt callstack 0
  2891                           
  2892                           ; 1 bytes @ 0x81
  2893  0000E1                     	ds	1
  2894  0000E2                     LORAWAN_RxDone@mhdr:
  2895                           	opt callstack 0
  2896                           
  2897                           ; 1 bytes @ 0x82
  2898  0000E2                     	ds	1
  2899  0000E3                     LORAWAN_RxDone@extractedMic:
  2900                           	opt callstack 0
  2901                           
  2902                           ; 4 bytes @ 0x83
  2903  0000E3                     	ds	4
  2904  0000E7                     LORAWAN_RxDone@bufferIndex:
  2905                           	opt callstack 0
  2906                           
  2907                           ; 1 bytes @ 0x87
  2908  0000E7                     	ds	1
  2909  0000E8                     LORAWAN_RxDone@temp:
  2910                           	opt callstack 0
  2911                           
  2912                           ; 1 bytes @ 0x88
  2913  0000E8                     	ds	1
  2914  0000E9                     LORAWAN_RxDone@packet:
  2915                           	opt callstack 0
  2916                           
  2917                           ; 2 bytes @ 0x89
  2918  0000E9                     	ds	2
  2919  0000EB                     LORAWAN_RxDone@computedMic:
  2920                           	opt callstack 0
  2921                           
  2922                           ; 4 bytes @ 0x8B
  2923  0000EB                     	ds	4
  2924  0000EF                     LORAWAN_RxDone@joinAccept:
  2925                           	opt callstack 0
  2926                           
  2927                           ; 2 bytes @ 0x8F
  2928  0000EF                     	ds	2
  2929  0000F1                     LORAWAN_RxDone@frmPayloadLength:
  2930                           	opt callstack 0
  2931                           
  2932                           ; 1 bytes @ 0x91
  2933  0000F1                     	ds	1
  2934  0000F2                     LORAWAN_RxDone@hdr:
  2935                           	opt callstack 0
  2936                           
  2937                           ; 2 bytes @ 0x92
  2938  0000F2                     	ds	2
  2939  0000F4                     RADIO_RxDone@irqFlags:
  2940                           	opt callstack 0
  2941  0000F4                     RADIO_FSKPayloadReady@irqFlags:
  2942                           	opt callstack 0
  2943                           
  2944                           ; 1 bytes @ 0x94
  2945  0000F4                     	ds	1
  2946  0000F5                     RADIO_RxDone@i:
  2947                           	opt callstack 0
  2948  0000F5                     RADIO_FSKPayloadReady@i:
  2949                           	opt callstack 0
  2950                           
  2951                           ; 1 bytes @ 0x95
  2952  0000F5                     	ds	1
  2953  0000F6                     ??_RADIO_DIO0:
  2954                           
  2955                           ; 1 bytes @ 0x96
  2956  0000F6                     	ds	2
  2957  0000F8                     RADIO_DIO0@dioMapping:
  2958                           	opt callstack 0
  2959                           
  2960                           ; 1 bytes @ 0x98
  2961  0000F8                     	ds	1
  2962  0000F9                     RADIO_DIO0@opMode:
  2963                           	opt callstack 0
  2964                           
  2965                           ; 1 bytes @ 0x99
  2966  0000F9                     	ds	1
  2967  0000FA                     sendValue@firstSend:
  2968                           	opt callstack 0
  2969                           
  2970                           ; 1 bytes @ 0x9A
  2971  0000FA                     	ds	1
  2972  0000FB                     sendValue@status:
  2973                           	opt callstack 0
  2974                           
  2975                           ; 1 bytes @ 0x9B
  2976  0000FB                     	ds	1
  2977  0000FC                     
  2978                           ; 1 bytes @ 0x9C
  2979                           
  2980                           	psect	cstackCOMRAM
  2981  000001                     __pcstackCOMRAM:
  2982                           	opt callstack 0
  2983  000001                     ?i2_TMR1_ReadTimer:
  2984                           	opt callstack 0
  2985  000001                     ?i2___awdiv:
  2986                           	opt callstack 0
  2987  000001                     ___lbmod@divisor:
  2988                           	opt callstack 0
  2989  000001                     TMR3_WriteTimer@timerVal:
  2990                           	opt callstack 0
  2991  000001                     TMR5_WriteTimer@timerVal:
  2992                           	opt callstack 0
  2993  000001                     i2TMR1_WriteTimer@timerVal:
  2994                           	opt callstack 0
  2995  000001                     i2___awdiv@dividend:
  2996                           	opt callstack 0
  2997                           
  2998                           ; 2 bytes @ 0x0
  2999  000001                     	ds	1
  3000  000002                     ___lbmod@dividend:
  3001                           	opt callstack 0
  3002                           
  3003                           ; 1 bytes @ 0x1
  3004  000002                     	ds	1
  3005  000003                     ??i2_TMR1_ReadTimer:
  3006  000003                     ___lbmod@counter:
  3007                           	opt callstack 0
  3008  000003                     i2___awdiv@divisor:
  3009                           	opt callstack 0
  3010                           
  3011                           ; 2 bytes @ 0x2
  3012  000003                     	ds	1
  3013  000004                     ___lbmod@rem:
  3014                           	opt callstack 0
  3015                           
  3016                           ; 1 bytes @ 0x3
  3017  000004                     	ds	1
  3018  000005                     i2___awdiv@counter:
  3019                           	opt callstack 0
  3020  000005                     i2TMR1_ReadTimer@readVal:
  3021                           	opt callstack 0
  3022                           
  3023                           ; 2 bytes @ 0x4
  3024  000005                     	ds	1
  3025  000006                     i2___awdiv@sign:
  3026                           	opt callstack 0
  3027                           
  3028                           ; 1 bytes @ 0x5
  3029  000006                     	ds	1
  3030  000007                     i2TMR1_ReadTimer@readValHigh:
  3031                           	opt callstack 0
  3032  000007                     i2___awdiv@quotient:
  3033                           	opt callstack 0
  3034                           
  3035                           ; 2 bytes @ 0x6
  3036  000007                     	ds	1
  3037  000008                     i2TMR1_ReadTimer@readValLow:
  3038                           	opt callstack 0
  3039                           
  3040                           ; 1 bytes @ 0x7
  3041  000008                     	ds	1
  3042  000009                     ?i2_TMR_SwapTimer:
  3043                           	opt callstack 0
  3044  000009                     ?i2_TMR_GetDeltaTime:
  3045                           	opt callstack 0
  3046  000009                     i2TMR_SwapTimer@timerVal:
  3047                           	opt callstack 0
  3048                           
  3049                           ; 2 bytes @ 0x8
  3050  000009                     	ds	2
  3051  00000B                     
  3052                           ; 1 bytes @ 0xA
  3053  00000B                     	ds	2
  3054  00000D                     ??i2_TMR_GetDeltaTime:
  3055                           
  3056                           ; 1 bytes @ 0xC
  3057  00000D                     	ds	12
  3058  000019                     ?i2_SwTimersInterrupt:
  3059                           	opt callstack 0
  3060                           
  3061                           ; 4 bytes @ 0x18
  3062  000019                     	ds	4
  3063  00001D                     
  3064                           ; 1 bytes @ 0x1C
  3065  00001D                     	ds	4
  3066  000021                     i2SwTimersInterrupt@timeElapsed:
  3067                           	opt callstack 0
  3068                           
  3069                           ; 4 bytes @ 0x20
  3070  000021                     	ds	4
  3071  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  3072                           	opt callstack 0
  3073                           
  3074                           ; 4 bytes @ 0x24
  3075  000025                     	ds	4
  3076  000029                     i2SwTimersInterrupt@i:
  3077                           	opt callstack 0
  3078                           
  3079                           ; 1 bytes @ 0x28
  3080  000029                     	ds	1
  3081  00002A                     ??_INTERRUPT_InterruptManager:
  3082                           
  3083                           ; 1 bytes @ 0x29
  3084  00002A                     	ds	8
  3085                           
  3086 ;;
  3087 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3088 ;;
  3089 ;; *************** function _main *****************
  3090 ;; Defined at:
  3091 ;;		line 89 in file "main.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;		None
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;Total ram usage:        0 bytes
  3110 ;; Hardware stack levels required when called:   21
  3111 ;; This function calls:
  3112 ;;		_GPIODigitalWrite
  3113 ;;		_GPIOInit
  3114 ;;		_LORAWAN_Init
  3115 ;;		_LORAWAN_Join
  3116 ;;		_LORAWAN_Mainloop
  3117 ;;		_LORAWAN_Reset
  3118 ;;		_LORAWAN_SetApplicationEui
  3119 ;;		_LORAWAN_SetApplicationKey
  3120 ;;		_LORAWAN_SetDeviceEui
  3121 ;;		_SYSTEM_Initialize
  3122 ;;		_TMR5_StartTimer
  3123 ;;		_acuadoriApp
  3124 ;;		_isJoined
  3125 ;;		_rn2483_GoToIdle
  3126 ;;		_rn2483_IdleInitialization
  3127 ;;		_timerReset
  3128 ;; This function is called by:
  3129 ;;		Startup code after reset
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text0
  3134  0066B4                     __ptext0:
  3135                           	opt callstack 0
  3136  0066B4                     _main:
  3137                           	opt callstack 10
  3138                           
  3139                           ;main.c: 91: SYSTEM_Initialize();
  3140                           
  3141                           ;incstack = 0
  3142  0066B4  ECFD  F04E         	call	_SYSTEM_Initialize	;wreg free
  3143                           
  3144                           ;main.c: 92: GPIOInit();
  3145  0066B8  EC63  F02E         	call	_GPIOInit	;wreg free
  3146                           
  3147                           ;main.c: 93: GPIODigitalWrite(0x19, 1);
  3148  0066BC  0E01               	movlw	1
  3149  0066BE  0100               	movlb	0	; () banked
  3150  0066C0  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3151  0066C2  0E19               	movlw	25
  3152  0066C4  ECD5  F036         	call	_GPIODigitalWrite
  3153                           
  3154                           ;main.c: 108: (INTCONbits.GIE = 1);
  3155  0066C8  8EF2               	bsf	4082,7,c	;volatile
  3156                           
  3157                           ;main.c: 110: (INTCONbits.PEIE = 1);
  3158  0066CA  8CF2               	bsf	4082,6,c	;volatile
  3159                           
  3160                           ;main.c: 116: LORAWAN_Init(RxData, RxJoinResponse);
  3161  0066CC  0E2E               	movlw	low _RxData
  3162  0066CE  0100               	movlb	0	; () banked
  3163  0066D0  6FAA               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  3164  0066D2  0EA8               	movlw	high _RxData
  3165  0066D4  6FAB               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  3166  0066D6  0EE6               	movlw	low _RxJoinResponse
  3167  0066D8  6FAC               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  3168  0066DA  0E9B               	movlw	high _RxJoinResponse
  3169  0066DC  6FAD               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  3170  0066DE  EC92  F047         	call	_LORAWAN_Init	;wreg free
  3171                           
  3172                           ;main.c: 125: LORAWAN_SetApplicationKey(appKey);
  3173  0066E2  0EE0               	movlw	low _appKey
  3174  0066E4  0100               	movlb	0	; () banked
  3175  0066E6  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  3176  0066E8  0E03               	movlw	high _appKey
  3177  0066EA  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  3178  0066EC  EC42  F04F         	call	_LORAWAN_SetApplicationKey	;wreg free
  3179                           
  3180                           ;main.c: 126: LORAWAN_SetApplicationEui(appEui);
  3181  0066F0  0EC8               	movlw	low _appEui
  3182  0066F2  0100               	movlb	0	; () banked
  3183  0066F4  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  3184  0066F6  0E03               	movlw	high _appEui
  3185  0066F8  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  3186  0066FA  EC59  F04F         	call	_LORAWAN_SetApplicationEui	;wreg free
  3187                           
  3188                           ;main.c: 127: LORAWAN_SetDeviceEui(deviceEui);
  3189  0066FE  0EF0               	movlw	low _deviceEui
  3190  006700  0100               	movlb	0	; () banked
  3191  006702  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  3192  006704  0E03               	movlw	high _deviceEui
  3193  006706  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  3194  006708  EC2B  F04F         	call	_LORAWAN_SetDeviceEui	;wreg free
  3195                           
  3196                           ;main.c: 130: LORAWAN_Join(OTAA);
  3197  00670C  0E00               	movlw	0
  3198  00670E  EC0F  F03F         	call	_LORAWAN_Join
  3199                           
  3200                           ;main.c: 137: TMR5_StartTimer();
  3201  006712  ECF9  F053         	call	_TMR5_StartTimer	;wreg free
  3202                           
  3203                           ;main.c: 138: timerReset();
  3204  006716  ECB5  F04F         	call	_timerReset	;wreg free
  3205                           
  3206                           ;main.c: 141: firstSend = 1;
  3207  00671A  0E01               	movlw	1
  3208  00671C  0101               	movlb	1	; () banked
  3209  00671E  6F24               	movwf	_firstSend& (0+255),b
  3210                           
  3211                           ; BSR set to: 1
  3212                           ;main.c: 142: rn2483_IdleInitialization();
  3213  006720  ECDD  F053         	call	_rn2483_IdleInitialization	;wreg free
  3214  006724                     l22316:
  3215                           
  3216                           ;main.c: 165: LORAWAN_Mainloop();
  3217  006724  ECF1  F04C         	call	_LORAWAN_Mainloop	;wreg free
  3218                           
  3219                           ;main.c: 168: if (isJoined() && (timer.min == 1 || firstSend)){
  3220  006728  EC3B  F051         	call	_isJoined	;wreg free
  3221  00672C  0900               	iorlw	0
  3222  00672E  B4D8               	btfsc	status,2,c
  3223  006730  D015               	goto	l22332
  3224  006732  0101               	movlb	1	; () banked
  3225  006734  0503               	decf	(_timer+3)& (0+255),w,b
  3226  006736  B4D8               	btfsc	status,2,c
  3227  006738  D003               	goto	u25340
  3228                           
  3229                           ; BSR set to: 1
  3230  00673A  5124               	movf	_firstSend& (0+255),w,b
  3231  00673C  B4D8               	btfsc	status,2,c
  3232  00673E  D00E               	goto	l22332
  3233  006740                     u25340:
  3234                           
  3235                           ; BSR set to: 1
  3236                           ;main.c: 169: GPIODigitalWrite(0x11, 1);
  3237  006740  0E01               	movlw	1
  3238  006742  0100               	movlb	0	; () banked
  3239  006744  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3240  006746  0E11               	movlw	17
  3241  006748  ECD5  F036         	call	_GPIODigitalWrite
  3242                           
  3243                           ;main.c: 171: firstSend = 0;
  3244  00674C  0E00               	movlw	0
  3245  00674E  0101               	movlb	1	; () banked
  3246  006750  6F24               	movwf	_firstSend& (0+255),b
  3247                           
  3248                           ; BSR set to: 1
  3249                           ;main.c: 172: acuadoriApp();
  3250  006752  EC05  F011         	call	_acuadoriApp	;wreg free
  3251  006756                     l22330:
  3252                           
  3253                           ;main.c: 173: timerReset();
  3254  006756  ECB5  F04F         	call	_timerReset	;wreg free
  3255                           
  3256                           ;main.c: 174: }
  3257  00675A  D7E4               	goto	l22316
  3258  00675C                     l22332:
  3259                           
  3260                           ;main.c: 176: else if (timer.sec >= 16 && !isJoined()){
  3261  00675C  0E0F               	movlw	15
  3262  00675E  0101               	movlb	1	; () banked
  3263  006760  6502               	cpfsgt	(_timer+2)& (0+255),b
  3264  006762  D021               	goto	l22348
  3265                           
  3266                           ; BSR set to: 1
  3267  006764  EC3B  F051         	call	_isJoined	;wreg free
  3268  006768  0900               	iorlw	0
  3269  00676A  A4D8               	btfss	status,2,c
  3270  00676C  D01C               	goto	l22348
  3271                           
  3272                           ;main.c: 180: LORAWAN_Reset (ISM_EU868);
  3273  00676E  0E00               	movlw	0
  3274  006770  EC98  F023         	call	_LORAWAN_Reset
  3275                           
  3276                           ;main.c: 181: LORAWAN_SetApplicationKey(appKey);
  3277  006774  0EE0               	movlw	low _appKey
  3278  006776  0100               	movlb	0	; () banked
  3279  006778  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  3280  00677A  0E03               	movlw	high _appKey
  3281  00677C  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  3282  00677E  EC42  F04F         	call	_LORAWAN_SetApplicationKey	;wreg free
  3283                           
  3284                           ;main.c: 182: LORAWAN_SetApplicationEui(appEui);
  3285  006782  0EC8               	movlw	low _appEui
  3286  006784  0100               	movlb	0	; () banked
  3287  006786  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  3288  006788  0E03               	movlw	high _appEui
  3289  00678A  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  3290  00678C  EC59  F04F         	call	_LORAWAN_SetApplicationEui	;wreg free
  3291                           
  3292                           ;main.c: 183: LORAWAN_SetDeviceEui(deviceEui);
  3293  006790  0EF0               	movlw	low _deviceEui
  3294  006792  0100               	movlb	0	; () banked
  3295  006794  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  3296  006796  0E03               	movlw	high _deviceEui
  3297  006798  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  3298  00679A  EC2B  F04F         	call	_LORAWAN_SetDeviceEui	;wreg free
  3299                           
  3300                           ;main.c: 184: LORAWAN_Join(OTAA);
  3301  00679E  0E00               	movlw	0
  3302  0067A0  EC0F  F03F         	call	_LORAWAN_Join
  3303  0067A4  D7D8               	goto	l22330
  3304  0067A6                     l22348:
  3305                           
  3306                           ;main.c: 188: else if(isJoined())
  3307  0067A6  EC3B  F051         	call	_isJoined	;wreg free
  3308  0067AA  0900               	iorlw	0
  3309  0067AC  B4D8               	btfsc	status,2,c
  3310  0067AE  D7BA               	goto	l22316
  3311                           
  3312                           ;main.c: 189: {;main.c: 192: rn2483_GoToIdle();
  3313  0067B0  ECB6  F052         	call	_rn2483_GoToIdle	;wreg free
  3314  0067B4  D7B7               	goto	l22316
  3315  0067B6                     __end_of_main:
  3316                           	opt callstack 0
  3317                           
  3318 ;; *************** function _rn2483_IdleInitialization *****************
  3319 ;; Defined at:
  3320 ;;		line 391 in file "rn2483APP.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;		None
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;Total ram usage:        0 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    7
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_main
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text1
  3349  00A7BA                     __ptext1:
  3350                           	opt callstack 0
  3351  00A7BA                     _rn2483_IdleInitialization:
  3352                           	opt callstack 23
  3353                           
  3354                           ;rn2483APP.c: 393: WDTCON = 0;
  3355                           
  3356                           ;incstack = 0
  3357  00A7BA  0E00               	movlw	0
  3358  00A7BC  6ED1               	movwf	4049,c	;volatile
  3359                           
  3360                           ;rn2483APP.c: 397: OSCCON |= 0x80;
  3361  00A7BE  8ED3               	bsf	4051,7,c	;volatile
  3362  00A7C0  0012               	return		;funcret
  3363  00A7C2                     __end_of_rn2483_IdleInitialization:
  3364                           	opt callstack 0
  3365                           
  3366 ;; *************** function _rn2483_GoToIdle *****************
  3367 ;; Defined at:
  3368 ;;		line 401 in file "rn2483APP.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  1    wreg      unsigned char 
  3375 ;; Registers used:
  3376 ;;		None
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    7
  3389 ;; This function calls:
  3390 ;;		Nothing
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text2
  3397  00A56C                     __ptext2:
  3398                           	opt callstack 0
  3399  00A56C                     _rn2483_GoToIdle:
  3400                           	opt callstack 23
  3401                           
  3402                           ;rn2483APP.c: 406: INTCON3bits.INT1IE = 0;
  3403                           
  3404                           ;incstack = 0
  3405  00A56C  96F0               	bcf	4080,3,c	;volatile
  3406                           
  3407                           ;rn2483APP.c: 407: INTCON3bits.INT2IE = 0;
  3408  00A56E  98F0               	bcf	4080,4,c	;volatile
  3409                           
  3410                           ;rn2483APP.c: 408: INTCONbits.RBIE = 0;
  3411  00A570  96F2               	bcf	4082,3,c	;volatile
  3412                           
  3413                           ;rn2483APP.c: 410: PIE1bits.TMR1IE = 0;
  3414  00A572  909D               	bcf	3997,0,c	;volatile
  3415  00A574  0003               	sleep		;# 
  3416                           
  3417                           ;rn2483APP.c: 418: __nop();
  3418  00A576  F000               	nop	
  3419                           
  3420                           ;rn2483APP.c: 422: PIE1bits.TMR1IE = 1;
  3421  00A578  809D               	bsf	3997,0,c	;volatile
  3422                           
  3423                           ;rn2483APP.c: 424: INTCON3bits.INT1IE = 1;
  3424  00A57A  86F0               	bsf	4080,3,c	;volatile
  3425                           
  3426                           ;rn2483APP.c: 425: INTCON3bits.INT2IE = 1;
  3427  00A57C  88F0               	bsf	4080,4,c	;volatile
  3428                           
  3429                           ;rn2483APP.c: 426: INTCONbits.RBIE = 1;
  3430  00A57E  86F2               	bsf	4082,3,c	;volatile
  3431  00A580  0012               	return		;funcret
  3432  00A582                     __end_of_rn2483_GoToIdle:
  3433                           	opt callstack 0
  3434                           
  3435 ;; *************** function _isJoined *****************
  3436 ;; Defined at:
  3437 ;;		line 383 in file "rn2483APP.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  value           4    8[BANK0 ] unsigned long 
  3442 ;;  joined          1   12[BANK0 ] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      unsigned char 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;Total ram usage:        5 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; Hardware stack levels required when called:    8
  3459 ;; This function calls:
  3460 ;;		_LORAWAN_GetStatus
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text3
  3467  00A276                     __ptext3:
  3468                           	opt callstack 0
  3469  00A276                     _isJoined:
  3470                           	opt callstack 22
  3471                           
  3472                           ;rn2483APP.c: 384: uint32_t value;;rn2483APP.c: 385: uint8_t joined;;rn2483APP.c: 386: v
      +                          alue = LORAWAN_GetStatus();
  3473                           
  3474                           ;incstack = 0
  3475  00A276  EC3E  F04E         	call	_LORAWAN_GetStatus	;wreg free
  3476  00A27A  C060  F068         	movff	?_LORAWAN_GetStatus,isJoined@value
  3477  00A27E  C061  F069         	movff	?_LORAWAN_GetStatus+1,isJoined@value+1
  3478  00A282  C062  F06A         	movff	?_LORAWAN_GetStatus+2,isJoined@value+2
  3479  00A286  C063  F06B         	movff	?_LORAWAN_GetStatus+3,isJoined@value+3
  3480                           
  3481                           ;rn2483APP.c: 387: joined = value & 0x10;
  3482  00A28A  0100               	movlb	0	; () banked
  3483  00A28C  5168               	movf	isJoined@value& (0+255),w,b
  3484  00A28E  0B10               	andlw	16
  3485  00A290  6F6C               	movwf	isJoined@joined& (0+255),b
  3486                           
  3487                           ; BSR set to: 0
  3488                           ;rn2483APP.c: 388: return joined;
  3489  00A292  516C               	movf	isJoined@joined& (0+255),w,b
  3490                           
  3491                           ; BSR set to: 0
  3492  00A294  0012               	return		;funcret
  3493  00A296                     __end_of_isJoined:
  3494                           	opt callstack 0
  3495                           
  3496 ;; *************** function _LORAWAN_GetStatus *****************
  3497 ;; Defined at:
  3498 ;;		line 658 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;		None
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  status          4    4[BANK0 ] unsigned long 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  4    0[BANK0 ] unsigned long 
  3505 ;; Registers used:
  3506 ;;		None
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3512 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3513 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;Total ram usage:        8 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:    7
  3519 ;; This function calls:
  3520 ;;		Nothing
  3521 ;; This function is called by:
  3522 ;;		_isJoined
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text4
  3527  009C7C                     __ptext4:
  3528                           	opt callstack 0
  3529  009C7C                     _LORAWAN_GetStatus:
  3530                           	opt callstack 22
  3531                           
  3532                           ;lorawan.c: 660: uint32_t status = loRa.macStatus.value;
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;incstack = 0
  3536  009C7C  C207  F064         	movff	_loRa+2,LORAWAN_GetStatus@status
  3537  009C80  C208  F065         	movff	_loRa+3,LORAWAN_GetStatus@status+1
  3538  009C84  C209  F066         	movff	_loRa+4,LORAWAN_GetStatus@status+2
  3539  009C88  C20A  F067         	movff	_loRa+5,LORAWAN_GetStatus@status+3
  3540                           
  3541                           ;lorawan.c: 662: loRa.macStatus.channelsModified = 0;
  3542  009C8C  0102               	movlb	2	; () banked
  3543  009C8E  9708               	bcf	(_loRa+3)& (0+255),3,b
  3544                           
  3545                           ;lorawan.c: 663: loRa.macStatus.txPowerModified = 0;
  3546  009C90  9908               	bcf	(_loRa+3)& (0+255),4,b
  3547                           
  3548                           ;lorawan.c: 664: loRa.macStatus.nbRepModified = 0;
  3549  009C92  9B08               	bcf	(_loRa+3)& (0+255),5,b
  3550                           
  3551                           ;lorawan.c: 665: loRa.macStatus.prescalerModified = 0;
  3552  009C94  9D08               	bcf	(_loRa+3)& (0+255),6,b
  3553                           
  3554                           ;lorawan.c: 666: loRa.macStatus.secondReceiveWindowModified = 0;
  3555  009C96  9F08               	bcf	(_loRa+3)& (0+255),7,b
  3556                           
  3557                           ;lorawan.c: 667: loRa.macStatus.rxTimingSetup = 0;
  3558  009C98  9109               	bcf	(_loRa+4)& (0+255),0,b
  3559                           
  3560                           ;lorawan.c: 669: return status;
  3561  009C9A  C064  F060         	movff	LORAWAN_GetStatus@status,?_LORAWAN_GetStatus
  3562  009C9E  C065  F061         	movff	LORAWAN_GetStatus@status+1,?_LORAWAN_GetStatus+1
  3563  009CA2  C066  F062         	movff	LORAWAN_GetStatus@status+2,?_LORAWAN_GetStatus+2
  3564  009CA6  C067  F063         	movff	LORAWAN_GetStatus@status+3,?_LORAWAN_GetStatus+3
  3565                           
  3566                           ; BSR set to: 2
  3567  009CAA  0012               	return		;funcret
  3568  009CAC                     __end_of_LORAWAN_GetStatus:
  3569                           	opt callstack 0
  3570                           
  3571 ;; *************** function _acuadoriApp *****************
  3572 ;; Defined at:
  3573 ;;		line 34 in file "acuadori.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;Total ram usage:        0 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:   20
  3594 ;; This function calls:
  3595 ;;		_GPIODigitalWrite
  3596 ;;		_LORAWAN_GetUplinkCounter
  3597 ;;		_LORAWAN_SetUplinkCounter
  3598 ;;		_impedenceAcquisition
  3599 ;;		_leafSensAcquisition
  3600 ;;		_lightSensAcquisition
  3601 ;;		_memcpy
  3602 ;;		_rn2483_delaysec
  3603 ;;		_sendValue
  3604 ;;		_strncat
  3605 ;;		_tempSensAcquisition
  3606 ;; This function is called by:
  3607 ;;		_main
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text5
  3612  00220A                     __ptext5:
  3613                           	opt callstack 0
  3614  00220A                     _acuadoriApp:
  3615                           	opt callstack 10
  3616                           
  3617                           ;acuadori.c: 36: memcpy(sensorsString, clearString, 10);
  3618                           
  3619                           ; BSR set to: 2
  3620                           ;incstack = 0
  3621  00220A  0EA0               	movlw	low _sensorsString
  3622  00220C  0100               	movlb	0	; () banked
  3623  00220E  6F60               	movwf	memcpy@d1& (0+255),b
  3624  002210  0E03               	movlw	high _sensorsString
  3625  002212  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3626  002214  0E00               	movlw	low _clearString
  3627  002216  6F62               	movwf	memcpy@s1& (0+255),b
  3628  002218  0E05               	movlw	high _clearString
  3629  00221A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  3630  00221C  0E00               	movlw	0
  3631  00221E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  3632  002220  0E0A               	movlw	10
  3633  002222  6F64               	movwf	memcpy@n& (0+255),b
  3634  002224  ECC3  F047         	call	_memcpy	;wreg free
  3635                           
  3636                           ;acuadori.c: 37: sensorsStringLength = 0;
  3637  002228  0E00               	movlw	0
  3638  00222A  0101               	movlb	1	; () banked
  3639  00222C  6FF8               	movwf	_sensorsStringLength& (0+255),b
  3640                           
  3641                           ; BSR set to: 1
  3642                           ;acuadori.c: 40: GPIODigitalWrite(0x16, 0);
  3643  00222E  0E00               	movlw	0
  3644  002230  0100               	movlb	0	; () banked
  3645  002232  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3646  002234  0E16               	movlw	22
  3647  002236  ECD5  F036         	call	_GPIODigitalWrite
  3648                           
  3649                           ;acuadori.c: 43: GPIODigitalWrite(0x04, 0);
  3650  00223A  0E00               	movlw	0
  3651  00223C  0100               	movlb	0	; () banked
  3652  00223E  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3653  002240  0E04               	movlw	4
  3654  002242  ECD5  F036         	call	_GPIODigitalWrite
  3655                           
  3656                           ;acuadori.c: 44: GPIODigitalWrite(0x00, 0);
  3657  002246  0E00               	movlw	0
  3658  002248  0100               	movlb	0	; () banked
  3659  00224A  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3660  00224C  0E00               	movlw	0
  3661  00224E  ECD5  F036         	call	_GPIODigitalWrite
  3662                           
  3663                           ;acuadori.c: 45: rn2483_delaysec(1);
  3664  002252  0E00               	movlw	0
  3665  002254  0100               	movlb	0	; () banked
  3666  002256  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3667  002258  0E01               	movlw	1
  3668  00225A  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3669  00225C  ECB1  F04C         	call	_rn2483_delaysec	;wreg free
  3670                           
  3671                           ;acuadori.c: 46: leafSensAcquisition();
  3672  002260  EC87  F050         	call	_leafSensAcquisition	;wreg free
  3673                           
  3674                           ;acuadori.c: 47: strncat(sensorsString, "A", 1);
  3675  002264  0EA0               	movlw	low _sensorsString
  3676  002266  0100               	movlb	0	; () banked
  3677  002268  6F60               	movwf	strncat@to& (0+255),b
  3678  00226A  0E03               	movlw	high _sensorsString
  3679  00226C  6F61               	movwf	(strncat@to+1)& (0+255),b
  3680  00226E  0EF5               	movlw	low STR_1
  3681  002270  6F62               	movwf	strncat@from& (0+255),b
  3682  002272  0EFF               	movlw	high STR_1
  3683  002274  6F63               	movwf	(strncat@from+1)& (0+255),b
  3684  002276  0E00               	movlw	0
  3685  002278  6F65               	movwf	(strncat@size+1)& (0+255),b
  3686  00227A  0E01               	movlw	1
  3687  00227C  6F64               	movwf	strncat@size& (0+255),b
  3688  00227E  EC2B  F042         	call	_strncat	;wreg free
  3689                           
  3690                           ;acuadori.c: 48: strncat(sensorsString, stringValue, stringValueLength);
  3691  002282  0EA0               	movlw	low _sensorsString
  3692  002284  0100               	movlb	0	; () banked
  3693  002286  6F60               	movwf	strncat@to& (0+255),b
  3694  002288  0E03               	movlw	high _sensorsString
  3695  00228A  6F61               	movwf	(strncat@to+1)& (0+255),b
  3696  00228C  0E6F               	movlw	low _stringValue
  3697  00228E  6F62               	movwf	strncat@from& (0+255),b
  3698  002290  0E01               	movlw	high _stringValue
  3699  002292  6F63               	movwf	(strncat@from+1)& (0+255),b
  3700  002294  C1F9  F064         	movff	_stringValueLength,strncat@size
  3701  002298  6B65               	clrf	(strncat@size+1)& (0+255),b
  3702  00229A  EC2B  F042         	call	_strncat	;wreg free
  3703                           
  3704                           ;acuadori.c: 49: sensorsStringLength += 1 + stringValueLength;
  3705  00229E  0101               	movlb	1	; () banked
  3706  0022A0  29F9               	incf	_stringValueLength& (0+255),w,b
  3707  0022A2  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3708                           
  3709                           ; BSR set to: 1
  3710                           ;acuadori.c: 52: GPIODigitalWrite(0x04, 0);
  3711  0022A4  0E00               	movlw	0
  3712  0022A6  0100               	movlb	0	; () banked
  3713  0022A8  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3714  0022AA  0E04               	movlw	4
  3715  0022AC  ECD5  F036         	call	_GPIODigitalWrite
  3716                           
  3717                           ;acuadori.c: 53: GPIODigitalWrite(0x00, 1);
  3718  0022B0  0E01               	movlw	1
  3719  0022B2  0100               	movlb	0	; () banked
  3720  0022B4  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3721  0022B6  0E00               	movlw	0
  3722  0022B8  ECD5  F036         	call	_GPIODigitalWrite
  3723                           
  3724                           ;acuadori.c: 54: rn2483_delaysec(1);
  3725  0022BC  0E00               	movlw	0
  3726  0022BE  0100               	movlb	0	; () banked
  3727  0022C0  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3728  0022C2  0E01               	movlw	1
  3729  0022C4  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3730  0022C6  ECB1  F04C         	call	_rn2483_delaysec	;wreg free
  3731                           
  3732                           ;acuadori.c: 55: leafSensAcquisition();
  3733  0022CA  EC87  F050         	call	_leafSensAcquisition	;wreg free
  3734                           
  3735                           ;acuadori.c: 56: strncat(sensorsString, "B", 1);
  3736  0022CE  0EA0               	movlw	low _sensorsString
  3737  0022D0  0100               	movlb	0	; () banked
  3738  0022D2  6F60               	movwf	strncat@to& (0+255),b
  3739  0022D4  0E03               	movlw	high _sensorsString
  3740  0022D6  6F61               	movwf	(strncat@to+1)& (0+255),b
  3741  0022D8  0EF7               	movlw	low STR_2
  3742  0022DA  6F62               	movwf	strncat@from& (0+255),b
  3743  0022DC  0EFF               	movlw	high STR_2
  3744  0022DE  6F63               	movwf	(strncat@from+1)& (0+255),b
  3745  0022E0  0E00               	movlw	0
  3746  0022E2  6F65               	movwf	(strncat@size+1)& (0+255),b
  3747  0022E4  0E01               	movlw	1
  3748  0022E6  6F64               	movwf	strncat@size& (0+255),b
  3749  0022E8  EC2B  F042         	call	_strncat	;wreg free
  3750                           
  3751                           ;acuadori.c: 57: strncat(sensorsString, stringValue, stringValueLength);
  3752  0022EC  0EA0               	movlw	low _sensorsString
  3753  0022EE  0100               	movlb	0	; () banked
  3754  0022F0  6F60               	movwf	strncat@to& (0+255),b
  3755  0022F2  0E03               	movlw	high _sensorsString
  3756  0022F4  6F61               	movwf	(strncat@to+1)& (0+255),b
  3757  0022F6  0E6F               	movlw	low _stringValue
  3758  0022F8  6F62               	movwf	strncat@from& (0+255),b
  3759  0022FA  0E01               	movlw	high _stringValue
  3760  0022FC  6F63               	movwf	(strncat@from+1)& (0+255),b
  3761  0022FE  C1F9  F064         	movff	_stringValueLength,strncat@size
  3762  002302  6B65               	clrf	(strncat@size+1)& (0+255),b
  3763  002304  EC2B  F042         	call	_strncat	;wreg free
  3764                           
  3765                           ;acuadori.c: 58: sensorsStringLength += 1 + stringValueLength;
  3766  002308  0101               	movlb	1	; () banked
  3767  00230A  29F9               	incf	_stringValueLength& (0+255),w,b
  3768  00230C  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3769                           
  3770                           ; BSR set to: 1
  3771                           ;acuadori.c: 61: GPIODigitalWrite(0x04, 1);
  3772  00230E  0E01               	movlw	1
  3773  002310  0100               	movlb	0	; () banked
  3774  002312  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3775  002314  0E04               	movlw	4
  3776  002316  ECD5  F036         	call	_GPIODigitalWrite
  3777                           
  3778                           ;acuadori.c: 62: GPIODigitalWrite(0x00, 0);
  3779  00231A  0E00               	movlw	0
  3780  00231C  0100               	movlb	0	; () banked
  3781  00231E  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3782  002320  0E00               	movlw	0
  3783  002322  ECD5  F036         	call	_GPIODigitalWrite
  3784                           
  3785                           ;acuadori.c: 64: clip = 1;
  3786  002326  0E01               	movlw	1
  3787  002328  0101               	movlb	1	; () banked
  3788  00232A  6F23               	movwf	_clip& (0+255),b
  3789                           
  3790                           ; BSR set to: 1
  3791                           ;acuadori.c: 66: rn2483_delaysec(10);
  3792  00232C  0E00               	movlw	0
  3793  00232E  0100               	movlb	0	; () banked
  3794  002330  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3795  002332  0E0A               	movlw	10
  3796  002334  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3797  002336  ECB1  F04C         	call	_rn2483_delaysec	;wreg free
  3798                           
  3799                           ;acuadori.c: 67: tempSensAcquisition();
  3800  00233A  ECF3  F047         	call	_tempSensAcquisition	;wreg free
  3801                           
  3802                           ;acuadori.c: 68: strncat(sensorsString, "T", 1);
  3803  00233E  0EA0               	movlw	low _sensorsString
  3804  002340  0100               	movlb	0	; () banked
  3805  002342  6F60               	movwf	strncat@to& (0+255),b
  3806  002344  0E03               	movlw	high _sensorsString
  3807  002346  6F61               	movwf	(strncat@to+1)& (0+255),b
  3808  002348  0EFD               	movlw	low STR_3
  3809  00234A  6F62               	movwf	strncat@from& (0+255),b
  3810  00234C  0EFF               	movlw	high STR_3
  3811  00234E  6F63               	movwf	(strncat@from+1)& (0+255),b
  3812  002350  0E00               	movlw	0
  3813  002352  6F65               	movwf	(strncat@size+1)& (0+255),b
  3814  002354  0E01               	movlw	1
  3815  002356  6F64               	movwf	strncat@size& (0+255),b
  3816  002358  EC2B  F042         	call	_strncat	;wreg free
  3817                           
  3818                           ;acuadori.c: 69: strncat(sensorsString, stringValue, stringValueLength);
  3819  00235C  0EA0               	movlw	low _sensorsString
  3820  00235E  0100               	movlb	0	; () banked
  3821  002360  6F60               	movwf	strncat@to& (0+255),b
  3822  002362  0E03               	movlw	high _sensorsString
  3823  002364  6F61               	movwf	(strncat@to+1)& (0+255),b
  3824  002366  0E6F               	movlw	low _stringValue
  3825  002368  6F62               	movwf	strncat@from& (0+255),b
  3826  00236A  0E01               	movlw	high _stringValue
  3827  00236C  6F63               	movwf	(strncat@from+1)& (0+255),b
  3828  00236E  C1F9  F064         	movff	_stringValueLength,strncat@size
  3829  002372  6B65               	clrf	(strncat@size+1)& (0+255),b
  3830  002374  EC2B  F042         	call	_strncat	;wreg free
  3831                           
  3832                           ;acuadori.c: 70: sensorsStringLength += 1 + stringValueLength;
  3833  002378  0101               	movlb	1	; () banked
  3834  00237A  29F9               	incf	_stringValueLength& (0+255),w,b
  3835  00237C  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3836                           
  3837                           ; BSR set to: 1
  3838                           ;acuadori.c: 73: lightSensAcquisition();
  3839  00237E  EC9F  F04A         	call	_lightSensAcquisition	;wreg free
  3840                           
  3841                           ;acuadori.c: 74: strncat(sensorsString, "L", 1);
  3842  002382  0EA0               	movlw	low _sensorsString
  3843  002384  0100               	movlb	0	; () banked
  3844  002386  6F60               	movwf	strncat@to& (0+255),b
  3845  002388  0E03               	movlw	high _sensorsString
  3846  00238A  6F61               	movwf	(strncat@to+1)& (0+255),b
  3847  00238C  0EFB               	movlw	low STR_4
  3848  00238E  6F62               	movwf	strncat@from& (0+255),b
  3849  002390  0EFF               	movlw	high STR_4
  3850  002392  6F63               	movwf	(strncat@from+1)& (0+255),b
  3851  002394  0E00               	movlw	0
  3852  002396  6F65               	movwf	(strncat@size+1)& (0+255),b
  3853  002398  0E01               	movlw	1
  3854  00239A  6F64               	movwf	strncat@size& (0+255),b
  3855  00239C  EC2B  F042         	call	_strncat	;wreg free
  3856                           
  3857                           ;acuadori.c: 75: strncat(sensorsString, stringValue, stringValueLength);
  3858  0023A0  0EA0               	movlw	low _sensorsString
  3859  0023A2  0100               	movlb	0	; () banked
  3860  0023A4  6F60               	movwf	strncat@to& (0+255),b
  3861  0023A6  0E03               	movlw	high _sensorsString
  3862  0023A8  6F61               	movwf	(strncat@to+1)& (0+255),b
  3863  0023AA  0E6F               	movlw	low _stringValue
  3864  0023AC  6F62               	movwf	strncat@from& (0+255),b
  3865  0023AE  0E01               	movlw	high _stringValue
  3866  0023B0  6F63               	movwf	(strncat@from+1)& (0+255),b
  3867  0023B2  C1F9  F064         	movff	_stringValueLength,strncat@size
  3868  0023B6  6B65               	clrf	(strncat@size+1)& (0+255),b
  3869  0023B8  EC2B  F042         	call	_strncat	;wreg free
  3870                           
  3871                           ;acuadori.c: 76: sensorsStringLength += 1 + stringValueLength;
  3872  0023BC  0101               	movlb	1	; () banked
  3873  0023BE  29F9               	incf	_stringValueLength& (0+255),w,b
  3874  0023C0  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3875                           
  3876                           ;acuadori.c: 79: impedenceAcquisition();
  3877  0023C2  EC89  F04D         	call	_impedenceAcquisition	;wreg free
  3878                           
  3879                           ;acuadori.c: 81: strncat(sensorsString, "C", 1);
  3880  0023C6  0EA0               	movlw	low _sensorsString
  3881  0023C8  0100               	movlb	0	; () banked
  3882  0023CA  6F60               	movwf	strncat@to& (0+255),b
  3883  0023CC  0E03               	movlw	high _sensorsString
  3884  0023CE  6F61               	movwf	(strncat@to+1)& (0+255),b
  3885  0023D0  0EF9               	movlw	low STR_5
  3886  0023D2  6F62               	movwf	strncat@from& (0+255),b
  3887  0023D4  0EFF               	movlw	high STR_5
  3888  0023D6  6F63               	movwf	(strncat@from+1)& (0+255),b
  3889  0023D8  0E00               	movlw	0
  3890  0023DA  6F65               	movwf	(strncat@size+1)& (0+255),b
  3891  0023DC  0E01               	movlw	1
  3892  0023DE  6F64               	movwf	strncat@size& (0+255),b
  3893  0023E0  EC2B  F042         	call	_strncat	;wreg free
  3894                           
  3895                           ;acuadori.c: 82: strncat(sensorsString, stringValue, stringValueLength);
  3896  0023E4  0EA0               	movlw	low _sensorsString
  3897  0023E6  0100               	movlb	0	; () banked
  3898  0023E8  6F60               	movwf	strncat@to& (0+255),b
  3899  0023EA  0E03               	movlw	high _sensorsString
  3900  0023EC  6F61               	movwf	(strncat@to+1)& (0+255),b
  3901  0023EE  0E6F               	movlw	low _stringValue
  3902  0023F0  6F62               	movwf	strncat@from& (0+255),b
  3903  0023F2  0E01               	movlw	high _stringValue
  3904  0023F4  6F63               	movwf	(strncat@from+1)& (0+255),b
  3905  0023F6  C1F9  F064         	movff	_stringValueLength,strncat@size
  3906  0023FA  6B65               	clrf	(strncat@size+1)& (0+255),b
  3907  0023FC  EC2B  F042         	call	_strncat	;wreg free
  3908                           
  3909                           ;acuadori.c: 83: sensorsStringLength += 1 + stringValueLength;
  3910  002400  0101               	movlb	1	; () banked
  3911  002402  29F9               	incf	_stringValueLength& (0+255),w,b
  3912  002404  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3913                           
  3914                           ; BSR set to: 1
  3915                           ;acuadori.c: 86: GPIODigitalWrite(0x04, 1);
  3916  002406  0E01               	movlw	1
  3917  002408  0100               	movlb	0	; () banked
  3918  00240A  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3919  00240C  0E04               	movlw	4
  3920  00240E  ECD5  F036         	call	_GPIODigitalWrite
  3921                           
  3922                           ;acuadori.c: 87: GPIODigitalWrite(0x00, 1);
  3923  002412  0E01               	movlw	1
  3924  002414  0100               	movlb	0	; () banked
  3925  002416  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3926  002418  0E00               	movlw	0
  3927  00241A  ECD5  F036         	call	_GPIODigitalWrite
  3928                           
  3929                           ;acuadori.c: 88: clip = 2;
  3930  00241E  0E02               	movlw	2
  3931  002420  0101               	movlb	1	; () banked
  3932  002422  6F23               	movwf	_clip& (0+255),b
  3933                           
  3934                           ; BSR set to: 1
  3935                           ;acuadori.c: 89: rn2483_delaysec(10);
  3936  002424  0E00               	movlw	0
  3937  002426  0100               	movlb	0	; () banked
  3938  002428  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3939  00242A  0E0A               	movlw	10
  3940  00242C  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3941  00242E  ECB1  F04C         	call	_rn2483_delaysec	;wreg free
  3942                           
  3943                           ;acuadori.c: 90: tempSensAcquisition();
  3944  002432  ECF3  F047         	call	_tempSensAcquisition	;wreg free
  3945                           
  3946                           ;acuadori.c: 91: strncat(sensorsString, "T", 1);
  3947  002436  0EA0               	movlw	low _sensorsString
  3948  002438  0100               	movlb	0	; () banked
  3949  00243A  6F60               	movwf	strncat@to& (0+255),b
  3950  00243C  0E03               	movlw	high _sensorsString
  3951  00243E  6F61               	movwf	(strncat@to+1)& (0+255),b
  3952  002440  0EFD               	movlw	low STR_3
  3953  002442  6F62               	movwf	strncat@from& (0+255),b
  3954  002444  0EFF               	movlw	high STR_3
  3955  002446  6F63               	movwf	(strncat@from+1)& (0+255),b
  3956  002448  0E00               	movlw	0
  3957  00244A  6F65               	movwf	(strncat@size+1)& (0+255),b
  3958  00244C  0E01               	movlw	1
  3959  00244E  6F64               	movwf	strncat@size& (0+255),b
  3960  002450  EC2B  F042         	call	_strncat	;wreg free
  3961                           
  3962                           ;acuadori.c: 92: strncat(sensorsString, stringValue, stringValueLength);
  3963  002454  0EA0               	movlw	low _sensorsString
  3964  002456  0100               	movlb	0	; () banked
  3965  002458  6F60               	movwf	strncat@to& (0+255),b
  3966  00245A  0E03               	movlw	high _sensorsString
  3967  00245C  6F61               	movwf	(strncat@to+1)& (0+255),b
  3968  00245E  0E6F               	movlw	low _stringValue
  3969  002460  6F62               	movwf	strncat@from& (0+255),b
  3970  002462  0E01               	movlw	high _stringValue
  3971  002464  6F63               	movwf	(strncat@from+1)& (0+255),b
  3972  002466  C1F9  F064         	movff	_stringValueLength,strncat@size
  3973  00246A  6B65               	clrf	(strncat@size+1)& (0+255),b
  3974  00246C  EC2B  F042         	call	_strncat	;wreg free
  3975                           
  3976                           ;acuadori.c: 93: sensorsStringLength += 1 + stringValueLength;
  3977  002470  0101               	movlb	1	; () banked
  3978  002472  29F9               	incf	_stringValueLength& (0+255),w,b
  3979  002474  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3980                           
  3981                           ; BSR set to: 1
  3982                           ;acuadori.c: 96: lightSensAcquisition();
  3983  002476  EC9F  F04A         	call	_lightSensAcquisition	;wreg free
  3984                           
  3985                           ;acuadori.c: 97: strncat(sensorsString, "L", 1);
  3986  00247A  0EA0               	movlw	low _sensorsString
  3987  00247C  0100               	movlb	0	; () banked
  3988  00247E  6F60               	movwf	strncat@to& (0+255),b
  3989  002480  0E03               	movlw	high _sensorsString
  3990  002482  6F61               	movwf	(strncat@to+1)& (0+255),b
  3991  002484  0EFB               	movlw	low STR_4
  3992  002486  6F62               	movwf	strncat@from& (0+255),b
  3993  002488  0EFF               	movlw	high STR_4
  3994  00248A  6F63               	movwf	(strncat@from+1)& (0+255),b
  3995  00248C  0E00               	movlw	0
  3996  00248E  6F65               	movwf	(strncat@size+1)& (0+255),b
  3997  002490  0E01               	movlw	1
  3998  002492  6F64               	movwf	strncat@size& (0+255),b
  3999  002494  EC2B  F042         	call	_strncat	;wreg free
  4000                           
  4001                           ;acuadori.c: 98: strncat(sensorsString, stringValue, stringValueLength);
  4002  002498  0EA0               	movlw	low _sensorsString
  4003  00249A  0100               	movlb	0	; () banked
  4004  00249C  6F60               	movwf	strncat@to& (0+255),b
  4005  00249E  0E03               	movlw	high _sensorsString
  4006  0024A0  6F61               	movwf	(strncat@to+1)& (0+255),b
  4007  0024A2  0E6F               	movlw	low _stringValue
  4008  0024A4  6F62               	movwf	strncat@from& (0+255),b
  4009  0024A6  0E01               	movlw	high _stringValue
  4010  0024A8  6F63               	movwf	(strncat@from+1)& (0+255),b
  4011  0024AA  C1F9  F064         	movff	_stringValueLength,strncat@size
  4012  0024AE  6B65               	clrf	(strncat@size+1)& (0+255),b
  4013  0024B0  EC2B  F042         	call	_strncat	;wreg free
  4014                           
  4015                           ;acuadori.c: 99: sensorsStringLength += 1 + stringValueLength;
  4016  0024B4  0101               	movlb	1	; () banked
  4017  0024B6  29F9               	incf	_stringValueLength& (0+255),w,b
  4018  0024B8  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  4019                           
  4020                           ; BSR set to: 1
  4021                           ;acuadori.c: 102: impedenceAcquisition();
  4022  0024BA  EC89  F04D         	call	_impedenceAcquisition	;wreg free
  4023                           
  4024                           ;acuadori.c: 104: strncat(sensorsString, "C", 1);
  4025  0024BE  0EA0               	movlw	low _sensorsString
  4026  0024C0  0100               	movlb	0	; () banked
  4027  0024C2  6F60               	movwf	strncat@to& (0+255),b
  4028  0024C4  0E03               	movlw	high _sensorsString
  4029  0024C6  6F61               	movwf	(strncat@to+1)& (0+255),b
  4030  0024C8  0EF9               	movlw	low STR_5
  4031  0024CA  6F62               	movwf	strncat@from& (0+255),b
  4032  0024CC  0EFF               	movlw	high STR_5
  4033  0024CE  6F63               	movwf	(strncat@from+1)& (0+255),b
  4034  0024D0  0E00               	movlw	0
  4035  0024D2  6F65               	movwf	(strncat@size+1)& (0+255),b
  4036  0024D4  0E01               	movlw	1
  4037  0024D6  6F64               	movwf	strncat@size& (0+255),b
  4038  0024D8  EC2B  F042         	call	_strncat	;wreg free
  4039                           
  4040                           ;acuadori.c: 105: strncat(sensorsString, stringValue, stringValueLength);
  4041  0024DC  0EA0               	movlw	low _sensorsString
  4042  0024DE  0100               	movlb	0	; () banked
  4043  0024E0  6F60               	movwf	strncat@to& (0+255),b
  4044  0024E2  0E03               	movlw	high _sensorsString
  4045  0024E4  6F61               	movwf	(strncat@to+1)& (0+255),b
  4046  0024E6  0E6F               	movlw	low _stringValue
  4047  0024E8  6F62               	movwf	strncat@from& (0+255),b
  4048  0024EA  0E01               	movlw	high _stringValue
  4049  0024EC  6F63               	movwf	(strncat@from+1)& (0+255),b
  4050  0024EE  C1F9  F064         	movff	_stringValueLength,strncat@size
  4051  0024F2  6B65               	clrf	(strncat@size+1)& (0+255),b
  4052  0024F4  EC2B  F042         	call	_strncat	;wreg free
  4053                           
  4054                           ;acuadori.c: 106: sensorsStringLength += 1 + stringValueLength;
  4055  0024F8  0101               	movlb	1	; () banked
  4056  0024FA  29F9               	incf	_stringValueLength& (0+255),w,b
  4057  0024FC  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  4058                           
  4059                           ; BSR set to: 1
  4060                           ;acuadori.c: 109: GPIODigitalWrite(0x16, 1);
  4061  0024FE  0E01               	movlw	1
  4062  002500  0100               	movlb	0	; () banked
  4063  002502  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  4064  002504  0E16               	movlw	22
  4065  002506  ECD5  F036         	call	_GPIODigitalWrite
  4066                           
  4067                           ;acuadori.c: 110: upCnt = LORAWAN_GetUplinkCounter();
  4068  00250A  ECF1  F052         	call	_LORAWAN_GetUplinkCounter	;wreg free
  4069  00250E  C060  F106         	movff	?_LORAWAN_GetUplinkCounter,_upCnt
  4070  002512  C061  F107         	movff	?_LORAWAN_GetUplinkCounter+1,_upCnt+1
  4071  002516  C062  F108         	movff	?_LORAWAN_GetUplinkCounter+2,_upCnt+2
  4072  00251A  C063  F109         	movff	?_LORAWAN_GetUplinkCounter+3,_upCnt+3
  4073                           
  4074                           ;acuadori.c: 111: sendValue();
  4075  00251E  EC30  F047         	call	_sendValue	;wreg free
  4076                           
  4077                           ;acuadori.c: 112: LORAWAN_SetUplinkCounter(upCnt);
  4078  002522  C106  F060         	movff	_upCnt,LORAWAN_SetUplinkCounter@ctr
  4079  002526  C107  F061         	movff	_upCnt+1,LORAWAN_SetUplinkCounter@ctr+1
  4080  00252A  C108  F062         	movff	_upCnt+2,LORAWAN_SetUplinkCounter@ctr+2
  4081  00252E  C109  F063         	movff	_upCnt+3,LORAWAN_SetUplinkCounter@ctr+3
  4082  002532  ECE8  F052         	call	_LORAWAN_SetUplinkCounter	;wreg free
  4083                           
  4084                           ;acuadori.c: 113: sendValue();
  4085  002536  EC30  F047         	call	_sendValue	;wreg free
  4086  00253A  0012               	return		;funcret
  4087  00253C                     __end_of_acuadoriApp:
  4088                           	opt callstack 0
  4089                           
  4090 ;; *************** function _tempSensAcquisition *****************
  4091 ;; Defined at:
  4092 ;;		line 237 in file "acuadori.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  temp            2  102[BANK0 ] unsigned int 
  4097 ;;  value           2  100[BANK0 ] unsigned int 
  4098 ;; Return value:  Size  Location     Type
  4099 ;;                  1    wreg      void 
  4100 ;; Registers used:
  4101 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4102 ;; Tracked objects:
  4103 ;;		On entry : 0/0
  4104 ;;		On exit  : 0/0
  4105 ;;		Unchanged: 0/0
  4106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;Total ram usage:        4 bytes
  4112 ;; Hardware stack levels used:    1
  4113 ;; Hardware stack levels required when called:   11
  4114 ;; This function calls:
  4115 ;;		_GPIOAverageRead
  4116 ;;		_adaptString
  4117 ;;		_pointAddition
  4118 ;;		_tempConversion
  4119 ;;		_uint16ToString
  4120 ;; This function is called by:
  4121 ;;		_acuadoriApp
  4122 ;; This function uses a non-reentrant model
  4123 ;;
  4124                           
  4125                           	psect	text6
  4126  008FE6                     __ptext6:
  4127                           	opt callstack 0
  4128  008FE6                     _tempSensAcquisition:
  4129                           	opt callstack 18
  4130                           
  4131                           ;acuadori.c: 239: uint16_t value;;acuadori.c: 240: uint16_t temp;;acuadori.c: 242: value
      +                           = GPIOAverageRead(0x01);
  4132                           
  4133                           ;incstack = 0
  4134  008FE6  0E01               	movlw	1
  4135  008FE8  ECE9  F043         	call	_GPIOAverageRead
  4136  008FEC  C06D  F0C4         	movff	?_GPIOAverageRead,tempSensAcquisition@value
  4137  008FF0  C06E  F0C5         	movff	?_GPIOAverageRead+1,tempSensAcquisition@value+1
  4138                           
  4139                           ;acuadori.c: 243: temp = tempConversion(value);
  4140  008FF4  C0C4  F0B6         	movff	tempSensAcquisition@value,tempConversion@adcValue
  4141  008FF8  C0C5  F0B7         	movff	tempSensAcquisition@value+1,tempConversion@adcValue+1
  4142  008FFC  EC37  F014         	call	_tempConversion	;wreg free
  4143  009000  C0B6  F0C6         	movff	?_tempConversion,tempSensAcquisition@temp
  4144  009004  C0B7  F0C7         	movff	?_tempConversion+1,tempSensAcquisition@temp+1
  4145                           
  4146                           ;acuadori.c: 245: uint16ToString(temp, stringValue);
  4147  009008  C0C6  F0A5         	movff	tempSensAcquisition@temp,uint16ToString@value
  4148  00900C  C0C7  F0A6         	movff	tempSensAcquisition@temp+1,uint16ToString@value+1
  4149  009010  0E6F               	movlw	low _stringValue
  4150  009012  0100               	movlb	0	; () banked
  4151  009014  6FA7               	movwf	uint16ToString@output& (0+255),b
  4152  009016  0E01               	movlw	high _stringValue
  4153  009018  6FA8               	movwf	(uint16ToString@output+1)& (0+255),b
  4154  00901A  EC87  F02C         	call	_uint16ToString	;wreg free
  4155                           
  4156                           ;acuadori.c: 246: pointAddition(stringValue);
  4157  00901E  0E6F               	movlw	low _stringValue
  4158  009020  0100               	movlb	0	; () banked
  4159  009022  6F60               	movwf	pointAddition@element& (0+255),b
  4160  009024  0E01               	movlw	high _stringValue
  4161  009026  6F61               	movwf	(pointAddition@element+1)& (0+255),b
  4162  009028  EC5B  F04B         	call	_pointAddition	;wreg free
  4163                           
  4164                           ;acuadori.c: 247: stringValueLength = adaptString(stringValue, 5);
  4165  00902C  0E6F               	movlw	low _stringValue
  4166  00902E  0100               	movlb	0	; () banked
  4167  009030  6F60               	movwf	adaptString@string& (0+255),b
  4168  009032  0E01               	movlw	high _stringValue
  4169  009034  6F61               	movwf	(adaptString@string+1)& (0+255),b
  4170  009036  0E05               	movlw	5
  4171  009038  6F62               	movwf	adaptString@length& (0+255),b
  4172  00903A  EC62  F044         	call	_adaptString	;wreg free
  4173  00903E  0101               	movlb	1	; () banked
  4174  009040  6FF9               	movwf	_stringValueLength& (0+255),b
  4175                           
  4176                           ; BSR set to: 1
  4177  009042  0012               	return		;funcret
  4178  009044                     __end_of_tempSensAcquisition:
  4179                           	opt callstack 0
  4180                           
  4181 ;; *************** function _tempConversion *****************
  4182 ;; Defined at:
  4183 ;;		line 254 in file "acuadori.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  adcValue        2   86[BANK0 ] unsigned int 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  temp            4   96[BANK0 ] float 
  4188 ;;  val             4   92[BANK0 ] float 
  4189 ;;  rTemp           2    0        unsigned int 
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  2   86[BANK0 ] unsigned int 
  4192 ;; Registers used:
  4193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 0/0
  4196 ;;		On exit  : 0/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4202 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4203 ;;Total ram usage:       14 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:   10
  4206 ;; This function calls:
  4207 ;;		___fladd
  4208 ;;		___fldiv
  4209 ;;		___flmul
  4210 ;;		___flsub
  4211 ;;		___fltol
  4212 ;;		___xxtofl
  4213 ;;		_log
  4214 ;; This function is called by:
  4215 ;;		_tempSensAcquisition
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text7
  4220  00286E                     __ptext7:
  4221                           	opt callstack 0
  4222  00286E                     _tempConversion:
  4223                           	opt callstack 18
  4224                           
  4225                           ;acuadori.c: 255: float val;;acuadori.c: 256: uint16_t rTemp;;acuadori.c: 257: float tem
      +                          p;;acuadori.c: 258: val = 3.3 * adcValue/1023;
  4226                           
  4227                           ; BSR set to: 1
  4228                           ;incstack = 0
  4229  00286E  0E33               	movlw	51
  4230  002870  0100               	movlb	0	; () banked
  4231  002872  6F88               	movwf	___flmul@a& (0+255),b
  4232  002874  0E33               	movlw	51
  4233  002876  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4234  002878  0E53               	movlw	83
  4235  00287A  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4236  00287C  0E40               	movlw	64
  4237  00287E  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4238  002880  C0B6  F060         	movff	tempConversion@adcValue,___xxtofl@val
  4239  002884  C0B7  F061         	movff	tempConversion@adcValue+1,___xxtofl@val+1
  4240  002888  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  4241  00288A  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  4242  00288C  0E00               	movlw	0
  4243  00288E  ECE5  F02B         	call	___xxtofl
  4244  002892  C060  F084         	movff	?___xxtofl,___flmul@b
  4245  002896  C061  F085         	movff	?___xxtofl+1,___flmul@b+1
  4246  00289A  C062  F086         	movff	?___xxtofl+2,___flmul@b+2
  4247  00289E  C063  F087         	movff	?___xxtofl+3,___flmul@b+3
  4248  0028A2  EC5B  F00F         	call	___flmul	;wreg free
  4249  0028A6  C084  F09D         	movff	?___flmul,___fldiv@b
  4250  0028AA  C085  F09E         	movff	?___flmul+1,___fldiv@b+1
  4251  0028AE  C086  F09F         	movff	?___flmul+2,___fldiv@b+2
  4252  0028B2  C087  F0A0         	movff	?___flmul+3,___fldiv@b+3
  4253  0028B6  0E00               	movlw	0
  4254  0028B8  0100               	movlb	0	; () banked
  4255  0028BA  6FA1               	movwf	___fldiv@a& (0+255),b
  4256  0028BC  0EC0               	movlw	192
  4257  0028BE  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  4258  0028C0  0E7F               	movlw	127
  4259  0028C2  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  4260  0028C4  0E44               	movlw	68
  4261  0028C6  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  4262  0028C8  EC25  F01D         	call	___fldiv	;wreg free
  4263  0028CC  C09D  F0BC         	movff	?___fldiv,tempConversion@val
  4264  0028D0  C09E  F0BD         	movff	?___fldiv+1,tempConversion@val+1
  4265  0028D4  C09F  F0BE         	movff	?___fldiv+2,tempConversion@val+2
  4266  0028D8  C0A0  F0BF         	movff	?___fldiv+3,tempConversion@val+3
  4267                           
  4268                           ;acuadori.c: 259: val -= 0.02;
  4269  0028DC  C0BC  F084         	movff	tempConversion@val,___flsub@b
  4270  0028E0  C0BD  F085         	movff	tempConversion@val+1,___flsub@b+1
  4271  0028E4  C0BE  F086         	movff	tempConversion@val+2,___flsub@b+2
  4272  0028E8  C0BF  F087         	movff	tempConversion@val+3,___flsub@b+3
  4273  0028EC  0E0A               	movlw	10
  4274  0028EE  0100               	movlb	0	; () banked
  4275  0028F0  6F88               	movwf	___flsub@a& (0+255),b
  4276  0028F2  0ED7               	movlw	215
  4277  0028F4  6F89               	movwf	(___flsub@a+1)& (0+255),b
  4278  0028F6  0EA3               	movlw	163
  4279  0028F8  6F8A               	movwf	(___flsub@a+2)& (0+255),b
  4280  0028FA  0E3C               	movlw	60
  4281  0028FC  6F8B               	movwf	(___flsub@a+3)& (0+255),b
  4282  0028FE  EC37  F04B         	call	___flsub	;wreg free
  4283  002902  C084  F0BC         	movff	?___flsub,tempConversion@val
  4284  002906  C085  F0BD         	movff	?___flsub+1,tempConversion@val+1
  4285  00290A  C086  F0BE         	movff	?___flsub+2,tempConversion@val+2
  4286  00290E  C087  F0BF         	movff	?___flsub+3,tempConversion@val+3
  4287                           
  4288                           ;acuadori.c: 260: temp = 499 * (val - 1.65) / (1.65 - 3.3);
  4289  002912  0E00               	movlw	0
  4290  002914  0100               	movlb	0	; () banked
  4291  002916  6F88               	movwf	___flmul@a& (0+255),b
  4292  002918  0E80               	movlw	128
  4293  00291A  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4294  00291C  0EF9               	movlw	249
  4295  00291E  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4296  002920  0E43               	movlw	67
  4297  002922  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4298  002924  0E33               	movlw	51
  4299  002926  6F78               	movwf	___fladd@a& (0+255),b
  4300  002928  0E33               	movlw	51
  4301  00292A  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4302  00292C  0ED3               	movlw	211
  4303  00292E  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4304  002930  0EBF               	movlw	191
  4305  002932  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4306  002934  C0BC  F074         	movff	tempConversion@val,___fladd@b
  4307  002938  C0BD  F075         	movff	tempConversion@val+1,___fladd@b+1
  4308  00293C  C0BE  F076         	movff	tempConversion@val+2,___fladd@b+2
  4309  002940  C0BF  F077         	movff	tempConversion@val+3,___fladd@b+3
  4310  002944  ECCD  F015         	call	___fladd	;wreg free
  4311  002948  C074  F084         	movff	?___fladd,___flmul@b
  4312  00294C  C075  F085         	movff	?___fladd+1,___flmul@b+1
  4313  002950  C076  F086         	movff	?___fladd+2,___flmul@b+2
  4314  002954  C077  F087         	movff	?___fladd+3,___flmul@b+3
  4315  002958  EC5B  F00F         	call	___flmul	;wreg free
  4316  00295C  C084  F09D         	movff	?___flmul,___fldiv@b
  4317  002960  C085  F09E         	movff	?___flmul+1,___fldiv@b+1
  4318  002964  C086  F09F         	movff	?___flmul+2,___fldiv@b+2
  4319  002968  C087  F0A0         	movff	?___flmul+3,___fldiv@b+3
  4320  00296C  0E33               	movlw	51
  4321  00296E  0100               	movlb	0	; () banked
  4322  002970  6FA1               	movwf	___fldiv@a& (0+255),b
  4323  002972  0E33               	movlw	51
  4324  002974  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  4325  002976  0ED3               	movlw	211
  4326  002978  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  4327  00297A  0EBF               	movlw	191
  4328  00297C  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  4329  00297E  EC25  F01D         	call	___fldiv	;wreg free
  4330  002982  C09D  F0C0         	movff	?___fldiv,tempConversion@temp
  4331  002986  C09E  F0C1         	movff	?___fldiv+1,tempConversion@temp+1
  4332  00298A  C09F  F0C2         	movff	?___fldiv+2,tempConversion@temp+2
  4333  00298E  C0A0  F0C3         	movff	?___fldiv+3,tempConversion@temp+3
  4334                           
  4335                           ;acuadori.c: 261: val = temp;
  4336  002992  C0C0  F0BC         	movff	tempConversion@temp,tempConversion@val
  4337  002996  C0C1  F0BD         	movff	tempConversion@temp+1,tempConversion@val+1
  4338  00299A  C0C2  F0BE         	movff	tempConversion@temp+2,tempConversion@val+2
  4339  00299E  C0C3  F0BF         	movff	tempConversion@temp+3,tempConversion@val+3
  4340                           
  4341                           ;acuadori.c: 262: val /=100;
  4342  0029A2  C0BC  F09D         	movff	tempConversion@val,___fldiv@b
  4343  0029A6  C0BD  F09E         	movff	tempConversion@val+1,___fldiv@b+1
  4344  0029AA  C0BE  F09F         	movff	tempConversion@val+2,___fldiv@b+2
  4345  0029AE  C0BF  F0A0         	movff	tempConversion@val+3,___fldiv@b+3
  4346  0029B2  0E00               	movlw	0
  4347  0029B4  0100               	movlb	0	; () banked
  4348  0029B6  6FA1               	movwf	___fldiv@a& (0+255),b
  4349  0029B8  0E00               	movlw	0
  4350  0029BA  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  4351  0029BC  0EC8               	movlw	200
  4352  0029BE  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  4353  0029C0  0E42               	movlw	66
  4354  0029C2  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  4355  0029C4  EC25  F01D         	call	___fldiv	;wreg free
  4356  0029C8  C09D  F0BC         	movff	?___fldiv,tempConversion@val
  4357  0029CC  C09E  F0BD         	movff	?___fldiv+1,tempConversion@val+1
  4358  0029D0  C09F  F0BE         	movff	?___fldiv+2,tempConversion@val+2
  4359  0029D4  C0A0  F0BF         	movff	?___fldiv+3,tempConversion@val+3
  4360                           
  4361                           ;acuadori.c: 263: temp = 0.074533 * log(val);
  4362  0029D8  C0BC  F0AD         	movff	tempConversion@val,log@x
  4363  0029DC  C0BD  F0AE         	movff	tempConversion@val+1,log@x+1
  4364  0029E0  C0BE  F0AF         	movff	tempConversion@val+2,log@x+2
  4365  0029E4  C0BF  F0B0         	movff	tempConversion@val+3,log@x+3
  4366  0029E8  EC48  F026         	call	_log	;wreg free
  4367  0029EC  C0AD  F0B8         	movff	?_log,_tempConversion$6793
  4368  0029F0  C0AE  F0B9         	movff	?_log+1,_tempConversion$6793+1
  4369  0029F4  C0AF  F0BA         	movff	?_log+2,_tempConversion$6793+2
  4370  0029F8  C0B0  F0BB         	movff	?_log+3,_tempConversion$6793+3
  4371                           
  4372                           ;acuadori.c: 263: temp = 0.074533 * log(val);
  4373  0029FC  C0B8  F084         	movff	_tempConversion$6793,___flmul@b
  4374  002A00  C0B9  F085         	movff	_tempConversion$6793+1,___flmul@b+1
  4375  002A04  C0BA  F086         	movff	_tempConversion$6793+2,___flmul@b+2
  4376  002A08  C0BB  F087         	movff	_tempConversion$6793+3,___flmul@b+3
  4377  002A0C  0EC2               	movlw	194
  4378  002A0E  0100               	movlb	0	; () banked
  4379  002A10  6F88               	movwf	___flmul@a& (0+255),b
  4380  002A12  0EA4               	movlw	164
  4381  002A14  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4382  002A16  0E98               	movlw	152
  4383  002A18  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4384  002A1A  0E3D               	movlw	61
  4385  002A1C  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4386  002A1E  EC5B  F00F         	call	___flmul	;wreg free
  4387  002A22  C084  F0C0         	movff	?___flmul,tempConversion@temp
  4388  002A26  C085  F0C1         	movff	?___flmul+1,tempConversion@temp+1
  4389  002A2A  C086  F0C2         	movff	?___flmul+2,tempConversion@temp+2
  4390  002A2E  C087  F0C3         	movff	?___flmul+3,tempConversion@temp+3
  4391                           
  4392                           ;acuadori.c: 264: temp++;
  4393  002A32  C0C0  F074         	movff	tempConversion@temp,___fladd@b
  4394  002A36  C0C1  F075         	movff	tempConversion@temp+1,___fladd@b+1
  4395  002A3A  C0C2  F076         	movff	tempConversion@temp+2,___fladd@b+2
  4396  002A3E  C0C3  F077         	movff	tempConversion@temp+3,___fladd@b+3
  4397  002A42  0E00               	movlw	0
  4398  002A44  0100               	movlb	0	; () banked
  4399  002A46  6F78               	movwf	___fladd@a& (0+255),b
  4400  002A48  0E00               	movlw	0
  4401  002A4A  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4402  002A4C  0E80               	movlw	128
  4403  002A4E  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4404  002A50  0E3F               	movlw	63
  4405  002A52  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4406  002A54  ECCD  F015         	call	___fladd	;wreg free
  4407  002A58  C074  F0C0         	movff	?___fladd,tempConversion@temp
  4408  002A5C  C075  F0C1         	movff	?___fladd+1,tempConversion@temp+1
  4409  002A60  C076  F0C2         	movff	?___fladd+2,tempConversion@temp+2
  4410  002A64  C077  F0C3         	movff	?___fladd+3,tempConversion@temp+3
  4411                           
  4412                           ;acuadori.c: 265: temp = 298.15 / temp;
  4413  002A68  0E33               	movlw	51
  4414  002A6A  0100               	movlb	0	; () banked
  4415  002A6C  6F9D               	movwf	___fldiv@b& (0+255),b
  4416  002A6E  0E13               	movlw	19
  4417  002A70  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  4418  002A72  0E95               	movlw	149
  4419  002A74  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  4420  002A76  0E43               	movlw	67
  4421  002A78  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  4422  002A7A  C0C0  F0A1         	movff	tempConversion@temp,___fldiv@a
  4423  002A7E  C0C1  F0A2         	movff	tempConversion@temp+1,___fldiv@a+1
  4424  002A82  C0C2  F0A3         	movff	tempConversion@temp+2,___fldiv@a+2
  4425  002A86  C0C3  F0A4         	movff	tempConversion@temp+3,___fldiv@a+3
  4426  002A8A  EC25  F01D         	call	___fldiv	;wreg free
  4427  002A8E  C09D  F0C0         	movff	?___fldiv,tempConversion@temp
  4428  002A92  C09E  F0C1         	movff	?___fldiv+1,tempConversion@temp+1
  4429  002A96  C09F  F0C2         	movff	?___fldiv+2,tempConversion@temp+2
  4430  002A9A  C0A0  F0C3         	movff	?___fldiv+3,tempConversion@temp+3
  4431                           
  4432                           ;acuadori.c: 266: temp -= 273.15;
  4433  002A9E  C0C0  F084         	movff	tempConversion@temp,___flsub@b
  4434  002AA2  C0C1  F085         	movff	tempConversion@temp+1,___flsub@b+1
  4435  002AA6  C0C2  F086         	movff	tempConversion@temp+2,___flsub@b+2
  4436  002AAA  C0C3  F087         	movff	tempConversion@temp+3,___flsub@b+3
  4437  002AAE  0E33               	movlw	51
  4438  002AB0  0100               	movlb	0	; () banked
  4439  002AB2  6F88               	movwf	___flsub@a& (0+255),b
  4440  002AB4  0E93               	movlw	147
  4441  002AB6  6F89               	movwf	(___flsub@a+1)& (0+255),b
  4442  002AB8  0E88               	movlw	136
  4443  002ABA  6F8A               	movwf	(___flsub@a+2)& (0+255),b
  4444  002ABC  0E43               	movlw	67
  4445  002ABE  6F8B               	movwf	(___flsub@a+3)& (0+255),b
  4446  002AC0  EC37  F04B         	call	___flsub	;wreg free
  4447  002AC4  C084  F0C0         	movff	?___flsub,tempConversion@temp
  4448  002AC8  C085  F0C1         	movff	?___flsub+1,tempConversion@temp+1
  4449  002ACC  C086  F0C2         	movff	?___flsub+2,tempConversion@temp+2
  4450  002AD0  C087  F0C3         	movff	?___flsub+3,tempConversion@temp+3
  4451                           
  4452                           ;acuadori.c: 267: temp *= 10;
  4453  002AD4  C0C0  F084         	movff	tempConversion@temp,___flmul@b
  4454  002AD8  C0C1  F085         	movff	tempConversion@temp+1,___flmul@b+1
  4455  002ADC  C0C2  F086         	movff	tempConversion@temp+2,___flmul@b+2
  4456  002AE0  C0C3  F087         	movff	tempConversion@temp+3,___flmul@b+3
  4457  002AE4  0E00               	movlw	0
  4458  002AE6  0100               	movlb	0	; () banked
  4459  002AE8  6F88               	movwf	___flmul@a& (0+255),b
  4460  002AEA  0E00               	movlw	0
  4461  002AEC  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4462  002AEE  0E20               	movlw	32
  4463  002AF0  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4464  002AF2  0E41               	movlw	65
  4465  002AF4  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4466  002AF6  EC5B  F00F         	call	___flmul	;wreg free
  4467  002AFA  C084  F0C0         	movff	?___flmul,tempConversion@temp
  4468  002AFE  C085  F0C1         	movff	?___flmul+1,tempConversion@temp+1
  4469  002B02  C086  F0C2         	movff	?___flmul+2,tempConversion@temp+2
  4470  002B06  C087  F0C3         	movff	?___flmul+3,tempConversion@temp+3
  4471                           
  4472                           ;acuadori.c: 269: switch(clip){
  4473  002B0A  D030               	goto	l16172
  4474  002B0C                     l16166:
  4475                           
  4476                           ; BSR set to: 1
  4477                           ;acuadori.c: 272: temp += 16;
  4478  002B0C  C0C0  F074         	movff	tempConversion@temp,___fladd@b
  4479  002B10  C0C1  F075         	movff	tempConversion@temp+1,___fladd@b+1
  4480  002B14  C0C2  F076         	movff	tempConversion@temp+2,___fladd@b+2
  4481  002B18  C0C3  F077         	movff	tempConversion@temp+3,___fladd@b+3
  4482  002B1C  0E00               	movlw	0
  4483  002B1E  0100               	movlb	0	; () banked
  4484  002B20  6F78               	movwf	___fladd@a& (0+255),b
  4485  002B22  0E00               	movlw	0
  4486  002B24  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4487  002B26  0E80               	movlw	128
  4488  002B28  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4489  002B2A  0E41               	movlw	65
  4490  002B2C  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4491  002B2E  ECCD  F015         	call	___fladd	;wreg free
  4492  002B32  D013               	goto	L1
  4493  002B34                     l16168:
  4494                           
  4495                           ; BSR set to: 1
  4496                           ;acuadori.c: 283: temp += 18;
  4497  002B34  C0C0  F074         	movff	tempConversion@temp,___fladd@b
  4498  002B38  C0C1  F075         	movff	tempConversion@temp+1,___fladd@b+1
  4499  002B3C  C0C2  F076         	movff	tempConversion@temp+2,___fladd@b+2
  4500  002B40  C0C3  F077         	movff	tempConversion@temp+3,___fladd@b+3
  4501  002B44  0E00               	movlw	0
  4502  002B46  0100               	movlb	0	; () banked
  4503  002B48  6F78               	movwf	___fladd@a& (0+255),b
  4504  002B4A  0E00               	movlw	0
  4505  002B4C  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4506  002B4E  0E90               	movlw	144
  4507  002B50  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4508  002B52  0E41               	movlw	65
  4509  002B54  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4510  002B56  ECCD  F015         	call	___fladd	;wreg free
  4511  002B5A                     L1:
  4512  002B5A  C074  F0C0         	movff	?___fladd,tempConversion@temp
  4513  002B5E  C075  F0C1         	movff	?___fladd+1,tempConversion@temp+1
  4514  002B62  C076  F0C2         	movff	?___fladd+2,tempConversion@temp+2
  4515  002B66  C077  F0C3         	movff	?___fladd+3,tempConversion@temp+3
  4516                           
  4517                           ;acuadori.c: 290: break;
  4518  002B6A  D008               	goto	l16174
  4519  002B6C                     l16172:
  4520  002B6C  0101               	movlb	1	; () banked
  4521  002B6E  5123               	movf	_clip& (0+255),w,b
  4522                           
  4523                           ; Switch size 1, requested type "simple"
  4524                           ; Number of cases is 2, Range of values is 1 to 2
  4525                           ; switch strategies available:
  4526                           ; Name         Instructions Cycles
  4527                           ; simple_byte            7     4 (average)
  4528                           ;	Chosen strategy is simple_byte
  4529  002B70  0A01               	xorlw	1	; case 1
  4530  002B72  B4D8               	btfsc	status,2,c
  4531  002B74  D7CB               	goto	l16166
  4532  002B76  0A03               	xorlw	3	; case 2
  4533  002B78  B4D8               	btfsc	status,2,c
  4534  002B7A  D7DC               	goto	l16168
  4535  002B7C                     l16174:
  4536                           
  4537                           ;acuadori.c: 300: return temp;
  4538  002B7C  C0C0  F060         	movff	tempConversion@temp,___fltol@f1
  4539  002B80  C0C1  F061         	movff	tempConversion@temp+1,___fltol@f1+1
  4540  002B84  C0C2  F062         	movff	tempConversion@temp+2,___fltol@f1+2
  4541  002B88  C0C3  F063         	movff	tempConversion@temp+3,___fltol@f1+3
  4542  002B8C  ECA1  F03D         	call	___fltol	;wreg free
  4543  002B90  C060  F0B6         	movff	?___fltol,?_tempConversion
  4544  002B94  C061  F0B7         	movff	?___fltol+1,?_tempConversion+1
  4545  002B98  0012               	return		;funcret
  4546  002B9A                     __end_of_tempConversion:
  4547                           	opt callstack 0
  4548                           
  4549 ;; *************** function _log *****************
  4550 ;; Defined at:
  4551 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\log.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  x               4   77[BANK0 ] unsigned int 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  exponent        2   81[BANK0 ] int 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  4   77[BANK0 ] int 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4565 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;Total ram usage:        6 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    9
  4572 ;; This function calls:
  4573 ;;		___fladd
  4574 ;;		___fleq
  4575 ;;		___flmul
  4576 ;;		___xxtofl
  4577 ;;		_eval_poly
  4578 ;;		_frexp
  4579 ;; This function is called by:
  4580 ;;		_tempConversion
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text8
  4585  004C90                     __ptext8:
  4586                           	opt callstack 0
  4587  004C90                     _log:
  4588                           	opt callstack 18
  4589                           
  4590                           ;incstack = 0
  4591  004C90  0100               	movlb	0	; () banked
  4592  004C92  AFB0               	btfss	(log@x+3)& (0+255),7,b
  4593  004C94  D00F               	goto	l15518
  4594                           
  4595                           ; BSR set to: 0
  4596  004C96  0E00               	movlw	0
  4597  004C98  0101               	movlb	1	; () banked
  4598  004C9A  6F17               	movwf	(_errno+1)& (0+255),b
  4599  004C9C  0E21               	movlw	33
  4600  004C9E  6F16               	movwf	_errno& (0+255),b
  4601  004CA0  0E00               	movlw	0
  4602  004CA2  0100               	movlb	0	; () banked
  4603  004CA4  6FAD               	movwf	?_log& (0+255),b
  4604  004CA6  0E00               	movlw	0
  4605  004CA8  6FAE               	movwf	(?_log+1)& (0+255),b
  4606  004CAA  0E00               	movlw	0
  4607  004CAC  6FAF               	movwf	(?_log+2)& (0+255),b
  4608  004CAE  0E00               	movlw	0
  4609  004CB0  6FB0               	movwf	(?_log+3)& (0+255),b
  4610  004CB2  0012               	return	
  4611  004CB4                     l15518:
  4612                           
  4613                           ; BSR set to: 0
  4614  004CB4  C0AD  F060         	movff	log@x,___fleq@ff1
  4615  004CB8  C0AE  F061         	movff	log@x+1,___fleq@ff1+1
  4616  004CBC  C0AF  F062         	movff	log@x+2,___fleq@ff1+2
  4617  004CC0  C0B0  F063         	movff	log@x+3,___fleq@ff1+3
  4618  004CC4  0E00               	movlw	0
  4619  004CC6  6F64               	movwf	___fleq@ff2& (0+255),b
  4620  004CC8  0E00               	movlw	0
  4621  004CCA  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4622  004CCC  0E00               	movlw	0
  4623  004CCE  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4624  004CD0  0E00               	movlw	0
  4625  004CD2  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4626  004CD4  EC91  F040         	call	___fleq	;wreg free
  4627  004CD8  0100               	movlb	0	; () banked
  4628  004CDA  A0D8               	btfss	status,0,c
  4629  004CDC  D00F               	goto	l15524
  4630                           
  4631                           ; BSR set to: 0
  4632  004CDE  0E00               	movlw	0
  4633  004CE0  0101               	movlb	1	; () banked
  4634  004CE2  6F17               	movwf	(_errno+1)& (0+255),b
  4635  004CE4  0E22               	movlw	34
  4636  004CE6  6F16               	movwf	_errno& (0+255),b
  4637  004CE8  0E00               	movlw	0
  4638  004CEA  0100               	movlb	0	; () banked
  4639  004CEC  6FAD               	movwf	?_log& (0+255),b
  4640  004CEE  0E00               	movlw	0
  4641  004CF0  6FAE               	movwf	(?_log+1)& (0+255),b
  4642  004CF2  0E00               	movlw	0
  4643  004CF4  6FAF               	movwf	(?_log+2)& (0+255),b
  4644  004CF6  0E00               	movlw	0
  4645  004CF8  6FB0               	movwf	(?_log+3)& (0+255),b
  4646  004CFA  0012               	return	
  4647  004CFC                     l15524:
  4648                           
  4649                           ; BSR set to: 0
  4650  004CFC  0E00               	movlw	0
  4651  004CFE  6F88               	movwf	___flmul@a& (0+255),b
  4652  004D00  0E00               	movlw	0
  4653  004D02  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4654  004D04  0E00               	movlw	0
  4655  004D06  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4656  004D08  0E40               	movlw	64
  4657  004D0A  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4658  004D0C  0EB1               	movlw	low log@exponent
  4659  004D0E  6F70               	movwf	frexp@eptr& (0+255),b
  4660  004D10  0E00               	movlw	high log@exponent
  4661  004D12  6F71               	movwf	(frexp@eptr+1)& (0+255),b
  4662  004D14  C0AD  F06C         	movff	log@x,frexp@value
  4663  004D18  C0AE  F06D         	movff	log@x+1,frexp@value+1
  4664  004D1C  C0AF  F06E         	movff	log@x+2,frexp@value+2
  4665  004D20  C0B0  F06F         	movff	log@x+3,frexp@value+3
  4666  004D24  EC5B  F03E         	call	_frexp	;wreg free
  4667  004D28  C06C  F084         	movff	?_frexp,___flmul@b
  4668  004D2C  C06D  F085         	movff	?_frexp+1,___flmul@b+1
  4669  004D30  C06E  F086         	movff	?_frexp+2,___flmul@b+2
  4670  004D34  C06F  F087         	movff	?_frexp+3,___flmul@b+3
  4671  004D38  EC5B  F00F         	call	___flmul	;wreg free
  4672  004D3C  C084  F074         	movff	?___flmul,___fladd@b
  4673  004D40  C085  F075         	movff	?___flmul+1,___fladd@b+1
  4674  004D44  C086  F076         	movff	?___flmul+2,___fladd@b+2
  4675  004D48  C087  F077         	movff	?___flmul+3,___fladd@b+3
  4676  004D4C  0E00               	movlw	0
  4677  004D4E  0100               	movlb	0	; () banked
  4678  004D50  6F78               	movwf	___fladd@a& (0+255),b
  4679  004D52  0E00               	movlw	0
  4680  004D54  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4681  004D56  0E80               	movlw	128
  4682  004D58  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4683  004D5A  0EBF               	movlw	191
  4684  004D5C  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4685  004D5E  ECCD  F015         	call	___fladd	;wreg free
  4686  004D62  C074  F0AD         	movff	?___fladd,log@x
  4687  004D66  C075  F0AE         	movff	?___fladd+1,log@x+1
  4688  004D6A  C076  F0AF         	movff	?___fladd+2,log@x+2
  4689  004D6E  C077  F0B0         	movff	?___fladd+3,log@x+3
  4690  004D72  0100               	movlb	0	; () banked
  4691  004D74  07B1               	decf	log@exponent& (0+255),f,b
  4692  004D76  A0D8               	btfss	status,0,c
  4693  004D78  07B2               	decf	(log@exponent+1)& (0+255),f,b
  4694                           
  4695                           ; BSR set to: 0
  4696  004D7A  C0AD  F09D         	movff	log@x,eval_poly@x
  4697  004D7E  C0AE  F09E         	movff	log@x+1,eval_poly@x+1
  4698  004D82  C0AF  F09F         	movff	log@x+2,eval_poly@x+2
  4699  004D86  C0B0  F0A0         	movff	log@x+3,eval_poly@x+3
  4700  004D8A  0EAA               	movlw	low log@coeff
  4701  004D8C  6FA1               	movwf	eval_poly@d& (0+255),b
  4702  004D8E  0EFF               	movlw	high log@coeff
  4703  004D90  6FA2               	movwf	(eval_poly@d+1)& (0+255),b
  4704  004D92  0E00               	movlw	0
  4705  004D94  6FA4               	movwf	(eval_poly@n+1)& (0+255),b
  4706  004D96  0E08               	movlw	8
  4707  004D98  6FA3               	movwf	eval_poly@n& (0+255),b
  4708  004D9A  EC5B  F035         	call	_eval_poly	;wreg free
  4709  004D9E  C09D  F0AD         	movff	?_eval_poly,log@x
  4710  004DA2  C09E  F0AE         	movff	?_eval_poly+1,log@x+1
  4711  004DA6  C09F  F0AF         	movff	?_eval_poly+2,log@x+2
  4712  004DAA  C0A0  F0B0         	movff	?_eval_poly+3,log@x+3
  4713  004DAE  0E18               	movlw	24
  4714  004DB0  0100               	movlb	0	; () banked
  4715  004DB2  6F88               	movwf	___flmul@a& (0+255),b
  4716  004DB4  0E72               	movlw	114
  4717  004DB6  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4718  004DB8  0E31               	movlw	49
  4719  004DBA  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4720  004DBC  0E3F               	movlw	63
  4721  004DBE  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4722  004DC0  C0B1  F060         	movff	log@exponent,___xxtofl@val
  4723  004DC4  C0B2  F061         	movff	log@exponent+1,___xxtofl@val+1
  4724  004DC8  0E00               	movlw	0
  4725  004DCA  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  4726  004DCC  0EFF               	movlw	-1
  4727  004DCE  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  4728  004DD0  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  4729  004DD2  0E01               	movlw	1
  4730  004DD4  ECE5  F02B         	call	___xxtofl
  4731  004DD8  C060  F084         	movff	?___xxtofl,___flmul@b
  4732  004DDC  C061  F085         	movff	?___xxtofl+1,___flmul@b+1
  4733  004DE0  C062  F086         	movff	?___xxtofl+2,___flmul@b+2
  4734  004DE4  C063  F087         	movff	?___xxtofl+3,___flmul@b+3
  4735  004DE8  EC5B  F00F         	call	___flmul	;wreg free
  4736  004DEC  C084  F074         	movff	?___flmul,___fladd@b
  4737  004DF0  C085  F075         	movff	?___flmul+1,___fladd@b+1
  4738  004DF4  C086  F076         	movff	?___flmul+2,___fladd@b+2
  4739  004DF8  C087  F077         	movff	?___flmul+3,___fladd@b+3
  4740  004DFC  C0AD  F078         	movff	log@x,___fladd@a
  4741  004E00  C0AE  F079         	movff	log@x+1,___fladd@a+1
  4742  004E04  C0AF  F07A         	movff	log@x+2,___fladd@a+2
  4743  004E08  C0B0  F07B         	movff	log@x+3,___fladd@a+3
  4744  004E0C  ECCD  F015         	call	___fladd	;wreg free
  4745  004E10  C074  F0AD         	movff	?___fladd,?_log
  4746  004E14  C075  F0AE         	movff	?___fladd+1,?_log+1
  4747  004E18  C076  F0AF         	movff	?___fladd+2,?_log+2
  4748  004E1C  C077  F0B0         	movff	?___fladd+3,?_log+3
  4749  004E20  0012               	return		;funcret
  4750  004E22                     __end_of_log:
  4751                           	opt callstack 0
  4752                           
  4753 ;; *************** function _frexp *****************
  4754 ;; Defined at:
  4755 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\frexp.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  value           4   12[BANK0 ] int 
  4758 ;;  eptr            2   16[BANK0 ] PTR int 
  4759 ;;		 -> floor@expon(2), log@exponent(2), 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  4   12[BANK0 ] PTR int 
  4764 ;; Registers used:
  4765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4771 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;Total ram usage:        8 bytes
  4776 ;; Hardware stack levels used:    1
  4777 ;; Hardware stack levels required when called:    8
  4778 ;; This function calls:
  4779 ;;		___fleq
  4780 ;; This function is called by:
  4781 ;;		_log
  4782 ;;		_floor
  4783 ;; This function uses a non-reentrant model
  4784 ;;
  4785                           
  4786                           	psect	text9
  4787  007CB6                     __ptext9:
  4788                           	opt callstack 0
  4789  007CB6                     _frexp:
  4790                           	opt callstack 18
  4791                           
  4792                           ;incstack = 0
  4793  007CB6  C06C  F060         	movff	frexp@value,___fleq@ff1
  4794  007CBA  C06D  F061         	movff	frexp@value+1,___fleq@ff1+1
  4795  007CBE  C06E  F062         	movff	frexp@value+2,___fleq@ff1+2
  4796  007CC2  C06F  F063         	movff	frexp@value+3,___fleq@ff1+3
  4797  007CC6  0E00               	movlw	0
  4798  007CC8  0100               	movlb	0	; () banked
  4799  007CCA  6F64               	movwf	___fleq@ff2& (0+255),b
  4800  007CCC  0E00               	movlw	0
  4801  007CCE  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4802  007CD0  0E00               	movlw	0
  4803  007CD2  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4804  007CD4  0E00               	movlw	0
  4805  007CD6  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4806  007CD8  EC91  F040         	call	___fleq	;wreg free
  4807  007CDC  0100               	movlb	0	; () banked
  4808  007CDE  A0D8               	btfss	status,0,c
  4809  007CE0  D011               	goto	l15246
  4810                           
  4811                           ; BSR set to: 0
  4812  007CE2  C070  FFD9         	movff	frexp@eptr,fsr2l
  4813  007CE6  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4814  007CEA  0E00               	movlw	0
  4815  007CEC  6EDE               	movwf	postinc2,c
  4816  007CEE  0E00               	movlw	0
  4817  007CF0  6EDD               	movwf	postdec2,c
  4818                           
  4819                           ; BSR set to: 0
  4820  007CF2  0E00               	movlw	0
  4821  007CF4  6F6C               	movwf	?_frexp& (0+255),b
  4822  007CF6  0E00               	movlw	0
  4823  007CF8  6F6D               	movwf	(?_frexp+1)& (0+255),b
  4824  007CFA  0E00               	movlw	0
  4825  007CFC  6F6E               	movwf	(?_frexp+2)& (0+255),b
  4826  007CFE  0E00               	movlw	0
  4827  007D00  6F6F               	movwf	(?_frexp+3)& (0+255),b
  4828  007D02  0012               	return	
  4829  007D04                     l15246:
  4830                           
  4831                           ; BSR set to: 0
  4832  007D04  516F               	movf	(frexp@value+3)& (0+255),w,b
  4833  007D06  0B7F               	andlw	127
  4834  007D08  6F72               	movwf	??_frexp& (0+255),b
  4835  007D0A  6B73               	clrf	(??_frexp+1)& (0+255),b
  4836  007D0C  90D8               	bcf	status,0,c
  4837  007D0E  3772               	rlcf	??_frexp& (0+255),f,b
  4838  007D10  3773               	rlcf	(??_frexp+1)& (0+255),f,b
  4839  007D12  C070  FFD9         	movff	frexp@eptr,fsr2l
  4840  007D16  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4841  007D1A  C072  FFDE         	movff	??_frexp,postinc2
  4842  007D1E  C073  FFDD         	movff	??_frexp+1,postdec2
  4843  007D22  AF6E               	btfss	(frexp@value+2)& (0+255),7,b
  4844  007D24  D003               	goto	u15690
  4845  007D26  6B72               	clrf	??_frexp& (0+255),b
  4846  007D28  2B72               	incf	??_frexp& (0+255),f,b
  4847  007D2A  D002               	goto	u15698
  4848  007D2C                     u15690:
  4849  007D2C  0100               	movlb	0	; () banked
  4850  007D2E  6B72               	clrf	??_frexp& (0+255),b
  4851  007D30                     u15698:
  4852  007D30  5172               	movf	??_frexp& (0+255),w,b
  4853  007D32  C070  FFD9         	movff	frexp@eptr,fsr2l
  4854  007D36  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4855  007D3A  12DE               	iorwf	postinc2,f,c
  4856  007D3C  0E00               	movlw	0
  4857  007D3E  12DD               	iorwf	postdec2,f,c
  4858                           
  4859                           ; BSR set to: 0
  4860  007D40  C070  FFD9         	movff	frexp@eptr,fsr2l
  4861  007D44  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4862  007D48  0E82               	movlw	130
  4863  007D4A  26DE               	addwf	postinc2,f,c
  4864  007D4C  0EFF               	movlw	255
  4865  007D4E  22DD               	addwfc	postdec2,f,c
  4866                           
  4867                           ; BSR set to: 0
  4868  007D50  516F               	movf	(frexp@value+3)& (0+255),w,b
  4869  007D52  0B80               	andlw	-128
  4870  007D54  093F               	iorlw	63
  4871  007D56  6F6F               	movwf	(frexp@value+3)& (0+255),b
  4872                           
  4873                           ; BSR set to: 0
  4874  007D58  9F6E               	bcf	(frexp@value+2)& (0+255),7,b
  4875                           
  4876                           ; BSR set to: 0
  4877  007D5A  C06C  F06C         	movff	frexp@value,?_frexp
  4878  007D5E  C06D  F06D         	movff	frexp@value+1,?_frexp+1
  4879  007D62  C06E  F06E         	movff	frexp@value+2,?_frexp+2
  4880  007D66  C06F  F06F         	movff	frexp@value+3,?_frexp+3
  4881                           
  4882                           ; BSR set to: 0
  4883  007D6A  0012               	return		;funcret
  4884  007D6C                     __end_of_frexp:
  4885                           	opt callstack 0
  4886                           
  4887 ;; *************** function ___fleq *****************
  4888 ;; Defined at:
  4889 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  ff1             4    0[BANK0 ] PTR int 
  4892 ;;  ff2             4    4[BANK0 ] PTR int 
  4893 ;; Auto vars:     Size  Location     Type
  4894 ;;		None
  4895 ;; Return value:  Size  Location     Type
  4896 ;;		None               void
  4897 ;; Registers used:
  4898 ;;		wreg, status,2, status,0
  4899 ;; Tracked objects:
  4900 ;;		On entry : 0/0
  4901 ;;		On exit  : 0/0
  4902 ;;		Unchanged: 0/0
  4903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4904 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;Total ram usage:       12 bytes
  4909 ;; Hardware stack levels used:    1
  4910 ;; Hardware stack levels required when called:    7
  4911 ;; This function calls:
  4912 ;;		Nothing
  4913 ;; This function is called by:
  4914 ;;		_log
  4915 ;;		_frexp
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text10
  4920  008122                     __ptext10:
  4921                           	opt callstack 0
  4922  008122                     ___fleq:
  4923                           	opt callstack 18
  4924                           
  4925                           ; BSR set to: 0
  4926                           ;incstack = 0
  4927  008122  0E00               	movlw	0
  4928  008124  0100               	movlb	0	; () banked
  4929  008126  1560               	andwf	___fleq@ff1& (0+255),w,b
  4930  008128  6F68               	movwf	??___fleq& (0+255),b
  4931  00812A  0E00               	movlw	0
  4932  00812C  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  4933  00812E  6F69               	movwf	(??___fleq+1)& (0+255),b
  4934  008130  0E80               	movlw	128
  4935  008132  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  4936  008134  6F6A               	movwf	(??___fleq+2)& (0+255),b
  4937  008136  0E7F               	movlw	127
  4938  008138  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  4939  00813A  6F6B               	movwf	(??___fleq+3)& (0+255),b
  4940  00813C  5168               	movf	??___fleq& (0+255),w,b
  4941  00813E  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  4942  008140  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  4943  008142  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  4944  008144  A4D8               	btfss	status,2,c
  4945  008146  D008               	goto	l14656
  4946                           
  4947                           ; BSR set to: 0
  4948  008148  0E00               	movlw	0
  4949  00814A  6F60               	movwf	___fleq@ff1& (0+255),b
  4950  00814C  0E00               	movlw	0
  4951  00814E  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  4952  008150  0E00               	movlw	0
  4953  008152  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  4954  008154  0E00               	movlw	0
  4955  008156  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  4956  008158                     l14656:
  4957                           
  4958                           ; BSR set to: 0
  4959  008158  0E00               	movlw	0
  4960  00815A  1564               	andwf	___fleq@ff2& (0+255),w,b
  4961  00815C  6F68               	movwf	??___fleq& (0+255),b
  4962  00815E  0E00               	movlw	0
  4963  008160  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  4964  008162  6F69               	movwf	(??___fleq+1)& (0+255),b
  4965  008164  0E80               	movlw	128
  4966  008166  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  4967  008168  6F6A               	movwf	(??___fleq+2)& (0+255),b
  4968  00816A  0E7F               	movlw	127
  4969  00816C  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  4970  00816E  6F6B               	movwf	(??___fleq+3)& (0+255),b
  4971  008170  5168               	movf	??___fleq& (0+255),w,b
  4972  008172  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  4973  008174  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  4974  008176  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  4975  008178  A4D8               	btfss	status,2,c
  4976  00817A  D008               	goto	l14660
  4977                           
  4978                           ; BSR set to: 0
  4979  00817C  0E00               	movlw	0
  4980  00817E  6F64               	movwf	___fleq@ff2& (0+255),b
  4981  008180  0E00               	movlw	0
  4982  008182  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4983  008184  0E00               	movlw	0
  4984  008186  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4985  008188  0E00               	movlw	0
  4986  00818A  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4987  00818C                     l14660:
  4988                           
  4989                           ; BSR set to: 0
  4990  00818C  5164               	movf	___fleq@ff2& (0+255),w,b
  4991  00818E  1960               	xorwf	___fleq@ff1& (0+255),w,b
  4992  008190  E10A               	bnz	u14740
  4993  008192  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  4994  008194  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  4995  008196  E107               	bnz	u14740
  4996  008198  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  4997  00819A  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  4998  00819C  E104               	bnz	u14740
  4999  00819E  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  5000  0081A0  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  5001  0081A2  B4D8               	btfsc	status,2,c
  5002  0081A4  D002               	goto	l14664
  5003  0081A6                     u14740:
  5004                           
  5005                           ; BSR set to: 0
  5006  0081A6  90D8               	bcf	status,0,c
  5007  0081A8  0012               	return	
  5008  0081AA                     l14664:
  5009                           
  5010                           ; BSR set to: 0
  5011  0081AA  80D8               	bsf	status,0,c
  5012                           
  5013                           ; BSR set to: 0
  5014  0081AC  0012               	return		;funcret
  5015  0081AE                     __end_of___fleq:
  5016                           	opt callstack 0
  5017                           
  5018 ;; *************** function _eval_poly *****************
  5019 ;; Defined at:
  5020 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\evalpoly.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  x               4   61[BANK0 ] PTR int 
  5023 ;;  d               2   65[BANK0 ] PTR const 
  5024 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), log@coeff(36), 
  5025 ;;  n               2   67[BANK0 ] int 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  res             4   73[BANK0 ] int 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;                  4   61[BANK0 ] int 
  5030 ;; Registers used:
  5031 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5037 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;Total ram usage:       16 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; Hardware stack levels required when called:    8
  5044 ;; This function calls:
  5045 ;;		___fladd
  5046 ;;		___flmul
  5047 ;; This function is called by:
  5048 ;;		_log
  5049 ;;		_sin
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           	psect	text11
  5054  006AB6                     __ptext11:
  5055                           	opt callstack 0
  5056  006AB6                     _eval_poly:
  5057                           	opt callstack 18
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;incstack = 0
  5061  006AB6  C0A3  F0A5         	movff	eval_poly@n,??_eval_poly
  5062  006ABA  C0A4  F0A6         	movff	eval_poly@n+1,??_eval_poly+1
  5063  006ABE  0100               	movlb	0	; () banked
  5064  006AC0  90D8               	bcf	status,0,c
  5065  006AC2  37A5               	rlcf	??_eval_poly& (0+255),f,b
  5066  006AC4  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5067  006AC6  90D8               	bcf	status,0,c
  5068  006AC8  37A5               	rlcf	??_eval_poly& (0+255),f,b
  5069  006ACA  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5070  006ACC  C0A1  F0A7         	movff	eval_poly@d,??_eval_poly+2
  5071  006AD0  C0A2  F0A8         	movff	eval_poly@d+1,??_eval_poly+3
  5072  006AD4  51A5               	movf	??_eval_poly& (0+255),w,b
  5073  006AD6  27A7               	addwf	(??_eval_poly+2)& (0+255),f,b
  5074  006AD8  51A6               	movf	(??_eval_poly+1)& (0+255),w,b
  5075  006ADA  23A8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5076  006ADC  C0A7  FFF6         	movff	??_eval_poly+2,tblptrl
  5077  006AE0  C0A8  FFF7         	movff	??_eval_poly+3,tblptrh
  5078  006AE4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5079  006AE4  6AF8               	clrf	tblptru,c
  5080  006AE6                     	endif
  5081  006AE6                     	if	0	;tblptru may be non-zero
  5082  006AE6                     	endif
  5083  006AE6  0009               	tblrd		*+
  5084  006AE8  CFF5 F0A9          	movff	tablat,eval_poly@res
  5085  006AEC  0009               	tblrd		*+
  5086  006AEE  CFF5 F0AA          	movff	tablat,eval_poly@res+1
  5087  006AF2  0009               	tblrd		*+
  5088  006AF4  CFF5 F0AB          	movff	tablat,eval_poly@res+2
  5089  006AF8  000A               	tblrd		*-
  5090  006AFA  CFF5 F0AC          	movff	tablat,eval_poly@res+3
  5091  006AFE  D04B               	goto	l15262
  5092  006B00                     l15260:
  5093                           
  5094                           ; BSR set to: 0
  5095  006B00  C0A9  F088         	movff	eval_poly@res,___flmul@a
  5096  006B04  C0AA  F089         	movff	eval_poly@res+1,___flmul@a+1
  5097  006B08  C0AB  F08A         	movff	eval_poly@res+2,___flmul@a+2
  5098  006B0C  C0AC  F08B         	movff	eval_poly@res+3,___flmul@a+3
  5099  006B10  C09D  F084         	movff	eval_poly@x,___flmul@b
  5100  006B14  C09E  F085         	movff	eval_poly@x+1,___flmul@b+1
  5101  006B18  C09F  F086         	movff	eval_poly@x+2,___flmul@b+2
  5102  006B1C  C0A0  F087         	movff	eval_poly@x+3,___flmul@b+3
  5103  006B20  EC5B  F00F         	call	___flmul	;wreg free
  5104  006B24  C084  F074         	movff	?___flmul,___fladd@b
  5105  006B28  C085  F075         	movff	?___flmul+1,___fladd@b+1
  5106  006B2C  C086  F076         	movff	?___flmul+2,___fladd@b+2
  5107  006B30  C087  F077         	movff	?___flmul+3,___fladd@b+3
  5108  006B34  0100               	movlb	0	; () banked
  5109  006B36  07A3               	decf	eval_poly@n& (0+255),f,b
  5110  006B38  A0D8               	btfss	status,0,c
  5111  006B3A  07A4               	decf	(eval_poly@n+1)& (0+255),f,b
  5112  006B3C  C0A3  F0A5         	movff	eval_poly@n,??_eval_poly
  5113  006B40  C0A4  F0A6         	movff	eval_poly@n+1,??_eval_poly+1
  5114  006B44  90D8               	bcf	status,0,c
  5115  006B46  37A5               	rlcf	??_eval_poly& (0+255),f,b
  5116  006B48  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5117  006B4A  90D8               	bcf	status,0,c
  5118  006B4C  37A5               	rlcf	??_eval_poly& (0+255),f,b
  5119  006B4E  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5120  006B50  C0A1  F0A7         	movff	eval_poly@d,??_eval_poly+2
  5121  006B54  C0A2  F0A8         	movff	eval_poly@d+1,??_eval_poly+3
  5122  006B58  51A5               	movf	??_eval_poly& (0+255),w,b
  5123  006B5A  27A7               	addwf	(??_eval_poly+2)& (0+255),f,b
  5124  006B5C  51A6               	movf	(??_eval_poly+1)& (0+255),w,b
  5125  006B5E  23A8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5126  006B60  C0A7  FFF6         	movff	??_eval_poly+2,tblptrl
  5127  006B64  C0A8  FFF7         	movff	??_eval_poly+3,tblptrh
  5128  006B68                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5129  006B68  6AF8               	clrf	tblptru,c
  5130  006B6A                     	endif
  5131  006B6A                     	if	0	;tblptru may be non-zero
  5132  006B6A                     	endif
  5133  006B6A  0009               	tblrd		*+
  5134  006B6C  CFF5 F078          	movff	tablat,___fladd@a
  5135  006B70  0009               	tblrd		*+
  5136  006B72  CFF5 F079          	movff	tablat,___fladd@a+1
  5137  006B76  0009               	tblrd		*+
  5138  006B78  CFF5 F07A          	movff	tablat,___fladd@a+2
  5139  006B7C  000A               	tblrd		*-
  5140  006B7E  CFF5 F07B          	movff	tablat,___fladd@a+3
  5141  006B82  ECCD  F015         	call	___fladd	;wreg free
  5142  006B86  C074  F0A9         	movff	?___fladd,eval_poly@res
  5143  006B8A  C075  F0AA         	movff	?___fladd+1,eval_poly@res+1
  5144  006B8E  C076  F0AB         	movff	?___fladd+2,eval_poly@res+2
  5145  006B92  C077  F0AC         	movff	?___fladd+3,eval_poly@res+3
  5146  006B96                     l15262:
  5147  006B96  0100               	movlb	0	; () banked
  5148  006B98  51A3               	movf	eval_poly@n& (0+255),w,b
  5149  006B9A  11A4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  5150  006B9C  A4D8               	btfss	status,2,c
  5151  006B9E  D7B0               	goto	l15260
  5152                           
  5153                           ; BSR set to: 0
  5154  006BA0  C0A9  F09D         	movff	eval_poly@res,?_eval_poly
  5155  006BA4  C0AA  F09E         	movff	eval_poly@res+1,?_eval_poly+1
  5156  006BA8  C0AB  F09F         	movff	eval_poly@res+2,?_eval_poly+2
  5157  006BAC  C0AC  F0A0         	movff	eval_poly@res+3,?_eval_poly+3
  5158                           
  5159                           ; BSR set to: 0
  5160  006BB0  0012               	return		;funcret
  5161  006BB2                     __end_of_eval_poly:
  5162                           	opt callstack 0
  5163                           
  5164 ;; *************** function ___flmul *****************
  5165 ;; Defined at:
  5166 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  b               4   36[BANK0 ] int 
  5169 ;;  a               4   40[BANK0 ] int 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  prod            4   55[BANK0 ] struct .
  5172 ;;  grs             4   49[BANK0 ] unsigned long 
  5173 ;;  temp            2   59[BANK0 ] struct .
  5174 ;;  bexp            1   54[BANK0 ] unsigned char 
  5175 ;;  aexp            1   53[BANK0 ] unsigned char 
  5176 ;;  sign            1   48[BANK0 ] unsigned char 
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  4   36[BANK0 ] unsigned char 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, prodl, prodh
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5186 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;Total ram usage:       25 bytes
  5191 ;; Hardware stack levels used:    1
  5192 ;; Hardware stack levels required when called:    7
  5193 ;; This function calls:
  5194 ;;		Nothing
  5195 ;; This function is called by:
  5196 ;;		_tempConversion
  5197 ;;		_log
  5198 ;;		_eval_poly
  5199 ;;		_sinGeneration
  5200 ;;		_sin
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           	psect	text12
  5205  001EB6                     __ptext12:
  5206                           	opt callstack 0
  5207  001EB6                     ___flmul:
  5208                           	opt callstack 18
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;incstack = 0
  5212  001EB6  0100               	movlb	0	; () banked
  5213  001EB8  5187               	movf	(___flmul@b+3)& (0+255),w,b
  5214  001EBA  0B80               	andlw	128
  5215  001EBC  6F90               	movwf	___flmul@sign& (0+255),b
  5216  001EBE  5187               	movf	(___flmul@b+3)& (0+255),w,b
  5217  001EC0  2587               	addwf	(___flmul@b+3)& (0+255),w,b
  5218  001EC2  6F96               	movwf	___flmul@bexp& (0+255),b
  5219                           
  5220                           ; BSR set to: 0
  5221  001EC4  BF86               	btfsc	(___flmul@b+2)& (0+255),7,b
  5222                           
  5223                           ; BSR set to: 0
  5224  001EC6  8196               	bsf	___flmul@bexp& (0+255),0,b
  5225                           
  5226                           ; BSR set to: 0
  5227  001EC8  5196               	movf	___flmul@bexp& (0+255),w,b
  5228  001ECA  B4D8               	btfsc	status,2,c
  5229  001ECC  D00D               	goto	l14536
  5230                           
  5231                           ; BSR set to: 0
  5232  001ECE  2996               	incf	___flmul@bexp& (0+255),w,b
  5233  001ED0  A4D8               	btfss	status,2,c
  5234  001ED2  D008               	goto	l14534
  5235                           
  5236                           ; BSR set to: 0
  5237  001ED4  0E00               	movlw	0
  5238  001ED6  6F84               	movwf	___flmul@b& (0+255),b
  5239  001ED8  0E00               	movlw	0
  5240  001EDA  6F85               	movwf	(___flmul@b+1)& (0+255),b
  5241  001EDC  0E00               	movlw	0
  5242  001EDE  6F86               	movwf	(___flmul@b+2)& (0+255),b
  5243  001EE0  0E00               	movlw	0
  5244  001EE2  6F87               	movwf	(___flmul@b+3)& (0+255),b
  5245  001EE4                     l14534:
  5246                           
  5247                           ; BSR set to: 0
  5248  001EE4  8F86               	bsf	(___flmul@b+2)& (0+255),7,b
  5249  001EE6  D008               	goto	l14538
  5250  001EE8                     l14536:
  5251                           
  5252                           ; BSR set to: 0
  5253  001EE8  0E00               	movlw	0
  5254  001EEA  6F84               	movwf	___flmul@b& (0+255),b
  5255  001EEC  0E00               	movlw	0
  5256  001EEE  6F85               	movwf	(___flmul@b+1)& (0+255),b
  5257  001EF0  0E00               	movlw	0
  5258  001EF2  6F86               	movwf	(___flmul@b+2)& (0+255),b
  5259  001EF4  0E00               	movlw	0
  5260  001EF6  6F87               	movwf	(___flmul@b+3)& (0+255),b
  5261  001EF8                     l14538:
  5262                           
  5263                           ; BSR set to: 0
  5264  001EF8  518B               	movf	(___flmul@a+3)& (0+255),w,b
  5265  001EFA  0B80               	andlw	128
  5266  001EFC  1B90               	xorwf	___flmul@sign& (0+255),f,b
  5267                           
  5268                           ; BSR set to: 0
  5269  001EFE  518B               	movf	(___flmul@a+3)& (0+255),w,b
  5270  001F00  258B               	addwf	(___flmul@a+3)& (0+255),w,b
  5271  001F02  6F95               	movwf	___flmul@aexp& (0+255),b
  5272                           
  5273                           ; BSR set to: 0
  5274  001F04  BF8A               	btfsc	(___flmul@a+2)& (0+255),7,b
  5275                           
  5276                           ; BSR set to: 0
  5277  001F06  8195               	bsf	___flmul@aexp& (0+255),0,b
  5278                           
  5279                           ; BSR set to: 0
  5280  001F08  5195               	movf	___flmul@aexp& (0+255),w,b
  5281  001F0A  B4D8               	btfsc	status,2,c
  5282  001F0C  D00D               	goto	l14554
  5283                           
  5284                           ; BSR set to: 0
  5285  001F0E  2995               	incf	___flmul@aexp& (0+255),w,b
  5286  001F10  A4D8               	btfss	status,2,c
  5287  001F12  D008               	goto	l14552
  5288                           
  5289                           ; BSR set to: 0
  5290  001F14  0E00               	movlw	0
  5291  001F16  6F88               	movwf	___flmul@a& (0+255),b
  5292  001F18  0E00               	movlw	0
  5293  001F1A  6F89               	movwf	(___flmul@a+1)& (0+255),b
  5294  001F1C  0E00               	movlw	0
  5295  001F1E  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  5296  001F20  0E00               	movlw	0
  5297  001F22  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  5298  001F24                     l14552:
  5299                           
  5300                           ; BSR set to: 0
  5301  001F24  8F8A               	bsf	(___flmul@a+2)& (0+255),7,b
  5302  001F26  D008               	goto	l4125
  5303  001F28                     l14554:
  5304                           
  5305                           ; BSR set to: 0
  5306  001F28  0E00               	movlw	0
  5307  001F2A  6F88               	movwf	___flmul@a& (0+255),b
  5308  001F2C  0E00               	movlw	0
  5309  001F2E  6F89               	movwf	(___flmul@a+1)& (0+255),b
  5310  001F30  0E00               	movlw	0
  5311  001F32  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  5312  001F34  0E00               	movlw	0
  5313  001F36  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  5314  001F38                     l4125:
  5315                           
  5316                           ; BSR set to: 0
  5317  001F38  5195               	movf	___flmul@aexp& (0+255),w,b
  5318  001F3A  B4D8               	btfsc	status,2,c
  5319  001F3C  D003               	goto	u14600
  5320                           
  5321                           ; BSR set to: 0
  5322  001F3E  5196               	movf	___flmul@bexp& (0+255),w,b
  5323  001F40  A4D8               	btfss	status,2,c
  5324  001F42  D009               	goto	l14562
  5325  001F44                     u14600:
  5326                           
  5327                           ; BSR set to: 0
  5328  001F44  0E00               	movlw	0
  5329  001F46  6F84               	movwf	?___flmul& (0+255),b
  5330  001F48  0E00               	movlw	0
  5331  001F4A  6F85               	movwf	(?___flmul+1)& (0+255),b
  5332  001F4C  0E00               	movlw	0
  5333  001F4E  6F86               	movwf	(?___flmul+2)& (0+255),b
  5334  001F50  0E00               	movlw	0
  5335  001F52  6F87               	movwf	(?___flmul+3)& (0+255),b
  5336  001F54  0012               	return	
  5337  001F56                     l14562:
  5338                           
  5339                           ; BSR set to: 0
  5340  001F56  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5341  001F58  0384               	mulwf	___flmul@b& (0+255),b
  5342  001F5A  CFF3 F09B          	movff	prodl,___flmul@temp
  5343  001F5E  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5344                           
  5345                           ; BSR set to: 0
  5346  001F62  519B               	movf	___flmul@temp& (0+255),w,b
  5347  001F64  6F91               	movwf	___flmul@grs& (0+255),b
  5348  001F66  6B92               	clrf	(___flmul@grs+1)& (0+255),b
  5349  001F68  6B93               	clrf	(___flmul@grs+2)& (0+255),b
  5350  001F6A  6B94               	clrf	(___flmul@grs+3)& (0+255),b
  5351                           
  5352                           ; BSR set to: 0
  5353  001F6C  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5354  001F6E  6F97               	movwf	___flmul@prod& (0+255),b
  5355  001F70  6B98               	clrf	(___flmul@prod+1)& (0+255),b
  5356  001F72  6B99               	clrf	(___flmul@prod+2)& (0+255),b
  5357  001F74  6B9A               	clrf	(___flmul@prod+3)& (0+255),b
  5358  001F76  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5359  001F78  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5360  001F7A  CFF3 F09B          	movff	prodl,___flmul@temp
  5361  001F7E  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5362                           
  5363                           ; BSR set to: 0
  5364  001F82  519B               	movf	___flmul@temp& (0+255),w,b
  5365  001F84  2791               	addwf	___flmul@grs& (0+255),f,b
  5366  001F86  0E00               	movlw	0
  5367  001F88  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5368  001F8A  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5369  001F8C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5370                           
  5371                           ; BSR set to: 0
  5372  001F8E  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5373  001F90  2797               	addwf	___flmul@prod& (0+255),f,b
  5374  001F92  0E00               	movlw	0
  5375  001F94  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5376  001F96  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5377  001F98  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5378  001F9A  5188               	movf	___flmul@a& (0+255),w,b
  5379  001F9C  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5380  001F9E  CFF3 F09B          	movff	prodl,___flmul@temp
  5381  001FA2  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5382                           
  5383                           ; BSR set to: 0
  5384  001FA6  519B               	movf	___flmul@temp& (0+255),w,b
  5385  001FA8  2791               	addwf	___flmul@grs& (0+255),f,b
  5386  001FAA  0E00               	movlw	0
  5387  001FAC  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5388  001FAE  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5389  001FB0  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5390                           
  5391                           ; BSR set to: 0
  5392  001FB2  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5393  001FB4  2797               	addwf	___flmul@prod& (0+255),f,b
  5394  001FB6  0E00               	movlw	0
  5395  001FB8  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5396  001FBA  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5397  001FBC  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5398                           
  5399                           ; BSR set to: 0
  5400  001FBE  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  5401  001FC2  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  5402  001FC6  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  5403  001FCA  6B91               	clrf	___flmul@grs& (0+255),b
  5404                           
  5405                           ; BSR set to: 0
  5406  001FCC  5188               	movf	___flmul@a& (0+255),w,b
  5407  001FCE  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5408  001FD0  CFF3 F09B          	movff	prodl,___flmul@temp
  5409  001FD4  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5410                           
  5411                           ; BSR set to: 0
  5412  001FD8  519B               	movf	___flmul@temp& (0+255),w,b
  5413  001FDA  2791               	addwf	___flmul@grs& (0+255),f,b
  5414  001FDC  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5415  001FDE  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5416  001FE0  0E00               	movlw	0
  5417  001FE2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5418  001FE4  0E00               	movlw	0
  5419  001FE6  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5420                           
  5421                           ; BSR set to: 0
  5422  001FE8  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5423  001FEA  0384               	mulwf	___flmul@b& (0+255),b
  5424  001FEC  CFF3 F09B          	movff	prodl,___flmul@temp
  5425  001FF0  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5426                           
  5427                           ; BSR set to: 0
  5428  001FF4  519B               	movf	___flmul@temp& (0+255),w,b
  5429  001FF6  2791               	addwf	___flmul@grs& (0+255),f,b
  5430  001FF8  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5431  001FFA  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5432  001FFC  0E00               	movlw	0
  5433  001FFE  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5434  002000  0E00               	movlw	0
  5435  002002  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5436                           
  5437                           ; BSR set to: 0
  5438  002004  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  5439  002008  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  5440  00200C  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  5441  002010  6B91               	clrf	___flmul@grs& (0+255),b
  5442  002012  5188               	movf	___flmul@a& (0+255),w,b
  5443  002014  0384               	mulwf	___flmul@b& (0+255),b
  5444  002016  CFF3 F09B          	movff	prodl,___flmul@temp
  5445  00201A  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5446                           
  5447                           ; BSR set to: 0
  5448  00201E  519B               	movf	___flmul@temp& (0+255),w,b
  5449  002020  2791               	addwf	___flmul@grs& (0+255),f,b
  5450  002022  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5451  002024  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5452  002026  0E00               	movlw	0
  5453  002028  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5454  00202A  0E00               	movlw	0
  5455  00202C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5456                           
  5457                           ; BSR set to: 0
  5458  00202E  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5459  002030  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5460  002032  CFF3 F09B          	movff	prodl,___flmul@temp
  5461  002036  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5462  00203A  519B               	movf	___flmul@temp& (0+255),w,b
  5463  00203C  2797               	addwf	___flmul@prod& (0+255),f,b
  5464  00203E  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5465  002040  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5466  002042  0E00               	movlw	0
  5467  002044  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5468  002046  0E00               	movlw	0
  5469  002048  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5470                           
  5471                           ; BSR set to: 0
  5472  00204A  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5473  00204C  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5474  00204E  CFF3 F09B          	movff	prodl,___flmul@temp
  5475  002052  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5476                           
  5477                           ; BSR set to: 0
  5478  002056  519B               	movf	___flmul@temp& (0+255),w,b
  5479  002058  2797               	addwf	___flmul@prod& (0+255),f,b
  5480  00205A  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5481  00205C  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5482  00205E  0E00               	movlw	0
  5483  002060  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5484  002062  0E00               	movlw	0
  5485  002064  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5486  002066  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5487  002068  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5488  00206A  CFF3 F09B          	movff	prodl,___flmul@temp
  5489  00206E  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5490                           
  5491                           ; BSR set to: 0
  5492  002072  519B               	movf	___flmul@temp& (0+255),w,b
  5493  002074  6F8C               	movwf	??___flmul& (0+255),b
  5494  002076  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5495  002078  6F8D               	movwf	(??___flmul+1)& (0+255),b
  5496  00207A  6B8E               	clrf	(??___flmul+2)& (0+255),b
  5497  00207C  6B8F               	clrf	(??___flmul+3)& (0+255),b
  5498  00207E  C08E  F08F         	movff	??___flmul+2,??___flmul+3
  5499  002082  C08D  F08E         	movff	??___flmul+1,??___flmul+2
  5500  002086  C08C  F08D         	movff	??___flmul,??___flmul+1
  5501  00208A  6B8C               	clrf	??___flmul& (0+255),b
  5502  00208C  518C               	movf	??___flmul& (0+255),w,b
  5503  00208E  2797               	addwf	___flmul@prod& (0+255),f,b
  5504  002090  518D               	movf	(??___flmul+1)& (0+255),w,b
  5505  002092  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5506  002094  518E               	movf	(??___flmul+2)& (0+255),w,b
  5507  002096  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5508  002098  518F               	movf	(??___flmul+3)& (0+255),w,b
  5509  00209A  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5510                           
  5511                           ; BSR set to: 0
  5512  00209C  C091  F08C         	movff	___flmul@grs,??___flmul
  5513  0020A0  C092  F08D         	movff	___flmul@grs+1,??___flmul+1
  5514  0020A4  C093  F08E         	movff	___flmul@grs+2,??___flmul+2
  5515  0020A8  C094  F08F         	movff	___flmul@grs+3,??___flmul+3
  5516  0020AC  0E19               	movlw	25
  5517  0020AE  D005               	goto	u14610
  5518  0020B0                     u14615:
  5519  0020B0  90D8               	bcf	status,0,c
  5520  0020B2  338F               	rrcf	(??___flmul+3)& (0+255),f,b
  5521  0020B4  338E               	rrcf	(??___flmul+2)& (0+255),f,b
  5522  0020B6  338D               	rrcf	(??___flmul+1)& (0+255),f,b
  5523  0020B8  338C               	rrcf	??___flmul& (0+255),f,b
  5524  0020BA                     u14610:
  5525  0020BA  2EE8               	decfsz	wreg,f,c
  5526  0020BC  D7F9               	goto	u14615
  5527  0020BE  518C               	movf	??___flmul& (0+255),w,b
  5528  0020C0  2797               	addwf	___flmul@prod& (0+255),f,b
  5529  0020C2  518D               	movf	(??___flmul+1)& (0+255),w,b
  5530  0020C4  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5531  0020C6  518E               	movf	(??___flmul+2)& (0+255),w,b
  5532  0020C8  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5533  0020CA  518F               	movf	(??___flmul+3)& (0+255),w,b
  5534  0020CC  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5535                           
  5536                           ; BSR set to: 0
  5537  0020CE  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  5538  0020D2  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  5539  0020D6  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  5540  0020DA  6B91               	clrf	___flmul@grs& (0+255),b
  5541                           
  5542                           ; BSR set to: 0
  5543  0020DC  5195               	movf	___flmul@aexp& (0+255),w,b
  5544  0020DE  C096  F08C         	movff	___flmul@bexp,??___flmul
  5545  0020E2  6B8D               	clrf	(??___flmul+1)& (0+255),b
  5546  0020E4  278C               	addwf	??___flmul& (0+255),f,b
  5547  0020E6  0E00               	movlw	0
  5548  0020E8  238D               	addwfc	(??___flmul+1)& (0+255),f,b
  5549  0020EA  0E82               	movlw	130
  5550  0020EC  258C               	addwf	??___flmul& (0+255),w,b
  5551  0020EE  6F9B               	movwf	___flmul@temp& (0+255),b
  5552  0020F0  0EFF               	movlw	255
  5553  0020F2  218D               	addwfc	(??___flmul+1)& (0+255),w,b
  5554  0020F4  6F9C               	movwf	(___flmul@temp+1)& (0+255),b
  5555  0020F6  D00F               	goto	l14610
  5556  0020F8                     l14604:
  5557                           
  5558                           ; BSR set to: 0
  5559  0020F8  90D8               	bcf	status,0,c
  5560  0020FA  3797               	rlcf	___flmul@prod& (0+255),f,b
  5561  0020FC  3798               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5562  0020FE  3799               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5563  002100  379A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5564                           
  5565                           ; BSR set to: 0
  5566  002102  BF94               	btfsc	(___flmul@grs+3)& (0+255),7,b
  5567                           
  5568                           ; BSR set to: 0
  5569  002104  8197               	bsf	___flmul@prod& (0+255),0,b
  5570                           
  5571                           ; BSR set to: 0
  5572  002106  90D8               	bcf	status,0,c
  5573  002108  3791               	rlcf	___flmul@grs& (0+255),f,b
  5574  00210A  3792               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5575  00210C  3793               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5576  00210E  3794               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5577  002110  079B               	decf	___flmul@temp& (0+255),f,b
  5578  002112  A0D8               	btfss	status,0,c
  5579  002114  079C               	decf	(___flmul@temp+1)& (0+255),f,b
  5580  002116                     l14610:
  5581                           
  5582                           ; BSR set to: 0
  5583  002116  AF99               	btfss	(___flmul@prod+2)& (0+255),7,b
  5584  002118  D7EF               	goto	l14604
  5585                           
  5586                           ; BSR set to: 0
  5587  00211A  0E00               	movlw	0
  5588  00211C  6F95               	movwf	___flmul@aexp& (0+255),b
  5589                           
  5590                           ; BSR set to: 0
  5591  00211E  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
  5592  002120  D017               	goto	l4134
  5593                           
  5594                           ; BSR set to: 0
  5595  002122  0EFF               	movlw	255
  5596  002124  1591               	andwf	___flmul@grs& (0+255),w,b
  5597  002126  6F8C               	movwf	??___flmul& (0+255),b
  5598  002128  0EFF               	movlw	255
  5599  00212A  1592               	andwf	(___flmul@grs+1)& (0+255),w,b
  5600  00212C  6F8D               	movwf	(??___flmul+1)& (0+255),b
  5601  00212E  0EFF               	movlw	255
  5602  002130  1593               	andwf	(___flmul@grs+2)& (0+255),w,b
  5603  002132  6F8E               	movwf	(??___flmul+2)& (0+255),b
  5604  002134  0E7F               	movlw	127
  5605  002136  1594               	andwf	(___flmul@grs+3)& (0+255),w,b
  5606  002138  6F8F               	movwf	(??___flmul+3)& (0+255),b
  5607  00213A  518C               	movf	??___flmul& (0+255),w,b
  5608  00213C  118D               	iorwf	(??___flmul+1)& (0+255),w,b
  5609  00213E  118E               	iorwf	(??___flmul+2)& (0+255),w,b
  5610  002140  118F               	iorwf	(??___flmul+3)& (0+255),w,b
  5611  002142  B4D8               	btfsc	status,2,c
  5612  002144  D003               	goto	l4135
  5613  002146                     u14650:
  5614                           
  5615                           ; BSR set to: 0
  5616  002146  0E01               	movlw	1
  5617  002148  6F95               	movwf	___flmul@aexp& (0+255),b
  5618  00214A  D002               	goto	l4134
  5619  00214C                     l4135:
  5620                           
  5621                           ; BSR set to: 0
  5622  00214C  B197               	btfsc	___flmul@prod& (0+255),0,b
  5623  00214E  D7FB               	goto	u14650
  5624  002150                     l4134:
  5625                           
  5626                           ; BSR set to: 0
  5627  002150  5195               	movf	___flmul@aexp& (0+255),w,b
  5628  002152  B4D8               	btfsc	status,2,c
  5629  002154  D01F               	goto	l14630
  5630                           
  5631                           ; BSR set to: 0
  5632  002156  0E01               	movlw	1
  5633  002158  2797               	addwf	___flmul@prod& (0+255),f,b
  5634  00215A  0E00               	movlw	0
  5635  00215C  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5636  00215E  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5637  002160  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5638                           
  5639                           ; BSR set to: 0
  5640  002162  A19A               	btfss	(___flmul@prod+3)& (0+255),0,b
  5641  002164  D017               	goto	l14630
  5642                           
  5643                           ; BSR set to: 0
  5644  002166  C097  F08C         	movff	___flmul@prod,??___flmul
  5645  00216A  C098  F08D         	movff	___flmul@prod+1,??___flmul+1
  5646  00216E  C099  F08E         	movff	___flmul@prod+2,??___flmul+2
  5647  002172  C09A  F08F         	movff	___flmul@prod+3,??___flmul+3
  5648  002176  358F               	rlcf	(??___flmul+3)& (0+255),w,b
  5649  002178  338F               	rrcf	(??___flmul+3)& (0+255),f,b
  5650  00217A  338E               	rrcf	(??___flmul+2)& (0+255),f,b
  5651  00217C  338D               	rrcf	(??___flmul+1)& (0+255),f,b
  5652  00217E  338C               	rrcf	??___flmul& (0+255),f,b
  5653  002180  C08C  F097         	movff	??___flmul,___flmul@prod
  5654  002184  C08D  F098         	movff	??___flmul+1,___flmul@prod+1
  5655  002188  C08E  F099         	movff	??___flmul+2,___flmul@prod+2
  5656  00218C  C08F  F09A         	movff	??___flmul+3,___flmul@prod+3
  5657                           
  5658                           ; BSR set to: 0
  5659  002190  4B9B               	infsnz	___flmul@temp& (0+255),f,b
  5660  002192  2B9C               	incf	(___flmul@temp+1)& (0+255),f,b
  5661  002194                     l14630:
  5662                           
  5663                           ; BSR set to: 0
  5664  002194  BF9C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5665  002196  D00D               	goto	l14634
  5666  002198  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5667  00219A  E103               	bnz	u14690
  5668  00219C  299B               	incf	___flmul@temp& (0+255),w,b
  5669  00219E  A0D8               	btfss	status,0,c
  5670  0021A0  D008               	goto	l14634
  5671  0021A2                     u14690:
  5672                           
  5673                           ; BSR set to: 0
  5674  0021A2  0E00               	movlw	0
  5675  0021A4  6F97               	movwf	___flmul@prod& (0+255),b
  5676  0021A6  0E00               	movlw	0
  5677  0021A8  6F98               	movwf	(___flmul@prod+1)& (0+255),b
  5678  0021AA  0E80               	movlw	128
  5679  0021AC  6F99               	movwf	(___flmul@prod+2)& (0+255),b
  5680  0021AE  0E7F               	movlw	127
  5681  0021B0  D020               	goto	L2
  5682  0021B2                     l14634:
  5683                           
  5684                           ; BSR set to: 0
  5685  0021B2  BF9C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5686  0021B4  D005               	goto	u14700
  5687  0021B6  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5688  0021B8  E10E               	bnz	l4142
  5689  0021BA  059B               	decf	___flmul@temp& (0+255),w,b
  5690  0021BC  B0D8               	btfsc	status,0,c
  5691  0021BE  D00B               	goto	l4142
  5692  0021C0                     u14700:
  5693                           
  5694                           ; BSR set to: 0
  5695  0021C0  0E00               	movlw	0
  5696  0021C2  6F97               	movwf	___flmul@prod& (0+255),b
  5697  0021C4  0E00               	movlw	0
  5698  0021C6  6F98               	movwf	(___flmul@prod+1)& (0+255),b
  5699  0021C8  0E00               	movlw	0
  5700  0021CA  6F99               	movwf	(___flmul@prod+2)& (0+255),b
  5701  0021CC  0E00               	movlw	0
  5702  0021CE  6F9A               	movwf	(___flmul@prod+3)& (0+255),b
  5703  0021D0  0E00               	movlw	0
  5704  0021D2  6F90               	movwf	___flmul@sign& (0+255),b
  5705  0021D4  D00F               	goto	l14646
  5706  0021D6                     l4142:
  5707                           
  5708                           ; BSR set to: 0
  5709  0021D6  C09B  F096         	movff	___flmul@temp,___flmul@bexp
  5710                           
  5711                           ; BSR set to: 0
  5712  0021DA  0EFF               	movlw	255
  5713  0021DC  1797               	andwf	___flmul@prod& (0+255),f,b
  5714  0021DE  0EFF               	movlw	255
  5715  0021E0  1798               	andwf	(___flmul@prod+1)& (0+255),f,b
  5716  0021E2  0E7F               	movlw	127
  5717  0021E4  1799               	andwf	(___flmul@prod+2)& (0+255),f,b
  5718  0021E6  0E00               	movlw	0
  5719  0021E8  179A               	andwf	(___flmul@prod+3)& (0+255),f,b
  5720                           
  5721                           ; BSR set to: 0
  5722  0021EA  B196               	btfsc	___flmul@bexp& (0+255),0,b
  5723                           
  5724                           ; BSR set to: 0
  5725  0021EC  8F99               	bsf	(___flmul@prod+2)& (0+255),7,b
  5726                           
  5727                           ; BSR set to: 0
  5728  0021EE  90D8               	bcf	status,0,c
  5729  0021F0  3196               	rrcf	___flmul@bexp& (0+255),w,b
  5730  0021F2                     L2:
  5731  0021F2  6F9A               	movwf	(___flmul@prod+3)& (0+255),b
  5732  0021F4                     l14646:
  5733                           
  5734                           ; BSR set to: 0
  5735  0021F4  5190               	movf	___flmul@sign& (0+255),w,b
  5736  0021F6  139A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5737                           
  5738                           ; BSR set to: 0
  5739  0021F8  C097  F084         	movff	___flmul@prod,?___flmul
  5740  0021FC  C098  F085         	movff	___flmul@prod+1,?___flmul+1
  5741  002200  C099  F086         	movff	___flmul@prod+2,?___flmul+2
  5742  002204  C09A  F087         	movff	___flmul@prod+3,?___flmul+3
  5743                           
  5744                           ; BSR set to: 0
  5745  002208  0012               	return		;funcret
  5746  00220A                     __end_of___flmul:
  5747                           	opt callstack 0
  5748                           
  5749 ;; *************** function ___xxtofl *****************
  5750 ;; Defined at:
  5751 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  sign            1    wreg     unsigned char 
  5754 ;;  val             4    0[BANK0 ] long 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  sign            1    8[BANK0 ] unsigned char 
  5757 ;;  arg             4   10[BANK0 ] unsigned long 
  5758 ;;  exp             1    9[BANK0 ] unsigned char 
  5759 ;; Return value:  Size  Location     Type
  5760 ;;                  4    0[BANK0 ] unsigned char 
  5761 ;; Registers used:
  5762 ;;		wreg, status,2, status,0
  5763 ;; Tracked objects:
  5764 ;;		On entry : 0/0
  5765 ;;		On exit  : 0/0
  5766 ;;		Unchanged: 0/0
  5767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5771 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5772 ;;Total ram usage:       14 bytes
  5773 ;; Hardware stack levels used:    1
  5774 ;; Hardware stack levels required when called:    7
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_tempConversion
  5779 ;;		_log
  5780 ;;		_sinGeneration
  5781 ;;		_floor
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text13
  5786  0057CA                     __ptext13:
  5787                           	opt callstack 0
  5788  0057CA                     ___xxtofl:
  5789                           	opt callstack 19
  5790                           
  5791                           ; BSR set to: 0
  5792                           ;incstack = 0
  5793                           ;___xxtofl@sign stored from wreg
  5794  0057CA  0100               	movlb	0	; () banked
  5795  0057CC  6F68               	movwf	___xxtofl@sign& (0+255),b
  5796  0057CE  0100               	movlb	0	; () banked
  5797  0057D0  5168               	movf	___xxtofl@sign& (0+255),w,b
  5798  0057D2  A4D8               	btfss	status,2,c
  5799                           
  5800                           ; BSR set to: 0
  5801  0057D4  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5802  0057D6  D01A               	goto	l4166
  5803                           
  5804                           ; BSR set to: 0
  5805  0057D8  C060  F064         	movff	___xxtofl@val,??___xxtofl
  5806  0057DC  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  5807  0057E0  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  5808  0057E4  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  5809  0057E8  1F64               	comf	??___xxtofl& (0+255),f,b
  5810  0057EA  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  5811  0057EC  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  5812  0057EE  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  5813  0057F0  2B64               	incf	??___xxtofl& (0+255),f,b
  5814  0057F2  0E00               	movlw	0
  5815  0057F4  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  5816  0057F6  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  5817  0057F8  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  5818  0057FA  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  5819  0057FE  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  5820  005802  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  5821  005806  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  5822  00580A  D008               	goto	l15198
  5823  00580C                     l4166:
  5824                           
  5825                           ; BSR set to: 0
  5826  00580C  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  5827  005810  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5828  005814  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5829  005818  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5830  00581C                     l15198:
  5831                           
  5832                           ; BSR set to: 0
  5833  00581C  5160               	movf	___xxtofl@val& (0+255),w,b
  5834  00581E  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  5835  005820  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  5836  005822  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  5837  005824  A4D8               	btfss	status,2,c
  5838  005826  D009               	goto	l15204
  5839                           
  5840                           ; BSR set to: 0
  5841  005828  0E00               	movlw	0
  5842  00582A  6F60               	movwf	?___xxtofl& (0+255),b
  5843  00582C  0E00               	movlw	0
  5844  00582E  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  5845  005830  0E00               	movlw	0
  5846  005832  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  5847  005834  0E00               	movlw	0
  5848  005836  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  5849  005838  0012               	return	
  5850  00583A                     l15204:
  5851                           
  5852                           ; BSR set to: 0
  5853  00583A  0E96               	movlw	150
  5854  00583C  6F69               	movwf	___xxtofl@exp& (0+255),b
  5855  00583E  D006               	goto	l15208
  5856  005840                     l15206:
  5857                           
  5858                           ; BSR set to: 0
  5859  005840  2B69               	incf	___xxtofl@exp& (0+255),f,b
  5860  005842  90D8               	bcf	status,0,c
  5861  005844  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5862  005846  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5863  005848  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5864  00584A  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  5865  00584C                     l15208:
  5866                           
  5867                           ; BSR set to: 0
  5868  00584C  0E00               	movlw	0
  5869  00584E  156A               	andwf	___xxtofl@arg& (0+255),w,b
  5870  005850  6F64               	movwf	??___xxtofl& (0+255),b
  5871  005852  0E00               	movlw	0
  5872  005854  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  5873  005856  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  5874  005858  0E00               	movlw	0
  5875  00585A  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  5876  00585C  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  5877  00585E  0EFE               	movlw	254
  5878  005860  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  5879  005862  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  5880  005864  5164               	movf	??___xxtofl& (0+255),w,b
  5881  005866  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  5882  005868  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  5883  00586A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  5884  00586C  B4D8               	btfsc	status,2,c
  5885  00586E  D00D               	goto	l4173
  5886  005870  D7E7               	goto	l15206
  5887  005872                     l15210:
  5888                           
  5889                           ; BSR set to: 0
  5890  005872  2B69               	incf	___xxtofl@exp& (0+255),f,b
  5891                           
  5892                           ; BSR set to: 0
  5893  005874  0E01               	movlw	1
  5894  005876  276A               	addwf	___xxtofl@arg& (0+255),f,b
  5895  005878  0E00               	movlw	0
  5896  00587A  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  5897  00587C  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  5898  00587E  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  5899                           
  5900                           ; BSR set to: 0
  5901  005880  90D8               	bcf	status,0,c
  5902  005882  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5903  005884  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5904  005886  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5905  005888  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  5906  00588A                     l4173:
  5907                           
  5908                           ; BSR set to: 0
  5909  00588A  0E00               	movlw	0
  5910  00588C  156A               	andwf	___xxtofl@arg& (0+255),w,b
  5911  00588E  6F64               	movwf	??___xxtofl& (0+255),b
  5912  005890  0E00               	movlw	0
  5913  005892  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  5914  005894  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  5915  005896  0E00               	movlw	0
  5916  005898  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  5917  00589A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  5918  00589C  0EFF               	movlw	255
  5919  00589E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  5920  0058A0  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  5921  0058A2  5164               	movf	??___xxtofl& (0+255),w,b
  5922  0058A4  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  5923  0058A6  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  5924  0058A8  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  5925  0058AA  B4D8               	btfsc	status,2,c
  5926  0058AC  D007               	goto	l15218
  5927  0058AE  D7E1               	goto	l15210
  5928  0058B0                     l15216:
  5929                           
  5930                           ; BSR set to: 0
  5931  0058B0  0769               	decf	___xxtofl@exp& (0+255),f,b
  5932  0058B2  90D8               	bcf	status,0,c
  5933  0058B4  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  5934  0058B6  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  5935  0058B8  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  5936  0058BA  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  5937  0058BC                     l15218:
  5938                           
  5939                           ; BSR set to: 0
  5940  0058BC  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  5941  0058BE  D003               	goto	u15640
  5942                           
  5943                           ; BSR set to: 0
  5944  0058C0  0E02               	movlw	2
  5945  0058C2  6169               	cpfslt	___xxtofl@exp& (0+255),b
  5946  0058C4  D7F5               	goto	l15216
  5947  0058C6                     u15640:
  5948                           
  5949                           ; BSR set to: 0
  5950  0058C6  A169               	btfss	___xxtofl@exp& (0+255),0,b
  5951                           
  5952                           ; BSR set to: 0
  5953  0058C8  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  5954                           
  5955                           ; BSR set to: 0
  5956  0058CA  90D8               	bcf	status,0,c
  5957  0058CC  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  5958                           
  5959                           ; BSR set to: 0
  5960  0058CE  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  5961  0058D2  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  5962  0058D4  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  5963  0058D6  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  5964  0058D8  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  5965  0058DC  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  5966  0058DE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  5967  0058E0  6B64               	clrf	??___xxtofl& (0+255),b
  5968  0058E2  5164               	movf	??___xxtofl& (0+255),w,b
  5969  0058E4  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  5970  0058E6  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  5971  0058E8  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  5972  0058EA  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  5973  0058EC  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  5974  0058EE  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  5975  0058F0  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  5976                           
  5977                           ; BSR set to: 0
  5978  0058F2  5168               	movf	___xxtofl@sign& (0+255),w,b
  5979  0058F4  A4D8               	btfss	status,2,c
  5980                           
  5981                           ; BSR set to: 0
  5982  0058F6  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5983  0058F8  D001               	goto	l15234
  5984                           
  5985                           ; BSR set to: 0
  5986  0058FA  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  5987  0058FC                     l15234:
  5988                           
  5989                           ; BSR set to: 0
  5990  0058FC  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  5991  005900  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  5992  005904  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  5993  005908  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  5994                           
  5995                           ; BSR set to: 0
  5996  00590C  0012               	return		;funcret
  5997  00590E                     __end_of___xxtofl:
  5998                           	opt callstack 0
  5999                           
  6000 ;; *************** function ___fltol *****************
  6001 ;; Defined at:
  6002 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6003 ;; Parameters:    Size  Location     Type
  6004 ;;  f1              4    0[BANK0 ] unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  exp1            1    9[BANK0 ] unsigned char 
  6007 ;;  sign1           1    8[BANK0 ] unsigned char 
  6008 ;; Return value:  Size  Location     Type
  6009 ;;                  4    0[BANK0 ] long 
  6010 ;; Registers used:
  6011 ;;		wreg, status,2, status,0
  6012 ;; Tracked objects:
  6013 ;;		On entry : 0/0
  6014 ;;		On exit  : 0/0
  6015 ;;		Unchanged: 0/0
  6016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6017 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6019 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6020 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;Total ram usage:       10 bytes
  6022 ;; Hardware stack levels used:    1
  6023 ;; Hardware stack levels required when called:    7
  6024 ;; This function calls:
  6025 ;;		Nothing
  6026 ;; This function is called by:
  6027 ;;		_tempConversion
  6028 ;;		_sinGeneration
  6029 ;;		_floor
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text14
  6034  007B42                     __ptext14:
  6035                           	opt callstack 0
  6036  007B42                     ___fltol:
  6037                           	opt callstack 20
  6038                           
  6039                           ; BSR set to: 0
  6040                           ;incstack = 0
  6041  007B42  0100               	movlb	0	; () banked
  6042  007B44  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6043  007B46  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6044  007B48  6F69               	movwf	___fltol@exp1& (0+255),b
  6045  007B4A  5169               	movf	___fltol@exp1& (0+255),w,b
  6046  007B4C  A4D8               	btfss	status,2,c
  6047  007B4E  D009               	goto	l15684
  6048  007B50                     u16160:
  6049                           
  6050                           ; BSR set to: 0
  6051  007B50  0E00               	movlw	0
  6052  007B52  6F60               	movwf	?___fltol& (0+255),b
  6053  007B54  0E00               	movlw	0
  6054  007B56  6F61               	movwf	(?___fltol+1)& (0+255),b
  6055  007B58  0E00               	movlw	0
  6056  007B5A  6F62               	movwf	(?___fltol+2)& (0+255),b
  6057  007B5C  0E00               	movlw	0
  6058  007B5E  6F63               	movwf	(?___fltol+3)& (0+255),b
  6059  007B60  0012               	return	
  6060  007B62                     l15684:
  6061                           
  6062                           ; BSR set to: 0
  6063  007B62  C060  F064         	movff	___fltol@f1,??___fltol
  6064  007B66  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  6065  007B6A  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  6066  007B6E  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  6067  007B72  0E20               	movlw	32
  6068  007B74  D005               	goto	u16170
  6069  007B76                     u16175:
  6070  007B76  90D8               	bcf	status,0,c
  6071  007B78  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  6072  007B7A  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  6073  007B7C  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  6074  007B7E  3364               	rrcf	??___fltol& (0+255),f,b
  6075  007B80                     u16170:
  6076  007B80  2EE8               	decfsz	wreg,f,c
  6077  007B82  D7F9               	goto	u16175
  6078  007B84  5164               	movf	??___fltol& (0+255),w,b
  6079  007B86  6F68               	movwf	___fltol@sign1& (0+255),b
  6080                           
  6081                           ; BSR set to: 0
  6082  007B88  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  6083                           
  6084                           ; BSR set to: 0
  6085  007B8A  0EFF               	movlw	255
  6086  007B8C  1760               	andwf	___fltol@f1& (0+255),f,b
  6087  007B8E  0EFF               	movlw	255
  6088  007B90  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  6089  007B92  0EFF               	movlw	255
  6090  007B94  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  6091  007B96  0E00               	movlw	0
  6092  007B98  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  6093                           
  6094                           ; BSR set to: 0
  6095  007B9A  0E96               	movlw	150
  6096  007B9C  5F69               	subwf	___fltol@exp1& (0+255),f,b
  6097                           
  6098                           ; BSR set to: 0
  6099  007B9E  AF69               	btfss	___fltol@exp1& (0+255),7,b
  6100  007BA0  D00D               	goto	l15704
  6101                           
  6102                           ; BSR set to: 0
  6103  007BA2  5169               	movf	___fltol@exp1& (0+255),w,b
  6104  007BA4  0A80               	xorlw	128
  6105  007BA6  0F97               	addlw	151
  6106  007BA8  A0D8               	btfss	status,0,c
  6107  007BAA  D7D2               	goto	u16160
  6108  007BAC                     l15700:
  6109                           
  6110                           ; BSR set to: 0
  6111  007BAC  90D8               	bcf	status,0,c
  6112  007BAE  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6113  007BB0  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6114  007BB2  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6115  007BB4  3360               	rrcf	___fltol@f1& (0+255),f,b
  6116                           
  6117                           ; BSR set to: 0
  6118  007BB6  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  6119  007BB8  D7F9               	goto	l15700
  6120  007BBA  D00D               	goto	u16210
  6121  007BBC                     l15704:
  6122                           
  6123                           ; BSR set to: 0
  6124  007BBC  0E1F               	movlw	31
  6125  007BBE  6569               	cpfsgt	___fltol@exp1& (0+255),b
  6126  007BC0  D007               	goto	l15712
  6127  007BC2  D7C6               	goto	u16160
  6128  007BC4                     l15710:
  6129                           
  6130                           ; BSR set to: 0
  6131  007BC4  90D8               	bcf	status,0,c
  6132  007BC6  3760               	rlcf	___fltol@f1& (0+255),f,b
  6133  007BC8  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6134  007BCA  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6135  007BCC  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6136  007BCE  0769               	decf	___fltol@exp1& (0+255),f,b
  6137  007BD0                     l15712:
  6138                           
  6139                           ; BSR set to: 0
  6140  007BD0  5169               	movf	___fltol@exp1& (0+255),w,b
  6141  007BD2  A4D8               	btfss	status,2,c
  6142  007BD4  D7F7               	goto	l15710
  6143  007BD6                     u16210:
  6144                           
  6145                           ; BSR set to: 0
  6146  007BD6  5168               	movf	___fltol@sign1& (0+255),w,b
  6147  007BD8  B4D8               	btfsc	status,2,c
  6148  007BDA  D008               	goto	l15718
  6149                           
  6150                           ; BSR set to: 0
  6151  007BDC  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  6152  007BDE  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  6153  007BE0  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  6154  007BE2  6D60               	negf	___fltol@f1& (0+255),b
  6155  007BE4  0E00               	movlw	0
  6156  007BE6  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6157  007BE8  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6158  007BEA  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6159  007BEC                     l15718:
  6160                           
  6161                           ; BSR set to: 0
  6162  007BEC  C060  F060         	movff	___fltol@f1,?___fltol
  6163  007BF0  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  6164  007BF4  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  6165  007BF8  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  6166                           
  6167                           ; BSR set to: 0
  6168  007BFC  0012               	return		;funcret
  6169  007BFE                     __end_of___fltol:
  6170                           	opt callstack 0
  6171                           
  6172 ;; *************** function ___flsub *****************
  6173 ;; Defined at:
  6174 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;  b               4   36[BANK0 ] long 
  6177 ;;  a               4   40[BANK0 ] long 
  6178 ;; Auto vars:     Size  Location     Type
  6179 ;;		None
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  4   36[BANK0 ] long 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0, cstack
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6189 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;Total ram usage:        8 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    8
  6196 ;; This function calls:
  6197 ;;		___fladd
  6198 ;; This function is called by:
  6199 ;;		_tempConversion
  6200 ;;		_sin
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text15
  6205  00966E                     __ptext15:
  6206                           	opt callstack 0
  6207  00966E                     ___flsub:
  6208                           	opt callstack 19
  6209                           
  6210                           ; BSR set to: 0
  6211                           ;incstack = 0
  6212  00966E  0E00               	movlw	0
  6213  009670  0100               	movlb	0	; () banked
  6214  009672  1B88               	xorwf	___flsub@a& (0+255),f,b
  6215  009674  0E00               	movlw	0
  6216  009676  1B89               	xorwf	(___flsub@a+1)& (0+255),f,b
  6217  009678  0E00               	movlw	0
  6218  00967A  1B8A               	xorwf	(___flsub@a+2)& (0+255),f,b
  6219  00967C  0E80               	movlw	128
  6220  00967E  1B8B               	xorwf	(___flsub@a+3)& (0+255),f,b
  6221                           
  6222                           ; BSR set to: 0
  6223  009680  C084  F074         	movff	___flsub@b,___fladd@b
  6224  009684  C085  F075         	movff	___flsub@b+1,___fladd@b+1
  6225  009688  C086  F076         	movff	___flsub@b+2,___fladd@b+2
  6226  00968C  C087  F077         	movff	___flsub@b+3,___fladd@b+3
  6227  009690  C088  F078         	movff	___flsub@a,___fladd@a
  6228  009694  C089  F079         	movff	___flsub@a+1,___fladd@a+1
  6229  009698  C08A  F07A         	movff	___flsub@a+2,___fladd@a+2
  6230  00969C  C08B  F07B         	movff	___flsub@a+3,___fladd@a+3
  6231  0096A0  ECCD  F015         	call	___fladd	;wreg free
  6232  0096A4  C074  F084         	movff	?___fladd,?___flsub
  6233  0096A8  C075  F085         	movff	?___fladd+1,?___flsub+1
  6234  0096AC  C076  F086         	movff	?___fladd+2,?___flsub+2
  6235  0096B0  C077  F087         	movff	?___fladd+3,?___flsub+3
  6236  0096B4  0012               	return		;funcret
  6237  0096B6                     __end_of___flsub:
  6238                           	opt callstack 0
  6239                           
  6240 ;; *************** function ___fladd *****************
  6241 ;; Defined at:
  6242 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6243 ;; Parameters:    Size  Location     Type
  6244 ;;  b               4   20[BANK0 ] long 
  6245 ;;  a               4   24[BANK0 ] long 
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  grs             1   35[BANK0 ] unsigned char 
  6248 ;;  bexp            1   34[BANK0 ] unsigned char 
  6249 ;;  aexp            1   33[BANK0 ] unsigned char 
  6250 ;;  signs           1   32[BANK0 ] unsigned char 
  6251 ;; Return value:  Size  Location     Type
  6252 ;;                  4   20[BANK0 ] unsigned char 
  6253 ;; Registers used:
  6254 ;;		wreg, status,2, status,0
  6255 ;; Tracked objects:
  6256 ;;		On entry : 0/0
  6257 ;;		On exit  : 0/0
  6258 ;;		Unchanged: 0/0
  6259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6260 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6261 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6262 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6263 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6264 ;;Total ram usage:       16 bytes
  6265 ;; Hardware stack levels used:    1
  6266 ;; Hardware stack levels required when called:    7
  6267 ;; This function calls:
  6268 ;;		Nothing
  6269 ;; This function is called by:
  6270 ;;		_tempConversion
  6271 ;;		___flsub
  6272 ;;		_log
  6273 ;;		_eval_poly
  6274 ;;		_floor
  6275 ;; This function uses a non-reentrant model
  6276 ;;
  6277                           
  6278                           	psect	text16
  6279  002B9A                     __ptext16:
  6280                           	opt callstack 0
  6281  002B9A                     ___fladd:
  6282                           	opt callstack 18
  6283                           
  6284                           ;incstack = 0
  6285  002B9A  0100               	movlb	0	; () banked
  6286  002B9C  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6287  002B9E  0B80               	andlw	128
  6288  002BA0  6F80               	movwf	___fladd@signs& (0+255),b
  6289  002BA2  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6290  002BA4  2577               	addwf	(___fladd@b+3)& (0+255),w,b
  6291  002BA6  6F82               	movwf	___fladd@bexp& (0+255),b
  6292                           
  6293                           ; BSR set to: 0
  6294  002BA8  BF76               	btfsc	(___fladd@b+2)& (0+255),7,b
  6295                           
  6296                           ; BSR set to: 0
  6297  002BAA  8182               	bsf	___fladd@bexp& (0+255),0,b
  6298                           
  6299                           ; BSR set to: 0
  6300  002BAC  5182               	movf	___fladd@bexp& (0+255),w,b
  6301  002BAE  B4D8               	btfsc	status,2,c
  6302  002BB0  D00D               	goto	l14336
  6303                           
  6304                           ; BSR set to: 0
  6305  002BB2  2982               	incf	___fladd@bexp& (0+255),w,b
  6306  002BB4  A4D8               	btfss	status,2,c
  6307  002BB6  D008               	goto	l14332
  6308                           
  6309                           ; BSR set to: 0
  6310  002BB8  0E00               	movlw	0
  6311  002BBA  6F74               	movwf	___fladd@b& (0+255),b
  6312  002BBC  0E00               	movlw	0
  6313  002BBE  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6314  002BC0  0E00               	movlw	0
  6315  002BC2  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6316  002BC4  0E00               	movlw	0
  6317  002BC6  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6318  002BC8                     l14332:
  6319                           
  6320                           ; BSR set to: 0
  6321  002BC8  8F76               	bsf	(___fladd@b+2)& (0+255),7,b
  6322  002BCA  D006               	goto	L3
  6323  002BCC                     l14336:
  6324                           
  6325                           ; BSR set to: 0
  6326  002BCC  0E00               	movlw	0
  6327  002BCE  6F74               	movwf	___fladd@b& (0+255),b
  6328  002BD0  0E00               	movlw	0
  6329  002BD2  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6330  002BD4  0E00               	movlw	0
  6331  002BD6  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6332  002BD8                     L3:
  6333  002BD8  0E00               	movlw	0
  6334  002BDA  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6335                           
  6336                           ; BSR set to: 0
  6337  002BDC  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6338  002BDE  0B80               	andlw	128
  6339  002BE0  6F81               	movwf	___fladd@aexp& (0+255),b
  6340                           
  6341                           ; BSR set to: 0
  6342  002BE2  5180               	movf	___fladd@signs& (0+255),w,b
  6343  002BE4  1981               	xorwf	___fladd@aexp& (0+255),w,b
  6344  002BE6  A4D8               	btfss	status,2,c
  6345                           
  6346                           ; BSR set to: 0
  6347  002BE8  8D80               	bsf	___fladd@signs& (0+255),6,b
  6348                           
  6349                           ; BSR set to: 0
  6350  002BEA  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6351  002BEC  257B               	addwf	(___fladd@a+3)& (0+255),w,b
  6352  002BEE  6F81               	movwf	___fladd@aexp& (0+255),b
  6353                           
  6354                           ; BSR set to: 0
  6355  002BF0  BF7A               	btfsc	(___fladd@a+2)& (0+255),7,b
  6356                           
  6357                           ; BSR set to: 0
  6358  002BF2  8181               	bsf	___fladd@aexp& (0+255),0,b
  6359                           
  6360                           ; BSR set to: 0
  6361  002BF4  5181               	movf	___fladd@aexp& (0+255),w,b
  6362  002BF6  B4D8               	btfsc	status,2,c
  6363  002BF8  D00D               	goto	l14360
  6364                           
  6365                           ; BSR set to: 0
  6366  002BFA  2981               	incf	___fladd@aexp& (0+255),w,b
  6367  002BFC  A4D8               	btfss	status,2,c
  6368  002BFE  D008               	goto	l14356
  6369                           
  6370                           ; BSR set to: 0
  6371  002C00  0E00               	movlw	0
  6372  002C02  6F78               	movwf	___fladd@a& (0+255),b
  6373  002C04  0E00               	movlw	0
  6374  002C06  6F79               	movwf	(___fladd@a+1)& (0+255),b
  6375  002C08  0E00               	movlw	0
  6376  002C0A  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  6377  002C0C  0E00               	movlw	0
  6378  002C0E  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  6379  002C10                     l14356:
  6380                           
  6381                           ; BSR set to: 0
  6382  002C10  8F7A               	bsf	(___fladd@a+2)& (0+255),7,b
  6383  002C12  D006               	goto	L4
  6384  002C14                     l14360:
  6385                           
  6386                           ; BSR set to: 0
  6387  002C14  0E00               	movlw	0
  6388  002C16  6F78               	movwf	___fladd@a& (0+255),b
  6389  002C18  0E00               	movlw	0
  6390  002C1A  6F79               	movwf	(___fladd@a+1)& (0+255),b
  6391  002C1C  0E00               	movlw	0
  6392  002C1E  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  6393  002C20                     L4:
  6394  002C20  0E00               	movlw	0
  6395  002C22  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  6396                           
  6397                           ; BSR set to: 0
  6398  002C24  5182               	movf	___fladd@bexp& (0+255),w,b
  6399  002C26  5D81               	subwf	___fladd@aexp& (0+255),w,b
  6400  002C28  B0D8               	btfsc	status,0,c
  6401  002C2A  D022               	goto	l14398
  6402                           
  6403                           ; BSR set to: 0
  6404  002C2C  AD80               	btfss	___fladd@signs& (0+255),6,b
  6405  002C2E  D002               	goto	l14368
  6406                           
  6407                           ; BSR set to: 0
  6408  002C30  0E80               	movlw	128
  6409  002C32  1B80               	xorwf	___fladd@signs& (0+255),f,b
  6410  002C34                     l14368:
  6411                           
  6412                           ; BSR set to: 0
  6413  002C34  C082  F083         	movff	___fladd@bexp,___fladd@grs
  6414                           
  6415                           ; BSR set to: 0
  6416  002C38  C081  F082         	movff	___fladd@aexp,___fladd@bexp
  6417                           
  6418                           ; BSR set to: 0
  6419  002C3C  C083  F081         	movff	___fladd@grs,___fladd@aexp
  6420                           
  6421                           ; BSR set to: 0
  6422  002C40  C074  F083         	movff	___fladd@b,___fladd@grs
  6423                           
  6424                           ; BSR set to: 0
  6425  002C44  C078  F074         	movff	___fladd@a,___fladd@b
  6426                           
  6427                           ; BSR set to: 0
  6428  002C48  C083  F078         	movff	___fladd@grs,___fladd@a
  6429                           
  6430                           ; BSR set to: 0
  6431  002C4C  C075  F083         	movff	___fladd@b+1,___fladd@grs
  6432                           
  6433                           ; BSR set to: 0
  6434  002C50  C079  F075         	movff	___fladd@a+1,___fladd@b+1
  6435                           
  6436                           ; BSR set to: 0
  6437  002C54  C083  F079         	movff	___fladd@grs,___fladd@a+1
  6438                           
  6439                           ; BSR set to: 0
  6440  002C58  C076  F083         	movff	___fladd@b+2,___fladd@grs
  6441                           
  6442                           ; BSR set to: 0
  6443  002C5C  C07A  F076         	movff	___fladd@a+2,___fladd@b+2
  6444                           
  6445                           ; BSR set to: 0
  6446  002C60  C083  F07A         	movff	___fladd@grs,___fladd@a+2
  6447                           
  6448                           ; BSR set to: 0
  6449  002C64  C077  F083         	movff	___fladd@b+3,___fladd@grs
  6450                           
  6451                           ; BSR set to: 0
  6452  002C68  C07B  F077         	movff	___fladd@a+3,___fladd@b+3
  6453                           
  6454                           ; BSR set to: 0
  6455  002C6C  C083  F07B         	movff	___fladd@grs,___fladd@a+3
  6456  002C70                     l14398:
  6457                           
  6458                           ; BSR set to: 0
  6459  002C70  0E00               	movlw	0
  6460  002C72  6F83               	movwf	___fladd@grs& (0+255),b
  6461                           
  6462                           ; BSR set to: 0
  6463  002C74  5182               	movf	___fladd@bexp& (0+255),w,b
  6464  002C76  C081  F07C         	movff	___fladd@aexp,??___fladd
  6465  002C7A  6B7D               	clrf	(??___fladd+1)& (0+255),b
  6466  002C7C  5F7C               	subwf	??___fladd& (0+255),f,b
  6467  002C7E  0E00               	movlw	0
  6468  002C80  5B7D               	subwfb	(??___fladd+1)& (0+255),f,b
  6469  002C82  BF7D               	btfsc	(??___fladd+1)& (0+255),7,b
  6470  002C84  D02C               	goto	l4040
  6471  002C86  517D               	movf	(??___fladd+1)& (0+255),w,b
  6472  002C88  E104               	bnz	u14230
  6473  002C8A  0E1A               	movlw	26
  6474  002C8C  5D7C               	subwf	??___fladd& (0+255),w,b
  6475  002C8E  A0D8               	btfss	status,0,c
  6476  002C90  D026               	goto	l4040
  6477  002C92                     u14230:
  6478                           
  6479                           ; BSR set to: 0
  6480  002C92  5174               	movf	___fladd@b& (0+255),w,b
  6481  002C94  1175               	iorwf	(___fladd@b+1)& (0+255),w,b
  6482  002C96  1176               	iorwf	(___fladd@b+2)& (0+255),w,b
  6483  002C98  1177               	iorwf	(___fladd@b+3)& (0+255),w,b
  6484  002C9A  B4D8               	btfsc	status,2,c
  6485  002C9C  D002               	goto	u14240
  6486  002C9E  0E01               	movlw	1
  6487  002CA0  D001               	goto	u14250
  6488  002CA2                     u14240:
  6489  002CA2  0E00               	movlw	0
  6490  002CA4                     u14250:
  6491  002CA4  6F83               	movwf	___fladd@grs& (0+255),b
  6492                           
  6493                           ; BSR set to: 0
  6494  002CA6  0E00               	movlw	0
  6495  002CA8  6F74               	movwf	___fladd@b& (0+255),b
  6496  002CAA  0E00               	movlw	0
  6497  002CAC  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6498  002CAE  0E00               	movlw	0
  6499  002CB0  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6500  002CB2  0E00               	movlw	0
  6501  002CB4  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6502                           
  6503                           ; BSR set to: 0
  6504  002CB6  C081  F082         	movff	___fladd@aexp,___fladd@bexp
  6505  002CBA  D015               	goto	u14280
  6506  002CBC                     l4041:
  6507                           
  6508                           ; BSR set to: 0
  6509  002CBC  A183               	btfss	___fladd@grs& (0+255),0,b
  6510  002CBE  D005               	goto	l14410
  6511                           
  6512                           ; BSR set to: 0
  6513  002CC0  90D8               	bcf	status,0,c
  6514  002CC2  3183               	rrcf	___fladd@grs& (0+255),w,b
  6515  002CC4  0901               	iorlw	1
  6516  002CC6  6F83               	movwf	___fladd@grs& (0+255),b
  6517  002CC8  D002               	goto	l14412
  6518  002CCA                     l14410:
  6519                           
  6520                           ; BSR set to: 0
  6521  002CCA  90D8               	bcf	status,0,c
  6522  002CCC  3383               	rrcf	___fladd@grs& (0+255),f,b
  6523  002CCE                     l14412:
  6524                           
  6525                           ; BSR set to: 0
  6526  002CCE  B174               	btfsc	___fladd@b& (0+255),0,b
  6527                           
  6528                           ; BSR set to: 0
  6529  002CD0  8F83               	bsf	___fladd@grs& (0+255),7,b
  6530                           
  6531                           ; BSR set to: 0
  6532  002CD2  3577               	rlcf	(___fladd@b+3)& (0+255),w,b
  6533  002CD4  3377               	rrcf	(___fladd@b+3)& (0+255),f,b
  6534  002CD6  3376               	rrcf	(___fladd@b+2)& (0+255),f,b
  6535  002CD8  3375               	rrcf	(___fladd@b+1)& (0+255),f,b
  6536  002CDA  3374               	rrcf	___fladd@b& (0+255),f,b
  6537                           
  6538                           ; BSR set to: 0
  6539  002CDC  2B82               	incf	___fladd@bexp& (0+255),f,b
  6540  002CDE                     l4040:
  6541                           
  6542                           ; BSR set to: 0
  6543  002CDE  5181               	movf	___fladd@aexp& (0+255),w,b
  6544  002CE0  5D82               	subwf	___fladd@bexp& (0+255),w,b
  6545  002CE2  A0D8               	btfss	status,0,c
  6546  002CE4  D7EB               	goto	l4041
  6547  002CE6                     u14280:
  6548                           
  6549                           ; BSR set to: 0
  6550  002CE6  BD80               	btfsc	___fladd@signs& (0+255),6,b
  6551  002CE8  D028               	goto	l14444
  6552                           
  6553                           ; BSR set to: 0
  6554  002CEA  5182               	movf	___fladd@bexp& (0+255),w,b
  6555  002CEC  A4D8               	btfss	status,2,c
  6556  002CEE  D009               	goto	l14426
  6557                           
  6558                           ; BSR set to: 0
  6559  002CF0  0E00               	movlw	0
  6560  002CF2  6F74               	movwf	?___fladd& (0+255),b
  6561  002CF4  0E00               	movlw	0
  6562  002CF6  6F75               	movwf	(?___fladd+1)& (0+255),b
  6563  002CF8  0E00               	movlw	0
  6564  002CFA  6F76               	movwf	(?___fladd+2)& (0+255),b
  6565  002CFC  0E00               	movlw	0
  6566  002CFE  6F77               	movwf	(?___fladd+3)& (0+255),b
  6567  002D00  0012               	return	
  6568  002D02                     l14426:
  6569                           
  6570                           ; BSR set to: 0
  6571  002D02  5178               	movf	___fladd@a& (0+255),w,b
  6572  002D04  2774               	addwf	___fladd@b& (0+255),f,b
  6573  002D06  5179               	movf	(___fladd@a+1)& (0+255),w,b
  6574  002D08  2375               	addwfc	(___fladd@b+1)& (0+255),f,b
  6575  002D0A  517A               	movf	(___fladd@a+2)& (0+255),w,b
  6576  002D0C  2376               	addwfc	(___fladd@b+2)& (0+255),f,b
  6577  002D0E  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6578  002D10  2377               	addwfc	(___fladd@b+3)& (0+255),f,b
  6579                           
  6580                           ; BSR set to: 0
  6581  002D12  A177               	btfss	(___fladd@b+3)& (0+255),0,b
  6582  002D14  D071               	goto	u14410
  6583                           
  6584                           ; BSR set to: 0
  6585  002D16  A183               	btfss	___fladd@grs& (0+255),0,b
  6586  002D18  D005               	goto	l14434
  6587                           
  6588                           ; BSR set to: 0
  6589  002D1A  90D8               	bcf	status,0,c
  6590  002D1C  3183               	rrcf	___fladd@grs& (0+255),w,b
  6591  002D1E  0901               	iorlw	1
  6592  002D20  6F83               	movwf	___fladd@grs& (0+255),b
  6593  002D22  D002               	goto	l14436
  6594  002D24                     l14434:
  6595                           
  6596                           ; BSR set to: 0
  6597  002D24  90D8               	bcf	status,0,c
  6598  002D26  3383               	rrcf	___fladd@grs& (0+255),f,b
  6599  002D28                     l14436:
  6600                           
  6601                           ; BSR set to: 0
  6602  002D28  B174               	btfsc	___fladd@b& (0+255),0,b
  6603                           
  6604                           ; BSR set to: 0
  6605  002D2A  8F83               	bsf	___fladd@grs& (0+255),7,b
  6606                           
  6607                           ; BSR set to: 0
  6608  002D2C  3577               	rlcf	(___fladd@b+3)& (0+255),w,b
  6609  002D2E  3377               	rrcf	(___fladd@b+3)& (0+255),f,b
  6610  002D30  3376               	rrcf	(___fladd@b+2)& (0+255),f,b
  6611  002D32  3375               	rrcf	(___fladd@b+1)& (0+255),f,b
  6612  002D34  3374               	rrcf	___fladd@b& (0+255),f,b
  6613                           
  6614                           ; BSR set to: 0
  6615  002D36  2B82               	incf	___fladd@bexp& (0+255),f,b
  6616  002D38  D05F               	goto	u14410
  6617  002D3A                     l14444:
  6618                           
  6619                           ; BSR set to: 0
  6620  002D3A  5178               	movf	___fladd@a& (0+255),w,b
  6621  002D3C  5D74               	subwf	___fladd@b& (0+255),w,b
  6622  002D3E  5179               	movf	(___fladd@a+1)& (0+255),w,b
  6623  002D40  5975               	subwfb	(___fladd@b+1)& (0+255),w,b
  6624  002D42  517A               	movf	(___fladd@a+2)& (0+255),w,b
  6625  002D44  5976               	subwfb	(___fladd@b+2)& (0+255),w,b
  6626  002D46  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6627  002D48  0A80               	xorlw	128
  6628  002D4A  6F7C               	movwf	??___fladd& (0+255),b
  6629  002D4C  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6630  002D4E  0A80               	xorlw	128
  6631  002D50  597C               	subwfb	??___fladd& (0+255),w,b
  6632  002D52  B0D8               	btfsc	status,0,c
  6633  002D54  D025               	goto	l14454
  6634                           
  6635                           ; BSR set to: 0
  6636  002D56  5174               	movf	___fladd@b& (0+255),w,b
  6637  002D58  5D78               	subwf	___fladd@a& (0+255),w,b
  6638  002D5A  6F7C               	movwf	??___fladd& (0+255),b
  6639  002D5C  5175               	movf	(___fladd@b+1)& (0+255),w,b
  6640  002D5E  5979               	subwfb	(___fladd@a+1)& (0+255),w,b
  6641  002D60  6F7D               	movwf	(??___fladd+1)& (0+255),b
  6642  002D62  5176               	movf	(___fladd@b+2)& (0+255),w,b
  6643  002D64  597A               	subwfb	(___fladd@a+2)& (0+255),w,b
  6644  002D66  6F7E               	movwf	(??___fladd+2)& (0+255),b
  6645  002D68  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6646  002D6A  597B               	subwfb	(___fladd@a+3)& (0+255),w,b
  6647  002D6C  6F7F               	movwf	(??___fladd+3)& (0+255),b
  6648  002D6E  0EFF               	movlw	255
  6649  002D70  257C               	addwf	??___fladd& (0+255),w,b
  6650  002D72  6F74               	movwf	___fladd@b& (0+255),b
  6651  002D74  0EFF               	movlw	255
  6652  002D76  217D               	addwfc	(??___fladd+1)& (0+255),w,b
  6653  002D78  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6654  002D7A  0EFF               	movlw	255
  6655  002D7C  217E               	addwfc	(??___fladd+2)& (0+255),w,b
  6656  002D7E  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6657  002D80  0EFF               	movlw	255
  6658  002D82  217F               	addwfc	(??___fladd+3)& (0+255),w,b
  6659  002D84  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6660  002D86  0E80               	movlw	128
  6661  002D88  1B80               	xorwf	___fladd@signs& (0+255),f,b
  6662                           
  6663                           ; BSR set to: 0
  6664  002D8A  6D83               	negf	___fladd@grs& (0+255),b
  6665                           
  6666                           ; BSR set to: 0
  6667  002D8C  5183               	movf	___fladd@grs& (0+255),w,b
  6668  002D8E  A4D8               	btfss	status,2,c
  6669  002D90  D00F               	goto	l4056
  6670                           
  6671                           ; BSR set to: 0
  6672  002D92  0E01               	movlw	1
  6673  002D94  2774               	addwf	___fladd@b& (0+255),f,b
  6674  002D96  0E00               	movlw	0
  6675  002D98  2375               	addwfc	(___fladd@b+1)& (0+255),f,b
  6676  002D9A  2376               	addwfc	(___fladd@b+2)& (0+255),f,b
  6677  002D9C  2377               	addwfc	(___fladd@b+3)& (0+255),f,b
  6678  002D9E  D008               	goto	l4056
  6679  002DA0                     l14454:
  6680                           
  6681                           ; BSR set to: 0
  6682  002DA0  5178               	movf	___fladd@a& (0+255),w,b
  6683  002DA2  5F74               	subwf	___fladd@b& (0+255),f,b
  6684  002DA4  5179               	movf	(___fladd@a+1)& (0+255),w,b
  6685  002DA6  5B75               	subwfb	(___fladd@b+1)& (0+255),f,b
  6686  002DA8  517A               	movf	(___fladd@a+2)& (0+255),w,b
  6687  002DAA  5B76               	subwfb	(___fladd@b+2)& (0+255),f,b
  6688  002DAC  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6689  002DAE  5B77               	subwfb	(___fladd@b+3)& (0+255),f,b
  6690  002DB0                     l4056:
  6691                           
  6692                           ; BSR set to: 0
  6693  002DB0  5174               	movf	___fladd@b& (0+255),w,b
  6694  002DB2  1175               	iorwf	(___fladd@b+1)& (0+255),w,b
  6695  002DB4  1176               	iorwf	(___fladd@b+2)& (0+255),w,b
  6696  002DB6  1177               	iorwf	(___fladd@b+3)& (0+255),w,b
  6697  002DB8  A4D8               	btfss	status,2,c
  6698  002DBA  D01C               	goto	l14478
  6699                           
  6700                           ; BSR set to: 0
  6701  002DBC  5183               	movf	___fladd@grs& (0+255),w,b
  6702  002DBE  A4D8               	btfss	status,2,c
  6703  002DC0  D019               	goto	l14478
  6704                           
  6705                           ; BSR set to: 0
  6706  002DC2  0E00               	movlw	0
  6707  002DC4  6F74               	movwf	?___fladd& (0+255),b
  6708  002DC6  0E00               	movlw	0
  6709  002DC8  6F75               	movwf	(?___fladd+1)& (0+255),b
  6710  002DCA  0E00               	movlw	0
  6711  002DCC  6F76               	movwf	(?___fladd+2)& (0+255),b
  6712  002DCE  0E00               	movlw	0
  6713  002DD0  6F77               	movwf	(?___fladd+3)& (0+255),b
  6714  002DD2  0012               	return	
  6715  002DD4                     l14462:
  6716                           
  6717                           ; BSR set to: 0
  6718  002DD4  90D8               	bcf	status,0,c
  6719  002DD6  3774               	rlcf	___fladd@b& (0+255),f,b
  6720  002DD8  3775               	rlcf	(___fladd@b+1)& (0+255),f,b
  6721  002DDA  3776               	rlcf	(___fladd@b+2)& (0+255),f,b
  6722  002DDC  3777               	rlcf	(___fladd@b+3)& (0+255),f,b
  6723                           
  6724                           ; BSR set to: 0
  6725  002DDE  BF83               	btfsc	___fladd@grs& (0+255),7,b
  6726                           
  6727                           ; BSR set to: 0
  6728  002DE0  8174               	bsf	___fladd@b& (0+255),0,b
  6729                           
  6730                           ; BSR set to: 0
  6731  002DE2  A183               	btfss	___fladd@grs& (0+255),0,b
  6732  002DE4  D002               	goto	l14472
  6733                           
  6734                           ; BSR set to: 0
  6735  002DE6  80D8               	bsf	status,0,c
  6736  002DE8  D001               	goto	L5
  6737  002DEA                     l14472:
  6738                           
  6739                           ; BSR set to: 0
  6740  002DEA  90D8               	bcf	status,0,c
  6741  002DEC                     L5:
  6742  002DEC  3783               	rlcf	___fladd@grs& (0+255),f,b
  6743                           
  6744                           ; BSR set to: 0
  6745  002DEE  5182               	movf	___fladd@bexp& (0+255),w,b
  6746  002DF0  A4D8               	btfss	status,2,c
  6747                           
  6748                           ; BSR set to: 0
  6749  002DF2  0782               	decf	___fladd@bexp& (0+255),f,b
  6750  002DF4                     l14478:
  6751                           
  6752                           ; BSR set to: 0
  6753  002DF4  AF76               	btfss	(___fladd@b+2)& (0+255),7,b
  6754  002DF6  D7EE               	goto	l14462
  6755  002DF8                     u14410:
  6756                           
  6757                           ; BSR set to: 0
  6758  002DF8  0E00               	movlw	0
  6759  002DFA  6F81               	movwf	___fladd@aexp& (0+255),b
  6760                           
  6761                           ; BSR set to: 0
  6762  002DFC  AF83               	btfss	___fladd@grs& (0+255),7,b
  6763  002DFE  D00B               	goto	l4065
  6764                           
  6765                           ; BSR set to: 0
  6766  002E00  C083  F07C         	movff	___fladd@grs,??___fladd
  6767  002E04  0E7F               	movlw	127
  6768  002E06  177C               	andwf	??___fladd& (0+255),f,b
  6769  002E08  B4D8               	btfsc	status,2,c
  6770  002E0A  D003               	goto	l4066
  6771  002E0C                     u14430:
  6772                           
  6773                           ; BSR set to: 0
  6774  002E0C  0E01               	movlw	1
  6775  002E0E  6F81               	movwf	___fladd@aexp& (0+255),b
  6776  002E10  D002               	goto	l4065
  6777  002E12                     l4066:
  6778                           
  6779                           ; BSR set to: 0
  6780  002E12  B174               	btfsc	___fladd@b& (0+255),0,b
  6781  002E14  D7FB               	goto	u14430
  6782  002E16                     l4065:
  6783                           
  6784                           ; BSR set to: 0
  6785  002E16  5181               	movf	___fladd@aexp& (0+255),w,b
  6786  002E18  B4D8               	btfsc	status,2,c
  6787  002E1A  D020               	goto	l14498
  6788                           
  6789                           ; BSR set to: 0
  6790  002E1C  0E01               	movlw	1
  6791  002E1E  2774               	addwf	___fladd@b& (0+255),f,b
  6792  002E20  0E00               	movlw	0
  6793  002E22  2375               	addwfc	(___fladd@b+1)& (0+255),f,b
  6794  002E24  2376               	addwfc	(___fladd@b+2)& (0+255),f,b
  6795  002E26  2377               	addwfc	(___fladd@b+3)& (0+255),f,b
  6796                           
  6797                           ; BSR set to: 0
  6798  002E28  A177               	btfss	(___fladd@b+3)& (0+255),0,b
  6799  002E2A  D018               	goto	l14498
  6800                           
  6801                           ; BSR set to: 0
  6802  002E2C  C074  F07C         	movff	___fladd@b,??___fladd
  6803  002E30  C075  F07D         	movff	___fladd@b+1,??___fladd+1
  6804  002E34  C076  F07E         	movff	___fladd@b+2,??___fladd+2
  6805  002E38  C077  F07F         	movff	___fladd@b+3,??___fladd+3
  6806  002E3C  357F               	rlcf	(??___fladd+3)& (0+255),w,b
  6807  002E3E  337F               	rrcf	(??___fladd+3)& (0+255),f,b
  6808  002E40  337E               	rrcf	(??___fladd+2)& (0+255),f,b
  6809  002E42  337D               	rrcf	(??___fladd+1)& (0+255),f,b
  6810  002E44  337C               	rrcf	??___fladd& (0+255),f,b
  6811  002E46  C07C  F074         	movff	??___fladd,___fladd@b
  6812  002E4A  C07D  F075         	movff	??___fladd+1,___fladd@b+1
  6813  002E4E  C07E  F076         	movff	??___fladd+2,___fladd@b+2
  6814  002E52  C07F  F077         	movff	??___fladd+3,___fladd@b+3
  6815  002E56  2982               	incf	___fladd@bexp& (0+255),w,b
  6816  002E58  A4D8               	btfss	status,2,c
  6817                           
  6818                           ; BSR set to: 0
  6819  002E5A  2B82               	incf	___fladd@bexp& (0+255),f,b
  6820  002E5C                     l14498:
  6821                           
  6822                           ; BSR set to: 0
  6823  002E5C  2982               	incf	___fladd@bexp& (0+255),w,b
  6824  002E5E  B4D8               	btfsc	status,2,c
  6825  002E60  D003               	goto	u14490
  6826                           
  6827                           ; BSR set to: 0
  6828  002E62  5182               	movf	___fladd@bexp& (0+255),w,b
  6829  002E64  A4D8               	btfss	status,2,c
  6830  002E66  D00D               	goto	l14506
  6831  002E68                     u14490:
  6832                           
  6833                           ; BSR set to: 0
  6834  002E68  0E00               	movlw	0
  6835  002E6A  6F74               	movwf	___fladd@b& (0+255),b
  6836  002E6C  0E00               	movlw	0
  6837  002E6E  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6838  002E70  0E00               	movlw	0
  6839  002E72  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6840  002E74  0E00               	movlw	0
  6841  002E76  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6842  002E78  5182               	movf	___fladd@bexp& (0+255),w,b
  6843  002E7A  A4D8               	btfss	status,2,c
  6844  002E7C  D002               	goto	l14506
  6845                           
  6846                           ; BSR set to: 0
  6847  002E7E  0E00               	movlw	0
  6848  002E80  6F80               	movwf	___fladd@signs& (0+255),b
  6849  002E82                     l14506:
  6850                           
  6851                           ; BSR set to: 0
  6852  002E82  A182               	btfss	___fladd@bexp& (0+255),0,b
  6853  002E84  D002               	goto	l14510
  6854                           
  6855                           ; BSR set to: 0
  6856  002E86  8F76               	bsf	(___fladd@b+2)& (0+255),7,b
  6857  002E88  D001               	goto	l14512
  6858  002E8A                     l14510:
  6859                           
  6860                           ; BSR set to: 0
  6861  002E8A  9F76               	bcf	(___fladd@b+2)& (0+255),7,b
  6862  002E8C                     l14512:
  6863                           
  6864                           ; BSR set to: 0
  6865  002E8C  90D8               	bcf	status,0,c
  6866  002E8E  3182               	rrcf	___fladd@bexp& (0+255),w,b
  6867  002E90  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6868                           
  6869                           ; BSR set to: 0
  6870  002E92  BF80               	btfsc	___fladd@signs& (0+255),7,b
  6871                           
  6872                           ; BSR set to: 0
  6873  002E94  8F77               	bsf	(___fladd@b+3)& (0+255),7,b
  6874                           
  6875                           ; BSR set to: 0
  6876  002E96  C074  F074         	movff	___fladd@b,?___fladd
  6877  002E9A  C075  F075         	movff	___fladd@b+1,?___fladd+1
  6878  002E9E  C076  F076         	movff	___fladd@b+2,?___fladd+2
  6879  002EA2  C077  F077         	movff	___fladd@b+3,?___fladd+3
  6880                           
  6881                           ; BSR set to: 0
  6882  002EA6  0012               	return		;funcret
  6883  002EA8                     __end_of___fladd:
  6884                           	opt callstack 0
  6885                           
  6886 ;; *************** function ___fldiv *****************
  6887 ;; Defined at:
  6888 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  b               4   61[BANK0 ] unsigned char 
  6891 ;;  a               4   65[BANK0 ] unsigned char 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;  grs             4   80[BANK0 ] unsigned long 
  6894 ;;  rem             4   73[BANK0 ] unsigned long 
  6895 ;;  new_exp         2   78[BANK0 ] int 
  6896 ;;  aexp            1   85[BANK0 ] unsigned char 
  6897 ;;  bexp            1   84[BANK0 ] unsigned char 
  6898 ;;  sign            1   77[BANK0 ] unsigned char 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  4   61[BANK0 ] unsigned char 
  6901 ;; Registers used:
  6902 ;;		wreg, status,2, status,0
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6908 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6909 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6910 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6911 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6912 ;;Total ram usage:       25 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    7
  6915 ;; This function calls:
  6916 ;;		Nothing
  6917 ;; This function is called by:
  6918 ;;		_tempConversion
  6919 ;;		_sin
  6920 ;; This function uses a non-reentrant model
  6921 ;;
  6922                           
  6923                           	psect	text17
  6924  003A4A                     __ptext17:
  6925                           	opt callstack 0
  6926  003A4A                     ___fldiv:
  6927                           	opt callstack 20
  6928                           
  6929                           ; BSR set to: 0
  6930                           ;incstack = 0
  6931  003A4A  0100               	movlb	0	; () banked
  6932  003A4C  51A0               	movf	(___fldiv@b+3)& (0+255),w,b
  6933  003A4E  0B80               	andlw	128
  6934  003A50  6FAD               	movwf	___fldiv@sign& (0+255),b
  6935  003A52  51A0               	movf	(___fldiv@b+3)& (0+255),w,b
  6936  003A54  25A0               	addwf	(___fldiv@b+3)& (0+255),w,b
  6937  003A56  6FB4               	movwf	___fldiv@bexp& (0+255),b
  6938                           
  6939                           ; BSR set to: 0
  6940  003A58  BF9F               	btfsc	(___fldiv@b+2)& (0+255),7,b
  6941                           
  6942                           ; BSR set to: 0
  6943  003A5A  81B4               	bsf	___fldiv@bexp& (0+255),0,b
  6944                           
  6945                           ; BSR set to: 0
  6946  003A5C  51B4               	movf	___fldiv@bexp& (0+255),w,b
  6947  003A5E  B4D8               	btfsc	status,2,c
  6948  003A60  D00D               	goto	l15550
  6949                           
  6950                           ; BSR set to: 0
  6951  003A62  29B4               	incf	___fldiv@bexp& (0+255),w,b
  6952  003A64  A4D8               	btfss	status,2,c
  6953  003A66  D008               	goto	l15546
  6954                           
  6955                           ; BSR set to: 0
  6956  003A68  0E00               	movlw	0
  6957  003A6A  6F9D               	movwf	___fldiv@b& (0+255),b
  6958  003A6C  0E00               	movlw	0
  6959  003A6E  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  6960  003A70  0E00               	movlw	0
  6961  003A72  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  6962  003A74  0E00               	movlw	0
  6963  003A76  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  6964  003A78                     l15546:
  6965                           
  6966                           ; BSR set to: 0
  6967  003A78  8F9F               	bsf	(___fldiv@b+2)& (0+255),7,b
  6968  003A7A  D006               	goto	L6
  6969  003A7C                     l15550:
  6970                           
  6971                           ; BSR set to: 0
  6972  003A7C  0E00               	movlw	0
  6973  003A7E  6F9D               	movwf	___fldiv@b& (0+255),b
  6974  003A80  0E00               	movlw	0
  6975  003A82  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  6976  003A84  0E00               	movlw	0
  6977  003A86  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  6978  003A88                     L6:
  6979  003A88  0E00               	movlw	0
  6980  003A8A  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  6981                           
  6982                           ; BSR set to: 0
  6983  003A8C  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  6984  003A8E  0B80               	andlw	128
  6985  003A90  1BAD               	xorwf	___fldiv@sign& (0+255),f,b
  6986                           
  6987                           ; BSR set to: 0
  6988  003A92  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  6989  003A94  25A4               	addwf	(___fldiv@a+3)& (0+255),w,b
  6990  003A96  6FB5               	movwf	___fldiv@aexp& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993  003A98  BFA3               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6994                           
  6995                           ; BSR set to: 0
  6996  003A9A  81B5               	bsf	___fldiv@aexp& (0+255),0,b
  6997                           
  6998                           ; BSR set to: 0
  6999  003A9C  51B5               	movf	___fldiv@aexp& (0+255),w,b
  7000  003A9E  B4D8               	btfsc	status,2,c
  7001  003AA0  D00D               	goto	l15570
  7002                           
  7003                           ; BSR set to: 0
  7004  003AA2  29B5               	incf	___fldiv@aexp& (0+255),w,b
  7005  003AA4  A4D8               	btfss	status,2,c
  7006  003AA6  D008               	goto	l15566
  7007                           
  7008                           ; BSR set to: 0
  7009  003AA8  0E00               	movlw	0
  7010  003AAA  6FA1               	movwf	___fldiv@a& (0+255),b
  7011  003AAC  0E00               	movlw	0
  7012  003AAE  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  7013  003AB0  0E00               	movlw	0
  7014  003AB2  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  7015  003AB4  0E00               	movlw	0
  7016  003AB6  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  7017  003AB8                     l15566:
  7018                           
  7019                           ; BSR set to: 0
  7020  003AB8  8FA3               	bsf	(___fldiv@a+2)& (0+255),7,b
  7021  003ABA  D006               	goto	L7
  7022  003ABC                     l15570:
  7023                           
  7024                           ; BSR set to: 0
  7025  003ABC  0E00               	movlw	0
  7026  003ABE  6FA1               	movwf	___fldiv@a& (0+255),b
  7027  003AC0  0E00               	movlw	0
  7028  003AC2  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  7029  003AC4  0E00               	movlw	0
  7030  003AC6  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  7031  003AC8                     L7:
  7032  003AC8  0E00               	movlw	0
  7033  003ACA  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  7034                           
  7035                           ; BSR set to: 0
  7036  003ACC  51A1               	movf	___fldiv@a& (0+255),w,b
  7037  003ACE  11A2               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7038  003AD0  11A3               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7039  003AD2  11A4               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7040  003AD4  A4D8               	btfss	status,2,c
  7041  003AD6  D017               	goto	l15584
  7042                           
  7043                           ; BSR set to: 0
  7044  003AD8  0E00               	movlw	0
  7045  003ADA  6F9D               	movwf	___fldiv@b& (0+255),b
  7046  003ADC  0E00               	movlw	0
  7047  003ADE  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7048  003AE0  0E00               	movlw	0
  7049  003AE2  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7050  003AE4  0E00               	movlw	0
  7051  003AE6  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7052                           
  7053                           ; BSR set to: 0
  7054  003AE8  0E80               	movlw	128
  7055  003AEA  139F               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7056  003AEC  0E7F               	movlw	127
  7057  003AEE  13A0               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7058  003AF0                     l15578:
  7059                           
  7060                           ; BSR set to: 0
  7061  003AF0  51AD               	movf	___fldiv@sign& (0+255),w,b
  7062  003AF2  13A0               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7063                           
  7064                           ; BSR set to: 0
  7065  003AF4  C09D  F09D         	movff	___fldiv@b,?___fldiv
  7066  003AF8  C09E  F09E         	movff	___fldiv@b+1,?___fldiv+1
  7067  003AFC  C09F  F09F         	movff	___fldiv@b+2,?___fldiv+2
  7068  003B00  C0A0  F0A0         	movff	___fldiv@b+3,?___fldiv+3
  7069  003B04  0012               	return	
  7070  003B06                     l15584:
  7071                           
  7072                           ; BSR set to: 0
  7073  003B06  51B4               	movf	___fldiv@bexp& (0+255),w,b
  7074  003B08  A4D8               	btfss	status,2,c
  7075  003B0A  D009               	goto	l15592
  7076                           
  7077                           ; BSR set to: 0
  7078                           
  7079                           ; BSR set to: 0
  7080  003B0C  0E00               	movlw	0
  7081  003B0E  6F9D               	movwf	?___fldiv& (0+255),b
  7082  003B10  0E00               	movlw	0
  7083  003B12  6F9E               	movwf	(?___fldiv+1)& (0+255),b
  7084  003B14  0E00               	movlw	0
  7085  003B16  6F9F               	movwf	(?___fldiv+2)& (0+255),b
  7086  003B18  0E00               	movlw	0
  7087  003B1A  6FA0               	movwf	(?___fldiv+3)& (0+255),b
  7088  003B1C  0012               	return	
  7089  003B1E                     l15592:
  7090                           
  7091                           ; BSR set to: 0
  7092  003B1E  51B5               	movf	___fldiv@aexp& (0+255),w,b
  7093  003B20  C0B4  F0A5         	movff	___fldiv@bexp,??___fldiv
  7094  003B24  6BA6               	clrf	(??___fldiv+1)& (0+255),b
  7095  003B26  5FA5               	subwf	??___fldiv& (0+255),f,b
  7096  003B28  0E00               	movlw	0
  7097  003B2A  5BA6               	subwfb	(??___fldiv+1)& (0+255),f,b
  7098  003B2C  0E7F               	movlw	127
  7099  003B2E  25A5               	addwf	??___fldiv& (0+255),w,b
  7100  003B30  6FAE               	movwf	___fldiv@new_exp& (0+255),b
  7101  003B32  0E00               	movlw	0
  7102  003B34  21A6               	addwfc	(??___fldiv+1)& (0+255),w,b
  7103  003B36  6FAF               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7104                           
  7105                           ; BSR set to: 0
  7106  003B38  C09D  F0A9         	movff	___fldiv@b,___fldiv@rem
  7107  003B3C  C09E  F0AA         	movff	___fldiv@b+1,___fldiv@rem+1
  7108  003B40  C09F  F0AB         	movff	___fldiv@b+2,___fldiv@rem+2
  7109  003B44  C0A0  F0AC         	movff	___fldiv@b+3,___fldiv@rem+3
  7110                           
  7111                           ; BSR set to: 0
  7112  003B48  0E00               	movlw	0
  7113  003B4A  6F9D               	movwf	___fldiv@b& (0+255),b
  7114  003B4C  0E00               	movlw	0
  7115  003B4E  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7116  003B50  0E00               	movlw	0
  7117  003B52  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7118  003B54  0E00               	movlw	0
  7119  003B56  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7120                           
  7121                           ; BSR set to: 0
  7122  003B58  0E00               	movlw	0
  7123  003B5A  6FB0               	movwf	___fldiv@grs& (0+255),b
  7124  003B5C  0E00               	movlw	0
  7125  003B5E  6FB1               	movwf	(___fldiv@grs+1)& (0+255),b
  7126  003B60  0E00               	movlw	0
  7127  003B62  6FB2               	movwf	(___fldiv@grs+2)& (0+255),b
  7128  003B64  0E00               	movlw	0
  7129  003B66  6FB3               	movwf	(___fldiv@grs+3)& (0+255),b
  7130                           
  7131                           ; BSR set to: 0
  7132  003B68  0E00               	movlw	0
  7133  003B6A  6FB5               	movwf	___fldiv@aexp& (0+255),b
  7134  003B6C  D028               	goto	l4095
  7135  003B6E                     l15602:
  7136                           
  7137                           ; BSR set to: 0
  7138  003B6E  51B5               	movf	___fldiv@aexp& (0+255),w,b
  7139  003B70  B4D8               	btfsc	status,2,c
  7140  003B72  D011               	goto	l15610
  7141                           
  7142                           ; BSR set to: 0
  7143  003B74  90D8               	bcf	status,0,c
  7144  003B76  37A9               	rlcf	___fldiv@rem& (0+255),f,b
  7145  003B78  37AA               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7146  003B7A  37AB               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7147  003B7C  37AC               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7148  003B7E  90D8               	bcf	status,0,c
  7149  003B80  379D               	rlcf	___fldiv@b& (0+255),f,b
  7150  003B82  379E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7151  003B84  379F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7152  003B86  37A0               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7153                           
  7154                           ; BSR set to: 0
  7155  003B88  BFB3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7156                           
  7157                           ; BSR set to: 0
  7158  003B8A  819D               	bsf	___fldiv@b& (0+255),0,b
  7159                           
  7160                           ; BSR set to: 0
  7161  003B8C  90D8               	bcf	status,0,c
  7162  003B8E  37B0               	rlcf	___fldiv@grs& (0+255),f,b
  7163  003B90  37B1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7164  003B92  37B2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7165  003B94  37B3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7166  003B96                     l15610:
  7167                           
  7168                           ; BSR set to: 0
  7169  003B96  51A1               	movf	___fldiv@a& (0+255),w,b
  7170  003B98  5DA9               	subwf	___fldiv@rem& (0+255),w,b
  7171  003B9A  51A2               	movf	(___fldiv@a+1)& (0+255),w,b
  7172  003B9C  59AA               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7173  003B9E  51A3               	movf	(___fldiv@a+2)& (0+255),w,b
  7174  003BA0  59AB               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7175  003BA2  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  7176  003BA4  59AC               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7177  003BA6  A0D8               	btfss	status,0,c
  7178  003BA8  D009               	goto	l15616
  7179                           
  7180                           ; BSR set to: 0
  7181  003BAA  8DB3               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7182                           
  7183                           ; BSR set to: 0
  7184  003BAC  51A1               	movf	___fldiv@a& (0+255),w,b
  7185  003BAE  5FA9               	subwf	___fldiv@rem& (0+255),f,b
  7186  003BB0  51A2               	movf	(___fldiv@a+1)& (0+255),w,b
  7187  003BB2  5BAA               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7188  003BB4  51A3               	movf	(___fldiv@a+2)& (0+255),w,b
  7189  003BB6  5BAB               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7190  003BB8  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  7191  003BBA  5BAC               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7192  003BBC                     l15616:
  7193                           
  7194                           ; BSR set to: 0
  7195  003BBC  2BB5               	incf	___fldiv@aexp& (0+255),f,b
  7196  003BBE                     l4095:
  7197                           
  7198                           ; BSR set to: 0
  7199  003BBE  0E19               	movlw	25
  7200  003BC0  65B5               	cpfsgt	___fldiv@aexp& (0+255),b
  7201  003BC2  D7D5               	goto	l15602
  7202                           
  7203                           ; BSR set to: 0
  7204  003BC4  51A9               	movf	___fldiv@rem& (0+255),w,b
  7205  003BC6  11AA               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7206  003BC8  11AB               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7207  003BCA  11AC               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7208  003BCC  B4D8               	btfsc	status,2,c
  7209  003BCE  D011               	goto	l15628
  7210                           
  7211                           ; BSR set to: 0
  7212  003BD0  81B0               	bsf	___fldiv@grs& (0+255),0,b
  7213  003BD2  D00F               	goto	l15628
  7214  003BD4                     l15622:
  7215                           
  7216                           ; BSR set to: 0
  7217  003BD4  90D8               	bcf	status,0,c
  7218  003BD6  379D               	rlcf	___fldiv@b& (0+255),f,b
  7219  003BD8  379E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7220  003BDA  379F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7221  003BDC  37A0               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7222                           
  7223                           ; BSR set to: 0
  7224  003BDE  BFB3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7225                           
  7226                           ; BSR set to: 0
  7227  003BE0  819D               	bsf	___fldiv@b& (0+255),0,b
  7228                           
  7229                           ; BSR set to: 0
  7230  003BE2  90D8               	bcf	status,0,c
  7231  003BE4  37B0               	rlcf	___fldiv@grs& (0+255),f,b
  7232  003BE6  37B1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7233  003BE8  37B2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7234  003BEA  37B3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7235  003BEC  07AE               	decf	___fldiv@new_exp& (0+255),f,b
  7236  003BEE  A0D8               	btfss	status,0,c
  7237  003BF0  07AF               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7238  003BF2                     l15628:
  7239                           
  7240                           ; BSR set to: 0
  7241  003BF2  AF9F               	btfss	(___fldiv@b+2)& (0+255),7,b
  7242  003BF4  D7EF               	goto	l15622
  7243                           
  7244                           ; BSR set to: 0
  7245  003BF6  0E00               	movlw	0
  7246  003BF8  6FB5               	movwf	___fldiv@aexp& (0+255),b
  7247                           
  7248                           ; BSR set to: 0
  7249  003BFA  AFB3               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7250  003BFC  D017               	goto	l4106
  7251                           
  7252                           ; BSR set to: 0
  7253  003BFE  0EFF               	movlw	255
  7254  003C00  15B0               	andwf	___fldiv@grs& (0+255),w,b
  7255  003C02  6FA5               	movwf	??___fldiv& (0+255),b
  7256  003C04  0EFF               	movlw	255
  7257  003C06  15B1               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7258  003C08  6FA6               	movwf	(??___fldiv+1)& (0+255),b
  7259  003C0A  0EFF               	movlw	255
  7260  003C0C  15B2               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7261  003C0E  6FA7               	movwf	(??___fldiv+2)& (0+255),b
  7262  003C10  0E7F               	movlw	127
  7263  003C12  15B3               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7264  003C14  6FA8               	movwf	(??___fldiv+3)& (0+255),b
  7265  003C16  51A5               	movf	??___fldiv& (0+255),w,b
  7266  003C18  11A6               	iorwf	(??___fldiv+1)& (0+255),w,b
  7267  003C1A  11A7               	iorwf	(??___fldiv+2)& (0+255),w,b
  7268  003C1C  11A8               	iorwf	(??___fldiv+3)& (0+255),w,b
  7269  003C1E  B4D8               	btfsc	status,2,c
  7270  003C20  D003               	goto	l4107
  7271  003C22                     u16090:
  7272                           
  7273                           ; BSR set to: 0
  7274  003C22  0E01               	movlw	1
  7275  003C24  6FB5               	movwf	___fldiv@aexp& (0+255),b
  7276  003C26  D002               	goto	l4106
  7277  003C28                     l4107:
  7278                           
  7279                           ; BSR set to: 0
  7280  003C28  B19D               	btfsc	___fldiv@b& (0+255),0,b
  7281  003C2A  D7FB               	goto	u16090
  7282  003C2C                     l4106:
  7283                           
  7284                           ; BSR set to: 0
  7285  003C2C  51B5               	movf	___fldiv@aexp& (0+255),w,b
  7286  003C2E  B4D8               	btfsc	status,2,c
  7287  003C30  D01F               	goto	l15648
  7288                           
  7289                           ; BSR set to: 0
  7290  003C32  0E01               	movlw	1
  7291  003C34  279D               	addwf	___fldiv@b& (0+255),f,b
  7292  003C36  0E00               	movlw	0
  7293  003C38  239E               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7294  003C3A  239F               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7295  003C3C  23A0               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7296                           
  7297                           ; BSR set to: 0
  7298  003C3E  A1A0               	btfss	(___fldiv@b+3)& (0+255),0,b
  7299  003C40  D017               	goto	l15648
  7300                           
  7301                           ; BSR set to: 0
  7302  003C42  C09D  F0A5         	movff	___fldiv@b,??___fldiv
  7303  003C46  C09E  F0A6         	movff	___fldiv@b+1,??___fldiv+1
  7304  003C4A  C09F  F0A7         	movff	___fldiv@b+2,??___fldiv+2
  7305  003C4E  C0A0  F0A8         	movff	___fldiv@b+3,??___fldiv+3
  7306  003C52  35A8               	rlcf	(??___fldiv+3)& (0+255),w,b
  7307  003C54  33A8               	rrcf	(??___fldiv+3)& (0+255),f,b
  7308  003C56  33A7               	rrcf	(??___fldiv+2)& (0+255),f,b
  7309  003C58  33A6               	rrcf	(??___fldiv+1)& (0+255),f,b
  7310  003C5A  33A5               	rrcf	??___fldiv& (0+255),f,b
  7311  003C5C  C0A5  F09D         	movff	??___fldiv,___fldiv@b
  7312  003C60  C0A6  F09E         	movff	??___fldiv+1,___fldiv@b+1
  7313  003C64  C0A7  F09F         	movff	??___fldiv+2,___fldiv@b+2
  7314  003C68  C0A8  F0A0         	movff	??___fldiv+3,___fldiv@b+3
  7315                           
  7316                           ; BSR set to: 0
  7317  003C6C  4BAE               	infsnz	___fldiv@new_exp& (0+255),f,b
  7318  003C6E  2BAF               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7319  003C70                     l15648:
  7320                           
  7321                           ; BSR set to: 0
  7322  003C70  BFAF               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7323  003C72  D010               	goto	l15652
  7324  003C74  51AF               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7325  003C76  E103               	bnz	u16130
  7326  003C78  29AE               	incf	___fldiv@new_exp& (0+255),w,b
  7327  003C7A  A0D8               	btfss	status,0,c
  7328  003C7C  D00B               	goto	l15652
  7329  003C7E                     u16130:
  7330                           
  7331                           ; BSR set to: 0
  7332  003C7E  0E00               	movlw	0
  7333  003C80  6FAF               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7334  003C82  69AE               	setf	___fldiv@new_exp& (0+255),b
  7335  003C84  0E00               	movlw	0
  7336  003C86  6F9D               	movwf	___fldiv@b& (0+255),b
  7337  003C88  0E00               	movlw	0
  7338  003C8A  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7339  003C8C  0E00               	movlw	0
  7340  003C8E  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7341  003C90  0E00               	movlw	0
  7342  003C92  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7343  003C94                     l15652:
  7344                           
  7345                           ; BSR set to: 0
  7346  003C94  BFAF               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7347  003C96  D005               	goto	u16140
  7348  003C98  51AF               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7349  003C9A  E111               	bnz	l15656
  7350  003C9C  05AE               	decf	___fldiv@new_exp& (0+255),w,b
  7351  003C9E  B0D8               	btfsc	status,0,c
  7352  003CA0  D00E               	goto	l15656
  7353  003CA2                     u16140:
  7354                           
  7355                           ; BSR set to: 0
  7356  003CA2  0E00               	movlw	0
  7357  003CA4  6FAF               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7358  003CA6  0E00               	movlw	0
  7359  003CA8  6FAE               	movwf	___fldiv@new_exp& (0+255),b
  7360  003CAA  0E00               	movlw	0
  7361  003CAC  6F9D               	movwf	___fldiv@b& (0+255),b
  7362  003CAE  0E00               	movlw	0
  7363  003CB0  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7364  003CB2  0E00               	movlw	0
  7365  003CB4  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7366  003CB6  0E00               	movlw	0
  7367  003CB8  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7368  003CBA  0E00               	movlw	0
  7369  003CBC  6FAD               	movwf	___fldiv@sign& (0+255),b
  7370  003CBE                     l15656:
  7371                           
  7372                           ; BSR set to: 0
  7373  003CBE  C0AE  F0B4         	movff	___fldiv@new_exp,___fldiv@bexp
  7374                           
  7375                           ; BSR set to: 0
  7376  003CC2  A1B4               	btfss	___fldiv@bexp& (0+255),0,b
  7377  003CC4  D002               	goto	l15662
  7378                           
  7379                           ; BSR set to: 0
  7380  003CC6  8F9F               	bsf	(___fldiv@b+2)& (0+255),7,b
  7381  003CC8  D001               	goto	l15664
  7382  003CCA                     l15662:
  7383                           
  7384                           ; BSR set to: 0
  7385  003CCA  9F9F               	bcf	(___fldiv@b+2)& (0+255),7,b
  7386  003CCC                     l15664:
  7387                           
  7388                           ; BSR set to: 0
  7389  003CCC  90D8               	bcf	status,0,c
  7390  003CCE  31B4               	rrcf	___fldiv@bexp& (0+255),w,b
  7391  003CD0  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7392  003CD2  D70E               	goto	l15578
  7393  003CD4                     __end_of___fldiv:
  7394                           	opt callstack 0
  7395                           
  7396 ;; *************** function _pointAddition *****************
  7397 ;; Defined at:
  7398 ;;		line 427 in file "acuadori.c"
  7399 ;; Parameters:    Size  Location     Type
  7400 ;;  element         2    0[BANK0 ] PTR unsigned char 
  7401 ;;		 -> stringValue(5), 
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  d               1    4[BANK0 ] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1    wreg      void 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 0/0
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7413 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7415 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7416 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7417 ;;Total ram usage:        5 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    7
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_tempSensAcquisition
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text18
  7428  0096B6                     __ptext18:
  7429                           	opt callstack 0
  7430  0096B6                     _pointAddition:
  7431                           	opt callstack 21
  7432                           
  7433                           ;acuadori.c: 428: for(uint8_t d = 1; d<4; d++){
  7434                           
  7435                           ; BSR set to: 0
  7436                           ;incstack = 0
  7437  0096B6  0E01               	movlw	1
  7438  0096B8  0100               	movlb	0	; () banked
  7439  0096BA  6F64               	movwf	pointAddition@d& (0+255),b
  7440  0096BC                     l16184:
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;acuadori.c: 429: element[d-1] = element[d];
  7444  0096BC  5164               	movf	pointAddition@d& (0+255),w,b
  7445  0096BE  2560               	addwf	pointAddition@element& (0+255),w,b
  7446  0096C0  6ED9               	movwf	fsr2l,c
  7447  0096C2  0E00               	movlw	0
  7448  0096C4  2161               	addwfc	(pointAddition@element+1)& (0+255),w,b
  7449  0096C6  6EDA               	movwf	fsr2h,c
  7450  0096C8  5164               	movf	pointAddition@d& (0+255),w,b
  7451  0096CA  2560               	addwf	pointAddition@element& (0+255),w,b
  7452  0096CC  6F62               	movwf	??_pointAddition& (0+255),b
  7453  0096CE  0E00               	movlw	0
  7454  0096D0  2161               	addwfc	(pointAddition@element+1)& (0+255),w,b
  7455  0096D2  6F63               	movwf	(??_pointAddition+1)& (0+255),b
  7456  0096D4  0EFF               	movlw	255
  7457  0096D6  2562               	addwf	??_pointAddition& (0+255),w,b
  7458  0096D8  6EE9               	movwf	fsr0l,c
  7459  0096DA  0EFF               	movlw	255
  7460  0096DC  2163               	addwfc	(??_pointAddition+1)& (0+255),w,b
  7461  0096DE  6EEA               	movwf	fsr0h,c
  7462  0096E0  CFDF FFEF          	movff	indf2,indf0
  7463                           
  7464                           ; BSR set to: 0
  7465  0096E4  2B64               	incf	pointAddition@d& (0+255),f,b
  7466                           
  7467                           ; BSR set to: 0
  7468  0096E6  0E03               	movlw	3
  7469  0096E8  6564               	cpfsgt	pointAddition@d& (0+255),b
  7470  0096EA  D7E8               	goto	l16184
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;acuadori.c: 430: };acuadori.c: 431: element[3] = 0x2E;
  7474  0096EC  EE20 F003          	lfsr	2,3
  7475  0096F0  5160               	movf	pointAddition@element& (0+255),w,b
  7476  0096F2  26D9               	addwf	fsr2l,f,c
  7477  0096F4  5161               	movf	(pointAddition@element+1)& (0+255),w,b
  7478  0096F6  22DA               	addwfc	fsr2h,f,c
  7479  0096F8  0E2E               	movlw	46
  7480  0096FA  6EDF               	movwf	indf2,c
  7481                           
  7482                           ; BSR set to: 0
  7483  0096FC  0012               	return		;funcret
  7484  0096FE                     __end_of_pointAddition:
  7485                           	opt callstack 0
  7486                           
  7487 ;; *************** function _strncat *****************
  7488 ;; Defined at:
  7489 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strncat.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  to              2    0[BANK0 ] PTR unsigned char 
  7492 ;;		 -> sensorsString(40), 
  7493 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  7494 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  7495 ;;		 -> STR_4(2), STR_3(2), STR_2(2), stringValue(5), 
  7496 ;;		 -> STR_1(2), 
  7497 ;;  size            2    4[BANK0 ] unsigned int 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;  cp              2    6[BANK0 ] PTR unsigned char 
  7500 ;;		 -> sensorsString(40), 
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  2    0[BANK0 ] PTR unsigned char 
  7503 ;; Registers used:
  7504 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7510 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7511 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7513 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;Total ram usage:        8 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    7
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_acuadoriApp
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text19
  7525  008456                     __ptext19:
  7526                           	opt callstack 0
  7527  008456                     _strncat:
  7528                           	opt callstack 22
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;incstack = 0
  7532  008456  C060  F066         	movff	strncat@to,strncat@cp
  7533  00845A  C061  F067         	movff	strncat@to+1,strncat@cp+1
  7534  00845E  D003               	goto	l16722
  7535  008460                     l16720:
  7536  008460  0100               	movlb	0	; () banked
  7537  008462  4B66               	infsnz	strncat@cp& (0+255),f,b
  7538  008464  2B67               	incf	(strncat@cp+1)& (0+255),f,b
  7539  008466                     l16722:
  7540  008466  C066  FFD9         	movff	strncat@cp,fsr2l
  7541  00846A  C067  FFDA         	movff	strncat@cp+1,fsr2h
  7542  00846E  50DF               	movf	indf2,w,c
  7543  008470  B4D8               	btfsc	status,2,c
  7544  008472  D009               	goto	l16726
  7545  008474  D7F5               	goto	l16720
  7546  008476                     l16724:
  7547  008476  0100               	movlb	0	; () banked
  7548  008478  0764               	decf	strncat@size& (0+255),f,b
  7549  00847A  A0D8               	btfss	status,0,c
  7550  00847C  0765               	decf	(strncat@size+1)& (0+255),f,b
  7551  00847E  4B66               	infsnz	strncat@cp& (0+255),f,b
  7552  008480  2B67               	incf	(strncat@cp+1)& (0+255),f,b
  7553  008482  4B62               	infsnz	strncat@from& (0+255),f,b
  7554  008484  2B63               	incf	(strncat@from+1)& (0+255),f,b
  7555  008486                     l16726:
  7556  008486  0100               	movlb	0	; () banked
  7557  008488  5164               	movf	strncat@size& (0+255),w,b
  7558  00848A  1165               	iorwf	(strncat@size+1)& (0+255),w,b
  7559  00848C  B4D8               	btfsc	status,2,c
  7560  00848E  D019               	goto	u17250
  7561                           
  7562                           ; BSR set to: 0
  7563  008490  C062  FFF6         	movff	strncat@from,tblptrl
  7564  008494  C063  FFF7         	movff	strncat@from+1,tblptrh
  7565  008498  0E00               	movlw	low (__mediumconst shr (0+16))
  7566  00849A  6EF8               	movwf	tblptru,c
  7567  00849C  C066  FFD9         	movff	strncat@cp,fsr2l
  7568  0084A0  C067  FFDA         	movff	strncat@cp+1,fsr2h
  7569  0084A4  0E0F               	movlw	(high __ramtop+-1)
  7570  0084A6  64F7               	cpfsgt	tblptrh,c
  7571  0084A8  D003               	bra	u17247
  7572  0084AA  0008               	tblrd		*
  7573  0084AC  50F5               	movf	tablat,w,c
  7574  0084AE  D005               	bra	u17240
  7575  0084B0                     u17247:
  7576  0084B0  CFF6 FFE9          	movff	tblptrl,fsr0l
  7577  0084B4  CFF7 FFEA          	movff	tblptrh,fsr0h
  7578  0084B8  50EF               	movf	indf0,w,c
  7579  0084BA                     u17240:
  7580  0084BA  6EDF               	movwf	indf2,c
  7581  0084BC  50DF               	movf	indf2,w,c
  7582  0084BE  A4D8               	btfss	status,2,c
  7583  0084C0  D7DA               	goto	l16724
  7584  0084C2                     u17250:
  7585  0084C2  0100               	movlb	0	; () banked
  7586  0084C4  5164               	movf	strncat@size& (0+255),w,b
  7587  0084C6  1165               	iorwf	(strncat@size+1)& (0+255),w,b
  7588  0084C8  A4D8               	btfss	status,2,c
  7589  0084CA  0012               	return	
  7590                           
  7591                           ; BSR set to: 0
  7592  0084CC  C066  FFD9         	movff	strncat@cp,fsr2l
  7593  0084D0  C067  FFDA         	movff	strncat@cp+1,fsr2h
  7594  0084D4  0E00               	movlw	0
  7595  0084D6  6EDF               	movwf	indf2,c
  7596                           
  7597                           ; BSR set to: 0
  7598  0084D8  0012               	return		;funcret
  7599  0084DA                     __end_of_strncat:
  7600                           	opt callstack 0
  7601                           
  7602 ;; *************** function _sendValue *****************
  7603 ;; Defined at:
  7604 ;;		line 378 in file "acuadori.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;		None
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;  result          4    0        unsigned long 
  7609 ;;  status          1  155[BANK0 ] unsigned char 
  7610 ;;  firstSend       1  154[BANK0 ] unsigned char 
  7611 ;; Return value:  Size  Location     Type
  7612 ;;                  1    wreg      void 
  7613 ;; Registers used:
  7614 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7615 ;; Tracked objects:
  7616 ;;		On entry : 0/0
  7617 ;;		On exit  : 0/0
  7618 ;;		Unchanged: 0/0
  7619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7624 ;;Total ram usage:        2 bytes
  7625 ;; Hardware stack levels used:    1
  7626 ;; Hardware stack levels required when called:   19
  7627 ;; This function calls:
  7628 ;;		_LORAWAN_Mainloop
  7629 ;;		_LORAWAN_Send
  7630 ;;		_SwClearAllTimers
  7631 ;;		_timerReset
  7632 ;; This function is called by:
  7633 ;;		_acuadoriApp
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text20
  7638  008E60                     __ptext20:
  7639                           	opt callstack 0
  7640  008E60                     _sendValue:
  7641                           	opt callstack 10
  7642                           
  7643                           ;acuadori.c: 380: uint8_t status = 1;
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;incstack = 0
  7647  008E60  0E01               	movlw	1
  7648  008E62  0100               	movlb	0	; () banked
  7649  008E64  6FFB               	movwf	sendValue@status& (0+255),b
  7650                           
  7651                           ;acuadori.c: 381: bool firstSend = 1;
  7652  008E66  0E01               	movlw	1
  7653  008E68  6FFA               	movwf	sendValue@firstSend& (0+255),b
  7654                           
  7655                           ;acuadori.c: 382: uint32_t result;;acuadori.c: 386: while(status){
  7656  008E6A  D026               	goto	l3375
  7657  008E6C                     l21796:
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;acuadori.c: 387: LORAWAN_Mainloop();
  7661  008E6C  ECF1  F04C         	call	_LORAWAN_Mainloop	;wreg free
  7662                           
  7663                           ;acuadori.c: 389: if(timer.sec > 10 || firstSend){
  7664  008E70  0E0B               	movlw	11
  7665  008E72  0101               	movlb	1	; () banked
  7666  008E74  6102               	cpfslt	(_timer+2)& (0+255),b
  7667  008E76  D004               	goto	u24660
  7668                           
  7669                           ; BSR set to: 1
  7670  008E78  0100               	movlb	0	; () banked
  7671  008E7A  51FA               	movf	sendValue@firstSend& (0+255),w,b
  7672  008E7C  B4D8               	btfsc	status,2,c
  7673  008E7E  D01C               	goto	l3375
  7674  008E80                     u24660:
  7675                           
  7676                           ;acuadori.c: 390: firstSend = 0;
  7677  008E80  0E00               	movlw	0
  7678  008E82  0100               	movlb	0	; () banked
  7679  008E84  6FFA               	movwf	sendValue@firstSend& (0+255),b
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;acuadori.c: 395: SwClearAllTimers();
  7683  008E86  EC56  F04E         	call	_SwClearAllTimers	;wreg free
  7684                           
  7685                           ;acuadori.c: 396: LORAWAN_Mainloop();
  7686  008E8A  ECF1  F04C         	call	_LORAWAN_Mainloop	;wreg free
  7687                           
  7688                           ;acuadori.c: 398: status = LORAWAN_Send(CNF, 200, sensorsString, sensorsStringLength);
  7689  008E8E  0EC8               	movlw	200
  7690  008E90  0100               	movlb	0	; () banked
  7691  008E92  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
  7692  008E94  0EA0               	movlw	low _sensorsString
  7693  008E96  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
  7694  008E98  0E03               	movlw	high _sensorsString
  7695  008E9A  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  7696  008E9C  C1F8  F0D7         	movff	_sensorsStringLength,LORAWAN_Send@bufferLength
  7697  008EA0  0E01               	movlw	1
  7698  008EA2  ECCF  F037         	call	_LORAWAN_Send
  7699  008EA6  0100               	movlb	0	; () banked
  7700  008EA8  6FFB               	movwf	sendValue@status& (0+255),b
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;acuadori.c: 410: if(status == NETWORK_NOT_JOINED){
  7704  008EAA  05FB               	decf	sendValue@status& (0+255),w,b
  7705  008EAC  B4D8               	btfsc	status,2,c
  7706  008EAE  0012               	return	
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;acuadori.c: 412: };acuadori.c: 413: if (status){
  7710  008EB0  51FB               	movf	sendValue@status& (0+255),w,b
  7711  008EB2  A4D8               	btfss	status,2,c
  7712                           
  7713                           ; BSR set to: 0
  7714                           ;acuadori.c: 416: timerReset();
  7715  008EB4  ECB5  F04F         	call	_timerReset	;wreg free
  7716  008EB8                     l3375:
  7717                           
  7718                           ; BSR set to: 0
  7719  008EB8  0100               	movlb	0	; () banked
  7720  008EBA  51FB               	movf	sendValue@status& (0+255),w,b
  7721  008EBC  B4D8               	btfsc	status,2,c
  7722  008EBE  0012               	return	
  7723  008EC0  D7D5               	goto	l21796
  7724  008EC2                     __end_of_sendValue:
  7725                           	opt callstack 0
  7726                           
  7727 ;; *************** function _timerReset *****************
  7728 ;; Defined at:
  7729 ;;		line 68 in file "tmrAPP.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;		None
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;		None
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;Total ram usage:        0 bytes
  7748 ;; Hardware stack levels used:    1
  7749 ;; Hardware stack levels required when called:    7
  7750 ;; This function calls:
  7751 ;;		Nothing
  7752 ;; This function is called by:
  7753 ;;		_main
  7754 ;;		_sendValue
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text21
  7759  009F6A                     __ptext21:
  7760                           	opt callstack 0
  7761  009F6A                     _timerReset:
  7762                           	opt callstack 23
  7763                           
  7764                           ;tmrAPP.c: 69: sCounter = 0;
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;incstack = 0
  7768  009F6A  0E00               	movlw	0
  7769  009F6C  0101               	movlb	1	; () banked
  7770  009F6E  6F1B               	movwf	(_sCounter+1)& (0+255),b
  7771  009F70  0E00               	movlw	0
  7772  009F72  6F1A               	movwf	_sCounter& (0+255),b
  7773                           
  7774                           ;tmrAPP.c: 70: msCounter = 0;
  7775  009F74  0E00               	movlw	0
  7776  009F76  6F1D               	movwf	(_msCounter+1)& (0+255),b
  7777  009F78  0E00               	movlw	0
  7778  009F7A  6F1C               	movwf	_msCounter& (0+255),b
  7779                           
  7780                           ;tmrAPP.c: 71: timer.ms = 0;
  7781  009F7C  0E00               	movlw	0
  7782  009F7E  6F01               	movwf	(_timer+1)& (0+255),b
  7783  009F80  0E00               	movlw	0
  7784  009F82  6F00               	movwf	_timer& (0+255),b
  7785                           
  7786                           ;tmrAPP.c: 72: timer.sec = 0;
  7787  009F84  0E00               	movlw	0
  7788  009F86  6F02               	movwf	(_timer+2)& (0+255),b
  7789                           
  7790                           ;tmrAPP.c: 73: timer.min = 0;
  7791  009F88  0E00               	movlw	0
  7792  009F8A  6F03               	movwf	(_timer+3)& (0+255),b
  7793                           
  7794                           ;tmrAPP.c: 74: timer.hour = 0;
  7795  009F8C  0E00               	movlw	0
  7796  009F8E  6F04               	movwf	(_timer+4)& (0+255),b
  7797                           
  7798                           ;tmrAPP.c: 75: timer.day = 0;
  7799  009F90  0E00               	movlw	0
  7800  009F92  6F05               	movwf	(_timer+5)& (0+255),b
  7801                           
  7802                           ; BSR set to: 1
  7803  009F94  0012               	return		;funcret
  7804  009F96                     __end_of_timerReset:
  7805                           	opt callstack 0
  7806                           
  7807 ;; *************** function _SwClearAllTimers *****************
  7808 ;; Defined at:
  7809 ;;		line 328 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;		None
  7812 ;; Auto vars:     Size  Location     Type
  7813 ;;  i               1    0[BANK0 ] unsigned char 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      void 
  7816 ;; Registers used:
  7817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7826 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;Total ram usage:        1 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:    7
  7830 ;; This function calls:
  7831 ;;		Nothing
  7832 ;; This function is called by:
  7833 ;;		_sendValue
  7834 ;; This function uses a non-reentrant model
  7835 ;;
  7836                           
  7837                           	psect	text22
  7838  009CAC                     __ptext22:
  7839                           	opt callstack 0
  7840  009CAC                     _SwClearAllTimers:
  7841                           	opt callstack 21
  7842                           
  7843                           ;sw_timer.c: 329: for (uint8_t i = 0; i < allocatedTimers; i++)
  7844                           
  7845                           ; BSR set to: 1
  7846                           ;incstack = 0
  7847  009CAC  0E00               	movlw	0
  7848  009CAE  0100               	movlb	0	; () banked
  7849  009CB0  6F60               	movwf	SwClearAllTimers@i& (0+255),b
  7850  009CB2  D00D               	goto	l21358
  7851  009CB4                     l21354:
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;sw_timer.c: 330: {;sw_timer.c: 331: swTimers[i].ticksRemaining = 0;
  7855  009CB4  5160               	movf	SwClearAllTimers@i& (0+255),w,b
  7856  009CB6  0D08               	mullw	8
  7857  009CB8  0E00               	movlw	low _swTimers
  7858  009CBA  24F3               	addwf	prodl,w,c
  7859  009CBC  6ED9               	movwf	fsr2l,c
  7860  009CBE  0E03               	movlw	high _swTimers
  7861  009CC0  20F4               	addwfc	prodh,w,c
  7862  009CC2  6EDA               	movwf	fsr2h,c
  7863  009CC4  6ADE               	clrf	postinc2,c
  7864  009CC6  6ADE               	clrf	postinc2,c
  7865  009CC8  6ADE               	clrf	postinc2,c
  7866  009CCA  6ADD               	clrf	postdec2,c
  7867                           
  7868                           ; BSR set to: 0
  7869  009CCC  2B60               	incf	SwClearAllTimers@i& (0+255),f,b
  7870  009CCE                     l21358:
  7871                           
  7872                           ; BSR set to: 0
  7873  009CCE  0101               	movlb	1	; () banked
  7874  009CD0  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
  7875  009CD2  0100               	movlb	0	; () banked
  7876  009CD4  5D60               	subwf	SwClearAllTimers@i& (0+255),w,b
  7877  009CD6  B0D8               	btfsc	status,0,c
  7878  009CD8  0012               	return	
  7879  009CDA  D7EC               	goto	l21354
  7880  009CDC                     __end_of_SwClearAllTimers:
  7881                           	opt callstack 0
  7882                           
  7883 ;; *************** function _LORAWAN_Mainloop *****************
  7884 ;; Defined at:
  7885 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;		None
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;		None
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7903 ;;Total ram usage:        0 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:   18
  7906 ;; This function calls:
  7907 ;;		_INTERRUPT_GetDioStatus
  7908 ;;		_RADIO_DIO0
  7909 ;;		_RADIO_DIO1
  7910 ;;		_RADIO_DIO2
  7911 ;;		_RADIO_DIO3
  7912 ;;		_RADIO_DIO4
  7913 ;;		_RADIO_DIO5
  7914 ;;		_SwTimersExecute
  7915 ;; This function is called by:
  7916 ;;		_main
  7917 ;;		_sendValue
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text23
  7922  0099E2                     __ptext23:
  7923                           	opt callstack 0
  7924  0099E2                     _LORAWAN_Mainloop:
  7925                           	opt callstack 10
  7926                           
  7927                           ;lorawan.c: 2240: SwTimersExecute();
  7928                           
  7929                           ; BSR set to: 0
  7930                           ;incstack = 0
  7931  0099E2  EC80  F03C         	call	_SwTimersExecute	;wreg free
  7932                           
  7933                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  7934  0099E6  ECDF  F052         	call	_INTERRUPT_GetDioStatus	;wreg free
  7935  0099EA  0101               	movlb	1	; () banked
  7936  0099EC  6F27               	movwf	_localDioStatus& (0+255),b
  7937                           
  7938                           ; BSR set to: 1
  7939                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  7940  0099EE  B127               	btfsc	_localDioStatus& (0+255),0,b
  7941                           
  7942                           ; BSR set to: 1
  7943                           ;lorawan.c: 2246: {;lorawan.c: 2247: RADIO_DIO0();
  7944  0099F0  ECD7  F040         	call	_RADIO_DIO0	;wreg free
  7945                           
  7946                           ;lorawan.c: 2248: };lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  7947  0099F4  0101               	movlb	1	; () banked
  7948  0099F6  B327               	btfsc	_localDioStatus& (0+255),1,b
  7949                           
  7950                           ; BSR set to: 1
  7951                           ;lorawan.c: 2250: {;lorawan.c: 2251: RADIO_DIO1();
  7952  0099F8  ECC6  F04A         	call	_RADIO_DIO1	;wreg free
  7953                           
  7954                           ;lorawan.c: 2252: };lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  7955  0099FC  0101               	movlb	1	; () banked
  7956  0099FE  B527               	btfsc	_localDioStatus& (0+255),2,b
  7957                           
  7958                           ; BSR set to: 1
  7959                           ;lorawan.c: 2254: {;lorawan.c: 2255: RADIO_DIO2();
  7960  009A00  EC27  F04A         	call	_RADIO_DIO2	;wreg free
  7961                           
  7962                           ;lorawan.c: 2256: };lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  7963  009A04  0101               	movlb	1	; () banked
  7964  009A06  B727               	btfsc	_localDioStatus& (0+255),3,b
  7965                           
  7966                           ; BSR set to: 1
  7967                           ;lorawan.c: 2258: {;lorawan.c: 2259: RADIO_DIO3();
  7968  009A08  EC25  F052         	call	_RADIO_DIO3	;wreg free
  7969                           
  7970                           ;lorawan.c: 2260: };lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  7971  009A0C  0101               	movlb	1	; () banked
  7972  009A0E  B927               	btfsc	_localDioStatus& (0+255),4,b
  7973                           
  7974                           ; BSR set to: 1
  7975                           ;lorawan.c: 2262: {;lorawan.c: 2263: RADIO_DIO4();
  7976  009A10  EC17  F052         	call	_RADIO_DIO4	;wreg free
  7977                           
  7978                           ;lorawan.c: 2264: };lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  7979  009A14  0101               	movlb	1	; () banked
  7980  009A16  AB27               	btfss	_localDioStatus& (0+255),5,b
  7981  009A18  0012               	return	
  7982                           
  7983                           ; BSR set to: 1
  7984                           ;lorawan.c: 2266: {;lorawan.c: 2267: RADIO_DIO5();
  7985  009A1A  EC09  F052         	call	_RADIO_DIO5	;wreg free
  7986  009A1E  0012               	return		;funcret
  7987  009A20                     __end_of_LORAWAN_Mainloop:
  7988                           	opt callstack 0
  7989                           
  7990 ;; *************** function _SwTimersExecute *****************
  7991 ;; Defined at:
  7992 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;		None
  7995 ;; Auto vars:     Size  Location     Type
  7996 ;;  i               1  127[BANK0 ] unsigned char 
  7997 ;; Return value:  Size  Location     Type
  7998 ;;                  1    wreg      void 
  7999 ;; Registers used:
  8000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8001 ;; Tracked objects:
  8002 ;;		On entry : 0/0
  8003 ;;		On exit  : 0/0
  8004 ;;		Unchanged: 0/0
  8005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8008 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8010 ;;Total ram usage:        5 bytes
  8011 ;; Hardware stack levels used:    1
  8012 ;; Hardware stack levels required when called:   17
  8013 ;; This function calls:
  8014 ;;		Absolute function
  8015 ;;		_AckRetransmissionCallback
  8016 ;;		_AutomaticReplyCallback
  8017 ;;		_DutyCycleCallback
  8018 ;;		_LORAWAN_LinkCheckCallback
  8019 ;;		_LORAWAN_ReceiveWindow1Callback
  8020 ;;		_LORAWAN_ReceiveWindow2Callback
  8021 ;;		_RADIO_RxFSKTimeout
  8022 ;;		_RADIO_WatchdogTimeout
  8023 ;;		_UnconfirmedTransmissionCallback
  8024 ;;		_UpdateJoinSuccessState
  8025 ;; This function is called by:
  8026 ;;		_LORAWAN_Mainloop
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text24
  8031  007900                     __ptext24:
  8032                           	opt callstack 0
  8033  007900                     _SwTimersExecute:
  8034                           	opt callstack 10
  8035                           
  8036                           ;sw_timer.c: 262: uint8_t i;;sw_timer.c: 264: (INTCONbits.GIE = 0);
  8037                           
  8038                           ;incstack = 0
  8039  007900  9EF2               	bcf	4082,7,c	;volatile
  8040                           
  8041                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  8042  007902  0E00               	movlw	0
  8043  007904  0100               	movlb	0	; () banked
  8044  007906  6FDF               	movwf	SwTimersExecute@i& (0+255),b
  8045  007908  D054               	goto	l21226
  8046  00790A                     l21212:
  8047                           
  8048                           ; BSR set to: 0
  8049                           ;sw_timer.c: 266: {;sw_timer.c: 269: if (swTimers[i].running == 1)
  8050  00790A  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8051  00790C  0D08               	mullw	8
  8052  00790E  0E04               	movlw	low (_swTimers+4)
  8053  007910  24F3               	addwf	prodl,w,c
  8054  007912  6ED9               	movwf	fsr2l,c
  8055  007914  0E03               	movlw	high (_swTimers+4)
  8056  007916  20F4               	addwfc	prodh,w,c
  8057  007918  6EDA               	movwf	fsr2h,c
  8058  00791A  04DE               	decf	postinc2,w,c
  8059  00791C  A4D8               	btfss	status,2,c
  8060  00791E  D047               	goto	l21224
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;sw_timer.c: 270: {;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  8064  007920  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8065  007922  0D08               	mullw	8
  8066  007924  0E00               	movlw	low _swTimers
  8067  007926  24F3               	addwf	prodl,w,c
  8068  007928  6ED9               	movwf	fsr2l,c
  8069  00792A  0E03               	movlw	high _swTimers
  8070  00792C  20F4               	addwfc	prodh,w,c
  8071  00792E  6EDA               	movwf	fsr2h,c
  8072  007930  50DE               	movf	postinc2,w,c
  8073  007932  10DE               	iorwf	postinc2,w,c
  8074  007934  10DE               	iorwf	postinc2,w,c
  8075  007936  10DE               	iorwf	postinc2,w,c
  8076  007938  A4D8               	btfss	status,2,c
  8077  00793A  D039               	goto	l21224
  8078                           
  8079                           ; BSR set to: 0
  8080                           ;sw_timer.c: 272: {;sw_timer.c: 273: swTimers[i].running = 0;
  8081  00793C  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8082  00793E  0D08               	mullw	8
  8083  007940  0E04               	movlw	low (_swTimers+4)
  8084  007942  24F3               	addwf	prodl,w,c
  8085  007944  6ED9               	movwf	fsr2l,c
  8086  007946  0E03               	movlw	high (_swTimers+4)
  8087  007948  20F4               	addwfc	prodh,w,c
  8088  00794A  6EDA               	movwf	fsr2h,c
  8089  00794C  0E00               	movlw	0
  8090  00794E  6EDF               	movwf	indf2,c
  8091                           
  8092                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  8093  007950  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8094  007952  0D08               	mullw	8
  8095  007954  0E06               	movlw	low (_swTimers+6)
  8096  007956  24F3               	addwf	prodl,w,c
  8097  007958  6ED9               	movwf	fsr2l,c
  8098  00795A  0E03               	movlw	high (_swTimers+6)
  8099  00795C  20F4               	addwfc	prodh,w,c
  8100  00795E  6EDA               	movwf	fsr2h,c
  8101  007960  50DE               	movf	postinc2,w,c
  8102  007962  10DE               	iorwf	postinc2,w,c
  8103  007964  B4D8               	btfsc	status,2,c
  8104  007966  D023               	goto	l21224
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;sw_timer.c: 275: {;sw_timer.c: 276: (INTCONbits.GIE = 1);
  8108  007968  8EF2               	bsf	4082,7,c	;volatile
  8109                           
  8110                           ; BSR set to: 0
  8111                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  8112  00796A  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8113  00796C  0D08               	mullw	8
  8114  00796E  0E05               	movlw	low (_swTimers+5)
  8115  007970  24F3               	addwf	prodl,w,c
  8116  007972  6ED9               	movwf	fsr2l,c
  8117  007974  0E03               	movlw	high (_swTimers+5)
  8118  007976  20F4               	addwfc	prodh,w,c
  8119  007978  6EDA               	movwf	fsr2h,c
  8120  00797A  50DF               	movf	indf2,w,c
  8121  00797C  6EE6               	movwf	postinc1,c
  8122  00797E  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8123  007980  0D08               	mullw	8
  8124  007982  0E06               	movlw	low (_swTimers+6)
  8125  007984  24F3               	addwf	prodl,w,c
  8126  007986  6ED9               	movwf	fsr2l,c
  8127  007988  0E03               	movlw	high (_swTimers+6)
  8128  00798A  20F4               	addwfc	prodh,w,c
  8129  00798C  6EDA               	movwf	fsr2h,c
  8130  00798E  CFDE F0DB          	movff	postinc2,??_SwTimersExecute
  8131  007992  CFDD F0DC          	movff	postdec2,??_SwTimersExecute+1
  8132  007996  D801               	call	u24158
  8133  007998  D009               	goto	u24159
  8134  00799A                     u24158:
  8135  00799A  0005               	push	
  8136  00799C  6EFA               	movwf	pclath,c
  8137  00799E  51DB               	movf	??_SwTimersExecute& (0+255),w,b
  8138  0079A0  6EFD               	movwf	tosl,c
  8139  0079A2  51DC               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  8140  0079A4  6EFE               	movwf	tosh,c
  8141  0079A6  6AFF               	clrf	tosu,c
  8142  0079A8  50FA               	movf	pclath,w,c
  8143  0079AA  0012               	return		;indir
  8144  0079AC                     u24159:
  8145                           
  8146                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  8147  0079AC  9EF2               	bcf	4082,7,c	;volatile
  8148  0079AE                     l21224:
  8149  0079AE  0100               	movlb	0	; () banked
  8150  0079B0  2BDF               	incf	SwTimersExecute@i& (0+255),f,b
  8151  0079B2                     l21226:
  8152                           
  8153                           ; BSR set to: 0
  8154  0079B2  0101               	movlb	1	; () banked
  8155  0079B4  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
  8156  0079B6  0100               	movlb	0	; () banked
  8157  0079B8  5DDF               	subwf	SwTimersExecute@i& (0+255),w,b
  8158  0079BA  A0D8               	btfss	status,0,c
  8159  0079BC  D7A6               	goto	l21212
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;sw_timer.c: 279: };sw_timer.c: 280: };sw_timer.c: 281: };sw_timer.c: 282: };sw_timer.c:
      +                           283: (INTCONbits.GIE = 1);
  8163  0079BE  8EF2               	bsf	4082,7,c	;volatile
  8164                           
  8165                           ; BSR set to: 0
  8166  0079C0  0012               	return		;funcret
  8167  0079C2                     __end_of_SwTimersExecute:
  8168                           	opt callstack 0
  8169                           
  8170 ;; *************** function _DutyCycleCallback *****************
  8171 ;; Defined at:
  8172 ;;		line 1222 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  param           1  [STACK] unsigned char 
  8175 ;; Auto vars:     Size  Location     Type
  8176 ;;  minim           4  [STACK] unsigned long 
  8177 ;;  i               1  [STACK] unsigned char 
  8178 ;;  found           1  [STACK] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  1  [STACK] void 
  8181 ;; Registers used:
  8182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 3F/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8192 ;;Total ram usage:        0 bytes
  8193 ;; Hardware stack levels used:    1
  8194 ;; Hardware stack levels required when called:   11
  8195 ;; This function calls:
  8196 ;;		_SwTimerSetTimeout
  8197 ;;		_SwTimerStart
  8198 ;;		___lldiv
  8199 ;; This function is called by:
  8200 ;;		_SetCallbackSoftwareTimers
  8201 ;;		_SwTimersExecute
  8202 ;; This function uses a reentrant model
  8203 ;;
  8204                           
  8205                           	psect	text25
  8206  002EA8                     __ptext25:
  8207                           	opt callstack 0
  8208  002EA8                     _DutyCycleCallback:
  8209                           	opt callstack 0
  8210                           
  8211                           ; BSR set to: 0
  8212                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8213  002EA8  0E0A               	movlw	10
  8214  002EAA  26E1               	addwf	fsr1l,f,c
  8215  002EAC  0E00               	movlw	0
  8216  002EAE  22E2               	addwfc	fsr1h,f,c
  8217                           
  8218                           ;lorawan_eu.c: 1224: uint32_t minim = (4294967295UL);
  8219                           
  8220                           ;incstack = 0
  8221  002EB0  0EFF               	movlw	255
  8222  002EB2  6E4E               	movwf	btemp+8,c
  8223  002EB4  0EFF               	movlw	255
  8224  002EB6  6E4F               	movwf	btemp+9,c
  8225  002EB8  0EFF               	movlw	255
  8226  002EBA  6E50               	movwf	btemp+10,c
  8227  002EBC  0EFF               	movlw	255
  8228  002EBE  6E51               	movwf	btemp+11,c
  8229                           
  8230                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8231  002EC0  0EFA               	movlw	-6
  8232  002EC2  C04E  FFE3         	movff	btemp+8,plusw1
  8233  002EC6  0EFB               	movlw	-5
  8234  002EC8  C04F  FFE3         	movff	btemp+9,plusw1
  8235  002ECC  0EFC               	movlw	-4
  8236  002ECE  C050  FFE3         	movff	btemp+10,plusw1
  8237  002ED2  0EFD               	movlw	-3
  8238  002ED4  C051  FFE3         	movff	btemp+11,plusw1
  8239                           
  8240                           ;lorawan_eu.c: 1225: bool found = 0;
  8241                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  8242  002ED8  0EFF               	movlw	-1
  8243  002EDA  6AE3               	clrf	plusw1,c
  8244                           
  8245                           ;lorawan_eu.c: 1226: uint8_t i;;lorawan_eu.c: 1228: for (i=0; i < 16; i++)
  8246                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8247  002EDC  0EFE               	movlw	-2
  8248  002EDE  6AE3               	clrf	plusw1,c
  8249  002EE0                     l21038:
  8250                           
  8251                           ;lorawan_eu.c: 1229: {;lorawan_eu.c: 1231: if ((Channels[i].status == 1) && ( Channels[i
      +                          ].channelTimer != 0 ))
  8252                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8253  002EE0  0EFE               	movlw	-2
  8254  002EE2  50E3               	movf	plusw1,w,c
  8255  002EE4  0D0E               	mullw	14
  8256  002EE6  0E18               	movlw	low (_Channels+4)
  8257  002EE8  24F3               	addwf	prodl,w,c
  8258  002EEA  6ED9               	movwf	fsr2l,c
  8259  002EEC  0E04               	movlw	high (_Channels+4)
  8260  002EEE  20F4               	addwfc	prodh,w,c
  8261  002EF0  6EDA               	movwf	fsr2h,c
  8262  002EF2  04DE               	decf	postinc2,w,c
  8263  002EF4  A4D8               	btfss	status,2,c
  8264  002EF6  D0AD               	goto	l21056
  8265                           
  8266                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8267  002EF8  0EFE               	movlw	-2
  8268  002EFA  50E3               	movf	plusw1,w,c
  8269  002EFC  0D0E               	mullw	14
  8270  002EFE  0E1C               	movlw	low (_Channels+8)
  8271  002F00  24F3               	addwf	prodl,w,c
  8272  002F02  6ED9               	movwf	fsr2l,c
  8273  002F04  0E04               	movlw	high (_Channels+8)
  8274  002F06  20F4               	addwfc	prodh,w,c
  8275  002F08  6EDA               	movwf	fsr2h,c
  8276  002F0A  50DE               	movf	postinc2,w,c
  8277  002F0C  10DE               	iorwf	postinc2,w,c
  8278  002F0E  10DE               	iorwf	postinc2,w,c
  8279  002F10  10DE               	iorwf	postinc2,w,c
  8280  002F12  B4D8               	btfsc	status,2,c
  8281  002F14  D09E               	goto	l21056
  8282                           
  8283                           ;lorawan_eu.c: 1232: {;lorawan_eu.c: 1233: if ( Channels[i].channelTimer > loRa.lastTime
      +                          rValue )
  8284                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8285  002F16  0EFE               	movlw	-2
  8286  002F18  50E3               	movf	plusw1,w,c
  8287  002F1A  0D0E               	mullw	14
  8288  002F1C  0E1C               	movlw	low (_Channels+8)
  8289  002F1E  24F3               	addwf	prodl,w,c
  8290  002F20  6ED9               	movwf	fsr2l,c
  8291  002F22  0E04               	movlw	high (_Channels+8)
  8292  002F24  20F4               	addwfc	prodh,w,c
  8293  002F26  6EDA               	movwf	fsr2h,c
  8294  002F28  50DE               	movf	postinc2,w,c
  8295  002F2A  0102               	movlb	2	; () banked
  8296  002F2C  5DCD               	subwf	(_loRa+200)& (0+255),w,b
  8297  002F2E  50DE               	movf	postinc2,w,c
  8298  002F30  59CE               	subwfb	(_loRa+201)& (0+255),w,b
  8299  002F32  50DE               	movf	postinc2,w,c
  8300  002F34  59CF               	subwfb	(_loRa+202)& (0+255),w,b
  8301  002F36  50DE               	movf	postinc2,w,c
  8302  002F38  59D0               	subwfb	(_loRa+203)& (0+255),w,b
  8303  002F3A  B0D8               	btfsc	status,0,c
  8304  002F3C  D02F               	goto	l21046
  8305                           
  8306                           ; BSR set to: 2
  8307                           ;lorawan_eu.c: 1234: {;lorawan_eu.c: 1235: Channels[i].channelTimer = Channels[i].channe
      +                          lTimer - loRa.lastTimerValue;
  8308                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8309  002F3E  0EFE               	movlw	-2
  8310  002F40  50E3               	movf	plusw1,w,c
  8311  002F42  0D0E               	mullw	14
  8312  002F44  0E1C               	movlw	low (_Channels+8)
  8313  002F46  24F3               	addwf	prodl,w,c
  8314  002F48  6ED9               	movwf	fsr2l,c
  8315  002F4A  0E04               	movlw	high (_Channels+8)
  8316  002F4C  20F4               	addwfc	prodh,w,c
  8317  002F4E  6EDA               	movwf	fsr2h,c
  8318  002F50  CFDE F04E          	movff	postinc2,btemp+8
  8319  002F54  CFDE F04F          	movff	postinc2,btemp+9
  8320  002F58  CFDE F050          	movff	postinc2,btemp+10
  8321  002F5C  CFDE F051          	movff	postinc2,btemp+11
  8322  002F60  51CD               	movf	(_loRa+200)& (0+255),w,b
  8323  002F62  5C4E               	subwf	btemp+8,w,c
  8324  002F64  6E4A               	movwf	btemp+4,c
  8325  002F66  51CE               	movf	(_loRa+201)& (0+255),w,b
  8326  002F68  584F               	subwfb	btemp+9,w,c
  8327  002F6A  6E4B               	movwf	btemp+5,c
  8328  002F6C  51CF               	movf	(_loRa+202)& (0+255),w,b
  8329  002F6E  5850               	subwfb	btemp+10,w,c
  8330  002F70  6E4C               	movwf	btemp+6,c
  8331  002F72  51D0               	movf	(_loRa+203)& (0+255),w,b
  8332  002F74  5851               	subwfb	btemp+11,w,c
  8333  002F76  6E4D               	movwf	btemp+7,c
  8334                           
  8335                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8336  002F78  0EFE               	movlw	-2
  8337  002F7A  50E3               	movf	plusw1,w,c
  8338  002F7C  0D0E               	mullw	14
  8339  002F7E  0E1C               	movlw	low (_Channels+8)
  8340  002F80  24F3               	addwf	prodl,w,c
  8341  002F82  6ED9               	movwf	fsr2l,c
  8342  002F84  0E04               	movlw	high (_Channels+8)
  8343  002F86  20F4               	addwfc	prodh,w,c
  8344  002F88  6EDA               	movwf	fsr2h,c
  8345  002F8A  C04A  FFDE         	movff	btemp+4,postinc2
  8346  002F8E  C04B  FFDE         	movff	btemp+5,postinc2
  8347  002F92  C04C  FFDE         	movff	btemp+6,postinc2
  8348  002F96  C04D  FFDE         	movff	btemp+7,postinc2
  8349                           
  8350                           ;lorawan_eu.c: 1236: }
  8351  002F9A  D00D               	goto	l21048
  8352  002F9C                     l21046:
  8353                           
  8354                           ; BSR set to: 2
  8355                           ;lorawan_eu.c: 1237: else;lorawan_eu.c: 1238: {;lorawan_eu.c: 1239: Channels[i].channelT
      +                          imer = 0;
  8356                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8357  002F9C  0EFE               	movlw	-2
  8358  002F9E  50E3               	movf	plusw1,w,c
  8359  002FA0  0D0E               	mullw	14
  8360  002FA2  0E1C               	movlw	low (_Channels+8)
  8361  002FA4  24F3               	addwf	prodl,w,c
  8362  002FA6  6ED9               	movwf	fsr2l,c
  8363  002FA8  0E04               	movlw	high (_Channels+8)
  8364  002FAA  20F4               	addwfc	prodh,w,c
  8365  002FAC  6EDA               	movwf	fsr2h,c
  8366  002FAE  6ADE               	clrf	postinc2,c
  8367  002FB0  6ADE               	clrf	postinc2,c
  8368  002FB2  6ADE               	clrf	postinc2,c
  8369  002FB4  6ADD               	clrf	postdec2,c
  8370  002FB6                     l21048:
  8371                           
  8372                           ; BSR set to: 2
  8373                           ;lorawan_eu.c: 1240: };lorawan_eu.c: 1241: if ( (Channels[i].channelTimer <= minim) && (
      +                          Channels[i].channelTimer != 0) )
  8374                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8375  002FB6  0EFE               	movlw	-2
  8376  002FB8  50E3               	movf	plusw1,w,c
  8377  002FBA  0D0E               	mullw	14
  8378  002FBC  0E1C               	movlw	low (_Channels+8)
  8379  002FBE  24F3               	addwf	prodl,w,c
  8380  002FC0  6ED9               	movwf	fsr2l,c
  8381  002FC2  0E04               	movlw	high (_Channels+8)
  8382  002FC4  20F4               	addwfc	prodh,w,c
  8383  002FC6  6EDA               	movwf	fsr2h,c
  8384                           
  8385                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8386  002FC8  0EFA               	movlw	-6
  8387  002FCA  CFE3 F046          	movff	plusw1,btemp
  8388  002FCE  50DE               	movf	postinc2,w,c
  8389  002FD0  5C46               	subwf	btemp,w,c
  8390  002FD2  0EFB               	movlw	-5
  8391  002FD4  CFE3 F046          	movff	plusw1,btemp
  8392  002FD8  50DE               	movf	postinc2,w,c
  8393  002FDA  5846               	subwfb	btemp,w,c
  8394  002FDC  0EFC               	movlw	-4
  8395  002FDE  CFE3 F046          	movff	plusw1,btemp
  8396  002FE2  50DE               	movf	postinc2,w,c
  8397  002FE4  5846               	subwfb	btemp,w,c
  8398  002FE6  0EFD               	movlw	-3
  8399  002FE8  CFE3 F046          	movff	plusw1,btemp
  8400  002FEC  50DE               	movf	postinc2,w,c
  8401  002FEE  5846               	subwfb	btemp,w,c
  8402  002FF0  A0D8               	btfss	status,0,c
  8403  002FF2  D02F               	goto	l21056
  8404                           
  8405                           ; BSR set to: 2
  8406                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8407  002FF4  0EFE               	movlw	-2
  8408  002FF6  50E3               	movf	plusw1,w,c
  8409  002FF8  0D0E               	mullw	14
  8410  002FFA  0E1C               	movlw	low (_Channels+8)
  8411  002FFC  24F3               	addwf	prodl,w,c
  8412  002FFE  6ED9               	movwf	fsr2l,c
  8413  003000  0E04               	movlw	high (_Channels+8)
  8414  003002  20F4               	addwfc	prodh,w,c
  8415  003004  6EDA               	movwf	fsr2h,c
  8416  003006  50DE               	movf	postinc2,w,c
  8417  003008  10DE               	iorwf	postinc2,w,c
  8418  00300A  10DE               	iorwf	postinc2,w,c
  8419  00300C  10DE               	iorwf	postinc2,w,c
  8420  00300E  B4D8               	btfsc	status,2,c
  8421  003010  D020               	goto	l21056
  8422                           
  8423                           ; BSR set to: 2
  8424                           ;lorawan_eu.c: 1242: {;lorawan_eu.c: 1243: minim = Channels[i].channelTimer;
  8425                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8426  003012  0EFE               	movlw	-2
  8427  003014  50E3               	movf	plusw1,w,c
  8428  003016  0D0E               	mullw	14
  8429  003018  0E1C               	movlw	low (_Channels+8)
  8430  00301A  24F3               	addwf	prodl,w,c
  8431  00301C  6ED9               	movwf	fsr2l,c
  8432  00301E  0E04               	movlw	high (_Channels+8)
  8433  003020  20F4               	addwfc	prodh,w,c
  8434  003022  6EDA               	movwf	fsr2h,c
  8435  003024  CFDE F04E          	movff	postinc2,btemp+8
  8436  003028  CFDE F04F          	movff	postinc2,btemp+9
  8437  00302C  CFDE F050          	movff	postinc2,btemp+10
  8438  003030  CFDE F051          	movff	postinc2,btemp+11
  8439                           
  8440                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8441  003034  0EFA               	movlw	-6
  8442  003036  C04E  FFE3         	movff	btemp+8,plusw1
  8443  00303A  0EFB               	movlw	-5
  8444  00303C  C04F  FFE3         	movff	btemp+9,plusw1
  8445  003040  0EFC               	movlw	-4
  8446  003042  C050  FFE3         	movff	btemp+10,plusw1
  8447  003046  0EFD               	movlw	-3
  8448  003048  C051  FFE3         	movff	btemp+11,plusw1
  8449                           
  8450                           ; BSR set to: 2
  8451                           ;lorawan_eu.c: 1244: found = 1;
  8452                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  8453  00304C  0EFF               	movlw	-1
  8454  00304E  6AE3               	clrf	plusw1,c
  8455  003050  2AE3               	incf	plusw1,f,c
  8456  003052                     l21056:
  8457                           
  8458                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8459  003052  0EFE               	movlw	-2
  8460  003054  2AE3               	incf	plusw1,f,c
  8461                           
  8462                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8463  003056  0EFE               	movlw	-2
  8464  003058  CFE3 F046          	movff	plusw1,btemp
  8465  00305C  0E0F               	movlw	15
  8466  00305E  6446               	cpfsgt	btemp,c
  8467  003060  D73F               	goto	l21038
  8468                           
  8469                           ;lorawan_eu.c: 1245: };lorawan_eu.c: 1246: };lorawan_eu.c: 1247: };lorawan_eu.c: 1248: i
      +                          f ( found == 1 )
  8470                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  8471  003062  0EFF               	movlw	-1
  8472  003064  04E3               	decf	plusw1,w,c
  8473  003066  A4D8               	btfss	status,2,c
  8474  003068  D09D               	goto	l1315
  8475                           
  8476                           ;lorawan_eu.c: 1249: {;lorawan_eu.c: 1250: loRa.lastTimerValue = minim;
  8477                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8478  00306A  50E1               	movf	fsr1l,w,c
  8479  00306C  0FFA               	addlw	-6
  8480  00306E  6ED9               	movwf	fsr2l,c
  8481  003070  50E2               	movf	fsr1h,w,c
  8482  003072  6EDA               	movwf	fsr2h,c
  8483  003074  0EFF               	movlw	255
  8484  003076  22DA               	addwfc	fsr2h,f,c
  8485  003078  CFDE F2CD          	movff	postinc2,_loRa+200
  8486  00307C  CFDE F2CE          	movff	postinc2,_loRa+201
  8487  003080  CFDE F2CF          	movff	postinc2,_loRa+202
  8488  003084  CFDE F2D0          	movff	postinc2,_loRa+203
  8489                           
  8490                           ;lorawan_eu.c: 1251: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  8491                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8492  003088  0EFD               	movlw	-3
  8493  00308A  50E3               	movf	plusw1,w,c
  8494  00308C  E10E               	bnz	u23780
  8495  00308E  0EFA               	movlw	-6
  8496  003090  28E3               	incf	plusw1,w,c
  8497  003092  0EFB               	movlw	-5
  8498  003094  CFE3 F046          	movff	plusw1,btemp
  8499  003098  0EFF               	movlw	255
  8500  00309A  5A46               	subwfb	btemp,f,c
  8501  00309C  0EFC               	movlw	-4
  8502  00309E  CFE3 F046          	movff	plusw1,btemp
  8503  0030A2  0E0F               	movlw	15
  8504  0030A4  5A46               	subwfb	btemp,f,c
  8505  0030A6  A0D8               	btfss	status,0,c
  8506  0030A8  D02B               	goto	l21068
  8507  0030AA                     u23780:
  8508                           
  8509                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8510  0030AA  50E1               	movf	fsr1l,w,c
  8511  0030AC  0FFA               	addlw	-6
  8512  0030AE  6ED9               	movwf	fsr2l,c
  8513  0030B0  50E2               	movf	fsr1h,w,c
  8514  0030B2  6EDA               	movwf	fsr2h,c
  8515  0030B4  0EFF               	movlw	255
  8516  0030B6  22DA               	addwfc	fsr2h,f,c
  8517  0030B8  CFDE F060          	movff	postinc2,___lldiv@dividend
  8518  0030BC  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8519  0030C0  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8520  0030C4  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8521  0030C8  0E7D               	movlw	125
  8522  0030CA  0100               	movlb	0	; () banked
  8523  0030CC  6F64               	movwf	___lldiv@divisor& (0+255),b
  8524  0030CE  0E00               	movlw	0
  8525  0030D0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8526  0030D2  0E00               	movlw	0
  8527  0030D4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8528  0030D6  0E00               	movlw	0
  8529  0030D8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8530  0030DA  EC6D  F042         	call	___lldiv	;wreg free
  8531  0030DE  C060  F04E         	movff	?___lldiv,btemp+8
  8532  0030E2  C061  F04F         	movff	?___lldiv+1,btemp+9
  8533  0030E6  C062  F050         	movff	?___lldiv+2,btemp+10
  8534  0030EA  C063  F051         	movff	?___lldiv+3,btemp+11
  8535  0030EE  0E0C               	movlw	12
  8536  0030F0                     u23795:
  8537  0030F0  90D8               	bcf	status,0,c
  8538  0030F2  364E               	rlcf	btemp+8,f,c
  8539  0030F4  364F               	rlcf	btemp+9,f,c
  8540  0030F6  3650               	rlcf	btemp+10,f,c
  8541  0030F8  3651               	rlcf	btemp+11,f,c
  8542  0030FA  2EE8               	decfsz	wreg,f,c
  8543  0030FC  D7F9               	goto	u23795
  8544  0030FE  D02F               	goto	L8
  8545  003100                     l21068:
  8546                           
  8547                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8548  003100  0EFA               	movlw	-6
  8549  003102  CFE3 F04E          	movff	plusw1,btemp+8
  8550  003106  0EFB               	movlw	-5
  8551  003108  CFE3 F04F          	movff	plusw1,btemp+9
  8552  00310C  0EFC               	movlw	-4
  8553  00310E  CFE3 F050          	movff	plusw1,btemp+10
  8554  003112  0EFD               	movlw	-3
  8555  003114  CFE3 F051          	movff	plusw1,btemp+11
  8556  003118  0E0C               	movlw	12
  8557  00311A                     u23805:
  8558  00311A  90D8               	bcf	status,0,c
  8559  00311C  364E               	rlcf	btemp+8,f,c
  8560  00311E  364F               	rlcf	btemp+9,f,c
  8561  003120  3650               	rlcf	btemp+10,f,c
  8562  003122  3651               	rlcf	btemp+11,f,c
  8563  003124  2EE8               	decfsz	wreg,f,c
  8564  003126  D7F9               	goto	u23805
  8565  003128  C04E  F060         	movff	btemp+8,___lldiv@dividend
  8566  00312C  C04F  F061         	movff	btemp+9,___lldiv@dividend+1
  8567  003130  C050  F062         	movff	btemp+10,___lldiv@dividend+2
  8568  003134  C051  F063         	movff	btemp+11,___lldiv@dividend+3
  8569  003138  0E7D               	movlw	125
  8570  00313A  0100               	movlb	0	; () banked
  8571  00313C  6F64               	movwf	___lldiv@divisor& (0+255),b
  8572  00313E  0E00               	movlw	0
  8573  003140  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8574  003142  0E00               	movlw	0
  8575  003144  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8576  003146  0E00               	movlw	0
  8577  003148  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8578  00314A  EC6D  F042         	call	___lldiv	;wreg free
  8579  00314E  C060  F04E         	movff	?___lldiv,btemp+8
  8580  003152  C061  F04F         	movff	?___lldiv+1,btemp+9
  8581  003156  C062  F050         	movff	?___lldiv+2,btemp+10
  8582  00315A  C063  F051         	movff	?___lldiv+3,btemp+11
  8583  00315E                     L8:
  8584                           
  8585                           ;stkvar	_DutyCycleCallback$1859 @ sp[(-10)+0]
  8586  00315E  0EF6               	movlw	-10
  8587  003160  C04E  FFE3         	movff	btemp+8,plusw1
  8588  003164  0EF7               	movlw	-9
  8589  003166  C04F  FFE3         	movff	btemp+9,plusw1
  8590  00316A  0EF8               	movlw	-8
  8591  00316C  C050  FFE3         	movff	btemp+10,plusw1
  8592  003170  0EF9               	movlw	-7
  8593  003172  C051  FFE3         	movff	btemp+11,plusw1
  8594                           
  8595                           ;stkvar	_DutyCycleCallback$1859 @ sp[(-10)+0]
  8596  003176  50E1               	movf	fsr1l,w,c
  8597  003178  0FF6               	addlw	-10
  8598  00317A  6ED9               	movwf	fsr2l,c
  8599  00317C  50E2               	movf	fsr1h,w,c
  8600  00317E  6EDA               	movwf	fsr2h,c
  8601  003180  0EFF               	movlw	255
  8602  003182  22DA               	addwfc	fsr2h,f,c
  8603  003184  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  8604  003188  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  8605  00318C  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  8606  003190  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  8607  003194  0102               	movlb	2	; () banked
  8608  003196  51EE               	movf	(_loRa+233)& (0+255),w,b
  8609  003198  EC2D  F04C         	call	_SwTimerSetTimeout
  8610                           
  8611                           ;lorawan_eu.c: 1252: SwTimerStart (loRa.dutyCycleTimerId);
  8612  00319C  0102               	movlb	2	; () banked
  8613  00319E  51EE               	movf	(_loRa+233)& (0+255),w,b
  8614  0031A0  EC4A  F040         	call	_SwTimerStart
  8615  0031A4                     l1315:
  8616                           
  8617                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8618  0031A4  0EF5               	movlw	245
  8619  0031A6  26E1               	addwf	fsr1l,f,c
  8620  0031A8  0EFF               	movlw	255
  8621  0031AA  22E2               	addwfc	fsr1h,f,c
  8622  0031AC  0012               	return		;funcret
  8623  0031AE                     __end_of_DutyCycleCallback:
  8624                           	opt callstack 0
  8625                           
  8626 ;; *************** function _UpdateJoinSuccessState *****************
  8627 ;; Defined at:
  8628 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8629 ;; Parameters:    Size  Location     Type
  8630 ;;  param           1  [STACK] unsigned char 
  8631 ;; Auto vars:     Size  Location     Type
  8632 ;;		None
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  1  [STACK] void 
  8635 ;; Registers used:
  8636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8646 ;;Total ram usage:        0 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:   11
  8649 ;; This function calls:
  8650 ;;		_RxJoinResponse
  8651 ;;		_SwTimerSetTimeout
  8652 ;;		_SwTimerStart
  8653 ;;		___lldiv
  8654 ;; This function is called by:
  8655 ;;		_SetCallbackSoftwareTimers
  8656 ;;		_LORAWAN_RxDone
  8657 ;;		_SwTimersExecute
  8658 ;; This function uses a reentrant model
  8659 ;;
  8660                           
  8661                           	psect	text26
  8662  005A4E                     __ptext26:
  8663                           	opt callstack 0
  8664  005A4E                     _UpdateJoinSuccessState:
  8665                           	opt callstack 0
  8666                           
  8667                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8668  005A4E  52E6               	movf	postinc1,f,c
  8669  005A50  52E6               	movf	postinc1,f,c
  8670  005A52  52E6               	movf	postinc1,f,c
  8671  005A54  52E6               	movf	postinc1,f,c
  8672                           
  8673                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  8674                           
  8675                           ;incstack = 0
  8676  005A56  0102               	movlb	2	; () banked
  8677  005A58  9505               	bcf	_loRa& (0+255),2,b
  8678                           
  8679                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  8680  005A5A  8907               	bsf	(_loRa+2)& (0+255),4,b
  8681                           
  8682                           ; BSR set to: 2
  8683                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  8684  005A5C  0EF0               	movlw	-16
  8685  005A5E  1707               	andwf	(_loRa+2)& (0+255),f,b
  8686                           
  8687                           ; BSR set to: 2
  8688                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  8689  005A60  6BD5               	clrf	(_loRa+208)& (0+255),b
  8690  005A62  6BD6               	clrf	(_loRa+209)& (0+255),b
  8691                           
  8692                           ; BSR set to: 2
  8693                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  8694  005A64  6BF3               	clrf	(_loRa+238)& (0+255),b
  8695                           
  8696                           ; BSR set to: 2
  8697                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  8698  005A66  A508               	btfss	(_loRa+3)& (0+255),2,b
  8699  005A68  D07B               	goto	l20066
  8700                           
  8701                           ; BSR set to: 2
  8702                           ;lorawan.c: 1052: {;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.per
      +                          iodForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 12
      +                          5UL ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  8703  005A6A  51D4               	movf	(_loRa+207)& (0+255),w,b
  8704  005A6C  E107               	bnz	u21900
  8705  005A6E  29D1               	incf	(_loRa+204)& (0+255),w,b
  8706  005A70  0EFF               	movlw	255
  8707  005A72  59D2               	subwfb	(_loRa+205)& (0+255),w,b
  8708  005A74  0E0F               	movlw	15
  8709  005A76  59D3               	subwfb	(_loRa+206)& (0+255),w,b
  8710  005A78  A0D8               	btfss	status,0,c
  8711  005A7A  D024               	goto	l20060
  8712  005A7C                     u21900:
  8713                           
  8714                           ; BSR set to: 2
  8715  005A7C  C2D1  F060         	movff	_loRa+204,___lldiv@dividend
  8716  005A80  C2D2  F061         	movff	_loRa+205,___lldiv@dividend+1
  8717  005A84  C2D3  F062         	movff	_loRa+206,___lldiv@dividend+2
  8718  005A88  C2D4  F063         	movff	_loRa+207,___lldiv@dividend+3
  8719  005A8C  0E7D               	movlw	125
  8720  005A8E  0100               	movlb	0	; () banked
  8721  005A90  6F64               	movwf	___lldiv@divisor& (0+255),b
  8722  005A92  0E00               	movlw	0
  8723  005A94  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8724  005A96  0E00               	movlw	0
  8725  005A98  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8726  005A9A  0E00               	movlw	0
  8727  005A9C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8728  005A9E  EC6D  F042         	call	___lldiv	;wreg free
  8729  005AA2  C060  F04E         	movff	?___lldiv,btemp+8
  8730  005AA6  C061  F04F         	movff	?___lldiv+1,btemp+9
  8731  005AAA  C062  F050         	movff	?___lldiv+2,btemp+10
  8732  005AAE  C063  F051         	movff	?___lldiv+3,btemp+11
  8733  005AB2  0E0C               	movlw	12
  8734  005AB4                     u21915:
  8735  005AB4  90D8               	bcf	status,0,c
  8736  005AB6  364E               	rlcf	btemp+8,f,c
  8737  005AB8  364F               	rlcf	btemp+9,f,c
  8738  005ABA  3650               	rlcf	btemp+10,f,c
  8739  005ABC  3651               	rlcf	btemp+11,f,c
  8740  005ABE  2EE8               	decfsz	wreg,f,c
  8741  005AC0  D7F9               	goto	u21915
  8742  005AC2  D02B               	goto	L9
  8743  005AC4                     l20060:
  8744                           
  8745                           ; BSR set to: 2
  8746  005AC4  C2D1  F04E         	movff	_loRa+204,btemp+8
  8747  005AC8  C2D2  F04F         	movff	_loRa+205,btemp+9
  8748  005ACC  C2D3  F050         	movff	_loRa+206,btemp+10
  8749  005AD0  C2D4  F051         	movff	_loRa+207,btemp+11
  8750  005AD4  0E0C               	movlw	12
  8751  005AD6                     u21925:
  8752  005AD6  90D8               	bcf	status,0,c
  8753  005AD8  364E               	rlcf	btemp+8,f,c
  8754  005ADA  364F               	rlcf	btemp+9,f,c
  8755  005ADC  3650               	rlcf	btemp+10,f,c
  8756  005ADE  3651               	rlcf	btemp+11,f,c
  8757  005AE0  2EE8               	decfsz	wreg,f,c
  8758  005AE2  D7F9               	goto	u21925
  8759  005AE4  C04E  F060         	movff	btemp+8,___lldiv@dividend
  8760  005AE8  C04F  F061         	movff	btemp+9,___lldiv@dividend+1
  8761  005AEC  C050  F062         	movff	btemp+10,___lldiv@dividend+2
  8762  005AF0  C051  F063         	movff	btemp+11,___lldiv@dividend+3
  8763  005AF4  0E7D               	movlw	125
  8764  005AF6  0100               	movlb	0	; () banked
  8765  005AF8  6F64               	movwf	___lldiv@divisor& (0+255),b
  8766  005AFA  0E00               	movlw	0
  8767  005AFC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8768  005AFE  0E00               	movlw	0
  8769  005B00  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8770  005B02  0E00               	movlw	0
  8771  005B04  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8772  005B06  EC6D  F042         	call	___lldiv	;wreg free
  8773  005B0A  C060  F04E         	movff	?___lldiv,btemp+8
  8774  005B0E  C061  F04F         	movff	?___lldiv+1,btemp+9
  8775  005B12  C062  F050         	movff	?___lldiv+2,btemp+10
  8776  005B16  C063  F051         	movff	?___lldiv+3,btemp+11
  8777  005B1A                     L9:
  8778                           
  8779                           ;stkvar	_UpdateJoinSuccessState$2530 @ sp[(-4)+0]
  8780  005B1A  0EFC               	movlw	-4
  8781  005B1C  C04E  FFE3         	movff	btemp+8,plusw1
  8782  005B20  0EFD               	movlw	-3
  8783  005B22  C04F  FFE3         	movff	btemp+9,plusw1
  8784  005B26  0EFE               	movlw	-2
  8785  005B28  C050  FFE3         	movff	btemp+10,plusw1
  8786  005B2C  0EFF               	movlw	-1
  8787  005B2E  C051  FFE3         	movff	btemp+11,plusw1
  8788                           
  8789                           ;stkvar	_UpdateJoinSuccessState$2530 @ sp[(-4)+0]
  8790  005B32  50E1               	movf	fsr1l,w,c
  8791  005B34  0FFC               	addlw	-4
  8792  005B36  6ED9               	movwf	fsr2l,c
  8793  005B38  50E2               	movf	fsr1h,w,c
  8794  005B3A  6EDA               	movwf	fsr2h,c
  8795  005B3C  0EFF               	movlw	255
  8796  005B3E  22DA               	addwfc	fsr2h,f,c
  8797  005B40  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  8798  005B44  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  8799  005B48  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  8800  005B4C  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  8801  005B50  0102               	movlb	2	; () banked
  8802  005B52  51EC               	movf	(_loRa+231)& (0+255),w,b
  8803  005B54  EC2D  F04C         	call	_SwTimerSetTimeout
  8804                           
  8805                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  8806  005B58  0102               	movlb	2	; () banked
  8807  005B5A  51EC               	movf	(_loRa+231)& (0+255),w,b
  8808  005B5C  EC4A  F040         	call	_SwTimerStart
  8809  005B60                     l20066:
  8810                           
  8811                           ;lorawan.c: 1055: };lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  8812  005B60  0101               	movlb	1	; () banked
  8813  005B62  5110               	movf	(_rxPayload+2)& (0+255),w,b
  8814  005B64  1111               	iorwf	(_rxPayload+3)& (0+255),w,b
  8815  005B66  B4D8               	btfsc	status,2,c
  8816  005B68  D00C               	goto	u21949
  8817                           
  8818                           ; BSR set to: 1
  8819                           ;lorawan.c: 1058: {;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  8820  005B6A  D801               	call	u21948
  8821  005B6C  D00A               	goto	u21949
  8822  005B6E                     u21948:
  8823  005B6E  0005               	push	
  8824  005B70  6EFA               	movwf	pclath,c
  8825  005B72  5110               	movf	(_rxPayload+2)& (0+255),w,b
  8826  005B74  6EFD               	movwf	tosl,c
  8827  005B76  5111               	movf	(_rxPayload+3)& (0+255),w,b
  8828  005B78  6EFE               	movwf	tosh,c
  8829  005B7A  6AFF               	clrf	tosu,c
  8830  005B7C  50FA               	movf	pclath,w,c
  8831  005B7E  0E01               	movlw	1
  8832  005B80  0012               	return		;indir
  8833  005B82                     u21949:
  8834                           
  8835                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  8836  005B82  0EFB               	movlw	251
  8837  005B84  26E1               	addwf	fsr1l,f,c
  8838  005B86  0EFF               	movlw	255
  8839  005B88  22E2               	addwfc	fsr1h,f,c
  8840  005B8A  0012               	return		;funcret
  8841  005B8C                     __end_of_UpdateJoinSuccessState:
  8842                           	opt callstack 0
  8843                           
  8844 ;; *************** function _AutomaticReplyCallback *****************
  8845 ;; Defined at:
  8846 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  param           1  [STACK] unsigned char 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  1  [STACK] void 
  8853 ;; Registers used:
  8854 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8855 ;; Tracked objects:
  8856 ;;		On entry : 3F/0
  8857 ;;		On exit  : 3F/2
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8864 ;;Total ram usage:        0 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:   14
  8867 ;; This function calls:
  8868 ;;		_LORAWAN_Send
  8869 ;; This function is called by:
  8870 ;;		_SetCallbackSoftwareTimers
  8871 ;;		_SwTimersExecute
  8872 ;; This function uses a reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text27
  8876  00A15E                     __ptext27:
  8877                           	opt callstack 0
  8878  00A15E                     _AutomaticReplyCallback:
  8879                           	opt callstack 12
  8880                           
  8881                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  8882                           
  8883                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8884                           ;incstack = 0
  8885  00A15E  0EF0               	movlw	-16
  8886  00A160  0102               	movlb	2	; () banked
  8887  00A162  1707               	andwf	(_loRa+2)& (0+255),f,b
  8888                           
  8889                           ; BSR set to: 2
  8890                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  8891  00A164  0E00               	movlw	0
  8892  00A166  0100               	movlb	0	; () banked
  8893  00A168  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
  8894  00A16A  0E00               	movlw	0
  8895  00A16C  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
  8896  00A16E  0E00               	movlw	0
  8897  00A170  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  8898  00A172  0E00               	movlw	0
  8899  00A174  6FD7               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  8900  00A176  0E00               	movlw	0
  8901  00A178  ECCF  F037         	call	_LORAWAN_Send
  8902                           
  8903                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  8904  00A17C  0102               	movlb	2	; () banked
  8905  00A17E  9705               	bcf	_loRa& (0+255),3,b
  8906                           
  8907                           ; BSR set to: 2
  8908                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  8909  00A180  52E5               	movf	postdec1,f,c
  8910  00A182  0012               	return		;funcret
  8911  00A184                     __end_of_AutomaticReplyCallback:
  8912                           	opt callstack 0
  8913                           
  8914 ;; *************** function _AckRetransmissionCallback *****************
  8915 ;; Defined at:
  8916 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  param           1  [STACK] unsigned char 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  maximumPacke    1  [STACK] unsigned char 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  1  [STACK] void 
  8923 ;; Registers used:
  8924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8925 ;; Tracked objects:
  8926 ;;		On entry : 3F/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8934 ;;Total ram usage:        0 bytes
  8935 ;; Hardware stack levels used:    1
  8936 ;; Hardware stack levels required when called:   13
  8937 ;; This function calls:
  8938 ;;		_FindSmallestDataRate
  8939 ;;		_LORAWAN_GetMaxPayloadSize
  8940 ;;		_RADIO_Transmit
  8941 ;;		_ResetParametersForConfirmedTransmission
  8942 ;;		_RxData
  8943 ;;		_SelectChannelForTransmission
  8944 ;;		_UpdateRetransmissionAckTimeoutState
  8945 ;; This function is called by:
  8946 ;;		_SetCallbackSoftwareTimers
  8947 ;;		_SwTimersExecute
  8948 ;; This function uses a reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text28
  8952  005F2A                     __ptext28:
  8953                           	opt callstack 0
  8954  005F2A                     _AckRetransmissionCallback:
  8955                           	opt callstack 0
  8956                           
  8957                           ; BSR set to: 2
  8958                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8959  005F2A  52E6               	movf	postinc1,f,c
  8960                           
  8961                           ;lorawan.c: 936: uint8_t maximumPacketSize;;lorawan.c: 938: if (loRa.macStatus.macPause 
      +                          == 0)
  8962                           
  8963                           ;incstack = 0
  8964  005F2C  0102               	movlb	2	; () banked
  8965  005F2E  B108               	btfsc	(_loRa+3)& (0+255),0,b
  8966  005F30  D086               	goto	l21174
  8967                           
  8968                           ; BSR set to: 2
  8969                           ;lorawan.c: 939: {;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.ma
      +                          xRepetitionsConfirmedUplink)
  8970  005F32  51DE               	movf	(_loRa+217)& (0+255),w,b
  8971  005F34  5DDC               	subwf	(_loRa+215)& (0+255),w,b
  8972  005F36  A0D8               	btfss	status,0,c
  8973  005F38  D061               	goto	l21164
  8974                           
  8975                           ; BSR set to: 2
  8976                           ;lorawan.c: 941: {;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13
      +                          ;
  8977  005F3A  EC4F  F04A         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  8978  005F3E  6E51               	movwf	btemp+11,c
  8979  005F40  0E0D               	movlw	13
  8980  005F42  2651               	addwf	btemp+11,f,c
  8981                           
  8982                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  8983  005F44  0EFF               	movlw	-1
  8984  005F46  C051  FFE3         	movff	btemp+11,plusw1
  8985                           
  8986                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  8987                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  8988  005F4A  0EFF               	movlw	-1
  8989  005F4C  50E3               	movf	plusw1,w,c
  8990  005F4E  6E50               	movwf	btemp+10,c
  8991  005F50  6A51               	clrf	btemp+11,c
  8992  005F52  0102               	movlb	2	; () banked
  8993  005F54  51D9               	movf	(_loRa+212)& (0+255),w,b
  8994  005F56  5C50               	subwf	btemp+10,w,c
  8995  005F58  51DA               	movf	(_loRa+213)& (0+255),w,b
  8996  005F5A  5851               	subwfb	btemp+11,w,c
  8997  005F5C  A0D8               	btfss	status,0,c
  8998  005F5E  D039               	goto	l21158
  8999                           
  9000                           ; BSR set to: 2
  9001                           ;lorawan.c: 946: {;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  9002  005F60  0E01               	movlw	1
  9003  005F62  EC61  F046         	call	_SelectChannelForTransmission
  9004  005F66  0900               	iorlw	0
  9005  005F68  A4D8               	btfss	status,2,c
  9006  005F6A  D030               	goto	l21154
  9007                           
  9008                           ;lorawan.c: 948: {;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLe
      +                          ngth) == OK)
  9009  005F6C  0EC8               	movlw	low (_macBuffer+16)
  9010  005F6E  0100               	movlb	0	; () banked
  9011  005F70  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
  9012  005F72  0E06               	movlw	high (_macBuffer+16)
  9013  005F74  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  9014  005F76  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
  9015  005F7A  EC82  F01F         	call	_RADIO_Transmit	;wreg free
  9016  005F7E  C0A9  F050         	movff	?_RADIO_Transmit,btemp+10
  9017  005F82  C0AA  F051         	movff	?_RADIO_Transmit+1,btemp+11
  9018  005F86  5050               	movf	btemp+10,w,c
  9019  005F88  1051               	iorwf	btemp+11,w,c
  9020  005F8A  A4D8               	btfss	status,2,c
  9021  005F8C  D01F               	goto	l21154
  9022                           
  9023                           ;lorawan.c: 951: {;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  9024  005F8E  0102               	movlb	2	; () banked
  9025  005F90  5107               	movf	(_loRa+2)& (0+255),w,b
  9026  005F92  0BF0               	andlw	-16
  9027  005F94  0901               	iorlw	1
  9028  005F96  6F07               	movwf	(_loRa+2)& (0+255),b
  9029                           
  9030                           ; BSR set to: 2
  9031                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  9032  005F98  2BDE               	incf	(_loRa+217)& (0+255),f,b
  9033                           
  9034                           ; BSR set to: 2
  9035                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  9036  005F9A  B1DE               	btfsc	(_loRa+217)& (0+255),0,b
  9037  005F9C  D052               	goto	l1856
  9038                           
  9039                           ; BSR set to: 2
  9040  005F9E  51E4               	movf	(_loRa+223)& (0+255),w,b
  9041  005FA0  B4D8               	btfsc	status,2,c
  9042  005FA2  D04F               	goto	l1856
  9043                           
  9044                           ; BSR set to: 2
  9045  005FA4  51DE               	movf	(_loRa+217)& (0+255),w,b
  9046  005FA6  6E50               	movwf	btemp+10,c
  9047  005FA8  6A51               	clrf	btemp+11,c
  9048  005FAA  51DC               	movf	(_loRa+215)& (0+255),w,b
  9049  005FAC  6E4E               	movwf	btemp+8,c
  9050  005FAE  6A4F               	clrf	btemp+9,c
  9051  005FB0  0E01               	movlw	1
  9052  005FB2  264E               	addwf	btemp+8,f,c
  9053  005FB4  0E00               	movlw	0
  9054  005FB6  224F               	addwfc	btemp+9,f,c
  9055  005FB8  5050               	movf	btemp+10,w,c
  9056  005FBA  184E               	xorwf	btemp+8,w,c
  9057  005FBC  E104               	bnz	u24010
  9058  005FBE  5051               	movf	btemp+11,w,c
  9059  005FC0  184F               	xorwf	btemp+9,w,c
  9060  005FC2  B4D8               	btfsc	status,2,c
  9061  005FC4  D03E               	goto	l1856
  9062  005FC6                     u24010:
  9063                           
  9064                           ; BSR set to: 2
  9065                           ;lorawan.c: 957: {;lorawan.c: 958: FindSmallestDataRate();
  9066  005FC6  ECE1  F03C         	call	_FindSmallestDataRate	;wreg free
  9067  005FCA  D03B               	goto	l1856
  9068  005FCC                     l21154:
  9069                           
  9070                           ;lorawan.c: 961: else;lorawan.c: 962: {;lorawan.c: 964: UpdateRetransmissionAckTimeoutSt
      +                          ate ();
  9071  005FCC  EC52  F045         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  9072  005FD0  D038               	goto	l1856
  9073  005FD2                     l21158:
  9074                           
  9075                           ; BSR set to: 2
  9076                           ;lorawan.c: 973: else;lorawan.c: 974: {;lorawan.c: 975: ResetParametersForConfirmedTrans
      +                          mission ();
  9077  005FD2  EC33  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9078                           
  9079                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  9080  005FD6  0101               	movlb	1	; () banked
  9081  005FD8  510E               	movf	_rxPayload& (0+255),w,b
  9082  005FDA  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9083  005FDC  B4D8               	btfsc	status,2,c
  9084  005FDE  D031               	goto	l1856
  9085                           
  9086                           ; BSR set to: 1
  9087                           ;lorawan.c: 977: {;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  9088  005FE0  0E00               	movlw	0
  9089  005FE2  0100               	movlb	0	; () banked
  9090  005FE4  6F60               	movwf	RxData@pData& (0+255),b
  9091  005FE6  0E00               	movlw	0
  9092  005FE8  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9093  005FEA  0E00               	movlw	0
  9094  005FEC  6F62               	movwf	RxData@dataLength& (0+255),b
  9095  005FEE  0E04               	movlw	4
  9096  005FF0  6F63               	movwf	RxData@status& (0+255),b
  9097  005FF2  D801               	call	u24038
  9098  005FF4  D026               	goto	l1856
  9099  005FF6                     u24038:
  9100  005FF6  0005               	push	
  9101  005FF8  6EFA               	movwf	pclath,c
  9102  005FFA  D019               	goto	L10
  9103  005FFC                     l21164:
  9104                           
  9105                           ; BSR set to: 2
  9106                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  9107  005FFC  51DE               	movf	(_loRa+217)& (0+255),w,b
  9108  005FFE  5DDC               	subwf	(_loRa+215)& (0+255),w,b
  9109  006000  A0D8               	btfss	status,0,c
  9110                           
  9111                           ; BSR set to: 2
  9112  006002  B108               	btfsc	(_loRa+3)& (0+255),0,b
  9113  006004  D01E               	goto	l1856
  9114                           
  9115                           ; BSR set to: 2
  9116                           ;lorawan.c: 983: {;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  9117  006006  EC33  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9118                           
  9119                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  9120  00600A  0101               	movlb	1	; () banked
  9121  00600C  510E               	movf	_rxPayload& (0+255),w,b
  9122  00600E  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9123  006010  B4D8               	btfsc	status,2,c
  9124  006012  D017               	goto	l1856
  9125                           
  9126                           ; BSR set to: 1
  9127                           ;lorawan.c: 986: {;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  9128  006014  0E00               	movlw	0
  9129  006016  0100               	movlb	0	; () banked
  9130  006018  6F60               	movwf	RxData@pData& (0+255),b
  9131  00601A  0E00               	movlw	0
  9132  00601C  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9133  00601E  0E00               	movlw	0
  9134  006020  6F62               	movwf	RxData@dataLength& (0+255),b
  9135  006022  0E00               	movlw	0
  9136  006024  6F63               	movwf	RxData@status& (0+255),b
  9137  006026  D801               	call	u24078
  9138  006028  D00C               	goto	l1856
  9139  00602A                     u24078:
  9140  00602A  0005               	push	
  9141  00602C  6EFA               	movwf	pclath,c
  9142  00602E                     L10:
  9143  00602E  0101               	movlb	1	; () banked
  9144  006030  510E               	movf	_rxPayload& (0+255),w,b
  9145  006032  6EFD               	movwf	tosl,c
  9146  006034  510F               	movf	(_rxPayload+1)& (0+255),w,b
  9147  006036  6EFE               	movwf	tosh,c
  9148  006038  6AFF               	clrf	tosu,c
  9149  00603A  50FA               	movf	pclath,w,c
  9150  00603C  0012               	return		;indir
  9151  00603E                     l21174:
  9152                           
  9153                           ; BSR set to: 2
  9154                           ;lorawan.c: 991: else;lorawan.c: 992: {;lorawan.c: 993: ResetParametersForConfirmedTrans
      +                          mission ();
  9155  00603E  EC33  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9156  006042                     l1856:
  9157                           
  9158                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  9159  006042  52E5               	movf	postdec1,f,c
  9160  006044  52E5               	movf	postdec1,f,c
  9161  006046  0012               	return		;funcret
  9162  006048                     __end_of_AckRetransmissionCallback:
  9163                           	opt callstack 0
  9164                           
  9165 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  9166 ;; Defined at:
  9167 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;  param           1  [STACK] unsigned char 
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  iCtr            1  [STACK] unsigned char 
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1  [STACK] void 
  9174 ;; Registers used:
  9175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  9176 ;; Tracked objects:
  9177 ;;		On entry : 3F/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9185 ;;Total ram usage:        0 bytes
  9186 ;; Hardware stack levels used:    1
  9187 ;; Hardware stack levels required when called:   11
  9188 ;; This function calls:
  9189 ;;		_SwTimerSetTimeout
  9190 ;;		_SwTimerStart
  9191 ;;		___lldiv
  9192 ;; This function is called by:
  9193 ;;		_SetCallbackSoftwareTimers
  9194 ;;		_SwTimersExecute
  9195 ;; This function uses a reentrant model
  9196 ;;
  9197                           
  9198                           	psect	text29
  9199  004F9E                     __ptext29:
  9200                           	opt callstack 0
  9201  004F9E                     _LORAWAN_LinkCheckCallback:
  9202                           	opt callstack 0
  9203                           
  9204                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9205  004F9E  0E05               	movlw	5
  9206  004FA0  26E1               	addwf	fsr1l,f,c
  9207  004FA2  0E00               	movlw	0
  9208  004FA4  22E2               	addwfc	fsr1h,f,c
  9209                           
  9210                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  9211                           
  9212                           ;incstack = 0
  9213  004FA6  0102               	movlb	2	; () banked
  9214  004FA8  A108               	btfss	(_loRa+3)& (0+255),0,b
  9215                           
  9216                           ; BSR set to: 2
  9217  004FAA  A508               	btfss	(_loRa+3)& (0+255),2,b
  9218  004FAC  D02C               	goto	l21118
  9219                           
  9220                           ; BSR set to: 2
  9221                           ;lorawan.c: 886: {;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  9222                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9223  004FAE  0EFF               	movlw	-1
  9224  004FB0  6AE3               	clrf	plusw1,c
  9225  004FB2  D00F               	goto	l21108
  9226  004FB4                     l21102:
  9227                           
  9228                           ; BSR set to: 2
  9229                           ;lorawan.c: 889: {;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_C
      +                          ID)
  9230                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9231  004FB4  0EFF               	movlw	-1
  9232  004FB6  50E3               	movf	plusw1,w,c
  9233  004FB8  0D02               	mullw	2
  9234  004FBA  0EAD               	movlw	low (_loRa+168)
  9235  004FBC  24F3               	addwf	prodl,w,c
  9236  004FBE  6ED9               	movwf	fsr2l,c
  9237  004FC0  0E02               	movlw	high (_loRa+168)
  9238  004FC2  20F4               	addwfc	prodh,w,c
  9239  004FC4  6EDA               	movwf	fsr2h,c
  9240  004FC6  0E02               	movlw	2
  9241  004FC8  18DE               	xorwf	postinc2,w,c
  9242  004FCA  B4D8               	btfsc	status,2,c
  9243  004FCC  D009               	goto	u23870
  9244                           
  9245                           ; BSR set to: 2
  9246                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9247  004FCE  0EFF               	movlw	-1
  9248  004FD0  2AE3               	incf	plusw1,f,c
  9249  004FD2                     l21108:
  9250                           
  9251                           ; BSR set to: 2
  9252                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9253  004FD2  0EFF               	movlw	-1
  9254  004FD4  CFE3 F046          	movff	plusw1,btemp
  9255  004FD8  51AC               	movf	(_loRa+167)& (0+255),w,b
  9256  004FDA  5C46               	subwf	btemp,w,c
  9257  004FDC  A0D8               	btfss	status,0,c
  9258  004FDE  D7EA               	goto	l21102
  9259  004FE0                     u23870:
  9260                           
  9261                           ; BSR set to: 2
  9262                           ;lorawan.c: 893: };lorawan.c: 894: };lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  9263                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9264  004FE0  0EFF               	movlw	-1
  9265  004FE2  50E3               	movf	plusw1,w,c
  9266  004FE4  19AC               	xorwf	(_loRa+167)& (0+255),w,b
  9267  004FE6  A4D8               	btfss	status,2,c
  9268  004FE8  D00E               	goto	l21118
  9269                           
  9270                           ; BSR set to: 2
  9271                           ;lorawan.c: 897: {;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = L
      +                          INK_CHECK_CID;
  9272  004FEA  51AC               	movf	(_loRa+167)& (0+255),w,b
  9273  004FEC  0D02               	mullw	2
  9274  004FEE  0EAD               	movlw	low (_loRa+168)
  9275  004FF0  24F3               	addwf	prodl,w,c
  9276  004FF2  6ED9               	movwf	fsr2l,c
  9277  004FF4  0E02               	movlw	high (_loRa+168)
  9278  004FF6  20F4               	addwfc	prodh,w,c
  9279  004FF8  6EDA               	movwf	fsr2h,c
  9280  004FFA  0E02               	movlw	2
  9281  004FFC  6EDF               	movwf	indf2,c
  9282                           
  9283                           ; BSR set to: 2
  9284                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  9285  004FFE  0E10               	movlw	16
  9286  005000  61AC               	cpfslt	(_loRa+167)& (0+255),b
  9287  005002  D001               	goto	l21118
  9288                           
  9289                           ; BSR set to: 2
  9290                           ;lorawan.c: 901: {;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  9291  005004  2BAC               	incf	(_loRa+167)& (0+255),f,b
  9292  005006                     l21118:
  9293                           
  9294                           ; BSR set to: 2
  9295                           ;lorawan.c: 903: };lorawan.c: 904: };lorawan.c: 905: };lorawan.c: 908: if (loRa.macStatu
      +                          s.linkCheck == 1)
  9296  005006  A508               	btfss	(_loRa+3)& (0+255),2,b
  9297  005008  D07B               	goto	l1834
  9298                           
  9299                           ; BSR set to: 2
  9300                           ;lorawan.c: 909: {;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.perio
      +                          dForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125U
      +                          L ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  9301  00500A  51D4               	movf	(_loRa+207)& (0+255),w,b
  9302  00500C  E107               	bnz	u23910
  9303  00500E  29D1               	incf	(_loRa+204)& (0+255),w,b
  9304  005010  0EFF               	movlw	255
  9305  005012  59D2               	subwfb	(_loRa+205)& (0+255),w,b
  9306  005014  0E0F               	movlw	15
  9307  005016  59D3               	subwfb	(_loRa+206)& (0+255),w,b
  9308  005018  A0D8               	btfss	status,0,c
  9309  00501A  D024               	goto	l21124
  9310  00501C                     u23910:
  9311                           
  9312                           ; BSR set to: 2
  9313  00501C  C2D1  F060         	movff	_loRa+204,___lldiv@dividend
  9314  005020  C2D2  F061         	movff	_loRa+205,___lldiv@dividend+1
  9315  005024  C2D3  F062         	movff	_loRa+206,___lldiv@dividend+2
  9316  005028  C2D4  F063         	movff	_loRa+207,___lldiv@dividend+3
  9317  00502C  0E7D               	movlw	125
  9318  00502E  0100               	movlb	0	; () banked
  9319  005030  6F64               	movwf	___lldiv@divisor& (0+255),b
  9320  005032  0E00               	movlw	0
  9321  005034  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9322  005036  0E00               	movlw	0
  9323  005038  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9324  00503A  0E00               	movlw	0
  9325  00503C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9326  00503E  EC6D  F042         	call	___lldiv	;wreg free
  9327  005042  C060  F04E         	movff	?___lldiv,btemp+8
  9328  005046  C061  F04F         	movff	?___lldiv+1,btemp+9
  9329  00504A  C062  F050         	movff	?___lldiv+2,btemp+10
  9330  00504E  C063  F051         	movff	?___lldiv+3,btemp+11
  9331  005052  0E0C               	movlw	12
  9332  005054                     u23925:
  9333  005054  90D8               	bcf	status,0,c
  9334  005056  364E               	rlcf	btemp+8,f,c
  9335  005058  364F               	rlcf	btemp+9,f,c
  9336  00505A  3650               	rlcf	btemp+10,f,c
  9337  00505C  3651               	rlcf	btemp+11,f,c
  9338  00505E  2EE8               	decfsz	wreg,f,c
  9339  005060  D7F9               	goto	u23925
  9340  005062  D02B               	goto	L11
  9341  005064                     l21124:
  9342                           
  9343                           ; BSR set to: 2
  9344  005064  C2D1  F04E         	movff	_loRa+204,btemp+8
  9345  005068  C2D2  F04F         	movff	_loRa+205,btemp+9
  9346  00506C  C2D3  F050         	movff	_loRa+206,btemp+10
  9347  005070  C2D4  F051         	movff	_loRa+207,btemp+11
  9348  005074  0E0C               	movlw	12
  9349  005076                     u23935:
  9350  005076  90D8               	bcf	status,0,c
  9351  005078  364E               	rlcf	btemp+8,f,c
  9352  00507A  364F               	rlcf	btemp+9,f,c
  9353  00507C  3650               	rlcf	btemp+10,f,c
  9354  00507E  3651               	rlcf	btemp+11,f,c
  9355  005080  2EE8               	decfsz	wreg,f,c
  9356  005082  D7F9               	goto	u23935
  9357  005084  C04E  F060         	movff	btemp+8,___lldiv@dividend
  9358  005088  C04F  F061         	movff	btemp+9,___lldiv@dividend+1
  9359  00508C  C050  F062         	movff	btemp+10,___lldiv@dividend+2
  9360  005090  C051  F063         	movff	btemp+11,___lldiv@dividend+3
  9361  005094  0E7D               	movlw	125
  9362  005096  0100               	movlb	0	; () banked
  9363  005098  6F64               	movwf	___lldiv@divisor& (0+255),b
  9364  00509A  0E00               	movlw	0
  9365  00509C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9366  00509E  0E00               	movlw	0
  9367  0050A0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9368  0050A2  0E00               	movlw	0
  9369  0050A4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9370  0050A6  EC6D  F042         	call	___lldiv	;wreg free
  9371  0050AA  C060  F04E         	movff	?___lldiv,btemp+8
  9372  0050AE  C061  F04F         	movff	?___lldiv+1,btemp+9
  9373  0050B2  C062  F050         	movff	?___lldiv+2,btemp+10
  9374  0050B6  C063  F051         	movff	?___lldiv+3,btemp+11
  9375  0050BA                     L11:
  9376                           
  9377                           ;stkvar	_LORAWAN_LinkCheckCallback$2513 @ sp[(-5)+0]
  9378  0050BA  0EFB               	movlw	-5
  9379  0050BC  C04E  FFE3         	movff	btemp+8,plusw1
  9380  0050C0  0EFC               	movlw	-4
  9381  0050C2  C04F  FFE3         	movff	btemp+9,plusw1
  9382  0050C6  0EFD               	movlw	-3
  9383  0050C8  C050  FFE3         	movff	btemp+10,plusw1
  9384  0050CC  0EFE               	movlw	-2
  9385  0050CE  C051  FFE3         	movff	btemp+11,plusw1
  9386                           
  9387                           ;stkvar	_LORAWAN_LinkCheckCallback$2513 @ sp[(-5)+0]
  9388  0050D2  50E1               	movf	fsr1l,w,c
  9389  0050D4  0FFB               	addlw	-5
  9390  0050D6  6ED9               	movwf	fsr2l,c
  9391  0050D8  50E2               	movf	fsr1h,w,c
  9392  0050DA  6EDA               	movwf	fsr2h,c
  9393  0050DC  0EFF               	movlw	255
  9394  0050DE  22DA               	addwfc	fsr2h,f,c
  9395  0050E0  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  9396  0050E4  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  9397  0050E8  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  9398  0050EC  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  9399  0050F0  0102               	movlb	2	; () banked
  9400  0050F2  51EC               	movf	(_loRa+231)& (0+255),w,b
  9401  0050F4  EC2D  F04C         	call	_SwTimerSetTimeout
  9402                           
  9403                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  9404  0050F8  0102               	movlb	2	; () banked
  9405  0050FA  51EC               	movf	(_loRa+231)& (0+255),w,b
  9406  0050FC  EC4A  F040         	call	_SwTimerStart
  9407  005100                     l1834:
  9408                           
  9409                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  9410  005100  0EFA               	movlw	250
  9411  005102  26E1               	addwf	fsr1l,f,c
  9412  005104  0EFF               	movlw	255
  9413  005106  22E2               	addwfc	fsr1h,f,c
  9414  005108  0012               	return		;funcret
  9415  00510A                     __end_of_LORAWAN_LinkCheckCallback:
  9416                           	opt callstack 0
  9417                           
  9418 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  9419 ;; Defined at:
  9420 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9421 ;; Parameters:    Size  Location     Type
  9422 ;;  param           1  [STACK] unsigned char 
  9423 ;; Auto vars:     Size  Location     Type
  9424 ;;  freq            4  [STACK] unsigned long 
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1  [STACK] void 
  9427 ;; Registers used:
  9428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 3F/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9438 ;;Total ram usage:        0 bytes
  9439 ;; Hardware stack levels used:    1
  9440 ;; Hardware stack levels required when called:   13
  9441 ;; This function calls:
  9442 ;;		_ConfigureRadioRx
  9443 ;;		_GetRx1Freq
  9444 ;;		_RADIO_ReceiveStart
  9445 ;;		_RADIO_ReceiveStop
  9446 ;;		_RADIO_ReleaseData
  9447 ;; This function is called by:
  9448 ;;		_SetCallbackSoftwareTimers
  9449 ;;		_SwTimersExecute
  9450 ;; This function uses a reentrant model
  9451 ;;
  9452                           
  9453                           	psect	text30
  9454  007BFE                     __ptext30:
  9455                           	opt callstack 0
  9456  007BFE                     _LORAWAN_ReceiveWindow1Callback:
  9457                           	opt callstack 0
  9458                           
  9459                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9460  007BFE  52E6               	movf	postinc1,f,c
  9461  007C00  52E6               	movf	postinc1,f,c
  9462  007C02  52E6               	movf	postinc1,f,c
  9463  007C04  52E6               	movf	postinc1,f,c
  9464                           
  9465                           ;lorawan.c: 798: uint32_t freq;;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  9466                           
  9467                           ;incstack = 0
  9468  007C06  0102               	movlb	2	; () banked
  9469  007C08  B108               	btfsc	(_loRa+3)& (0+255),0,b
  9470  007C0A  D050               	goto	l1807
  9471                           
  9472                           ; BSR set to: 2
  9473                           ;lorawan.c: 801: {;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  9474  007C0C  0E02               	movlw	2
  9475  007C0E  1917               	xorwf	(_loRa+18)& (0+255),w,b
  9476  007C10  B4D8               	btfsc	status,2,c
  9477                           
  9478                           ; BSR set to: 2
  9479                           ;lorawan.c: 803: {;lorawan.c: 804: RADIO_ReceiveStop();
  9480  007C12  EC5B  F051         	call	_RADIO_ReceiveStop	;wreg free
  9481                           
  9482                           ;lorawan.c: 805: };lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.of
      +                          fset)
  9483  007C16  0102               	movlb	2	; () banked
  9484  007C18  51F4               	movf	(_loRa+239)& (0+255),w,b
  9485  007C1A  5D1C               	subwf	(_loRa+23)& (0+255),w,b
  9486  007C1C  A0D8               	btfss	status,0,c
  9487  007C1E  D004               	goto	l1805
  9488                           
  9489                           ; BSR set to: 2
  9490                           ;lorawan.c: 807: {;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receive
      +                          Window1Parameters.dataRate - loRa.offset;
  9491  007C20  51F4               	movf	(_loRa+239)& (0+255),w,b
  9492  007C22  5D1C               	subwf	(_loRa+23)& (0+255),w,b
  9493  007C24  6F1C               	movwf	(_loRa+23)& (0+255),b
  9494                           
  9495                           ;lorawan.c: 809: }
  9496  007C26  D001               	goto	l21084
  9497  007C28                     l1805:
  9498                           
  9499                           ; BSR set to: 2
  9500                           ;lorawan.c: 810: else;lorawan.c: 811: {;lorawan.c: 812: loRa.receiveWindow1Parameters.da
      +                          taRate = 0;
  9501  007C28  6B1C               	clrf	(_loRa+23)& (0+255),b
  9502  007C2A                     l21084:
  9503                           
  9504                           ; BSR set to: 2
  9505                           ;lorawan.c: 813: };lorawan.c: 815: freq = GetRx1Freq();
  9506  007C2A  ECD6  F052         	call	_GetRx1Freq	;wreg free
  9507  007C2E  C060  F04E         	movff	?_GetRx1Freq,btemp+8
  9508  007C32  C061  F04F         	movff	?_GetRx1Freq+1,btemp+9
  9509  007C36  C062  F050         	movff	?_GetRx1Freq+2,btemp+10
  9510  007C3A  C063  F051         	movff	?_GetRx1Freq+3,btemp+11
  9511                           
  9512                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  9513  007C3E  0EFC               	movlw	-4
  9514  007C40  C04E  FFE3         	movff	btemp+8,plusw1
  9515  007C44  0EFD               	movlw	-3
  9516  007C46  C04F  FFE3         	movff	btemp+9,plusw1
  9517  007C4A  0EFE               	movlw	-2
  9518  007C4C  C050  FFE3         	movff	btemp+10,plusw1
  9519  007C50  0EFF               	movlw	-1
  9520  007C52  C051  FFE3         	movff	btemp+11,plusw1
  9521                           
  9522                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  9523  007C56  0102               	movlb	2	; () banked
  9524  007C58  5107               	movf	(_loRa+2)& (0+255),w,b
  9525  007C5A  0BF0               	andlw	-16
  9526  007C5C  0903               	iorlw	3
  9527  007C5E  6F07               	movwf	(_loRa+2)& (0+255),b
  9528                           
  9529                           ; BSR set to: 2
  9530                           ;lorawan.c: 819: RADIO_ReleaseData();
  9531  007C60  ECF3  F053         	call	_RADIO_ReleaseData	;wreg free
  9532                           
  9533                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  9534                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  9535  007C64  50E1               	movf	fsr1l,w,c
  9536  007C66  0FFC               	addlw	-4
  9537  007C68  6ED9               	movwf	fsr2l,c
  9538  007C6A  50E2               	movf	fsr1h,w,c
  9539  007C6C  6EDA               	movwf	fsr2h,c
  9540  007C6E  0EFF               	movlw	255
  9541  007C70  22DA               	addwfc	fsr2h,f,c
  9542  007C72  CFDE F073          	movff	postinc2,ConfigureRadioRx@freq
  9543  007C76  CFDE F074          	movff	postinc2,ConfigureRadioRx@freq+1
  9544  007C7A  CFDE F075          	movff	postinc2,ConfigureRadioRx@freq+2
  9545  007C7E  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq+3
  9546  007C82  0102               	movlb	2	; () banked
  9547  007C84  511C               	movf	(_loRa+23)& (0+255),w,b
  9548  007C86  EC0C  F050         	call	_ConfigureRadioRx
  9549                           
  9550                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  9551  007C8A  0E1F               	movlw	low _rxWindowSize
  9552  007C8C  0102               	movlb	2	; () banked
  9553  007C8E  251C               	addwf	(_loRa+23)& (0+255),w,b
  9554  007C90  6EF6               	movwf	tblptrl,c
  9555  007C92  6AF7               	clrf	tblptrh,c
  9556  007C94  0EFF               	movlw	high _rxWindowSize
  9557  007C96  22F7               	addwfc	tblptrh,f,c
  9558  007C98                     	if	1	;There are 3 active tblptr bytes
  9559  007C98  6AF8               	clrf	tblptru,c
  9560  007C9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9561  007C9C  22F8               	addwfc	tblptru,f,c
  9562  007C9E                     	endif
  9563  007C9E  0008               	tblrd		*
  9564  007CA0  50F5               	movf	tablat,w,c
  9565  007CA2  0100               	movlb	0	; () banked
  9566  007CA4  6FA9               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  9567  007CA6  6BAA               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  9568  007CA8  EC6A  F01E         	call	_RADIO_ReceiveStart	;wreg free
  9569  007CAC                     l1807:
  9570                           
  9571                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  9572  007CAC  0EFB               	movlw	251
  9573  007CAE  26E1               	addwf	fsr1l,f,c
  9574  007CB0  0EFF               	movlw	255
  9575  007CB2  22E2               	addwfc	fsr1h,f,c
  9576  007CB4  0012               	return		;funcret
  9577  007CB6                     __end_of_LORAWAN_ReceiveWindow1Callback:
  9578                           	opt callstack 0
  9579                           
  9580 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  9581 ;; Defined at:
  9582 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  param           1  [STACK] unsigned char 
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;		None
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  1  [STACK] void 
  9589 ;; Registers used:
  9590 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 3D/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9600 ;;Total ram usage:        0 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:   14
  9603 ;; This function calls:
  9604 ;;		_ConfigureRadioRx
  9605 ;;		_LORAWAN_EnterContinuousReceive
  9606 ;;		_RADIO_GetStatus
  9607 ;;		_RADIO_ReceiveStart
  9608 ;;		_RADIO_ReceiveStop
  9609 ;;		_RADIO_ReleaseData
  9610 ;;		_ResetParametersForConfirmedTransmission
  9611 ;;		_ResetParametersForUnconfirmedTransmission
  9612 ;;		_RxData
  9613 ;; This function is called by:
  9614 ;;		_LORAWAN_RxTimeout
  9615 ;;		_SetCallbackSoftwareTimers
  9616 ;;		_SwTimersExecute
  9617 ;; This function uses a reentrant model
  9618 ;;
  9619                           
  9620                           	psect	text31
  9621  007430                     __ptext31:
  9622                           	opt callstack 0
  9623  007430                     _LORAWAN_ReceiveWindow2Callback:
  9624                           	opt callstack 10
  9625                           
  9626                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  9627                           
  9628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9629                           ;incstack = 0
  9630  007430  0102               	movlb	2	; () banked
  9631  007432  B108               	btfsc	(_loRa+3)& (0+255),0,b
  9632  007434  D05F               	goto	l1810
  9633                           
  9634                           ; BSR set to: 2
  9635                           ;lorawan.c: 831: {;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  9636  007436  ECF0  F053         	call	_RADIO_GetStatus	;wreg free
  9637  00743A  6E51               	movwf	btemp+11,c
  9638  00743C  B251               	btfsc	btemp+11,1,c
  9639  00743E  D056               	goto	l19886
  9640                           
  9641                           ;lorawan.c: 833: {;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  9642  007440  0102               	movlb	2	; () banked
  9643  007442  5107               	movf	(_loRa+2)& (0+255),w,b
  9644  007444  0BF0               	andlw	-16
  9645  007446  0905               	iorlw	5
  9646  007448  6F07               	movwf	(_loRa+2)& (0+255),b
  9647                           
  9648                           ; BSR set to: 2
  9649                           ;lorawan.c: 836: RADIO_ReceiveStop();
  9650  00744A  EC5B  F051         	call	_RADIO_ReceiveStop	;wreg free
  9651                           
  9652                           ;lorawan.c: 837: RADIO_ReleaseData();
  9653  00744E  ECF3  F053         	call	_RADIO_ReleaseData	;wreg free
  9654                           
  9655                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  9656  007452  C21D  F073         	movff	_loRa+24,ConfigureRadioRx@freq
  9657  007456  C21E  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
  9658  00745A  C21F  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
  9659  00745E  C220  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
  9660  007462  0102               	movlb	2	; () banked
  9661  007464  5121               	movf	(_loRa+28)& (0+255),w,b
  9662  007466  EC0C  F050         	call	_ConfigureRadioRx
  9663                           
  9664                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  9665  00746A  0102               	movlb	2	; () banked
  9666  00746C  5117               	movf	(_loRa+18)& (0+255),w,b
  9667  00746E  A4D8               	btfss	status,2,c
  9668  007470  D036               	goto	l19882
  9669                           
  9670                           ; BSR set to: 2
  9671                           ;lorawan.c: 842: {;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindo
      +                          w2Parameters.dataRate]) != OK)
  9672  007472  0E1F               	movlw	low _rxWindowSize
  9673  007474  2521               	addwf	(_loRa+28)& (0+255),w,b
  9674  007476  6EF6               	movwf	tblptrl,c
  9675  007478  6AF7               	clrf	tblptrh,c
  9676  00747A  0EFF               	movlw	high _rxWindowSize
  9677  00747C  22F7               	addwfc	tblptrh,f,c
  9678  00747E                     	if	1	;There are 3 active tblptr bytes
  9679  00747E  6AF8               	clrf	tblptru,c
  9680  007480  0E00               	movlw	low (__mediumconst shr (0+16))
  9681  007482  22F8               	addwfc	tblptru,f,c
  9682  007484                     	endif
  9683  007484  0008               	tblrd		*
  9684  007486  50F5               	movf	tablat,w,c
  9685  007488  0100               	movlb	0	; () banked
  9686  00748A  6FA9               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  9687  00748C  6BAA               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  9688  00748E  EC6A  F01E         	call	_RADIO_ReceiveStart	;wreg free
  9689  007492  C0A9  F050         	movff	?_RADIO_ReceiveStart,btemp+10
  9690  007496  C0AA  F051         	movff	?_RADIO_ReceiveStart+1,btemp+11
  9691  00749A  5050               	movf	btemp+10,w,c
  9692  00749C  1051               	iorwf	btemp+11,w,c
  9693  00749E  B4D8               	btfsc	status,2,c
  9694  0074A0  D031               	goto	l1819
  9695                           
  9696                           ;lorawan.c: 844: {;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  9697  0074A2  EC33  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9698                           
  9699                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  9700  0074A6  EC03  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9701                           
  9702                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  9703  0074AA  0101               	movlb	1	; () banked
  9704  0074AC  510E               	movf	_rxPayload& (0+255),w,b
  9705  0074AE  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9706  0074B0  B4D8               	btfsc	status,2,c
  9707  0074B2  D028               	goto	l1819
  9708                           
  9709                           ; BSR set to: 1
  9710                           ;lorawan.c: 848: {;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  9711  0074B4  0E00               	movlw	0
  9712  0074B6  0100               	movlb	0	; () banked
  9713  0074B8  6F60               	movwf	RxData@pData& (0+255),b
  9714  0074BA  0E00               	movlw	0
  9715  0074BC  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9716  0074BE  0E00               	movlw	0
  9717  0074C0  6F62               	movwf	RxData@dataLength& (0+255),b
  9718  0074C2  0E00               	movlw	0
  9719  0074C4  6F63               	movwf	RxData@status& (0+255),b
  9720  0074C6  D801               	call	u21588
  9721  0074C8  D01D               	goto	l1819
  9722  0074CA                     u21588:
  9723  0074CA  0005               	push	
  9724  0074CC  6EFA               	movwf	pclath,c
  9725  0074CE  0101               	movlb	1	; () banked
  9726  0074D0  510E               	movf	_rxPayload& (0+255),w,b
  9727  0074D2  6EFD               	movwf	tosl,c
  9728  0074D4  510F               	movf	(_rxPayload+1)& (0+255),w,b
  9729  0074D6  6EFE               	movwf	tosh,c
  9730  0074D8  6AFF               	clrf	tosu,c
  9731  0074DA  50FA               	movf	pclath,w,c
  9732  0074DC  0012               	return		;indir
  9733  0074DE                     l19882:
  9734                           
  9735                           ; BSR set to: 2
  9736                           ;lorawan.c: 853: else;lorawan.c: 854: {;lorawan.c: 855: loRa.macStatus.macState = CLASS_
      +                          C_RX2_2_OPEN;
  9737  0074DE  5107               	movf	(_loRa+2)& (0+255),w,b
  9738  0074E0  0BF0               	andlw	-16
  9739  0074E2  0909               	iorlw	9
  9740  0074E4  6F07               	movwf	(_loRa+2)& (0+255),b
  9741                           
  9742                           ; BSR set to: 2
  9743                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  9744  0074E6  ECAC  F043         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  9745  0074EA  D00C               	goto	l1819
  9746  0074EC                     l19886:
  9747                           
  9748                           ;lorawan.c: 859: else;lorawan.c: 860: {;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  9749  0074EC  0E01               	movlw	1
  9750  0074EE  0102               	movlb	2	; () banked
  9751  0074F0  6FF6               	movwf	(_loRa+241)& (0+255),b
  9752                           
  9753                           ; BSR set to: 1
  9754                           ;lorawan.c: 864: };lorawan.c: 865: }
  9755  0074F2  D008               	goto	l1819
  9756  0074F4                     l1810:
  9757                           
  9758                           ; BSR set to: 2
  9759                           ;lorawan.c: 866: else;lorawan.c: 867: {;lorawan.c: 870: if (loRa.lorawanMacStatus.joinin
      +                          g == 1)
  9760  0074F4  A505               	btfss	_loRa& (0+255),2,b
  9761  0074F6  D002               	goto	l19890
  9762                           
  9763                           ; BSR set to: 2
  9764                           ;lorawan.c: 871: {;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  9765  0074F8  9505               	bcf	_loRa& (0+255),2,b
  9766                           
  9767                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  9768  0074FA  9907               	bcf	(_loRa+2)& (0+255),4,b
  9769  0074FC                     l19890:
  9770                           
  9771                           ; BSR set to: 2
  9772                           ;lorawan.c: 874: };lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  9773  0074FC  EC03  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9774                           
  9775                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  9776  007500  EC33  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9777  007504                     l1819:
  9778                           
  9779                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  9780  007504  52E5               	movf	postdec1,f,c
  9781  007506  0012               	return		;funcret
  9782  007508                     __end_of_LORAWAN_ReceiveWindow2Callback:
  9783                           	opt callstack 0
  9784                           
  9785 ;; *************** function _RADIO_WatchdogTimeout *****************
  9786 ;; Defined at:
  9787 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9788 ;; Parameters:    Size  Location     Type
  9789 ;;  param           1  [STACK] unsigned char 
  9790 ;; Auto vars:     Size  Location     Type
  9791 ;;		None
  9792 ;; Return value:  Size  Location     Type
  9793 ;;                  1  [STACK] void 
  9794 ;; Registers used:
  9795 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
  9796 ;; Tracked objects:
  9797 ;;		On entry : 3F/0
  9798 ;;		On exit  : 0/0
  9799 ;;		Unchanged: 0/0
  9800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9805 ;;Total ram usage:        0 bytes
  9806 ;; Hardware stack levels used:    1
  9807 ;; Hardware stack levels required when called:   16
  9808 ;; This function calls:
  9809 ;;		_LORAWAN_RxTimeout
  9810 ;;		_LORAWAN_TxDone
  9811 ;;		_RADIO_WriteMode
  9812 ;; This function is called by:
  9813 ;;		_RADIO_Init
  9814 ;;		_SwTimersExecute
  9815 ;; This function uses a reentrant model
  9816 ;;
  9817                           
  9818                           	psect	text32
  9819  0096FE                     __ptext32:
  9820                           	opt callstack 0
  9821  0096FE                     _RADIO_WatchdogTimeout:
  9822                           	opt callstack 10
  9823                           
  9824                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  9825                           
  9826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9827                           ;incstack = 0
  9828  0096FE  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9829  009702  0E01               	movlw	1
  9830  009704  0100               	movlb	0	; () banked
  9831  009706  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9832  009708  0E01               	movlw	1
  9833  00970A  ECD9  F035         	call	_RADIO_WriteMode
  9834                           
  9835                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9836  00970E  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9837  009712  0E00               	movlw	0
  9838  009714  0100               	movlb	0	; () banked
  9839  009716  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9840  009718  0E00               	movlw	0
  9841  00971A  ECD9  F035         	call	_RADIO_WriteMode
  9842                           
  9843                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  9844  00971E  0101               	movlb	1	; () banked
  9845  009720  894C               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  9846                           
  9847                           ; BSR set to: 1
  9848                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  9849  009722  A34C               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  9850  009724  D004               	goto	l691
  9851                           
  9852                           ; BSR set to: 1
  9853                           ;radio_driver_SX1276.c: 1414: {;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &=
      +                           ~(1 << (1));
  9854  009726  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9855                           
  9856                           ; BSR set to: 1
  9857                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  9858  009728  ECD7  F018         	call	_LORAWAN_RxTimeout	;wreg free
  9859                           
  9860                           ;radio_driver_SX1276.c: 1417: }
  9861  00972C  D009               	goto	l694
  9862  00972E                     l691:
  9863                           
  9864                           ; BSR set to: 1
  9865                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  9866  00972E  A14C               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  9867  009730  D007               	goto	l694
  9868                           
  9869                           ; BSR set to: 1
  9870                           ;radio_driver_SX1276.c: 1419: {;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &=
      +                           ~(1 << (0));
  9871  009732  914C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9872                           
  9873                           ; BSR set to: 1
  9874                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  9875  009734  C153  F0B3         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  9876  009738  C154  F0B4         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  9877  00973C  ECEC  F005         	call	_LORAWAN_TxDone	;wreg free
  9878  009740                     l694:
  9879                           
  9880                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  9881  009740  52E5               	movf	postdec1,f,c
  9882  009742  0012               	return		;funcret
  9883  009744                     __end_of_RADIO_WatchdogTimeout:
  9884                           	opt callstack 0
  9885                           
  9886 ;; *************** function _RADIO_RxFSKTimeout *****************
  9887 ;; Defined at:
  9888 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9889 ;; Parameters:    Size  Location     Type
  9890 ;;  param           1  [STACK] unsigned char 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  irqFlags        1  [STACK] unsigned char 
  9893 ;; Return value:  Size  Location     Type
  9894 ;;                  1  [STACK] void 
  9895 ;; Registers used:
  9896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblpt
      +rh, tblptru, prodl, prodh, cstack
  9897 ;; Tracked objects:
  9898 ;;		On entry : 3F/0
  9899 ;;		On exit  : 0/0
  9900 ;;		Unchanged: 0/0
  9901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9906 ;;Total ram usage:        0 bytes
  9907 ;; Hardware stack levels used:    1
  9908 ;; Hardware stack levels required when called:   16
  9909 ;; This function calls:
  9910 ;;		_LORAWAN_RxTimeout
  9911 ;;		_RADIO_RegisterRead
  9912 ;;		_RADIO_WriteMode
  9913 ;;		_SwTimerStop
  9914 ;; This function is called by:
  9915 ;;		_RADIO_Init
  9916 ;;		_SwTimersExecute
  9917 ;; This function uses a reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text33
  9921  009A5E                     __ptext33:
  9922                           	opt callstack 0
  9923  009A5E                     _RADIO_RxFSKTimeout:
  9924                           	opt callstack 0
  9925                           
  9926                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9927  009A5E  52E6               	movf	postinc1,f,c
  9928                           
  9929                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;;radio_driver_SX1276.c: 1395: irqFlags = 
      +                          RADIO_RegisterRead(0x3E);
  9930                           
  9931                           ;incstack = 0
  9932  009A60  0E3E               	movlw	62
  9933  009A62  EC9B  F050         	call	_RADIO_RegisterRead
  9934  009A66  6E51               	movwf	btemp+11,c
  9935                           
  9936                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  9937  009A68  0EFF               	movlw	-1
  9938  009A6A  C051  FFE3         	movff	btemp+11,plusw1
  9939                           
  9940                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  9941                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  9942  009A6E  0EFF               	movlw	-1
  9943  009A70  B0E3               	btfsc	plusw1,0,c
  9944  009A72  D010               	goto	l688
  9945                           
  9946                           ;radio_driver_SX1276.c: 1397: {;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
  9947  009A74  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9948  009A78  0E00               	movlw	0
  9949  009A7A  0100               	movlb	0	; () banked
  9950  009A7C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9951  009A7E  0E00               	movlw	0
  9952  009A80  ECD9  F035         	call	_RADIO_WriteMode
  9953                           
  9954                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9955  009A84  0101               	movlb	1	; () banked
  9956  009A86  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9957  009A88  EC7B  F051         	call	_SwTimerStop
  9958                           
  9959                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  9960  009A8C  0101               	movlb	1	; () banked
  9961  009A8E  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9962                           
  9963                           ; BSR set to: 1
  9964                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  9965  009A90  ECD7  F018         	call	_LORAWAN_RxTimeout	;wreg free
  9966  009A94                     l688:
  9967                           
  9968                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9969  009A94  52E5               	movf	postdec1,f,c
  9970  009A96  52E5               	movf	postdec1,f,c
  9971  009A98  0012               	return		;funcret
  9972  009A9A                     __end_of_RADIO_RxFSKTimeout:
  9973                           	opt callstack 0
  9974                           
  9975 ;; *************** function _UnconfirmedTransmissionCallback *****************
  9976 ;; Defined at:
  9977 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  param           1  [STACK] unsigned char 
  9980 ;; Auto vars:     Size  Location     Type
  9981 ;;		None
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  1  [STACK] void 
  9984 ;; Registers used:
  9985 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
  9986 ;; Tracked objects:
  9987 ;;		On entry : 3F/0
  9988 ;;		On exit  : 0/0
  9989 ;;		Unchanged: 0/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9995 ;;Total ram usage:        0 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; Hardware stack levels required when called:   13
  9998 ;; This function calls:
  9999 ;;		_RADIO_Transmit
 10000 ;;		_ResetParametersForUnconfirmedTransmission
 10001 ;;		_RxData
 10002 ;;		_SelectChannelForTransmission
 10003 ;; This function is called by:
 10004 ;;		_SetCallbackSoftwareTimers
 10005 ;;		_SwTimersExecute
 10006 ;; This function uses a reentrant model
 10007 ;;
 10008                           
 10009                           	psect	text34
 10010  00884C                     __ptext34:
 10011                           	opt callstack 0
 10012  00884C                     _UnconfirmedTransmissionCallback:
 10013                           	opt callstack 13
 10014                           
 10015                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
 10016                           
 10017                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10018                           ;incstack = 0
 10019  00884C  0E01               	movlw	1
 10020  00884E  EC61  F046         	call	_SelectChannelForTransmission
 10021  008852  0900               	iorlw	0
 10022  008854  A4D8               	btfss	status,2,c
 10023  008856  D018               	goto	l21184
 10024  008858  0EC8               	movlw	low (_macBuffer+16)
 10025  00885A  0100               	movlb	0	; () banked
 10026  00885C  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 10027  00885E  0E06               	movlw	high (_macBuffer+16)
 10028  008860  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10029  008862  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10030  008866  EC82  F01F         	call	_RADIO_Transmit	;wreg free
 10031  00886A  C0A9  F050         	movff	?_RADIO_Transmit,btemp+10
 10032  00886E  C0AA  F051         	movff	?_RADIO_Transmit+1,btemp+11
 10033  008872  5050               	movf	btemp+10,w,c
 10034  008874  1051               	iorwf	btemp+11,w,c
 10035  008876  A4D8               	btfss	status,2,c
 10036  008878  D007               	goto	l21184
 10037                           
 10038                           ;lorawan.c: 1001: {;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10039  00887A  0102               	movlb	2	; () banked
 10040  00887C  2BDD               	incf	(_loRa+216)& (0+255),f,b
 10041                           
 10042                           ; BSR set to: 2
 10043                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10044  00887E  5107               	movf	(_loRa+2)& (0+255),w,b
 10045  008880  0BF0               	andlw	-16
 10046  008882  0901               	iorlw	1
 10047  008884  6F07               	movwf	(_loRa+2)& (0+255),b
 10048                           
 10049                           ;lorawan.c: 1005: }
 10050  008886  D01C               	goto	u24119
 10051  008888                     l21184:
 10052                           
 10053                           ;lorawan.c: 1006: else;lorawan.c: 1008: {;lorawan.c: 1009: ResetParametersForUnconfirmed
      +                          Transmission ();
 10054  008888  EC03  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10055                           
 10056                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
 10057  00888C  0101               	movlb	1	; () banked
 10058  00888E  510E               	movf	_rxPayload& (0+255),w,b
 10059  008890  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 10060  008892  B4D8               	btfsc	status,2,c
 10061  008894  D015               	goto	u24119
 10062                           
 10063                           ; BSR set to: 1
 10064                           ;lorawan.c: 1011: {;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 10065  008896  0E00               	movlw	0
 10066  008898  0100               	movlb	0	; () banked
 10067  00889A  6F60               	movwf	RxData@pData& (0+255),b
 10068  00889C  0E00               	movlw	0
 10069  00889E  6F61               	movwf	(RxData@pData+1)& (0+255),b
 10070  0088A0  0E00               	movlw	0
 10071  0088A2  6F62               	movwf	RxData@dataLength& (0+255),b
 10072  0088A4  0E00               	movlw	0
 10073  0088A6  6F63               	movwf	RxData@status& (0+255),b
 10074  0088A8  D801               	call	u24118
 10075  0088AA  D00A               	goto	u24119
 10076  0088AC                     u24118:
 10077  0088AC  0005               	push	
 10078  0088AE  6EFA               	movwf	pclath,c
 10079  0088B0  0101               	movlb	1	; () banked
 10080  0088B2  510E               	movf	_rxPayload& (0+255),w,b
 10081  0088B4  6EFD               	movwf	tosl,c
 10082  0088B6  510F               	movf	(_rxPayload+1)& (0+255),w,b
 10083  0088B8  6EFE               	movwf	tosh,c
 10084  0088BA  6AFF               	clrf	tosu,c
 10085  0088BC  50FA               	movf	pclath,w,c
 10086  0088BE  0012               	return		;indir
 10087  0088C0                     u24119:
 10088                           
 10089                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
 10090  0088C0  52E5               	movf	postdec1,f,c
 10091  0088C2  0012               	return		;funcret
 10092  0088C4                     __end_of_UnconfirmedTransmissionCallback:
 10093                           	opt callstack 0
 10094                           
 10095 ;; *************** function _GetRx1Freq *****************
 10096 ;; Defined at:
 10097 ;;		line 884 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10098 ;; Parameters:    Size  Location     Type
 10099 ;;		None
 10100 ;; Auto vars:     Size  Location     Type
 10101 ;;		None
 10102 ;; Return value:  Size  Location     Type
 10103 ;;                  4    0[BANK0 ] unsigned long 
 10104 ;; Registers used:
 10105 ;;		None
 10106 ;; Tracked objects:
 10107 ;;		On entry : 0/0
 10108 ;;		On exit  : 0/0
 10109 ;;		Unchanged: 0/0
 10110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10114 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10115 ;;Total ram usage:        4 bytes
 10116 ;; Hardware stack levels used:    1
 10117 ;; Hardware stack levels required when called:    7
 10118 ;; This function calls:
 10119 ;;		Nothing
 10120 ;; This function is called by:
 10121 ;;		_LORAWAN_ReceiveWindow1Callback
 10122 ;; This function uses a non-reentrant model
 10123 ;;
 10124                           
 10125                           	psect	text35
 10126  00A5AC                     __ptext35:
 10127                           	opt callstack 0
 10128  00A5AC                     _GetRx1Freq:
 10129                           	opt callstack 18
 10130                           
 10131                           ;lorawan_eu.c: 886: return loRa.receiveWindow1Parameters.frequency;
 10132                           
 10133                           ;incstack = 0
 10134  00A5AC  C218  F060         	movff	_loRa+19,?_GetRx1Freq
 10135  00A5B0  C219  F061         	movff	_loRa+20,?_GetRx1Freq+1
 10136  00A5B4  C21A  F062         	movff	_loRa+21,?_GetRx1Freq+2
 10137  00A5B8  C21B  F063         	movff	_loRa+22,?_GetRx1Freq+3
 10138  00A5BC  0012               	return		;funcret
 10139  00A5BE                     __end_of_GetRx1Freq:
 10140                           	opt callstack 0
 10141                           
 10142 ;; *************** function _RADIO_DIO5 *****************
 10143 ;; Defined at:
 10144 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10145 ;; Parameters:    Size  Location     Type
 10146 ;;		None
 10147 ;; Auto vars:     Size  Location     Type
 10148 ;;  dioMapping      1    0        unsigned char 
 10149 ;; Return value:  Size  Location     Type
 10150 ;;                  1    wreg      void 
 10151 ;; Registers used:
 10152 ;;		wreg, status,2, status,0, cstack
 10153 ;; Tracked objects:
 10154 ;;		On entry : 0/0
 10155 ;;		On exit  : 0/0
 10156 ;;		Unchanged: 0/0
 10157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10161 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;Total ram usage:        2 bytes
 10163 ;; Hardware stack levels used:    1
 10164 ;; Hardware stack levels required when called:   11
 10165 ;; This function calls:
 10166 ;;		_RADIO_RegisterRead
 10167 ;;		_RADIO_UnhandledInterrupt
 10168 ;; This function is called by:
 10169 ;;		_LORAWAN_Mainloop
 10170 ;; This function uses a non-reentrant model
 10171 ;;
 10172                           
 10173                           	psect	text36
 10174  00A412                     __ptext36:
 10175                           	opt callstack 0
 10176  00A412                     _RADIO_DIO5:
 10177                           	opt callstack 16
 10178                           
 10179                           ;incstack = 0
 10180  00A412  0E41               	movlw	65
 10181  00A414  EC9B  F050         	call	_RADIO_RegisterRead
 10182                           
 10183                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10184  00A418  0E01               	movlw	1
 10185  00A41A  EC9B  F050         	call	_RADIO_RegisterRead
 10186  00A41E  0100               	movlb	0	; () banked
 10187  00A420  6F65               	movwf	??_RADIO_DIO5& (0+255),b
 10188  00A422  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
 10189  00A424  0012               	return	
 10190                           
 10191                           ; BSR set to: 0
 10192                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10193  00A426  0E01               	movlw	1
 10194  00A428  EC6E  F04E         	call	_RADIO_UnhandledInterrupt
 10195                           
 10196                           ;radio_driver_SX1276.c: 1357: break;
 10197  00A42C  0012               	return		;funcret
 10198  00A42E                     __end_of_RADIO_DIO5:
 10199                           	opt callstack 0
 10200                           
 10201 ;; *************** function _RADIO_DIO4 *****************
 10202 ;; Defined at:
 10203 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10204 ;; Parameters:    Size  Location     Type
 10205 ;;		None
 10206 ;; Auto vars:     Size  Location     Type
 10207 ;;  dioMapping      1    0        unsigned char 
 10208 ;; Return value:  Size  Location     Type
 10209 ;;                  1    wreg      void 
 10210 ;; Registers used:
 10211 ;;		wreg, status,2, status,0, cstack
 10212 ;; Tracked objects:
 10213 ;;		On entry : 0/0
 10214 ;;		On exit  : 0/0
 10215 ;;		Unchanged: 0/0
 10216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10221 ;;Total ram usage:        2 bytes
 10222 ;; Hardware stack levels used:    1
 10223 ;; Hardware stack levels required when called:   11
 10224 ;; This function calls:
 10225 ;;		_RADIO_RegisterRead
 10226 ;;		_RADIO_UnhandledInterrupt
 10227 ;; This function is called by:
 10228 ;;		_LORAWAN_Mainloop
 10229 ;; This function uses a non-reentrant model
 10230 ;;
 10231                           
 10232                           	psect	text37
 10233  00A42E                     __ptext37:
 10234                           	opt callstack 0
 10235  00A42E                     _RADIO_DIO4:
 10236                           	opt callstack 16
 10237                           
 10238                           ;incstack = 0
 10239  00A42E  0E41               	movlw	65
 10240  00A430  EC9B  F050         	call	_RADIO_RegisterRead
 10241                           
 10242                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10243  00A434  0E01               	movlw	1
 10244  00A436  EC9B  F050         	call	_RADIO_RegisterRead
 10245  00A43A  0100               	movlb	0	; () banked
 10246  00A43C  6F65               	movwf	??_RADIO_DIO4& (0+255),b
 10247  00A43E  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
 10248  00A440  0012               	return	
 10249                           
 10250                           ; BSR set to: 0
 10251                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10252  00A442  0E01               	movlw	1
 10253  00A444  EC6E  F04E         	call	_RADIO_UnhandledInterrupt
 10254                           
 10255                           ;radio_driver_SX1276.c: 1334: break;
 10256  00A448  0012               	return		;funcret
 10257  00A44A                     __end_of_RADIO_DIO4:
 10258                           	opt callstack 0
 10259                           
 10260 ;; *************** function _RADIO_DIO3 *****************
 10261 ;; Defined at:
 10262 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;		None
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  dioMapping      1    0        unsigned char 
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  1    wreg      void 
 10269 ;; Registers used:
 10270 ;;		wreg, status,2, status,0, cstack
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10277 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10278 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10279 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10280 ;;Total ram usage:        2 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; Hardware stack levels required when called:   11
 10283 ;; This function calls:
 10284 ;;		_RADIO_RegisterRead
 10285 ;;		_RADIO_UnhandledInterrupt
 10286 ;; This function is called by:
 10287 ;;		_LORAWAN_Mainloop
 10288 ;; This function uses a non-reentrant model
 10289 ;;
 10290                           
 10291                           	psect	text38
 10292  00A44A                     __ptext38:
 10293                           	opt callstack 0
 10294  00A44A                     _RADIO_DIO3:
 10295                           	opt callstack 16
 10296                           
 10297                           ;incstack = 0
 10298  00A44A  0E40               	movlw	64
 10299  00A44C  EC9B  F050         	call	_RADIO_RegisterRead
 10300                           
 10301                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10302  00A450  0E01               	movlw	1
 10303  00A452  EC9B  F050         	call	_RADIO_RegisterRead
 10304  00A456  0100               	movlb	0	; () banked
 10305  00A458  6F65               	movwf	??_RADIO_DIO3& (0+255),b
 10306  00A45A  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
 10307  00A45C  0012               	return	
 10308                           
 10309                           ; BSR set to: 0
 10310                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10311  00A45E  0E01               	movlw	1
 10312  00A460  EC6E  F04E         	call	_RADIO_UnhandledInterrupt
 10313                           
 10314                           ;radio_driver_SX1276.c: 1311: break;
 10315  00A464  0012               	return		;funcret
 10316  00A466                     __end_of_RADIO_DIO3:
 10317                           	opt callstack 0
 10318                           
 10319 ;; *************** function _RADIO_DIO2 *****************
 10320 ;; Defined at:
 10321 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;		None
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  dioMapping      1   28[BANK0 ] unsigned char 
 10326 ;;  opMode          1    0        unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg, status,2, status,0, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10337 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10338 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10339 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10340 ;;Total ram usage:        3 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:   12
 10343 ;; This function calls:
 10344 ;;		_RADIO_FHSSChangeChannel
 10345 ;;		_RADIO_RegisterRead
 10346 ;;		_RADIO_UnhandledInterrupt
 10347 ;; This function is called by:
 10348 ;;		_LORAWAN_Mainloop
 10349 ;; This function uses a non-reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text39
 10353  00944E                     __ptext39:
 10354                           	opt callstack 0
 10355  00944E                     _RADIO_DIO2:
 10356                           	opt callstack 15
 10357                           
 10358                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;;radio_driver_SX1276.c: 1272: uint8_t o
      +                          pMode;;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2
      +                          );
 10359                           
 10360                           ;incstack = 0
 10361  00944E  0E40               	movlw	64
 10362  009450  EC9B  F050         	call	_RADIO_RegisterRead
 10363  009454  0100               	movlb	0	; () banked
 10364  009456  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 10365  009458  90D8               	bcf	status,0,c
 10366  00945A  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
 10367  00945C  90D8               	bcf	status,0,c
 10368  00945E  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
 10369  009460  0B03               	andlw	3
 10370  009462  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
 10371  009464  0E01               	movlw	1
 10372  009466  EC9B  F050         	call	_RADIO_RegisterRead
 10373                           
 10374                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10375  00946A  0E01               	movlw	1
 10376  00946C  EC9B  F050         	call	_RADIO_RegisterRead
 10377  009470  0100               	movlb	0	; () banked
 10378  009472  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 10379  009474  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
 10380  009476  0012               	return	
 10381  009478  D007               	goto	l21298
 10382  00947A                     l21292:
 10383                           
 10384                           ; BSR set to: 0
 10385                           ;radio_driver_SX1276.c: 1283: case 0x01:;radio_driver_SX1276.c: 1284: case 0x02:;radio_d
      +                          river_SX1276.c: 1285: RADIO_FHSSChangeChannel();
 10386  00947A  EC4D  F04D         	call	_RADIO_FHSSChangeChannel	;wreg free
 10387                           
 10388                           ;radio_driver_SX1276.c: 1286: break;
 10389  00947E  0012               	return	
 10390  009480                     l21294:
 10391                           
 10392                           ; BSR set to: 0
 10393                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10394  009480  0E01               	movlw	1
 10395  009482  EC6E  F04E         	call	_RADIO_UnhandledInterrupt
 10396                           
 10397                           ;radio_driver_SX1276.c: 1289: break;
 10398  009486  0012               	return	
 10399  009488                     l21298:
 10400                           
 10401                           ; BSR set to: 0
 10402  009488  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
 10403                           
 10404                           ; Switch size 1, requested type "simple"
 10405                           ; Number of cases is 3, Range of values is 0 to 2
 10406                           ; switch strategies available:
 10407                           ; Name         Instructions Cycles
 10408                           ; simple_byte           10     6 (average)
 10409                           ;	Chosen strategy is simple_byte
 10410  00948A  0A00               	xorlw	0	; case 0
 10411  00948C  B4D8               	btfsc	status,2,c
 10412  00948E  D7F5               	goto	l21292
 10413  009490  0A01               	xorlw	1	; case 1
 10414  009492  B4D8               	btfsc	status,2,c
 10415  009494  D7F2               	goto	l21292
 10416  009496  0A03               	xorlw	3	; case 2
 10417  009498  B4D8               	btfsc	status,2,c
 10418  00949A  D7EF               	goto	l21292
 10419  00949C  D7F1               	goto	l21294
 10420  00949E                     __end_of_RADIO_DIO2:
 10421                           	opt callstack 0
 10422                           
 10423 ;; *************** function _RADIO_DIO1 *****************
 10424 ;; Defined at:
 10425 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;		None
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;  dioMapping      1  100[BANK0 ] unsigned char 
 10430 ;; Return value:  Size  Location     Type
 10431 ;;                  1    wreg      void 
 10432 ;; Registers used:
 10433 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
 10434 ;; Tracked objects:
 10435 ;;		On entry : 0/0
 10436 ;;		On exit  : 0/0
 10437 ;;		Unchanged: 0/0
 10438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10442 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;Total ram usage:        2 bytes
 10444 ;; Hardware stack levels used:    1
 10445 ;; Hardware stack levels required when called:   17
 10446 ;; This function calls:
 10447 ;;		_RADIO_FHSSChangeChannel
 10448 ;;		_RADIO_RegisterRead
 10449 ;;		_RADIO_RxTimeout
 10450 ;;		_RADIO_UnhandledInterrupt
 10451 ;; This function is called by:
 10452 ;;		_LORAWAN_Mainloop
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text40
 10457  00958C                     __ptext40:
 10458                           	opt callstack 0
 10459  00958C                     _RADIO_DIO1:
 10460                           	opt callstack 10
 10461                           
 10462                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;;radio_driver_SX1276.c: 1235: dioMappin
      +                          g = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
 10463                           
 10464                           ;incstack = 0
 10465  00958C  0E40               	movlw	64
 10466  00958E  EC9B  F050         	call	_RADIO_RegisterRead
 10467  009592  0100               	movlb	0	; () banked
 10468  009594  6FC3               	movwf	??_RADIO_DIO1& (0+255),b
 10469  009596  39C3               	swapf	??_RADIO_DIO1& (0+255),w,b
 10470  009598  0B0F               	andlw	15
 10471  00959A  0B03               	andlw	3
 10472  00959C  6FC4               	movwf	RADIO_DIO1@dioMapping& (0+255),b
 10473                           
 10474                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10475  00959E  0E01               	movlw	1
 10476  0095A0  EC9B  F050         	call	_RADIO_RegisterRead
 10477  0095A4  0100               	movlb	0	; () banked
 10478  0095A6  6FC3               	movwf	??_RADIO_DIO1& (0+255),b
 10479  0095A8  BFC3               	btfsc	??_RADIO_DIO1& (0+255),7,b
 10480  0095AA  D00B               	goto	l21282
 10481  0095AC  D012               	goto	l21286
 10482  0095AE                     l21274:
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
 10486  0095AE  ECE6  F04E         	call	_RADIO_RxTimeout	;wreg free
 10487                           
 10488                           ;radio_driver_SX1276.c: 1244: break;
 10489  0095B2  0012               	return	
 10490  0095B4                     l21276:
 10491                           
 10492                           ; BSR set to: 0
 10493                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
 10494  0095B4  EC4D  F04D         	call	_RADIO_FHSSChangeChannel	;wreg free
 10495                           
 10496                           ;radio_driver_SX1276.c: 1247: break;
 10497  0095B8  0012               	return	
 10498  0095BA                     l21278:
 10499                           
 10500                           ; BSR set to: 0
 10501                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10502  0095BA  0E01               	movlw	1
 10503  0095BC  EC6E  F04E         	call	_RADIO_UnhandledInterrupt
 10504                           
 10505                           ;radio_driver_SX1276.c: 1250: break;
 10506  0095C0  0012               	return	
 10507  0095C2                     l21282:
 10508                           
 10509                           ; BSR set to: 0
 10510  0095C2  51C4               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 10511                           
 10512                           ; Switch size 1, requested type "simple"
 10513                           ; Number of cases is 2, Range of values is 0 to 1
 10514                           ; switch strategies available:
 10515                           ; Name         Instructions Cycles
 10516                           ; simple_byte            7     4 (average)
 10517                           ;	Chosen strategy is simple_byte
 10518  0095C4  0A00               	xorlw	0	; case 0
 10519  0095C6  B4D8               	btfsc	status,2,c
 10520  0095C8  D7F2               	goto	l21274
 10521  0095CA  0A01               	xorlw	1	; case 1
 10522  0095CC  B4D8               	btfsc	status,2,c
 10523  0095CE  D7F2               	goto	l21276
 10524  0095D0  D7F4               	goto	l21278
 10525  0095D2                     l21286:
 10526                           
 10527                           ; BSR set to: 0
 10528  0095D2  51C4               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 10529                           
 10530                           ; Switch size 1, requested type "simple"
 10531                           ; Number of cases is 1, Range of values is 0 to 0
 10532                           ; switch strategies available:
 10533                           ; Name         Instructions Cycles
 10534                           ; simple_byte            4     3 (average)
 10535                           ;	Chosen strategy is simple_byte
 10536  0095D4  0A00               	xorlw	0	; case 0
 10537  0095D6  0012               	return	
 10538  0095D8                     __end_of_RADIO_DIO1:
 10539                           	opt callstack 0
 10540                           
 10541 ;; *************** function _RADIO_RxTimeout *****************
 10542 ;; Defined at:
 10543 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;		None
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;		None
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      void 
 10550 ;; Registers used:
 10551 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10561 ;;Total ram usage:        0 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:   16
 10564 ;; This function calls:
 10565 ;;		_LORAWAN_RxTimeout
 10566 ;;		_RADIO_RegisterWrite
 10567 ;;		_RADIO_WriteMode
 10568 ;;		_SwTimerStop
 10569 ;; This function is called by:
 10570 ;;		_RADIO_DIO1
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           	psect	text41
 10575  009DCC                     __ptext41:
 10576                           	opt callstack 0
 10577  009DCC                     _RADIO_RxTimeout:
 10578                           	opt callstack 10
 10579                           
 10580                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
 10581                           
 10582                           ;incstack = 0
 10583  009DCC  0101               	movlb	1	; () banked
 10584  009DCE  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10585  009DD0  EC7B  F051         	call	_SwTimerStop
 10586                           
 10587                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
 10588  009DD4  0E80               	movlw	128
 10589  009DD6  0100               	movlb	0	; () banked
 10590  009DD8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10591  009DDA  0E12               	movlw	18
 10592  009DDC  EC6B  F051         	call	_RADIO_RegisterWrite
 10593                           
 10594                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10595  009DE0  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10596  009DE4  0E00               	movlw	0
 10597  009DE6  0100               	movlb	0	; () banked
 10598  009DE8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10599  009DEA  0E00               	movlw	0
 10600  009DEC  ECD9  F035         	call	_RADIO_WriteMode
 10601                           
 10602                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
 10603  009DF0  0101               	movlb	1	; () banked
 10604  009DF2  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 10605                           
 10606                           ; BSR set to: 1
 10607                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
 10608  009DF4  ECD7  F018         	call	_LORAWAN_RxTimeout	;wreg free
 10609  009DF8  0012               	return		;funcret
 10610  009DFA                     __end_of_RADIO_RxTimeout:
 10611                           	opt callstack 0
 10612                           
 10613 ;; *************** function _RADIO_FHSSChangeChannel *****************
 10614 ;; Defined at:
 10615 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;		None
 10618 ;; Auto vars:     Size  Location     Type
 10619 ;;  irqFlags        1    0        unsigned char 
 10620 ;; Return value:  Size  Location     Type
 10621 ;;                  1    wreg      void 
 10622 ;; Registers used:
 10623 ;;		wreg, status,2, status,0, cstack
 10624 ;; Tracked objects:
 10625 ;;		On entry : 0/0
 10626 ;;		On exit  : 0/0
 10627 ;;		Unchanged: 0/0
 10628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10630 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10632 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10633 ;;Total ram usage:        1 bytes
 10634 ;; Hardware stack levels used:    1
 10635 ;; Hardware stack levels required when called:   11
 10636 ;; This function calls:
 10637 ;;		_RADIO_RegisterRead
 10638 ;;		_RADIO_RegisterWrite
 10639 ;;		_RADIO_WriteFrequency
 10640 ;; This function is called by:
 10641 ;;		_RADIO_DIO1
 10642 ;;		_RADIO_DIO2
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           	psect	text42
 10647  009A9A                     __ptext42:
 10648                           	opt callstack 0
 10649  009A9A                     _RADIO_FHSSChangeChannel:
 10650                           	opt callstack 15
 10651                           
 10652                           ;incstack = 0
 10653  009A9A  0E12               	movlw	18
 10654  009A9C  EC9B  F050         	call	_RADIO_RegisterRead
 10655                           
 10656                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
 10657  009AA0  0101               	movlb	1	; () banked
 10658  009AA2  5147               	movf	(_RadioConfiguration+30)& (0+255),w,b
 10659  009AA4  1148               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 10660  009AA6  B4D8               	btfsc	status,2,c
 10661  009AA8  D00F               	goto	l610
 10662                           
 10663                           ; BSR set to: 1
 10664                           ;radio_driver_SX1276.c: 1164: {;radio_driver_SX1276.c: 1165: if ((0) != RadioConfigurati
      +                          on.fhssNextFrequency)
 10665  009AAA  5158               	movf	(_RadioConfiguration+47)& (0+255),w,b
 10666  009AAC  1159               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
 10667  009AAE  B4D8               	btfsc	status,2,c
 10668  009AB0  D00B               	goto	l610
 10669                           
 10670                           ; BSR set to: 1
 10671                           ;radio_driver_SX1276.c: 1166: {;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioC
      +                          onfiguration.fhssNextFrequency());
 10672  009AB2  0E00               	movlw	0
 10673  009AB4  0100               	movlb	0	; () banked
 10674  009AB6  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
 10675  009AB8  0E00               	movlw	0
 10676  009ABA  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
 10677  009ABC  0E00               	movlw	0
 10678  009ABE  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
 10679  009AC0  0E00               	movlw	0
 10680  009AC2  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
 10681  009AC4  EC48  F038         	call	_RADIO_WriteFrequency	;wreg free
 10682  009AC8                     l610:
 10683                           
 10684                           ;radio_driver_SX1276.c: 1168: };radio_driver_SX1276.c: 1169: };radio_driver_SX1276.c: 11
      +                          72: RADIO_RegisterWrite(0x12, 1<<(1));
 10685  009AC8  0E02               	movlw	2
 10686  009ACA  0100               	movlb	0	; () banked
 10687  009ACC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10688  009ACE  0E12               	movlw	18
 10689  009AD0  EC6B  F051         	call	_RADIO_RegisterWrite
 10690  009AD4  0012               	return		;funcret
 10691  009AD6                     __end_of_RADIO_FHSSChangeChannel:
 10692                           	opt callstack 0
 10693                           
 10694 ;; *************** function _RADIO_DIO0 *****************
 10695 ;; Defined at:
 10696 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10697 ;; Parameters:    Size  Location     Type
 10698 ;;		None
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;  opMode          1  153[BANK0 ] unsigned char 
 10701 ;;  dioMapping      1  152[BANK0 ] unsigned char 
 10702 ;; Return value:  Size  Location     Type
 10703 ;;                  1    wreg      void 
 10704 ;; Registers used:
 10705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10715 ;;Total ram usage:        4 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:   17
 10718 ;; This function calls:
 10719 ;;		_RADIO_FSKPacketSent
 10720 ;;		_RADIO_FSKPayloadReady
 10721 ;;		_RADIO_RegisterRead
 10722 ;;		_RADIO_RxDone
 10723 ;;		_RADIO_TxDone
 10724 ;;		_RADIO_UnhandledInterrupt
 10725 ;; This function is called by:
 10726 ;;		_LORAWAN_Mainloop
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text43
 10731  0081AE                     __ptext43:
 10732                           	opt callstack 0
 10733  0081AE                     _RADIO_DIO0:
 10734                           	opt callstack 10
 10735                           
 10736                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;;radio_driver_SX1276.c: 1180: uint8_t o
      +                          pMode;;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6
      +                          );
 10737                           
 10738                           ;incstack = 0
 10739  0081AE  0E40               	movlw	64
 10740  0081B0  EC9B  F050         	call	_RADIO_RegisterRead
 10741  0081B4  0100               	movlb	0	; () banked
 10742  0081B6  6FF6               	movwf	??_RADIO_DIO0& (0+255),b
 10743  0081B8  0E06               	movlw	6
 10744  0081BA  6FF7               	movwf	(??_RADIO_DIO0+1)& (0+255),b
 10745  0081BC                     u24175:
 10746  0081BC  90D8               	bcf	status,0,c
 10747  0081BE  33F6               	rrcf	??_RADIO_DIO0& (0+255),f,b
 10748  0081C0  2FF7               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
 10749  0081C2  D7FC               	goto	u24175
 10750  0081C4  51F6               	movf	??_RADIO_DIO0& (0+255),w,b
 10751  0081C6  0B03               	andlw	3
 10752  0081C8  6FF8               	movwf	RADIO_DIO0@dioMapping& (0+255),b
 10753                           
 10754                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
 10755  0081CA  0E01               	movlw	1
 10756  0081CC  EC9B  F050         	call	_RADIO_RegisterRead
 10757  0081D0  0100               	movlb	0	; () banked
 10758  0081D2  6FF9               	movwf	RADIO_DIO0@opMode& (0+255),b
 10759                           
 10760                           ; BSR set to: 0
 10761                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
 10762  0081D4  BFF9               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
 10763  0081D6  D00B               	goto	l21252
 10764  0081D8  D02A               	goto	l21268
 10765  0081DA                     l21244:
 10766                           
 10767                           ; BSR set to: 0
 10768                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
 10769  0081DA  EC37  F039         	call	_RADIO_RxDone	;wreg free
 10770                           
 10771                           ;radio_driver_SX1276.c: 1191: break;
 10772  0081DE  0012               	return	
 10773  0081E0                     l21246:
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
 10777  0081E0  ECD8  F032         	call	_RADIO_TxDone	;wreg free
 10778                           
 10779                           ;radio_driver_SX1276.c: 1194: break;
 10780  0081E4  0012               	return	
 10781  0081E6                     l21248:
 10782                           
 10783                           ; BSR set to: 0
 10784                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10785  0081E6  0E01               	movlw	1
 10786  0081E8  EC6E  F04E         	call	_RADIO_UnhandledInterrupt
 10787                           
 10788                           ;radio_driver_SX1276.c: 1197: break;
 10789  0081EC  0012               	return	
 10790  0081EE                     l21252:
 10791                           
 10792                           ; BSR set to: 0
 10793  0081EE  51F8               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 10794                           
 10795                           ; Switch size 1, requested type "simple"
 10796                           ; Number of cases is 2, Range of values is 0 to 1
 10797                           ; switch strategies available:
 10798                           ; Name         Instructions Cycles
 10799                           ; simple_byte            7     4 (average)
 10800                           ;	Chosen strategy is simple_byte
 10801  0081F0  0A00               	xorlw	0	; case 0
 10802  0081F2  B4D8               	btfsc	status,2,c
 10803  0081F4  D7F2               	goto	l21244
 10804  0081F6  0A01               	xorlw	1	; case 1
 10805  0081F8  B4D8               	btfsc	status,2,c
 10806  0081FA  D7F2               	goto	l21246
 10807  0081FC  D7F4               	goto	l21248
 10808  0081FE                     l21254:
 10809                           
 10810                           ; BSR set to: 0
 10811                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
 10812  0081FE  0E07               	movlw	7
 10813  008200  17F9               	andwf	RADIO_DIO0@opMode& (0+255),f,b
 10814                           
 10815                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
 10816  008202  0E03               	movlw	3
 10817  008204  19F9               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 10818  008206  A4D8               	btfss	status,2,c
 10819  008208  D003               	goto	l21258
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;radio_driver_SX1276.c: 1209: {;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
 10823  00820A  EC52  F032         	call	_RADIO_FSKPacketSent	;wreg free
 10824                           
 10825                           ;radio_driver_SX1276.c: 1212: }
 10826  00820E  0012               	return	
 10827  008210                     l21258:
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
 10831  008210  0E05               	movlw	5
 10832  008212  19F9               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 10833  008214  A4D8               	btfss	status,2,c
 10834  008216  D003               	goto	l21262
 10835                           
 10836                           ; BSR set to: 0
 10837                           ;radio_driver_SX1276.c: 1214: {;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
 10838  008218  ECB6  F03E         	call	_RADIO_FSKPayloadReady	;wreg free
 10839                           
 10840                           ;radio_driver_SX1276.c: 1217: }
 10841  00821C  0012               	return	
 10842  00821E                     l21262:
 10843                           
 10844                           ; BSR set to: 0
 10845                           ;radio_driver_SX1276.c: 1218: else;radio_driver_SX1276.c: 1219: {;radio_driver_SX1276.c:
      +                           1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
 10846  00821E  0E00               	movlw	0
 10847  008220  EC6E  F04E         	call	_RADIO_UnhandledInterrupt
 10848  008224  0012               	return	
 10849  008226                     l21264:
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
 10853  008226  0E00               	movlw	0
 10854  008228  EC6E  F04E         	call	_RADIO_UnhandledInterrupt
 10855                           
 10856                           ;radio_driver_SX1276.c: 1225: break;
 10857  00822C  0012               	return	
 10858  00822E                     l21268:
 10859                           
 10860                           ; BSR set to: 0
 10861  00822E  51F8               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 10862                           
 10863                           ; Switch size 1, requested type "simple"
 10864                           ; Number of cases is 1, Range of values is 0 to 0
 10865                           ; switch strategies available:
 10866                           ; Name         Instructions Cycles
 10867                           ; simple_byte            4     3 (average)
 10868                           ;	Chosen strategy is simple_byte
 10869  008230  0A00               	xorlw	0	; case 0
 10870  008232  B4D8               	btfsc	status,2,c
 10871  008234  D7E4               	goto	l21254
 10872  008236  D7F7               	goto	l21264
 10873  008238                     __end_of_RADIO_DIO0:
 10874                           	opt callstack 0
 10875                           
 10876 ;; *************** function _RADIO_UnhandledInterrupt *****************
 10877 ;; Defined at:
 10878 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10879 ;; Parameters:    Size  Location     Type
 10880 ;;  modulation      1    wreg     enum E5853
 10881 ;; Auto vars:     Size  Location     Type
 10882 ;;  modulation      1    4[BANK0 ] enum E5853
 10883 ;; Return value:  Size  Location     Type
 10884 ;;                  1    wreg      void 
 10885 ;; Registers used:
 10886 ;;		wreg, status,2, status,0, cstack
 10887 ;; Tracked objects:
 10888 ;;		On entry : 0/0
 10889 ;;		On exit  : 0/0
 10890 ;;		Unchanged: 0/0
 10891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10896 ;;Total ram usage:        1 bytes
 10897 ;; Hardware stack levels used:    1
 10898 ;; Hardware stack levels required when called:   10
 10899 ;; This function calls:
 10900 ;;		_RADIO_RegisterWrite
 10901 ;; This function is called by:
 10902 ;;		_RADIO_DIO0
 10903 ;;		_RADIO_DIO1
 10904 ;;		_RADIO_DIO2
 10905 ;;		_RADIO_DIO3
 10906 ;;		_RADIO_DIO4
 10907 ;;		_RADIO_DIO5
 10908 ;; This function uses a non-reentrant model
 10909 ;;
 10910                           
 10911                           	psect	text44
 10912  009CDC                     __ptext44:
 10913                           	opt callstack 0
 10914  009CDC                     _RADIO_UnhandledInterrupt:
 10915                           	opt callstack 16
 10916                           
 10917                           ;incstack = 0
 10918                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
 10919  009CDC  0100               	movlb	0	; () banked
 10920  009CDE  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
 10921                           
 10922                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
 10923  009CE0  0100               	movlb	0	; () banked
 10924  009CE2  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
 10925  009CE4  A4D8               	btfss	status,2,c
 10926  009CE6  D006               	goto	l20992
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;radio_driver_SX1276.c: 1145: {;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0
      +                          xFF);
 10930  009CE8  0EFF               	movlw	255
 10931  009CEA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10932  009CEC  0E12               	movlw	18
 10933  009CEE  EC6B  F051         	call	_RADIO_RegisterWrite
 10934                           
 10935                           ;radio_driver_SX1276.c: 1147: }
 10936  009CF2  0012               	return	
 10937  009CF4                     l20992:
 10938                           
 10939                           ; BSR set to: 0
 10940                           ;radio_driver_SX1276.c: 1148: else;radio_driver_SX1276.c: 1149: {;radio_driver_SX1276.c:
      +                           1152: RADIO_RegisterWrite(0x3E, 0xFF);
 10941  009CF4  0EFF               	movlw	255
 10942  009CF6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10943  009CF8  0E3E               	movlw	62
 10944  009CFA  EC6B  F051         	call	_RADIO_RegisterWrite
 10945                           
 10946                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
 10947  009CFE  0EFF               	movlw	255
 10948  009D00  0100               	movlb	0	; () banked
 10949  009D02  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10950  009D04  0E3F               	movlw	63
 10951  009D06  EC6B  F051         	call	_RADIO_RegisterWrite
 10952  009D0A  0012               	return		;funcret
 10953  009D0C                     __end_of_RADIO_UnhandledInterrupt:
 10954                           	opt callstack 0
 10955                           
 10956 ;; *************** function _RADIO_TxDone *****************
 10957 ;; Defined at:
 10958 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;		None
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;  timeOnAir       4  119[BANK0 ] unsigned long 
 10963 ;; Return value:  Size  Location     Type
 10964 ;;                  1    wreg      void 
 10965 ;; Registers used:
 10966 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10967 ;; Tracked objects:
 10968 ;;		On entry : 0/0
 10969 ;;		On exit  : 0/0
 10970 ;;		Unchanged: 0/0
 10971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10973 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10975 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10976 ;;Total ram usage:        8 bytes
 10977 ;; Hardware stack levels used:    1
 10978 ;; Hardware stack levels required when called:   15
 10979 ;; This function calls:
 10980 ;;		_LORAWAN_TxDone
 10981 ;;		_RADIO_RegisterWrite
 10982 ;;		_RADIO_WriteMode
 10983 ;;		_SwTimerReadValue
 10984 ;;		_SwTimerStop
 10985 ;;		___lmul
 10986 ;; This function is called by:
 10987 ;;		_RADIO_DIO0
 10988 ;; This function uses a non-reentrant model
 10989 ;;
 10990                           
 10991                           	psect	text45
 10992  0065B0                     __ptext45:
 10993                           	opt callstack 0
 10994  0065B0                     _RADIO_TxDone:
 10995                           	opt callstack 11
 10996                           
 10997                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;;radio_driver_SX1276.c: 1082: SwTimerSt
      +                          op(RadioConfiguration.watchdogTimerId);
 10998                           
 10999                           ;incstack = 0
 11000  0065B0  0101               	movlb	1	; () banked
 11001  0065B2  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 11002  0065B4  EC7B  F051         	call	_SwTimerStop
 11003                           
 11004                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
 11005  0065B8  0E08               	movlw	8
 11006  0065BA  0100               	movlb	0	; () banked
 11007  0065BC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11008  0065BE  0E12               	movlw	18
 11009  0065C0  EC6B  F051         	call	_RADIO_RegisterWrite
 11010                           
 11011                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 11012  0065C4  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 11013  0065C8  0E00               	movlw	0
 11014  0065CA  0100               	movlb	0	; () banked
 11015  0065CC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11016  0065CE  0E00               	movlw	0
 11017  0065D0  ECD9  F035         	call	_RADIO_WriteMode
 11018                           
 11019                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
 11020  0065D4  0101               	movlb	1	; () banked
 11021  0065D6  914C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 11022                           
 11023                           ; BSR set to: 1
 11024                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 11025  0065D8  B94C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 11026  0065DA  0012               	return	
 11027                           
 11028                           ; BSR set to: 1
 11029                           ;radio_driver_SX1276.c: 1087: {;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)2000
      +                          0) - ((SwTimerReadValue(RadioConfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint
      +                          32_t)(SwTimerReadValue(RadioConfiguration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((
      +                          uint32_t)(SwTimerReadValue(RadioConfiguration.t
 11030  0065DC  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 11031  0065DE  EC91  F04C         	call	_SwTimerReadValue
 11032  0065E2  0100               	movlb	0	; () banked
 11033  0065E4  518C               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 11034  0065E6  E108               	bnz	u23570
 11035  0065E8  0E1F               	movlw	31
 11036  0065EA  5D89               	subwf	?_SwTimerReadValue& (0+255),w,b
 11037  0065EC  0EAC               	movlw	172
 11038  0065EE  598A               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 11039  0065F0  0EDF               	movlw	223
 11040  0065F2  598B               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 11041  0065F4  A0D8               	btfss	status,0,c
 11042  0065F6  D021               	goto	l20958
 11043  0065F8                     u23570:
 11044                           
 11045                           ; BSR set to: 0
 11046  0065F8  0101               	movlb	1	; () banked
 11047  0065FA  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 11048  0065FC  EC91  F04C         	call	_SwTimerReadValue
 11049  006600  0E0D               	movlw	13
 11050  006602  D006               	goto	u23580
 11051  006604                     u23585:
 11052  006604  0100               	movlb	0	; () banked
 11053  006606  90D8               	bcf	status,0,c
 11054  006608  338C               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 11055  00660A  338B               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 11056  00660C  338A               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 11057  00660E  3389               	rrcf	?_SwTimerReadValue& (0+255),f,b
 11058  006610                     u23580:
 11059  006610  2EE8               	decfsz	wreg,f,c
 11060  006612  D7F8               	goto	u23585
 11061  006614  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 11062  006618  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 11063  00661C  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 11064  006620  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 11065  006624  0E7D               	movlw	125
 11066  006626  6F96               	movwf	___lmul@multiplicand& (0+255),b
 11067  006628  0E00               	movlw	0
 11068  00662A  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11069  00662C  0E00               	movlw	0
 11070  00662E  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11071  006630  0E00               	movlw	0
 11072  006632  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11073  006634  ECAD  F048         	call	___lmul	;wreg free
 11074  006638  D021               	goto	L12
 11075  00663A                     l20958:
 11076                           
 11077                           ; BSR set to: 0
 11078  00663A  0101               	movlb	1	; () banked
 11079  00663C  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 11080  00663E  EC91  F04C         	call	_SwTimerReadValue
 11081  006642  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 11082  006646  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 11083  00664A  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 11084  00664E  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 11085  006652  0E7D               	movlw	125
 11086  006654  0100               	movlb	0	; () banked
 11087  006656  6F96               	movwf	___lmul@multiplicand& (0+255),b
 11088  006658  0E00               	movlw	0
 11089  00665A  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11090  00665C  0E00               	movlw	0
 11091  00665E  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11092  006660  0E00               	movlw	0
 11093  006662  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11094  006664  ECAD  F048         	call	___lmul	;wreg free
 11095  006668  0E0D               	movlw	13
 11096  00666A  D006               	goto	u23590
 11097  00666C                     u23595:
 11098  00666C  0100               	movlb	0	; () banked
 11099  00666E  90D8               	bcf	status,0,c
 11100  006670  3395               	rrcf	(?___lmul+3)& (0+255),f,b
 11101  006672  3394               	rrcf	(?___lmul+2)& (0+255),f,b
 11102  006674  3393               	rrcf	(?___lmul+1)& (0+255),f,b
 11103  006676  3392               	rrcf	?___lmul& (0+255),f,b
 11104  006678                     u23590:
 11105  006678  2EE8               	decfsz	wreg,f,c
 11106  00667A  D7F8               	goto	u23595
 11107  00667C                     L12:
 11108  00667C  C092  F0DB         	movff	?___lmul,_RADIO_TxDone$796
 11109  006680  C093  F0DC         	movff	?___lmul+1,_RADIO_TxDone$796+1
 11110  006684  C094  F0DD         	movff	?___lmul+2,_RADIO_TxDone$796+2
 11111  006688  C095  F0DE         	movff	?___lmul+3,_RADIO_TxDone$796+3
 11112  00668C  0100               	movlb	0	; () banked
 11113  00668E  51DB               	movf	_RADIO_TxDone$796& (0+255),w,b
 11114  006690  0820               	sublw	32
 11115  006692  6FD7               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
 11116  006694  0E4E               	movlw	78
 11117  006696  55DC               	subfwb	(_RADIO_TxDone$796+1)& (0+255),w,b
 11118  006698  6FD8               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
 11119  00669A  0E00               	movlw	0
 11120  00669C  55DD               	subfwb	(_RADIO_TxDone$796+2)& (0+255),w,b
 11121  00669E  6FD9               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
 11122  0066A0  0E00               	movlw	0
 11123  0066A2  55DE               	subfwb	(_RADIO_TxDone$796+3)& (0+255),w,b
 11124  0066A4  6FDA               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
 11125                           
 11126                           ; BSR set to: 0
 11127                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
 11128  0066A6  C0D7  F0B3         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
 11129  0066AA  C0D8  F0B4         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 11130  0066AE  ECEC  F005         	call	_LORAWAN_TxDone	;wreg free
 11131  0066B2  0012               	return		;funcret
 11132  0066B4                     __end_of_RADIO_TxDone:
 11133                           	opt callstack 0
 11134                           
 11135 ;; *************** function _RADIO_RxDone *****************
 11136 ;; Defined at:
 11137 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 11138 ;; Parameters:    Size  Location     Type
 11139 ;;		None
 11140 ;; Auto vars:     Size  Location     Type
 11141 ;;  i               1  149[BANK0 ] unsigned char 
 11142 ;;  irqFlags        1  148[BANK0 ] unsigned char 
 11143 ;; Return value:  Size  Location     Type
 11144 ;;                  1    wreg      void 
 11145 ;; Registers used:
 11146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11147 ;; Tracked objects:
 11148 ;;		On entry : 0/0
 11149 ;;		On exit  : 0/0
 11150 ;;		Unchanged: 0/0
 11151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11153 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;Total ram usage:        2 bytes
 11157 ;; Hardware stack levels used:    1
 11158 ;; Hardware stack levels required when called:   16
 11159 ;; This function calls:
 11160 ;;		_HALSPICSAssert
 11161 ;;		_HALSPICSDeassert
 11162 ;;		_HALSPISend
 11163 ;;		_LORAWAN_RxDone
 11164 ;;		_RADIO_RegisterRead
 11165 ;;		_RADIO_RegisterWrite
 11166 ;;		_RADIO_WriteMode
 11167 ;;		_SwTimerStop
 11168 ;;		___abdiv
 11169 ;; This function is called by:
 11170 ;;		_RADIO_DIO0
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           	psect	text46
 11175  00726E                     __ptext46:
 11176                           	opt callstack 0
 11177  00726E                     _RADIO_RxDone:
 11178                           	opt callstack 10
 11179                           
 11180                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;;radio_driver_SX1276.c: 964: irqFlags =
      +                           RADIO_RegisterRead(0x12);
 11181                           
 11182                           ;incstack = 0
 11183  00726E  0E12               	movlw	18
 11184  007270  EC9B  F050         	call	_RADIO_RegisterRead
 11185  007274  0100               	movlb	0	; () banked
 11186  007276  6FF4               	movwf	RADIO_RxDone@irqFlags& (0+255),b
 11187                           
 11188                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
 11189  007278  0E70               	movlw	112
 11190  00727A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11191  00727C  0E12               	movlw	18
 11192  00727E  EC6B  F051         	call	_RADIO_RegisterWrite
 11193                           
 11194                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
 11195  007282  0100               	movlb	0	; () banked
 11196  007284  51F4               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
 11197  007286  0B50               	andlw	80
 11198  007288  0A50               	xorlw	80
 11199  00728A  A4D8               	btfss	status,2,c
 11200  00728C  0012               	return	
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;radio_driver_SX1276.c: 969: {;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguratio
      +                          n.watchdogTimerId);
 11204  00728E  0101               	movlb	1	; () banked
 11205  007290  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 11206  007292  EC7B  F051         	call	_SwTimerStop
 11207                           
 11208                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
 11209  007296  0E1C               	movlw	28
 11210  007298  EC9B  F050         	call	_RADIO_RegisterRead
 11211  00729C  0100               	movlb	0	; () banked
 11212  00729E  6FF5               	movwf	RADIO_RxDone@i& (0+255),b
 11213                           
 11214                           ; BSR set to: 0
 11215                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
 11216  0072A0  0101               	movlb	1	; () banked
 11217  0072A2  5145               	movf	(_RadioConfiguration+28)& (0+255),w,b
 11218  0072A4  B4D8               	btfsc	status,2,c
 11219  0072A6  D004               	goto	u23490
 11220                           
 11221                           ; BSR set to: 1
 11222  0072A8  0100               	movlb	0	; () banked
 11223  0072AA  ABF4               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
 11224                           
 11225                           ; BSR set to: 0
 11226  0072AC  ADF5               	btfss	RADIO_RxDone@i& (0+255),6,b
 11227  0072AE  D03C               	goto	l20882
 11228  0072B0                     u23490:
 11229                           
 11230                           ;radio_driver_SX1276.c: 976: {;radio_driver_SX1276.c: 984: RadioConfiguration.dataBuffer
      +                          Len = RADIO_RegisterRead(0x13);
 11231  0072B0  0E13               	movlw	19
 11232  0072B2  EC9B  F050         	call	_RADIO_RegisterRead
 11233  0072B6  0101               	movlb	1	; () banked
 11234  0072B8  6F4D               	movwf	(_RadioConfiguration+36)& (0+255),b
 11235                           
 11236                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
 11237  0072BA  0E00               	movlw	0
 11238  0072BC  0100               	movlb	0	; () banked
 11239  0072BE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11240  0072C0  0E0D               	movlw	13
 11241  0072C2  EC6B  F051         	call	_RADIO_RegisterWrite
 11242                           
 11243                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
 11244  0072C6  EC09  F054         	call	_HALSPICSAssert	;wreg free
 11245                           
 11246                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
 11247  0072CA  0E00               	movlw	0
 11248  0072CC  EC56  F053         	call	_HALSPISend
 11249                           
 11250                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 11251  0072D0  0E00               	movlw	0
 11252  0072D2  0100               	movlb	0	; () banked
 11253  0072D4  6FF5               	movwf	RADIO_RxDone@i& (0+255),b
 11254  0072D6  D00F               	goto	l20872
 11255  0072D8                     l20868:
 11256                           
 11257                           ; BSR set to: 0
 11258                           ;radio_driver_SX1276.c: 990: {;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer
      +                          [i] = HALSPISend(0xFF);
 11259  0072D8  51F5               	movf	RADIO_RxDone@i& (0+255),w,b
 11260  0072DA  0101               	movlb	1	; () banked
 11261  0072DC  254E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 11262  0072DE  6ED9               	movwf	fsr2l,c
 11263  0072E0  0100               	movlb	0	; () banked
 11264  0072E2  0E00               	movlw	0
 11265  0072E4  0101               	movlb	1	; () banked
 11266  0072E6  214F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 11267  0072E8  6EDA               	movwf	fsr2h,c
 11268  0072EA  0EFF               	movlw	255
 11269  0072EC  EC56  F053         	call	_HALSPISend
 11270  0072F0  6EDF               	movwf	indf2,c
 11271  0072F2  0100               	movlb	0	; () banked
 11272  0072F4  2BF5               	incf	RADIO_RxDone@i& (0+255),f,b
 11273  0072F6                     l20872:
 11274                           
 11275                           ; BSR set to: 0
 11276  0072F6  0101               	movlb	1	; () banked
 11277  0072F8  514D               	movf	(_RadioConfiguration+36)& (0+255),w,b
 11278  0072FA  0100               	movlb	0	; () banked
 11279  0072FC  5DF5               	subwf	RADIO_RxDone@i& (0+255),w,b
 11280  0072FE  A0D8               	btfss	status,0,c
 11281  007300  D7EB               	goto	l20868
 11282                           
 11283                           ; BSR set to: 0
 11284                           ;radio_driver_SX1276.c: 992: };radio_driver_SX1276.c: 993: HALSPICSDeassert();
 11285  007302  EC07  F054         	call	_HALSPICSDeassert	;wreg free
 11286                           
 11287                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
 11288  007306  0101               	movlb	1	; () banked
 11289  007308  854C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 11290                           
 11291                           ; BSR set to: 1
 11292                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
 11293  00730A  0E19               	movlw	25
 11294  00730C  EC9B  F050         	call	_RADIO_RegisterRead
 11295  007310  0101               	movlb	1	; () banked
 11296  007312  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 11297                           
 11298                           ; BSR set to: 1
 11299                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
 11300  007314  0E04               	movlw	4
 11301  007316  0100               	movlb	0	; () banked
 11302  007318  6F60               	movwf	___abdiv@divisor& (0+255),b
 11303  00731A  0101               	movlb	1	; () banked
 11304  00731C  515B               	movf	(_RadioConfiguration+50)& (0+255),w,b
 11305  00731E  ECFD  F046         	call	___abdiv
 11306  007322  0101               	movlb	1	; () banked
 11307  007324  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 11308                           
 11309                           ;radio_driver_SX1276.c: 998: }
 11310  007326  D002               	goto	l20884
 11311  007328                     l20882:
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;radio_driver_SX1276.c: 999: else;radio_driver_SX1276.c: 1000: {;radio_driver_SX1276.c: 
      +                          1002: RadioConfiguration.flags |= (1 << (3));
 11315  007328  0101               	movlb	1	; () banked
 11316  00732A  874C               	bsf	(_RadioConfiguration+35)& (0+255),3,b
 11317  00732C                     l20884:
 11318                           
 11319                           ; BSR set to: 1
 11320                           ;radio_driver_SX1276.c: 1003: };radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
 11321  00732C  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 11322  007330  0E00               	movlw	0
 11323  007332  0100               	movlb	0	; () banked
 11324  007334  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11325  007336  0E00               	movlw	0
 11326  007338  ECD9  F035         	call	_RADIO_WriteMode
 11327                           
 11328                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
 11329  00733C  0101               	movlb	1	; () banked
 11330  00733E  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 11331                           
 11332                           ; BSR set to: 1
 11333                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 11334  007340  C14E  F1DA         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 11335  007344  C14F  F1DB         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 11336  007348  C14D  F1DC         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 11337  00734C  EC56  F000         	call	_LORAWAN_RxDone	;wreg free
 11338  007350  0012               	return		;funcret
 11339  007352                     __end_of_RADIO_RxDone:
 11340                           	opt callstack 0
 11341                           
 11342 ;; *************** function ___abdiv *****************
 11343 ;; Defined at:
 11344 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\abdiv.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  dividend        1    wreg     char 
 11347 ;;  divisor         1    0[BANK0 ] char 
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;  dividend        1    6[BANK0 ] char 
 11350 ;;  quotient        1    5[BANK0 ] char 
 11351 ;;  sign            1    4[BANK0 ] unsigned char 
 11352 ;;  counter         1    3[BANK0 ] unsigned char 
 11353 ;; Return value:  Size  Location     Type
 11354 ;;                  1    wreg      char 
 11355 ;; Registers used:
 11356 ;;		wreg, status,2, status,0
 11357 ;; Tracked objects:
 11358 ;;		On entry : 0/0
 11359 ;;		On exit  : 0/0
 11360 ;;		Unchanged: 0/0
 11361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11362 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11363 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11365 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11366 ;;Total ram usage:        7 bytes
 11367 ;; Hardware stack levels used:    1
 11368 ;; Hardware stack levels required when called:    7
 11369 ;; This function calls:
 11370 ;;		Nothing
 11371 ;; This function is called by:
 11372 ;;		_RADIO_RxDone
 11373 ;; This function uses a non-reentrant model
 11374 ;;
 11375                           
 11376                           	psect	text47
 11377  008DFA                     __ptext47:
 11378                           	opt callstack 0
 11379  008DFA                     ___abdiv:
 11380                           	opt callstack 18
 11381                           
 11382                           ;incstack = 0
 11383                           ;___abdiv@dividend stored from wreg
 11384  008DFA  0100               	movlb	0	; () banked
 11385  008DFC  6F66               	movwf	___abdiv@dividend& (0+255),b
 11386  008DFE  0E00               	movlw	0
 11387  008E00  0100               	movlb	0	; () banked
 11388  008E02  6F64               	movwf	___abdiv@sign& (0+255),b
 11389                           
 11390                           ; BSR set to: 0
 11391  008E04  AF60               	btfss	___abdiv@divisor& (0+255),7,b
 11392  008E06  D003               	goto	l20810
 11393                           
 11394                           ; BSR set to: 0
 11395  008E08  6D60               	negf	___abdiv@divisor& (0+255),b
 11396                           
 11397                           ; BSR set to: 0
 11398  008E0A  0E01               	movlw	1
 11399  008E0C  6F64               	movwf	___abdiv@sign& (0+255),b
 11400  008E0E                     l20810:
 11401                           
 11402                           ; BSR set to: 0
 11403  008E0E  AF66               	btfss	___abdiv@dividend& (0+255),7,b
 11404  008E10  D003               	goto	l20816
 11405                           
 11406                           ; BSR set to: 0
 11407  008E12  6D66               	negf	___abdiv@dividend& (0+255),b
 11408                           
 11409                           ; BSR set to: 0
 11410  008E14  0E01               	movlw	1
 11411  008E16  1B64               	xorwf	___abdiv@sign& (0+255),f,b
 11412  008E18                     l20816:
 11413                           
 11414                           ; BSR set to: 0
 11415  008E18  0E00               	movlw	0
 11416  008E1A  6F65               	movwf	___abdiv@quotient& (0+255),b
 11417                           
 11418                           ; BSR set to: 0
 11419  008E1C  5160               	movf	___abdiv@divisor& (0+255),w,b
 11420  008E1E  B4D8               	btfsc	status,2,c
 11421  008E20  D01A               	goto	l20838
 11422                           
 11423                           ; BSR set to: 0
 11424  008E22  0E01               	movlw	1
 11425  008E24  6F63               	movwf	___abdiv@counter& (0+255),b
 11426  008E26  D003               	goto	l20826
 11427  008E28                     l20822:
 11428                           
 11429                           ; BSR set to: 0
 11430  008E28  90D8               	bcf	status,0,c
 11431  008E2A  3760               	rlcf	___abdiv@divisor& (0+255),f,b
 11432                           
 11433                           ; BSR set to: 0
 11434  008E2C  2B63               	incf	___abdiv@counter& (0+255),f,b
 11435  008E2E                     l20826:
 11436                           
 11437                           ; BSR set to: 0
 11438  008E2E  C060  F061         	movff	___abdiv@divisor,??___abdiv
 11439  008E32  6B62               	clrf	(??___abdiv+1)& (0+255),b
 11440  008E34  BF61               	btfsc	??___abdiv& (0+255),7,b
 11441  008E36  0762               	decf	(??___abdiv+1)& (0+255),f,b
 11442  008E38  AF61               	btfss	??___abdiv& (0+255),7,b
 11443  008E3A  D7F6               	goto	l20822
 11444  008E3C                     u23430:
 11445                           
 11446                           ; BSR set to: 0
 11447  008E3C  90D8               	bcf	status,0,c
 11448  008E3E  3765               	rlcf	___abdiv@quotient& (0+255),f,b
 11449  008E40  5160               	movf	___abdiv@divisor& (0+255),w,b
 11450  008E42  5D66               	subwf	___abdiv@dividend& (0+255),w,b
 11451  008E44  A0D8               	btfss	status,0,c
 11452  008E46  D003               	goto	l20834
 11453                           
 11454                           ; BSR set to: 0
 11455  008E48  5160               	movf	___abdiv@divisor& (0+255),w,b
 11456  008E4A  5F66               	subwf	___abdiv@dividend& (0+255),f,b
 11457                           
 11458                           ; BSR set to: 0
 11459  008E4C  8165               	bsf	___abdiv@quotient& (0+255),0,b
 11460  008E4E                     l20834:
 11461                           
 11462                           ; BSR set to: 0
 11463  008E4E  90D8               	bcf	status,0,c
 11464  008E50  3360               	rrcf	___abdiv@divisor& (0+255),f,b
 11465                           
 11466                           ; BSR set to: 0
 11467  008E52  2F63               	decfsz	___abdiv@counter& (0+255),f,b
 11468  008E54  D7F3               	goto	u23430
 11469  008E56                     l20838:
 11470                           
 11471                           ; BSR set to: 0
 11472  008E56  5164               	movf	___abdiv@sign& (0+255),w,b
 11473  008E58  A4D8               	btfss	status,2,c
 11474                           
 11475                           ; BSR set to: 0
 11476  008E5A  6D65               	negf	___abdiv@quotient& (0+255),b
 11477                           
 11478                           ; BSR set to: 0
 11479  008E5C  5165               	movf	___abdiv@quotient& (0+255),w,b
 11480                           
 11481                           ; BSR set to: 0
 11482  008E5E  0012               	return		;funcret
 11483  008E60                     __end_of___abdiv:
 11484                           	opt callstack 0
 11485                           
 11486 ;; *************** function _RADIO_FSKPayloadReady *****************
 11487 ;; Defined at:
 11488 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 11489 ;; Parameters:    Size  Location     Type
 11490 ;;		None
 11491 ;; Auto vars:     Size  Location     Type
 11492 ;;  i               1  149[BANK0 ] unsigned char 
 11493 ;;  irqFlags        1  148[BANK0 ] unsigned char 
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      void 
 11496 ;; Registers used:
 11497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11504 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;Total ram usage:        2 bytes
 11508 ;; Hardware stack levels used:    1
 11509 ;; Hardware stack levels required when called:   16
 11510 ;; This function calls:
 11511 ;;		_HALSPICSAssert
 11512 ;;		_HALSPICSDeassert
 11513 ;;		_HALSPISend
 11514 ;;		_LORAWAN_RxDone
 11515 ;;		_LORAWAN_RxTimeout
 11516 ;;		_RADIO_RegisterRead
 11517 ;;		_RADIO_WriteMode
 11518 ;;		_SwTimerStop
 11519 ;; This function is called by:
 11520 ;;		_RADIO_DIO0
 11521 ;; This function uses a non-reentrant model
 11522 ;;
 11523                           
 11524                           	psect	text48
 11525  007D6C                     __ptext48:
 11526                           	opt callstack 0
 11527  007D6C                     _RADIO_FSKPayloadReady:
 11528                           	opt callstack 10
 11529                           
 11530                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;;radio_driver_SX1276.c: 1013: uint8_t i;;
      +                          radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
 11531                           
 11532                           ; BSR set to: 0
 11533                           ;incstack = 0
 11534  007D6C  0E3F               	movlw	63
 11535  007D6E  EC9B  F050         	call	_RADIO_RegisterRead
 11536  007D72  0100               	movlb	0	; () banked
 11537  007D74  6FF4               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
 11538                           
 11539                           ; BSR set to: 0
 11540                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
 11541  007D76  A5F4               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
 11542  007D78  0012               	return	
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;radio_driver_SX1276.c: 1017: {;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfigurat
      +                          ion.watchdogTimerId);
 11546  007D7A  0101               	movlb	1	; () banked
 11547  007D7C  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 11548  007D7E  EC7B  F051         	call	_SwTimerStop
 11549                           
 11550                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 11551  007D82  0101               	movlb	1	; () banked
 11552  007D84  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 11553  007D86  EC7B  F051         	call	_SwTimerStop
 11554                           
 11555                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
 11556  007D8A  EC09  F054         	call	_HALSPICSAssert	;wreg free
 11557                           
 11558                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
 11559  007D8E  0E00               	movlw	0
 11560  007D90  EC56  F053         	call	_HALSPISend
 11561                           
 11562                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
 11563  007D94  0EFF               	movlw	255
 11564  007D96  EC56  F053         	call	_HALSPISend
 11565  007D9A  0101               	movlb	1	; () banked
 11566  007D9C  6F4D               	movwf	(_RadioConfiguration+36)& (0+255),b
 11567                           
 11568                           ; BSR set to: 1
 11569                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 11570  007D9E  0E00               	movlw	0
 11571  007DA0  0100               	movlb	0	; () banked
 11572  007DA2  6FF5               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
 11573  007DA4  D00F               	goto	l20908
 11574  007DA6                     l20904:
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;radio_driver_SX1276.c: 1029: {;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuff
      +                          er[i] = HALSPISend(0xFF);
 11578  007DA6  51F5               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
 11579  007DA8  0101               	movlb	1	; () banked
 11580  007DAA  254E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 11581  007DAC  6ED9               	movwf	fsr2l,c
 11582  007DAE  0100               	movlb	0	; () banked
 11583  007DB0  0E00               	movlw	0
 11584  007DB2  0101               	movlb	1	; () banked
 11585  007DB4  214F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 11586  007DB6  6EDA               	movwf	fsr2h,c
 11587  007DB8  0EFF               	movlw	255
 11588  007DBA  EC56  F053         	call	_HALSPISend
 11589  007DBE  6EDF               	movwf	indf2,c
 11590  007DC0  0100               	movlb	0	; () banked
 11591  007DC2  2BF5               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
 11592  007DC4                     l20908:
 11593                           
 11594                           ; BSR set to: 0
 11595  007DC4  0101               	movlb	1	; () banked
 11596  007DC6  514D               	movf	(_RadioConfiguration+36)& (0+255),w,b
 11597  007DC8  0100               	movlb	0	; () banked
 11598  007DCA  5DF5               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
 11599  007DCC  A0D8               	btfss	status,0,c
 11600  007DCE  D7EB               	goto	l20904
 11601                           
 11602                           ; BSR set to: 0
 11603                           ;radio_driver_SX1276.c: 1031: };radio_driver_SX1276.c: 1032: HALSPICSDeassert();
 11604  007DD0  EC07  F054         	call	_HALSPICSDeassert	;wreg free
 11605                           
 11606                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 11607  007DD4  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 11608  007DD8  0E00               	movlw	0
 11609  007DDA  0100               	movlb	0	; () banked
 11610  007DDC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11611  007DDE  0E00               	movlw	0
 11612  007DE0  ECD9  F035         	call	_RADIO_WriteMode
 11613                           
 11614                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
 11615  007DE4  0101               	movlb	1	; () banked
 11616  007DE6  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 11617                           
 11618                           ; BSR set to: 1
 11619                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
 11620  007DE8  0E80               	movlw	128
 11621  007DEA  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 11622                           
 11623                           ; BSR set to: 1
 11624                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
 11625  007DEC  0545               	decf	(_RadioConfiguration+28)& (0+255),w,b
 11626  007DEE  A4D8               	btfss	status,2,c
 11627  007DF0  D003               	goto	u23540
 11628                           
 11629                           ; BSR set to: 1
 11630                           ;radio_driver_SX1276.c: 1040: {;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags &
      +                           (1<<(1))))
 11631  007DF2  0100               	movlb	0	; () banked
 11632  007DF4  A3F4               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 11633  007DF6  D003               	goto	l20924
 11634  007DF8                     u23540:
 11635                           
 11636                           ;radio_driver_SX1276.c: 1042: {;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |=
      +                           (1 << (2));
 11637  007DF8  0101               	movlb	1	; () banked
 11638  007DFA  854C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 11639                           
 11640                           ;radio_driver_SX1276.c: 1044: }
 11641  007DFC  D002               	goto	l20928
 11642  007DFE                     l20924:
 11643                           
 11644                           ; BSR set to: 0
 11645                           ;radio_driver_SX1276.c: 1045: else;radio_driver_SX1276.c: 1046: {;radio_driver_SX1276.c:
      +                           1047: RadioConfiguration.flags &= ~(1 << (2));
 11646  007DFE  0101               	movlb	1	; () banked
 11647  007E00  954C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 11648  007E02                     l20928:
 11649                           
 11650                           ; BSR set to: 1
 11651                           ;radio_driver_SX1276.c: 1053: };radio_driver_SX1276.c: 1055: if ((RadioConfiguration.fla
      +                          gs & (1 << (2))) != 0)
 11652  007E02  A54C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 11653  007E04  D009               	goto	l20932
 11654                           
 11655                           ; BSR set to: 1
 11656                           ;radio_driver_SX1276.c: 1056: {;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfigu
      +                          ration.dataBuffer, RadioConfiguration.dataBufferLen);
 11657  007E06  C14E  F1DA         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 11658  007E0A  C14F  F1DB         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 11659  007E0E  C14D  F1DC         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 11660  007E12  EC56  F000         	call	_LORAWAN_RxDone	;wreg free
 11661                           
 11662                           ;radio_driver_SX1276.c: 1058: }
 11663  007E16  0012               	return	
 11664  007E18                     l20932:
 11665                           
 11666                           ; BSR set to: 1
 11667                           ;radio_driver_SX1276.c: 1059: else;radio_driver_SX1276.c: 1060: {;radio_driver_SX1276.c:
      +                           1061: LORAWAN_RxTimeout();
 11668  007E18  ECD7  F018         	call	_LORAWAN_RxTimeout	;wreg free
 11669  007E1C  0012               	return		;funcret
 11670  007E1E                     __end_of_RADIO_FSKPayloadReady:
 11671                           	opt callstack 0
 11672                           
 11673 ;; *************** function _LORAWAN_RxTimeout *****************
 11674 ;; Defined at:
 11675 ;;		line 465 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11676 ;; Parameters:    Size  Location     Type
 11677 ;;		None
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;  minim           4   94[BANK0 ] unsigned long 
 11680 ;;  i               1   98[BANK0 ] unsigned char 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      void 
 11683 ;; Registers used:
 11684 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11691 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11692 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11693 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11694 ;;Total ram usage:        9 bytes
 11695 ;; Hardware stack levels used:    1
 11696 ;; Hardware stack levels required when called:   15
 11697 ;; This function calls:
 11698 ;;		_LORAWAN_ReceiveWindow2Callback
 11699 ;;		_RADIO_Transmit
 11700 ;;		_ResetParametersForConfirmedTransmission
 11701 ;;		_ResetParametersForUnconfirmedTransmission
 11702 ;;		_RxData
 11703 ;;		_SelectChannelForTransmission
 11704 ;;		_SetJoinFailState
 11705 ;;		_SwTimerSetTimeout
 11706 ;;		_SwTimerStart
 11707 ;;		___lldiv
 11708 ;; This function is called by:
 11709 ;;		_RADIO_FSKPayloadReady
 11710 ;;		_RADIO_RxTimeout
 11711 ;;		_RADIO_RxFSKTimeout
 11712 ;;		_RADIO_WatchdogTimeout
 11713 ;; This function uses a non-reentrant model
 11714 ;;
 11715                           
 11716                           	psect	text49
 11717  0031AE                     __ptext49:
 11718                           	opt callstack 0
 11719  0031AE                     _LORAWAN_RxTimeout:
 11720                           	opt callstack 10
 11721                           
 11722                           ;lorawan_eu.c: 467: uint8_t i;;lorawan_eu.c: 468: uint32_t minim = (4294967295UL);
 11723                           
 11724                           ;incstack = 0
 11725  0031AE  0100               	movlb	0	; () banked
 11726  0031B0  69BE               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 11727  0031B2  69BF               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 11728  0031B4  69C0               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 11729  0031B6  69C1               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 11730                           
 11731                           ;lorawan_eu.c: 470: if (loRa.macStatus.macPause == 0)
 11732  0031B8  0102               	movlb	2	; () banked
 11733  0031BA  B108               	btfsc	(_loRa+3)& (0+255),0,b
 11734  0031BC  D15E               	goto	l20702
 11735                           
 11736                           ; BSR set to: 2
 11737                           ;lorawan_eu.c: 471: {;lorawan_eu.c: 473: if ( loRa.macStatus.macState == RX1_OPEN )
 11738  0031BE  5107               	movf	(_loRa+2)& (0+255),w,b
 11739  0031C0  0B0F               	andlw	15
 11740  0031C2  0A03               	xorlw	3
 11741  0031C4  A4D8               	btfss	status,2,c
 11742  0031C6  D011               	goto	l1067
 11743                           
 11744                           ; BSR set to: 2
 11745                           ;lorawan_eu.c: 474: {;lorawan_eu.c: 475: if (CLASS_A == loRa.deviceClass)
 11746  0031C8  5117               	movf	(_loRa+18)& (0+255),w,b
 11747  0031CA  A4D8               	btfss	status,2,c
 11748  0031CC  D005               	goto	l20636
 11749                           
 11750                           ; BSR set to: 2
 11751                           ;lorawan_eu.c: 476: {;lorawan_eu.c: 477: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 11752  0031CE  5107               	movf	(_loRa+2)& (0+255),w,b
 11753  0031D0  0BF0               	andlw	-16
 11754  0031D2  0904               	iorlw	4
 11755  0031D4  6F07               	movwf	(_loRa+2)& (0+255),b
 11756                           
 11757                           ;lorawan_eu.c: 478: }
 11758  0031D6  0012               	return	
 11759  0031D8                     l20636:
 11760                           
 11761                           ; BSR set to: 2
 11762                           ;lorawan_eu.c: 479: else if (CLASS_C == loRa.deviceClass)
 11763  0031D8  0E02               	movlw	2
 11764  0031DA  1917               	xorwf	(_loRa+18)& (0+255),w,b
 11765  0031DC  A4D8               	btfss	status,2,c
 11766  0031DE  0012               	return	
 11767                           
 11768                           ; BSR set to: 2
 11769                           ;lorawan_eu.c: 480: {;lorawan_eu.c: 481: LORAWAN_ReceiveWindow2Callback(0);
 11770  0031E0  0E00               	movlw	0
 11771  0031E2  6EE6               	movwf	postinc1,c
 11772  0031E4  EC18  F03A         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
 11773                           
 11774                           ;lorawan_eu.c: 482: };lorawan_eu.c: 483: }
 11775  0031E8  0012               	return	
 11776  0031EA                     l1067:
 11777                           
 11778                           ; BSR set to: 2
 11779                           ;lorawan_eu.c: 484: else;lorawan_eu.c: 485: {;lorawan_eu.c: 487: if (loRa.lorawanMacStat
      +                          us.joining == 1)
 11780  0031EA  A505               	btfss	_loRa& (0+255),2,b
 11781  0031EC  D003               	goto	l1072
 11782                           
 11783                           ; BSR set to: 2
 11784                           ;lorawan_eu.c: 488: {;lorawan_eu.c: 489: SetJoinFailState();
 11785  0031EE  ECCB  F04F         	call	_SetJoinFailState	;wreg free
 11786                           
 11787                           ;lorawan_eu.c: 490: }
 11788  0031F2  0012               	return	
 11789  0031F4                     l1072:
 11790                           
 11791                           ; BSR set to: 2
 11792                           ;lorawan_eu.c: 492: else if (loRa.macStatus.networkJoined == 1)
 11793  0031F4  A907               	btfss	(_loRa+2)& (0+255),4,b
 11794  0031F6  0012               	return	
 11795                           
 11796                           ; BSR set to: 2
 11797                           ;lorawan_eu.c: 493: {;lorawan_eu.c: 494: if (loRa.lorawanMacStatus.ackRequiredFromNextDo
      +                          wnlinkMessage == 1)
 11798  0031F8  A105               	btfss	_loRa& (0+255),0,b
 11799  0031FA  D058               	goto	l20658
 11800                           
 11801                           ; BSR set to: 2
 11802                           ;lorawan_eu.c: 495: {;lorawan_eu.c: 496: if (loRa.counterRepetitionsConfirmedUplink <= l
      +                          oRa.maxRepetitionsConfirmedUplink)
 11803  0031FC  51DE               	movf	(_loRa+217)& (0+255),w,b
 11804  0031FE  5DDC               	subwf	(_loRa+215)& (0+255),w,b
 11805  003200  A0D8               	btfss	status,0,c
 11806  003202  D038               	goto	l20652
 11807                           
 11808                           ; BSR set to: 2
 11809                           ;lorawan_eu.c: 497: {;lorawan_eu.c: 498: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 11810  003204  5107               	movf	(_loRa+2)& (0+255),w,b
 11811  003206  0BF0               	andlw	-16
 11812  003208  0906               	iorlw	6
 11813  00320A  6F07               	movwf	(_loRa+2)& (0+255),b
 11814                           
 11815                           ; BSR set to: 2
 11816                           ;lorawan_eu.c: 499: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 11817  00320C  51A5               	movf	(_loRa+160)& (0+255),w,b
 11818  00320E  0100               	movlb	0	; () banked
 11819  003210  6FBA               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11820  003212  0102               	movlb	2	; () banked
 11821  003214  51A6               	movf	(_loRa+161)& (0+255),w,b
 11822  003216  0100               	movlb	0	; () banked
 11823  003218  6FBB               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 11824  00321A  6BBC               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 11825  00321C  6BBD               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 11826  00321E  0E0C               	movlw	12
 11827  003220                     u22955:
 11828  003220  90D8               	bcf	status,0,c
 11829  003222  37BA               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 11830  003224  37BB               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 11831  003226  37BC               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 11832  003228  37BD               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 11833  00322A  2EE8               	decfsz	wreg,f,c
 11834  00322C  D7F9               	goto	u22955
 11835  00322E  C0BA  F060         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 11836  003232  C0BB  F061         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 11837  003236  C0BC  F062         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 11838  00323A  C0BD  F063         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 11839  00323E  0E7D               	movlw	125
 11840  003240  6F64               	movwf	___lldiv@divisor& (0+255),b
 11841  003242  0E00               	movlw	0
 11842  003244  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11843  003246  0E00               	movlw	0
 11844  003248  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11845  00324A  0E00               	movlw	0
 11846  00324C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11847  00324E  EC6D  F042         	call	___lldiv	;wreg free
 11848  003252  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 11849  003256  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 11850  00325A  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 11851  00325E  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 11852  003262  0102               	movlb	2	; () banked
 11853  003264  51ED               	movf	(_loRa+232)& (0+255),w,b
 11854  003266  EC2D  F04C         	call	_SwTimerSetTimeout
 11855                           
 11856                           ;lorawan_eu.c: 500: SwTimerStart(loRa.ackTimeoutTimerId);
 11857  00326A  0102               	movlb	2	; () banked
 11858  00326C  51ED               	movf	(_loRa+232)& (0+255),w,b
 11859  00326E  EC4A  F040         	call	_SwTimerStart
 11860                           
 11861                           ;lorawan_eu.c: 501: }
 11862  003272  0012               	return	
 11863  003274                     l20652:
 11864                           
 11865                           ; BSR set to: 2
 11866                           ;lorawan_eu.c: 502: else;lorawan_eu.c: 503: {;lorawan_eu.c: 504: ResetParametersForConfi
      +                          rmedTransmission ();
 11867  003274  EC33  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
 11868  003278                     
 11869                           ;lorawan_eu.c: 505: if (rxPayload.RxAppData != (0))
 11870  003278  0101               	movlb	1	; () banked
 11871  00327A  510E               	movf	_rxPayload& (0+255),w,b
 11872  00327C  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 11873  00327E  B4D8               	btfsc	status,2,c
 11874  003280  0012               	return	
 11875                           
 11876                           ; BSR set to: 1
 11877                           ;lorawan_eu.c: 506: {;lorawan_eu.c: 507: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11878  003282  0E00               	movlw	0
 11879  003284  0100               	movlb	0	; () banked
 11880  003286  6F60               	movwf	RxData@pData& (0+255),b
 11881  003288  0E00               	movlw	0
 11882  00328A  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11883  00328C  0E00               	movlw	0
 11884  00328E  6F62               	movwf	RxData@dataLength& (0+255),b
 11885  003290  0E00               	movlw	0
 11886  003292  6F63               	movwf	RxData@status& (0+255),b
 11887  003294  D801               	call	u22978
 11888  003296  0012               	return	
 11889  003298                     u22978:
 11890  003298  0005               	push	
 11891  00329A  6EFA               	movwf	pclath,c
 11892  00329C  0101               	movlb	1	; () banked
 11893  00329E  510E               	movf	_rxPayload& (0+255),w,b
 11894  0032A0  6EFD               	movwf	tosl,c
 11895  0032A2  510F               	movf	(_rxPayload+1)& (0+255),w,b
 11896  0032A4  6EFE               	movwf	tosh,c
 11897  0032A6  6AFF               	clrf	tosu,c
 11898  0032A8  50FA               	movf	pclath,w,c
 11899  0032AA  0012               	return		;indir
 11900  0032AC                     l20658:
 11901                           
 11902                           ; BSR set to: 2
 11903                           ;lorawan_eu.c: 512: else;lorawan_eu.c: 513: {;lorawan_eu.c: 514: if (loRa.counterRepetit
      +                          ionsUnconfirmedUplink <= loRa.maxRepetitionsUnconfirmedUplink)
 11904  0032AC  51DD               	movf	(_loRa+216)& (0+255),w,b
 11905  0032AE  5DDB               	subwf	(_loRa+214)& (0+255),w,b
 11906  0032B0  A0D8               	btfss	status,0,c
 11907  0032B2  D0C7               	goto	l20696
 11908                           
 11909                           ; BSR set to: 2
 11910                           ;lorawan_eu.c: 515: {;lorawan_eu.c: 516: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 11911  0032B4  5107               	movf	(_loRa+2)& (0+255),w,b
 11912  0032B6  0BF0               	andlw	-16
 11913  0032B8  0906               	iorlw	6
 11914  0032BA  6F07               	movwf	(_loRa+2)& (0+255),b
 11915                           
 11916                           ; BSR set to: 2
 11917                           ;lorawan_eu.c: 517: if (SelectChannelForTransmission (1) == OK)
 11918  0032BC  0E01               	movlw	1
 11919  0032BE  EC61  F046         	call	_SelectChannelForTransmission
 11920  0032C2  0900               	iorlw	0
 11921  0032C4  A4D8               	btfss	status,2,c
 11922  0032C6  D018               	goto	l20676
 11923                           
 11924                           ;lorawan_eu.c: 518: {;lorawan_eu.c: 520: if (RADIO_Transmit (&macBuffer[16], loRa.lastPa
      +                          cketLength) == OK)
 11925  0032C8  0EC8               	movlw	low (_macBuffer+16)
 11926  0032CA  0100               	movlb	0	; () banked
 11927  0032CC  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 11928  0032CE  0E06               	movlw	high (_macBuffer+16)
 11929  0032D0  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 11930  0032D2  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
 11931  0032D6  EC82  F01F         	call	_RADIO_Transmit	;wreg free
 11932  0032DA  0100               	movlb	0	; () banked
 11933  0032DC  51A9               	movf	?_RADIO_Transmit& (0+255),w,b
 11934  0032DE  11AA               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 11935  0032E0  A4D8               	btfss	status,2,c
 11936  0032E2  D007               	goto	l20670
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;lorawan_eu.c: 521: {;lorawan_eu.c: 522: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 11940  0032E4  0102               	movlb	2	; () banked
 11941  0032E6  2BDD               	incf	(_loRa+216)& (0+255),f,b
 11942                           
 11943                           ; BSR set to: 2
 11944                           ;lorawan_eu.c: 523: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 11945  0032E8  5107               	movf	(_loRa+2)& (0+255),w,b
 11946  0032EA  0BF0               	andlw	-16
 11947  0032EC  0901               	iorlw	1
 11948  0032EE  6F07               	movwf	(_loRa+2)& (0+255),b
 11949                           
 11950                           ;lorawan_eu.c: 524: }
 11951  0032F0  0012               	return	
 11952  0032F2                     l20670:
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;lorawan_eu.c: 525: else;lorawan_eu.c: 527: {;lorawan_eu.c: 528: ResetParametersForUncon
      +                          firmedTransmission ();
 11956  0032F2  EC03  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 11957  0032F6  D7C0               	goto	L38
 11958  0032F8                     l20676:
 11959                           
 11960                           ;lorawan_eu.c: 535: else;lorawan_eu.c: 536: {;lorawan_eu.c: 538: for (i = 0; i <= loRa.m
      +                          axChannels; i ++)
 11961  0032F8  0E00               	movlw	0
 11962  0032FA  0100               	movlb	0	; () banked
 11963  0032FC  6FC2               	movwf	LORAWAN_RxTimeout@i& (0+255),b
 11964  0032FE  D064               	goto	l20692
 11965  003300                     l20678:
 11966                           
 11967                           ; BSR set to: 2
 11968                           ;lorawan_eu.c: 539: {;lorawan_eu.c: 540: if ( (Channels[i].status == 1) && (Channels[i].
      +                          channelTimer != 0) && (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Ch
      +                          annels[i].dataRange.min) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 11969  003300  0100               	movlb	0	; () banked
 11970  003302  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11971  003304  0D0E               	mullw	14
 11972  003306  0E18               	movlw	low (_Channels+4)
 11973  003308  24F3               	addwf	prodl,w,c
 11974  00330A  6ED9               	movwf	fsr2l,c
 11975  00330C  0E04               	movlw	high (_Channels+4)
 11976  00330E  20F4               	addwfc	prodh,w,c
 11977  003310  6EDA               	movwf	fsr2h,c
 11978  003312  04DE               	decf	postinc2,w,c
 11979  003314  A4D8               	btfss	status,2,c
 11980  003316  D056               	goto	l20690
 11981                           
 11982                           ; BSR set to: 0
 11983  003318  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11984  00331A  0D0E               	mullw	14
 11985  00331C  0E1C               	movlw	low (_Channels+8)
 11986  00331E  24F3               	addwf	prodl,w,c
 11987  003320  6ED9               	movwf	fsr2l,c
 11988  003322  0E04               	movlw	high (_Channels+8)
 11989  003324  20F4               	addwfc	prodh,w,c
 11990  003326  6EDA               	movwf	fsr2h,c
 11991  003328  50DE               	movf	postinc2,w,c
 11992  00332A  10DE               	iorwf	postinc2,w,c
 11993  00332C  10DE               	iorwf	postinc2,w,c
 11994  00332E  10DE               	iorwf	postinc2,w,c
 11995  003330  B4D8               	btfsc	status,2,c
 11996  003332  D048               	goto	l20690
 11997                           
 11998                           ; BSR set to: 0
 11999  003334  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 12000  003336  0D0E               	mullw	14
 12001  003338  0E1C               	movlw	low (_Channels+8)
 12002  00333A  24F3               	addwf	prodl,w,c
 12003  00333C  6ED9               	movwf	fsr2l,c
 12004  00333E  0E04               	movlw	high (_Channels+8)
 12005  003340  20F4               	addwfc	prodh,w,c
 12006  003342  6EDA               	movwf	fsr2h,c
 12007  003344  50DE               	movf	postinc2,w,c
 12008  003346  5DBE               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 12009  003348  50DE               	movf	postinc2,w,c
 12010  00334A  59BF               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 12011  00334C  50DE               	movf	postinc2,w,c
 12012  00334E  59C0               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 12013  003350  50DE               	movf	postinc2,w,c
 12014  003352  59C1               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 12015  003354  A0D8               	btfss	status,0,c
 12016  003356  D036               	goto	l20690
 12017                           
 12018                           ; BSR set to: 0
 12019  003358  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 12020  00335A  0D0E               	mullw	14
 12021  00335C  0E19               	movlw	low (_Channels+5)
 12022  00335E  24F3               	addwf	prodl,w,c
 12023  003360  6ED9               	movwf	fsr2l,c
 12024  003362  0E04               	movlw	high (_Channels+5)
 12025  003364  20F4               	addwfc	prodh,w,c
 12026  003366  6EDA               	movwf	fsr2h,c
 12027  003368  0104               	movlb	4	; () banked
 12028  00336A  50DF               	movf	223,w,c
 12029  00336C  0B0F               	andlw	15
 12030  00336E  0100               	movlb	0	; () banked
 12031  003370  6FBA               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 12032  003372  51BA               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 12033  003374  0102               	movlb	2	; () banked
 12034  003376  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 12035  003378  A0D8               	btfss	status,0,c
 12036  00337A  D024               	goto	l20690
 12037                           
 12038                           ; BSR set to: 2
 12039  00337C  0100               	movlb	0	; () banked
 12040  00337E  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 12041  003380  0D0E               	mullw	14
 12042  003382  0E19               	movlw	low (_Channels+5)
 12043  003384  24F3               	addwf	prodl,w,c
 12044  003386  6ED9               	movwf	fsr2l,c
 12045  003388  0E04               	movlw	high (_Channels+5)
 12046  00338A  20F4               	addwfc	prodh,w,c
 12047  00338C  6EDA               	movwf	fsr2h,c
 12048  00338E  0104               	movlb	4	; () banked
 12049  003390  38DF               	swapf	223,w,c
 12050  003392  0B0F               	andlw	15
 12051  003394  0100               	movlb	0	; () banked
 12052  003396  6FBA               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 12053  003398  0102               	movlb	2	; () banked
 12054  00339A  51E4               	movf	(_loRa+223)& (0+255),w,b
 12055  00339C  0100               	movlb	0	; () banked
 12056  00339E  5DBA               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 12057  0033A0  A0D8               	btfss	status,0,c
 12058  0033A2  D010               	goto	l20690
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;lorawan_eu.c: 541: {;lorawan_eu.c: 542: minim = Channels[i].channelTimer;
 12062  0033A4  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 12063  0033A6  0D0E               	mullw	14
 12064  0033A8  0E1C               	movlw	low (_Channels+8)
 12065  0033AA  24F3               	addwf	prodl,w,c
 12066  0033AC  6ED9               	movwf	fsr2l,c
 12067  0033AE  0E04               	movlw	high (_Channels+8)
 12068  0033B0  20F4               	addwfc	prodh,w,c
 12069  0033B2  6EDA               	movwf	fsr2h,c
 12070  0033B4  CFDE F0BE          	movff	postinc2,LORAWAN_RxTimeout@minim
 12071  0033B8  CFDE F0BF          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 12072  0033BC  CFDE F0C0          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 12073  0033C0  CFDE F0C1          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 12074  0033C4                     l20690:
 12075  0033C4  0100               	movlb	0	; () banked
 12076  0033C6  2BC2               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 12077  0033C8                     l20692:
 12078                           
 12079                           ; BSR set to: 0
 12080  0033C8  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 12081  0033CA  0102               	movlb	2	; () banked
 12082  0033CC  5DF2               	subwf	(_loRa+237)& (0+255),w,b
 12083  0033CE  B0D8               	btfsc	status,0,c
 12084  0033D0  D797               	goto	l20678
 12085                           
 12086                           ; BSR set to: 2
 12087                           ;lorawan_eu.c: 543: };lorawan_eu.c: 544: };lorawan_eu.c: 545: SwTimerSetTimeout (loRa.un
      +                          confirmedRetransmisionTimerId, ( (((uint32_t)(minim + 50)) << (12)) / 125UL ) );
 12088  0033D2  C0BE  F0BA         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 12089  0033D6  C0BF  F0BB         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 12090  0033DA  C0C0  F0BC         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 12091  0033DE  C0C1  F0BD         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 12092  0033E2  0E0C               	movlw	12
 12093  0033E4                     u23085:
 12094  0033E4  90D8               	bcf	status,0,c
 12095  0033E6  0100               	movlb	0	; () banked
 12096  0033E8  37BA               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 12097  0033EA  37BB               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 12098  0033EC  37BC               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 12099  0033EE  37BD               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 12100  0033F0  2EE8               	decfsz	wreg,f,c
 12101  0033F2  D7F8               	goto	u23085
 12102  0033F4  0E00               	movlw	0
 12103  0033F6  25BA               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 12104  0033F8  6F60               	movwf	___lldiv@dividend& (0+255),b
 12105  0033FA  0E20               	movlw	32
 12106  0033FC  21BB               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 12107  0033FE  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12108  003400  0E03               	movlw	3
 12109  003402  21BC               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 12110  003404  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12111  003406  0E00               	movlw	0
 12112  003408  21BD               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 12113  00340A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12114  00340C  0E7D               	movlw	125
 12115  00340E  6F64               	movwf	___lldiv@divisor& (0+255),b
 12116  003410  0E00               	movlw	0
 12117  003412  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12118  003414  0E00               	movlw	0
 12119  003416  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12120  003418  0E00               	movlw	0
 12121  00341A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12122  00341C  EC6D  F042         	call	___lldiv	;wreg free
 12123  003420  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12124  003424  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12125  003428  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12126  00342C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12127  003430  0102               	movlb	2	; () banked
 12128  003432  51EF               	movf	(_loRa+234)& (0+255),w,b
 12129  003434  EC2D  F04C         	call	_SwTimerSetTimeout
 12130                           
 12131                           ;lorawan_eu.c: 546: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 12132  003438  0102               	movlb	2	; () banked
 12133  00343A  51EF               	movf	(_loRa+234)& (0+255),w,b
 12134  00343C  EC4A  F040         	call	_SwTimerStart
 12135  003440  0012               	return	
 12136  003442                     l20696:
 12137                           
 12138                           ; BSR set to: 2
 12139                           ;lorawan_eu.c: 549: else;lorawan_eu.c: 550: {;lorawan_eu.c: 551: ResetParametersForUncon
      +                          firmedTransmission ();
 12140  003442  EC03  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 12141                           
 12142                           ;lorawan_eu.c: 552: if (rxPayload.RxAppData != (0))
 12143  003446  0101               	movlb	1	; () banked
 12144  003448  510E               	movf	_rxPayload& (0+255),w,b
 12145  00344A  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12146  00344C  B4D8               	btfsc	status,2,c
 12147  00344E  0012               	return	
 12148                           
 12149                           ; BSR set to: 1
 12150                           ;lorawan_eu.c: 553: {;lorawan_eu.c: 554: rxPayload.RxAppData((0), 0, MAC_OK);
 12151  003450  0E00               	movlw	0
 12152  003452  0100               	movlb	0	; () banked
 12153  003454  6F60               	movwf	RxData@pData& (0+255),b
 12154  003456  0E00               	movlw	0
 12155  003458  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12156  00345A  0E00               	movlw	0
 12157  00345C  6F62               	movwf	RxData@dataLength& (0+255),b
 12158  00345E  0E01               	movlw	1
 12159  003460  6F63               	movwf	RxData@status& (0+255),b
 12160  003462  D801               	call	u23108
 12161  003464  0012               	return	
 12162  003466                     u23108:
 12163  003466  0005               	push	
 12164  003468  6EFA               	movwf	pclath,c
 12165  00346A  0101               	movlb	1	; () banked
 12166  00346C  510E               	movf	_rxPayload& (0+255),w,b
 12167  00346E  6EFD               	movwf	tosl,c
 12168  003470  510F               	movf	(_rxPayload+1)& (0+255),w,b
 12169  003472  6EFE               	movwf	tosh,c
 12170  003474  6AFF               	clrf	tosu,c
 12171  003476  50FA               	movf	pclath,w,c
 12172  003478  0012               	return		;indir
 12173  00347A                     l20702:
 12174                           
 12175                           ; BSR set to: 2
 12176                           ;lorawan_eu.c: 561: else;lorawan_eu.c: 562: {;lorawan_eu.c: 564: if (rxPayload.RxAppData
      +                           != (0))
 12177  00347A  0101               	movlb	1	; () banked
 12178  00347C  510E               	movf	_rxPayload& (0+255),w,b
 12179  00347E  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12180  003480  B4D8               	btfsc	status,2,c
 12181  003482  0012               	return	
 12182                           
 12183                           ; BSR set to: 1
 12184                           ;lorawan_eu.c: 565: {;lorawan_eu.c: 566: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 12185  003484  0E00               	movlw	0
 12186  003486  0100               	movlb	0	; () banked
 12187  003488  6F60               	movwf	RxData@pData& (0+255),b
 12188  00348A  0E00               	movlw	0
 12189  00348C  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12190  00348E  0E00               	movlw	0
 12191  003490  6F62               	movwf	RxData@dataLength& (0+255),b
 12192  003492  0E02               	movlw	2
 12193  003494  6F63               	movwf	RxData@status& (0+255),b
 12194  003496  D801               	call	u23128
 12195  003498  0012               	return	
 12196  00349A                     u23128:
 12197  00349A  0005               	push	
 12198  00349C  6EFA               	movwf	pclath,c
 12199  00349E  0101               	movlb	1	; () banked
 12200  0034A0  510E               	movf	_rxPayload& (0+255),w,b
 12201  0034A2  6EFD               	movwf	tosl,c
 12202  0034A4  510F               	movf	(_rxPayload+1)& (0+255),w,b
 12203  0034A6  6EFE               	movwf	tosh,c
 12204  0034A8  6AFF               	clrf	tosu,c
 12205  0034AA  50FA               	movf	pclath,w,c
 12206  0034AC  0012               	return		;indir
 12207  0034AE                     __end_of_LORAWAN_RxTimeout:
 12208                           	opt callstack 0
 12209                           
 12210 ;; *************** function _LORAWAN_RxDone *****************
 12211 ;; Defined at:
 12212 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12213 ;; Parameters:    Size  Location     Type
 12214 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 12215 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12216 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 12217 ;; Auto vars:     Size  Location     Type
 12218 ;;  hdr             2  146[BANK0 ] PTR struct .
 12219 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12220 ;;  joinAccept      2  143[BANK0 ] PTR struct .
 12221 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12222 ;;  computedMic     4  139[BANK0 ] unsigned long 
 12223 ;;  extractedMic    4  131[BANK0 ] unsigned long 
 12224 ;;  packet          2  137[BANK0 ] PTR unsigned char 
 12225 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 12226 ;;  frmPayloadLe    1  145[BANK0 ] unsigned char 
 12227 ;;  temp            1  136[BANK0 ] unsigned char 
 12228 ;;  bufferIndex     1  135[BANK0 ] unsigned char 
 12229 ;;  mhdr            1  130[BANK0 ] struct .
 12230 ;;  channelIndex    1  129[BANK0 ] unsigned char 
 12231 ;;  fPort           1  128[BANK0 ] unsigned char 
 12232 ;; Return value:  Size  Location     Type
 12233 ;;                  1    wreg      enum E6295
 12234 ;; Registers used:
 12235 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12236 ;; Tracked objects:
 12237 ;;		On entry : 0/0
 12238 ;;		On exit  : 0/0
 12239 ;;		Unchanged: 0/0
 12240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12241 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12242 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12243 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12244 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12245 ;;Total ram usage:       28 bytes
 12246 ;; Hardware stack levels used:    1
 12247 ;; Hardware stack levels required when called:   15
 12248 ;; This function calls:
 12249 ;;		_AESCmac
 12250 ;;		_AESEncodeLoRa
 12251 ;;		_AssembleEncryptionBlock
 12252 ;;		_CheckFlags
 12253 ;;		_CheckMcastFlags
 12254 ;;		_ComputeMic
 12255 ;;		_ComputeSessionKeys
 12256 ;;		_EncryptFRMPayload
 12257 ;;		_ExtractMic
 12258 ;;		_LORAWAN_EnterContinuousReceive
 12259 ;;		_LORAWAN_Send
 12260 ;;		_MacExecuteCommands
 12261 ;;		_RADIO_GetStatus
 12262 ;;		_RADIO_ReleaseData
 12263 ;;		_RxData
 12264 ;;		_SearchAvailableChannel
 12265 ;;		_SetJoinFailState
 12266 ;;		_SetReceptionNotOkState
 12267 ;;		_StartReTxTimer
 12268 ;;		_SwTimerStop
 12269 ;;		_UpdateCfList
 12270 ;;		_UpdateDLSettings
 12271 ;;		_UpdateJoinSuccessState
 12272 ;;		_UpdateReceiveDelays
 12273 ;;		_UpdateRetransmissionAckTimeoutState
 12274 ;;		_memcpy
 12275 ;; This function is called by:
 12276 ;;		_RADIO_RxDone
 12277 ;;		_RADIO_FSKPayloadReady
 12278 ;; This function uses a non-reentrant model
 12279 ;;
 12280                           
 12281                           	psect	text50
 12282  0000AC                     __ptext50:
 12283                           	opt callstack 0
 12284  0000AC                     _LORAWAN_RxDone:
 12285                           	opt callstack 10
 12286                           
 12287                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;;lorawan.c: 1124: Mhdr_t mhdr;;lora
      +                          wan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;;lorawan.c: 1126: uint8_t frmPaylo
      +                          adLength;;lorawan.c: 1127: uint8_t *packet;;lorawan.c: 1128: uint8_t temp;;lorawan.c: 11
      +                          30: RADIO_ReleaseData();
 12288                           
 12289                           ;incstack = 0
 12290  0000AC  ECF3  F053         	call	_RADIO_ReleaseData	;wreg free
 12291                           
 12292                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 12293  0000B0  0102               	movlb	2	; () banked
 12294  0000B2  B108               	btfsc	(_loRa+3)& (0+255),0,b
 12295  0000B4  EFB9  F005         	goto	l20618
 12296                           
 12297                           ; BSR set to: 2
 12298                           ;lorawan.c: 1133: {;lorawan.c: 1134: mhdr.value = buffer[0];
 12299  0000B8  C1DA  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12300  0000BC  C1DB  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12301  0000C0  50DF               	movf	indf2,w,c
 12302  0000C2  0100               	movlb	0	; () banked
 12303  0000C4  6FE2               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 12304                           
 12305                           ; BSR set to: 0
 12306                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 12307  0000C6  39E2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12308  0000C8  32E8               	rrcf	wreg,f,c
 12309  0000CA  0B07               	andlw	7
 12310  0000CC  06E8               	decf	wreg,f,c
 12311  0000CE  A4D8               	btfss	status,2,c
 12312  0000D0  D0CF               	goto	l20278
 12313                           
 12314                           ; BSR set to: 0
 12315  0000D2  0102               	movlb	2	; () banked
 12316  0000D4  5122               	movf	(_loRa+29)& (0+255),w,b
 12317  0000D6  A4D8               	btfss	status,2,c
 12318  0000D8  D0CB               	goto	l20278
 12319                           
 12320                           ; BSR set to: 2
 12321                           ;lorawan.c: 1136: {;lorawan.c: 1137: temp = bufferLength - 1;
 12322  0000DA  0101               	movlb	1	; () banked
 12323  0000DC  05DC               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12324  0000DE  0100               	movlb	0	; () banked
 12325  0000E0  D01F               	goto	L13
 12326  0000E2                     l20228:
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;lorawan.c: 1139: {;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.a
      +                          ctivationParameters.applicationKey);
 12330  0000E2  0101               	movlb	1	; () banked
 12331  0000E4  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12332  0000E6  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12333  0000E8  0100               	movlb	0	; () banked
 12334  0000EA  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 12335  0000EC  0E00               	movlw	0
 12336  0000EE  0101               	movlb	1	; () banked
 12337  0000F0  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12338  0000F2  0100               	movlb	0	; () banked
 12339  0000F4  6FDC               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 12340  0000F6  51E8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 12341  0000F8  5DDB               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 12342  0000FA  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 12343  0000FC  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12344  0000FE  A0D8               	btfss	status,0,c
 12345  000100  05DC               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12346  000102  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 12347  000104  0E47               	movlw	low (_loRa+66)
 12348  000106  6F80               	movwf	AESEncodeLoRa@key& (0+255),b
 12349  000108  0E02               	movlw	high (_loRa+66)
 12350  00010A  6F81               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 12351  00010C  ECA4  F04D         	call	_AESEncodeLoRa	;wreg free
 12352                           
 12353                           ;lorawan.c: 1142: if (temp > 16)
 12354  000110  0E10               	movlw	16
 12355  000112  0100               	movlb	0	; () banked
 12356  000114  65E8               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 12357  000116  D003               	goto	l20234
 12358                           
 12359                           ; BSR set to: 0
 12360                           ;lorawan.c: 1143: {;lorawan.c: 1144: temp -= 16;
 12361  000118  0E10               	movlw	16
 12362  00011A  5FE8               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 12363                           
 12364                           ;lorawan.c: 1145: }
 12365  00011C  D002               	goto	l1912
 12366  00011E                     l20234:
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;lorawan.c: 1146: else;lorawan.c: 1147: {;lorawan.c: 1148: temp = 0;
 12370  00011E  0E00               	movlw	0
 12371  000120                     L13:
 12372  000120  6FE8               	movwf	LORAWAN_RxDone@temp& (0+255),b
 12373  000122                     l1912:
 12374                           
 12375                           ; BSR set to: 0
 12376  000122  51E8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 12377  000124  A4D8               	btfss	status,2,c
 12378  000126  D7DD               	goto	l20228
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;lorawan.c: 1149: };lorawan.c: 1150: };lorawan.c: 1153: computedMic = ComputeMic (loRa.a
      +                          ctivationParameters.applicationKey, buffer, bufferLength - sizeof(extractedMic));
 12382  000128  0E47               	movlw	low (_loRa+66)
 12383  00012A  6FC8               	movwf	ComputeMic@key& (0+255),b
 12384  00012C  0E02               	movlw	high (_loRa+66)
 12385  00012E  6FC9               	movwf	(ComputeMic@key+1)& (0+255),b
 12386  000130  C1DA  F0CA         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 12387  000134  C1DB  F0CB         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 12388  000138  0101               	movlb	1	; () banked
 12389  00013A  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12390  00013C  0FFC               	addlw	252
 12391  00013E  0100               	movlb	0	; () banked
 12392  000140  6FCC               	movwf	ComputeMic@bufferLength& (0+255),b
 12393  000142  EC61  F047         	call	_ComputeMic	;wreg free
 12394  000146  C0C8  F0EB         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 12395  00014A  C0C9  F0EC         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 12396  00014E  C0CA  F0ED         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 12397  000152  C0CB  F0EE         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 12398                           
 12399                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 12400  000156  C1DA  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12401  00015A  C1DB  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12402  00015E  C1DC  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12403  000162  EC77  F04A         	call	_ExtractMic	;wreg free
 12404  000166  C06B  F0E3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12405  00016A  C06C  F0E4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12406  00016E  C06D  F0E5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12407  000172  C06E  F0E6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12408                           
 12409                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 12410  000176  0100               	movlb	0	; () banked
 12411  000178  51EB               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12412  00017A  19E3               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12413  00017C  E10A               	bnz	u22210
 12414  00017E  51EC               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12415  000180  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12416  000182  E107               	bnz	u22210
 12417  000184  51ED               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12418  000186  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12419  000188  E104               	bnz	u22210
 12420  00018A  51EE               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12421  00018C  19E6               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12422  00018E  B4D8               	btfsc	status,2,c
 12423  000190  D011               	goto	l20252
 12424  000192                     u22210:
 12425                           
 12426                           ; BSR set to: 0
 12427                           ;lorawan.c: 1156: {;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa
      +                          .macStatus.macState == RX1_OPEN) && (loRa.rx2DelayExpired)))
 12428  000192  0102               	movlb	2	; () banked
 12429  000194  5107               	movf	(_loRa+2)& (0+255),w,b
 12430  000196  0B0F               	andlw	15
 12431  000198  0A05               	xorlw	5
 12432  00019A  B4D8               	btfsc	status,2,c
 12433  00019C  D008               	goto	u22240
 12434                           
 12435                           ; BSR set to: 2
 12436  00019E  5107               	movf	(_loRa+2)& (0+255),w,b
 12437  0001A0  0B0F               	andlw	15
 12438  0001A2  0A03               	xorlw	3
 12439  0001A4  A4D8               	btfss	status,2,c
 12440  0001A6  0012               	return	
 12441                           
 12442                           ; BSR set to: 2
 12443  0001A8  51F6               	movf	(_loRa+241)& (0+255),w,b
 12444  0001AA  B4D8               	btfsc	status,2,c
 12445  0001AC  0012               	return	
 12446  0001AE                     u22240:
 12447                           
 12448                           ; BSR set to: 2
 12449                           ;lorawan.c: 1158: {;lorawan.c: 1159: SetJoinFailState();
 12450  0001AE  ECCB  F04F         	call	_SetJoinFailState	;wreg free
 12451                           
 12452                           ; BSR set to: 2
 12453                           ;lorawan.c: 1160: };lorawan.c: 1162: return INVALID_PARAMETER;;	Return value of _LORAWAN
      +                          _RxDone is never used
 12454  0001B2  0012               	return	
 12455  0001B4                     l20252:
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;lorawan.c: 1163: };lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 12459  0001B4  0102               	movlb	2	; () banked
 12460  0001B6  5107               	movf	(_loRa+2)& (0+255),w,b
 12461  0001B8  0B0F               	andlw	15
 12462  0001BA  0A03               	xorlw	3
 12463  0001BC  A4D8               	btfss	status,2,c
 12464  0001BE  D003               	goto	l20256
 12465                           
 12466                           ; BSR set to: 2
 12467                           ;lorawan.c: 1167: {;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 12468  0001C0  51E8               	movf	(_loRa+227)& (0+255),w,b
 12469  0001C2  EC7B  F051         	call	_SwTimerStop
 12470  0001C6                     l20256:
 12471                           
 12472                           ;lorawan.c: 1169: };lorawan.c: 1171: JoinAccept_t *joinAccept;;lorawan.c: 1172: joinAcce
      +                          pt = (JoinAccept_t*)buffer;
 12473  0001C6  C1DA  F0EF         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 12474  0001CA  C1DB  F0F0         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 12475                           
 12476                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 12477  0001CE  0100               	movlb	0	; () banked
 12478  0001D0  EE20 F007          	lfsr	2,7
 12479  0001D4  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12480  0001D6  26D9               	addwf	fsr2l,f,c
 12481  0001D8  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12482  0001DA  22DA               	addwfc	fsr2h,f,c
 12483  0001DC  CFDE F223          	movff	postinc2,_loRa+30
 12484  0001E0  CFDE F224          	movff	postinc2,_loRa+31
 12485  0001E4  CFDE F225          	movff	postinc2,_loRa+32
 12486  0001E8  CFDE F226          	movff	postinc2,_loRa+33
 12487                           
 12488                           ; BSR set to: 0
 12489                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 12490  0001EC  EE20 F00C          	lfsr	2,12
 12491  0001F0  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12492  0001F2  26D9               	addwf	fsr2l,f,c
 12493  0001F4  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12494  0001F6  22DA               	addwfc	fsr2h,f,c
 12495  0001F8  50DF               	movf	indf2,w,c
 12496  0001FA  0B0F               	andlw	15
 12497  0001FC  EC4F  F04C         	call	_UpdateReceiveDelays
 12498                           
 12499                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 12500  000200  0100               	movlb	0	; () banked
 12501  000202  EE20 F00B          	lfsr	2,11
 12502  000206  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12503  000208  26D9               	addwf	fsr2l,f,c
 12504  00020A  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12505  00020C  22DA               	addwfc	fsr2h,f,c
 12506  00020E  38DF               	swapf	223,w,c
 12507  000210  0B07               	andlw	7
 12508  000212  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12509  000214  EE20 F00B          	lfsr	2,11
 12510  000218  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12511  00021A  26D9               	addwf	fsr2l,f,c
 12512  00021C  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12513  00021E  22DA               	addwfc	fsr2h,f,c
 12514  000220  50DF               	movf	223,w,c
 12515  000222  0B0F               	andlw	15
 12516  000224  EC33  F052         	call	_UpdateDLSettings
 12517                           
 12518                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 12519  000228  C0EF  F09E         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 12520  00022C  C0F0  F09F         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 12521  000230  0101               	movlb	1	; () banked
 12522  000232  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12523  000234  EC94  F020         	call	_UpdateCfList
 12524                           
 12525                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 12526  000238  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 12527  00023C  C0F0  F093         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 12528  000240  ECE8  F041         	call	_ComputeSessionKeys	;wreg free
 12529                           
 12530                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 12531  000244  0E00               	movlw	0
 12532  000246  6EE6               	movwf	postinc1,c
 12533  000248  EC27  F02D         	call	_UpdateJoinSuccessState	;wreg free
 12534                           
 12535                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 12536  00024C  0E00               	movlw	0
 12537  00024E  0102               	movlb	2	; () banked
 12538  000250  6F0B               	movwf	(_loRa+6)& (0+255),b
 12539  000252  0E00               	movlw	0
 12540  000254  6F0C               	movwf	(_loRa+7)& (0+255),b
 12541  000256  0E00               	movlw	0
 12542  000258  6F0D               	movwf	(_loRa+8)& (0+255),b
 12543  00025A  0E00               	movlw	0
 12544  00025C  6F0E               	movwf	(_loRa+9)& (0+255),b
 12545                           
 12546                           ; BSR set to: 2
 12547                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 12548  00025E  0E00               	movlw	0
 12549  000260  6F0F               	movwf	(_loRa+10)& (0+255),b
 12550  000262  0E00               	movlw	0
 12551  000264  6F10               	movwf	(_loRa+11)& (0+255),b
 12552  000266  0E00               	movlw	0
 12553  000268  6F11               	movwf	(_loRa+12)& (0+255),b
 12554  00026A  0E00               	movlw	0
 12555  00026C  6F12               	movwf	(_loRa+13)& (0+255),b
 12556  00026E  0012               	return	
 12557  000270                     l20278:
 12558                           
 12559                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 12560  000270  0100               	movlb	0	; () banked
 12561  000272  39E2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12562  000274  32E8               	rrcf	wreg,f,c
 12563  000276  0B07               	andlw	7
 12564  000278  0A03               	xorlw	3
 12565  00027A  B4D8               	btfsc	status,2,c
 12566  00027C  D007               	goto	u22270
 12567                           
 12568                           ; BSR set to: 0
 12569  00027E  39E2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12570  000280  32E8               	rrcf	wreg,f,c
 12571  000282  0B07               	andlw	7
 12572  000284  0A05               	xorlw	5
 12573  000286  A4D8               	btfss	status,2,c
 12574  000288  EFB6  F005         	goto	l20614
 12575  00028C                     u22270:
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;lorawan.c: 1192: {;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 12579  00028C  0E00               	movlw	0
 12580  00028E  0102               	movlb	2	; () banked
 12581  000290  6FAC               	movwf	(_loRa+167)& (0+255),b
 12582                           
 12583                           ; BSR set to: 2
 12584                           ;lorawan.c: 1195: Hdr_t *hdr;;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 12585  000292  C1DA  F0F2         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 12586  000296  C1DB  F0F3         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 12587                           
 12588                           ; BSR set to: 2
 12589                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 12590  00029A  0E02               	movlw	2
 12591  00029C  1917               	xorwf	(_loRa+18)& (0+255),w,b
 12592  00029E  A4D8               	btfss	status,2,c
 12593  0002A0  D1AA               	goto	l20404
 12594                           
 12595                           ; BSR set to: 2
 12596  0002A2  0100               	movlb	0	; () banked
 12597  0002A4  EE20 F001          	lfsr	2,1
 12598  0002A8  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12599  0002AA  26D9               	addwf	fsr2l,f,c
 12600  0002AC  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12601  0002AE  22DA               	addwfc	fsr2h,f,c
 12602  0002B0  0102               	movlb	2	; () banked
 12603  0002B2  5167               	movf	(_loRa+98)& (0+255),w,b
 12604  0002B4  18DE               	xorwf	postinc2,w,c
 12605  0002B6  E109               	bnz	u22291
 12606  0002B8  5168               	movf	(_loRa+99)& (0+255),w,b
 12607  0002BA  18DE               	xorwf	postinc2,w,c
 12608  0002BC  E106               	bnz	u22291
 12609  0002BE  5169               	movf	(_loRa+100)& (0+255),w,b
 12610  0002C0  18DE               	xorwf	postinc2,w,c
 12611  0002C2  E103               	bnz	u22291
 12612  0002C4  516A               	movf	(_loRa+101)& (0+255),w,b
 12613  0002C6  18DE               	xorwf	postinc2,w,c
 12614  0002C8  A4D8               	btfss	status,2,c
 12615  0002CA                     u22291:
 12616  0002CA  D195               	goto	l20404
 12617                           
 12618                           ; BSR set to: 2
 12619  0002CC  A509               	btfss	(_loRa+4)& (0+255),2,b
 12620  0002CE  D193               	goto	l20404
 12621                           
 12622                           ; BSR set to: 2
 12623                           ;lorawan.c: 1200: {;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 12624  0002D0  C0F2  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 12625  0002D4  C0F3  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 12626  0002D8  EC6F  F043         	call	_CheckMcastFlags	;wreg free
 12627  0002DC  0900               	iorlw	0
 12628  0002DE  A4D8               	btfss	status,2,c
 12629  0002E0  D008               	goto	l20300
 12630  0002E2                     u22310:
 12631  0002E2                     l20294:
 12632                           
 12633                           ;lorawan.c: 1203: {;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12634  0002E2  0102               	movlb	2	; () banked
 12635  0002E4  5107               	movf	(_loRa+2)& (0+255),w,b
 12636  0002E6  0BF0               	andlw	-16
 12637  0002E8  0909               	iorlw	9
 12638  0002EA  6F07               	movwf	(_loRa+2)& (0+255),b
 12639                           
 12640                           ; BSR set to: 2
 12641                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 12642  0002EC  ECAC  F043         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12643  0002F0  0012               	return	
 12644  0002F2                     l20300:
 12645                           
 12646                           ;lorawan.c: 1207: };lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, buff
      +                          erLength - sizeof (computedMic), 0x49, 1);
 12647  0002F2  0100               	movlb	0	; () banked
 12648  0002F4  EE20 F006          	lfsr	2,6
 12649  0002F8  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12650  0002FA  26D9               	addwf	fsr2l,f,c
 12651  0002FC  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12652  0002FE  22DA               	addwfc	fsr2h,f,c
 12653  000300  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 12654  000304  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 12655  000308  C0DB  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 12656  00030C  C0DC  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 12657  000310  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 12658  000312  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 12659  000314  0101               	movlb	1	; () banked
 12660  000316  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12661  000318  0FFC               	addlw	252
 12662  00031A  0100               	movlb	0	; () banked
 12663  00031C  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 12664  00031E  0E49               	movlw	73
 12665  000320  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 12666  000322  0E01               	movlw	1
 12667  000324  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 12668  000326  0E01               	movlw	1
 12669  000328  EC84  F03A         	call	_AssembleEncryptionBlock
 12670                           
 12671                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 12672  00032C  0EC7               	movlw	low _radioBuffer
 12673  00032E  0100               	movlb	0	; () banked
 12674  000330  6F60               	movwf	memcpy@d1& (0+255),b
 12675  000332  0E07               	movlw	high _radioBuffer
 12676  000334  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12677  000336  0E5F               	movlw	low _aesBuffer
 12678  000338  6F62               	movwf	memcpy@s1& (0+255),b
 12679  00033A  0E01               	movlw	high _aesBuffer
 12680  00033C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12681  00033E  0E00               	movlw	0
 12682  000340  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12683  000342  0E10               	movlw	16
 12684  000344  6F64               	movwf	memcpy@n& (0+255),b
 12685  000346  ECC3  F047         	call	_memcpy	;wreg free
 12686                           
 12687                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 12688  00034A  0ED7               	movlw	low (_radioBuffer+16)
 12689  00034C  0100               	movlb	0	; () banked
 12690  00034E  6F60               	movwf	memcpy@d1& (0+255),b
 12691  000350  0E07               	movlw	high (_radioBuffer+16)
 12692  000352  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12693  000354  C1DA  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 12694  000358  C1DB  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 12695  00035C  0EFC               	movlw	252
 12696  00035E  0101               	movlb	1	; () banked
 12697  000360  25DC               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12698  000362  0100               	movlb	0	; () banked
 12699  000364  6F64               	movwf	memcpy@n& (0+255),b
 12700  000366  6B65               	clrf	(memcpy@n+1)& (0+255),b
 12701  000368  0EFF               	movlw	255
 12702  00036A  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 12703  00036C  ECC3  F047         	call	_memcpy	;wreg free
 12704                           
 12705                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 12706  000370  0E6B               	movlw	low (_loRa+102)
 12707  000372  0100               	movlb	0	; () banked
 12708  000374  6FBA               	movwf	AESCmac@key& (0+255),b
 12709  000376  0E02               	movlw	high (_loRa+102)
 12710  000378  6FBB               	movwf	(AESCmac@key+1)& (0+255),b
 12711  00037A  0E5F               	movlw	low _aesBuffer
 12712  00037C  6FBC               	movwf	AESCmac@output& (0+255),b
 12713  00037E  0E01               	movlw	high _aesBuffer
 12714  000380  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 12715  000382  0EC7               	movlw	low _radioBuffer
 12716  000384  6FBE               	movwf	AESCmac@input& (0+255),b
 12717  000386  0E07               	movlw	high _radioBuffer
 12718  000388  6FBF               	movwf	(AESCmac@input+1)& (0+255),b
 12719  00038A  0101               	movlb	1	; () banked
 12720  00038C  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12721  00038E  0F0C               	addlw	12
 12722  000390  0100               	movlb	0	; () banked
 12723  000392  6FC0               	movwf	AESCmac@size& (0+255),b
 12724  000394  ECAD  F00D         	call	_AESCmac	;wreg free
 12725                           
 12726                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 12727  000398  0EEB               	movlw	low LORAWAN_RxDone@computedMic
 12728  00039A  0100               	movlb	0	; () banked
 12729  00039C  6F60               	movwf	memcpy@d1& (0+255),b
 12730  00039E  0E00               	movlw	high LORAWAN_RxDone@computedMic
 12731  0003A0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12732  0003A2  0E5F               	movlw	low _aesBuffer
 12733  0003A4  6F62               	movwf	memcpy@s1& (0+255),b
 12734  0003A6  0E01               	movlw	high _aesBuffer
 12735  0003A8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12736  0003AA  0E00               	movlw	0
 12737  0003AC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12738  0003AE  0E04               	movlw	4
 12739  0003B0  6F64               	movwf	memcpy@n& (0+255),b
 12740  0003B2  ECC3  F047         	call	_memcpy	;wreg free
 12741                           
 12742                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 12743  0003B6  C1DA  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12744  0003BA  C1DB  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12745  0003BE  C1DC  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12746  0003C2  EC77  F04A         	call	_ExtractMic	;wreg free
 12747  0003C6  C06B  F0E3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12748  0003CA  C06C  F0E4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12749  0003CE  C06D  F0E5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12750  0003D2  C06E  F0E6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12751                           
 12752                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 12753  0003D6  0100               	movlb	0	; () banked
 12754  0003D8  51E3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12755  0003DA  19EB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12756  0003DC  E182               	bnz	l20294
 12757  0003DE  51E4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12758  0003E0  19EC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12759  0003E2  E108               	bnz	u22320
 12760  0003E4  51E5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12761  0003E6  19ED               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12762  0003E8  E105               	bnz	u22320
 12763  0003EA  51E6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12764  0003EC  19EE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12765  0003EE  A4D8               	btfss	status,2,c
 12766  0003F0  D778               	goto	u22310
 12767  0003F2  D001               	goto	l20316
 12768  0003F4                     u22320:
 12769  0003F4  D776               	goto	u22310
 12770  0003F6                     l20316:
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;lorawan.c: 1222: };lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members
      +                          .valueLow)
 12774  0003F6  EE20 F006          	lfsr	2,6
 12775  0003FA  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12776  0003FC  26D9               	addwf	fsr2l,f,c
 12777  0003FE  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12778  000400  22DA               	addwfc	fsr2h,f,c
 12779  000402  0102               	movlb	2	; () banked
 12780  000404  5113               	movf	(_loRa+14)& (0+255),w,b
 12781  000406  5CDE               	subwf	postinc2,w,c
 12782  000408  5114               	movf	(_loRa+15)& (0+255),w,b
 12783  00040A  58DE               	subwfb	postinc2,w,c
 12784  00040C  A0D8               	btfss	status,0,c
 12785  00040E  D03B               	goto	l20334
 12786                           
 12787                           ; BSR set to: 2
 12788                           ;lorawan.c: 1225: {;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.member
      +                          s.valueLow) > loRa.protocolParameters.maxMultiFcntGap )
 12789  000410  0100               	movlb	0	; () banked
 12790  000412  EE20 F006          	lfsr	2,6
 12791  000416  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12792  000418  26D9               	addwf	fsr2l,f,c
 12793  00041A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12794  00041C  22DA               	addwfc	fsr2h,f,c
 12795  00041E  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 12796  000422  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 12797  000426  0102               	movlb	2	; () banked
 12798  000428  5113               	movf	(_loRa+14)& (0+255),w,b
 12799  00042A  0100               	movlb	0	; () banked
 12800  00042C  5FDB               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 12801  00042E  0102               	movlb	2	; () banked
 12802  000430  5114               	movf	(_loRa+15)& (0+255),w,b
 12803  000432  0100               	movlb	0	; () banked
 12804  000434  5BDC               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 12805  000436  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12806  000438  0102               	movlb	2	; () banked
 12807  00043A  5DA3               	subwf	(_loRa+158)& (0+255),w,b
 12808  00043C  0100               	movlb	0	; () banked
 12809  00043E  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12810  000440  0102               	movlb	2	; () banked
 12811  000442  59A4               	subwfb	(_loRa+159)& (0+255),w,b
 12812  000444  B0D8               	btfsc	status,0,c
 12813  000446  D013               	goto	l20332
 12814                           
 12815                           ; BSR set to: 2
 12816                           ;lorawan.c: 1227: {;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 12817  000448  0101               	movlb	1	; () banked
 12818  00044A  510E               	movf	_rxPayload& (0+255),w,b
 12819  00044C  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12820  00044E  B4D8               	btfsc	status,2,c
 12821  000450  D748               	goto	u22310
 12822  000452                     u22350:
 12823                           
 12824                           ; BSR set to: 1
 12825                           ;lorawan.c: 1229: {;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED
      +                          );
 12826  000452  0E00               	movlw	0
 12827  000454  0100               	movlb	0	; () banked
 12828  000456  6F60               	movwf	RxData@pData& (0+255),b
 12829  000458  0E00               	movlw	0
 12830  00045A  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12831  00045C  0E00               	movlw	0
 12832  00045E  6F62               	movwf	RxData@dataLength& (0+255),b
 12833  000460  0E05               	movlw	5
 12834  000462  6F63               	movwf	RxData@status& (0+255),b
 12835  000464  D801               	call	u22368
 12836  000466  D73D               	goto	u22310
 12837  000468                     u22368:
 12838  000468  0005               	push	
 12839  00046A  6EFA               	movwf	pclath,c
 12840  00046C  D0BC               	goto	L16
 12841  00046E                     l20332:
 12842                           
 12843                           ; BSR set to: 2
 12844                           ;lorawan.c: 1237: else;lorawan.c: 1238: {;lorawan.c: 1239: loRa.fMcastCntDown.members.va
      +                          lueLow = hdr->members.fCnt;
 12845  00046E  0100               	movlb	0	; () banked
 12846  000470  EE20 F006          	lfsr	2,6
 12847  000474  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12848  000476  26D9               	addwf	fsr2l,f,c
 12849  000478  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12850  00047A  22DA               	addwfc	fsr2h,f,c
 12851  00047C  CFDE F213          	movff	postinc2,_loRa+14
 12852  000480  CFDD F214          	movff	postdec2,_loRa+15
 12853  000484  D01E               	goto	l20352
 12854  000486                     l20334:
 12855                           
 12856                           ; BSR set to: 2
 12857                           ;lorawan.c: 1242: else;lorawan.c: 1243: {;lorawan.c: 1244: if ( (0 == hdr->members.fCnt)
      +                           && (0xFFFF == loRa.fMcastCntDown.members.valueLow) )
 12858  000486  0100               	movlb	0	; () banked
 12859  000488  EE20 F006          	lfsr	2,6
 12860  00048C  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12861  00048E  26D9               	addwf	fsr2l,f,c
 12862  000490  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12863  000492  22DA               	addwfc	fsr2h,f,c
 12864  000494  50DE               	movf	postinc2,w,c
 12865  000496  10DE               	iorwf	postinc2,w,c
 12866  000498  A4D8               	btfss	status,2,c
 12867  00049A  D00D               	goto	l20342
 12868                           
 12869                           ; BSR set to: 0
 12870  00049C  0102               	movlb	2	; () banked
 12871  00049E  2913               	incf	(_loRa+14)& (0+255),w,b
 12872  0004A0  E10A               	bnz	l20342
 12873  0004A2  2914               	incf	(_loRa+15)& (0+255),w,b
 12874  0004A4  A4D8               	btfss	status,2,c
 12875  0004A6  D007               	goto	l20342
 12876                           
 12877                           ; BSR set to: 2
 12878                           ;lorawan.c: 1245: {;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 12879  0004A8  0E00               	movlw	0
 12880  0004AA  6F14               	movwf	(_loRa+15)& (0+255),b
 12881  0004AC  0E00               	movlw	0
 12882  0004AE  6F13               	movwf	(_loRa+14)& (0+255),b
 12883                           
 12884                           ; BSR set to: 2
 12885                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 12886  0004B0  4B15               	infsnz	(_loRa+16)& (0+255),f,b
 12887  0004B2  2B16               	incf	(_loRa+17)& (0+255),f,b
 12888                           
 12889                           ;lorawan.c: 1248: }
 12890  0004B4  D006               	goto	l20352
 12891  0004B6                     l20342:
 12892                           
 12893                           ;lorawan.c: 1249: else;lorawan.c: 1250: {;lorawan.c: 1251: if (rxPayload.RxAppData != (0
      +                          ))
 12894  0004B6  0101               	movlb	1	; () banked
 12895  0004B8  510E               	movf	_rxPayload& (0+255),w,b
 12896  0004BA  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12897  0004BC  A4D8               	btfss	status,2,c
 12898  0004BE  D7C9               	goto	u22350
 12899  0004C0  D710               	goto	u22310
 12900  0004C2                     l20352:
 12901                           
 12902                           ;lorawan.c: 1259: };lorawan.c: 1260: };lorawan.c: 1262: if (loRa.fMcastCntDown.value == 
      +                          (4294967295UL))
 12903  0004C2  0102               	movlb	2	; () banked
 12904  0004C4  2913               	incf	(_loRa+14)& (0+255),w,b
 12905  0004C6  E107               	bnz	l20364
 12906  0004C8  2914               	incf	(_loRa+15)& (0+255),w,b
 12907  0004CA  E105               	bnz	l20364
 12908  0004CC  2915               	incf	(_loRa+16)& (0+255),w,b
 12909  0004CE  E103               	bnz	l20364
 12910  0004D0  2916               	incf	(_loRa+17)& (0+255),w,b
 12911  0004D2  B4D8               	btfsc	status,2,c
 12912  0004D4  D7F0               	goto	l20342
 12913  0004D6                     l20364:
 12914                           
 12915                           ; BSR set to: 2
 12916                           ;lorawan.c: 1272: };lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 12917  0004D6  5107               	movf	(_loRa+2)& (0+255),w,b
 12918  0004D8  0B0F               	andlw	15
 12919  0004DA  0A08               	xorlw	8
 12920  0004DC  A4D8               	btfss	status,2,c
 12921  0004DE  D008               	goto	l20368
 12922                           
 12923                           ; BSR set to: 2
 12924                           ;lorawan.c: 1275: {;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 12925  0004E0  51E9               	movf	(_loRa+228)& (0+255),w,b
 12926  0004E2  EC7B  F051         	call	_SwTimerStop
 12927                           
 12928                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 12929  0004E6  0102               	movlb	2	; () banked
 12930  0004E8  51EA               	movf	(_loRa+229)& (0+255),w,b
 12931  0004EA  EC7B  F051         	call	_SwTimerStop
 12932                           
 12933                           ;lorawan.c: 1278: }
 12934  0004EE  D008               	goto	l20372
 12935  0004F0                     l20368:
 12936                           
 12937                           ; BSR set to: 2
 12938                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 12939  0004F0  5107               	movf	(_loRa+2)& (0+255),w,b
 12940  0004F2  0B0F               	andlw	15
 12941  0004F4  0A03               	xorlw	3
 12942  0004F6  A4D8               	btfss	status,2,c
 12943  0004F8  D003               	goto	l20372
 12944                           
 12945                           ; BSR set to: 2
 12946                           ;lorawan.c: 1280: {;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 12947  0004FA  51EA               	movf	(_loRa+229)& (0+255),w,b
 12948  0004FC  EC7B  F051         	call	_SwTimerStop
 12949  000500                     l20372:
 12950                           
 12951                           ;lorawan.c: 1282: };lorawan.c: 1284: buffer = buffer + 8;
 12952  000500  0E08               	movlw	8
 12953  000502  0101               	movlb	1	; () banked
 12954  000504  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12955  000506  6FDA               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 12956  000508  0E00               	movlw	0
 12957  00050A  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12958  00050C  6FDB               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 12959                           
 12960                           ; BSR set to: 1
 12961                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 12962  00050E  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12963  000510  0100               	movlb	0	; () banked
 12964  000512  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 12965  000514  6BDC               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12966  000516  EE20 F005          	lfsr	2,5
 12967  00051A  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12968  00051C  26D9               	addwf	fsr2l,f,c
 12969  00051E  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12970  000520  22DA               	addwfc	fsr2h,f,c
 12971  000522  50DF               	movf	223,w,c
 12972  000524  0B0F               	andlw	15
 12973  000526  6FDD               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12974  000528  6BDE               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12975  00052A  0E0C               	movlw	12
 12976  00052C  27DD               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12977  00052E  0E00               	movlw	0
 12978  000530  23DE               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12979  000532  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12980  000534  19DD               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12981  000536  E104               	bnz	u22440
 12982  000538  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12983  00053A  19DE               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12984  00053C  B4D8               	btfsc	status,2,c
 12985  00053E  D037               	goto	l20388
 12986  000540                     u22440:
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;lorawan.c: 1287: {;lorawan.c: 1288: fPort = *(buffer++);
 12990  000540  C1DA  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12991  000544  C1DB  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12992  000548  50DF               	movf	indf2,w,c
 12993  00054A  6FE0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 12994                           
 12995                           ; BSR set to: 0
 12996  00054C  0101               	movlb	1	; () banked
 12997  00054E  4BDA               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 12998  000550  2BDB               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 12999                           
 13000                           ; BSR set to: 1
 13001                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 13002  000552  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13003  000554  0FF4               	addlw	244
 13004  000556  0100               	movlb	0	; () banked
 13005  000558  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 13009  00055A  0E19               	movlw	25
 13010  00055C  6FE7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 13014  00055E  C1DA  F092         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13015  000562  C1DB  F093         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13016  000566  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13017  000568  6F94               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13018  00056A  0E01               	movlw	1
 13019  00056C  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 13020  00056E  C213  F096         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 13021  000572  C214  F097         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 13022  000576  C215  F098         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 13023  00057A  C216  F099         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 13024  00057E  0E7B               	movlw	low (_loRa+118)
 13025  000580  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 13026  000582  0E02               	movlw	high (_loRa+118)
 13027  000584  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13028  000586  C0E7  F09C         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13029  00058A  0EC7               	movlw	low _radioBuffer
 13030  00058C  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13031  00058E  0E07               	movlw	high _radioBuffer
 13032  000590  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13033  000592  0E01               	movlw	1
 13034  000594  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13035  000596  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 13036                           
 13037                           ;lorawan.c: 1294: packet = buffer - 1;
 13038  00059A  0EFF               	movlw	255
 13039  00059C  0101               	movlb	1	; () banked
 13040  00059E  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13041  0005A0  0100               	movlb	0	; () banked
 13042  0005A2  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13043  0005A4  0EFF               	movlw	255
 13044  0005A6  0101               	movlb	1	; () banked
 13045  0005A8  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13046  0005AA  0100               	movlb	0	; () banked
 13047  0005AC  D005               	goto	L14
 13048  0005AE                     l20388:
 13049                           
 13050                           ; BSR set to: 0
 13051                           ;lorawan.c: 1296: else;lorawan.c: 1297: {;lorawan.c: 1298: frmPayloadLength = 0;
 13052  0005AE  0E00               	movlw	0
 13053  0005B0  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;lorawan.c: 1299: packet = (0);
 13057  0005B2  0E00               	movlw	0
 13058  0005B4  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13059  0005B6  0E00               	movlw	0
 13060  0005B8                     L14:
 13061  0005B8  6FEA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 13062                           
 13063                           ; BSR set to: 0
 13064                           ;lorawan.c: 1300: };lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 13065  0005BA  0102               	movlb	2	; () banked
 13066  0005BC  8308               	bsf	(_loRa+3)& (0+255),1,b
 13067                           
 13068                           ; BSR set to: 2
 13069                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 13070  0005BE  0EF0               	movlw	-16
 13071  0005C0  1707               	andwf	(_loRa+2)& (0+255),f,b
 13072                           
 13073                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 13074  0005C2  0101               	movlb	1	; () banked
 13075  0005C4  510E               	movf	_rxPayload& (0+255),w,b
 13076  0005C6  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13077  0005C8  B4D8               	btfsc	status,2,c
 13078  0005CA  D68B               	goto	u22310
 13079                           
 13080                           ; BSR set to: 1
 13081                           ;lorawan.c: 1306: {;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_
      +                          OK);
 13082  0005CC  C0E9  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 13083  0005D0  C0EA  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 13084  0005D4  C0F1  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 13085  0005D8  0E01               	movlw	1
 13086  0005DA  0100               	movlb	0	; () banked
 13087  0005DC  6F63               	movwf	RxData@status& (0+255),b
 13088  0005DE  D801               	call	u22468
 13089  0005E0  D680               	goto	u22310
 13090  0005E2                     u22468:
 13091  0005E2  0005               	push	
 13092  0005E4  6EFA               	movwf	pclath,c
 13093  0005E6                     L16:
 13094  0005E6  0101               	movlb	1	; () banked
 13095  0005E8  510E               	movf	_rxPayload& (0+255),w,b
 13096  0005EA  6EFD               	movwf	tosl,c
 13097  0005EC  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13098  0005EE  6EFE               	movwf	tosh,c
 13099  0005F0  6AFF               	clrf	tosu,c
 13100  0005F2  50FA               	movf	pclath,w,c
 13101  0005F4  0012               	return		;indir
 13102  0005F6                     l20404:
 13103                           
 13104                           ; BSR set to: 2
 13105                           ;lorawan.c: 1313: };lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationPa
      +                          rameters.deviceAddress.value)
 13106  0005F6  0100               	movlb	0	; () banked
 13107  0005F8  EE20 F001          	lfsr	2,1
 13108  0005FC  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13109  0005FE  26D9               	addwf	fsr2l,f,c
 13110  000600  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13111  000602  22DA               	addwfc	fsr2h,f,c
 13112  000604  0102               	movlb	2	; () banked
 13113  000606  5123               	movf	(_loRa+30)& (0+255),w,b
 13114  000608  18DE               	xorwf	postinc2,w,c
 13115  00060A  E10A               	bnz	u22470
 13116  00060C  5124               	movf	(_loRa+31)& (0+255),w,b
 13117  00060E  18DE               	xorwf	postinc2,w,c
 13118  000610  E107               	bnz	u22470
 13119  000612  5125               	movf	(_loRa+32)& (0+255),w,b
 13120  000614  18DE               	xorwf	postinc2,w,c
 13121  000616  E104               	bnz	u22470
 13122  000618  5126               	movf	(_loRa+33)& (0+255),w,b
 13123  00061A  18DE               	xorwf	postinc2,w,c
 13124  00061C  B4D8               	btfsc	status,2,c
 13125  00061E  D008               	goto	l20416
 13126  000620                     u22470:
 13127                           
 13128                           ; BSR set to: 2
 13129                           ;lorawan.c: 1317: {;lorawan.c: 1318: SetReceptionNotOkState();
 13130  000620  EC32  F043         	call	_SetReceptionNotOkState	;wreg free
 13131  000624                     l20408:
 13132                           
 13133                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 13134  000624  0E02               	movlw	2
 13135  000626  0102               	movlb	2	; () banked
 13136  000628                     L17:
 13137  000628  1917               	xorwf	(_loRa+18)& (0+255),w,b
 13138  00062A  A4D8               	btfss	status,2,c
 13139  00062C  0012               	return	
 13140  00062E  D659               	goto	u22310
 13141  000630                     l20416:
 13142                           
 13143                           ; BSR set to: 2
 13144                           ;lorawan.c: 1325: };lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, buff
      +                          erLength - sizeof (computedMic), 0x49, 0);
 13145  000630  0100               	movlb	0	; () banked
 13146  000632  EE20 F006          	lfsr	2,6
 13147  000636  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13148  000638  26D9               	addwf	fsr2l,f,c
 13149  00063A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13150  00063C  22DA               	addwfc	fsr2h,f,c
 13151  00063E  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 13152  000642  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 13153  000646  C0DB  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 13154  00064A  C0DC  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 13155  00064E  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 13156  000650  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 13157  000652  0101               	movlb	1	; () banked
 13158  000654  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13159  000656  0FFC               	addlw	252
 13160  000658  0100               	movlb	0	; () banked
 13161  00065A  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 13162  00065C  0E49               	movlw	73
 13163  00065E  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 13164  000660  0E00               	movlw	0
 13165  000662  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 13166  000664  0E01               	movlw	1
 13167  000666  EC84  F03A         	call	_AssembleEncryptionBlock
 13168                           
 13169                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 13170  00066A  0EC7               	movlw	low _radioBuffer
 13171  00066C  0100               	movlb	0	; () banked
 13172  00066E  6F60               	movwf	memcpy@d1& (0+255),b
 13173  000670  0E07               	movlw	high _radioBuffer
 13174  000672  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13175  000674  0E5F               	movlw	low _aesBuffer
 13176  000676  6F62               	movwf	memcpy@s1& (0+255),b
 13177  000678  0E01               	movlw	high _aesBuffer
 13178  00067A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13179  00067C  0E00               	movlw	0
 13180  00067E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13181  000680  0E10               	movlw	16
 13182  000682  6F64               	movwf	memcpy@n& (0+255),b
 13183  000684  ECC3  F047         	call	_memcpy	;wreg free
 13184                           
 13185                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 13186  000688  0ED7               	movlw	low (_radioBuffer+16)
 13187  00068A  0100               	movlb	0	; () banked
 13188  00068C  6F60               	movwf	memcpy@d1& (0+255),b
 13189  00068E  0E07               	movlw	high (_radioBuffer+16)
 13190  000690  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13191  000692  C1DA  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 13192  000696  C1DB  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 13193  00069A  0EFC               	movlw	252
 13194  00069C  0101               	movlb	1	; () banked
 13195  00069E  25DC               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13196  0006A0  0100               	movlb	0	; () banked
 13197  0006A2  6F64               	movwf	memcpy@n& (0+255),b
 13198  0006A4  6B65               	clrf	(memcpy@n+1)& (0+255),b
 13199  0006A6  0EFF               	movlw	255
 13200  0006A8  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 13201  0006AA  ECC3  F047         	call	_memcpy	;wreg free
 13202                           
 13203                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 13204  0006AE  0E27               	movlw	low (_loRa+34)
 13205  0006B0  0100               	movlb	0	; () banked
 13206  0006B2  6FBA               	movwf	AESCmac@key& (0+255),b
 13207  0006B4  0E02               	movlw	high (_loRa+34)
 13208  0006B6  6FBB               	movwf	(AESCmac@key+1)& (0+255),b
 13209  0006B8  0E5F               	movlw	low _aesBuffer
 13210  0006BA  6FBC               	movwf	AESCmac@output& (0+255),b
 13211  0006BC  0E01               	movlw	high _aesBuffer
 13212  0006BE  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 13213  0006C0  0EC7               	movlw	low _radioBuffer
 13214  0006C2  6FBE               	movwf	AESCmac@input& (0+255),b
 13215  0006C4  0E07               	movlw	high _radioBuffer
 13216  0006C6  6FBF               	movwf	(AESCmac@input+1)& (0+255),b
 13217  0006C8  0101               	movlb	1	; () banked
 13218  0006CA  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13219  0006CC  0F0C               	addlw	12
 13220  0006CE  0100               	movlb	0	; () banked
 13221  0006D0  6FC0               	movwf	AESCmac@size& (0+255),b
 13222  0006D2  ECAD  F00D         	call	_AESCmac	;wreg free
 13223                           
 13224                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 13225  0006D6  0EEB               	movlw	low LORAWAN_RxDone@computedMic
 13226  0006D8  0100               	movlb	0	; () banked
 13227  0006DA  6F60               	movwf	memcpy@d1& (0+255),b
 13228  0006DC  0E00               	movlw	high LORAWAN_RxDone@computedMic
 13229  0006DE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13230  0006E0  0E5F               	movlw	low _aesBuffer
 13231  0006E2  6F62               	movwf	memcpy@s1& (0+255),b
 13232  0006E4  0E01               	movlw	high _aesBuffer
 13233  0006E6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13234  0006E8  0E00               	movlw	0
 13235  0006EA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13236  0006EC  0E04               	movlw	4
 13237  0006EE  6F64               	movwf	memcpy@n& (0+255),b
 13238  0006F0  ECC3  F047         	call	_memcpy	;wreg free
 13239                           
 13240                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 13241  0006F4  C1DA  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 13242  0006F8  C1DB  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 13243  0006FC  C1DC  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 13244  000700  EC77  F04A         	call	_ExtractMic	;wreg free
 13245  000704  C06B  F0E3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 13246  000708  C06C  F0E4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 13247  00070C  C06D  F0E5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 13248  000710  C06E  F0E6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 13249                           
 13250                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 13251  000714  0100               	movlb	0	; () banked
 13252  000716  51E3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 13253  000718  19EB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 13254  00071A  E10A               	bnz	u22490
 13255  00071C  51E4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 13256  00071E  19EC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 13257  000720  E107               	bnz	u22490
 13258  000722  51E5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 13259  000724  19ED               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 13260  000726  E104               	bnz	u22490
 13261  000728  51E6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 13262  00072A  19EE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 13263  00072C  B4D8               	btfsc	status,2,c
 13264  00072E  D003               	goto	l20436
 13265  000730                     u22490:
 13266                           
 13267                           ; BSR set to: 0
 13268                           ;lorawan.c: 1337: {;lorawan.c: 1338: SetReceptionNotOkState();
 13269  000730  EC32  F043         	call	_SetReceptionNotOkState	;wreg free
 13270  000734  D777               	goto	l20408
 13271  000736                     l20436:
 13272                           
 13273                           ; BSR set to: 0
 13274                           ;lorawan.c: 1345: };lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valu
      +                          eLow)
 13275  000736  EE20 F006          	lfsr	2,6
 13276  00073A  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13277  00073C  26D9               	addwf	fsr2l,f,c
 13278  00073E  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13279  000740  22DA               	addwfc	fsr2h,f,c
 13280  000742  0102               	movlb	2	; () banked
 13281  000744  510F               	movf	(_loRa+10)& (0+255),w,b
 13282  000746  5CDE               	subwf	postinc2,w,c
 13283  000748  5110               	movf	(_loRa+11)& (0+255),w,b
 13284  00074A  58DE               	subwfb	postinc2,w,c
 13285  00074C  A0D8               	btfss	status,0,c
 13286  00074E  D04A               	goto	l20466
 13287                           
 13288                           ; BSR set to: 2
 13289                           ;lorawan.c: 1349: {;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valu
      +                          eLow) > loRa.protocolParameters.maxFcntGap)
 13290  000750  0100               	movlb	0	; () banked
 13291  000752  EE20 F006          	lfsr	2,6
 13292  000756  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13293  000758  26D9               	addwf	fsr2l,f,c
 13294  00075A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13295  00075C  22DA               	addwfc	fsr2h,f,c
 13296  00075E  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 13297  000762  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 13298  000766  0102               	movlb	2	; () banked
 13299  000768  510F               	movf	(_loRa+10)& (0+255),w,b
 13300  00076A  0100               	movlb	0	; () banked
 13301  00076C  5FDB               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 13302  00076E  0102               	movlb	2	; () banked
 13303  000770  5110               	movf	(_loRa+11)& (0+255),w,b
 13304  000772  0100               	movlb	0	; () banked
 13305  000774  5BDC               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 13306  000776  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13307  000778  0102               	movlb	2	; () banked
 13308  00077A  5DA1               	subwf	(_loRa+156)& (0+255),w,b
 13309  00077C  0100               	movlb	0	; () banked
 13310  00077E  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13311  000780  0102               	movlb	2	; () banked
 13312  000782  59A2               	subwfb	(_loRa+157)& (0+255),w,b
 13313  000784  B0D8               	btfsc	status,0,c
 13314  000786  D022               	goto	l20464
 13315                           
 13316                           ; BSR set to: 2
 13317                           ;lorawan.c: 1351: {;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 13318  000788  9105               	bcf	_loRa& (0+255),0,b
 13319                           
 13320                           ; BSR set to: 2
 13321                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 13322  00078A  0EF0               	movlw	-16
 13323  00078C  1707               	andwf	(_loRa+2)& (0+255),f,b
 13324                           
 13325                           ; BSR set to: 2
 13326                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 13327  00078E  0101               	movlb	1	; () banked
 13328  000790  510E               	movf	_rxPayload& (0+255),w,b
 13329  000792  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13330  000794  B4D8               	btfsc	status,2,c
 13331  000796  D017               	goto	u22549
 13332                           
 13333                           ; BSR set to: 1
 13334                           ;lorawan.c: 1355: {;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 13335  000798  0102               	movlb	2	; () banked
 13336  00079A  9B05               	bcf	_loRa& (0+255),5,b
 13337                           
 13338                           ; BSR set to: 2
 13339                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13340  00079C  0E00               	movlw	0
 13341  00079E  0100               	movlb	0	; () banked
 13342  0007A0  6F60               	movwf	RxData@pData& (0+255),b
 13343  0007A2  0E00               	movlw	0
 13344  0007A4  6F61               	movwf	(RxData@pData+1)& (0+255),b
 13345  0007A6  0E00               	movlw	0
 13346  0007A8  6F62               	movwf	RxData@dataLength& (0+255),b
 13347  0007AA  0E00               	movlw	0
 13348  0007AC  6F63               	movwf	RxData@status& (0+255),b
 13349  0007AE  D801               	call	u22548
 13350  0007B0  D00A               	goto	u22549
 13351  0007B2                     u22548:
 13352  0007B2  0005               	push	
 13353  0007B4  6EFA               	movwf	pclath,c
 13354  0007B6  0101               	movlb	1	; () banked
 13355  0007B8  510E               	movf	_rxPayload& (0+255),w,b
 13356  0007BA  6EFD               	movwf	tosl,c
 13357  0007BC  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13358  0007BE  6EFE               	movwf	tosh,c
 13359  0007C0  6AFF               	clrf	tosu,c
 13360  0007C2  50FA               	movf	pclath,w,c
 13361  0007C4  0012               	return		;indir
 13362  0007C6                     u22549:
 13363                           
 13364                           ;lorawan.c: 1358: };lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 13365  0007C6  0102               	movlb	2	; () banked
 13366  0007C8  9308               	bcf	(_loRa+3)& (0+255),1,b
 13367  0007CA  D039               	goto	u22590
 13368  0007CC                     l20464:
 13369                           
 13370                           ; BSR set to: 2
 13371                           ;lorawan.c: 1370: else;lorawan.c: 1371: {;lorawan.c: 1372: loRa.fCntDown.members.valueLo
      +                          w = hdr->members.fCnt;
 13372  0007CC  0100               	movlb	0	; () banked
 13373  0007CE  EE20 F006          	lfsr	2,6
 13374  0007D2  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13375  0007D4  26D9               	addwf	fsr2l,f,c
 13376  0007D6  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13377  0007D8  22DA               	addwfc	fsr2h,f,c
 13378  0007DA  CFDE F20F          	movff	postinc2,_loRa+10
 13379  0007DE  CFDD F210          	movff	postdec2,_loRa+11
 13380  0007E2  D023               	goto	l20484
 13381  0007E4                     l20466:
 13382                           
 13383                           ; BSR set to: 2
 13384                           ;lorawan.c: 1375: else;lorawan.c: 1376: {;lorawan.c: 1377: if((hdr->members.fCnt == 0) &
      +                          & (loRa.fCntDown.members.valueLow == 0xFFFF))
 13385  0007E4  0100               	movlb	0	; () banked
 13386  0007E6  EE20 F006          	lfsr	2,6
 13387  0007EA  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13388  0007EC  26D9               	addwf	fsr2l,f,c
 13389  0007EE  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13390  0007F0  22DA               	addwfc	fsr2h,f,c
 13391  0007F2  50DE               	movf	postinc2,w,c
 13392  0007F4  10DE               	iorwf	postinc2,w,c
 13393  0007F6  A4D8               	btfss	status,2,c
 13394  0007F8  D015               	goto	l20474
 13395                           
 13396                           ; BSR set to: 0
 13397  0007FA  0102               	movlb	2	; () banked
 13398  0007FC  290F               	incf	(_loRa+10)& (0+255),w,b
 13399  0007FE  E112               	bnz	l20474
 13400  000800  2910               	incf	(_loRa+11)& (0+255),w,b
 13401  000802  A4D8               	btfss	status,2,c
 13402  000804  D00F               	goto	l20474
 13403                           
 13404                           ; BSR set to: 2
 13405                           ;lorawan.c: 1378: {;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 13406  000806  0100               	movlb	0	; () banked
 13407  000808  EE20 F006          	lfsr	2,6
 13408  00080C  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13409  00080E  26D9               	addwf	fsr2l,f,c
 13410  000810  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13411  000812  22DA               	addwfc	fsr2h,f,c
 13412  000814  CFDE F20F          	movff	postinc2,_loRa+10
 13413  000818  CFDD F210          	movff	postdec2,_loRa+11
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 13417  00081C  0102               	movlb	2	; () banked
 13418  00081E  4B11               	infsnz	(_loRa+12)& (0+255),f,b
 13419  000820  2B12               	incf	(_loRa+13)& (0+255),f,b
 13420                           
 13421                           ;lorawan.c: 1382: }
 13422  000822  D003               	goto	l20484
 13423  000824                     l20474:
 13424                           
 13425                           ;lorawan.c: 1383: else;lorawan.c: 1384: {;lorawan.c: 1385: SetReceptionNotOkState();
 13426  000824  EC32  F043         	call	_SetReceptionNotOkState	;wreg free
 13427  000828  D6FD               	goto	l20408
 13428  00082A                     l20484:
 13429                           
 13430                           ;lorawan.c: 1393: };lorawan.c: 1394: };lorawan.c: 1396: if (loRa.fCntDown.value == (4294
      +                          967295UL))
 13431  00082A  0102               	movlb	2	; () banked
 13432  00082C  290F               	incf	(_loRa+10)& (0+255),w,b
 13433  00082E  E10A               	bnz	l20496
 13434  000830  2910               	incf	(_loRa+11)& (0+255),w,b
 13435  000832  E108               	bnz	l20496
 13436  000834  2911               	incf	(_loRa+12)& (0+255),w,b
 13437  000836  E106               	bnz	l20496
 13438  000838  2912               	incf	(_loRa+13)& (0+255),w,b
 13439  00083A  A4D8               	btfss	status,2,c
 13440  00083C  D003               	goto	l20496
 13441  00083E                     u22590:
 13442                           
 13443                           ; BSR set to: 2
 13444                           ;lorawan.c: 1397: {;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 13445  00083E  8309               	bsf	(_loRa+4)& (0+255),1,b
 13446                           
 13447                           ; BSR set to: 2
 13448                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 13449  000840  0E02               	movlw	2
 13450  000842  D6F2               	goto	L17
 13451  000844                     l20496:
 13452                           
 13453                           ; BSR set to: 2
 13454                           ;lorawan.c: 1407: };lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 13455  000844  5107               	movf	(_loRa+2)& (0+255),w,b
 13456  000846  0B0F               	andlw	15
 13457  000848  0A03               	xorlw	3
 13458  00084A  A4D8               	btfss	status,2,c
 13459  00084C  D003               	goto	l20500
 13460                           
 13461                           ; BSR set to: 2
 13462                           ;lorawan.c: 1411: {;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 13463  00084E  51EA               	movf	(_loRa+229)& (0+255),w,b
 13464  000850  EC7B  F051         	call	_SwTimerStop
 13465  000854                     l20500:
 13466                           
 13467                           ;lorawan.c: 1413: };lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 13468  000854  0E01               	movlw	1
 13469  000856  0102               	movlb	2	; () banked
 13470  000858  6FDD               	movwf	(_loRa+216)& (0+255),b
 13471                           
 13472                           ; BSR set to: 2
 13473                           ;lorawan.c: 1417: CheckFlags (hdr);
 13474  00085A  C0F2  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 13475  00085E  C0F3  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 13476  000862  EC22  F048         	call	_CheckFlags	;wreg free
 13477                           
 13478                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 13479  000866  0100               	movlb	0	; () banked
 13480  000868  EE20 F005          	lfsr	2,5
 13481  00086C  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13482  00086E  26D9               	addwf	fsr2l,f,c
 13483  000870  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13484  000872  22DA               	addwfc	fsr2h,f,c
 13485  000874  50DF               	movf	223,w,c
 13486  000876  0B0F               	andlw	15
 13487  000878  0900               	iorlw	0
 13488  00087A  B4D8               	btfsc	status,2,c
 13489  00087C  D016               	goto	l20508
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;lorawan.c: 1420: {;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommand
      +                          s, hdr->members.fCtrl.fOptsLen);
 13493  00087E  0E08               	movlw	8
 13494  000880  25F2               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 13495  000882  6FA6               	movwf	MacExecuteCommands@buffer& (0+255),b
 13496  000884  0E00               	movlw	0
 13497  000886  21F3               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13498  000888  6FA7               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 13499  00088A  EE20 F005          	lfsr	2,5
 13500  00088E  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13501  000890  26D9               	addwf	fsr2l,f,c
 13502  000892  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13503  000894  22DA               	addwfc	fsr2h,f,c
 13504  000896  50DF               	movf	223,w,c
 13505  000898  0B0F               	andlw	15
 13506  00089A  6FA8               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 13507  00089C  EC9E  F021         	call	_MacExecuteCommands	;wreg free
 13508  0008A0  C0A6  F1DA         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 13509  0008A4  C0A7  F1DB         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 13510                           
 13511                           ;lorawan.c: 1422: }
 13512  0008A8  D007               	goto	l20510
 13513  0008AA                     l20508:
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;lorawan.c: 1423: else;lorawan.c: 1424: {;lorawan.c: 1425: buffer = buffer + 8;
 13517  0008AA  0E08               	movlw	8
 13518  0008AC  0101               	movlb	1	; () banked
 13519  0008AE  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13520  0008B0  6FDA               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 13521  0008B2  0E00               	movlw	0
 13522  0008B4  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13523  0008B6  6FDB               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 13524  0008B8                     l20510:
 13525                           
 13526                           ;lorawan.c: 1426: };lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOp
      +                          tsLen + 8) != bufferLength)
 13527  0008B8  0101               	movlb	1	; () banked
 13528  0008BA  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13529  0008BC  0100               	movlb	0	; () banked
 13530  0008BE  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13531  0008C0  6BDC               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13532  0008C2  EE20 F005          	lfsr	2,5
 13533  0008C6  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13534  0008C8  26D9               	addwf	fsr2l,f,c
 13535  0008CA  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13536  0008CC  22DA               	addwfc	fsr2h,f,c
 13537  0008CE  50DF               	movf	223,w,c
 13538  0008D0  0B0F               	andlw	15
 13539  0008D2  6FDD               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13540  0008D4  6BDE               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13541  0008D6  0E0C               	movlw	12
 13542  0008D8  27DD               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13543  0008DA  0E00               	movlw	0
 13544  0008DC  23DE               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13545  0008DE  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13546  0008E0  19DD               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13547  0008E2  E104               	bnz	u22630
 13548  0008E4  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13549  0008E6  19DE               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13550  0008E8  B4D8               	btfsc	status,2,c
 13551  0008EA  D096               	goto	l20532
 13552  0008EC                     u22630:
 13553                           
 13554                           ; BSR set to: 0
 13555                           ;lorawan.c: 1428: {;lorawan.c: 1429: fPort = *(buffer++);
 13556  0008EC  C1DA  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 13557  0008F0  C1DB  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 13558  0008F4  50DF               	movf	indf2,w,c
 13559  0008F6  6FE0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 13560                           
 13561                           ; BSR set to: 0
 13562  0008F8  0101               	movlb	1	; () banked
 13563  0008FA  4BDA               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 13564  0008FC  2BDB               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 13565                           
 13566                           ; BSR set to: 1
 13567                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 13568  0008FE  0100               	movlb	0	; () banked
 13569  000900  EE20 F005          	lfsr	2,5
 13570  000904  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13571  000906  26D9               	addwf	fsr2l,f,c
 13572  000908  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13573  00090A  22DA               	addwfc	fsr2h,f,c
 13574  00090C  50DF               	movf	223,w,c
 13575  00090E  0B0F               	andlw	15
 13576  000910  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13577  000912  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13578  000914  0101               	movlb	1	; () banked
 13579  000916  5DDC               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13580  000918  0FF4               	addlw	244
 13581  00091A  0100               	movlb	0	; () banked
 13582  00091C  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13583                           
 13584                           ; BSR set to: 0
 13585                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 13586  00091E  EE20 F005          	lfsr	2,5
 13587  000922  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13588  000924  26D9               	addwf	fsr2l,f,c
 13589  000926  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13590  000928  22DA               	addwfc	fsr2h,f,c
 13591  00092A  50DF               	movf	223,w,c
 13592  00092C  0B0F               	andlw	15
 13593  00092E  0F19               	addlw	25
 13594  000930  6FE7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;lorawan.c: 1434: if (fPort != 0)
 13598  000932  51E0               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 13599  000934  B4D8               	btfsc	status,2,c
 13600  000936  D028               	goto	l20526
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;lorawan.c: 1435: {;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1,
      +                           loRa.fCntDown.value, loRa.activationParameters.applicationSessionKey, bufferIndex, radi
      +                          oBuffer, 0);
 13604  000938  C1DA  F092         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13605  00093C  C1DB  F093         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13606  000940  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13607  000942  6F94               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13608  000944  0E01               	movlw	1
 13609  000946  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 13610  000948  C20F  F096         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13611  00094C  C210  F097         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13612  000950  C211  F098         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13613  000954  C212  F099         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13614  000958  0E37               	movlw	low (_loRa+50)
 13615  00095A  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 13616  00095C  0E02               	movlw	high (_loRa+50)
 13617  00095E  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13618  000960  C0E7  F09C         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13619  000964  0EC7               	movlw	low _radioBuffer
 13620  000966  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13621  000968  0E07               	movlw	high _radioBuffer
 13622  00096A  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13623  00096C  0E00               	movlw	0
 13624  00096E  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13625  000970  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 13626                           
 13627                           ;lorawan.c: 1437: packet = buffer - 1;
 13628  000974  0EFF               	movlw	255
 13629  000976  0101               	movlb	1	; () banked
 13630  000978  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13631  00097A  0100               	movlb	0	; () banked
 13632  00097C  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13633  00097E  0EFF               	movlw	255
 13634  000980  0101               	movlb	1	; () banked
 13635  000982  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13636  000984  0100               	movlb	0	; () banked
 13637  000986  D04E               	goto	L15
 13638  000988                     l20526:
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;lorawan.c: 1439: else;lorawan.c: 1440: {;lorawan.c: 1442: if(bufferLength > (13 + hdr->
      +                          members.fCtrl.fOptsLen))
 13642  000988  0101               	movlb	1	; () banked
 13643  00098A  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13644  00098C  0100               	movlb	0	; () banked
 13645  00098E  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13646  000990  6BDC               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13647  000992  EE20 F005          	lfsr	2,5
 13648  000996  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13649  000998  26D9               	addwf	fsr2l,f,c
 13650  00099A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13651  00099C  22DA               	addwfc	fsr2h,f,c
 13652  00099E  50DF               	movf	223,w,c
 13653  0009A0  0B0F               	andlw	15
 13654  0009A2  6FDD               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13655  0009A4  6BDE               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13656  0009A6  0E0D               	movlw	13
 13657  0009A8  27DD               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13658  0009AA  0E00               	movlw	0
 13659  0009AC  23DE               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13660  0009AE  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13661  0009B0  5DDD               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13662  0009B2  51DE               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13663  0009B4  0A80               	xorlw	128
 13664  0009B6  6FDF               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 13665  0009B8  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13666  0009BA  0A80               	xorlw	128
 13667  0009BC  59DF               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 13668  0009BE  B0D8               	btfsc	status,0,c
 13669  0009C0  D02B               	goto	l20532
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;lorawan.c: 1443: {;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1,
      +                           loRa.fCntDown.value, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuf
      +                          fer, 0);
 13673  0009C2  C1DA  F092         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13674  0009C6  C1DB  F093         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13675  0009CA  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13676  0009CC  6F94               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13677  0009CE  0E01               	movlw	1
 13678  0009D0  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 13679  0009D2  C20F  F096         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13680  0009D6  C210  F097         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13681  0009DA  C211  F098         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13682  0009DE  C212  F099         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13683  0009E2  0E27               	movlw	low (_loRa+34)
 13684  0009E4  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 13685  0009E6  0E02               	movlw	high (_loRa+34)
 13686  0009E8  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13687  0009EA  C0E7  F09C         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13688  0009EE  0EC7               	movlw	low _radioBuffer
 13689  0009F0  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13690  0009F2  0E07               	movlw	high _radioBuffer
 13691  0009F4  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13692  0009F6  0E00               	movlw	0
 13693  0009F8  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13694  0009FA  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 13695                           
 13696                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 13697  0009FE  C1DA  F0A6         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 13698  000A02  C1DB  F0A7         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 13699  000A06  0100               	movlb	0	; () banked
 13700  000A08  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13701  000A0A  6FA8               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 13702  000A0C  EC9E  F021         	call	_MacExecuteCommands	;wreg free
 13703  000A10  C0A6  F1DA         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 13704  000A14  C0A7  F1DB         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 13705  000A18                     l20532:
 13706                           
 13707                           ;lorawan.c: 1447: };lorawan.c: 1449: frmPayloadLength = 0;
 13708  000A18  0E00               	movlw	0
 13709  000A1A  0100               	movlb	0	; () banked
 13710  000A1C  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;lorawan.c: 1450: packet = (0);
 13714  000A1E  0E00               	movlw	0
 13715  000A20  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13716  000A22  0E00               	movlw	0
 13717  000A24                     L15:
 13718  000A24  6FEA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 13719                           
 13720                           ; BSR set to: 0
 13721                           ;lorawan.c: 1457: };lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 13722  000A26  0E01               	movlw	1
 13723  000A28  0102               	movlb	2	; () banked
 13724  000A2A  6FDD               	movwf	(_loRa+216)& (0+255),b
 13725                           
 13726                           ; BSR set to: 2
 13727                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 13728  000A2C  0E00               	movlw	0
 13729  000A2E  6FD6               	movwf	(_loRa+209)& (0+255),b
 13730  000A30  0E00               	movlw	0
 13731  000A32  6FD5               	movwf	(_loRa+208)& (0+255),b
 13732                           
 13733                           ; BSR set to: 2
 13734                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 13735  000A34  0E00               	movlw	0
 13736  000A36  6FF3               	movwf	(_loRa+238)& (0+255),b
 13737                           
 13738                           ; BSR set to: 2
 13739                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 13740  000A38  9905               	bcf	_loRa& (0+255),4,b
 13741                           
 13742                           ; BSR set to: 2
 13743                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 13744  000A3A  8308               	bsf	(_loRa+3)& (0+255),1,b
 13745                           
 13746                           ; BSR set to: 2
 13747                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 13748  000A3C  A105               	btfss	_loRa& (0+255),0,b
 13749  000A3E  D055               	goto	l20584
 13750                           
 13751                           ; BSR set to: 2
 13752                           ;lorawan.c: 1468: {;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 13753  000A40  0100               	movlb	0	; () banked
 13754  000A42  EE20 F005          	lfsr	2,5
 13755  000A46  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13756  000A48  26D9               	addwf	fsr2l,f,c
 13757  000A4A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13758  000A4C  22DA               	addwfc	fsr2h,f,c
 13759  000A4E  AADF               	btfss	indf2,5,c
 13760  000A50  D049               	goto	l20582
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;lorawan.c: 1470: {;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 13764  000A52  0102               	movlb	2	; () banked
 13765  000A54  9105               	bcf	_loRa& (0+255),0,b
 13766                           
 13767                           ; BSR set to: 2
 13768                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 13769  000A56  0EF0               	movlw	-16
 13770  000A58  1707               	andwf	(_loRa+2)& (0+255),f,b
 13771                           
 13772                           ; BSR set to: 2
 13773                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 13774  000A5A  0101               	movlb	1	; () banked
 13775  000A5C  510E               	movf	_rxPayload& (0+255),w,b
 13776  000A5E  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13777  000A60  B4D8               	btfsc	status,2,c
 13778  000A62  D017               	goto	u22699
 13779                           
 13780                           ; BSR set to: 1
 13781                           ;lorawan.c: 1474: {;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 13782  000A64  0102               	movlb	2	; () banked
 13783  000A66  9B05               	bcf	_loRa& (0+255),5,b
 13784                           
 13785                           ; BSR set to: 2
 13786                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13787  000A68  C0E9  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 13788  000A6C  C0EA  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 13789  000A70  C0F1  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 13790  000A74  0E01               	movlw	1
 13791  000A76  0100               	movlb	0	; () banked
 13792  000A78  6F63               	movwf	RxData@status& (0+255),b
 13793  000A7A  D801               	call	u22698
 13794  000A7C  D00A               	goto	u22699
 13795  000A7E                     u22698:
 13796  000A7E  0005               	push	
 13797  000A80  6EFA               	movwf	pclath,c
 13798  000A82  0101               	movlb	1	; () banked
 13799  000A84  510E               	movf	_rxPayload& (0+255),w,b
 13800  000A86  6EFD               	movwf	tosl,c
 13801  000A88  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13802  000A8A  6EFE               	movwf	tosh,c
 13803  000A8C  6AFF               	clrf	tosu,c
 13804  000A8E  50FA               	movf	pclath,w,c
 13805  000A90  0012               	return		;indir
 13806  000A92                     u22699:
 13807                           
 13808                           ;lorawan.c: 1477: };lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 13809  000A92  0102               	movlb	2	; () banked
 13810  000A94  9308               	bcf	(_loRa+3)& (0+255),1,b
 13811                           
 13812                           ; BSR set to: 2
 13813                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 13814  000A96  BB07               	btfsc	(_loRa+2)& (0+255),5,b
 13815                           
 13816                           ; BSR set to: 2
 13817  000A98  BB05               	btfsc	_loRa& (0+255),5,b
 13818  000A9A  D5C4               	goto	l20408
 13819                           
 13820                           ; BSR set to: 2
 13821  000A9C  B305               	btfsc	_loRa& (0+255),1,b
 13822  000A9E  D002               	goto	u22730
 13823                           
 13824                           ; BSR set to: 2
 13825  000AA0  A705               	btfss	_loRa& (0+255),3,b
 13826  000AA2  D5C0               	goto	l20408
 13827  000AA4                     u22730:
 13828                           
 13829                           ; BSR set to: 2
 13830                           ;lorawan.c: 1480: {;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &c
      +                          hannelIndex) == OK)
 13831  000AA4  0E01               	movlw	1
 13832  000AA6  0100               	movlb	0	; () banked
 13833  000AA8  6FA7               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13834  000AAA  0EE1               	movlw	low LORAWAN_RxDone@channelIndex
 13835  000AAC  6FA8               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13836  000AAE  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 13837  000AB0  6FA9               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13838  000AB2  0102               	movlb	2	; () banked
 13839  000AB4  51F2               	movf	(_loRa+237)& (0+255),w,b
 13840  000AB6  ECDB  F033         	call	_SearchAvailableChannel
 13841  000ABA  0900               	iorlw	0
 13842  000ABC  A4D8               	btfss	status,2,c
 13843  000ABE  D00F               	goto	l20580
 13844                           
 13845                           ;lorawan.c: 1482: {;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 13846  000AC0  0E00               	movlw	0
 13847  000AC2  0100               	movlb	0	; () banked
 13848  000AC4  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
 13849  000AC6  0E00               	movlw	0
 13850  000AC8  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
 13851  000ACA  0E00               	movlw	0
 13852  000ACC  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13853  000ACE  0E00               	movlw	0
 13854  000AD0  6FD7               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13855  000AD2  0E00               	movlw	0
 13856  000AD4  ECCF  F037         	call	_LORAWAN_Send
 13857  000AD8                     l20578:
 13858                           
 13859                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 13860  000AD8  0102               	movlb	2	; () banked
 13861  000ADA  9705               	bcf	_loRa& (0+255),3,b
 13862                           
 13863                           ;lorawan.c: 1485: }
 13864  000ADC  D5A3               	goto	l20408
 13865  000ADE                     l20580:
 13866                           
 13867                           ;lorawan.c: 1486: else;lorawan.c: 1487: {;lorawan.c: 1489: StartReTxTimer();
 13868  000ADE  EC94  F02A         	call	_StartReTxTimer	;wreg free
 13869  000AE2  D5A0               	goto	l20408
 13870  000AE4                     l20582:
 13871                           
 13872                           ; BSR set to: 0
 13873                           ;lorawan.c: 1494: else;lorawan.c: 1495: {;lorawan.c: 1496: UpdateRetransmissionAckTimeou
      +                          tState ();
 13874  000AE4  EC52  F045         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 13875  000AE8  D59D               	goto	l20408
 13876  000AEA                     l20584:
 13877                           
 13878                           ; BSR set to: 2
 13879                           ;lorawan.c: 1499: else;lorawan.c: 1500: {;lorawan.c: 1501: loRa.macStatus.macState = IDL
      +                          E;
 13880  000AEA  0EF0               	movlw	-16
 13881  000AEC  1707               	andwf	(_loRa+2)& (0+255),f,b
 13882                           
 13883                           ; BSR set to: 2
 13884                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 13885  000AEE  0101               	movlb	1	; () banked
 13886  000AF0  510E               	movf	_rxPayload& (0+255),w,b
 13887  000AF2  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13888  000AF4  B4D8               	btfsc	status,2,c
 13889  000AF6  D017               	goto	u22769
 13890                           
 13891                           ; BSR set to: 1
 13892                           ;lorawan.c: 1504: {;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 13893  000AF8  0102               	movlb	2	; () banked
 13894  000AFA  9B05               	bcf	_loRa& (0+255),5,b
 13895                           
 13896                           ; BSR set to: 2
 13897                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13898  000AFC  C0E9  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 13899  000B00  C0EA  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 13900  000B04  C0F1  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 13901  000B08  0E01               	movlw	1
 13902  000B0A  0100               	movlb	0	; () banked
 13903  000B0C  6F63               	movwf	RxData@status& (0+255),b
 13904  000B0E  D801               	call	u22768
 13905  000B10  D00A               	goto	u22769
 13906  000B12                     u22768:
 13907  000B12  0005               	push	
 13908  000B14  6EFA               	movwf	pclath,c
 13909  000B16  0101               	movlb	1	; () banked
 13910  000B18  510E               	movf	_rxPayload& (0+255),w,b
 13911  000B1A  6EFD               	movwf	tosl,c
 13912  000B1C  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13913  000B1E  6EFE               	movwf	tosh,c
 13914  000B20  6AFF               	clrf	tosu,c
 13915  000B22  50FA               	movf	pclath,w,c
 13916  000B24  0012               	return		;indir
 13917  000B26                     u22769:
 13918                           
 13919                           ;lorawan.c: 1507: };lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.
      +                          lorawanMacStatus.synchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUp
      +                          linkMessage == 1) || (loRa.lorawanMacStatus.fPending == 1) ) )
 13920  000B26  0102               	movlb	2	; () banked
 13921  000B28  BB07               	btfsc	(_loRa+2)& (0+255),5,b
 13922                           
 13923                           ; BSR set to: 2
 13924  000B2A  BB05               	btfsc	_loRa& (0+255),5,b
 13925  000B2C  D57B               	goto	l20408
 13926                           
 13927                           ; BSR set to: 2
 13928  000B2E  B305               	btfsc	_loRa& (0+255),1,b
 13929  000B30  D002               	goto	u22800
 13930                           
 13931                           ; BSR set to: 2
 13932  000B32  A705               	btfss	_loRa& (0+255),3,b
 13933  000B34  D577               	goto	l20408
 13934  000B36                     u22800:
 13935                           
 13936                           ; BSR set to: 2
 13937                           ;lorawan.c: 1510: {;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &c
      +                          hannelIndex) == OK)
 13938  000B36  0E01               	movlw	1
 13939  000B38  0100               	movlb	0	; () banked
 13940  000B3A  6FA7               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13941  000B3C  0EE1               	movlw	low LORAWAN_RxDone@channelIndex
 13942  000B3E  6FA8               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13943  000B40  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 13944  000B42  6FA9               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13945  000B44  0102               	movlb	2	; () banked
 13946  000B46  51F2               	movf	(_loRa+237)& (0+255),w,b
 13947  000B48  ECDB  F033         	call	_SearchAvailableChannel
 13948  000B4C  0900               	iorlw	0
 13949  000B4E  A4D8               	btfss	status,2,c
 13950  000B50  D7C6               	goto	l20580
 13951                           
 13952                           ;lorawan.c: 1512: {;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 13953  000B52  0E00               	movlw	0
 13954  000B54  0100               	movlb	0	; () banked
 13955  000B56  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
 13956  000B58  0E00               	movlw	0
 13957  000B5A  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
 13958  000B5C  0E00               	movlw	0
 13959  000B5E  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13960  000B60  0E00               	movlw	0
 13961  000B62  6FD7               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13962  000B64  0E00               	movlw	0
 13963  000B66  ECCF  F037         	call	_LORAWAN_Send
 13964  000B6A  D7B6               	goto	l20578
 13965  000B6C                     l20614:
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;lorawan.c: 1530: else;lorawan.c: 1531: {;lorawan.c: 1533: SetReceptionNotOkState ();
 13969  000B6C  EC32  F043         	call	_SetReceptionNotOkState	;wreg free
 13970  000B70  0012               	return	
 13971  000B72                     l20618:
 13972                           
 13973                           ; BSR set to: 2
 13974                           ;lorawan.c: 1537: else;lorawan.c: 1538: {;lorawan.c: 1540: if ( rxPayload.RxAppData != (
      +                          0) )
 13975  000B72  0101               	movlb	1	; () banked
 13976  000B74  510E               	movf	_rxPayload& (0+255),w,b
 13977  000B76  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13978  000B78  B4D8               	btfsc	status,2,c
 13979  000B7A  0012               	return	
 13980                           
 13981                           ; BSR set to: 1
 13982                           ;lorawan.c: 1541: {;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 13983  000B7C  ECF0  F053         	call	_RADIO_GetStatus	;wreg free
 13984  000B80  0100               	movlb	0	; () banked
 13985  000B82  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13986  000B84  B7DB               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 13987  000B86  D014               	goto	l20624
 13988                           
 13989                           ; BSR set to: 0
 13990                           ;lorawan.c: 1543: {;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK)
      +                          ;
 13991  000B88  C1DA  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 13992  000B8C  C1DB  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 13993  000B90  C1DC  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 13994  000B94  0E03               	movlw	3
 13995  000B96  6F63               	movwf	RxData@status& (0+255),b
 13996  000B98  D801               	call	u22858
 13997  000B9A  0012               	return	
 13998  000B9C                     u22858:
 13999  000B9C  0005               	push	
 14000  000B9E  6EFA               	movwf	pclath,c
 14001  000BA0  0101               	movlb	1	; () banked
 14002  000BA2  510E               	movf	_rxPayload& (0+255),w,b
 14003  000BA4  6EFD               	movwf	tosl,c
 14004  000BA6  510F               	movf	(_rxPayload+1)& (0+255),w,b
 14005  000BA8  6EFE               	movwf	tosh,c
 14006  000BAA  6AFF               	clrf	tosu,c
 14007  000BAC  50FA               	movf	pclath,w,c
 14008  000BAE  0012               	return		;indir
 14009  000BB0                     l20624:
 14010                           
 14011                           ; BSR set to: 0
 14012                           ;lorawan.c: 1546: else;lorawan.c: 1547: {;lorawan.c: 1548: rxPayload.RxAppData(buffer, b
      +                          ufferLength, RADIO_NOT_OK);
 14013  000BB0  C1DA  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 14014  000BB4  C1DB  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 14015  000BB8  C1DC  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 14016  000BBC  0E02               	movlw	2
 14017  000BBE  6F63               	movwf	RxData@status& (0+255),b
 14018  000BC0  D801               	call	u22868
 14019  000BC2  0012               	return	
 14020  000BC4                     u22868:
 14021  000BC4  0005               	push	
 14022  000BC6  6EFA               	movwf	pclath,c
 14023  000BC8  0101               	movlb	1	; () banked
 14024  000BCA  510E               	movf	_rxPayload& (0+255),w,b
 14025  000BCC  6EFD               	movwf	tosl,c
 14026  000BCE  510F               	movf	(_rxPayload+1)& (0+255),w,b
 14027  000BD0  6EFE               	movwf	tosh,c
 14028  000BD2  6AFF               	clrf	tosu,c
 14029  000BD4  50FA               	movf	pclath,w,c
 14030  000BD6  0012               	return		;indir
 14031  000BD8                     __end_of_LORAWAN_RxDone:
 14032                           	opt callstack 0
 14033                           
 14034 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 14035 ;; Defined at:
 14036 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;		None
 14039 ;; Auto vars:     Size  Location     Type
 14040 ;;		None
 14041 ;; Return value:  Size  Location     Type
 14042 ;;                  1    wreg      void 
 14043 ;; Registers used:
 14044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14045 ;; Tracked objects:
 14046 ;;		On entry : 0/0
 14047 ;;		On exit  : 0/0
 14048 ;;		Unchanged: 0/0
 14049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14052 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14053 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14054 ;;Total ram usage:        4 bytes
 14055 ;; Hardware stack levels used:    1
 14056 ;; Hardware stack levels required when called:   11
 14057 ;; This function calls:
 14058 ;;		_SwTimerSetTimeout
 14059 ;;		_SwTimerStart
 14060 ;;		___lldiv
 14061 ;; This function is called by:
 14062 ;;		_AckRetransmissionCallback
 14063 ;;		_LORAWAN_RxDone
 14064 ;; This function uses a non-reentrant model
 14065 ;;
 14066                           
 14067                           	psect	text51
 14068  008AA4                     __ptext51:
 14069                           	opt callstack 0
 14070  008AA4                     _UpdateRetransmissionAckTimeoutState:
 14071                           	opt callstack 14
 14072                           
 14073                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 14074                           
 14075                           ;incstack = 0
 14076  008AA4  0102               	movlb	2	; () banked
 14077  008AA6  5107               	movf	(_loRa+2)& (0+255),w,b
 14078  008AA8  0BF0               	andlw	-16
 14079  008AAA  0906               	iorlw	6
 14080  008AAC  6F07               	movwf	(_loRa+2)& (0+255),b
 14081                           
 14082                           ; BSR set to: 2
 14083                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 14084  008AAE  51A5               	movf	(_loRa+160)& (0+255),w,b
 14085  008AB0  0100               	movlb	0	; () banked
 14086  008AB2  6F92               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 14087  008AB4  0102               	movlb	2	; () banked
 14088  008AB6  51A6               	movf	(_loRa+161)& (0+255),w,b
 14089  008AB8  0100               	movlb	0	; () banked
 14090  008ABA  6F93               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 14091  008ABC  6B94               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 14092  008ABE  6B95               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 14093  008AC0  0E0C               	movlw	12
 14094  008AC2                     u21885:
 14095  008AC2  90D8               	bcf	status,0,c
 14096  008AC4  3792               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 14097  008AC6  3793               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 14098  008AC8  3794               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 14099  008ACA  3795               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 14100  008ACC  2EE8               	decfsz	wreg,f,c
 14101  008ACE  D7F9               	goto	u21885
 14102  008AD0  C092  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 14103  008AD4  C093  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 14104  008AD8  C094  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 14105  008ADC  C095  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 14106  008AE0  0E7D               	movlw	125
 14107  008AE2  6F64               	movwf	___lldiv@divisor& (0+255),b
 14108  008AE4  0E00               	movlw	0
 14109  008AE6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14110  008AE8  0E00               	movlw	0
 14111  008AEA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14112  008AEC  0E00               	movlw	0
 14113  008AEE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14114  008AF0  EC6D  F042         	call	___lldiv	;wreg free
 14115  008AF4  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 14116  008AF8  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 14117  008AFC  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 14118  008B00  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 14119  008B04  0102               	movlb	2	; () banked
 14120  008B06  51ED               	movf	(_loRa+232)& (0+255),w,b
 14121  008B08  EC2D  F04C         	call	_SwTimerSetTimeout
 14122                           
 14123                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 14124  008B0C  0102               	movlb	2	; () banked
 14125  008B0E  51ED               	movf	(_loRa+232)& (0+255),w,b
 14126  008B10  EC4A  F040         	call	_SwTimerStart
 14127  008B14  0012               	return		;funcret
 14128  008B16                     __end_of_UpdateRetransmissionAckTimeoutState:
 14129                           	opt callstack 0
 14130                           
 14131 ;; *************** function _UpdateDLSettings *****************
 14132 ;; Defined at:
 14133 ;;		line 889 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14134 ;; Parameters:    Size  Location     Type
 14135 ;;  dlRx2Dr         1    wreg     unsigned char 
 14136 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 14137 ;; Auto vars:     Size  Location     Type
 14138 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 14139 ;; Return value:  Size  Location     Type
 14140 ;;                  1    wreg      void 
 14141 ;; Registers used:
 14142 ;;		wreg, status,2, status,0
 14143 ;; Tracked objects:
 14144 ;;		On entry : 0/0
 14145 ;;		On exit  : 0/0
 14146 ;;		Unchanged: 0/0
 14147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14148 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14151 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14152 ;;Total ram usage:        2 bytes
 14153 ;; Hardware stack levels used:    1
 14154 ;; Hardware stack levels required when called:    7
 14155 ;; This function calls:
 14156 ;;		Nothing
 14157 ;; This function is called by:
 14158 ;;		_LORAWAN_RxDone
 14159 ;; This function uses a non-reentrant model
 14160 ;;
 14161                           
 14162                           	psect	text52
 14163  00A466                     __ptext52:
 14164                           	opt callstack 0
 14165  00A466                     _UpdateDLSettings:
 14166                           	opt callstack 17
 14167                           
 14168                           ;incstack = 0
 14169                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 14170  00A466  0100               	movlb	0	; () banked
 14171  00A468  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 14172                           
 14173                           ;lorawan_eu.c: 891: if (dlRx2Dr <= 7)
 14174  00A46A  0E08               	movlw	8
 14175  00A46C  0100               	movlb	0	; () banked
 14176  00A46E  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 14177  00A470  D002               	goto	l19934
 14178                           
 14179                           ; BSR set to: 0
 14180                           ;lorawan_eu.c: 892: {;lorawan_eu.c: 893: loRa.receiveWindow2Parameters.dataRate = dlRx2D
      +                          r;
 14181  00A472  C061  F221         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 14182  00A476                     l19934:
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;lorawan_eu.c: 894: };lorawan_eu.c: 896: if (dlRx1DrOffset <= 5)
 14186  00A476  0E06               	movlw	6
 14187  00A478  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 14188  00A47A  0012               	return	
 14189                           
 14190                           ; BSR set to: 0
 14191                           ;lorawan_eu.c: 897: {;lorawan_eu.c: 899: loRa.offset = dlRx1DrOffset;
 14192  00A47C  C060  F2F4         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 14193                           
 14194                           ; BSR set to: 0
 14195  00A480  0012               	return		;funcret
 14196  00A482                     __end_of_UpdateDLSettings:
 14197                           	opt callstack 0
 14198                           
 14199 ;; *************** function _UpdateCfList *****************
 14200 ;; Defined at:
 14201 ;;		line 825 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14202 ;; Parameters:    Size  Location     Type
 14203 ;;  bufferLength    1    wreg     unsigned char 
 14204 ;;  joinAccept      2   62[BANK0 ] PTR struct .
 14205 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14206 ;; Auto vars:     Size  Location     Type
 14207 ;;  bufferLength    1   68[BANK0 ] unsigned char 
 14208 ;;  frequency       4   69[BANK0 ] unsigned long 
 14209 ;;  i               1   74[BANK0 ] unsigned char 
 14210 ;;  channelIndex    1   73[BANK0 ] unsigned char 
 14211 ;; Return value:  Size  Location     Type
 14212 ;;                  1    wreg      void 
 14213 ;; Registers used:
 14214 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14215 ;; Tracked objects:
 14216 ;;		On entry : 0/0
 14217 ;;		On exit  : 0/0
 14218 ;;		Unchanged: 0/0
 14219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14220 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14221 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14222 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14223 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14224 ;;Total ram usage:       13 bytes
 14225 ;; Hardware stack levels used:    1
 14226 ;; Hardware stack levels required when called:    9
 14227 ;; This function calls:
 14228 ;;		_LORAWAN_SetChannelIdStatus
 14229 ;;		_ValidateFrequency
 14230 ;;		___lmul
 14231 ;;		_memcpy
 14232 ;; This function is called by:
 14233 ;;		_LORAWAN_RxDone
 14234 ;; This function uses a non-reentrant model
 14235 ;;
 14236                           
 14237                           	psect	text53
 14238  004128                     __ptext53:
 14239                           	opt callstack 0
 14240  004128                     _UpdateCfList:
 14241                           	opt callstack 15
 14242                           
 14243                           ; BSR set to: 0
 14244                           ;incstack = 0
 14245                           ;UpdateCfList@bufferLength stored from wreg
 14246  004128  0100               	movlb	0	; () banked
 14247  00412A  6FA4               	movwf	UpdateCfList@bufferLength& (0+255),b
 14248                           
 14249                           ;lorawan_eu.c: 827: uint8_t i;;lorawan_eu.c: 828: uint32_t frequency;;lorawan_eu.c: 829:
      +                           uint8_t channelIndex;;lorawan_eu.c: 831: if ( (bufferLength == 33) )
 14250  00412C  0E21               	movlw	33
 14251  00412E  0100               	movlb	0	; () banked
 14252  004130  19A4               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 14253  004132  A4D8               	btfss	status,2,c
 14254  004134  0012               	return	
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;lorawan_eu.c: 832: {;lorawan_eu.c: 834: channelIndex = 3;
 14258  004136  0E03               	movlw	3
 14259  004138  6FA9               	movwf	UpdateCfList@channelIndex& (0+255),b
 14260                           
 14261                           ;lorawan_eu.c: 836: for (i = 0; i < 5; i++ )
 14262  00413A  0E00               	movlw	0
 14263  00413C  6FAA               	movwf	UpdateCfList@i& (0+255),b
 14264  00413E                     l19908:
 14265                           
 14266                           ; BSR set to: 0
 14267                           ;lorawan_eu.c: 837: {;lorawan_eu.c: 838: frequency = 0;
 14268  00413E  0E00               	movlw	0
 14269  004140  6FA5               	movwf	UpdateCfList@frequency& (0+255),b
 14270  004142  0E00               	movlw	0
 14271  004144  6FA6               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 14272  004146  0E00               	movlw	0
 14273  004148  6FA7               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 14274  00414A  0E00               	movlw	0
 14275  00414C  6FA8               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 14276                           
 14277                           ; BSR set to: 0
 14278                           ;lorawan_eu.c: 839: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 14279  00414E  0EA5               	movlw	low UpdateCfList@frequency
 14280  004150  6F60               	movwf	memcpy@d1& (0+255),b
 14281  004152  0E00               	movlw	high UpdateCfList@frequency
 14282  004154  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14283  004156  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14284  004158  0D03               	mullw	3
 14285  00415A  C09E  F0A0         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 14286  00415E  C09F  F0A1         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 14287  004162  50F3               	movf	prodl,w,c
 14288  004164  27A0               	addwf	??_UpdateCfList& (0+255),f,b
 14289  004166  50F4               	movf	prodh,w,c
 14290  004168  23A1               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 14291  00416A  0E0D               	movlw	13
 14292  00416C  25A0               	addwf	??_UpdateCfList& (0+255),w,b
 14293  00416E  6F62               	movwf	memcpy@s1& (0+255),b
 14294  004170  0E00               	movlw	0
 14295  004172  21A1               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 14296  004174  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14297  004176  0E00               	movlw	0
 14298  004178  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14299  00417A  0E03               	movlw	3
 14300  00417C  6F64               	movwf	memcpy@n& (0+255),b
 14301  00417E  ECC3  F047         	call	_memcpy	;wreg free
 14302                           
 14303                           ;lorawan_eu.c: 840: frequency *= 100;
 14304  004182  C0A5  F092         	movff	UpdateCfList@frequency,___lmul@multiplier
 14305  004186  C0A6  F093         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 14306  00418A  C0A7  F094         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 14307  00418E  C0A8  F095         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 14308  004192  0E64               	movlw	100
 14309  004194  0100               	movlb	0	; () banked
 14310  004196  6F96               	movwf	___lmul@multiplicand& (0+255),b
 14311  004198  0E00               	movlw	0
 14312  00419A  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14313  00419C  0E00               	movlw	0
 14314  00419E  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14315  0041A0  0E00               	movlw	0
 14316  0041A2  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14317  0041A4  ECAD  F048         	call	___lmul	;wreg free
 14318  0041A8  C092  F0A5         	movff	?___lmul,UpdateCfList@frequency
 14319  0041AC  C093  F0A6         	movff	?___lmul+1,UpdateCfList@frequency+1
 14320  0041B0  C094  F0A7         	movff	?___lmul+2,UpdateCfList@frequency+2
 14321  0041B4  C095  F0A8         	movff	?___lmul+3,UpdateCfList@frequency+3
 14322                           
 14323                           ;lorawan_eu.c: 841: if (frequency != 0)
 14324  0041B8  0100               	movlb	0	; () banked
 14325  0041BA  51A5               	movf	UpdateCfList@frequency& (0+255),w,b
 14326  0041BC  11A6               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 14327  0041BE  11A7               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 14328  0041C0  11A8               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 14329  0041C2  B4D8               	btfsc	status,2,c
 14330  0041C4  D0AD               	goto	l19924
 14331                           
 14332                           ; BSR set to: 0
 14333                           ;lorawan_eu.c: 842: {;lorawan_eu.c: 843: if (ValidateFrequency (frequency) == OK)
 14334  0041C6  C0A5  F060         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 14335  0041CA  C0A6  F061         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 14336  0041CE  C0A7  F062         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 14337  0041D2  C0A8  F063         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 14338  0041D6  EC8B  F045         	call	_ValidateFrequency	;wreg free
 14339  0041DA  0900               	iorlw	0
 14340  0041DC  A4D8               	btfss	status,2,c
 14341  0041DE  D0A6               	goto	l19926
 14342                           
 14343                           ;lorawan_eu.c: 844: {;lorawan_eu.c: 845: Channels[i+channelIndex].frequency = frequency;
 14344  0041E0  0100               	movlb	0	; () banked
 14345  0041E2  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14346  0041E4  0D0E               	mullw	14
 14347  0041E6  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14348  0041EA  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14349  0041EE  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14350  0041F0  0D0E               	mullw	14
 14351  0041F2  0E14               	movlw	low _Channels
 14352  0041F4  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14353  0041F6  0E04               	movlw	high _Channels
 14354  0041F8  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14355  0041FA  50F3               	movf	prodl,w,c
 14356  0041FC  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14357  0041FE  50F4               	movf	prodh,w,c
 14358  004200  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14359  004202  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14360  004204  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14361  004206  6ED9               	movwf	fsr2l,c
 14362  004208  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14363  00420A  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14364  00420C  6EDA               	movwf	fsr2h,c
 14365  00420E  C0A5  FFDE         	movff	UpdateCfList@frequency,postinc2
 14366  004212  C0A6  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 14367  004216  C0A7  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 14368  00421A  C0A8  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 14369                           
 14370                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.max = 5;
 14371  00421E  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14372  004220  0D0E               	mullw	14
 14373  004222  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14374  004226  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14375  00422A  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14376  00422C  0D0E               	mullw	14
 14377  00422E  0E14               	movlw	low _Channels
 14378  004230  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14379  004232  0E04               	movlw	high _Channels
 14380  004234  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14381  004236  0E05               	movlw	5
 14382  004238  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14383  00423A  0E00               	movlw	0
 14384  00423C  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14385  00423E  50F3               	movf	prodl,w,c
 14386  004240  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14387  004242  50F4               	movf	prodh,w,c
 14388  004244  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14389  004246  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14390  004248  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14391  00424A  6ED9               	movwf	fsr2l,c
 14392  00424C  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14393  00424E  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14394  004250  6EDA               	movwf	fsr2h,c
 14395  004252  0104               	movlb	4	; () banked
 14396  004254  50DF               	movf	223,w,c
 14397  004256  0B0F               	andlw	-241
 14398  004258  0950               	iorlw	80
 14399  00425A  6EDF               	movwf	223,c
 14400                           
 14401                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dataRange.min = 0;
 14402  00425C  0100               	movlb	0	; () banked
 14403  00425E  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14404  004260  0D0E               	mullw	14
 14405  004262  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14406  004266  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14407  00426A  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14408  00426C  0D0E               	mullw	14
 14409  00426E  0E14               	movlw	low _Channels
 14410  004270  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14411  004272  0E04               	movlw	high _Channels
 14412  004274  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14413  004276  0E05               	movlw	5
 14414  004278  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14415  00427A  0E00               	movlw	0
 14416  00427C  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14417  00427E  50F3               	movf	prodl,w,c
 14418  004280  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14419  004282  50F4               	movf	prodh,w,c
 14420  004284  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14421  004286  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14422  004288  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14423  00428A  6ED9               	movwf	fsr2l,c
 14424  00428C  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14425  00428E  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14426  004290  6EDA               	movwf	fsr2h,c
 14427  004292  0EF0               	movlw	-16
 14428  004294  0104               	movlb	4	; () banked
 14429  004296  16DF               	andwf	223,f,c
 14430                           
 14431                           ;lorawan_eu.c: 848: Channels[i+channelIndex].dutyCycle = 999;
 14432  004298  0100               	movlb	0	; () banked
 14433  00429A  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14434  00429C  0D0E               	mullw	14
 14435  00429E  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14436  0042A2  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14437  0042A6  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14438  0042A8  0D0E               	mullw	14
 14439  0042AA  0E14               	movlw	low _Channels
 14440  0042AC  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14441  0042AE  0E04               	movlw	high _Channels
 14442  0042B0  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14443  0042B2  0E06               	movlw	6
 14444  0042B4  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14445  0042B6  0E00               	movlw	0
 14446  0042B8  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14447  0042BA  50F3               	movf	prodl,w,c
 14448  0042BC  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14449  0042BE  50F4               	movf	prodh,w,c
 14450  0042C0  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14451  0042C2  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14452  0042C4  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14453  0042C6  6ED9               	movwf	fsr2l,c
 14454  0042C8  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14455  0042CA  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14456  0042CC  6EDA               	movwf	fsr2h,c
 14457  0042CE  0EE7               	movlw	231
 14458  0042D0  6EDE               	movwf	postinc2,c
 14459  0042D2  0E03               	movlw	3
 14460  0042D4  6EDD               	movwf	postdec2,c
 14461                           
 14462                           ;lorawan_eu.c: 849: Channels[i+channelIndex].parametersDefined = 0xFF;
 14463  0042D6  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14464  0042D8  0D0E               	mullw	14
 14465  0042DA  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14466  0042DE  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14467  0042E2  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14468  0042E4  0D0E               	mullw	14
 14469  0042E6  0E14               	movlw	low _Channels
 14470  0042E8  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14471  0042EA  0E04               	movlw	high _Channels
 14472  0042EC  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14473  0042EE  0E0D               	movlw	13
 14474  0042F0  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14475  0042F2  0E00               	movlw	0
 14476  0042F4  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14477  0042F6  50F3               	movf	prodl,w,c
 14478  0042F8  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14479  0042FA  50F4               	movf	prodh,w,c
 14480  0042FC  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14481  0042FE  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14482  004300  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14483  004302  6ED9               	movwf	fsr2l,c
 14484  004304  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14485  004306  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14486  004308  6EDA               	movwf	fsr2h,c
 14487  00430A  0EFF               	movlw	255
 14488  00430C  6EDF               	movwf	indf2,c
 14489                           
 14490                           ; BSR set to: 0
 14491                           ;lorawan_eu.c: 850: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 14492  00430E  0E01               	movlw	1
 14493  004310  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14494  004312  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14495  004314  25A9               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14496  004316  EC10  F04D         	call	_LORAWAN_SetChannelIdStatus
 14497                           
 14498                           ;lorawan_eu.c: 851: loRa.macStatus.channelsModified = 1;
 14499  00431A  0102               	movlb	2	; () banked
 14500  00431C  8708               	bsf	(_loRa+3)& (0+255),3,b
 14501  00431E  D006               	goto	l19926
 14502  004320                     l19924:
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;lorawan_eu.c: 854: else;lorawan_eu.c: 855: {;lorawan_eu.c: 856: LORAWAN_SetChannelIdSta
      +                          tus(i+channelIndex, 0);
 14506  004320  0E00               	movlw	0
 14507  004322  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14508  004324  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14509  004326  25A9               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14510  004328  EC10  F04D         	call	_LORAWAN_SetChannelIdStatus
 14511  00432C                     l19926:
 14512  00432C  0100               	movlb	0	; () banked
 14513  00432E  2BAA               	incf	UpdateCfList@i& (0+255),f,b
 14514                           
 14515                           ; BSR set to: 0
 14516  004330  0E04               	movlw	4
 14517  004332  65AA               	cpfsgt	UpdateCfList@i& (0+255),b
 14518  004334  D704               	goto	l19908
 14519                           
 14520                           ; BSR set to: 0
 14521                           ;lorawan_eu.c: 857: };lorawan_eu.c: 858: };lorawan_eu.c: 860: loRa.macStatus.channelsMod
      +                          ified = 1;
 14522  004336  0102               	movlb	2	; () banked
 14523  004338  8708               	bsf	(_loRa+3)& (0+255),3,b
 14524  00433A  0012               	return		;funcret
 14525  00433C                     __end_of_UpdateCfList:
 14526                           	opt callstack 0
 14527                           
 14528 ;; *************** function _StartReTxTimer *****************
 14529 ;; Defined at:
 14530 ;;		line 903 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14531 ;; Parameters:    Size  Location     Type
 14532 ;;		None
 14533 ;; Auto vars:     Size  Location     Type
 14534 ;;  minim           4   54[BANK0 ] unsigned long 
 14535 ;;  i               1   58[BANK0 ] unsigned char 
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  1    wreg      void 
 14538 ;; Registers used:
 14539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14540 ;; Tracked objects:
 14541 ;;		On entry : 0/0
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14546 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14547 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14548 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14549 ;;Total ram usage:        9 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; Hardware stack levels required when called:   11
 14552 ;; This function calls:
 14553 ;;		_SwTimerSetTimeout
 14554 ;;		_SwTimerStart
 14555 ;;		___lldiv
 14556 ;; This function is called by:
 14557 ;;		_LORAWAN_RxDone
 14558 ;; This function uses a non-reentrant model
 14559 ;;
 14560                           
 14561                           	psect	text54
 14562  005528                     __ptext54:
 14563                           	opt callstack 0
 14564  005528                     _StartReTxTimer:
 14565                           	opt callstack 13
 14566                           
 14567                           ;lorawan_eu.c: 905: uint8_t i;;lorawan_eu.c: 906: uint32_t minim = (4294967295UL);
 14568                           
 14569                           ;incstack = 0
 14570  005528  0100               	movlb	0	; () banked
 14571  00552A  6996               	setf	StartReTxTimer@minim& (0+255),b
 14572  00552C  6997               	setf	(StartReTxTimer@minim+1)& (0+255),b
 14573  00552E  6998               	setf	(StartReTxTimer@minim+2)& (0+255),b
 14574  005530  6999               	setf	(StartReTxTimer@minim+3)& (0+255),b
 14575                           
 14576                           ; BSR set to: 0
 14577                           ;lorawan_eu.c: 908: for (i = 0; i <= loRa.maxChannels; i++)
 14578  005532  0E00               	movlw	0
 14579  005534  6F9A               	movwf	StartReTxTimer@i& (0+255),b
 14580  005536  D064               	goto	l19956
 14581  005538                     l19942:
 14582                           
 14583                           ; BSR set to: 2
 14584                           ;lorawan_eu.c: 909: {;lorawan_eu.c: 910: if ( (Channels[i].status == 1) && (Channels[i].
      +                          channelTimer != 0) && (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Ch
      +                          annels[i].dataRange.min) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 14585  005538  0100               	movlb	0	; () banked
 14586  00553A  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14587  00553C  0D0E               	mullw	14
 14588  00553E  0E18               	movlw	low (_Channels+4)
 14589  005540  24F3               	addwf	prodl,w,c
 14590  005542  6ED9               	movwf	fsr2l,c
 14591  005544  0E04               	movlw	high (_Channels+4)
 14592  005546  20F4               	addwfc	prodh,w,c
 14593  005548  6EDA               	movwf	fsr2h,c
 14594  00554A  04DE               	decf	postinc2,w,c
 14595  00554C  A4D8               	btfss	status,2,c
 14596  00554E  D056               	goto	l19954
 14597                           
 14598                           ; BSR set to: 0
 14599  005550  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14600  005552  0D0E               	mullw	14
 14601  005554  0E1C               	movlw	low (_Channels+8)
 14602  005556  24F3               	addwf	prodl,w,c
 14603  005558  6ED9               	movwf	fsr2l,c
 14604  00555A  0E04               	movlw	high (_Channels+8)
 14605  00555C  20F4               	addwfc	prodh,w,c
 14606  00555E  6EDA               	movwf	fsr2h,c
 14607  005560  50DE               	movf	postinc2,w,c
 14608  005562  10DE               	iorwf	postinc2,w,c
 14609  005564  10DE               	iorwf	postinc2,w,c
 14610  005566  10DE               	iorwf	postinc2,w,c
 14611  005568  B4D8               	btfsc	status,2,c
 14612  00556A  D048               	goto	l19954
 14613                           
 14614                           ; BSR set to: 0
 14615  00556C  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14616  00556E  0D0E               	mullw	14
 14617  005570  0E1C               	movlw	low (_Channels+8)
 14618  005572  24F3               	addwf	prodl,w,c
 14619  005574  6ED9               	movwf	fsr2l,c
 14620  005576  0E04               	movlw	high (_Channels+8)
 14621  005578  20F4               	addwfc	prodh,w,c
 14622  00557A  6EDA               	movwf	fsr2h,c
 14623  00557C  50DE               	movf	postinc2,w,c
 14624  00557E  5D96               	subwf	StartReTxTimer@minim& (0+255),w,b
 14625  005580  50DE               	movf	postinc2,w,c
 14626  005582  5997               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 14627  005584  50DE               	movf	postinc2,w,c
 14628  005586  5998               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 14629  005588  50DE               	movf	postinc2,w,c
 14630  00558A  5999               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 14631  00558C  A0D8               	btfss	status,0,c
 14632  00558E  D036               	goto	l19954
 14633                           
 14634                           ; BSR set to: 0
 14635  005590  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14636  005592  0D0E               	mullw	14
 14637  005594  0E19               	movlw	low (_Channels+5)
 14638  005596  24F3               	addwf	prodl,w,c
 14639  005598  6ED9               	movwf	fsr2l,c
 14640  00559A  0E04               	movlw	high (_Channels+5)
 14641  00559C  20F4               	addwfc	prodh,w,c
 14642  00559E  6EDA               	movwf	fsr2h,c
 14643  0055A0  0104               	movlb	4	; () banked
 14644  0055A2  50DF               	movf	223,w,c
 14645  0055A4  0B0F               	andlw	15
 14646  0055A6  0100               	movlb	0	; () banked
 14647  0055A8  6F92               	movwf	??_StartReTxTimer& (0+255),b
 14648  0055AA  5192               	movf	??_StartReTxTimer& (0+255),w,b
 14649  0055AC  0102               	movlb	2	; () banked
 14650  0055AE  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 14651  0055B0  A0D8               	btfss	status,0,c
 14652  0055B2  D024               	goto	l19954
 14653                           
 14654                           ; BSR set to: 2
 14655  0055B4  0100               	movlb	0	; () banked
 14656  0055B6  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14657  0055B8  0D0E               	mullw	14
 14658  0055BA  0E19               	movlw	low (_Channels+5)
 14659  0055BC  24F3               	addwf	prodl,w,c
 14660  0055BE  6ED9               	movwf	fsr2l,c
 14661  0055C0  0E04               	movlw	high (_Channels+5)
 14662  0055C2  20F4               	addwfc	prodh,w,c
 14663  0055C4  6EDA               	movwf	fsr2h,c
 14664  0055C6  0104               	movlb	4	; () banked
 14665  0055C8  38DF               	swapf	223,w,c
 14666  0055CA  0B0F               	andlw	15
 14667  0055CC  0100               	movlb	0	; () banked
 14668  0055CE  6F92               	movwf	??_StartReTxTimer& (0+255),b
 14669  0055D0  0102               	movlb	2	; () banked
 14670  0055D2  51E4               	movf	(_loRa+223)& (0+255),w,b
 14671  0055D4  0100               	movlb	0	; () banked
 14672  0055D6  5D92               	subwf	??_StartReTxTimer& (0+255),w,b
 14673  0055D8  A0D8               	btfss	status,0,c
 14674  0055DA  D010               	goto	l19954
 14675                           
 14676                           ; BSR set to: 0
 14677                           ;lorawan_eu.c: 911: {;lorawan_eu.c: 912: minim = Channels[i].channelTimer;
 14678  0055DC  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14679  0055DE  0D0E               	mullw	14
 14680  0055E0  0E1C               	movlw	low (_Channels+8)
 14681  0055E2  24F3               	addwf	prodl,w,c
 14682  0055E4  6ED9               	movwf	fsr2l,c
 14683  0055E6  0E04               	movlw	high (_Channels+8)
 14684  0055E8  20F4               	addwfc	prodh,w,c
 14685  0055EA  6EDA               	movwf	fsr2h,c
 14686  0055EC  CFDE F096          	movff	postinc2,StartReTxTimer@minim
 14687  0055F0  CFDE F097          	movff	postinc2,StartReTxTimer@minim+1
 14688  0055F4  CFDE F098          	movff	postinc2,StartReTxTimer@minim+2
 14689  0055F8  CFDE F099          	movff	postinc2,StartReTxTimer@minim+3
 14690  0055FC                     l19954:
 14691  0055FC  0100               	movlb	0	; () banked
 14692  0055FE  2B9A               	incf	StartReTxTimer@i& (0+255),f,b
 14693  005600                     l19956:
 14694                           
 14695                           ; BSR set to: 0
 14696  005600  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14697  005602  0102               	movlb	2	; () banked
 14698  005604  5DF2               	subwf	(_loRa+237)& (0+255),w,b
 14699  005606  B0D8               	btfsc	status,0,c
 14700  005608  D797               	goto	l19942
 14701                           
 14702                           ; BSR set to: 2
 14703                           ;lorawan_eu.c: 913: };lorawan_eu.c: 914: };lorawan_eu.c: 915: loRa.macStatus.macState = 
      +                          RETRANSMISSION_DELAY;
 14704  00560A  5107               	movf	(_loRa+2)& (0+255),w,b
 14705  00560C  0BF0               	andlw	-16
 14706  00560E  0906               	iorlw	6
 14707  005610  6F07               	movwf	(_loRa+2)& (0+255),b
 14708                           
 14709                           ; BSR set to: 2
 14710                           ;lorawan_eu.c: 916: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 14711  005612  C096  F092         	movff	StartReTxTimer@minim,??_StartReTxTimer
 14712  005616  C097  F093         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 14713  00561A  C098  F094         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 14714  00561E  C099  F095         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 14715  005622  0E0C               	movlw	12
 14716  005624                     u21745:
 14717  005624  90D8               	bcf	status,0,c
 14718  005626  0100               	movlb	0	; () banked
 14719  005628  3792               	rlcf	??_StartReTxTimer& (0+255),f,b
 14720  00562A  3793               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 14721  00562C  3794               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 14722  00562E  3795               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 14723  005630  2EE8               	decfsz	wreg,f,c
 14724  005632  D7F8               	goto	u21745
 14725  005634  C092  F060         	movff	??_StartReTxTimer,___lldiv@dividend
 14726  005638  C093  F061         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 14727  00563C  C094  F062         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 14728  005640  C095  F063         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 14729  005644  0E7D               	movlw	125
 14730  005646  6F64               	movwf	___lldiv@divisor& (0+255),b
 14731  005648  0E00               	movlw	0
 14732  00564A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14733  00564C  0E00               	movlw	0
 14734  00564E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14735  005650  0E00               	movlw	0
 14736  005652  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14737  005654  EC6D  F042         	call	___lldiv	;wreg free
 14738  005658  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 14739  00565C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 14740  005660  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 14741  005664  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 14742  005668  0102               	movlb	2	; () banked
 14743  00566A  51EB               	movf	(_loRa+230)& (0+255),w,b
 14744  00566C  EC2D  F04C         	call	_SwTimerSetTimeout
 14745                           
 14746                           ;lorawan_eu.c: 917: SwTimerStart (loRa.automaticReplyTimerId);
 14747  005670  0102               	movlb	2	; () banked
 14748  005672  51EB               	movf	(_loRa+230)& (0+255),w,b
 14749  005674  EC4A  F040         	call	_SwTimerStart
 14750  005678  0012               	return		;funcret
 14751  00567A                     __end_of_StartReTxTimer:
 14752                           	opt callstack 0
 14753                           
 14754 ;; *************** function _SetReceptionNotOkState *****************
 14755 ;; Defined at:
 14756 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14757 ;; Parameters:    Size  Location     Type
 14758 ;;		None
 14759 ;; Auto vars:     Size  Location     Type
 14760 ;;		None
 14761 ;; Return value:  Size  Location     Type
 14762 ;;                  1    wreg      void 
 14763 ;; Registers used:
 14764 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : 0/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14774 ;;Total ram usage:        0 bytes
 14775 ;; Hardware stack levels used:    1
 14776 ;; Hardware stack levels required when called:   14
 14777 ;; This function calls:
 14778 ;;		_LORAWAN_EnterContinuousReceive
 14779 ;;		_RxData
 14780 ;; This function is called by:
 14781 ;;		_LORAWAN_RxDone
 14782 ;; This function uses a non-reentrant model
 14783 ;;
 14784                           
 14785                           	psect	text55
 14786  008664                     __ptext55:
 14787                           	opt callstack 0
 14788  008664                     _SetReceptionNotOkState:
 14789                           	opt callstack 10
 14790                           
 14791                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 14792                           
 14793                           ;incstack = 0
 14794  008664  0102               	movlb	2	; () banked
 14795  008666  5107               	movf	(_loRa+2)& (0+255),w,b
 14796  008668  0B0F               	andlw	15
 14797  00866A  0A05               	xorlw	5
 14798  00866C  B4D8               	btfsc	status,2,c
 14799  00866E  D008               	goto	u22030
 14800                           
 14801                           ; BSR set to: 2
 14802  008670  5107               	movf	(_loRa+2)& (0+255),w,b
 14803  008672  0B0F               	andlw	15
 14804  008674  0A03               	xorlw	3
 14805  008676  A4D8               	btfss	status,2,c
 14806  008678  D027               	goto	l20146
 14807                           
 14808                           ; BSR set to: 2
 14809  00867A  51F6               	movf	(_loRa+241)& (0+255),w,b
 14810  00867C  B4D8               	btfsc	status,2,c
 14811  00867E  D024               	goto	l20146
 14812  008680                     u22030:
 14813                           
 14814                           ; BSR set to: 2
 14815                           ;lorawan.c: 2000: {;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 14816  008680  9105               	bcf	_loRa& (0+255),0,b
 14817                           
 14818                           ; BSR set to: 2
 14819                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 14820  008682  0EF0               	movlw	-16
 14821  008684  1707               	andwf	(_loRa+2)& (0+255),f,b
 14822                           
 14823                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 14824  008686  5117               	movf	(_loRa+18)& (0+255),w,b
 14825  008688  A4D8               	btfss	status,2,c
 14826  00868A  D01C               	goto	u22069
 14827                           
 14828                           ; BSR set to: 2
 14829  00868C  0101               	movlb	1	; () banked
 14830  00868E  510E               	movf	_rxPayload& (0+255),w,b
 14831  008690  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 14832  008692  B4D8               	btfsc	status,2,c
 14833  008694  D017               	goto	u22069
 14834                           
 14835                           ; BSR set to: 1
 14836                           ;lorawan.c: 2005: {;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 14837  008696  0102               	movlb	2	; () banked
 14838  008698  9B05               	bcf	_loRa& (0+255),5,b
 14839                           
 14840                           ; BSR set to: 2
 14841                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 14842  00869A  0E00               	movlw	0
 14843  00869C  0100               	movlb	0	; () banked
 14844  00869E  6F60               	movwf	RxData@pData& (0+255),b
 14845  0086A0  0E00               	movlw	0
 14846  0086A2  6F61               	movwf	(RxData@pData+1)& (0+255),b
 14847  0086A4  0E00               	movlw	0
 14848  0086A6  6F62               	movwf	RxData@dataLength& (0+255),b
 14849  0086A8  0E00               	movlw	0
 14850  0086AA  6F63               	movwf	RxData@status& (0+255),b
 14851  0086AC  D801               	call	u22068
 14852  0086AE  D00A               	goto	u22069
 14853  0086B0                     u22068:
 14854  0086B0  0005               	push	
 14855  0086B2  6EFA               	movwf	pclath,c
 14856  0086B4  0101               	movlb	1	; () banked
 14857  0086B6  510E               	movf	_rxPayload& (0+255),w,b
 14858  0086B8  6EFD               	movwf	tosl,c
 14859  0086BA  510F               	movf	(_rxPayload+1)& (0+255),w,b
 14860  0086BC  6EFE               	movwf	tosh,c
 14861  0086BE  6AFF               	clrf	tosu,c
 14862  0086C0  50FA               	movf	pclath,w,c
 14863  0086C2  0012               	return		;indir
 14864  0086C4                     u22069:
 14865                           
 14866                           ;lorawan.c: 2008: };lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 14867  0086C4  0102               	movlb	2	; () banked
 14868  0086C6  9308               	bcf	(_loRa+3)& (0+255),1,b
 14869  0086C8                     l20146:
 14870                           
 14871                           ; BSR set to: 2
 14872                           ;lorawan.c: 2010: };lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 14873  0086C8  0E02               	movlw	2
 14874  0086CA  1917               	xorwf	(_loRa+18)& (0+255),w,b
 14875  0086CC  A4D8               	btfss	status,2,c
 14876  0086CE  0012               	return	
 14877                           
 14878                           ; BSR set to: 2
 14879                           ;lorawan.c: 2013: {;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 14880  0086D0  5107               	movf	(_loRa+2)& (0+255),w,b
 14881  0086D2  0BF0               	andlw	-16
 14882  0086D4  0909               	iorlw	9
 14883  0086D6  6F07               	movwf	(_loRa+2)& (0+255),b
 14884                           
 14885                           ; BSR set to: 2
 14886                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 14887  0086D8  ECAC  F043         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 14888  0086DC  0012               	return		;funcret
 14889  0086DE                     __end_of_SetReceptionNotOkState:
 14890                           	opt callstack 0
 14891                           
 14892 ;; *************** function _SetJoinFailState *****************
 14893 ;; Defined at:
 14894 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14895 ;; Parameters:    Size  Location     Type
 14896 ;;		None
 14897 ;; Auto vars:     Size  Location     Type
 14898 ;;		None
 14899 ;; Return value:  Size  Location     Type
 14900 ;;                  1    wreg      void 
 14901 ;; Registers used:
 14902 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14903 ;; Tracked objects:
 14904 ;;		On entry : 0/0
 14905 ;;		On exit  : 0/0
 14906 ;;		Unchanged: 0/0
 14907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14912 ;;Total ram usage:        0 bytes
 14913 ;; Hardware stack levels used:    1
 14914 ;; Hardware stack levels required when called:    9
 14915 ;; This function calls:
 14916 ;;		_RxJoinResponse
 14917 ;; This function is called by:
 14918 ;;		_LORAWAN_RxTimeout
 14919 ;;		_LORAWAN_RxDone
 14920 ;; This function uses a non-reentrant model
 14921 ;;
 14922                           
 14923                           	psect	text56
 14924  009F96                     __ptext56:
 14925                           	opt callstack 0
 14926  009F96                     _SetJoinFailState:
 14927                           	opt callstack 15
 14928                           
 14929                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 14930                           
 14931                           ;incstack = 0
 14932  009F96  0102               	movlb	2	; () banked
 14933  009F98  9907               	bcf	(_loRa+2)& (0+255),4,b
 14934                           
 14935                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 14936  009F9A  9505               	bcf	_loRa& (0+255),2,b
 14937                           
 14938                           ; BSR set to: 2
 14939                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 14940  009F9C  0EF0               	movlw	-16
 14941  009F9E  1707               	andwf	(_loRa+2)& (0+255),f,b
 14942                           
 14943                           ; BSR set to: 2
 14944                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 14945  009FA0  0101               	movlb	1	; () banked
 14946  009FA2  5110               	movf	(_rxPayload+2)& (0+255),w,b
 14947  009FA4  1111               	iorwf	(_rxPayload+3)& (0+255),w,b
 14948  009FA6  B4D8               	btfsc	status,2,c
 14949  009FA8  0012               	return	
 14950                           
 14951                           ; BSR set to: 1
 14952                           ;lorawan.c: 1110: {;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 14953  009FAA  D801               	call	u21618
 14954  009FAC  0012               	return	
 14955  009FAE                     u21618:
 14956  009FAE  0005               	push	
 14957  009FB0  6EFA               	movwf	pclath,c
 14958  009FB2  5110               	movf	(_rxPayload+2)& (0+255),w,b
 14959  009FB4  6EFD               	movwf	tosl,c
 14960  009FB6  5111               	movf	(_rxPayload+3)& (0+255),w,b
 14961  009FB8  6EFE               	movwf	tosh,c
 14962  009FBA  6AFF               	clrf	tosu,c
 14963  009FBC  50FA               	movf	pclath,w,c
 14964  009FBE  0E00               	movlw	0
 14965  009FC0  0012               	return		;indir
 14966  009FC2                     __end_of_SetJoinFailState:
 14967                           	opt callstack 0
 14968                           
 14969 ;; *************** function _RxJoinResponse *****************
 14970 ;; Defined at:
 14971 ;;		line 76 in file "main.c"
 14972 ;; Parameters:    Size  Location     Type
 14973 ;;  status          1    wreg     unsigned char 
 14974 ;; Auto vars:     Size  Location     Type
 14975 ;;  status          1    2[BANK0 ] unsigned char 
 14976 ;; Return value:  Size  Location     Type
 14977 ;;                  1    wreg      void 
 14978 ;; Registers used:
 14979 ;;		wreg, status,2, status,0, cstack
 14980 ;; Tracked objects:
 14981 ;;		On entry : 0/0
 14982 ;;		On exit  : 0/0
 14983 ;;		Unchanged: 0/0
 14984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14986 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14988 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14989 ;;Total ram usage:        1 bytes
 14990 ;; Hardware stack levels used:    1
 14991 ;; Hardware stack levels required when called:    8
 14992 ;; This function calls:
 14993 ;;		_GPIODigitalWrite
 14994 ;; This function is called by:
 14995 ;;		_main
 14996 ;;		_SetJoinFailState
 14997 ;;		_UpdateJoinSuccessState
 14998 ;; This function uses a non-reentrant model
 14999 ;;
 15000                           
 15001                           	psect	text57
 15002  009BE6                     __ptext57:
 15003                           	opt callstack 0
 15004  009BE6                     _RxJoinResponse:
 15005                           	opt callstack 17
 15006                           
 15007                           ;incstack = 0
 15008                           ;RxJoinResponse@status stored from wreg
 15009  009BE6  0100               	movlb	0	; () banked
 15010  009BE8  6F62               	movwf	RxJoinResponse@status& (0+255),b
 15011                           
 15012                           ;main.c: 78: if (status == 1){
 15013  009BEA  0100               	movlb	0	; () banked
 15014  009BEC  0562               	decf	RxJoinResponse@status& (0+255),w,b
 15015  009BEE  A4D8               	btfss	status,2,c
 15016  009BF0  D00F               	goto	l19836
 15017                           
 15018                           ; BSR set to: 0
 15019                           ;main.c: 79: GPIODigitalWrite(0x11, 0);
 15020  009BF2  0E00               	movlw	0
 15021  009BF4  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 15022  009BF6  0E11               	movlw	17
 15023  009BF8  ECD5  F036         	call	_GPIODigitalWrite
 15024                           
 15025                           ;main.c: 80: GPIODigitalWrite(0x19, 0);
 15026  009BFC  0E00               	movlw	0
 15027  009BFE  0100               	movlb	0	; () banked
 15028  009C00  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 15029  009C02  0E19               	movlw	25
 15030  009C04  ECD5  F036         	call	_GPIODigitalWrite
 15031                           
 15032                           ;main.c: 81: joined = 1;
 15033  009C08  0E01               	movlw	1
 15034  009C0A  0101               	movlb	1	; () banked
 15035  009C0C  6F25               	movwf	_joined& (0+255),b
 15036                           
 15037                           ;main.c: 82: }
 15038  009C0E  0012               	return	
 15039  009C10                     l19836:
 15040                           
 15041                           ; BSR set to: 0
 15042                           ;main.c: 83: else {;main.c: 84: joined = 0;
 15043  009C10  0E00               	movlw	0
 15044  009C12  0101               	movlb	1	; () banked
 15045  009C14  6F25               	movwf	_joined& (0+255),b
 15046                           
 15047                           ; BSR set to: 1
 15048  009C16  0012               	return		;funcret
 15049  009C18                     __end_of_RxJoinResponse:
 15050                           	opt callstack 0
 15051                           
 15052 ;; *************** function _MacExecuteCommands *****************
 15053 ;; Defined at:
 15054 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;  buffer          2   70[BANK0 ] PTR unsigned char 
 15057 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15058 ;;  fOptsLen        1   72[BANK0 ] unsigned char 
 15059 ;; Auto vars:     Size  Location     Type
 15060 ;;  ptr             2   76[BANK0 ] PTR unsigned char 
 15061 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15062 ;;  done            1   75[BANK0 ] unsigned char 
 15063 ;; Return value:  Size  Location     Type
 15064 ;;                  2   70[BANK0 ] PTR unsigned char 
 15065 ;; Registers used:
 15066 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15067 ;; Tracked objects:
 15068 ;;		On entry : 0/0
 15069 ;;		On exit  : 0/0
 15070 ;;		Unchanged: 0/0
 15071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15072 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15073 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15074 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15075 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15076 ;;Total ram usage:        8 bytes
 15077 ;; Hardware stack levels used:    1
 15078 ;; Hardware stack levels required when called:   11
 15079 ;; This function calls:
 15080 ;;		_ExecuteDevStatus
 15081 ;;		_ExecuteDutyCycle
 15082 ;;		_ExecuteLinkAdr
 15083 ;;		_ExecuteLinkCheck
 15084 ;;		_ExecuteNewChannel
 15085 ;;		_ExecuteRxParamSetupReq
 15086 ;;		_ExecuteRxTimingSetup
 15087 ;; This function is called by:
 15088 ;;		_LORAWAN_RxDone
 15089 ;; This function uses a non-reentrant model
 15090 ;;
 15091                           
 15092                           	psect	text58
 15093  00433C                     __ptext58:
 15094                           	opt callstack 0
 15095  00433C                     _MacExecuteCommands:
 15096                           	opt callstack 13
 15097                           
 15098                           ;lorawan.c: 1577: bool done = 0;
 15099                           
 15100                           ; BSR set to: 1
 15101                           ;incstack = 0
 15102  00433C  0E00               	movlw	0
 15103  00433E  0100               	movlb	0	; () banked
 15104  004340  6FAB               	movwf	MacExecuteCommands@done& (0+255),b
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;lorawan.c: 1578: uint8_t *ptr;;lorawan.c: 1579: ptr = buffer;
 15108  004342  C0A6  F0AC         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 15109  004346  C0A7  F0AD         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 15110                           
 15111                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 15112  00434A  D0E7               	goto	l20208
 15113  00434C                     l20172:
 15114                           
 15115                           ; BSR set to: 0
 15116                           ;lorawan.c: 1581: {;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAc
      +                          k = 0;
 15117  00434C  0102               	movlb	2	; () banked
 15118  00434E  51AC               	movf	(_loRa+167)& (0+255),w,b
 15119  004350  0D02               	mullw	2
 15120  004352  0EAE               	movlw	low (_loRa+169)
 15121  004354  24F3               	addwf	prodl,w,c
 15122  004356  6ED9               	movwf	fsr2l,c
 15123  004358  0E02               	movlw	high (_loRa+169)
 15124  00435A  20F4               	addwfc	prodh,w,c
 15125  00435C  6EDA               	movwf	fsr2h,c
 15126  00435E  90DF               	bcf	indf2,0,c
 15127                           
 15128                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 15129  004360  51AC               	movf	(_loRa+167)& (0+255),w,b
 15130  004362  0D02               	mullw	2
 15131  004364  0EAE               	movlw	low (_loRa+169)
 15132  004366  24F3               	addwf	prodl,w,c
 15133  004368  6ED9               	movwf	fsr2l,c
 15134  00436A  0E02               	movlw	high (_loRa+169)
 15135  00436C  20F4               	addwfc	prodh,w,c
 15136  00436E  6EDA               	movwf	fsr2h,c
 15137  004370  92DF               	bcf	indf2,1,c
 15138                           
 15139                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 15140  004372  51AC               	movf	(_loRa+167)& (0+255),w,b
 15141  004374  0D02               	mullw	2
 15142  004376  0EAE               	movlw	low (_loRa+169)
 15143  004378  24F3               	addwf	prodl,w,c
 15144  00437A  6ED9               	movwf	fsr2l,c
 15145  00437C  0E02               	movlw	high (_loRa+169)
 15146  00437E  20F4               	addwfc	prodh,w,c
 15147  004380  6EDA               	movwf	fsr2h,c
 15148  004382  94DF               	bcf	indf2,2,c
 15149                           
 15150                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 15151  004384  51AC               	movf	(_loRa+167)& (0+255),w,b
 15152  004386  0D02               	mullw	2
 15153  004388  0EAE               	movlw	low (_loRa+169)
 15154  00438A  24F3               	addwf	prodl,w,c
 15155  00438C  6ED9               	movwf	fsr2l,c
 15156  00438E  0E02               	movlw	high (_loRa+169)
 15157  004390  20F4               	addwfc	prodh,w,c
 15158  004392  6EDA               	movwf	fsr2h,c
 15159  004394  96DF               	bcf	indf2,3,c
 15160                           
 15161                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 15162  004396  51AC               	movf	(_loRa+167)& (0+255),w,b
 15163  004398  0D02               	mullw	2
 15164  00439A  0EAE               	movlw	low (_loRa+169)
 15165  00439C  24F3               	addwf	prodl,w,c
 15166  00439E  6ED9               	movwf	fsr2l,c
 15167  0043A0  0E02               	movlw	high (_loRa+169)
 15168  0043A2  20F4               	addwfc	prodh,w,c
 15169  0043A4  6EDA               	movwf	fsr2h,c
 15170  0043A6  98DF               	bcf	indf2,4,c
 15171                           
 15172                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 15173  0043A8  51AC               	movf	(_loRa+167)& (0+255),w,b
 15174  0043AA  0D02               	mullw	2
 15175  0043AC  0EAE               	movlw	low (_loRa+169)
 15176  0043AE  24F3               	addwf	prodl,w,c
 15177  0043B0  6ED9               	movwf	fsr2l,c
 15178  0043B2  0E02               	movlw	high (_loRa+169)
 15179  0043B4  20F4               	addwfc	prodh,w,c
 15180  0043B6  6EDA               	movwf	fsr2h,c
 15181  0043B8  9ADF               	bcf	indf2,5,c
 15182                           
 15183                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 15184  0043BA  51AC               	movf	(_loRa+167)& (0+255),w,b
 15185  0043BC  0D02               	mullw	2
 15186  0043BE  0EAE               	movlw	low (_loRa+169)
 15187  0043C0  24F3               	addwf	prodl,w,c
 15188  0043C2  6ED9               	movwf	fsr2l,c
 15189  0043C4  0E02               	movlw	high (_loRa+169)
 15190  0043C6  20F4               	addwfc	prodh,w,c
 15191  0043C8  6EDA               	movwf	fsr2h,c
 15192  0043CA  9CDF               	bcf	indf2,6,c
 15193                           
 15194                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 15195  0043CC  51AC               	movf	(_loRa+167)& (0+255),w,b
 15196  0043CE  0D02               	mullw	2
 15197  0043D0  0EAE               	movlw	low (_loRa+169)
 15198  0043D2  24F3               	addwf	prodl,w,c
 15199  0043D4  6ED9               	movwf	fsr2l,c
 15200  0043D6  0E02               	movlw	high (_loRa+169)
 15201  0043D8  20F4               	addwfc	prodh,w,c
 15202  0043DA  6EDA               	movwf	fsr2h,c
 15203  0043DC  9EDF               	bcf	indf2,7,c
 15204                           
 15205                           ; BSR set to: 2
 15206                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 15207  0043DE  C0AC  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15208  0043E2  C0AD  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15209  0043E6  51AC               	movf	(_loRa+167)& (0+255),w,b
 15210  0043E8  0D02               	mullw	2
 15211  0043EA  0EAD               	movlw	low (_loRa+168)
 15212  0043EC  24F3               	addwf	prodl,w,c
 15213  0043EE  6EE9               	movwf	fsr0l,c
 15214  0043F0  0E02               	movlw	high (_loRa+168)
 15215  0043F2  20F4               	addwfc	prodh,w,c
 15216  0043F4  6EEA               	movwf	fsr0h,c
 15217  0043F6  CFDF FFEF          	movff	indf2,indf0
 15218                           
 15219                           ;lorawan.c: 1595: switch (*ptr ++)
 15220  0043FA  D061               	goto	l20200
 15221  0043FC                     l20176:
 15222                           
 15223                           ; BSR set to: 0
 15224                           ;lorawan.c: 1598: {;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 15225  0043FC  C0AC  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 15226  004400  C0AD  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 15227  004404  EC0C  F04E         	call	_ExecuteLinkCheck	;wreg free
 15228  004408  C060  F0AC         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 15229  00440C  C061  F0AD         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 15230  004410                     l20178:
 15231                           
 15232                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 15233  004410  0102               	movlb	2	; () banked
 15234  004412  51AC               	movf	(_loRa+167)& (0+255),w,b
 15235  004414  0D02               	mullw	2
 15236  004416  0EAD               	movlw	low (_loRa+168)
 15237  004418  24F3               	addwf	prodl,w,c
 15238  00441A  6ED9               	movwf	fsr2l,c
 15239  00441C  0E02               	movlw	high (_loRa+168)
 15240  00441E  20F4               	addwfc	prodh,w,c
 15241  004420  6EDA               	movwf	fsr2h,c
 15242  004422  0EFF               	movlw	255
 15243  004424  6EDF               	movwf	indf2,c
 15244                           
 15245                           ;lorawan.c: 1602: } break;
 15246  004426  D069               	goto	l20202
 15247  004428                     l20180:
 15248                           
 15249                           ; BSR set to: 0
 15250                           ;lorawan.c: 1605: {;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 15251  004428  C0AC  F06F         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 15252  00442C  C0AD  F070         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 15253  004430  EC7E  F024         	call	_ExecuteLinkAdr	;wreg free
 15254  004434  C06F  F0AC         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 15255  004438  C070  F0AD         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 15256                           
 15257                           ;lorawan.c: 1607: } break;
 15258  00443C  D05E               	goto	l20202
 15259  00443E                     l20182:
 15260                           
 15261                           ; BSR set to: 0
 15262                           ;lorawan.c: 1610: {;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 15263  00443E  C0AC  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 15264  004442  C0AD  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 15265  004446  EC04  F049         	call	_ExecuteDutyCycle	;wreg free
 15266  00444A  C060  F0AC         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 15267  00444E  C061  F0AD         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 15268                           
 15269                           ;lorawan.c: 1612: } break;
 15270  004452  D053               	goto	l20202
 15271  004454                     l20184:
 15272                           
 15273                           ; BSR set to: 0
 15274                           ;lorawan.c: 1615: {;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 15275  004454  C0AC  F09E         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 15276  004458  C0AD  F09F         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 15277  00445C  ECE6  F029         	call	_ExecuteRxParamSetupReq	;wreg free
 15278  004460  C09E  F0AC         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 15279  004464  C09F  F0AD         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 15280                           
 15281                           ;lorawan.c: 1617: } break;
 15282  004468  D048               	goto	l20202
 15283  00446A                     l20186:
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;lorawan.c: 1620: {;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 15287  00446A  C0AC  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 15288  00446E  C0AD  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 15289  004472  EC79  F053         	call	_ExecuteDevStatus	;wreg free
 15290  004476  C060  F0AC         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 15291  00447A  C061  F0AD         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 15292                           
 15293                           ;lorawan.c: 1622: } break;
 15294  00447E  D03D               	goto	l20202
 15295  004480                     l20188:
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;lorawan.c: 1625: {;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 15299  004480  C0AC  F09E         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 15300  004484  C0AD  F09F         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 15301  004488  ECA2  F022         	call	_ExecuteNewChannel	;wreg free
 15302  00448C  C09E  F0AC         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 15303  004490  C09F  F0AD         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 15304                           
 15305                           ;lorawan.c: 1628: } break;
 15306  004494  D032               	goto	l20202
 15307  004496                     l20190:
 15308                           
 15309                           ; BSR set to: 0
 15310                           ;lorawan.c: 1631: {;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 15311  004496  C0AC  F067         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 15312  00449A  C0AD  F068         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 15313  00449E  EC5F  F050         	call	_ExecuteRxTimingSetup	;wreg free
 15314  0044A2  C067  F0AC         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 15315  0044A6  C068  F0AD         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 15316                           
 15317                           ;lorawan.c: 1633: } break;
 15318  0044AA  D027               	goto	l20202
 15319  0044AC                     l20192:
 15320                           
 15321                           ; BSR set to: 0
 15322                           ;lorawan.c: 1636: {;lorawan.c: 1637: done = 1;
 15323  0044AC  0E01               	movlw	1
 15324  0044AE  6FAB               	movwf	MacExecuteCommands@done& (0+255),b
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 15328  0044B0  51A8               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15329  0044B2  25A6               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 15330  0044B4  6FAC               	movwf	MacExecuteCommands@ptr& (0+255),b
 15331  0044B6  0E00               	movlw	0
 15332  0044B8  21A7               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 15333  0044BA  6FAD               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 15334  0044BC  D7A9               	goto	l20178
 15335  0044BE                     l20200:
 15336                           
 15337                           ; BSR set to: 2
 15338  0044BE  C0AC  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15339  0044C2  C0AD  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15340  0044C6  0100               	movlb	0	; () banked
 15341  0044C8  4BAC               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 15342  0044CA  2BAD               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 15343  0044CC  50DF               	movf	indf2,w,c
 15344                           
 15345                           ; Switch size 1, requested type "simple"
 15346                           ; Number of cases is 7, Range of values is 2 to 8
 15347                           ; switch strategies available:
 15348                           ; Name         Instructions Cycles
 15349                           ; simple_byte           22    12 (average)
 15350                           ;	Chosen strategy is simple_byte
 15351  0044CE  0A02               	xorlw	2	; case 2
 15352  0044D0  B4D8               	btfsc	status,2,c
 15353  0044D2  D794               	goto	l20176
 15354  0044D4  0A01               	xorlw	1	; case 3
 15355  0044D6  B4D8               	btfsc	status,2,c
 15356  0044D8  D7A7               	goto	l20180
 15357  0044DA  0A07               	xorlw	7	; case 4
 15358  0044DC  B4D8               	btfsc	status,2,c
 15359  0044DE  D7AF               	goto	l20182
 15360  0044E0  0A01               	xorlw	1	; case 5
 15361  0044E2  B4D8               	btfsc	status,2,c
 15362  0044E4  D7B7               	goto	l20184
 15363  0044E6  0A03               	xorlw	3	; case 6
 15364  0044E8  B4D8               	btfsc	status,2,c
 15365  0044EA  D7BF               	goto	l20186
 15366  0044EC  0A01               	xorlw	1	; case 7
 15367  0044EE  B4D8               	btfsc	status,2,c
 15368  0044F0  D7C7               	goto	l20188
 15369  0044F2  0A0F               	xorlw	15	; case 8
 15370  0044F4  B4D8               	btfsc	status,2,c
 15371  0044F6  D7CF               	goto	l20190
 15372  0044F8  D7D9               	goto	l20192
 15373  0044FA                     l20202:
 15374                           
 15375                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&;lora
      +                          wan.c: 1644: (loRa.crtMacCmdIndex < 16))
 15376  0044FA  0102               	movlb	2	; () banked
 15377  0044FC  51AC               	movf	(_loRa+167)& (0+255),w,b
 15378  0044FE  0D02               	mullw	2
 15379  004500  0EAD               	movlw	low (_loRa+168)
 15380  004502  24F3               	addwf	prodl,w,c
 15381  004504  6ED9               	movwf	fsr2l,c
 15382  004506  0E02               	movlw	high (_loRa+168)
 15383  004508  20F4               	addwfc	prodh,w,c
 15384  00450A  6EDA               	movwf	fsr2h,c
 15385  00450C  28DE               	incf	postinc2,w,c
 15386  00450E  B4D8               	btfsc	status,2,c
 15387  004510  D004               	goto	l20208
 15388                           
 15389                           ; BSR set to: 2
 15390  004512  0E10               	movlw	16
 15391  004514  61AC               	cpfslt	(_loRa+167)& (0+255),b
 15392  004516  D001               	goto	l20208
 15393                           
 15394                           ; BSR set to: 2
 15395                           ;lorawan.c: 1645: {;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 15396  004518  2BAC               	incf	(_loRa+167)& (0+255),f,b
 15397  00451A                     l20208:
 15398  00451A  0100               	movlb	0	; () banked
 15399  00451C  51A8               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15400  00451E  25A6               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 15401  004520  6FA9               	movwf	??_MacExecuteCommands& (0+255),b
 15402  004522  0E00               	movlw	0
 15403  004524  21A7               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 15404  004526  6FAA               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15405  004528  51A9               	movf	??_MacExecuteCommands& (0+255),w,b
 15406  00452A  5DAC               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 15407  00452C  51AA               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 15408  00452E  59AD               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 15409  004530  B0D8               	btfsc	status,0,c
 15410  004532  D003               	goto	u22150
 15411                           
 15412                           ; BSR set to: 0
 15413  004534  51AB               	movf	MacExecuteCommands@done& (0+255),w,b
 15414  004536  B4D8               	btfsc	status,2,c
 15415  004538  D709               	goto	l20172
 15416  00453A                     u22150:
 15417                           
 15418                           ; BSR set to: 0
 15419                           ;lorawan.c: 1647: };lorawan.c: 1648: };lorawan.c: 1649: return ptr;
 15420  00453A  C0AC  F0A6         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 15421  00453E  C0AD  F0A7         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 15422                           
 15423                           ; BSR set to: 0
 15424  004542  0012               	return		;funcret
 15425  004544                     __end_of_MacExecuteCommands:
 15426                           	opt callstack 0
 15427                           
 15428 ;; *************** function _ExecuteRxTimingSetup *****************
 15429 ;; Defined at:
 15430 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15431 ;; Parameters:    Size  Location     Type
 15432 ;;  ptr             2    7[BANK0 ] PTR unsigned char 
 15433 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15434 ;; Auto vars:     Size  Location     Type
 15435 ;;  delay           1    9[BANK0 ] unsigned char 
 15436 ;; Return value:  Size  Location     Type
 15437 ;;                  2    7[BANK0 ] PTR unsigned char 
 15438 ;; Registers used:
 15439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15440 ;; Tracked objects:
 15441 ;;		On entry : 0/0
 15442 ;;		On exit  : 0/0
 15443 ;;		Unchanged: 0/0
 15444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15448 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15449 ;;Total ram usage:        3 bytes
 15450 ;; Hardware stack levels used:    1
 15451 ;; Hardware stack levels required when called:    9
 15452 ;; This function calls:
 15453 ;;		_UpdateReceiveDelays
 15454 ;; This function is called by:
 15455 ;;		_MacExecuteCommands
 15456 ;; This function uses a non-reentrant model
 15457 ;;
 15458                           
 15459                           	psect	text59
 15460  00A0BE                     __ptext59:
 15461                           	opt callstack 0
 15462  00A0BE                     _ExecuteRxTimingSetup:
 15463                           	opt callstack 14
 15464                           
 15465                           ;lorawan.c: 1661: uint8_t delay;;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 15466                           
 15467                           ; BSR set to: 0
 15468                           ;incstack = 0
 15469  00A0BE  C067  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 15470  00A0C2  C068  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 15471  00A0C6  50DF               	movf	indf2,w,c
 15472  00A0C8  0B0F               	andlw	15
 15473  00A0CA  0100               	movlb	0	; () banked
 15474  00A0CC  6F69               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 15475                           
 15476                           ; BSR set to: 0
 15477                           ;lorawan.c: 1664: ptr++;
 15478  00A0CE  4B67               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 15479  00A0D0  2B68               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 15480                           
 15481                           ; BSR set to: 0
 15482                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 15483  00A0D2  5169               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 15484  00A0D4  EC4F  F04C         	call	_UpdateReceiveDelays
 15485                           
 15486                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 15487  00A0D8  0102               	movlb	2	; () banked
 15488  00A0DA  8109               	bsf	(_loRa+4)& (0+255),0,b
 15489                           
 15490                           ; BSR set to: 2
 15491                           ;lorawan.c: 1669: return ptr;
 15492  00A0DC  C067  F067         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 15493  00A0E0  C068  F068         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 15494                           
 15495                           ; BSR set to: 2
 15496  00A0E4  0012               	return		;funcret
 15497  00A0E6                     __end_of_ExecuteRxTimingSetup:
 15498                           	opt callstack 0
 15499                           
 15500 ;; *************** function _UpdateReceiveDelays *****************
 15501 ;; Defined at:
 15502 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15503 ;; Parameters:    Size  Location     Type
 15504 ;;  delay           1    wreg     unsigned char 
 15505 ;; Auto vars:     Size  Location     Type
 15506 ;;  delay           1    6[BANK0 ] unsigned char 
 15507 ;; Return value:  Size  Location     Type
 15508 ;;                  1    wreg      void 
 15509 ;; Registers used:
 15510 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15511 ;; Tracked objects:
 15512 ;;		On entry : 0/0
 15513 ;;		On exit  : 0/0
 15514 ;;		Unchanged: 0/0
 15515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15517 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15519 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15520 ;;Total ram usage:        1 bytes
 15521 ;; Hardware stack levels used:    1
 15522 ;; Hardware stack levels required when called:    8
 15523 ;; This function calls:
 15524 ;;		___wmul
 15525 ;; This function is called by:
 15526 ;;		_LORAWAN_RxDone
 15527 ;;		_ExecuteRxTimingSetup
 15528 ;; This function uses a non-reentrant model
 15529 ;;
 15530                           
 15531                           	psect	text60
 15532  00989E                     __ptext60:
 15533                           	opt callstack 0
 15534  00989E                     _UpdateReceiveDelays:
 15535                           	opt callstack 16
 15536                           
 15537                           ; BSR set to: 2
 15538                           ;incstack = 0
 15539                           ;UpdateReceiveDelays@delay stored from wreg
 15540  00989E  0100               	movlb	0	; () banked
 15541  0098A0  6F66               	movwf	UpdateReceiveDelays@delay& (0+255),b
 15542                           
 15543                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 15544  0098A2  C066  F060         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 15545  0098A6  0100               	movlb	0	; () banked
 15546  0098A8  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 15547  0098AA  0E03               	movlw	3
 15548  0098AC  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15549  0098AE  0EE8               	movlw	232
 15550  0098B0  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15551  0098B2  EC73  F050         	call	___wmul	;wreg free
 15552  0098B6  C060  F299         	movff	?___wmul,_loRa+148
 15553  0098BA  C061  F29A         	movff	?___wmul+1,_loRa+149
 15554                           
 15555                           ;lorawan.c: 2029: if (delay == 0)
 15556  0098BE  0100               	movlb	0	; () banked
 15557  0098C0  5166               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 15558  0098C2  A4D8               	btfss	status,2,c
 15559  0098C4  D005               	goto	l19126
 15560                           
 15561                           ; BSR set to: 0
 15562                           ;lorawan.c: 2030: {;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 15563  0098C6  0E03               	movlw	3
 15564  0098C8  0102               	movlb	2	; () banked
 15565  0098CA  6F9A               	movwf	(_loRa+149)& (0+255),b
 15566  0098CC  0EE8               	movlw	232
 15567  0098CE  6F99               	movwf	(_loRa+148)& (0+255),b
 15568  0098D0                     l19126:
 15569                           
 15570                           ;lorawan.c: 2032: };lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protoc
      +                          olParameters.receiveDelay1 + 1000;
 15571  0098D0  0EE8               	movlw	232
 15572  0098D2  0102               	movlb	2	; () banked
 15573  0098D4  2599               	addwf	(_loRa+148)& (0+255),w,b
 15574  0098D6  6F9B               	movwf	(_loRa+150)& (0+255),b
 15575  0098D8  0E03               	movlw	3
 15576  0098DA  219A               	addwfc	(_loRa+149)& (0+255),w,b
 15577  0098DC  6F9C               	movwf	(_loRa+151)& (0+255),b
 15578                           
 15579                           ; BSR set to: 2
 15580  0098DE  0012               	return		;funcret
 15581  0098E0                     __end_of_UpdateReceiveDelays:
 15582                           	opt callstack 0
 15583                           
 15584 ;; *************** function ___wmul *****************
 15585 ;; Defined at:
 15586 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 15587 ;; Parameters:    Size  Location     Type
 15588 ;;  multiplier      2    0[BANK0 ] unsigned int 
 15589 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 15590 ;; Auto vars:     Size  Location     Type
 15591 ;;  product         2    4[BANK0 ] unsigned int 
 15592 ;; Return value:  Size  Location     Type
 15593 ;;                  2    0[BANK0 ] unsigned int 
 15594 ;; Registers used:
 15595 ;;		wreg, status,2, status,0, prodl, prodh
 15596 ;; Tracked objects:
 15597 ;;		On entry : 0/0
 15598 ;;		On exit  : 0/0
 15599 ;;		Unchanged: 0/0
 15600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15602 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15604 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15605 ;;Total ram usage:        6 bytes
 15606 ;; Hardware stack levels used:    1
 15607 ;; Hardware stack levels required when called:    7
 15608 ;; This function calls:
 15609 ;;		Nothing
 15610 ;; This function is called by:
 15611 ;;		_UpdateReceiveDelays
 15612 ;; This function uses a non-reentrant model
 15613 ;;
 15614                           
 15615                           	psect	text61
 15616  00A0E6                     __ptext61:
 15617                           	opt callstack 0
 15618  00A0E6                     ___wmul:
 15619                           	opt callstack 16
 15620                           
 15621                           ; BSR set to: 2
 15622                           ;incstack = 0
 15623  00A0E6  0100               	movlb	0	; () banked
 15624  00A0E8  5160               	movf	___wmul@multiplier& (0+255),w,b
 15625  00A0EA  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15626  00A0EC  CFF3 F064          	movff	prodl,___wmul@product
 15627  00A0F0  CFF4 F065          	movff	prodh,___wmul@product+1
 15628  00A0F4  5160               	movf	___wmul@multiplier& (0+255),w,b
 15629  00A0F6  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15630  00A0F8  50F3               	movf	prodl,w,c
 15631  00A0FA  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15632  00A0FC  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15633  00A0FE  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15634  00A100  50F3               	movf	prodl,w,c
 15635  00A102  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15636                           
 15637                           ; BSR set to: 0
 15638  00A104  C064  F060         	movff	___wmul@product,?___wmul
 15639  00A108  C065  F061         	movff	___wmul@product+1,?___wmul+1
 15640                           
 15641                           ; BSR set to: 0
 15642  00A10C  0012               	return		;funcret
 15643  00A10E                     __end_of___wmul:
 15644                           	opt callstack 0
 15645                           
 15646 ;; *************** function _ExecuteRxParamSetupReq *****************
 15647 ;; Defined at:
 15648 ;;		line 741 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15649 ;; Parameters:    Size  Location     Type
 15650 ;;  ptr             2   62[BANK0 ] PTR unsigned char 
 15651 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15652 ;; Auto vars:     Size  Location     Type
 15653 ;;  frequency       4   64[BANK0 ] unsigned long 
 15654 ;;  dlSettings      1   68[BANK0 ] struct .
 15655 ;; Return value:  Size  Location     Type
 15656 ;;                  2   62[BANK0 ] PTR unsigned char 
 15657 ;; Registers used:
 15658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15659 ;; Tracked objects:
 15660 ;;		On entry : 0/0
 15661 ;;		On exit  : 0/0
 15662 ;;		Unchanged: 0/0
 15663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15664 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15665 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15667 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15668 ;;Total ram usage:        7 bytes
 15669 ;; Hardware stack levels used:    1
 15670 ;; Hardware stack levels required when called:    8
 15671 ;; This function calls:
 15672 ;;		_UpdateReceiveWindow2Parameters
 15673 ;;		_ValidateDataRate
 15674 ;;		_ValidateFrequency
 15675 ;;		_ValidateRxOffset
 15676 ;;		___lmul
 15677 ;; This function is called by:
 15678 ;;		_MacExecuteCommands
 15679 ;; This function uses a non-reentrant model
 15680 ;;
 15681                           
 15682                           	psect	text62
 15683  0053CC                     __ptext62:
 15684                           	opt callstack 0
 15685  0053CC                     _ExecuteRxParamSetupReq:
 15686                           	opt callstack 15
 15687                           
 15688                           ;lorawan_eu.c: 748: dlSettings.value = *(ptr++);
 15689                           
 15690                           ; BSR set to: 0
 15691                           ;incstack = 0
 15692  0053CC  C09E  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15693  0053D0  C09F  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15694  0053D4  50DF               	movf	indf2,w,c
 15695  0053D6  0100               	movlb	0	; () banked
 15696  0053D8  6FA4               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 15697                           
 15698                           ; BSR set to: 0
 15699  0053DA  4B9E               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 15700  0053DC  2B9F               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 15701                           
 15702                           ; BSR set to: 0
 15703                           ;lorawan_eu.c: 750: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15704  0053DE  C09E  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15705  0053E2  C09F  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15706  0053E6  0EFF               	movlw	255
 15707  0053E8  14DE               	andwf	postinc2,w,c
 15708  0053EA  6FA0               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15709  0053EC  0EFF               	movlw	255
 15710  0053EE  14DE               	andwf	postinc2,w,c
 15711  0053F0  6FA1               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15712  0053F2  0EFF               	movlw	255
 15713  0053F4  14DE               	andwf	postinc2,w,c
 15714  0053F6  6FA2               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15715  0053F8  0E00               	movlw	0
 15716  0053FA  14DE               	andwf	postinc2,w,c
 15717  0053FC  6FA3               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15718                           
 15719                           ; BSR set to: 0
 15720                           ;lorawan_eu.c: 751: frequency = frequency * 100;
 15721  0053FE  C0A0  F092         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 15722  005402  C0A1  F093         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 15723  005406  C0A2  F094         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 15724  00540A  C0A3  F095         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 15725  00540E  0E64               	movlw	100
 15726  005410  6F96               	movwf	___lmul@multiplicand& (0+255),b
 15727  005412  0E00               	movlw	0
 15728  005414  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15729  005416  0E00               	movlw	0
 15730  005418  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15731  00541A  0E00               	movlw	0
 15732  00541C  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15733  00541E  ECAD  F048         	call	___lmul	;wreg free
 15734  005422  C092  F0A0         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 15735  005426  C093  F0A1         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 15736  00542A  C094  F0A2         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 15737  00542E  C095  F0A3         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 15738                           
 15739                           ;lorawan_eu.c: 752: ptr = ptr + 3;
 15740  005432  0E03               	movlw	3
 15741  005434  0100               	movlb	0	; () banked
 15742  005436  259E               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 15743  005438  6F9E               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 15744  00543A  0E00               	movlw	0
 15745  00543C  219F               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 15746  00543E  6F9F               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 15747                           
 15748                           ; BSR set to: 0
 15749                           ;lorawan_eu.c: 754: if (ValidateFrequency (frequency) == OK)
 15750  005440  C0A0  F060         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 15751  005444  C0A1  F061         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 15752  005448  C0A2  F062         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 15753  00544C  C0A3  F063         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 15754  005450  EC8B  F045         	call	_ValidateFrequency	;wreg free
 15755  005454  0900               	iorlw	0
 15756  005456  A4D8               	btfss	status,2,c
 15757  005458  D00A               	goto	l19642
 15758                           
 15759                           ;lorawan_eu.c: 755: {;lorawan_eu.c: 756: loRa.macCommands[loRa.crtMacCmdIndex].channelAc
      +                          k = 1;
 15760  00545A  0102               	movlb	2	; () banked
 15761  00545C  51AC               	movf	(_loRa+167)& (0+255),w,b
 15762  00545E  0D02               	mullw	2
 15763  005460  0EAE               	movlw	low (_loRa+169)
 15764  005462  24F3               	addwf	prodl,w,c
 15765  005464  6ED9               	movwf	fsr2l,c
 15766  005466  0E02               	movlw	high (_loRa+169)
 15767  005468  20F4               	addwfc	prodh,w,c
 15768  00546A  6EDA               	movwf	fsr2h,c
 15769  00546C  86DF               	bsf	indf2,3,c
 15770  00546E                     l19642:
 15771                           
 15772                           ;lorawan_eu.c: 757: };lorawan_eu.c: 759: if (ValidateDataRate (dlSettings.bits.rx2DataRa
      +                          te) == OK)
 15773  00546E  0100               	movlb	0	; () banked
 15774  005470  51A4               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15775  005472  0B0F               	andlw	15
 15776  005474  EC9E  F052         	call	_ValidateDataRate
 15777  005478  0900               	iorlw	0
 15778  00547A  A4D8               	btfss	status,2,c
 15779  00547C  D00A               	goto	l19646
 15780                           
 15781                           ;lorawan_eu.c: 760: {;lorawan_eu.c: 761: loRa.macCommands[loRa.crtMacCmdIndex].dataRateR
      +                          eceiveWindowAck = 1;
 15782  00547E  0102               	movlb	2	; () banked
 15783  005480  51AC               	movf	(_loRa+167)& (0+255),w,b
 15784  005482  0D02               	mullw	2
 15785  005484  0EAE               	movlw	low (_loRa+169)
 15786  005486  24F3               	addwf	prodl,w,c
 15787  005488  6ED9               	movwf	fsr2l,c
 15788  00548A  0E02               	movlw	high (_loRa+169)
 15789  00548C  20F4               	addwfc	prodh,w,c
 15790  00548E  6EDA               	movwf	fsr2h,c
 15791  005490  88DF               	bsf	indf2,4,c
 15792  005492                     l19646:
 15793                           
 15794                           ;lorawan_eu.c: 762: };lorawan_eu.c: 764: if (ValidateRxOffset (dlSettings.bits.rx1DROffs
      +                          et) == OK)
 15795  005492  0100               	movlb	0	; () banked
 15796  005494  39A4               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15797  005496  0B07               	andlw	7
 15798  005498  EC92  F052         	call	_ValidateRxOffset
 15799  00549C  0900               	iorlw	0
 15800  00549E  A4D8               	btfss	status,2,c
 15801  0054A0  D00A               	goto	l1145
 15802                           
 15803                           ;lorawan_eu.c: 765: {;lorawan_eu.c: 766: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffe
      +                          stAck = 1;
 15804  0054A2  0102               	movlb	2	; () banked
 15805  0054A4  51AC               	movf	(_loRa+167)& (0+255),w,b
 15806  0054A6  0D02               	mullw	2
 15807  0054A8  0EAE               	movlw	low (_loRa+169)
 15808  0054AA  24F3               	addwf	prodl,w,c
 15809  0054AC  6ED9               	movwf	fsr2l,c
 15810  0054AE  0E02               	movlw	high (_loRa+169)
 15811  0054B0  20F4               	addwfc	prodh,w,c
 15812  0054B2  6EDA               	movwf	fsr2h,c
 15813  0054B4  8ADF               	bsf	indf2,5,c
 15814  0054B6                     l1145:
 15815                           
 15816                           ;lorawan_eu.c: 767: };lorawan_eu.c: 769: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dat
      +                          aRateReceiveWindowAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) &
      +                          & (loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck == 1))
 15817  0054B6  0102               	movlb	2	; () banked
 15818  0054B8  51AC               	movf	(_loRa+167)& (0+255),w,b
 15819  0054BA  0D02               	mullw	2
 15820  0054BC  0EAE               	movlw	low (_loRa+169)
 15821  0054BE  24F3               	addwf	prodl,w,c
 15822  0054C0  6ED9               	movwf	fsr2l,c
 15823  0054C2  0E02               	movlw	high (_loRa+169)
 15824  0054C4  20F4               	addwfc	prodh,w,c
 15825  0054C6  6EDA               	movwf	fsr2h,c
 15826  0054C8  A8DF               	btfss	indf2,4,c
 15827  0054CA  D029               	goto	l19660
 15828                           
 15829                           ; BSR set to: 2
 15830  0054CC  51AC               	movf	(_loRa+167)& (0+255),w,b
 15831  0054CE  0D02               	mullw	2
 15832  0054D0  0EAE               	movlw	low (_loRa+169)
 15833  0054D2  24F3               	addwf	prodl,w,c
 15834  0054D4  6ED9               	movwf	fsr2l,c
 15835  0054D6  0E02               	movlw	high (_loRa+169)
 15836  0054D8  20F4               	addwfc	prodh,w,c
 15837  0054DA  6EDA               	movwf	fsr2h,c
 15838  0054DC  A6DF               	btfss	indf2,3,c
 15839  0054DE  D01F               	goto	l19660
 15840                           
 15841                           ; BSR set to: 2
 15842  0054E0  51AC               	movf	(_loRa+167)& (0+255),w,b
 15843  0054E2  0D02               	mullw	2
 15844  0054E4  0EAE               	movlw	low (_loRa+169)
 15845  0054E6  24F3               	addwf	prodl,w,c
 15846  0054E8  6ED9               	movwf	fsr2l,c
 15847  0054EA  0E02               	movlw	high (_loRa+169)
 15848  0054EC  20F4               	addwfc	prodh,w,c
 15849  0054EE  6EDA               	movwf	fsr2h,c
 15850  0054F0  AADF               	btfss	indf2,5,c
 15851  0054F2  D015               	goto	l19660
 15852                           
 15853                           ; BSR set to: 2
 15854                           ;lorawan_eu.c: 770: {;lorawan_eu.c: 771: loRa.offset = dlSettings.bits.rx1DROffset;
 15855  0054F4  0100               	movlb	0	; () banked
 15856  0054F6  39A4               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15857  0054F8  0B07               	andlw	7
 15858  0054FA  0102               	movlb	2	; () banked
 15859  0054FC  6FF4               	movwf	(_loRa+239)& (0+255),b
 15860                           
 15861                           ; BSR set to: 2
 15862                           ;lorawan_eu.c: 772: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 15863  0054FE  C0A0  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 15864  005502  C0A1  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 15865  005506  C0A2  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 15866  00550A  C0A3  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 15867  00550E  0100               	movlb	0	; () banked
 15868  005510  51A4               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15869  005512  0B0F               	andlw	15
 15870  005514  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 15871  005516  ECC1  F052         	call	_UpdateReceiveWindow2Parameters	;wreg free
 15872                           
 15873                           ;lorawan_eu.c: 773: loRa.macStatus.secondReceiveWindowModified = 1;
 15874  00551A  0102               	movlb	2	; () banked
 15875  00551C  8F08               	bsf	(_loRa+3)& (0+255),7,b
 15876  00551E                     l19660:
 15877                           
 15878                           ; BSR set to: 2
 15879                           ;lorawan_eu.c: 774: };lorawan_eu.c: 776: return ptr;
 15880  00551E  C09E  F09E         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 15881  005522  C09F  F09F         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 15882                           
 15883                           ; BSR set to: 2
 15884  005526  0012               	return		;funcret
 15885  005528                     __end_of_ExecuteRxParamSetupReq:
 15886                           	opt callstack 0
 15887                           
 15888 ;; *************** function _ValidateRxOffset *****************
 15889 ;; Defined at:
 15890 ;;		line 1077 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15891 ;; Parameters:    Size  Location     Type
 15892 ;;  rxOffset        1    wreg     unsigned char 
 15893 ;; Auto vars:     Size  Location     Type
 15894 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 15895 ;;  result          1    1[BANK0 ] enum E6118
 15896 ;; Return value:  Size  Location     Type
 15897 ;;                  1    wreg      enum E6118
 15898 ;; Registers used:
 15899 ;;		wreg, status,2, status,0
 15900 ;; Tracked objects:
 15901 ;;		On entry : 0/0
 15902 ;;		On exit  : 0/0
 15903 ;;		Unchanged: 0/0
 15904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15908 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15909 ;;Total ram usage:        2 bytes
 15910 ;; Hardware stack levels used:    1
 15911 ;; Hardware stack levels required when called:    7
 15912 ;; This function calls:
 15913 ;;		Nothing
 15914 ;; This function is called by:
 15915 ;;		_ExecuteRxParamSetupReq
 15916 ;; This function uses a non-reentrant model
 15917 ;;
 15918                           
 15919                           	psect	text63
 15920  00A524                     __ptext63:
 15921                           	opt callstack 0
 15922  00A524                     _ValidateRxOffset:
 15923                           	opt callstack 15
 15924                           
 15925                           ; BSR set to: 2
 15926                           ;incstack = 0
 15927                           ;ValidateRxOffset@rxOffset stored from wreg
 15928  00A524  0100               	movlb	0	; () banked
 15929  00A526  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 15930                           
 15931                           ;lorawan_eu.c: 1079: LorawanError_t result = OK;
 15932  00A528  0E00               	movlw	0
 15933  00A52A  0100               	movlb	0	; () banked
 15934  00A52C  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 15935                           
 15936                           ; BSR set to: 0
 15937                           ;lorawan_eu.c: 1081: if (rxOffset > 5)
 15938  00A52E  0E05               	movlw	5
 15939  00A530  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 15940  00A532  D002               	goto	l1241
 15941                           
 15942                           ; BSR set to: 0
 15943                           ;lorawan_eu.c: 1082: {;lorawan_eu.c: 1083: result = INVALID_PARAMETER;
 15944  00A534  0E03               	movlw	3
 15945  00A536  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 15946  00A538                     l1241:
 15947                           
 15948                           ; BSR set to: 0
 15949                           ;lorawan_eu.c: 1084: };lorawan_eu.c: 1086: return result;
 15950  00A538  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 15951                           
 15952                           ; BSR set to: 0
 15953  00A53A  0012               	return		;funcret
 15954  00A53C                     __end_of_ValidateRxOffset:
 15955                           	opt callstack 0
 15956                           
 15957 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 15958 ;; Defined at:
 15959 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15960 ;; Parameters:    Size  Location     Type
 15961 ;;  frequency       4    0[BANK0 ] unsigned long 
 15962 ;;  dataRate        1    4[BANK0 ] unsigned char 
 15963 ;; Auto vars:     Size  Location     Type
 15964 ;;		None
 15965 ;; Return value:  Size  Location     Type
 15966 ;;                  1    wreg      void 
 15967 ;; Registers used:
 15968 ;;		None
 15969 ;; Tracked objects:
 15970 ;;		On entry : 0/0
 15971 ;;		On exit  : 0/0
 15972 ;;		Unchanged: 0/0
 15973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15974 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15977 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15978 ;;Total ram usage:        5 bytes
 15979 ;; Hardware stack levels used:    1
 15980 ;; Hardware stack levels required when called:    7
 15981 ;; This function calls:
 15982 ;;		Nothing
 15983 ;; This function is called by:
 15984 ;;		_ExecuteRxParamSetupReq
 15985 ;;		_LORAWAN_SetReceiveWindow2Parameters
 15986 ;; This function uses a non-reentrant model
 15987 ;;
 15988                           
 15989                           	psect	text64
 15990  00A582                     __ptext64:
 15991                           	opt callstack 0
 15992  00A582                     _UpdateReceiveWindow2Parameters:
 15993                           	opt callstack 15
 15994                           
 15995                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 15996                           
 15997                           ; BSR set to: 0
 15998                           ;incstack = 0
 15999  00A582  C064  F221         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 16000                           
 16001                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 16002  00A586  C060  F21D         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 16003  00A58A  C061  F21E         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 16004  00A58E  C062  F21F         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 16005  00A592  C063  F220         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 16006  00A596  0012               	return		;funcret
 16007  00A598                     __end_of_UpdateReceiveWindow2Parameters:
 16008                           	opt callstack 0
 16009                           
 16010 ;; *************** function _ExecuteNewChannel *****************
 16011 ;; Defined at:
 16012 ;;		line 678 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16013 ;; Parameters:    Size  Location     Type
 16014 ;;  ptr             2   62[BANK0 ] PTR unsigned char 
 16015 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16016 ;; Auto vars:     Size  Location     Type
 16017 ;;  frequency       4   65[BANK0 ] unsigned long 
 16018 ;;  channelIndex    1   69[BANK0 ] unsigned char 
 16019 ;;  drRange         1   64[BANK0 ] struct .
 16020 ;; Return value:  Size  Location     Type
 16021 ;;                  2   62[BANK0 ] PTR unsigned char 
 16022 ;; Registers used:
 16023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16024 ;; Tracked objects:
 16025 ;;		On entry : 0/0
 16026 ;;		On exit  : 0/0
 16027 ;;		Unchanged: 0/0
 16028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16029 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16030 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16032 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16033 ;;Total ram usage:        8 bytes
 16034 ;; Hardware stack levels used:    1
 16035 ;; Hardware stack levels required when called:    9
 16036 ;; This function calls:
 16037 ;;		_LORAWAN_SetChannelIdStatus
 16038 ;;		_UpdateChannelIdStatus
 16039 ;;		_UpdateDataRange
 16040 ;;		_UpdateDutyCycle
 16041 ;;		_UpdateFrequency
 16042 ;;		_ValidateChannelId
 16043 ;;		_ValidateDataRange
 16044 ;;		_ValidateFrequency
 16045 ;;		___lmul
 16046 ;; This function is called by:
 16047 ;;		_MacExecuteCommands
 16048 ;; This function uses a non-reentrant model
 16049 ;;
 16050                           
 16051                           	psect	text65
 16052  004544                     __ptext65:
 16053                           	opt callstack 0
 16054  004544                     _ExecuteNewChannel:
 16055                           	opt callstack 14
 16056                           
 16057                           ;lorawan_eu.c: 684: channelIndex = *(ptr++);
 16058                           
 16059                           ;incstack = 0
 16060  004544  C09E  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16061  004548  C09F  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16062  00454C  50DF               	movf	indf2,w,c
 16063  00454E  0100               	movlb	0	; () banked
 16064  004550  6FA5               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 16065                           
 16066                           ; BSR set to: 0
 16067  004552  4B9E               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 16068  004554  2B9F               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 16069                           
 16070                           ; BSR set to: 0
 16071                           ;lorawan_eu.c: 686: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 16072  004556  C09E  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16073  00455A  C09F  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16074  00455E  0EFF               	movlw	255
 16075  004560  14DE               	andwf	postinc2,w,c
 16076  004562  6FA1               	movwf	ExecuteNewChannel@frequency& (0+255),b
 16077  004564  0EFF               	movlw	255
 16078  004566  14DE               	andwf	postinc2,w,c
 16079  004568  6FA2               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 16080  00456A  0EFF               	movlw	255
 16081  00456C  14DE               	andwf	postinc2,w,c
 16082  00456E  6FA3               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 16083  004570  0E00               	movlw	0
 16084  004572  14DE               	andwf	postinc2,w,c
 16085  004574  6FA4               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 16086                           
 16087                           ; BSR set to: 0
 16088                           ;lorawan_eu.c: 687: frequency = frequency * 100;
 16089  004576  C0A1  F092         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 16090  00457A  C0A2  F093         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 16091  00457E  C0A3  F094         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 16092  004582  C0A4  F095         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 16093  004586  0E64               	movlw	100
 16094  004588  6F96               	movwf	___lmul@multiplicand& (0+255),b
 16095  00458A  0E00               	movlw	0
 16096  00458C  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16097  00458E  0E00               	movlw	0
 16098  004590  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16099  004592  0E00               	movlw	0
 16100  004594  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16101  004596  ECAD  F048         	call	___lmul	;wreg free
 16102  00459A  C092  F0A1         	movff	?___lmul,ExecuteNewChannel@frequency
 16103  00459E  C093  F0A2         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 16104  0045A2  C094  F0A3         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 16105  0045A6  C095  F0A4         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 16106                           
 16107                           ;lorawan_eu.c: 688: ptr = ptr + 3;
 16108  0045AA  0E03               	movlw	3
 16109  0045AC  0100               	movlb	0	; () banked
 16110  0045AE  259E               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 16111  0045B0  6F9E               	movwf	ExecuteNewChannel@ptr& (0+255),b
 16112  0045B2  0E00               	movlw	0
 16113  0045B4  219F               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 16114  0045B6  6F9F               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 16115                           
 16116                           ; BSR set to: 0
 16117                           ;lorawan_eu.c: 690: drRange.value = *(ptr++);
 16118  0045B8  C09E  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16119  0045BC  C09F  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16120  0045C0  50DF               	movf	indf2,w,c
 16121  0045C2  6FA0               	movwf	ExecuteNewChannel@drRange& (0+255),b
 16122                           
 16123                           ; BSR set to: 0
 16124  0045C4  4B9E               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 16125  0045C6  2B9F               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 16126                           
 16127                           ; BSR set to: 0
 16128                           ;lorawan_eu.c: 692: if (ValidateChannelId (channelIndex, 0) == OK)
 16129  0045C8  0E00               	movlw	0
 16130  0045CA  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16131  0045CC  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16132  0045CE  ECC2  F050         	call	_ValidateChannelId
 16133  0045D2  0900               	iorlw	0
 16134  0045D4  A4D8               	btfss	status,2,c
 16135  0045D6  D02F               	goto	l1128
 16136                           
 16137                           ;lorawan_eu.c: 693: {;lorawan_eu.c: 694: if ( (ValidateFrequency (frequency) == OK) || (
      +                          frequency == 0) )
 16138  0045D8  C0A1  F060         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 16139  0045DC  C0A2  F061         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 16140  0045E0  C0A3  F062         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 16141  0045E4  C0A4  F063         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 16142  0045E8  EC8B  F045         	call	_ValidateFrequency	;wreg free
 16143  0045EC  0900               	iorlw	0
 16144  0045EE  B4D8               	btfsc	status,2,c
 16145  0045F0  D007               	goto	u21240
 16146  0045F2  0100               	movlb	0	; () banked
 16147  0045F4  51A1               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16148  0045F6  11A2               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16149  0045F8  11A3               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16150  0045FA  11A4               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16151  0045FC  A4D8               	btfss	status,2,c
 16152  0045FE  D00A               	goto	l19600
 16153  004600                     u21240:
 16154                           
 16155                           ;lorawan_eu.c: 695: {;lorawan_eu.c: 696: loRa.macCommands[loRa.crtMacCmdIndex].channelFr
      +                          equencyAck = 1;
 16156  004600  0102               	movlb	2	; () banked
 16157  004602  51AC               	movf	(_loRa+167)& (0+255),w,b
 16158  004604  0D02               	mullw	2
 16159  004606  0EAE               	movlw	low (_loRa+169)
 16160  004608  24F3               	addwf	prodl,w,c
 16161  00460A  6ED9               	movwf	fsr2l,c
 16162  00460C  0E02               	movlw	high (_loRa+169)
 16163  00460E  20F4               	addwfc	prodh,w,c
 16164  004610  6EDA               	movwf	fsr2h,c
 16165  004612  8EDF               	bsf	indf2,7,c
 16166  004614                     l19600:
 16167                           
 16168                           ;lorawan_eu.c: 697: };lorawan_eu.c: 699: if (ValidateDataRange (drRange.value) == OK)
 16169  004614  0100               	movlb	0	; () banked
 16170  004616  51A0               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 16171  004618  ECA2  F04B         	call	_ValidateDataRange
 16172  00461C  0900               	iorlw	0
 16173  00461E  A4D8               	btfss	status,2,c
 16174  004620  D00A               	goto	l1128
 16175                           
 16176                           ;lorawan_eu.c: 700: {;lorawan_eu.c: 701: loRa.macCommands[loRa.crtMacCmdIndex].dataRateR
      +                          angeAck = 1;
 16177  004622  0102               	movlb	2	; () banked
 16178  004624  51AC               	movf	(_loRa+167)& (0+255),w,b
 16179  004626  0D02               	mullw	2
 16180  004628  0EAE               	movlw	low (_loRa+169)
 16181  00462A  24F3               	addwf	prodl,w,c
 16182  00462C  6ED9               	movwf	fsr2l,c
 16183  00462E  0E02               	movlw	high (_loRa+169)
 16184  004630  20F4               	addwfc	prodh,w,c
 16185  004632  6EDA               	movwf	fsr2h,c
 16186  004634  8CDF               	bsf	indf2,6,c
 16187  004636                     l1128:
 16188                           
 16189                           ;lorawan_eu.c: 702: };lorawan_eu.c: 703: };lorawan_eu.c: 705: if ( (loRa.macCommands[loR
      +                          a.crtMacCmdIndex].channelFrequencyAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].da
      +                          taRateRangeAck == 1) )
 16190  004636  0102               	movlb	2	; () banked
 16191  004638  51AC               	movf	(_loRa+167)& (0+255),w,b
 16192  00463A  0D02               	mullw	2
 16193  00463C  0EAE               	movlw	low (_loRa+169)
 16194  00463E  24F3               	addwf	prodl,w,c
 16195  004640  6ED9               	movwf	fsr2l,c
 16196  004642  0E02               	movlw	high (_loRa+169)
 16197  004644  20F4               	addwfc	prodh,w,c
 16198  004646  6EDA               	movwf	fsr2h,c
 16199  004648  AEDF               	btfss	indf2,7,c
 16200  00464A  D06D               	goto	l19622
 16201                           
 16202                           ; BSR set to: 2
 16203  00464C  51AC               	movf	(_loRa+167)& (0+255),w,b
 16204  00464E  0D02               	mullw	2
 16205  004650  0EAE               	movlw	low (_loRa+169)
 16206  004652  24F3               	addwf	prodl,w,c
 16207  004654  6ED9               	movwf	fsr2l,c
 16208  004656  0E02               	movlw	high (_loRa+169)
 16209  004658  20F4               	addwfc	prodh,w,c
 16210  00465A  6EDA               	movwf	fsr2h,c
 16211  00465C  ACDF               	btfss	indf2,6,c
 16212  00465E  D063               	goto	l19622
 16213                           
 16214                           ; BSR set to: 2
 16215                           ;lorawan_eu.c: 706: {;lorawan_eu.c: 707: if (loRa.lastUsedChannelIndex < 16)
 16216  004660  0E10               	movlw	16
 16217  004662  61DF               	cpfslt	(_loRa+218)& (0+255),b
 16218  004664  D02D               	goto	l19614
 16219                           
 16220                           ; BSR set to: 2
 16221                           ;lorawan_eu.c: 708: {;lorawan_eu.c: 709: if (frequency != 0)
 16222  004666  0100               	movlb	0	; () banked
 16223  004668  51A1               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16224  00466A  11A2               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16225  00466C  11A3               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16226  00466E  11A4               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16227  004670  B4D8               	btfsc	status,2,c
 16228  004672  D020               	goto	l19612
 16229                           
 16230                           ; BSR set to: 0
 16231                           ;lorawan_eu.c: 710: {;lorawan_eu.c: 711: UpdateFrequency (channelIndex, frequency);
 16232  004674  C0A1  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16233  004678  C0A2  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16234  00467C  C0A3  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16235  004680  C0A4  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16236  004684  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16237  004686  EC6B  F04D         	call	_UpdateFrequency
 16238                           
 16239                           ;lorawan_eu.c: 712: UpdateDataRange (channelIndex, drRange.value);
 16240  00468A  C0A0  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16241  00468E  0100               	movlb	0	; () banked
 16242  004690  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16243  004692  ECCB  F031         	call	_UpdateDataRange
 16244                           
 16245                           ;lorawan_eu.c: 713: UpdateDutyCycle (channelIndex, 302);
 16246  004696  0E01               	movlw	1
 16247  004698  0100               	movlb	0	; () banked
 16248  00469A  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16249  00469C  0E2E               	movlw	46
 16250  00469E  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16251  0046A0  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16252  0046A2  ECBF  F04D         	call	_UpdateDutyCycle
 16253                           
 16254                           ;lorawan_eu.c: 714: UpdateChannelIdStatus (channelIndex, 1);
 16255  0046A6  0E01               	movlw	1
 16256  0046A8  0100               	movlb	0	; () banked
 16257  0046AA  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16258  0046AC  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16259  0046AE  EC24  F030         	call	_UpdateChannelIdStatus
 16260                           
 16261                           ;lorawan_eu.c: 715: }
 16262  0046B2  D037               	goto	l19620
 16263  0046B4                     l19612:
 16264                           
 16265                           ; BSR set to: 0
 16266                           ;lorawan_eu.c: 716: else;lorawan_eu.c: 717: {;lorawan_eu.c: 718: LORAWAN_SetChannelIdSta
      +                          tus (channelIndex, 0);
 16267  0046B4  0E00               	movlw	0
 16268  0046B6  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16269  0046B8  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16270  0046BA  EC10  F04D         	call	_LORAWAN_SetChannelIdStatus
 16271  0046BE  D031               	goto	l19620
 16272  0046C0                     l19614:
 16273                           
 16274                           ; BSR set to: 2
 16275                           ;lorawan_eu.c: 721: else;lorawan_eu.c: 722: {;lorawan_eu.c: 723: if (frequency != 0)
 16276  0046C0  0100               	movlb	0	; () banked
 16277  0046C2  51A1               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16278  0046C4  11A2               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16279  0046C6  11A3               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16280  0046C8  11A4               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16281  0046CA  B4D8               	btfsc	status,2,c
 16282  0046CC  D024               	goto	l19618
 16283                           
 16284                           ; BSR set to: 0
 16285                           ;lorawan_eu.c: 724: {;lorawan_eu.c: 725: UpdateFrequency (channelIndex + 16, frequency);
 16286  0046CE  C0A1  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16287  0046D2  C0A2  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16288  0046D6  C0A3  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16289  0046DA  C0A4  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16290  0046DE  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16291  0046E0  0F10               	addlw	16
 16292  0046E2  EC6B  F04D         	call	_UpdateFrequency
 16293                           
 16294                           ;lorawan_eu.c: 726: UpdateDataRange (channelIndex + 16, drRange.value);
 16295  0046E6  C0A0  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16296  0046EA  0100               	movlb	0	; () banked
 16297  0046EC  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16298  0046EE  0F10               	addlw	16
 16299  0046F0  ECCB  F031         	call	_UpdateDataRange
 16300                           
 16301                           ;lorawan_eu.c: 727: UpdateDutyCycle (channelIndex + 16, 302);
 16302  0046F4  0E01               	movlw	1
 16303  0046F6  0100               	movlb	0	; () banked
 16304  0046F8  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16305  0046FA  0E2E               	movlw	46
 16306  0046FC  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16307  0046FE  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16308  004700  0F10               	addlw	16
 16309  004702  ECBF  F04D         	call	_UpdateDutyCycle
 16310                           
 16311                           ;lorawan_eu.c: 728: UpdateChannelIdStatus (channelIndex + 16, 1);
 16312  004706  0E01               	movlw	1
 16313  004708  0100               	movlb	0	; () banked
 16314  00470A  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16315  00470C  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16316  00470E  0F10               	addlw	16
 16317  004710  EC24  F030         	call	_UpdateChannelIdStatus
 16318                           
 16319                           ;lorawan_eu.c: 729: }
 16320  004714  D006               	goto	l19620
 16321  004716                     l19618:
 16322                           
 16323                           ; BSR set to: 0
 16324                           ;lorawan_eu.c: 730: else;lorawan_eu.c: 731: {;lorawan_eu.c: 732: LORAWAN_SetChannelIdSta
      +                          tus (channelIndex + 16, 0);
 16325  004716  0E00               	movlw	0
 16326  004718  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16327  00471A  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16328  00471C  0F10               	addlw	16
 16329  00471E  EC10  F04D         	call	_LORAWAN_SetChannelIdStatus
 16330  004722                     l19620:
 16331                           
 16332                           ;lorawan_eu.c: 733: };lorawan_eu.c: 734: };lorawan_eu.c: 736: loRa.macStatus.channelsMod
      +                          ified = 1;
 16333  004722  0102               	movlb	2	; () banked
 16334  004724  8708               	bsf	(_loRa+3)& (0+255),3,b
 16335  004726                     l19622:
 16336                           
 16337                           ; BSR set to: 2
 16338                           ;lorawan_eu.c: 737: };lorawan_eu.c: 738: return ptr;
 16339  004726  C09E  F09E         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 16340  00472A  C09F  F09F         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 16341                           
 16342                           ; BSR set to: 2
 16343  00472E  0012               	return		;funcret
 16344  004730                     __end_of_ExecuteNewChannel:
 16345                           	opt callstack 0
 16346                           
 16347 ;; *************** function _ValidateFrequency *****************
 16348 ;; Defined at:
 16349 ;;		line 1089 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16350 ;; Parameters:    Size  Location     Type
 16351 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 16352 ;; Auto vars:     Size  Location     Type
 16353 ;;  result          1    4[BANK0 ] enum E6118
 16354 ;; Return value:  Size  Location     Type
 16355 ;;                  1    wreg      enum E6118
 16356 ;; Registers used:
 16357 ;;		wreg, status,2, status,0
 16358 ;; Tracked objects:
 16359 ;;		On entry : 0/0
 16360 ;;		On exit  : 0/0
 16361 ;;		Unchanged: 0/0
 16362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16363 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16364 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16366 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16367 ;;Total ram usage:        5 bytes
 16368 ;; Hardware stack levels used:    1
 16369 ;; Hardware stack levels required when called:    7
 16370 ;; This function calls:
 16371 ;;		Nothing
 16372 ;; This function is called by:
 16373 ;;		_ExecuteNewChannel
 16374 ;;		_ExecuteRxParamSetupReq
 16375 ;;		_UpdateCfList
 16376 ;;		_LORAWAN_SetReceiveWindow2Parameters
 16377 ;;		_LORAWAN_SetFrequency
 16378 ;; This function uses a non-reentrant model
 16379 ;;
 16380                           
 16381                           	psect	text66
 16382  008B16                     __ptext66:
 16383                           	opt callstack 0
 16384  008B16                     _ValidateFrequency:
 16385                           	opt callstack 16
 16386                           
 16387                           ;lorawan_eu.c: 1091: LorawanError_t result = OK;
 16388                           
 16389                           ; BSR set to: 2
 16390                           ;incstack = 0
 16391  008B16  0E00               	movlw	0
 16392  008B18  0100               	movlb	0	; () banked
 16393  008B1A  6F64               	movwf	ValidateFrequency@result& (0+255),b
 16394                           
 16395                           ;lorawan_eu.c: 1093: if(ISM_EU868 == loRa.ismBand)
 16396  008B1C  0102               	movlb	2	; () banked
 16397  008B1E  51A9               	movf	(_loRa+164)& (0+255),w,b
 16398  008B20  A4D8               	btfss	status,2,c
 16399  008B22  D018               	goto	l18870
 16400                           
 16401                           ; BSR set to: 2
 16402                           ;lorawan_eu.c: 1094: {;lorawan_eu.c: 1095: if ( (frequencyNew > 870000000) || (frequency
      +                          New < 863000000) )
 16403  008B24  0E81               	movlw	129
 16404  008B26  0100               	movlb	0	; () banked
 16405  008B28  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16406  008B2A  0E25               	movlw	37
 16407  008B2C  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16408  008B2E  0EDB               	movlw	219
 16409  008B30  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16410  008B32  0E33               	movlw	51
 16411  008B34  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16412  008B36  B0D8               	btfsc	status,0,c
 16413  008B38  D00A               	goto	u20130
 16414                           
 16415                           ; BSR set to: 0
 16416  008B3A  0EC0               	movlw	192
 16417  008B3C  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16418  008B3E  0E55               	movlw	85
 16419  008B40  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16420  008B42  0E70               	movlw	112
 16421  008B44  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16422  008B46  0E33               	movlw	51
 16423  008B48  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16424  008B4A  B0D8               	btfsc	status,0,c
 16425  008B4C  D018               	goto	l1249
 16426  008B4E                     u20130:
 16427                           
 16428                           ; BSR set to: 0
 16429                           ;lorawan_eu.c: 1096: {;lorawan_eu.c: 1097: result = INVALID_PARAMETER ;
 16430  008B4E  0E03               	movlw	3
 16431  008B50  6F64               	movwf	ValidateFrequency@result& (0+255),b
 16432  008B52  D015               	goto	l1249
 16433  008B54                     l18870:
 16434                           
 16435                           ; BSR set to: 2
 16436                           ;lorawan_eu.c: 1100: else;lorawan_eu.c: 1101: {;lorawan_eu.c: 1102: if ( (frequencyNew >
      +                           434790000) || (frequencyNew < 433050000) )
 16437  008B54  0E71               	movlw	113
 16438  008B56  0100               	movlb	0	; () banked
 16439  008B58  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16440  008B5A  0E5E               	movlw	94
 16441  008B5C  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16442  008B5E  0EEA               	movlw	234
 16443  008B60  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16444  008B62  0E19               	movlw	25
 16445  008B64  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16446  008B66  B0D8               	btfsc	status,0,c
 16447  008B68  D7F2               	goto	u20130
 16448                           
 16449                           ; BSR set to: 0
 16450  008B6A  0E90               	movlw	144
 16451  008B6C  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16452  008B6E  0ED1               	movlw	209
 16453  008B70  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16454  008B72  0ECF               	movlw	207
 16455  008B74  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16456  008B76  0E19               	movlw	25
 16457  008B78  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16458  008B7A  A0D8               	btfss	status,0,c
 16459  008B7C  D7E8               	goto	u20130
 16460  008B7E                     l1249:
 16461                           
 16462                           ; BSR set to: 0
 16463                           ;lorawan_eu.c: 1105: };lorawan_eu.c: 1106: };lorawan_eu.c: 1108: return result;
 16464  008B7E  5164               	movf	ValidateFrequency@result& (0+255),w,b
 16465                           
 16466                           ; BSR set to: 0
 16467  008B80  0012               	return		;funcret
 16468  008B82                     __end_of_ValidateFrequency:
 16469                           	opt callstack 0
 16470                           
 16471 ;; *************** function _ValidateDataRange *****************
 16472 ;; Defined at:
 16473 ;;		line 1111 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16474 ;; Parameters:    Size  Location     Type
 16475 ;;  dataRangeNew    1    wreg     unsigned char 
 16476 ;; Auto vars:     Size  Location     Type
 16477 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 16478 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 16479 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 16480 ;;  result          1    2[BANK0 ] enum E6118
 16481 ;; Return value:  Size  Location     Type
 16482 ;;                  1    wreg      enum E6118
 16483 ;; Registers used:
 16484 ;;		wreg, status,2, status,0, cstack
 16485 ;; Tracked objects:
 16486 ;;		On entry : 0/0
 16487 ;;		On exit  : 0/0
 16488 ;;		Unchanged: 0/0
 16489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16491 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16493 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16494 ;;Total ram usage:        4 bytes
 16495 ;; Hardware stack levels used:    1
 16496 ;; Hardware stack levels required when called:    8
 16497 ;; This function calls:
 16498 ;;		_ValidateDataRate
 16499 ;; This function is called by:
 16500 ;;		_ExecuteNewChannel
 16501 ;;		_LORAWAN_SetDataRange
 16502 ;; This function uses a non-reentrant model
 16503 ;;
 16504                           
 16505                           	psect	text67
 16506  009744                     __ptext67:
 16507                           	opt callstack 0
 16508  009744                     _ValidateDataRange:
 16509                           	opt callstack 14
 16510                           
 16511                           ; BSR set to: 0
 16512                           ;incstack = 0
 16513                           ;ValidateDataRange@dataRangeNew stored from wreg
 16514  009744  0100               	movlb	0	; () banked
 16515  009746  6F63               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 16516                           
 16517                           ;lorawan_eu.c: 1113: LorawanError_t result = OK;
 16518  009748  0E00               	movlw	0
 16519  00974A  0100               	movlb	0	; () banked
 16520  00974C  6F62               	movwf	ValidateDataRange@result& (0+255),b
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;lorawan_eu.c: 1114: uint8_t dataRateMax, dataRateMin;;lorawan_eu.c: 1116: dataRateMin =
      +                           dataRangeNew & 0x0F;
 16524  00974E  5163               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16525  009750  0B0F               	andlw	15
 16526  009752  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 16527                           
 16528                           ; BSR set to: 0
 16529                           ;lorawan_eu.c: 1117: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 16530  009754  3963               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16531  009756  0B0F               	andlw	15
 16532  009758  0B0F               	andlw	15
 16533  00975A  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 16534                           
 16535                           ; BSR set to: 0
 16536                           ;lorawan_eu.c: 1119: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 16537  00975C  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 16538  00975E  EC9E  F052         	call	_ValidateDataRate
 16539  009762  0900               	iorlw	0
 16540  009764  A4D8               	btfss	status,2,c
 16541  009766  D00C               	goto	u20180
 16542  009768  0100               	movlb	0	; () banked
 16543  00976A  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16544  00976C  EC9E  F052         	call	_ValidateDataRate
 16545  009770  0900               	iorlw	0
 16546  009772  A4D8               	btfss	status,2,c
 16547  009774  D005               	goto	u20180
 16548  009776  0100               	movlb	0	; () banked
 16549  009778  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16550  00977A  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 16551  00977C  B0D8               	btfsc	status,0,c
 16552  00977E  D003               	goto	l1256
 16553  009780                     u20180:
 16554                           
 16555                           ;lorawan_eu.c: 1120: {;lorawan_eu.c: 1121: result = INVALID_PARAMETER;
 16556  009780  0E03               	movlw	3
 16557  009782  0100               	movlb	0	; () banked
 16558  009784  6F62               	movwf	ValidateDataRange@result& (0+255),b
 16559  009786                     l1256:
 16560                           
 16561                           ; BSR set to: 0
 16562                           ;lorawan_eu.c: 1122: };lorawan_eu.c: 1123: return result;
 16563  009786  5162               	movf	ValidateDataRange@result& (0+255),w,b
 16564                           
 16565                           ; BSR set to: 0
 16566  009788  0012               	return		;funcret
 16567  00978A                     __end_of_ValidateDataRange:
 16568                           	opt callstack 0
 16569                           
 16570 ;; *************** function _UpdateFrequency *****************
 16571 ;; Defined at:
 16572 ;;		line 1155 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16573 ;; Parameters:    Size  Location     Type
 16574 ;;  channelId       1    wreg     unsigned char 
 16575 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 16576 ;; Auto vars:     Size  Location     Type
 16577 ;;  channelId       1    4[BANK0 ] unsigned char 
 16578 ;; Return value:  Size  Location     Type
 16579 ;;                  1    wreg      void 
 16580 ;; Registers used:
 16581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16582 ;; Tracked objects:
 16583 ;;		On entry : 0/0
 16584 ;;		On exit  : 0/0
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16587 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16588 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16590 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16591 ;;Total ram usage:        5 bytes
 16592 ;; Hardware stack levels used:    1
 16593 ;; Hardware stack levels required when called:    7
 16594 ;; This function calls:
 16595 ;;		Nothing
 16596 ;; This function is called by:
 16597 ;;		_ExecuteNewChannel
 16598 ;;		_LORAWAN_SetFrequency
 16599 ;; This function uses a non-reentrant model
 16600 ;;
 16601                           
 16602                           	psect	text68
 16603  009AD6                     __ptext68:
 16604                           	opt callstack 0
 16605  009AD6                     _UpdateFrequency:
 16606                           	opt callstack 15
 16607                           
 16608                           ; BSR set to: 0
 16609                           ;incstack = 0
 16610                           ;UpdateFrequency@channelId stored from wreg
 16611  009AD6  0100               	movlb	0	; () banked
 16612  009AD8  6F64               	movwf	UpdateFrequency@channelId& (0+255),b
 16613                           
 16614                           ;lorawan_eu.c: 1157: Channels[channelId].frequency = frequencyNew;
 16615  009ADA  0100               	movlb	0	; () banked
 16616  009ADC  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 16617  009ADE  0D0E               	mullw	14
 16618  009AE0  0E14               	movlw	low _Channels
 16619  009AE2  24F3               	addwf	prodl,w,c
 16620  009AE4  6ED9               	movwf	fsr2l,c
 16621  009AE6  0E04               	movlw	high _Channels
 16622  009AE8  20F4               	addwfc	prodh,w,c
 16623  009AEA  6EDA               	movwf	fsr2h,c
 16624  009AEC  C060  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 16625  009AF0  C061  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 16626  009AF4  C062  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 16627  009AF8  C063  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 16628                           
 16629                           ;lorawan_eu.c: 1158: Channels[channelId].parametersDefined |= 0X01;
 16630  009AFC  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 16631  009AFE  0D0E               	mullw	14
 16632  009B00  0E21               	movlw	low (_Channels+13)
 16633  009B02  24F3               	addwf	prodl,w,c
 16634  009B04  6ED9               	movwf	fsr2l,c
 16635  009B06  0E04               	movlw	high (_Channels+13)
 16636  009B08  20F4               	addwfc	prodh,w,c
 16637  009B0A  6EDA               	movwf	fsr2h,c
 16638  009B0C  0E00               	movlw	0
 16639  009B0E  80DB               	bsf	plusw2,0,c
 16640                           
 16641                           ; BSR set to: 0
 16642  009B10  0012               	return		;funcret
 16643  009B12                     __end_of_UpdateFrequency:
 16644                           	opt callstack 0
 16645                           
 16646 ;; *************** function _UpdateDutyCycle *****************
 16647 ;; Defined at:
 16648 ;;		line 1161 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;  channelId       1    wreg     unsigned char 
 16651 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 16652 ;; Auto vars:     Size  Location     Type
 16653 ;;  channelId       1    2[BANK0 ] unsigned char 
 16654 ;; Return value:  Size  Location     Type
 16655 ;;                  1    wreg      void 
 16656 ;; Registers used:
 16657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16658 ;; Tracked objects:
 16659 ;;		On entry : 0/0
 16660 ;;		On exit  : 0/0
 16661 ;;		Unchanged: 0/0
 16662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16666 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16667 ;;Total ram usage:        3 bytes
 16668 ;; Hardware stack levels used:    1
 16669 ;; Hardware stack levels required when called:    7
 16670 ;; This function calls:
 16671 ;;		Nothing
 16672 ;; This function is called by:
 16673 ;;		_ExecuteNewChannel
 16674 ;;		_LORAWAN_SetDutyCycle
 16675 ;; This function uses a non-reentrant model
 16676 ;;
 16677                           
 16678                           	psect	text69
 16679  009B7E                     __ptext69:
 16680                           	opt callstack 0
 16681  009B7E                     _UpdateDutyCycle:
 16682                           	opt callstack 15
 16683                           
 16684                           ; BSR set to: 0
 16685                           ;incstack = 0
 16686                           ;UpdateDutyCycle@channelId stored from wreg
 16687  009B7E  0100               	movlb	0	; () banked
 16688  009B80  6F62               	movwf	UpdateDutyCycle@channelId& (0+255),b
 16689                           
 16690                           ;lorawan_eu.c: 1163: Channels[channelId].dutyCycle = dutyCycleNew;
 16691  009B82  0100               	movlb	0	; () banked
 16692  009B84  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16693  009B86  0D0E               	mullw	14
 16694  009B88  0E1A               	movlw	low (_Channels+6)
 16695  009B8A  24F3               	addwf	prodl,w,c
 16696  009B8C  6ED9               	movwf	fsr2l,c
 16697  009B8E  0E04               	movlw	high (_Channels+6)
 16698  009B90  20F4               	addwfc	prodh,w,c
 16699  009B92  6EDA               	movwf	fsr2h,c
 16700  009B94  C060  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 16701  009B98  C061  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 16702                           
 16703                           ;lorawan_eu.c: 1164: Channels[channelId].parametersDefined |= 0x04;
 16704  009B9C  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16705  009B9E  0D0E               	mullw	14
 16706  009BA0  0E21               	movlw	low (_Channels+13)
 16707  009BA2  24F3               	addwf	prodl,w,c
 16708  009BA4  6ED9               	movwf	fsr2l,c
 16709  009BA6  0E04               	movlw	high (_Channels+13)
 16710  009BA8  20F4               	addwfc	prodh,w,c
 16711  009BAA  6EDA               	movwf	fsr2h,c
 16712  009BAC  0E00               	movlw	0
 16713  009BAE  84DB               	bsf	plusw2,2,c
 16714                           
 16715                           ; BSR set to: 0
 16716  009BB0  0012               	return		;funcret
 16717  009BB2                     __end_of_UpdateDutyCycle:
 16718                           	opt callstack 0
 16719                           
 16720 ;; *************** function _UpdateDataRange *****************
 16721 ;; Defined at:
 16722 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16723 ;; Parameters:    Size  Location     Type
 16724 ;;  channelId       1    wreg     unsigned char 
 16725 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 16726 ;; Auto vars:     Size  Location     Type
 16727 ;;  channelId       1    2[BANK0 ] unsigned char 
 16728 ;;  i               1    3[BANK0 ] unsigned char 
 16729 ;; Return value:  Size  Location     Type
 16730 ;;                  1    wreg      void 
 16731 ;; Registers used:
 16732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16733 ;; Tracked objects:
 16734 ;;		On entry : 0/0
 16735 ;;		On exit  : 0/0
 16736 ;;		Unchanged: 0/0
 16737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16738 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16739 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16741 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16742 ;;Total ram usage:        4 bytes
 16743 ;; Hardware stack levels used:    1
 16744 ;; Hardware stack levels required when called:    7
 16745 ;; This function calls:
 16746 ;;		Nothing
 16747 ;; This function is called by:
 16748 ;;		_ExecuteNewChannel
 16749 ;;		_LORAWAN_SetDataRange
 16750 ;; This function uses a non-reentrant model
 16751 ;;
 16752                           
 16753                           	psect	text70
 16754  006396                     __ptext70:
 16755                           	opt callstack 0
 16756  006396                     _UpdateDataRange:
 16757                           	opt callstack 15
 16758                           
 16759                           ; BSR set to: 0
 16760                           ;incstack = 0
 16761                           ;UpdateDataRange@channelId stored from wreg
 16762  006396  0100               	movlb	0	; () banked
 16763  006398  6F62               	movwf	UpdateDataRange@channelId& (0+255),b
 16764                           
 16765                           ;lorawan_eu.c: 1012: uint8_t i;;lorawan_eu.c: 1015: loRa.minDataRate = 7;
 16766  00639A  0E07               	movlw	7
 16767  00639C  0102               	movlb	2	; () banked
 16768  00639E  6FF0               	movwf	(_loRa+235)& (0+255),b
 16769                           
 16770                           ;lorawan_eu.c: 1016: loRa.maxDataRate = 0;
 16771  0063A0  0E00               	movlw	0
 16772  0063A2  6FF1               	movwf	(_loRa+236)& (0+255),b
 16773                           
 16774                           ; BSR set to: 2
 16775                           ;lorawan_eu.c: 1018: Channels[channelId].dataRange.value = dataRangeNew;
 16776  0063A4  0100               	movlb	0	; () banked
 16777  0063A6  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16778  0063A8  0D0E               	mullw	14
 16779  0063AA  0E19               	movlw	low (_Channels+5)
 16780  0063AC  24F3               	addwf	prodl,w,c
 16781  0063AE  6ED9               	movwf	fsr2l,c
 16782  0063B0  0E04               	movlw	high (_Channels+5)
 16783  0063B2  20F4               	addwfc	prodh,w,c
 16784  0063B4  6EDA               	movwf	fsr2h,c
 16785  0063B6  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;lorawan_eu.c: 1019: Channels[channelId].parametersDefined |= 0X02;
 16789  0063BA  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16790  0063BC  0D0E               	mullw	14
 16791  0063BE  0E21               	movlw	low (_Channels+13)
 16792  0063C0  24F3               	addwf	prodl,w,c
 16793  0063C2  6ED9               	movwf	fsr2l,c
 16794  0063C4  0E04               	movlw	high (_Channels+13)
 16795  0063C6  20F4               	addwfc	prodh,w,c
 16796  0063C8  6EDA               	movwf	fsr2h,c
 16797  0063CA  0E00               	movlw	0
 16798  0063CC  82DB               	bsf	plusw2,1,c
 16799                           
 16800                           ; BSR set to: 0
 16801                           ;lorawan_eu.c: 1020: for (i=0; i < loRa.maxChannels; i++)
 16802  0063CE  0E00               	movlw	0
 16803  0063D0  6F63               	movwf	UpdateDataRange@i& (0+255),b
 16804  0063D2  D055               	goto	l18916
 16805  0063D4                     l18904:
 16806                           
 16807                           ; BSR set to: 0
 16808                           ;lorawan_eu.c: 1021: {;lorawan_eu.c: 1022: if ( (Channels[i].dataRange.min < loRa.minDat
      +                          aRate) && (Channels[i].status == 1) )
 16809  0063D4  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16810  0063D6  0D0E               	mullw	14
 16811  0063D8  0E19               	movlw	low (_Channels+5)
 16812  0063DA  24F3               	addwf	prodl,w,c
 16813  0063DC  6ED9               	movwf	fsr2l,c
 16814  0063DE  0E04               	movlw	high (_Channels+5)
 16815  0063E0  20F4               	addwfc	prodh,w,c
 16816  0063E2  6EDA               	movwf	fsr2h,c
 16817  0063E4  0104               	movlb	4	; () banked
 16818  0063E6  50DF               	movf	223,w,c
 16819  0063E8  0B0F               	andlw	15
 16820  0063EA  0100               	movlb	0	; () banked
 16821  0063EC  6F61               	movwf	??_UpdateDataRange& (0+255),b
 16822  0063EE  0102               	movlb	2	; () banked
 16823  0063F0  51F0               	movf	(_loRa+235)& (0+255),w,b
 16824  0063F2  0100               	movlb	0	; () banked
 16825  0063F4  5D61               	subwf	??_UpdateDataRange& (0+255),w,b
 16826  0063F6  B0D8               	btfsc	status,0,c
 16827  0063F8  D018               	goto	l1222
 16828                           
 16829                           ; BSR set to: 0
 16830  0063FA  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16831  0063FC  0D0E               	mullw	14
 16832  0063FE  0E18               	movlw	low (_Channels+4)
 16833  006400  24F3               	addwf	prodl,w,c
 16834  006402  6ED9               	movwf	fsr2l,c
 16835  006404  0E04               	movlw	high (_Channels+4)
 16836  006406  20F4               	addwfc	prodh,w,c
 16837  006408  6EDA               	movwf	fsr2h,c
 16838  00640A  04DE               	decf	postinc2,w,c
 16839  00640C  A4D8               	btfss	status,2,c
 16840  00640E  D00D               	goto	l1222
 16841                           
 16842                           ; BSR set to: 0
 16843                           ;lorawan_eu.c: 1023: {;lorawan_eu.c: 1024: loRa.minDataRate = Channels[i].dataRange.min;
 16844  006410  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16845  006412  0D0E               	mullw	14
 16846  006414  0E19               	movlw	low (_Channels+5)
 16847  006416  24F3               	addwf	prodl,w,c
 16848  006418  6ED9               	movwf	fsr2l,c
 16849  00641A  0E04               	movlw	high (_Channels+5)
 16850  00641C  20F4               	addwfc	prodh,w,c
 16851  00641E  6EDA               	movwf	fsr2h,c
 16852  006420  0104               	movlb	4	; () banked
 16853  006422  50DF               	movf	223,w,c
 16854  006424  0B0F               	andlw	15
 16855  006426  0102               	movlb	2	; () banked
 16856  006428  6FF0               	movwf	(_loRa+235)& (0+255),b
 16857  00642A                     l1222:
 16858                           
 16859                           ;lorawan_eu.c: 1025: };lorawan_eu.c: 1026: if ( (Channels[i].dataRange.max > loRa.maxDat
      +                          aRate) && (Channels[i].status == 1) )
 16860  00642A  0100               	movlb	0	; () banked
 16861  00642C  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16862  00642E  0D0E               	mullw	14
 16863  006430  0E19               	movlw	low (_Channels+5)
 16864  006432  24F3               	addwf	prodl,w,c
 16865  006434  6ED9               	movwf	fsr2l,c
 16866  006436  0E04               	movlw	high (_Channels+5)
 16867  006438  20F4               	addwfc	prodh,w,c
 16868  00643A  6EDA               	movwf	fsr2h,c
 16869  00643C  0104               	movlb	4	; () banked
 16870  00643E  38DF               	swapf	223,w,c
 16871  006440  0B0F               	andlw	15
 16872  006442  0102               	movlb	2	; () banked
 16873  006444  61F1               	cpfslt	(_loRa+236)& (0+255),b
 16874  006446  D019               	goto	l18914
 16875                           
 16876                           ; BSR set to: 2
 16877  006448  0100               	movlb	0	; () banked
 16878  00644A  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16879  00644C  0D0E               	mullw	14
 16880  00644E  0E18               	movlw	low (_Channels+4)
 16881  006450  24F3               	addwf	prodl,w,c
 16882  006452  6ED9               	movwf	fsr2l,c
 16883  006454  0E04               	movlw	high (_Channels+4)
 16884  006456  20F4               	addwfc	prodh,w,c
 16885  006458  6EDA               	movwf	fsr2h,c
 16886  00645A  04DE               	decf	postinc2,w,c
 16887  00645C  A4D8               	btfss	status,2,c
 16888  00645E  D00D               	goto	l18914
 16889                           
 16890                           ; BSR set to: 0
 16891                           ;lorawan_eu.c: 1027: {;lorawan_eu.c: 1028: loRa.maxDataRate = Channels[i].dataRange.max;
 16892  006460  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16893  006462  0D0E               	mullw	14
 16894  006464  0E19               	movlw	low (_Channels+5)
 16895  006466  24F3               	addwf	prodl,w,c
 16896  006468  6ED9               	movwf	fsr2l,c
 16897  00646A  0E04               	movlw	high (_Channels+5)
 16898  00646C  20F4               	addwfc	prodh,w,c
 16899  00646E  6EDA               	movwf	fsr2h,c
 16900  006470  0104               	movlb	4	; () banked
 16901  006472  38DF               	swapf	223,w,c
 16902  006474  0B0F               	andlw	15
 16903  006476  0102               	movlb	2	; () banked
 16904  006478  6FF1               	movwf	(_loRa+236)& (0+255),b
 16905  00647A                     l18914:
 16906  00647A  0100               	movlb	0	; () banked
 16907  00647C  2B63               	incf	UpdateDataRange@i& (0+255),f,b
 16908  00647E                     l18916:
 16909                           
 16910                           ; BSR set to: 0
 16911  00647E  0102               	movlb	2	; () banked
 16912  006480  51F2               	movf	(_loRa+237)& (0+255),w,b
 16913  006482  0100               	movlb	0	; () banked
 16914  006484  5D63               	subwf	UpdateDataRange@i& (0+255),w,b
 16915  006486  A0D8               	btfss	status,0,c
 16916  006488  D7A5               	goto	l18904
 16917                           
 16918                           ; BSR set to: 0
 16919                           ;lorawan_eu.c: 1029: };lorawan_eu.c: 1030: };lorawan_eu.c: 1032: if (loRa.currentDataRat
      +                          e > loRa.maxDataRate)
 16920  00648A  0102               	movlb	2	; () banked
 16921  00648C  51E4               	movf	(_loRa+223)& (0+255),w,b
 16922  00648E  5DF1               	subwf	(_loRa+236)& (0+255),w,b
 16923  006490  A0D8               	btfss	status,0,c
 16924                           
 16925                           ; BSR set to: 2
 16926                           ;lorawan_eu.c: 1033: {;lorawan_eu.c: 1034: loRa.currentDataRate = loRa.maxDataRate;
 16927  006492  C2F1  F2E4         	movff	_loRa+236,_loRa+223
 16928                           
 16929                           ; BSR set to: 2
 16930                           ;lorawan_eu.c: 1035: };lorawan_eu.c: 1037: if (loRa.currentDataRate < loRa.minDataRate)
 16931  006496  51F0               	movf	(_loRa+235)& (0+255),w,b
 16932  006498  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 16933  00649A  B0D8               	btfsc	status,0,c
 16934  00649C  0012               	return	
 16935                           
 16936                           ; BSR set to: 2
 16937                           ;lorawan_eu.c: 1038: {;lorawan_eu.c: 1039: loRa.currentDataRate = loRa.minDataRate;
 16938  00649E  C2F0  F2E4         	movff	_loRa+235,_loRa+223
 16939                           
 16940                           ; BSR set to: 2
 16941  0064A2  0012               	return		;funcret
 16942  0064A4                     __end_of_UpdateDataRange:
 16943                           	opt callstack 0
 16944                           
 16945 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 16946 ;; Defined at:
 16947 ;;		line 283 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16948 ;; Parameters:    Size  Location     Type
 16949 ;;  channelId       1    wreg     unsigned char 
 16950 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16951 ;; Auto vars:     Size  Location     Type
 16952 ;;  channelId       1    6[BANK0 ] unsigned char 
 16953 ;;  result          1    0        enum E6118
 16954 ;; Return value:  Size  Location     Type
 16955 ;;                  1    wreg      enum E6118
 16956 ;; Registers used:
 16957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16958 ;; Tracked objects:
 16959 ;;		On entry : 0/0
 16960 ;;		On exit  : 0/0
 16961 ;;		Unchanged: 0/0
 16962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16963 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16964 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16966 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16967 ;;Total ram usage:        3 bytes
 16968 ;; Hardware stack levels used:    1
 16969 ;; Hardware stack levels required when called:    8
 16970 ;; This function calls:
 16971 ;;		_UpdateChannelIdStatus
 16972 ;;		_ValidateChannelId
 16973 ;; This function is called by:
 16974 ;;		_ExecuteNewChannel
 16975 ;;		_UpdateCfList
 16976 ;;		_resetAllChannels
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980                           	psect	text71
 16981  009A20                     __ptext71:
 16982                           	opt callstack 0
 16983  009A20                     _LORAWAN_SetChannelIdStatus:
 16984                           	opt callstack 15
 16985                           
 16986                           ; BSR set to: 2
 16987                           ;incstack = 0
 16988                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 16989  009A20  0100               	movlb	0	; () banked
 16990  009A22  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 16991                           
 16992                           ;lorawan_eu.c: 288: if (ValidateChannelId (channelId, 1) != OK)
 16993  009A24  0E01               	movlw	1
 16994  009A26  0100               	movlb	0	; () banked
 16995  009A28  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16996  009A2A  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16997  009A2C  ECC2  F050         	call	_ValidateChannelId
 16998  009A30  0900               	iorlw	0
 16999  009A32  A4D8               	btfss	status,2,c
 17000  009A34  0012               	return	
 17001                           
 17002                           ;lorawan_eu.c: 293: else;lorawan_eu.c: 294: {;lorawan_eu.c: 295: if ( (Channels[channelI
      +                          d].parametersDefined & (0X01 | 0X02 | 0x04) ) == (0X01 | 0X02 | 0x04) )
 17003                           
 17004                           ;lorawan_eu.c: 291: }
 17005  009A36  0100               	movlb	0	; () banked
 17006  009A38  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17007  009A3A  0D0E               	mullw	14
 17008  009A3C  0E21               	movlw	low (_Channels+13)
 17009  009A3E  24F3               	addwf	prodl,w,c
 17010  009A40  6ED9               	movwf	fsr2l,c
 17011  009A42  0E04               	movlw	high (_Channels+13)
 17012  009A44  20F4               	addwfc	prodh,w,c
 17013  009A46  6EDA               	movwf	fsr2h,c
 17014  009A48  50DF               	movf	indf2,w,c
 17015  009A4A  0B07               	andlw	7
 17016  009A4C  0A07               	xorlw	7
 17017  009A4E  A4D8               	btfss	status,2,c
 17018  009A50  0012               	return	
 17019                           
 17020                           ; BSR set to: 0
 17021                           ;lorawan_eu.c: 296: {;lorawan_eu.c: 297: UpdateChannelIdStatus (channelId, statusNew);
 17022  009A52  C064  F060         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 17023  009A56  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17024  009A58  EC24  F030         	call	_UpdateChannelIdStatus
 17025                           
 17026                           ;lorawan_eu.c: 298: }
 17027  009A5C  0012               	return		;funcret
 17028  009A5E                     __end_of_LORAWAN_SetChannelIdStatus:
 17029                           	opt callstack 0
 17030                           
 17031 ;; *************** function _ValidateChannelId *****************
 17032 ;; Defined at:
 17033 ;;		line 1126 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17034 ;; Parameters:    Size  Location     Type
 17035 ;;  channelId       1    wreg     unsigned char 
 17036 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 17037 ;; Auto vars:     Size  Location     Type
 17038 ;;  channelId       1    2[BANK0 ] unsigned char 
 17039 ;;  result          1    1[BANK0 ] enum E6118
 17040 ;; Return value:  Size  Location     Type
 17041 ;;                  1    wreg      enum E6118
 17042 ;; Registers used:
 17043 ;;		wreg, status,2, status,0
 17044 ;; Tracked objects:
 17045 ;;		On entry : 0/0
 17046 ;;		On exit  : 0/0
 17047 ;;		Unchanged: 0/0
 17048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17049 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17052 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17053 ;;Total ram usage:        3 bytes
 17054 ;; Hardware stack levels used:    1
 17055 ;; Hardware stack levels required when called:    7
 17056 ;; This function calls:
 17057 ;;		Nothing
 17058 ;; This function is called by:
 17059 ;;		_LORAWAN_SetChannelIdStatus
 17060 ;;		_ExecuteNewChannel
 17061 ;;		_LORAWAN_SetDataRange
 17062 ;;		_LORAWAN_GetDataRange
 17063 ;;		_LORAWAN_GetChannelIdStatus
 17064 ;;		_LORAWAN_SetFrequency
 17065 ;;		_LORAWAN_SetDutyCycle
 17066 ;;		_LORAWAN_GetDutyCycle
 17067 ;; This function uses a non-reentrant model
 17068 ;;
 17069                           
 17070                           	psect	text72
 17071  00A184                     __ptext72:
 17072                           	opt callstack 0
 17073  00A184                     _ValidateChannelId:
 17074                           	opt callstack 15
 17075                           
 17076                           ;incstack = 0
 17077                           ;ValidateChannelId@channelId stored from wreg
 17078  00A184  0100               	movlb	0	; () banked
 17079  00A186  6F62               	movwf	ValidateChannelId@channelId& (0+255),b
 17080                           
 17081                           ;lorawan_eu.c: 1128: LorawanError_t result = OK;
 17082  00A188  0E00               	movlw	0
 17083  00A18A  0100               	movlb	0	; () banked
 17084  00A18C  6F61               	movwf	ValidateChannelId@result& (0+255),b
 17085                           
 17086                           ; BSR set to: 0
 17087                           ;lorawan_eu.c: 1130: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 17088  00A18E  0E10               	movlw	16
 17089  00A190  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 17090  00A192  D006               	goto	u19720
 17091                           
 17092                           ; BSR set to: 0
 17093  00A194  5160               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 17094  00A196  A4D8               	btfss	status,2,c
 17095  00A198  D005               	goto	l1262
 17096                           
 17097                           ; BSR set to: 0
 17098  00A19A  0E03               	movlw	3
 17099  00A19C  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 17100  00A19E  D002               	goto	l1262
 17101  00A1A0                     u19720:
 17102                           
 17103                           ; BSR set to: 0
 17104                           ;lorawan_eu.c: 1131: {;lorawan_eu.c: 1132: result = INVALID_PARAMETER ;
 17105  00A1A0  0E03               	movlw	3
 17106  00A1A2  6F61               	movwf	ValidateChannelId@result& (0+255),b
 17107  00A1A4                     l1262:
 17108                           
 17109                           ; BSR set to: 0
 17110                           ;lorawan_eu.c: 1133: };lorawan_eu.c: 1135: return result;
 17111  00A1A4  5161               	movf	ValidateChannelId@result& (0+255),w,b
 17112                           
 17113                           ; BSR set to: 0
 17114  00A1A6  0012               	return		;funcret
 17115  00A1A8                     __end_of_ValidateChannelId:
 17116                           	opt callstack 0
 17117                           
 17118 ;; *************** function _ExecuteLinkCheck *****************
 17119 ;; Defined at:
 17120 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17121 ;; Parameters:    Size  Location     Type
 17122 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 17123 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17124 ;; Auto vars:     Size  Location     Type
 17125 ;;		None
 17126 ;; Return value:  Size  Location     Type
 17127 ;;                  2    0[BANK0 ] PTR unsigned char 
 17128 ;; Registers used:
 17129 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17130 ;; Tracked objects:
 17131 ;;		On entry : 0/0
 17132 ;;		On exit  : 0/0
 17133 ;;		Unchanged: 0/0
 17134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17138 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17139 ;;Total ram usage:        2 bytes
 17140 ;; Hardware stack levels used:    1
 17141 ;; Hardware stack levels required when called:    7
 17142 ;; This function calls:
 17143 ;;		Nothing
 17144 ;; This function is called by:
 17145 ;;		_MacExecuteCommands
 17146 ;; This function uses a non-reentrant model
 17147 ;;
 17148                           
 17149                           	psect	text73
 17150  009C18                     __ptext73:
 17151                           	opt callstack 0
 17152  009C18                     _ExecuteLinkCheck:
 17153                           	opt callstack 16
 17154                           
 17155                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 17156                           
 17157                           ; BSR set to: 0
 17158                           ;incstack = 0
 17159  009C18  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 17160  009C1C  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 17161  009C20  50DF               	movf	indf2,w,c
 17162  009C22  0102               	movlb	2	; () banked
 17163  009C24  6FE2               	movwf	(_loRa+221)& (0+255),b
 17164                           
 17165                           ; BSR set to: 2
 17166  009C26  0100               	movlb	0	; () banked
 17167  009C28  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 17168  009C2A  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 17169                           
 17170                           ; BSR set to: 0
 17171                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 17172  009C2C  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 17173  009C30  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 17174  009C34  50DF               	movf	indf2,w,c
 17175  009C36  0102               	movlb	2	; () banked
 17176  009C38  6FE3               	movwf	(_loRa+222)& (0+255),b
 17177  009C3A  0100               	movlb	0	; () banked
 17178  009C3C  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 17179  009C3E  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;lorawan.c: 1656: return ptr;
 17183  009C40  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 17184  009C44  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 17185                           
 17186                           ; BSR set to: 0
 17187  009C48  0012               	return		;funcret
 17188  009C4A                     __end_of_ExecuteLinkCheck:
 17189                           	opt callstack 0
 17190                           
 17191 ;; *************** function _ExecuteLinkAdr *****************
 17192 ;; Defined at:
 17193 ;;		line 614 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17194 ;; Parameters:    Size  Location     Type
 17195 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 17196 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17197 ;; Auto vars:     Size  Location     Type
 17198 ;;  redundancy      2   21[BANK0 ] PTR struct .
 17199 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17200 ;;  channelMask     2   18[BANK0 ] unsigned int 
 17201 ;;  dataRate        1   23[BANK0 ] unsigned char 
 17202 ;;  txPower         1   20[BANK0 ] unsigned char 
 17203 ;; Return value:  Size  Location     Type
 17204 ;;                  2   15[BANK0 ] PTR unsigned char 
 17205 ;; Registers used:
 17206 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17207 ;; Tracked objects:
 17208 ;;		On entry : 0/0
 17209 ;;		On exit  : 0/0
 17210 ;;		Unchanged: 0/0
 17211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17212 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17213 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17214 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17215 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17216 ;;Total ram usage:        9 bytes
 17217 ;; Hardware stack levels used:    1
 17218 ;; Hardware stack levels required when called:   10
 17219 ;; This function calls:
 17220 ;;		_EnableChannels
 17221 ;;		_UpdateCurrentDataRate
 17222 ;;		_UpdateTxPower
 17223 ;;		_ValidateChannelMask
 17224 ;;		_ValidateChannelMaskCntl
 17225 ;;		_ValidateDataRate
 17226 ;;		_ValidateTxPower
 17227 ;; This function is called by:
 17228 ;;		_MacExecuteCommands
 17229 ;; This function uses a non-reentrant model
 17230 ;;
 17231                           
 17232                           	psect	text74
 17233  0048FC                     __ptext74:
 17234                           	opt callstack 0
 17235  0048FC                     _ExecuteLinkAdr:
 17236                           	opt callstack 13
 17237                           
 17238                           ;lorawan_eu.c: 616: uint8_t txPower, dataRate;;lorawan_eu.c: 617: uint16_t channelMask;;
      +                          lorawan_eu.c: 619: txPower = *(ptr) & 0x0F;
 17239                           
 17240                           ; BSR set to: 0
 17241                           ;incstack = 0
 17242  0048FC  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17243  004900  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17244  004904  50DF               	movf	indf2,w,c
 17245  004906  0B0F               	andlw	15
 17246  004908  0100               	movlb	0	; () banked
 17247  00490A  6F74               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 17248                           
 17249                           ;lorawan_eu.c: 620: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 17250  00490C  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17251  004910  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17252  004914  50DF               	movf	indf2,w,c
 17253  004916  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17254  004918  3971               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 17255  00491A  0B0F               	andlw	15
 17256  00491C  0B0F               	andlw	15
 17257  00491E  6F77               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 17258                           
 17259                           ; BSR set to: 0
 17260                           ;lorawan_eu.c: 621: ptr++;
 17261  004920  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 17262  004922  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 17263                           
 17264                           ; BSR set to: 0
 17265                           ;lorawan_eu.c: 622: channelMask = (*((uint16_t*)ptr));
 17266  004924  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17267  004928  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17268  00492C  CFDE F072          	movff	postinc2,ExecuteLinkAdr@channelMask
 17269  004930  CFDD F073          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 17270                           
 17271                           ; BSR set to: 0
 17272                           ;lorawan_eu.c: 623: ptr = ptr + sizeof (channelMask);
 17273  004934  0E02               	movlw	2
 17274  004936  256F               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 17275  004938  6F6F               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 17276  00493A  0E00               	movlw	0
 17277  00493C  2170               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 17278  00493E  6F70               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 17279                           
 17280                           ; BSR set to: 0
 17281                           ;lorawan_eu.c: 624: Redundancy_t *redundancy;;lorawan_eu.c: 625: redundancy = (Redundanc
      +                          y_t*)(ptr++);
 17282  004940  C06F  F075         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 17283  004944  C070  F076         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 17284                           
 17285                           ; BSR set to: 0
 17286  004948  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 17287  00494A  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 17288                           
 17289                           ; BSR set to: 0
 17290                           ;lorawan_eu.c: 627: if (1 == loRa.macStatus.adr)
 17291  00494C  0102               	movlb	2	; () banked
 17292  00494E  AD07               	btfss	(_loRa+2)& (0+255),6,b
 17293  004950  D09A               	goto	l19566
 17294                           
 17295                           ; BSR set to: 2
 17296                           ;lorawan_eu.c: 628: {;lorawan_eu.c: 629: if ( (ValidateChannelMaskCntl(redundancy->chMas
      +                          kCntl) == OK) && (ValidateChannelMask(channelMask) == OK) )
 17297  004952  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17298  004956  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17299  00495A  0100               	movlb	0	; () banked
 17300  00495C  38DF               	swapf	223,w,c
 17301  00495E  0B07               	andlw	7
 17302  004960  EC4B  F051         	call	_ValidateChannelMaskCntl
 17303  004964  0900               	iorlw	0
 17304  004966  A4D8               	btfss	status,2,c
 17305  004968  D013               	goto	l19534
 17306  00496A  C072  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 17307  00496E  C073  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 17308  004972  EC12  F04B         	call	_ValidateChannelMask	;wreg free
 17309  004976  0900               	iorlw	0
 17310  004978  A4D8               	btfss	status,2,c
 17311  00497A  D00A               	goto	l19534
 17312                           
 17313                           ;lorawan_eu.c: 630: {;lorawan_eu.c: 631: loRa.macCommands[loRa.crtMacCmdIndex].channelMa
      +                          skAck = 1;
 17314  00497C  0102               	movlb	2	; () banked
 17315  00497E  51AC               	movf	(_loRa+167)& (0+255),w,b
 17316  004980  0D02               	mullw	2
 17317  004982  0EAE               	movlw	low (_loRa+169)
 17318  004984  24F3               	addwf	prodl,w,c
 17319  004986  6ED9               	movwf	fsr2l,c
 17320  004988  0E02               	movlw	high (_loRa+169)
 17321  00498A  20F4               	addwfc	prodh,w,c
 17322  00498C  6EDA               	movwf	fsr2h,c
 17323  00498E  80DF               	bsf	indf2,0,c
 17324  004990                     l19534:
 17325                           
 17326                           ;lorawan_eu.c: 632: };lorawan_eu.c: 634: if ( (ValidateDataRate (dataRate) == OK) && (da
      +                          taRate >= loRa.minDataRate) && (dataRate <= loRa.maxDataRate) )
 17327  004990  0100               	movlb	0	; () banked
 17328  004992  5177               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17329  004994  EC9E  F052         	call	_ValidateDataRate
 17330  004998  0900               	iorlw	0
 17331  00499A  A4D8               	btfss	status,2,c
 17332  00499C  D014               	goto	l19542
 17333  00499E  0102               	movlb	2	; () banked
 17334  0049A0  51F0               	movf	(_loRa+235)& (0+255),w,b
 17335  0049A2  0100               	movlb	0	; () banked
 17336  0049A4  5D77               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17337  0049A6  A0D8               	btfss	status,0,c
 17338  0049A8  D00E               	goto	l19542
 17339                           
 17340                           ; BSR set to: 0
 17341  0049AA  5177               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17342  0049AC  0102               	movlb	2	; () banked
 17343  0049AE  5DF1               	subwf	(_loRa+236)& (0+255),w,b
 17344  0049B0  A0D8               	btfss	status,0,c
 17345  0049B2  D009               	goto	l19542
 17346                           
 17347                           ; BSR set to: 2
 17348                           ;lorawan_eu.c: 635: {;lorawan_eu.c: 636: loRa.macCommands[loRa.crtMacCmdIndex].dataRateA
      +                          ck = 1;
 17349  0049B4  51AC               	movf	(_loRa+167)& (0+255),w,b
 17350  0049B6  0D02               	mullw	2
 17351  0049B8  0EAE               	movlw	low (_loRa+169)
 17352  0049BA  24F3               	addwf	prodl,w,c
 17353  0049BC  6ED9               	movwf	fsr2l,c
 17354  0049BE  0E02               	movlw	high (_loRa+169)
 17355  0049C0  20F4               	addwfc	prodh,w,c
 17356  0049C2  6EDA               	movwf	fsr2h,c
 17357  0049C4  82DF               	bsf	indf2,1,c
 17358  0049C6                     l19542:
 17359                           
 17360                           ;lorawan_eu.c: 637: };lorawan_eu.c: 639: if (ValidateTxPower (txPower) == OK)
 17361  0049C6  0100               	movlb	0	; () banked
 17362  0049C8  5174               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17363  0049CA  ECF7  F04F         	call	_ValidateTxPower
 17364  0049CE  0900               	iorlw	0
 17365  0049D0  A4D8               	btfss	status,2,c
 17366  0049D2  D00A               	goto	l1117
 17367                           
 17368                           ;lorawan_eu.c: 640: {;lorawan_eu.c: 641: loRa.macCommands[loRa.crtMacCmdIndex].powerAck 
      +                          = 1;
 17369  0049D4  0102               	movlb	2	; () banked
 17370  0049D6  51AC               	movf	(_loRa+167)& (0+255),w,b
 17371  0049D8  0D02               	mullw	2
 17372  0049DA  0EAE               	movlw	low (_loRa+169)
 17373  0049DC  24F3               	addwf	prodl,w,c
 17374  0049DE  6ED9               	movwf	fsr2l,c
 17375  0049E0  0E02               	movlw	high (_loRa+169)
 17376  0049E2  20F4               	addwfc	prodh,w,c
 17377  0049E4  6EDA               	movwf	fsr2h,c
 17378  0049E6  84DF               	bsf	indf2,2,c
 17379  0049E8                     l1117:
 17380                           
 17381                           ;lorawan_eu.c: 642: };lorawan_eu.c: 644: if ( (loRa.macCommands[loRa.crtMacCmdIndex].pow
      +                          erAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macComm
      +                          ands[loRa.crtMacCmdIndex].channelMaskAck == 1) )
 17382  0049E8  0102               	movlb	2	; () banked
 17383  0049EA  51AC               	movf	(_loRa+167)& (0+255),w,b
 17384  0049EC  0D02               	mullw	2
 17385  0049EE  0EAE               	movlw	low (_loRa+169)
 17386  0049F0  24F3               	addwf	prodl,w,c
 17387  0049F2  6ED9               	movwf	fsr2l,c
 17388  0049F4  0E02               	movlw	high (_loRa+169)
 17389  0049F6  20F4               	addwfc	prodh,w,c
 17390  0049F8  6EDA               	movwf	fsr2h,c
 17391  0049FA  A4DF               	btfss	indf2,2,c
 17392  0049FC  D05F               	goto	l19568
 17393                           
 17394                           ; BSR set to: 2
 17395  0049FE  51AC               	movf	(_loRa+167)& (0+255),w,b
 17396  004A00  0D02               	mullw	2
 17397  004A02  0EAE               	movlw	low (_loRa+169)
 17398  004A04  24F3               	addwf	prodl,w,c
 17399  004A06  6ED9               	movwf	fsr2l,c
 17400  004A08  0E02               	movlw	high (_loRa+169)
 17401  004A0A  20F4               	addwfc	prodh,w,c
 17402  004A0C  6EDA               	movwf	fsr2h,c
 17403  004A0E  A2DF               	btfss	indf2,1,c
 17404  004A10  D055               	goto	l19568
 17405                           
 17406                           ; BSR set to: 2
 17407  004A12  51AC               	movf	(_loRa+167)& (0+255),w,b
 17408  004A14  0D02               	mullw	2
 17409  004A16  0EAE               	movlw	low (_loRa+169)
 17410  004A18  24F3               	addwf	prodl,w,c
 17411  004A1A  6ED9               	movwf	fsr2l,c
 17412  004A1C  0E02               	movlw	high (_loRa+169)
 17413  004A1E  20F4               	addwfc	prodh,w,c
 17414  004A20  6EDA               	movwf	fsr2h,c
 17415  004A22  A0DF               	btfss	indf2,0,c
 17416  004A24  D04B               	goto	l19568
 17417                           
 17418                           ; BSR set to: 2
 17419                           ;lorawan_eu.c: 645: {;lorawan_eu.c: 646: EnableChannels (channelMask, redundancy->chMask
      +                          Cntl);
 17420  004A26  C072  F06C         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 17421  004A2A  C073  F06D         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 17422  004A2E  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17423  004A32  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17424  004A36  0100               	movlb	0	; () banked
 17425  004A38  38DF               	swapf	223,w,c
 17426  004A3A  0B07               	andlw	7
 17427  004A3C  6F6E               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 17428  004A3E  EC41  F052         	call	_EnableChannels	;wreg free
 17429                           
 17430                           ;lorawan_eu.c: 648: UpdateTxPower (txPower);
 17431  004A42  0100               	movlb	0	; () banked
 17432  004A44  5174               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17433  004A46  EC6F  F053         	call	_UpdateTxPower
 17434                           
 17435                           ;lorawan_eu.c: 649: loRa.macStatus.txPowerModified = 1;
 17436  004A4A  0102               	movlb	2	; () banked
 17437  004A4C  8908               	bsf	(_loRa+3)& (0+255),4,b
 17438                           
 17439                           ; BSR set to: 2
 17440                           ;lorawan_eu.c: 650: UpdateCurrentDataRate (dataRate);
 17441  004A4E  0100               	movlb	0	; () banked
 17442  004A50  5177               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17443  004A52  EC74  F053         	call	_UpdateCurrentDataRate
 17444                           
 17445                           ;lorawan_eu.c: 652: if (redundancy->nbRep == 0)
 17446  004A56  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17447  004A5A  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17448  004A5E  0100               	movlb	0	; () banked
 17449  004A60  50DF               	movf	223,w,c
 17450  004A62  0B0F               	andlw	15
 17451  004A64  0900               	iorlw	0
 17452  004A66  A4D8               	btfss	status,2,c
 17453  004A68  D002               	goto	l19562
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;lorawan_eu.c: 653: {;lorawan_eu.c: 654: loRa.maxRepetitionsUnconfirmedUplink = 0;
 17457  004A6A  0E00               	movlw	0
 17458  004A6C  D008               	goto	L18
 17459  004A6E                     l19562:
 17460                           
 17461                           ; BSR set to: 0
 17462                           ;lorawan_eu.c: 656: else;lorawan_eu.c: 657: {;lorawan_eu.c: 658: loRa.maxRepetitionsUnco
      +                          nfirmedUplink = redundancy->nbRep - 1;
 17463  004A6E  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17464  004A72  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17465  004A76  50DF               	movf	223,w,c
 17466  004A78  0B0F               	andlw	15
 17467  004A7A  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17468  004A7C  0571               	decf	??_ExecuteLinkAdr& (0+255),w,b
 17469  004A7E                     L18:
 17470  004A7E  0102               	movlb	2	; () banked
 17471  004A80  6FDB               	movwf	(_loRa+214)& (0+255),b
 17472                           
 17473                           ; BSR set to: 2
 17474                           ;lorawan_eu.c: 659: };lorawan_eu.c: 660: loRa.macStatus.nbRepModified = 1;
 17475  004A82  8B08               	bsf	(_loRa+3)& (0+255),5,b
 17476  004A84  D01B               	goto	l19568
 17477  004A86                     l19566:
 17478                           
 17479                           ; BSR set to: 2
 17480                           ;lorawan_eu.c: 663: else;lorawan_eu.c: 664: {;lorawan_eu.c: 665: loRa.macCommands[loRa.c
      +                          rtMacCmdIndex].channelMaskAck = 0;
 17481  004A86  51AC               	movf	(_loRa+167)& (0+255),w,b
 17482  004A88  0D02               	mullw	2
 17483  004A8A  0EAE               	movlw	low (_loRa+169)
 17484  004A8C  24F3               	addwf	prodl,w,c
 17485  004A8E  6ED9               	movwf	fsr2l,c
 17486  004A90  0E02               	movlw	high (_loRa+169)
 17487  004A92  20F4               	addwfc	prodh,w,c
 17488  004A94  6EDA               	movwf	fsr2h,c
 17489  004A96  90DF               	bcf	indf2,0,c
 17490                           
 17491                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 17492  004A98  51AC               	movf	(_loRa+167)& (0+255),w,b
 17493  004A9A  0D02               	mullw	2
 17494  004A9C  0EAE               	movlw	low (_loRa+169)
 17495  004A9E  24F3               	addwf	prodl,w,c
 17496  004AA0  6ED9               	movwf	fsr2l,c
 17497  004AA2  0E02               	movlw	high (_loRa+169)
 17498  004AA4  20F4               	addwfc	prodh,w,c
 17499  004AA6  6EDA               	movwf	fsr2h,c
 17500  004AA8  92DF               	bcf	indf2,1,c
 17501                           
 17502                           ;lorawan_eu.c: 667: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 17503  004AAA  51AC               	movf	(_loRa+167)& (0+255),w,b
 17504  004AAC  0D02               	mullw	2
 17505  004AAE  0EAE               	movlw	low (_loRa+169)
 17506  004AB0  24F3               	addwf	prodl,w,c
 17507  004AB2  6ED9               	movwf	fsr2l,c
 17508  004AB4  0E02               	movlw	high (_loRa+169)
 17509  004AB6  20F4               	addwfc	prodh,w,c
 17510  004AB8  6EDA               	movwf	fsr2h,c
 17511  004ABA  94DF               	bcf	indf2,2,c
 17512  004ABC                     l19568:
 17513                           
 17514                           ; BSR set to: 2
 17515                           ;lorawan_eu.c: 668: };lorawan_eu.c: 670: return ptr;
 17516  004ABC  C06F  F06F         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 17517  004AC0  C070  F070         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 17518                           
 17519                           ; BSR set to: 2
 17520  004AC4  0012               	return		;funcret
 17521  004AC6                     __end_of_ExecuteLinkAdr:
 17522                           	opt callstack 0
 17523                           
 17524 ;; *************** function _ValidateTxPower *****************
 17525 ;; Defined at:
 17526 ;;		line 583 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17527 ;; Parameters:    Size  Location     Type
 17528 ;;  txPowerNew      1    wreg     unsigned char 
 17529 ;; Auto vars:     Size  Location     Type
 17530 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 17531 ;;  result          1    0[BANK0 ] enum E6118
 17532 ;; Return value:  Size  Location     Type
 17533 ;;                  1    wreg      enum E6118
 17534 ;; Registers used:
 17535 ;;		wreg, status,2, status,0
 17536 ;; Tracked objects:
 17537 ;;		On entry : 0/0
 17538 ;;		On exit  : 0/0
 17539 ;;		Unchanged: 0/0
 17540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17542 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17544 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17545 ;;Total ram usage:        2 bytes
 17546 ;; Hardware stack levels used:    1
 17547 ;; Hardware stack levels required when called:    7
 17548 ;; This function calls:
 17549 ;;		Nothing
 17550 ;; This function is called by:
 17551 ;;		_ExecuteLinkAdr
 17552 ;;		_LORAWAN_SetTxPower
 17553 ;; This function uses a non-reentrant model
 17554 ;;
 17555                           
 17556                           	psect	text75
 17557  009FEE                     __ptext75:
 17558                           	opt callstack 0
 17559  009FEE                     _ValidateTxPower:
 17560                           	opt callstack 15
 17561                           
 17562                           ; BSR set to: 2
 17563                           ;incstack = 0
 17564                           ;ValidateTxPower@txPowerNew stored from wreg
 17565  009FEE  0100               	movlb	0	; () banked
 17566  009FF0  6F61               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 17567                           
 17568                           ;lorawan_eu.c: 585: LorawanError_t result = OK;
 17569  009FF2  0E00               	movlw	0
 17570  009FF4  0100               	movlb	0	; () banked
 17571  009FF6  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17572                           
 17573                           ; BSR set to: 0
 17574                           ;lorawan_eu.c: 587: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 17575  009FF8  0102               	movlb	2	; () banked
 17576  009FFA  51A9               	movf	(_loRa+164)& (0+255),w,b
 17577  009FFC  A4D8               	btfss	status,2,c
 17578  009FFE  D004               	goto	u20290
 17579                           
 17580                           ; BSR set to: 2
 17581  00A000  0100               	movlb	0	; () banked
 17582  00A002  5161               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 17583  00A004  B4D8               	btfsc	status,2,c
 17584  00A006  D004               	goto	u20300
 17585  00A008                     u20290:
 17586  00A008  0E05               	movlw	5
 17587  00A00A  0100               	movlb	0	; () banked
 17588  00A00C  6561               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 17589  00A00E  D002               	goto	l1101
 17590  00A010                     u20300:
 17591                           
 17592                           ; BSR set to: 0
 17593                           ;lorawan_eu.c: 588: {;lorawan_eu.c: 589: result = INVALID_PARAMETER;
 17594  00A010  0E03               	movlw	3
 17595  00A012  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17596  00A014                     l1101:
 17597                           
 17598                           ; BSR set to: 0
 17599                           ;lorawan_eu.c: 590: };lorawan_eu.c: 592: return result;
 17600  00A014  5160               	movf	ValidateTxPower@result& (0+255),w,b
 17601                           
 17602                           ; BSR set to: 0
 17603  00A016  0012               	return		;funcret
 17604  00A018                     __end_of_ValidateTxPower:
 17605                           	opt callstack 0
 17606                           
 17607 ;; *************** function _ValidateDataRate *****************
 17608 ;; Defined at:
 17609 ;;		line 571 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17610 ;; Parameters:    Size  Location     Type
 17611 ;;  dataRate        1    wreg     unsigned char 
 17612 ;; Auto vars:     Size  Location     Type
 17613 ;;  dataRate        1    0[BANK0 ] unsigned char 
 17614 ;;  result          1    1[BANK0 ] enum E6118
 17615 ;; Return value:  Size  Location     Type
 17616 ;;                  1    wreg      enum E6118
 17617 ;; Registers used:
 17618 ;;		wreg, status,2, status,0
 17619 ;; Tracked objects:
 17620 ;;		On entry : 0/0
 17621 ;;		On exit  : 0/0
 17622 ;;		Unchanged: 0/0
 17623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17625 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17627 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17628 ;;Total ram usage:        2 bytes
 17629 ;; Hardware stack levels used:    1
 17630 ;; Hardware stack levels required when called:    7
 17631 ;; This function calls:
 17632 ;;		Nothing
 17633 ;; This function is called by:
 17634 ;;		_ExecuteLinkAdr
 17635 ;;		_ExecuteRxParamSetupReq
 17636 ;;		_ValidateDataRange
 17637 ;;		_LORAWAN_SetReceiveWindow2Parameters
 17638 ;;		_LORAWAN_SetCurrentDataRate
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642                           	psect	text76
 17643  00A53C                     __ptext76:
 17644                           	opt callstack 0
 17645  00A53C                     _ValidateDataRate:
 17646                           	opt callstack 15
 17647                           
 17648                           ; BSR set to: 0
 17649                           ;incstack = 0
 17650                           ;ValidateDataRate@dataRate stored from wreg
 17651  00A53C  0100               	movlb	0	; () banked
 17652  00A53E  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 17653                           
 17654                           ;lorawan_eu.c: 573: LorawanError_t result = OK;
 17655  00A540  0E00               	movlw	0
 17656  00A542  0100               	movlb	0	; () banked
 17657  00A544  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17658                           
 17659                           ; BSR set to: 0
 17660                           ;lorawan_eu.c: 575: if ( dataRate > 7 )
 17661  00A546  0E07               	movlw	7
 17662  00A548  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 17663  00A54A  D002               	goto	l1097
 17664                           
 17665                           ; BSR set to: 0
 17666                           ;lorawan_eu.c: 576: {;lorawan_eu.c: 577: result = INVALID_PARAMETER;
 17667  00A54C  0E03               	movlw	3
 17668  00A54E  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17669  00A550                     l1097:
 17670                           
 17671                           ; BSR set to: 0
 17672                           ;lorawan_eu.c: 578: };lorawan_eu.c: 580: return result;
 17673  00A550  5161               	movf	ValidateDataRate@result& (0+255),w,b
 17674                           
 17675                           ; BSR set to: 0
 17676  00A552  0012               	return		;funcret
 17677  00A554                     __end_of_ValidateDataRate:
 17678                           	opt callstack 0
 17679                           
 17680 ;; *************** function _ValidateChannelMaskCntl *****************
 17681 ;; Defined at:
 17682 ;;		line 1138 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17683 ;; Parameters:    Size  Location     Type
 17684 ;;  channelMaskC    1    wreg     unsigned char 
 17685 ;; Auto vars:     Size  Location     Type
 17686 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 17687 ;;  result          1    0[BANK0 ] enum E6118
 17688 ;; Return value:  Size  Location     Type
 17689 ;;                  1    wreg      enum E6118
 17690 ;; Registers used:
 17691 ;;		wreg, status,2, status,0
 17692 ;; Tracked objects:
 17693 ;;		On entry : 0/0
 17694 ;;		On exit  : 0/0
 17695 ;;		Unchanged: 0/0
 17696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17698 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17700 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17701 ;;Total ram usage:        2 bytes
 17702 ;; Hardware stack levels used:    1
 17703 ;; Hardware stack levels required when called:    7
 17704 ;; This function calls:
 17705 ;;		Nothing
 17706 ;; This function is called by:
 17707 ;;		_ExecuteLinkAdr
 17708 ;; This function uses a non-reentrant model
 17709 ;;
 17710                           
 17711                           	psect	text77
 17712  00A296                     __ptext77:
 17713                           	opt callstack 0
 17714  00A296                     _ValidateChannelMaskCntl:
 17715                           	opt callstack 15
 17716                           
 17717                           ; BSR set to: 0
 17718                           ;incstack = 0
 17719                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 17720  00A296  0100               	movlb	0	; () banked
 17721  00A298  6F61               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 17722                           
 17723                           ;lorawan_eu.c: 1140: LorawanError_t result = OK;
 17724  00A29A  0E00               	movlw	0
 17725  00A29C  0100               	movlb	0	; () banked
 17726  00A29E  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17727                           
 17728                           ; BSR set to: 0
 17729                           ;lorawan_eu.c: 1142: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 17730  00A2A0  5161               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17731  00A2A2  B4D8               	btfsc	status,2,c
 17732  00A2A4  D006               	goto	l1268
 17733                           
 17734                           ; BSR set to: 0
 17735  00A2A6  0E06               	movlw	6
 17736  00A2A8  1961               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17737  00A2AA  B4D8               	btfsc	status,2,c
 17738  00A2AC  D002               	goto	l1268
 17739                           
 17740                           ; BSR set to: 0
 17741                           ;lorawan_eu.c: 1143: {;lorawan_eu.c: 1144: result = INVALID_PARAMETER;
 17742  00A2AE  0E03               	movlw	3
 17743  00A2B0  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17744  00A2B2                     l1268:
 17745                           
 17746                           ; BSR set to: 0
 17747                           ;lorawan_eu.c: 1145: };lorawan_eu.c: 1147: return result;
 17748  00A2B2  5160               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 17749                           
 17750                           ; BSR set to: 0
 17751  00A2B4  0012               	return		;funcret
 17752  00A2B6                     __end_of_ValidateChannelMaskCntl:
 17753                           	opt callstack 0
 17754                           
 17755 ;; *************** function _ValidateChannelMask *****************
 17756 ;; Defined at:
 17757 ;;		line 1167 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17758 ;; Parameters:    Size  Location     Type
 17759 ;;  channelMask     2    0[BANK0 ] unsigned int 
 17760 ;; Auto vars:     Size  Location     Type
 17761 ;;  i               1    4[BANK0 ] unsigned char 
 17762 ;; Return value:  Size  Location     Type
 17763 ;;                  1    wreg      enum E6118
 17764 ;; Registers used:
 17765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17766 ;; Tracked objects:
 17767 ;;		On entry : 0/0
 17768 ;;		On exit  : 0/0
 17769 ;;		Unchanged: 0/0
 17770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17772 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17773 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17774 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17775 ;;Total ram usage:        5 bytes
 17776 ;; Hardware stack levels used:    1
 17777 ;; Hardware stack levels required when called:    7
 17778 ;; This function calls:
 17779 ;;		Nothing
 17780 ;; This function is called by:
 17781 ;;		_ExecuteLinkAdr
 17782 ;; This function uses a non-reentrant model
 17783 ;;
 17784                           
 17785                           	psect	text78
 17786  009624                     __ptext78:
 17787                           	opt callstack 0
 17788  009624                     _ValidateChannelMask:
 17789                           	opt callstack 15
 17790                           
 17791                           ;lorawan_eu.c: 1171: if(channelMask != 0x0000U)
 17792                           
 17793                           ; BSR set to: 0
 17794                           ;incstack = 0
 17795  009624  0100               	movlb	0	; () banked
 17796  009626  5160               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 17797  009628  1161               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17798  00962A  B4D8               	btfsc	status,2,c
 17799  00962C  D011               	goto	u20350
 17800                           
 17801                           ; BSR set to: 0
 17802                           ;lorawan_eu.c: 1172: {;lorawan_eu.c: 1173: for (i = 0; i < 16; i++)
 17803  00962E  0E00               	movlw	0
 17804  009630  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 17805  009632                     l1282:
 17806                           
 17807                           ; BSR set to: 0
 17808                           ;lorawan_eu.c: 1174: {;lorawan_eu.c: 1175: if ( ( (channelMask & (1 << (0))) == (1 << (0
      +                          ))) && ( (Channels[i].parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04)
      +                           ) )
 17809  009632  A160               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 17810  009634  D00F               	goto	l18990
 17811                           
 17812                           ; BSR set to: 0
 17813  009636  5164               	movf	ValidateChannelMask@i& (0+255),w,b
 17814  009638  0D0E               	mullw	14
 17815  00963A  0E21               	movlw	low (_Channels+13)
 17816  00963C  24F3               	addwf	prodl,w,c
 17817  00963E  6ED9               	movwf	fsr2l,c
 17818  009640  0E04               	movlw	high (_Channels+13)
 17819  009642  20F4               	addwfc	prodh,w,c
 17820  009644  6EDA               	movwf	fsr2h,c
 17821  009646  50DF               	movf	indf2,w,c
 17822  009648  0B07               	andlw	7
 17823  00964A  0A07               	xorlw	7
 17824  00964C  B4D8               	btfsc	status,2,c
 17825  00964E  D002               	goto	l18990
 17826  009650                     u20350:
 17827                           
 17828                           ; BSR set to: 0
 17829                           ;lorawan_eu.c: 1176: {;lorawan_eu.c: 1177: return INVALID_PARAMETER;
 17830  009650  0E03               	movlw	3
 17831  009652  0012               	return	
 17832  009654                     l18990:
 17833                           
 17834                           ; BSR set to: 0
 17835                           ;lorawan_eu.c: 1179: else;lorawan_eu.c: 1180: {;lorawan_eu.c: 1181: channelMask = channe
      +                          lMask >> (1);
 17836  009654  90D8               	bcf	status,0,c
 17837  009656  3161               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17838  009658  6F62               	movwf	??_ValidateChannelMask& (0+255),b
 17839  00965A  3160               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 17840  00965C  6F60               	movwf	ValidateChannelMask@channelMask& (0+255),b
 17841  00965E  C062  F061         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 17842                           
 17843                           ; BSR set to: 0
 17844  009662  2B64               	incf	ValidateChannelMask@i& (0+255),f,b
 17845                           
 17846                           ; BSR set to: 0
 17847  009664  0E0F               	movlw	15
 17848  009666  6564               	cpfsgt	ValidateChannelMask@i& (0+255),b
 17849  009668  D7E4               	goto	l1282
 17850                           
 17851                           ; BSR set to: 0
 17852                           ;lorawan_eu.c: 1182: };lorawan_eu.c: 1183: };lorawan_eu.c: 1185: return OK;
 17853  00966A  0E00               	movlw	0
 17854                           
 17855                           ; BSR set to: 0
 17856  00966C  0012               	return		;funcret
 17857  00966E                     __end_of_ValidateChannelMask:
 17858                           	opt callstack 0
 17859                           
 17860 ;; *************** function _UpdateTxPower *****************
 17861 ;; Defined at:
 17862 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17863 ;; Parameters:    Size  Location     Type
 17864 ;;  txPowerNew      1    wreg     unsigned char 
 17865 ;; Auto vars:     Size  Location     Type
 17866 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 17867 ;; Return value:  Size  Location     Type
 17868 ;;                  1    wreg      void 
 17869 ;; Registers used:
 17870 ;;		wreg
 17871 ;; Tracked objects:
 17872 ;;		On entry : 0/0
 17873 ;;		On exit  : 0/0
 17874 ;;		Unchanged: 0/0
 17875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17880 ;;Total ram usage:        1 bytes
 17881 ;; Hardware stack levels used:    1
 17882 ;; Hardware stack levels required when called:    7
 17883 ;; This function calls:
 17884 ;;		Nothing
 17885 ;; This function is called by:
 17886 ;;		_ExecuteLinkAdr
 17887 ;;		_LORAWAN_SetTxPower
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891                           	psect	text79
 17892  00A6DE                     __ptext79:
 17893                           	opt callstack 0
 17894  00A6DE                     _UpdateTxPower:
 17895                           	opt callstack 15
 17896                           
 17897                           ; BSR set to: 0
 17898                           ;incstack = 0
 17899                           ;UpdateTxPower@txPowerNew stored from wreg
 17900  00A6DE  0100               	movlb	0	; () banked
 17901  00A6E0  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 17902                           
 17903                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 17904  00A6E2  C060  F2E6         	movff	UpdateTxPower@txPowerNew,_loRa+225
 17905  00A6E6  0012               	return		;funcret
 17906  00A6E8                     __end_of_UpdateTxPower:
 17907                           	opt callstack 0
 17908                           
 17909 ;; *************** function _UpdateCurrentDataRate *****************
 17910 ;; Defined at:
 17911 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17912 ;; Parameters:    Size  Location     Type
 17913 ;;  valueNew        1    wreg     unsigned char 
 17914 ;; Auto vars:     Size  Location     Type
 17915 ;;  valueNew        1    0[BANK0 ] unsigned char 
 17916 ;; Return value:  Size  Location     Type
 17917 ;;                  1    wreg      void 
 17918 ;; Registers used:
 17919 ;;		wreg
 17920 ;; Tracked objects:
 17921 ;;		On entry : 0/0
 17922 ;;		On exit  : 0/0
 17923 ;;		Unchanged: 0/0
 17924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17928 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17929 ;;Total ram usage:        1 bytes
 17930 ;; Hardware stack levels used:    1
 17931 ;; Hardware stack levels required when called:    7
 17932 ;; This function calls:
 17933 ;;		Nothing
 17934 ;; This function is called by:
 17935 ;;		_ExecuteLinkAdr
 17936 ;;		_LORAWAN_SetCurrentDataRate
 17937 ;; This function uses a non-reentrant model
 17938 ;;
 17939                           
 17940                           	psect	text80
 17941  00A6E8                     __ptext80:
 17942                           	opt callstack 0
 17943  00A6E8                     _UpdateCurrentDataRate:
 17944                           	opt callstack 15
 17945                           
 17946                           ;incstack = 0
 17947                           ;UpdateCurrentDataRate@valueNew stored from wreg
 17948  00A6E8  0100               	movlb	0	; () banked
 17949  00A6EA  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 17950                           
 17951                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 17952  00A6EC  C060  F2E4         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 17953  00A6F0  0012               	return		;funcret
 17954  00A6F2                     __end_of_UpdateCurrentDataRate:
 17955                           	opt callstack 0
 17956                           
 17957 ;; *************** function _EnableChannels *****************
 17958 ;; Defined at:
 17959 ;;		line 1150 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17960 ;; Parameters:    Size  Location     Type
 17961 ;;  channelMask     2   12[BANK0 ] unsigned int 
 17962 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 17963 ;; Auto vars:     Size  Location     Type
 17964 ;;		None
 17965 ;; Return value:  Size  Location     Type
 17966 ;;                  1    wreg      void 
 17967 ;; Registers used:
 17968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17969 ;; Tracked objects:
 17970 ;;		On entry : 0/0
 17971 ;;		On exit  : 0/0
 17972 ;;		Unchanged: 0/0
 17973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17974 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17977 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17978 ;;Total ram usage:        3 bytes
 17979 ;; Hardware stack levels used:    1
 17980 ;; Hardware stack levels required when called:    9
 17981 ;; This function calls:
 17982 ;;		_EnableChannels1
 17983 ;; This function is called by:
 17984 ;;		_ExecuteLinkAdr
 17985 ;; This function uses a non-reentrant model
 17986 ;;
 17987                           
 17988                           	psect	text81
 17989  00A482                     __ptext81:
 17990                           	opt callstack 0
 17991  00A482                     _EnableChannels:
 17992                           	opt callstack 13
 17993                           
 17994                           ;lorawan_eu.c: 1152: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 17995                           
 17996                           ;incstack = 0
 17997  00A482  C06C  F064         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 17998  00A486  C06D  F065         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 17999  00A48A  C06E  F066         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 18000  00A48E  0E00               	movlw	0
 18001  00A490  0100               	movlb	0	; () banked
 18002  00A492  6F67               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 18003  00A494  0E10               	movlw	16
 18004  00A496  6F68               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 18005  00A498  ECF7  F045         	call	_EnableChannels1	;wreg free
 18006  00A49C  0012               	return		;funcret
 18007  00A49E                     __end_of_EnableChannels:
 18008                           	opt callstack 0
 18009                           
 18010 ;; *************** function _EnableChannels1 *****************
 18011 ;; Defined at:
 18012 ;;		line 1194 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18013 ;; Parameters:    Size  Location     Type
 18014 ;;  channelMask     2    4[BANK0 ] unsigned int 
 18015 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 18016 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 18017 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 18018 ;; Auto vars:     Size  Location     Type
 18019 ;;  i               1   11[BANK0 ] unsigned char 
 18020 ;; Return value:  Size  Location     Type
 18021 ;;                  1    wreg      void 
 18022 ;; Registers used:
 18023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18024 ;; Tracked objects:
 18025 ;;		On entry : 0/0
 18026 ;;		On exit  : 0/0
 18027 ;;		Unchanged: 0/0
 18028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18029 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18030 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18033 ;;Total ram usage:        8 bytes
 18034 ;; Hardware stack levels used:    1
 18035 ;; Hardware stack levels required when called:    8
 18036 ;; This function calls:
 18037 ;;		_UpdateChannelIdStatus
 18038 ;; This function is called by:
 18039 ;;		_EnableChannels
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           	psect	text82
 18044  008BEE                     __ptext82:
 18045                           	opt callstack 0
 18046  008BEE                     _EnableChannels1:
 18047                           	opt callstack 13
 18048                           
 18049                           ;lorawan_eu.c: 1196: uint8_t i;;lorawan_eu.c: 1198: if (channelMaskCntl == 6)
 18050                           
 18051                           ;incstack = 0
 18052  008BEE  0E06               	movlw	6
 18053  008BF0  0100               	movlb	0	; () banked
 18054  008BF2  1966               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 18055  008BF4  A4D8               	btfss	status,2,c
 18056  008BF6  D00F               	goto	l18602
 18057                           
 18058                           ; BSR set to: 0
 18059                           ;lorawan_eu.c: 1199: {;lorawan_eu.c: 1200: for ( i = channelIndexMin; i < channelIndexMa
      +                          x; i++ )
 18060  008BF8  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 18061  008BFC  D007               	goto	l18600
 18062  008BFE                     l18596:
 18063                           
 18064                           ; BSR set to: 0
 18065                           ;lorawan_eu.c: 1201: {;lorawan_eu.c: 1202: UpdateChannelIdStatus (i, 1);
 18066  008BFE  0E01               	movlw	1
 18067  008C00  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18068  008C02  516B               	movf	EnableChannels1@i& (0+255),w,b
 18069  008C04  EC24  F030         	call	_UpdateChannelIdStatus
 18070  008C08  0100               	movlb	0	; () banked
 18071  008C0A  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 18072  008C0C                     l18600:
 18073                           
 18074                           ; BSR set to: 0
 18075  008C0C  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18076  008C0E  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 18077  008C10  B0D8               	btfsc	status,0,c
 18078  008C12  0012               	return	
 18079  008C14  D7F4               	goto	l18596
 18080  008C16                     l18602:
 18081                           
 18082                           ; BSR set to: 0
 18083                           ;lorawan_eu.c: 1205: else if (channelMaskCntl == 0)
 18084  008C16  5166               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 18085  008C18  A4D8               	btfss	status,2,c
 18086  008C1A  0012               	return	
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;lorawan_eu.c: 1206: {;lorawan_eu.c: 1207: for ( i = channelIndexMin; i < channelIndexMa
      +                          x; i++ )
 18090  008C1C  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 18091  008C20  D016               	goto	l18614
 18092  008C22                     l1297:
 18093                           
 18094                           ; BSR set to: 0
 18095                           ;lorawan_eu.c: 1208: {;lorawan_eu.c: 1209: if ( channelMask & (1 << (0)) == (1 << (0)))
 18096  008C22  A164               	btfss	EnableChannels1@channelMask& (0+255),0,b
 18097  008C24  D006               	goto	l18608
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;lorawan_eu.c: 1210: {;lorawan_eu.c: 1211: UpdateChannelIdStatus (i, 1);
 18101  008C26  0E01               	movlw	1
 18102  008C28  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18103  008C2A  516B               	movf	EnableChannels1@i& (0+255),w,b
 18104  008C2C  EC24  F030         	call	_UpdateChannelIdStatus
 18105                           
 18106                           ;lorawan_eu.c: 1212: }
 18107  008C30  D005               	goto	l18610
 18108  008C32                     l18608:
 18109                           
 18110                           ; BSR set to: 0
 18111                           ;lorawan_eu.c: 1213: else;lorawan_eu.c: 1214: {;lorawan_eu.c: 1215: UpdateChannelIdStatu
      +                          s (i, 0);
 18112  008C32  0E00               	movlw	0
 18113  008C34  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18114  008C36  516B               	movf	EnableChannels1@i& (0+255),w,b
 18115  008C38  EC24  F030         	call	_UpdateChannelIdStatus
 18116  008C3C                     l18610:
 18117                           
 18118                           ;lorawan_eu.c: 1216: };lorawan_eu.c: 1217: channelMask = channelMask >> (1);
 18119  008C3C  90D8               	bcf	status,0,c
 18120  008C3E  0100               	movlb	0	; () banked
 18121  008C40  3165               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 18122  008C42  6F69               	movwf	??_EnableChannels1& (0+255),b
 18123  008C44  3164               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 18124  008C46  6F64               	movwf	EnableChannels1@channelMask& (0+255),b
 18125  008C48  C069  F065         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 18126                           
 18127                           ; BSR set to: 0
 18128  008C4C  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 18129  008C4E                     l18614:
 18130                           
 18131                           ; BSR set to: 0
 18132  008C4E  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18133  008C50  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 18134  008C52  B0D8               	btfsc	status,0,c
 18135  008C54  0012               	return	
 18136  008C56  D7E5               	goto	l1297
 18137  008C58                     __end_of_EnableChannels1:
 18138                           	opt callstack 0
 18139                           
 18140 ;; *************** function _UpdateChannelIdStatus *****************
 18141 ;; Defined at:
 18142 ;;		line 1043 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18143 ;; Parameters:    Size  Location     Type
 18144 ;;  channelId       1    wreg     unsigned char 
 18145 ;;  statusNew       1    0[BANK0 ] unsigned char 
 18146 ;; Auto vars:     Size  Location     Type
 18147 ;;  channelId       1    2[BANK0 ] unsigned char 
 18148 ;;  i               1    3[BANK0 ] unsigned char 
 18149 ;; Return value:  Size  Location     Type
 18150 ;;                  1    wreg      void 
 18151 ;; Registers used:
 18152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18153 ;; Tracked objects:
 18154 ;;		On entry : 0/0
 18155 ;;		On exit  : 0/0
 18156 ;;		Unchanged: 0/0
 18157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18158 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18160 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18161 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18162 ;;Total ram usage:        4 bytes
 18163 ;; Hardware stack levels used:    1
 18164 ;; Hardware stack levels required when called:    7
 18165 ;; This function calls:
 18166 ;;		Nothing
 18167 ;; This function is called by:
 18168 ;;		_LORAWAN_SetChannelIdStatus
 18169 ;;		_ExecuteNewChannel
 18170 ;;		_EnableChannels1
 18171 ;; This function uses a non-reentrant model
 18172 ;;
 18173                           
 18174                           	psect	text83
 18175  006048                     __ptext83:
 18176                           	opt callstack 0
 18177  006048                     _UpdateChannelIdStatus:
 18178                           	opt callstack 15
 18179                           
 18180                           ; BSR set to: 0
 18181                           ;incstack = 0
 18182                           ;UpdateChannelIdStatus@channelId stored from wreg
 18183  006048  0100               	movlb	0	; () banked
 18184  00604A  6F62               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 18185                           
 18186                           ;lorawan_eu.c: 1045: uint8_t i;;lorawan_eu.c: 1047: Channels[channelId].status = statusN
      +                          ew;
 18187  00604C  0100               	movlb	0	; () banked
 18188  00604E  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18189  006050  0D0E               	mullw	14
 18190  006052  0E18               	movlw	low (_Channels+4)
 18191  006054  24F3               	addwf	prodl,w,c
 18192  006056  6ED9               	movwf	fsr2l,c
 18193  006058  0E04               	movlw	high (_Channels+4)
 18194  00605A  20F4               	addwfc	prodh,w,c
 18195  00605C  6EDA               	movwf	fsr2h,c
 18196  00605E  C060  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 18197                           
 18198                           ;lorawan_eu.c: 1048: if(Channels[channelId].status == 0)
 18199  006062  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18200  006064  0D0E               	mullw	14
 18201  006066  0E18               	movlw	low (_Channels+4)
 18202  006068  24F3               	addwf	prodl,w,c
 18203  00606A  6ED9               	movwf	fsr2l,c
 18204  00606C  0E04               	movlw	high (_Channels+4)
 18205  00606E  20F4               	addwfc	prodh,w,c
 18206  006070  6EDA               	movwf	fsr2h,c
 18207  006072  50DF               	movf	indf2,w,c
 18208  006074  A4D8               	btfss	status,2,c
 18209  006076  D00C               	goto	l18270
 18210                           
 18211                           ; BSR set to: 0
 18212                           ;lorawan_eu.c: 1049: {;lorawan_eu.c: 1051: Channels[channelId].channelTimer = 0;
 18213  006078  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18214  00607A  0D0E               	mullw	14
 18215  00607C  0E1C               	movlw	low (_Channels+8)
 18216  00607E  24F3               	addwf	prodl,w,c
 18217  006080  6ED9               	movwf	fsr2l,c
 18218  006082  0E04               	movlw	high (_Channels+8)
 18219  006084  20F4               	addwfc	prodh,w,c
 18220  006086  6EDA               	movwf	fsr2h,c
 18221  006088  6ADE               	clrf	postinc2,c
 18222  00608A  6ADE               	clrf	postinc2,c
 18223  00608C  6ADE               	clrf	postinc2,c
 18224  00608E  6ADD               	clrf	postdec2,c
 18225  006090                     l18270:
 18226                           
 18227                           ; BSR set to: 0
 18228                           ;lorawan_eu.c: 1052: };lorawan_eu.c: 1054: for (i = 0; i < loRa.maxChannels; i++)
 18229  006090  0E00               	movlw	0
 18230  006092  6F63               	movwf	UpdateChannelIdStatus@i& (0+255),b
 18231  006094  D055               	goto	l18284
 18232  006096                     l18272:
 18233                           
 18234                           ; BSR set to: 0
 18235                           ;lorawan_eu.c: 1055: {;lorawan_eu.c: 1056: if ( (Channels[i].dataRange.min < loRa.minDat
      +                          aRate) && (Channels[i].status == 1) )
 18236  006096  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18237  006098  0D0E               	mullw	14
 18238  00609A  0E19               	movlw	low (_Channels+5)
 18239  00609C  24F3               	addwf	prodl,w,c
 18240  00609E  6ED9               	movwf	fsr2l,c
 18241  0060A0  0E04               	movlw	high (_Channels+5)
 18242  0060A2  20F4               	addwfc	prodh,w,c
 18243  0060A4  6EDA               	movwf	fsr2h,c
 18244  0060A6  0104               	movlb	4	; () banked
 18245  0060A8  50DF               	movf	223,w,c
 18246  0060AA  0B0F               	andlw	15
 18247  0060AC  0100               	movlb	0	; () banked
 18248  0060AE  6F61               	movwf	??_UpdateChannelIdStatus& (0+255),b
 18249  0060B0  0102               	movlb	2	; () banked
 18250  0060B2  51F0               	movf	(_loRa+235)& (0+255),w,b
 18251  0060B4  0100               	movlb	0	; () banked
 18252  0060B6  5D61               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 18253  0060B8  B0D8               	btfsc	status,0,c
 18254  0060BA  D018               	goto	l1233
 18255                           
 18256                           ; BSR set to: 0
 18257  0060BC  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18258  0060BE  0D0E               	mullw	14
 18259  0060C0  0E18               	movlw	low (_Channels+4)
 18260  0060C2  24F3               	addwf	prodl,w,c
 18261  0060C4  6ED9               	movwf	fsr2l,c
 18262  0060C6  0E04               	movlw	high (_Channels+4)
 18263  0060C8  20F4               	addwfc	prodh,w,c
 18264  0060CA  6EDA               	movwf	fsr2h,c
 18265  0060CC  04DE               	decf	postinc2,w,c
 18266  0060CE  A4D8               	btfss	status,2,c
 18267  0060D0  D00D               	goto	l1233
 18268                           
 18269                           ; BSR set to: 0
 18270                           ;lorawan_eu.c: 1057: {;lorawan_eu.c: 1058: loRa.minDataRate = Channels[i].dataRange.min;
 18271  0060D2  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18272  0060D4  0D0E               	mullw	14
 18273  0060D6  0E19               	movlw	low (_Channels+5)
 18274  0060D8  24F3               	addwf	prodl,w,c
 18275  0060DA  6ED9               	movwf	fsr2l,c
 18276  0060DC  0E04               	movlw	high (_Channels+5)
 18277  0060DE  20F4               	addwfc	prodh,w,c
 18278  0060E0  6EDA               	movwf	fsr2h,c
 18279  0060E2  0104               	movlb	4	; () banked
 18280  0060E4  50DF               	movf	223,w,c
 18281  0060E6  0B0F               	andlw	15
 18282  0060E8  0102               	movlb	2	; () banked
 18283  0060EA  6FF0               	movwf	(_loRa+235)& (0+255),b
 18284  0060EC                     l1233:
 18285                           
 18286                           ;lorawan_eu.c: 1059: };lorawan_eu.c: 1060: if ( (Channels[i].dataRange.max > loRa.maxDat
      +                          aRate) && (Channels[i].status == 1) )
 18287  0060EC  0100               	movlb	0	; () banked
 18288  0060EE  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18289  0060F0  0D0E               	mullw	14
 18290  0060F2  0E19               	movlw	low (_Channels+5)
 18291  0060F4  24F3               	addwf	prodl,w,c
 18292  0060F6  6ED9               	movwf	fsr2l,c
 18293  0060F8  0E04               	movlw	high (_Channels+5)
 18294  0060FA  20F4               	addwfc	prodh,w,c
 18295  0060FC  6EDA               	movwf	fsr2h,c
 18296  0060FE  0104               	movlb	4	; () banked
 18297  006100  38DF               	swapf	223,w,c
 18298  006102  0B0F               	andlw	15
 18299  006104  0102               	movlb	2	; () banked
 18300  006106  61F1               	cpfslt	(_loRa+236)& (0+255),b
 18301  006108  D019               	goto	l18282
 18302                           
 18303                           ; BSR set to: 2
 18304  00610A  0100               	movlb	0	; () banked
 18305  00610C  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18306  00610E  0D0E               	mullw	14
 18307  006110  0E18               	movlw	low (_Channels+4)
 18308  006112  24F3               	addwf	prodl,w,c
 18309  006114  6ED9               	movwf	fsr2l,c
 18310  006116  0E04               	movlw	high (_Channels+4)
 18311  006118  20F4               	addwfc	prodh,w,c
 18312  00611A  6EDA               	movwf	fsr2h,c
 18313  00611C  04DE               	decf	postinc2,w,c
 18314  00611E  A4D8               	btfss	status,2,c
 18315  006120  D00D               	goto	l18282
 18316                           
 18317                           ; BSR set to: 0
 18318                           ;lorawan_eu.c: 1061: {;lorawan_eu.c: 1062: loRa.maxDataRate = Channels[i].dataRange.max;
 18319  006122  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18320  006124  0D0E               	mullw	14
 18321  006126  0E19               	movlw	low (_Channels+5)
 18322  006128  24F3               	addwf	prodl,w,c
 18323  00612A  6ED9               	movwf	fsr2l,c
 18324  00612C  0E04               	movlw	high (_Channels+5)
 18325  00612E  20F4               	addwfc	prodh,w,c
 18326  006130  6EDA               	movwf	fsr2h,c
 18327  006132  0104               	movlb	4	; () banked
 18328  006134  38DF               	swapf	223,w,c
 18329  006136  0B0F               	andlw	15
 18330  006138  0102               	movlb	2	; () banked
 18331  00613A  6FF1               	movwf	(_loRa+236)& (0+255),b
 18332  00613C                     l18282:
 18333  00613C  0100               	movlb	0	; () banked
 18334  00613E  2B63               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 18335  006140                     l18284:
 18336                           
 18337                           ; BSR set to: 0
 18338  006140  0102               	movlb	2	; () banked
 18339  006142  51F2               	movf	(_loRa+237)& (0+255),w,b
 18340  006144  0100               	movlb	0	; () banked
 18341  006146  5D63               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 18342  006148  A0D8               	btfss	status,0,c
 18343  00614A  D7A5               	goto	l18272
 18344                           
 18345                           ; BSR set to: 0
 18346                           ;lorawan_eu.c: 1063: };lorawan_eu.c: 1064: };lorawan_eu.c: 1066: if (loRa.currentDataRat
      +                          e > loRa.maxDataRate)
 18347  00614C  0102               	movlb	2	; () banked
 18348  00614E  51E4               	movf	(_loRa+223)& (0+255),w,b
 18349  006150  5DF1               	subwf	(_loRa+236)& (0+255),w,b
 18350  006152  A0D8               	btfss	status,0,c
 18351                           
 18352                           ; BSR set to: 2
 18353                           ;lorawan_eu.c: 1067: {;lorawan_eu.c: 1068: loRa.currentDataRate = loRa.maxDataRate;
 18354  006154  C2F1  F2E4         	movff	_loRa+236,_loRa+223
 18355                           
 18356                           ; BSR set to: 2
 18357                           ;lorawan_eu.c: 1069: };lorawan_eu.c: 1071: if (loRa.currentDataRate < loRa.minDataRate)
 18358  006158  51F0               	movf	(_loRa+235)& (0+255),w,b
 18359  00615A  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 18360  00615C  B0D8               	btfsc	status,0,c
 18361  00615E  0012               	return	
 18362                           
 18363                           ; BSR set to: 2
 18364                           ;lorawan_eu.c: 1072: {;lorawan_eu.c: 1073: loRa.currentDataRate = loRa.minDataRate;
 18365  006160  C2F0  F2E4         	movff	_loRa+235,_loRa+223
 18366                           
 18367                           ; BSR set to: 2
 18368  006164  0012               	return		;funcret
 18369  006166                     __end_of_UpdateChannelIdStatus:
 18370                           	opt callstack 0
 18371                           
 18372 ;; *************** function _ExecuteDutyCycle *****************
 18373 ;; Defined at:
 18374 ;;		line 595 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18375 ;; Parameters:    Size  Location     Type
 18376 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18377 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18378 ;; Auto vars:     Size  Location     Type
 18379 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 18380 ;; Return value:  Size  Location     Type
 18381 ;;                  2    0[BANK0 ] PTR unsigned char 
 18382 ;; Registers used:
 18383 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18384 ;; Tracked objects:
 18385 ;;		On entry : 0/0
 18386 ;;		On exit  : 0/0
 18387 ;;		Unchanged: 0/0
 18388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18391 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18392 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18393 ;;Total ram usage:        6 bytes
 18394 ;; Hardware stack levels used:    1
 18395 ;; Hardware stack levels required when called:    7
 18396 ;; This function calls:
 18397 ;;		Nothing
 18398 ;; This function is called by:
 18399 ;;		_MacExecuteCommands
 18400 ;; This function uses a non-reentrant model
 18401 ;;
 18402                           
 18403                           	psect	text84
 18404  009208                     __ptext84:
 18405                           	opt callstack 0
 18406  009208                     _ExecuteDutyCycle:
 18407                           	opt callstack 16
 18408                           
 18409                           ;lorawan_eu.c: 597: uint8_t maxDCycle;;lorawan_eu.c: 599: maxDCycle = *(ptr++);
 18410                           
 18411                           ; BSR set to: 2
 18412                           ;incstack = 0
 18413  009208  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 18414  00920C  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 18415  009210  50DF               	movf	indf2,w,c
 18416  009212  0100               	movlb	0	; () banked
 18417  009214  6F65               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 18418                           
 18419                           ; BSR set to: 0
 18420  009216  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 18421  009218  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 18422                           
 18423                           ; BSR set to: 0
 18424                           ;lorawan_eu.c: 600: if (maxDCycle < 15)
 18425  00921A  0E0F               	movlw	15
 18426  00921C  6165               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 18427  00921E  D013               	goto	l1109
 18428                           
 18429                           ; BSR set to: 0
 18430                           ;lorawan_eu.c: 601: {;lorawan_eu.c: 602: loRa.prescaler = 1 << maxDCycle;
 18431  009220  C065  F062         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 18432  009224  0E01               	movlw	1
 18433  009226  6F63               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 18434  009228  0E00               	movlw	0
 18435  00922A  6F64               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 18436  00922C  2B62               	incf	??_ExecuteDutyCycle& (0+255),f,b
 18437  00922E  D003               	goto	u21094
 18438  009230                     u21095:
 18439  009230  90D8               	bcf	status,0,c
 18440  009232  3763               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 18441  009234  3764               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 18442  009236                     u21094:
 18443  009236  2F62               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 18444  009238  D7FB               	goto	u21095
 18445  00923A  C063  F2E0         	movff	??_ExecuteDutyCycle+1,_loRa+219
 18446  00923E  C064  F2E1         	movff	??_ExecuteDutyCycle+2,_loRa+220
 18447                           
 18448                           ;lorawan_eu.c: 603: loRa.macStatus.prescalerModified = 1;
 18449  009242  0102               	movlb	2	; () banked
 18450  009244  8D08               	bsf	(_loRa+3)& (0+255),6,b
 18451  009246                     l1109:
 18452                           
 18453                           ;lorawan_eu.c: 604: };lorawan_eu.c: 606: if (maxDCycle == 255)
 18454  009246  0100               	movlb	0	; () banked
 18455  009248  2965               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 18456  00924A  A4D8               	btfss	status,2,c
 18457  00924C  D002               	goto	l19510
 18458                           
 18459                           ; BSR set to: 0
 18460                           ;lorawan_eu.c: 607: {;lorawan_eu.c: 608: loRa.macStatus.silentImmediately = 1;
 18461  00924E  0102               	movlb	2	; () banked
 18462  009250  8F07               	bsf	(_loRa+2)& (0+255),7,b
 18463  009252                     l19510:
 18464                           
 18465                           ;lorawan_eu.c: 609: };lorawan_eu.c: 611: return ptr;
 18466  009252  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 18467  009256  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 18468  00925A  0012               	return		;funcret
 18469  00925C                     __end_of_ExecuteDutyCycle:
 18470                           	opt callstack 0
 18471                           
 18472 ;; *************** function _ExecuteDevStatus *****************
 18473 ;; Defined at:
 18474 ;;		line 673 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18475 ;; Parameters:    Size  Location     Type
 18476 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18477 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18478 ;; Auto vars:     Size  Location     Type
 18479 ;;		None
 18480 ;; Return value:  Size  Location     Type
 18481 ;;                  2    0[BANK0 ] PTR unsigned char 
 18482 ;; Registers used:
 18483 ;;		wreg, status,2, status,0
 18484 ;; Tracked objects:
 18485 ;;		On entry : 0/0
 18486 ;;		On exit  : 0/0
 18487 ;;		Unchanged: 0/0
 18488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18489 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18492 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18493 ;;Total ram usage:        2 bytes
 18494 ;; Hardware stack levels used:    1
 18495 ;; Hardware stack levels required when called:    7
 18496 ;; This function calls:
 18497 ;;		Nothing
 18498 ;; This function is called by:
 18499 ;;		_MacExecuteCommands
 18500 ;; This function uses a non-reentrant model
 18501 ;;
 18502                           
 18503                           	psect	text85
 18504  00A6F2                     __ptext85:
 18505                           	opt callstack 0
 18506  00A6F2                     _ExecuteDevStatus:
 18507                           	opt callstack 16
 18508                           
 18509                           ;lorawan_eu.c: 675: return ptr;
 18510                           
 18511                           ;incstack = 0
 18512  00A6F2  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 18513  00A6F6  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 18514  00A6FA  0012               	return		;funcret
 18515  00A6FC                     __end_of_ExecuteDevStatus:
 18516                           	opt callstack 0
 18517                           
 18518 ;; *************** function _LORAWAN_Send *****************
 18519 ;; Defined at:
 18520 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18521 ;; Parameters:    Size  Location     Type
 18522 ;;  confirmed       1    wreg     enum E6086
 18523 ;;  port            1  116[BANK0 ] unsigned char 
 18524 ;;  buffer          2  117[BANK0 ] PTR void 
 18525 ;;		 -> sensorsString(40), NULL(0), 
 18526 ;;  bufferLength    1  119[BANK0 ] unsigned char 
 18527 ;; Auto vars:     Size  Location     Type
 18528 ;;  confirmed       1  121[BANK0 ] enum E6086
 18529 ;;  result          1  122[BANK0 ] enum E6059
 18530 ;; Return value:  Size  Location     Type
 18531 ;;                  1    wreg      enum E6059
 18532 ;; Registers used:
 18533 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18534 ;; Tracked objects:
 18535 ;;		On entry : 0/0
 18536 ;;		On exit  : 0/0
 18537 ;;		Unchanged: 0/0
 18538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18539 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18540 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18541 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18542 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18543 ;;Total ram usage:        7 bytes
 18544 ;; Hardware stack levels used:    1
 18545 ;; Hardware stack levels required when called:   13
 18546 ;; This function calls:
 18547 ;;		_AssemblePacket
 18548 ;;		_LORAWAN_GetMaxPayloadSize
 18549 ;;		_RADIO_ReceiveStop
 18550 ;;		_RADIO_Transmit
 18551 ;;		_SelectChannelForTransmission
 18552 ;; This function is called by:
 18553 ;;		_AutomaticReplyCallback
 18554 ;;		_LORAWAN_RxDone
 18555 ;;		_sendValue
 18556 ;; This function uses a non-reentrant model
 18557 ;;
 18558                           
 18559                           	psect	text86
 18560  006F9E                     __ptext86:
 18561                           	opt callstack 0
 18562  006F9E                     _LORAWAN_Send:
 18563                           	opt callstack 15
 18564                           
 18565                           ;incstack = 0
 18566                           ;LORAWAN_Send@confirmed stored from wreg
 18567  006F9E  0100               	movlb	0	; () banked
 18568  006FA0  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 18569                           
 18570                           ;lorawan.c: 187: LorawanError_t result;;lorawan.c: 189: if (loRa.macStatus.macPause == 1
      +                          )
 18571  006FA2  0102               	movlb	2	; () banked
 18572  006FA4  A108               	btfss	(_loRa+3)& (0+255),0,b
 18573  006FA6  D002               	goto	l1527
 18574                           
 18575                           ; BSR set to: 2
 18576                           ;lorawan.c: 190: {;lorawan.c: 191: return MAC_PAUSED;
 18577  006FA8  0E08               	movlw	8
 18578  006FAA  0012               	return	
 18579  006FAC                     l1527:
 18580                           
 18581                           ; BSR set to: 2
 18582                           ;lorawan.c: 192: };lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 18583  006FAC  AF07               	btfss	(_loRa+2)& (0+255),7,b
 18584  006FAE  D002               	goto	l1529
 18585                           
 18586                           ; BSR set to: 2
 18587                           ;lorawan.c: 195: {;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 18588  006FB0  0E05               	movlw	5
 18589  006FB2  0012               	return	
 18590  006FB4                     l1529:
 18591                           
 18592                           ; BSR set to: 2
 18593                           ;lorawan.c: 197: };lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 18594  006FB4  B907               	btfsc	(_loRa+2)& (0+255),4,b
 18595  006FB6  D002               	goto	l19978
 18596                           
 18597                           ; BSR set to: 2
 18598                           ;lorawan.c: 200: {;lorawan.c: 201: return NETWORK_NOT_JOINED;
 18599  006FB8  0E01               	movlw	1
 18600  006FBA  0012               	return	
 18601  006FBC                     l19978:
 18602                           
 18603                           ; BSR set to: 2
 18604                           ;lorawan.c: 202: };lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 18605  006FBC  0100               	movlb	0	; () banked
 18606  006FBE  51D4               	movf	LORAWAN_Send@port& (0+255),w,b
 18607  006FC0  A4D8               	btfss	status,2,c
 18608  006FC2  D005               	goto	l19986
 18609                           
 18610                           ; BSR set to: 0
 18611  006FC4  51D7               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18612  006FC6  B4D8               	btfsc	status,2,c
 18613  006FC8  D002               	goto	l19986
 18614                           
 18615                           ; BSR set to: 0
 18616                           ;lorawan.c: 205: {;lorawan.c: 206: return INVALID_PARAMETER;
 18617  006FCA  0E03               	movlw	3
 18618  006FCC  0012               	return	
 18619  006FCE                     l19986:
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;lorawan.c: 207: };lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 18623  006FCE  EC4F  F04A         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 18624  006FD2  0100               	movlb	0	; () banked
 18625  006FD4  6FD8               	movwf	??_LORAWAN_Send& (0+255),b
 18626  006FD6  51D7               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18627  006FD8  5DD8               	subwf	??_LORAWAN_Send& (0+255),w,b
 18628  006FDA  B0D8               	btfsc	status,0,c
 18629  006FDC  D002               	goto	l19992
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;lorawan.c: 211: {;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 18633  006FDE  0E07               	movlw	7
 18634  006FE0  0012               	return	
 18635  006FE2                     l19992:
 18636                           
 18637                           ; BSR set to: 0
 18638                           ;lorawan.c: 213: };lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 18639  006FE2  0102               	movlb	2	; () banked
 18640  006FE4  290B               	incf	(_loRa+6)& (0+255),w,b
 18641  006FE6  E10A               	bnz	l20000
 18642  006FE8  290C               	incf	(_loRa+7)& (0+255),w,b
 18643  006FEA  E108               	bnz	l20000
 18644  006FEC  290D               	incf	(_loRa+8)& (0+255),w,b
 18645  006FEE  E106               	bnz	l20000
 18646  006FF0  290E               	incf	(_loRa+9)& (0+255),w,b
 18647  006FF2  A4D8               	btfss	status,2,c
 18648  006FF4  D003               	goto	l20000
 18649                           
 18650                           ; BSR set to: 2
 18651                           ;lorawan.c: 216: {;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 18652  006FF6  8309               	bsf	(_loRa+4)& (0+255),1,b
 18653                           
 18654                           ; BSR set to: 2
 18655                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 18656  006FF8  0E06               	movlw	6
 18657  006FFA  0012               	return	
 18658  006FFC                     l20000:
 18659                           
 18660                           ; BSR set to: 2
 18661                           ;lorawan.c: 220: };lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == 
      +                          loRa.deviceClass))
 18662  006FFC  5107               	movf	(_loRa+2)& (0+255),w,b
 18663  006FFE  0B0F               	andlw	15
 18664  007000  0900               	iorlw	0
 18665  007002  B4D8               	btfsc	status,2,c
 18666  007004  D005               	goto	l20008
 18667                           
 18668                           ; BSR set to: 2
 18669  007006  5117               	movf	(_loRa+18)& (0+255),w,b
 18670  007008  A4D8               	btfss	status,2,c
 18671  00700A  D002               	goto	l20008
 18672  00700C                     u21830:
 18673                           
 18674                           ;lorawan.c: 223: {;lorawan.c: 224: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 18675  00700C  0E02               	movlw	2
 18676  00700E  0012               	return	
 18677  007010                     l20008:
 18678                           
 18679                           ; BSR set to: 2
 18680                           ;lorawan.c: 225: };lorawan.c: 227: result = SelectChannelForTransmission (1);
 18681  007010  0E01               	movlw	1
 18682  007012  EC61  F046         	call	_SelectChannelForTransmission
 18683  007016  0100               	movlb	0	; () banked
 18684  007018  6FDA               	movwf	LORAWAN_Send@result& (0+255),b
 18685                           
 18686                           ; BSR set to: 0
 18687                           ;lorawan.c: 228: if (result != OK)
 18688  00701A  51DA               	movf	LORAWAN_Send@result& (0+255),w,b
 18689  00701C  B4D8               	btfsc	status,2,c
 18690  00701E  D002               	goto	l20018
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;lorawan.c: 229: {;lorawan.c: 230: return result;
 18694  007020  51DA               	movf	LORAWAN_Send@result& (0+255),w,b
 18695  007022  0012               	return	
 18696  007024                     l20018:
 18697                           
 18698                           ; BSR set to: 0
 18699                           ;lorawan.c: 232: else;lorawan.c: 233: {;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 18700  007024  0E02               	movlw	2
 18701  007026  0102               	movlb	2	; () banked
 18702  007028  1917               	xorwf	(_loRa+18)& (0+255),w,b
 18703  00702A  B4D8               	btfsc	status,2,c
 18704                           
 18705                           ; BSR set to: 2
 18706                           ;lorawan.c: 235: {;lorawan.c: 236: RADIO_ReceiveStop();
 18707  00702C  EC5B  F051         	call	_RADIO_ReceiveStop	;wreg free
 18708                           
 18709                           ;lorawan.c: 237: };lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength
      +                          );
 18710  007030  C0D4  F0C8         	movff	LORAWAN_Send@port,AssemblePacket@port
 18711  007034  C0D5  F0C9         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 18712  007038  C0D6  F0CA         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 18713  00703C  C0D7  F0CB         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 18714  007040  0100               	movlb	0	; () banked
 18715  007042  6BCC               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 18716  007044  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 18717  007046  ECE8  F00B         	call	_AssemblePacket
 18718                           
 18719                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 18720  00704A  0EC8               	movlw	low (_macBuffer+16)
 18721  00704C  0100               	movlb	0	; () banked
 18722  00704E  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 18723  007050  0E06               	movlw	high (_macBuffer+16)
 18724  007052  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 18725  007054  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
 18726  007058  EC82  F01F         	call	_RADIO_Transmit	;wreg free
 18727  00705C  0100               	movlb	0	; () banked
 18728  00705E  51A9               	movf	?_RADIO_Transmit& (0+255),w,b
 18729  007060  11AA               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 18730  007062  A4D8               	btfss	status,2,c
 18731  007064  D7D3               	goto	u21830
 18732                           
 18733                           ; BSR set to: 0
 18734                           ;lorawan.c: 242: {;lorawan.c: 243: loRa.fCntUp.value ++;
 18735  007066  0E01               	movlw	1
 18736  007068  0102               	movlb	2	; () banked
 18737  00706A  270B               	addwf	(_loRa+6)& (0+255),f,b
 18738  00706C  0E00               	movlw	0
 18739  00706E  230C               	addwfc	(_loRa+7)& (0+255),f,b
 18740  007070  230D               	addwfc	(_loRa+8)& (0+255),f,b
 18741  007072  230E               	addwfc	(_loRa+9)& (0+255),f,b
 18742                           
 18743                           ;lorawan.c: 245: if (CNF == confirmed)
 18744  007074  0100               	movlb	0	; () banked
 18745  007076  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 18746  007078  A4D8               	btfss	status,2,c
 18747  00707A  D002               	goto	l1539
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;lorawan.c: 246: {;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMess
      +                          age = 1;
 18751  00707C  0102               	movlb	2	; () banked
 18752  00707E  8105               	bsf	_loRa& (0+255),0,b
 18753  007080                     l1539:
 18754                           
 18755                           ;lorawan.c: 248: };lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 18756  007080  0102               	movlb	2	; () banked
 18757  007082  8B05               	bsf	_loRa& (0+255),5,b
 18758                           
 18759                           ; BSR set to: 2
 18760                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 18761  007084  5107               	movf	(_loRa+2)& (0+255),w,b
 18762  007086  0BF0               	andlw	-16
 18763  007088  0901               	iorlw	1
 18764  00708A  6F07               	movwf	(_loRa+2)& (0+255),b
 18765                           
 18766                           ; BSR set to: 2
 18767                           ;lorawan.c: 255: };lorawan.c: 256: };lorawan.c: 258: return OK;
 18768                           
 18769                           ;lorawan.c: 251: }
 18770  00708C  0E00               	movlw	0
 18771  00708E  0012               	return		;funcret
 18772  007090                     __end_of_LORAWAN_Send:
 18773                           	opt callstack 0
 18774                           
 18775 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 18776 ;; Defined at:
 18777 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18778 ;; Parameters:    Size  Location     Type
 18779 ;;		None
 18780 ;; Auto vars:     Size  Location     Type
 18781 ;;  result          1   10[BANK0 ] unsigned char 
 18782 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 18783 ;; Return value:  Size  Location     Type
 18784 ;;                  1    wreg      unsigned char 
 18785 ;; Registers used:
 18786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18787 ;; Tracked objects:
 18788 ;;		On entry : 0/0
 18789 ;;		On exit  : 0/0
 18790 ;;		Unchanged: 0/0
 18791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18793 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18794 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18795 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18796 ;;Total ram usage:        3 bytes
 18797 ;; Hardware stack levels used:    1
 18798 ;; Hardware stack levels required when called:    8
 18799 ;; This function calls:
 18800 ;;		_CountfOptsLength
 18801 ;; This function is called by:
 18802 ;;		_LORAWAN_Send
 18803 ;;		_AckRetransmissionCallback
 18804 ;; This function uses a non-reentrant model
 18805 ;;
 18806                           
 18807                           	psect	text87
 18808  00949E                     __ptext87:
 18809                           	opt callstack 0
 18810  00949E                     _LORAWAN_GetMaxPayloadSize:
 18811                           	opt callstack 19
 18812                           
 18813                           ;lorawan.c: 1559: uint8_t macCommandsLength;;lorawan.c: 1561: macCommandsLength = Countf
      +                          OptsLength();
 18814                           
 18815                           ;incstack = 0
 18816  00949E  EC55  F03B         	call	_CountfOptsLength	;wreg free
 18817  0094A2  0100               	movlb	0	; () banked
 18818  0094A4  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 18819                           
 18820                           ; BSR set to: 0
 18821                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 18822  0094A6  0102               	movlb	2	; () banked
 18823  0094A8  51AC               	movf	(_loRa+167)& (0+255),w,b
 18824  0094AA  A4D8               	btfss	status,2,c
 18825  0094AC  D00D               	goto	l19672
 18826                           
 18827                           ; BSR set to: 2
 18828                           ;lorawan.c: 1564: {;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 18829  0094AE  0E17               	movlw	low _maxPayloadSize
 18830  0094B0  25E4               	addwf	(_loRa+223)& (0+255),w,b
 18831  0094B2  6EF6               	movwf	tblptrl,c
 18832  0094B4  6AF7               	clrf	tblptrh,c
 18833  0094B6  0EFF               	movlw	high _maxPayloadSize
 18834  0094B8  22F7               	addwfc	tblptrh,f,c
 18835  0094BA                     	if	1	;There are 3 active tblptr bytes
 18836  0094BA  6AF8               	clrf	tblptru,c
 18837  0094BC  0E00               	movlw	low (__mediumconst shr (0+16))
 18838  0094BE  22F8               	addwfc	tblptru,f,c
 18839  0094C0                     	endif
 18840  0094C0  0008               	tblrd		*
 18841  0094C2  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 18842                           
 18843                           ;lorawan.c: 1566: }
 18844  0094C6  D010               	goto	l19674
 18845  0094C8                     l19672:
 18846                           
 18847                           ; BSR set to: 2
 18848                           ;lorawan.c: 1567: else;lorawan.c: 1568: {;lorawan.c: 1569: result = maxPayloadSize[loRa.
      +                          currentDataRate] - macCommandsLength ;
 18849  0094C8  0E17               	movlw	low _maxPayloadSize
 18850  0094CA  25E4               	addwf	(_loRa+223)& (0+255),w,b
 18851  0094CC  6EF6               	movwf	tblptrl,c
 18852  0094CE  6AF7               	clrf	tblptrh,c
 18853  0094D0  0EFF               	movlw	high _maxPayloadSize
 18854  0094D2  22F7               	addwfc	tblptrh,f,c
 18855  0094D4                     	if	1	;There are 3 active tblptr bytes
 18856  0094D4  6AF8               	clrf	tblptru,c
 18857  0094D6  0E00               	movlw	low (__mediumconst shr (0+16))
 18858  0094D8  22F8               	addwfc	tblptru,f,c
 18859  0094DA                     	endif
 18860  0094DA  0008               	tblrd		*
 18861  0094DC  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 18862  0094E0  0100               	movlb	0	; () banked
 18863  0094E2  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 18864  0094E4  5D68               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 18865  0094E6  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18866  0094E8                     l19674:
 18867                           
 18868                           ;lorawan.c: 1570: };lorawan.c: 1572: return result;
 18869  0094E8  0100               	movlb	0	; () banked
 18870  0094EA  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 18871                           
 18872                           ; BSR set to: 0
 18873  0094EC  0012               	return		;funcret
 18874  0094EE                     __end_of_LORAWAN_GetMaxPayloadSize:
 18875                           	opt callstack 0
 18876                           
 18877 ;; *************** function _AssemblePacket *****************
 18878 ;; Defined at:
 18879 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18880 ;; Parameters:    Size  Location     Type
 18881 ;;  confirmed       1    wreg     unsigned char 
 18882 ;;  port            1  104[BANK0 ] unsigned char 
 18883 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 18884 ;;		 -> sensorsString(40), NULL(0), 
 18885 ;;  bufferLength    2  107[BANK0 ] unsigned int 
 18886 ;; Auto vars:     Size  Location     Type
 18887 ;;  confirmed       1  111[BANK0 ] unsigned char 
 18888 ;;  bufferIndex     1  115[BANK0 ] unsigned char 
 18889 ;;  macCmdIdx       1  114[BANK0 ] unsigned char 
 18890 ;;  fCtrl           1  113[BANK0 ] struct .
 18891 ;;  mhdr            1  112[BANK0 ] struct .
 18892 ;; Return value:  Size  Location     Type
 18893 ;;                  1    wreg      void 
 18894 ;; Registers used:
 18895 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18896 ;; Tracked objects:
 18897 ;;		On entry : 0/0
 18898 ;;		On exit  : 0/0
 18899 ;;		Unchanged: 0/0
 18900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18901 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18902 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18903 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18904 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18905 ;;Total ram usage:       12 bytes
 18906 ;; Hardware stack levels used:    1
 18907 ;; Hardware stack levels required when called:   12
 18908 ;; This function calls:
 18909 ;;		_AESCmac
 18910 ;;		_AssembleEncryptionBlock
 18911 ;;		_CountfOptsLength
 18912 ;;		_EncryptFRMPayload
 18913 ;;		_FindSmallestDataRate
 18914 ;;		_IncludeMacCommandsResponse
 18915 ;;		_memcpy
 18916 ;;		_memset
 18917 ;; This function is called by:
 18918 ;;		_LORAWAN_Send
 18919 ;; This function uses a non-reentrant model
 18920 ;;
 18921                           
 18922                           	psect	text88
 18923  0017D0                     __ptext88:
 18924                           	opt callstack 0
 18925  0017D0                     _AssemblePacket:
 18926                           	opt callstack 15
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;incstack = 0
 18930                           ;AssemblePacket@confirmed stored from wreg
 18931  0017D0  0100               	movlb	0	; () banked
 18932  0017D2  6FCF               	movwf	AssemblePacket@confirmed& (0+255),b
 18933                           
 18934                           ;lorawan.c: 1674: Mhdr_t mhdr;;lorawan.c: 1675: uint8_t bufferIndex = 16;
 18935  0017D4  0E10               	movlw	16
 18936  0017D6  0100               	movlb	0	; () banked
 18937  0017D8  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18938                           
 18939                           ;lorawan.c: 1676: FCtrl_t fCtrl;;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 18940  0017DA  0E00               	movlw	0
 18941  0017DC  6FD2               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 18942                           
 18943                           ; BSR set to: 0
 18944                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 18945  0017DE  0ED0               	movlw	low AssemblePacket@mhdr
 18946  0017E0  6F60               	movwf	memset@p1& (0+255),b
 18947  0017E2  0E00               	movlw	high AssemblePacket@mhdr
 18948  0017E4  6F61               	movwf	(memset@p1+1)& (0+255),b
 18949  0017E6  0E00               	movlw	0
 18950  0017E8  6F63               	movwf	(memset@c+1)& (0+255),b
 18951  0017EA  0E00               	movlw	0
 18952  0017EC  6F62               	movwf	memset@c& (0+255),b
 18953  0017EE  0E00               	movlw	0
 18954  0017F0  6F65               	movwf	(memset@n+1)& (0+255),b
 18955  0017F2  0E01               	movlw	1
 18956  0017F4  6F64               	movwf	memset@n& (0+255),b
 18957  0017F6  EC70  F04F         	call	_memset	;wreg free
 18958                           
 18959                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 18960  0017FA  0EB8               	movlw	low _macBuffer
 18961  0017FC  0100               	movlb	0	; () banked
 18962  0017FE  6F60               	movwf	memset@p1& (0+255),b
 18963  001800  0E06               	movlw	high _macBuffer
 18964  001802  6F61               	movwf	(memset@p1+1)& (0+255),b
 18965  001804  0E00               	movlw	0
 18966  001806  6F63               	movwf	(memset@c+1)& (0+255),b
 18967  001808  0E00               	movlw	0
 18968  00180A  6F62               	movwf	memset@c& (0+255),b
 18969  00180C  0E01               	movlw	1
 18970  00180E  6F65               	movwf	(memset@n+1)& (0+255),b
 18971  001810  0E0F               	movlw	15
 18972  001812  6F64               	movwf	memset@n& (0+255),b
 18973  001814  EC70  F04F         	call	_memset	;wreg free
 18974                           
 18975                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 18976  001818  0E5F               	movlw	low _aesBuffer
 18977  00181A  0100               	movlb	0	; () banked
 18978  00181C  6F60               	movwf	memset@p1& (0+255),b
 18979  00181E  0E01               	movlw	high _aesBuffer
 18980  001820  6F61               	movwf	(memset@p1+1)& (0+255),b
 18981  001822  0E00               	movlw	0
 18982  001824  6F63               	movwf	(memset@c+1)& (0+255),b
 18983  001826  0E00               	movlw	0
 18984  001828  6F62               	movwf	memset@c& (0+255),b
 18985  00182A  0E00               	movlw	0
 18986  00182C  6F65               	movwf	(memset@n+1)& (0+255),b
 18987  00182E  0E10               	movlw	16
 18988  001830  6F64               	movwf	memset@n& (0+255),b
 18989  001832  EC70  F04F         	call	_memset	;wreg free
 18990                           
 18991                           ;lorawan.c: 1683: if (confirmed == 1)
 18992  001836  0100               	movlb	0	; () banked
 18993  001838  05CF               	decf	AssemblePacket@confirmed& (0+255),w,b
 18994  00183A  A4D8               	btfss	status,2,c
 18995  00183C  D007               	goto	l19692
 18996                           
 18997                           ; BSR set to: 0
 18998                           ;lorawan.c: 1684: {;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 18999  00183E  51D0               	movf	AssemblePacket@mhdr& (0+255),w,b
 19000  001840  0B1F               	andlw	-225
 19001  001842  0980               	iorlw	128
 19002  001844  6FD0               	movwf	AssemblePacket@mhdr& (0+255),b
 19003                           
 19004                           ; BSR set to: 0
 19005                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 19006  001846  0102               	movlb	2	; () banked
 19007  001848  8105               	bsf	_loRa& (0+255),0,b
 19008                           
 19009                           ;lorawan.c: 1687: }
 19010  00184A  D004               	goto	l2024
 19011  00184C                     l19692:
 19012                           
 19013                           ; BSR set to: 0
 19014                           ;lorawan.c: 1688: else;lorawan.c: 1689: {;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_
      +                          DATA_UNCONFIRMED_UP;
 19015  00184C  51D0               	movf	AssemblePacket@mhdr& (0+255),w,b
 19016  00184E  0B1F               	andlw	-225
 19017  001850  0940               	iorlw	64
 19018  001852  6FD0               	movwf	AssemblePacket@mhdr& (0+255),b
 19019  001854                     l2024:
 19020                           
 19021                           ;lorawan.c: 1691: };lorawan.c: 1692: mhdr.bits.major = 0;
 19022  001854  0EFC               	movlw	-4
 19023  001856  0100               	movlb	0	; () banked
 19024  001858  17D0               	andwf	AssemblePacket@mhdr& (0+255),f,b
 19025                           
 19026                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 19027  00185A  0EE3               	movlw	-29
 19028  00185C  17D0               	andwf	AssemblePacket@mhdr& (0+255),f,b
 19029                           
 19030                           ; BSR set to: 0
 19031                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 19032  00185E  0EB8               	movlw	low _macBuffer
 19033  001860  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19034  001862  6ED9               	movwf	fsr2l,c
 19035  001864  6ADA               	clrf	fsr2h,c
 19036  001866  0E06               	movlw	high _macBuffer
 19037  001868  22DA               	addwfc	fsr2h,f,c
 19038  00186A  C0D0  FFDF         	movff	AssemblePacket@mhdr,indf2
 19039                           
 19040                           ; BSR set to: 0
 19041  00186E  2BD3               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19042                           
 19043                           ; BSR set to: 0
 19044                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 19045  001870  0EB8               	movlw	low _macBuffer
 19046  001872  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19047  001874  6F60               	movwf	memcpy@d1& (0+255),b
 19048  001876  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19049  001878  0E06               	movlw	high _macBuffer
 19050  00187A  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19051  00187C  0E23               	movlw	low (_loRa+30)
 19052  00187E  6F62               	movwf	memcpy@s1& (0+255),b
 19053  001880  0E02               	movlw	high (_loRa+30)
 19054  001882  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19055  001884  0E00               	movlw	0
 19056  001886  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19057  001888  0E04               	movlw	4
 19058  00188A  6F64               	movwf	memcpy@n& (0+255),b
 19059  00188C  ECC3  F047         	call	_memcpy	;wreg free
 19060                           
 19061                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 19062  001890  0100               	movlb	0	; () banked
 19063  001892  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19064  001894  0F04               	addlw	4
 19065  001896  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19066                           
 19067                           ; BSR set to: 0
 19068                           ;lorawan.c: 1699: fCtrl.value = 0;
 19069  001898  0E00               	movlw	0
 19070  00189A  6FD1               	movwf	AssemblePacket@fCtrl& (0+255),b
 19071                           
 19072                           ; BSR set to: 0
 19073                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 19074  00189C  0102               	movlb	2	; () banked
 19075  00189E  AD07               	btfss	(_loRa+2)& (0+255),6,b
 19076  0018A0  D046               	goto	l2028
 19077                           
 19078                           ; BSR set to: 2
 19079                           ;lorawan.c: 1702: {;lorawan.c: 1703: fCtrl.adr = 1;
 19080  0018A2  0100               	movlb	0	; () banked
 19081  0018A4  8FD1               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 19082                           
 19083                           ; BSR set to: 0
 19084                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 19085  0018A6  0102               	movlb	2	; () banked
 19086  0018A8  51E4               	movf	(_loRa+223)& (0+255),w,b
 19087  0018AA  5DF0               	subwf	(_loRa+235)& (0+255),w,b
 19088  0018AC  B0D8               	btfsc	status,0,c
 19089  0018AE  D03D               	goto	L20
 19090                           
 19091                           ; BSR set to: 2
 19092                           ;lorawan.c: 1705: {;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 19093  0018B0  0100               	movlb	0	; () banked
 19094  0018B2  8DD1               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 19095                           
 19096                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 19097  0018B4  0102               	movlb	2	; () banked
 19098  0018B6  8905               	bsf	_loRa& (0+255),4,b
 19099                           
 19100                           ; BSR set to: 2
 19101                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 19102  0018B8  4BD5               	infsnz	(_loRa+208)& (0+255),f,b
 19103  0018BA  2BD6               	incf	(_loRa+209)& (0+255),f,b
 19104                           
 19105                           ; BSR set to: 2
 19106                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 19107  0018BC  51A7               	movf	(_loRa+162)& (0+255),w,b
 19108  0018BE  0100               	movlb	0	; () banked
 19109  0018C0  6FCD               	movwf	??_AssemblePacket& (0+255),b
 19110  0018C2  6BCE               	clrf	(??_AssemblePacket+1)& (0+255),b
 19111  0018C4  0102               	movlb	2	; () banked
 19112  0018C6  51D5               	movf	(_loRa+208)& (0+255),w,b
 19113  0018C8  0100               	movlb	0	; () banked
 19114  0018CA  19CD               	xorwf	??_AssemblePacket& (0+255),w,b
 19115  0018CC  E10B               	bnz	l19722
 19116  0018CE  0102               	movlb	2	; () banked
 19117  0018D0  51D6               	movf	(_loRa+209)& (0+255),w,b
 19118  0018D2  0100               	movlb	0	; () banked
 19119  0018D4  19CE               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 19120  0018D6  A4D8               	btfss	status,2,c
 19121  0018D8  D005               	goto	l19722
 19122                           
 19123                           ; BSR set to: 0
 19124                           ;lorawan.c: 1711: {;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 19125  0018DA  0E00               	movlw	0
 19126  0018DC  0102               	movlb	2	; () banked
 19127  0018DE  6FF3               	movwf	(_loRa+238)& (0+255),b
 19128  0018E0                     l19718:
 19129                           
 19130                           ; BSR set to: 2
 19131                           ;lorawan.c: 1713: fCtrl.adrAckReq = 0;
 19132  0018E0  0100               	movlb	0	; () banked
 19133  0018E2  D022               	goto	l2029
 19134  0018E4                     l19722:
 19135                           
 19136                           ; BSR set to: 0
 19137                           ;lorawan.c: 1716: else;lorawan.c: 1717: {;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.pro
      +                          tocolParameters.adrAckLimit)
 19138  0018E4  0102               	movlb	2	; () banked
 19139  0018E6  51A7               	movf	(_loRa+162)& (0+255),w,b
 19140  0018E8  0100               	movlb	0	; () banked
 19141  0018EA  6FCD               	movwf	??_AssemblePacket& (0+255),b
 19142  0018EC  6BCE               	clrf	(??_AssemblePacket+1)& (0+255),b
 19143  0018EE  0102               	movlb	2	; () banked
 19144  0018F0  51D5               	movf	(_loRa+208)& (0+255),w,b
 19145  0018F2  0100               	movlb	0	; () banked
 19146  0018F4  5DCD               	subwf	??_AssemblePacket& (0+255),w,b
 19147  0018F6  0102               	movlb	2	; () banked
 19148  0018F8  51D6               	movf	(_loRa+209)& (0+255),w,b
 19149  0018FA  0100               	movlb	0	; () banked
 19150  0018FC  59CE               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 19151  0018FE  B0D8               	btfsc	status,0,c
 19152  001900  D013               	goto	l2029
 19153                           
 19154                           ; BSR set to: 0
 19155                           ;lorawan.c: 1719: {;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 19156  001902  0102               	movlb	2	; () banked
 19157  001904  2BF3               	incf	(_loRa+238)& (0+255),f,b
 19158                           
 19159                           ; BSR set to: 2
 19160                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 19161  001906  51F3               	movf	(_loRa+238)& (0+255),w,b
 19162  001908  5DA8               	subwf	(_loRa+163)& (0+255),w,b
 19163  00190A  B0D8               	btfsc	status,0,c
 19164  00190C  D010               	goto	l2028
 19165                           
 19166                           ; BSR set to: 2
 19167                           ;lorawan.c: 1725: {;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 19168  00190E  0E00               	movlw	0
 19169  001910  6FF3               	movwf	(_loRa+238)& (0+255),b
 19170                           
 19171                           ; BSR set to: 2
 19172                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 19173  001912  ECE1  F03C         	call	_FindSmallestDataRate	;wreg free
 19174  001916  0900               	iorlw	0
 19175  001918  A4D8               	btfss	status,2,c
 19176  00191A  D009               	goto	l2028
 19177                           
 19178                           ;lorawan.c: 1729: {;lorawan.c: 1731: loRa.adrAckCnt = 0;
 19179  00191C  0E00               	movlw	0
 19180  00191E  0102               	movlb	2	; () banked
 19181  001920  6FD6               	movwf	(_loRa+209)& (0+255),b
 19182  001922  0E00               	movlw	0
 19183  001924  6FD5               	movwf	(_loRa+208)& (0+255),b
 19184  001926  D7DC               	goto	l19718
 19185  001928                     l2029:
 19186                           
 19187                           ; BSR set to: 0
 19188                           ;lorawan.c: 1737: else;lorawan.c: 1738: {;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 19189  001928  9DD1               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 19190  00192A                     L20:
 19191                           
 19192                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 19193  00192A  0102               	movlb	2	; () banked
 19194  00192C  9905               	bcf	_loRa& (0+255),4,b
 19195  00192E                     l2028:
 19196                           
 19197                           ;lorawan.c: 1747: };lorawan.c: 1748: };lorawan.c: 1750: if (loRa.lorawanMacStatus.ackReq
      +                          uiredFromNextUplinkMessage == 1)
 19198                           
 19199                           ;lorawan.c: 1741: };lorawan.c: 1742: };lorawan.c: 1743: }
 19200  00192E  0102               	movlb	2	; () banked
 19201  001930  A305               	btfss	_loRa& (0+255),1,b
 19202  001932  D004               	goto	l2034
 19203                           
 19204                           ; BSR set to: 2
 19205                           ;lorawan.c: 1751: {;lorawan.c: 1752: fCtrl.ack = 1;
 19206  001934  0100               	movlb	0	; () banked
 19207  001936  8BD1               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 19208                           
 19209                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 19210  001938  0102               	movlb	2	; () banked
 19211  00193A  9305               	bcf	_loRa& (0+255),1,b
 19212  00193C                     l2034:
 19213                           
 19214                           ; BSR set to: 2
 19215                           ;lorawan.c: 1754: };lorawan.c: 1756: fCtrl.fPending = 0;
 19216  00193C  0100               	movlb	0	; () banked
 19217  00193E  99D1               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 19218                           
 19219                           ; BSR set to: 0
 19220                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 19221  001940  0102               	movlb	2	; () banked
 19222  001942  51AC               	movf	(_loRa+167)& (0+255),w,b
 19223  001944  B4D8               	btfsc	status,2,c
 19224  001946  D005               	goto	u21470
 19225                           
 19226                           ; BSR set to: 2
 19227  001948  0100               	movlb	0	; () banked
 19228  00194A  51CB               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19229  00194C  11CC               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19230  00194E  A4D8               	btfss	status,2,c
 19231  001950  D004               	goto	l19746
 19232  001952                     u21470:
 19233                           
 19234                           ;lorawan.c: 1759: {;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 19235  001952  0EF0               	movlw	-16
 19236  001954  0100               	movlb	0	; () banked
 19237  001956  17D1               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 19238                           
 19239                           ;lorawan.c: 1761: }
 19240  001958  D009               	goto	l19748
 19241  00195A                     l19746:
 19242                           
 19243                           ; BSR set to: 0
 19244                           ;lorawan.c: 1763: else;lorawan.c: 1764: {;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLe
      +                          ngth();
 19245  00195A  EC55  F03B         	call	_CountfOptsLength	;wreg free
 19246  00195E  0100               	movlb	0	; () banked
 19247  001960  6FCD               	movwf	??_AssemblePacket& (0+255),b
 19248  001962  51D1               	movf	AssemblePacket@fCtrl& (0+255),w,b
 19249  001964  19CD               	xorwf	??_AssemblePacket& (0+255),w,b
 19250  001966  0BF0               	andlw	-16
 19251  001968  19CD               	xorwf	??_AssemblePacket& (0+255),w,b
 19252  00196A  6FD1               	movwf	AssemblePacket@fCtrl& (0+255),b
 19253  00196C                     l19748:
 19254                           
 19255                           ; BSR set to: 0
 19256                           ;lorawan.c: 1766: };lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 19257  00196C  0EB8               	movlw	low _macBuffer
 19258  00196E  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19259  001970  6ED9               	movwf	fsr2l,c
 19260  001972  6ADA               	clrf	fsr2h,c
 19261  001974  0E06               	movlw	high _macBuffer
 19262  001976  22DA               	addwfc	fsr2h,f,c
 19263  001978  C0D1  FFDF         	movff	AssemblePacket@fCtrl,indf2
 19264                           
 19265                           ; BSR set to: 0
 19266  00197C  2BD3               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19267                           
 19268                           ; BSR set to: 0
 19269                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 19270  00197E  0EB8               	movlw	low _macBuffer
 19271  001980  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19272  001982  6F60               	movwf	memcpy@d1& (0+255),b
 19273  001984  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19274  001986  0E06               	movlw	high _macBuffer
 19275  001988  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19276  00198A  0E0B               	movlw	low (_loRa+6)
 19277  00198C  6F62               	movwf	memcpy@s1& (0+255),b
 19278  00198E  0E02               	movlw	high (_loRa+6)
 19279  001990  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19280  001992  0E00               	movlw	0
 19281  001994  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19282  001996  0E02               	movlw	2
 19283  001998  6F64               	movwf	memcpy@n& (0+255),b
 19284  00199A  ECC3  F047         	call	_memcpy	;wreg free
 19285                           
 19286                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 19287  00199E  0100               	movlb	0	; () banked
 19288  0019A0  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19289  0019A2  0F02               	addlw	2
 19290  0019A4  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19291                           
 19292                           ; BSR set to: 0
 19293                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 19294  0019A6  0102               	movlb	2	; () banked
 19295  0019A8  51AC               	movf	(_loRa+167)& (0+255),w,b
 19296  0019AA  B4D8               	btfsc	status,2,c
 19297  0019AC  D011               	goto	l19762
 19298                           
 19299                           ; BSR set to: 2
 19300  0019AE  0100               	movlb	0	; () banked
 19301  0019B0  51CB               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19302  0019B2  11CC               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19303  0019B4  B4D8               	btfsc	status,2,c
 19304  0019B6  D00C               	goto	l19762
 19305                           
 19306                           ; BSR set to: 0
 19307                           ;lorawan.c: 1774: {;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex
      +                          , 1);
 19308  0019B8  0EB8               	movlw	low _macBuffer
 19309  0019BA  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19310  0019BC  0E06               	movlw	high _macBuffer
 19311  0019BE  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19312  0019C0  0ED3               	movlw	low AssemblePacket@bufferIndex
 19313  0019C2  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19314  0019C4  0E00               	movlw	high AssemblePacket@bufferIndex
 19315  0019C6  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19316  0019C8  0E01               	movlw	1
 19317  0019CA  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19318  0019CC  EC9E  F012         	call	_IncludeMacCommandsResponse	;wreg free
 19319  0019D0                     l19762:
 19320                           
 19321                           ;lorawan.c: 1776: };lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 19322  0019D0  0EB8               	movlw	low _macBuffer
 19323  0019D2  0100               	movlb	0	; () banked
 19324  0019D4  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19325  0019D6  6ED9               	movwf	fsr2l,c
 19326  0019D8  6ADA               	clrf	fsr2h,c
 19327  0019DA  0E06               	movlw	high _macBuffer
 19328  0019DC  22DA               	addwfc	fsr2h,f,c
 19329  0019DE  C0C8  FFDF         	movff	AssemblePacket@port,indf2
 19330                           
 19331                           ; BSR set to: 0
 19332  0019E2  2BD3               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19333                           
 19334                           ; BSR set to: 0
 19335                           ;lorawan.c: 1780: if (bufferLength != 0)
 19336  0019E4  51CB               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19337  0019E6  11CC               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19338  0019E8  B4D8               	btfsc	status,2,c
 19339  0019EA  D033               	goto	l19774
 19340                           
 19341                           ; BSR set to: 0
 19342                           ;lorawan.c: 1781: {;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLeng
      +                          th);
 19343  0019EC  0EB8               	movlw	low _macBuffer
 19344  0019EE  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19345  0019F0  6F60               	movwf	memcpy@d1& (0+255),b
 19346  0019F2  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19347  0019F4  0E06               	movlw	high _macBuffer
 19348  0019F6  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19349  0019F8  C0C9  F062         	movff	AssemblePacket@buffer,memcpy@s1
 19350  0019FC  C0CA  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 19351  001A00  C0CB  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 19352  001A04  C0CC  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 19353  001A08  ECC3  F047         	call	_memcpy	;wreg free
 19354                           
 19355                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 19356  001A0C  C0C9  F092         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 19357  001A10  C0CA  F093         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 19358  001A14  C0CB  F094         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 19359  001A18  0E00               	movlw	0
 19360  001A1A  0100               	movlb	0	; () banked
 19361  001A1C  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 19362  001A1E  C20B  F096         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19363  001A22  C20C  F097         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19364  001A26  C20D  F098         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19365  001A2A  C20E  F099         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19366  001A2E  0E37               	movlw	low (_loRa+50)
 19367  001A30  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 19368  001A32  0E02               	movlw	high (_loRa+50)
 19369  001A34  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19370  001A36  C0D3  F09C         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19371  001A3A  0EB8               	movlw	low _macBuffer
 19372  001A3C  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19373  001A3E  0E06               	movlw	high _macBuffer
 19374  001A40  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19375  001A42  0E00               	movlw	0
 19376  001A44  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19377  001A46  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 19378                           
 19379                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 19380  001A4A  0100               	movlb	0	; () banked
 19381  001A4C  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19382  001A4E  25CB               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 19383  001A50  D033               	goto	L19
 19384  001A52                     l19774:
 19385                           
 19386                           ; BSR set to: 0
 19387                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 19388  001A52  0102               	movlb	2	; () banked
 19389  001A54  51AC               	movf	(_loRa+167)& (0+255),w,b
 19390  001A56  B4D8               	btfsc	status,2,c
 19391  001A58  D030               	goto	l19780
 19392                           
 19393                           ; BSR set to: 2
 19394                           ;lorawan.c: 1787: {;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx
      +                          , 0 );
 19395  001A5A  0EC7               	movlw	low _radioBuffer
 19396  001A5C  0100               	movlb	0	; () banked
 19397  001A5E  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19398  001A60  0E07               	movlw	high _radioBuffer
 19399  001A62  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19400  001A64  0ED2               	movlw	low AssemblePacket@macCmdIdx
 19401  001A66  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19402  001A68  0E00               	movlw	high AssemblePacket@macCmdIdx
 19403  001A6A  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19404  001A6C  0E00               	movlw	0
 19405  001A6E  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19406  001A70  EC9E  F012         	call	_IncludeMacCommandsResponse	;wreg free
 19407                           
 19408                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 19409  001A74  0EC7               	movlw	low _radioBuffer
 19410  001A76  0100               	movlb	0	; () banked
 19411  001A78  6F92               	movwf	EncryptFRMPayload@buffer& (0+255),b
 19412  001A7A  0E07               	movlw	high _radioBuffer
 19413  001A7C  6F93               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 19414  001A7E  C0D2  F094         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 19415  001A82  0E00               	movlw	0
 19416  001A84  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 19417  001A86  C20B  F096         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19418  001A8A  C20C  F097         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19419  001A8E  C20D  F098         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19420  001A92  C20E  F099         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19421  001A96  0E27               	movlw	low (_loRa+34)
 19422  001A98  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 19423  001A9A  0E02               	movlw	high (_loRa+34)
 19424  001A9C  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19425  001A9E  C0D3  F09C         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19426  001AA2  0EB8               	movlw	low _macBuffer
 19427  001AA4  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19428  001AA6  0E06               	movlw	high _macBuffer
 19429  001AA8  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19430  001AAA  0E00               	movlw	0
 19431  001AAC  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19432  001AAE  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 19433                           
 19434                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 19435  001AB2  0100               	movlb	0	; () banked
 19436  001AB4  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19437  001AB6  25D2               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 19438  001AB8                     L19:
 19439  001AB8  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19440  001ABA                     l19780:
 19441                           
 19442                           ;lorawan.c: 1793: };lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, buff
      +                          erIndex - 16, 0x49, 0);
 19443  001ABA  C20B  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 19444  001ABE  C20C  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 19445  001AC2  C20D  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 19446  001AC6  C20E  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 19447  001ACA  0100               	movlb	0	; () banked
 19448  001ACC  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19449  001ACE  0FF0               	addlw	240
 19450  001AD0  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 19451  001AD2  0E49               	movlw	73
 19452  001AD4  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19453  001AD6  0E00               	movlw	0
 19454  001AD8  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 19455  001ADA  0E00               	movlw	0
 19456  001ADC  EC84  F03A         	call	_AssembleEncryptionBlock
 19457                           
 19458                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 19459  001AE0  0EB8               	movlw	low _macBuffer
 19460  001AE2  0100               	movlb	0	; () banked
 19461  001AE4  6F60               	movwf	memcpy@d1& (0+255),b
 19462  001AE6  0E06               	movlw	high _macBuffer
 19463  001AE8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19464  001AEA  0E5F               	movlw	low _aesBuffer
 19465  001AEC  6F62               	movwf	memcpy@s1& (0+255),b
 19466  001AEE  0E01               	movlw	high _aesBuffer
 19467  001AF0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19468  001AF2  0E00               	movlw	0
 19469  001AF4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19470  001AF6  0E10               	movlw	16
 19471  001AF8  6F64               	movwf	memcpy@n& (0+255),b
 19472  001AFA  ECC3  F047         	call	_memcpy	;wreg free
 19473                           
 19474                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 19475  001AFE  0E27               	movlw	low (_loRa+34)
 19476  001B00  0100               	movlb	0	; () banked
 19477  001B02  6FBA               	movwf	AESCmac@key& (0+255),b
 19478  001B04  0E02               	movlw	high (_loRa+34)
 19479  001B06  6FBB               	movwf	(AESCmac@key+1)& (0+255),b
 19480  001B08  0E5F               	movlw	low _aesBuffer
 19481  001B0A  6FBC               	movwf	AESCmac@output& (0+255),b
 19482  001B0C  0E01               	movlw	high _aesBuffer
 19483  001B0E  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 19484  001B10  0EB8               	movlw	low _macBuffer
 19485  001B12  6FBE               	movwf	AESCmac@input& (0+255),b
 19486  001B14  0E06               	movlw	high _macBuffer
 19487  001B16  6FBF               	movwf	(AESCmac@input+1)& (0+255),b
 19488  001B18  C0D3  F0C0         	movff	AssemblePacket@bufferIndex,AESCmac@size
 19489  001B1C  ECAD  F00D         	call	_AESCmac	;wreg free
 19490                           
 19491                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 19492  001B20  0EB8               	movlw	low _macBuffer
 19493  001B22  0100               	movlb	0	; () banked
 19494  001B24  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19495  001B26  6F60               	movwf	memcpy@d1& (0+255),b
 19496  001B28  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19497  001B2A  0E06               	movlw	high _macBuffer
 19498  001B2C  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19499  001B2E  0E5F               	movlw	low _aesBuffer
 19500  001B30  6F62               	movwf	memcpy@s1& (0+255),b
 19501  001B32  0E01               	movlw	high _aesBuffer
 19502  001B34  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19503  001B36  0E00               	movlw	0
 19504  001B38  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19505  001B3A  0E04               	movlw	4
 19506  001B3C  6F64               	movwf	memcpy@n& (0+255),b
 19507  001B3E  ECC3  F047         	call	_memcpy	;wreg free
 19508                           
 19509                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 19510  001B42  0100               	movlb	0	; () banked
 19511  001B44  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19512  001B46  0F04               	addlw	4
 19513  001B48  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19514                           
 19515                           ; BSR set to: 0
 19516                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 19517  001B4A  0EF0               	movlw	240
 19518  001B4C  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19519  001B4E  0102               	movlb	2	; () banked
 19520  001B50  6FD9               	movwf	(_loRa+212)& (0+255),b
 19521  001B52  6BDA               	clrf	(_loRa+213)& (0+255),b
 19522  001B54  0EFF               	movlw	255
 19523  001B56  23DA               	addwfc	(_loRa+213)& (0+255),f,b
 19524                           
 19525                           ; BSR set to: 2
 19526  001B58  0012               	return		;funcret
 19527  001B5A                     __end_of_AssemblePacket:
 19528                           	opt callstack 0
 19529                           
 19530 ;; *************** function _IncludeMacCommandsResponse *****************
 19531 ;; Defined at:
 19532 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19533 ;; Parameters:    Size  Location     Type
 19534 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 19535 ;;		 -> macBuffer(271), radioBuffer(271), 
 19536 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 19537 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 19538 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 19539 ;; Auto vars:     Size  Location     Type
 19540 ;;  bufferIndex     1   13[BANK0 ] unsigned char 
 19541 ;;  i               1   12[BANK0 ] unsigned char 
 19542 ;; Return value:  Size  Location     Type
 19543 ;;                  1    wreg      void 
 19544 ;; Registers used:
 19545 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19546 ;; Tracked objects:
 19547 ;;		On entry : 0/0
 19548 ;;		On exit  : 0/0
 19549 ;;		Unchanged: 0/0
 19550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19551 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19552 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19553 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19554 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19555 ;;Total ram usage:       14 bytes
 19556 ;; Hardware stack levels used:    1
 19557 ;; Hardware stack levels required when called:    8
 19558 ;; This function calls:
 19559 ;;		_RADIO_GetPacketSnr
 19560 ;; This function is called by:
 19561 ;;		_AssemblePacket
 19562 ;; This function uses a non-reentrant model
 19563 ;;
 19564                           
 19565                           	psect	text89
 19566  00253C                     __ptext89:
 19567                           	opt callstack 0
 19568  00253C                     _IncludeMacCommandsResponse:
 19569                           	opt callstack 18
 19570                           
 19571                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 19572                           
 19573                           ; BSR set to: 2
 19574                           ;incstack = 0
 19575  00253C  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19576  002540  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19577  002544  50DF               	movf	indf2,w,c
 19578  002546  0100               	movlb	0	; () banked
 19579  002548  6F6D               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 19580                           
 19581                           ; BSR set to: 0
 19582                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 19583  00254A  0E00               	movlw	0
 19584  00254C  6F6C               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19585  00254E  D182               	goto	l19288
 19586  002550                     l19190:
 19587                           
 19588                           ; BSR set to: 0
 19589                           ;lorawan.c: 1851: {;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receiv
      +                          edCid != 0xFF))
 19590  002550  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 19591  002552  B4D8               	btfsc	status,2,c
 19592  002554  D160               	goto	l19284
 19593                           
 19594                           ; BSR set to: 0
 19595  002556  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19596  002558  0D02               	mullw	2
 19597  00255A  0EAD               	movlw	low (_loRa+168)
 19598  00255C  24F3               	addwf	prodl,w,c
 19599  00255E  6ED9               	movwf	fsr2l,c
 19600  002560  0E02               	movlw	high (_loRa+168)
 19601  002562  20F4               	addwfc	prodh,w,c
 19602  002564  6EDA               	movwf	fsr2h,c
 19603  002566  28DE               	incf	postinc2,w,c
 19604  002568  B4D8               	btfsc	status,2,c
 19605  00256A  D155               	goto	l19284
 19606                           
 19607                           ; BSR set to: 0
 19608                           ;lorawan.c: 1853: {;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdRep
      +                          lyLen[loRa.macCommands[i].receivedCid - 2]) > 0x0F)
 19609  00256C  0EFE               	movlw	254
 19610  00256E  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19611  002570  0EFF               	movlw	255
 19612  002572  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19613  002574  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19614  002576  0D02               	mullw	2
 19615  002578  0EAD               	movlw	low (_loRa+168)
 19616  00257A  24F3               	addwf	prodl,w,c
 19617  00257C  6ED9               	movwf	fsr2l,c
 19618  00257E  0E02               	movlw	high (_loRa+168)
 19619  002580  20F4               	addwfc	prodh,w,c
 19620  002582  6EDA               	movwf	fsr2h,c
 19621  002584  50DF               	movf	indf2,w,c
 19622  002586  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 19623  002588  6B68               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 19624  00258A  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 19625  00258C  2767               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 19626  00258E  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19627  002590  2368               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 19628  002592  0E27               	movlw	low _macEndDevCmdReplyLen
 19629  002594  2567               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 19630  002596  6EF6               	movwf	tblptrl,c
 19631  002598  0EFF               	movlw	high _macEndDevCmdReplyLen
 19632  00259A  2168               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 19633  00259C  6EF7               	movwf	tblptrh,c
 19634  00259E                     	if	1	;There are 3 active tblptr bytes
 19635  00259E  6AF8               	clrf	tblptru,c
 19636  0025A0  0E00               	movlw	low (__mediumconst shr (0+16))
 19637  0025A2  22F8               	addwfc	tblptru,f,c
 19638  0025A4                     	endif
 19639  0025A4  0008               	tblrd		*
 19640  0025A6  50F5               	movf	tablat,w,c
 19641  0025A8  C06D  F069         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 19642  0025AC  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 19643  0025AE  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19644  0025B0  0E00               	movlw	0
 19645  0025B2  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19646  0025B4  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19647  0025B8  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19648  0025BC  50DF               	movf	indf2,w,c
 19649  0025BE  6F6B               	movwf	(??_IncludeMacCommandsResponse+6)& (0+255),b
 19650  0025C0  516B               	movf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 19651  0025C2  5F69               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19652  0025C4  0E00               	movlw	0
 19653  0025C6  5B6A               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19654  0025C8  BF6A               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 19655  0025CA  D125               	goto	l19284
 19656  0025CC  516A               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 19657  0025CE  E105               	bnz	u20690
 19658  0025D0  0E10               	movlw	16
 19659  0025D2  5D69               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 19660  0025D4  B0D8               	btfsc	status,0,c
 19661  0025D6  D144               	goto	u20800
 19662  0025D8  D11E               	goto	l19284
 19663  0025DA                     u20690:
 19664  0025DA  D142               	goto	u20800
 19665  0025DC                     l19198:
 19666                           
 19667                           ; BSR set to: 0
 19668                           ;lorawan.c: 1862: {;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 19669  0025DC  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19670  0025DE  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19671  0025E0  6ED9               	movwf	fsr2l,c
 19672  0025E2  0E00               	movlw	0
 19673  0025E4  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19674  0025E6  6EDA               	movwf	fsr2h,c
 19675  0025E8  0E03               	movlw	3
 19676  0025EA  6EDF               	movwf	indf2,c
 19677                           
 19678                           ; BSR set to: 0
 19679  0025EC  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19680                           
 19681                           ; BSR set to: 0
 19682                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 19683  0025EE  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19684  0025F0  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19685  0025F2  6ED9               	movwf	fsr2l,c
 19686  0025F4  0E00               	movlw	0
 19687  0025F6  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19688  0025F8  6EDA               	movwf	fsr2h,c
 19689  0025FA  0E00               	movlw	0
 19690  0025FC  6EDF               	movwf	indf2,c
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 19694  0025FE  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19695  002600  0D02               	mullw	2
 19696  002602  0EAE               	movlw	low (_loRa+169)
 19697  002604  24F3               	addwf	prodl,w,c
 19698  002606  6ED9               	movwf	fsr2l,c
 19699  002608  0E02               	movlw	high (_loRa+169)
 19700  00260A  20F4               	addwfc	prodh,w,c
 19701  00260C  6EDA               	movwf	fsr2h,c
 19702  00260E  0102               	movlb	2	; () banked
 19703  002610  A0DF               	btfss	indf2,0,c
 19704  002612  D009               	goto	l19208
 19705                           
 19706                           ; BSR set to: 2
 19707                           ;lorawan.c: 1866: {;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 19708  002614  0100               	movlb	0	; () banked
 19709  002616  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19710  002618  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19711  00261A  6ED9               	movwf	fsr2l,c
 19712  00261C  0E00               	movlw	0
 19713  00261E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19714  002620  6EDA               	movwf	fsr2h,c
 19715  002622  0E00               	movlw	0
 19716  002624  80DB               	bsf	plusw2,0,c
 19717  002626                     l19208:
 19718                           
 19719                           ;lorawan.c: 1868: };lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 19720  002626  0100               	movlb	0	; () banked
 19721  002628  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19722  00262A  0D02               	mullw	2
 19723  00262C  0EAE               	movlw	low (_loRa+169)
 19724  00262E  24F3               	addwf	prodl,w,c
 19725  002630  6ED9               	movwf	fsr2l,c
 19726  002632  0E02               	movlw	high (_loRa+169)
 19727  002634  20F4               	addwfc	prodh,w,c
 19728  002636  6EDA               	movwf	fsr2h,c
 19729  002638  0102               	movlb	2	; () banked
 19730  00263A  A2DF               	btfss	indf2,1,c
 19731  00263C  D009               	goto	l19212
 19732                           
 19733                           ; BSR set to: 2
 19734                           ;lorawan.c: 1871: {;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 19735  00263E  0100               	movlb	0	; () banked
 19736  002640  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19737  002642  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19738  002644  6ED9               	movwf	fsr2l,c
 19739  002646  0E00               	movlw	0
 19740  002648  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19741  00264A  6EDA               	movwf	fsr2h,c
 19742  00264C  0E00               	movlw	0
 19743  00264E  82DB               	bsf	plusw2,1,c
 19744  002650                     l19212:
 19745                           
 19746                           ;lorawan.c: 1873: };lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 19747  002650  0100               	movlb	0	; () banked
 19748  002652  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19749  002654  0D02               	mullw	2
 19750  002656  0EAE               	movlw	low (_loRa+169)
 19751  002658  24F3               	addwf	prodl,w,c
 19752  00265A  6ED9               	movwf	fsr2l,c
 19753  00265C  0E02               	movlw	high (_loRa+169)
 19754  00265E  20F4               	addwfc	prodh,w,c
 19755  002660  6EDA               	movwf	fsr2h,c
 19756  002662  0102               	movlb	2	; () banked
 19757  002664  A4DF               	btfss	indf2,2,c
 19758  002666  D009               	goto	l19216
 19759  002668                     u20720:
 19760                           
 19761                           ; BSR set to: 2
 19762                           ;lorawan.c: 1876: {;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 19763  002668  0100               	movlb	0	; () banked
 19764  00266A  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19765  00266C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19766  00266E  6ED9               	movwf	fsr2l,c
 19767  002670  0E00               	movlw	0
 19768  002672  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19769  002674  6EDA               	movwf	fsr2h,c
 19770  002676  0E00               	movlw	0
 19771  002678  84DB               	bsf	plusw2,2,c
 19772  00267A                     l19216:
 19773                           
 19774                           ;lorawan.c: 1878: };lorawan.c: 1879: bufferIndex ++;
 19775  00267A  0100               	movlb	0	; () banked
 19776  00267C  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19777                           
 19778                           ;lorawan.c: 1880: };lorawan.c: 1881: break;
 19779  00267E  D0E9               	goto	l19286
 19780  002680                     l19218:
 19781                           
 19782                           ; BSR set to: 0
 19783                           ;lorawan.c: 1884: {;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 19784  002680  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19785  002682  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19786  002684  6ED9               	movwf	fsr2l,c
 19787  002686  0E00               	movlw	0
 19788  002688  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19789  00268A  6EDA               	movwf	fsr2h,c
 19790  00268C  0E05               	movlw	5
 19791  00268E  6EDF               	movwf	indf2,c
 19792                           
 19793                           ; BSR set to: 0
 19794  002690  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19795                           
 19796                           ; BSR set to: 0
 19797                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 19798  002692  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19799  002694  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19800  002696  6ED9               	movwf	fsr2l,c
 19801  002698  0E00               	movlw	0
 19802  00269A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19803  00269C  6EDA               	movwf	fsr2h,c
 19804  00269E  0E00               	movlw	0
 19805  0026A0  6EDF               	movwf	indf2,c
 19806                           
 19807                           ; BSR set to: 0
 19808                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 19809  0026A2  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19810  0026A4  0D02               	mullw	2
 19811  0026A6  0EAE               	movlw	low (_loRa+169)
 19812  0026A8  24F3               	addwf	prodl,w,c
 19813  0026AA  6ED9               	movwf	fsr2l,c
 19814  0026AC  0E02               	movlw	high (_loRa+169)
 19815  0026AE  20F4               	addwfc	prodh,w,c
 19816  0026B0  6EDA               	movwf	fsr2h,c
 19817  0026B2  0102               	movlb	2	; () banked
 19818  0026B4  A6DF               	btfss	indf2,3,c
 19819  0026B6  D009               	goto	l19228
 19820                           
 19821                           ; BSR set to: 2
 19822                           ;lorawan.c: 1888: {;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 19823  0026B8  0100               	movlb	0	; () banked
 19824  0026BA  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19825  0026BC  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19826  0026BE  6ED9               	movwf	fsr2l,c
 19827  0026C0  0E00               	movlw	0
 19828  0026C2  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19829  0026C4  6EDA               	movwf	fsr2h,c
 19830  0026C6  0E00               	movlw	0
 19831  0026C8  80DB               	bsf	plusw2,0,c
 19832  0026CA                     l19228:
 19833                           
 19834                           ;lorawan.c: 1890: };lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck ==
      +                           1)
 19835  0026CA  0100               	movlb	0	; () banked
 19836  0026CC  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19837  0026CE  0D02               	mullw	2
 19838  0026D0  0EAE               	movlw	low (_loRa+169)
 19839  0026D2  24F3               	addwf	prodl,w,c
 19840  0026D4  6ED9               	movwf	fsr2l,c
 19841  0026D6  0E02               	movlw	high (_loRa+169)
 19842  0026D8  20F4               	addwfc	prodh,w,c
 19843  0026DA  6EDA               	movwf	fsr2h,c
 19844  0026DC  0102               	movlb	2	; () banked
 19845  0026DE  A8DF               	btfss	indf2,4,c
 19846  0026E0  D009               	goto	l19232
 19847                           
 19848                           ; BSR set to: 2
 19849                           ;lorawan.c: 1893: {;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 19850  0026E2  0100               	movlb	0	; () banked
 19851  0026E4  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19852  0026E6  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19853  0026E8  6ED9               	movwf	fsr2l,c
 19854  0026EA  0E00               	movlw	0
 19855  0026EC  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19856  0026EE  6EDA               	movwf	fsr2h,c
 19857  0026F0  0E00               	movlw	0
 19858  0026F2  82DB               	bsf	plusw2,1,c
 19859  0026F4                     l19232:
 19860                           
 19861                           ;lorawan.c: 1895: };lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 19862  0026F4  0100               	movlb	0	; () banked
 19863  0026F6  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19864  0026F8  0D02               	mullw	2
 19865  0026FA  0EAE               	movlw	low (_loRa+169)
 19866  0026FC  24F3               	addwf	prodl,w,c
 19867  0026FE  6ED9               	movwf	fsr2l,c
 19868  002700  0E02               	movlw	high (_loRa+169)
 19869  002702  20F4               	addwfc	prodh,w,c
 19870  002704  6EDA               	movwf	fsr2h,c
 19871  002706  0102               	movlb	2	; () banked
 19872  002708  BADF               	btfsc	indf2,5,c
 19873  00270A  D7AE               	goto	u20720
 19874  00270C  D7B6               	goto	l19216
 19875  00270E                     l19238:
 19876                           
 19877                           ; BSR set to: 0
 19878                           ;lorawan.c: 1907: {;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 19879  00270E  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19880  002710  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19881  002712  6ED9               	movwf	fsr2l,c
 19882  002714  0E00               	movlw	0
 19883  002716  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19884  002718  6EDA               	movwf	fsr2h,c
 19885  00271A  0E06               	movlw	6
 19886  00271C  6EDF               	movwf	indf2,c
 19887                           
 19888                           ; BSR set to: 0
 19889  00271E  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19890                           
 19891                           ; BSR set to: 0
 19892                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 19893  002720  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19894  002722  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19895  002724  6ED9               	movwf	fsr2l,c
 19896  002726  0E00               	movlw	0
 19897  002728  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19898  00272A  6EDA               	movwf	fsr2h,c
 19899  00272C  C2E5  FFDF         	movff	_loRa+224,indf2
 19900  002730  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19901                           
 19902                           ; BSR set to: 0
 19903                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 19904  002732  ECED  F053         	call	_RADIO_GetPacketSnr	;wreg free
 19905  002736  0A80               	xorlw	128
 19906  002738  0FA0               	addlw	160
 19907  00273A  A0D8               	btfss	status,0,c
 19908  00273C  D006               	goto	u20770
 19909  00273E  ECED  F053         	call	_RADIO_GetPacketSnr	;wreg free
 19910  002742  0A80               	xorlw	128
 19911  002744  0F60               	addlw	-160
 19912  002746  A0D8               	btfss	status,0,c
 19913  002748  D009               	goto	l19252
 19914  00274A                     u20770:
 19915                           
 19916                           ;lorawan.c: 1911: {;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 19917  00274A  0100               	movlb	0	; () banked
 19918  00274C  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19919  00274E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19920  002750  6ED9               	movwf	fsr2l,c
 19921  002752  0E00               	movlw	0
 19922  002754  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19923  002756  6EDA               	movwf	fsr2h,c
 19924  002758  0E20               	movlw	32
 19925  00275A  D00A               	goto	L21
 19926  00275C                     l19252:
 19927                           
 19928                           ;lorawan.c: 1914: else;lorawan.c: 1915: {;lorawan.c: 1916: macBuffer[bufferIndex++] = ((
      +                          uint8_t)RADIO_GetPacketSnr() & 0x3F);
 19929  00275C  0100               	movlb	0	; () banked
 19930  00275E  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19931  002760  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19932  002762  6ED9               	movwf	fsr2l,c
 19933  002764  0E00               	movlw	0
 19934  002766  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19935  002768  6EDA               	movwf	fsr2h,c
 19936  00276A  ECED  F053         	call	_RADIO_GetPacketSnr	;wreg free
 19937  00276E  0B3F               	andlw	63
 19938  002770                     L21:
 19939  002770  6EDF               	movwf	indf2,c
 19940  002772  D783               	goto	l19216
 19941  002774                     l19256:
 19942                           
 19943                           ; BSR set to: 0
 19944                           ;lorawan.c: 1922: {;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 19945  002774  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19946  002776  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19947  002778  6ED9               	movwf	fsr2l,c
 19948  00277A  0E00               	movlw	0
 19949  00277C  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19950  00277E  6EDA               	movwf	fsr2h,c
 19951  002780  0E07               	movlw	7
 19952  002782  6EDF               	movwf	indf2,c
 19953                           
 19954                           ; BSR set to: 0
 19955  002784  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 19959  002786  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19960  002788  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19961  00278A  6ED9               	movwf	fsr2l,c
 19962  00278C  0E00               	movlw	0
 19963  00278E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19964  002790  6EDA               	movwf	fsr2h,c
 19965  002792  0E00               	movlw	0
 19966  002794  6EDF               	movwf	indf2,c
 19967                           
 19968                           ; BSR set to: 0
 19969                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 19970  002796  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19971  002798  0D02               	mullw	2
 19972  00279A  0EAE               	movlw	low (_loRa+169)
 19973  00279C  24F3               	addwf	prodl,w,c
 19974  00279E  6ED9               	movwf	fsr2l,c
 19975  0027A0  0E02               	movlw	high (_loRa+169)
 19976  0027A2  20F4               	addwfc	prodh,w,c
 19977  0027A4  6EDA               	movwf	fsr2h,c
 19978  0027A6  0102               	movlb	2	; () banked
 19979  0027A8  AEDF               	btfss	indf2,7,c
 19980  0027AA  D009               	goto	l19266
 19981                           
 19982                           ; BSR set to: 2
 19983                           ;lorawan.c: 1926: {;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 19984  0027AC  0100               	movlb	0	; () banked
 19985  0027AE  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19986  0027B0  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19987  0027B2  6ED9               	movwf	fsr2l,c
 19988  0027B4  0E00               	movlw	0
 19989  0027B6  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19990  0027B8  6EDA               	movwf	fsr2h,c
 19991  0027BA  0E00               	movlw	0
 19992  0027BC  80DB               	bsf	plusw2,0,c
 19993  0027BE                     l19266:
 19994                           
 19995                           ;lorawan.c: 1928: };lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 19996  0027BE  0100               	movlb	0	; () banked
 19997  0027C0  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19998  0027C2  0D02               	mullw	2
 19999  0027C4  0EAE               	movlw	low (_loRa+169)
 20000  0027C6  24F3               	addwf	prodl,w,c
 20001  0027C8  6ED9               	movwf	fsr2l,c
 20002  0027CA  0E02               	movlw	high (_loRa+169)
 20003  0027CC  20F4               	addwfc	prodh,w,c
 20004  0027CE  6EDA               	movwf	fsr2h,c
 20005  0027D0  0102               	movlb	2	; () banked
 20006  0027D2  ACDF               	btfss	indf2,6,c
 20007  0027D4  D752               	goto	l19216
 20008                           
 20009                           ; BSR set to: 2
 20010                           ;lorawan.c: 1931: {;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 20011  0027D6  0100               	movlb	0	; () banked
 20012  0027D8  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20013  0027DA  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20014  0027DC  6ED9               	movwf	fsr2l,c
 20015  0027DE  0E00               	movlw	0
 20016  0027E0  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20017  0027E2  6EDA               	movwf	fsr2h,c
 20018  0027E4  0E00               	movlw	0
 20019  0027E6  82DB               	bsf	plusw2,1,c
 20020  0027E8  D748               	goto	l19216
 20021  0027EA                     l2076:
 20022                           
 20023                           ; BSR set to: 0
 20024                           ;lorawan.c: 1939: {;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 20025  0027EA  0102               	movlb	2	; () banked
 20026  0027EC  69E2               	setf	(_loRa+221)& (0+255),b
 20027                           
 20028                           ; BSR set to: 2
 20029                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 20030  0027EE  0E00               	movlw	0
 20031  0027F0  6FE3               	movwf	(_loRa+222)& (0+255),b
 20032  0027F2                     l19274:
 20033                           
 20034                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20035  0027F2  0100               	movlb	0	; () banked
 20036  0027F4  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20037  0027F6  0D02               	mullw	2
 20038  0027F8  0EAD               	movlw	low (_loRa+168)
 20039  0027FA  24F3               	addwf	prodl,w,c
 20040  0027FC  6ED9               	movwf	fsr2l,c
 20041  0027FE  0E02               	movlw	high (_loRa+168)
 20042  002800  20F4               	addwfc	prodh,w,c
 20043  002802  6EDA               	movwf	fsr2h,c
 20044  002804  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20045  002806  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20046  002808  6EE9               	movwf	fsr0l,c
 20047  00280A  0E00               	movlw	0
 20048  00280C  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20049  00280E  6EEA               	movwf	fsr0h,c
 20050  002810  CFDF FFEF          	movff	indf2,indf0
 20051  002814  D732               	goto	l19216
 20052  002816                     l19284:
 20053                           
 20054                           ; BSR set to: 0
 20055  002816  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20056  002818  0D02               	mullw	2
 20057  00281A  0EAD               	movlw	low (_loRa+168)
 20058  00281C  24F3               	addwf	prodl,w,c
 20059  00281E  6ED9               	movwf	fsr2l,c
 20060  002820  0E02               	movlw	high (_loRa+168)
 20061  002822  20F4               	addwfc	prodh,w,c
 20062  002824  6EDA               	movwf	fsr2h,c
 20063  002826  50DF               	movf	indf2,w,c
 20064                           
 20065                           ; Switch size 1, requested type "simple"
 20066                           ; Number of cases is 7, Range of values is 2 to 8
 20067                           ; switch strategies available:
 20068                           ; Name         Instructions Cycles
 20069                           ; simple_byte           22    12 (average)
 20070                           ;	Chosen strategy is simple_byte
 20071  002828  0A02               	xorlw	2	; case 2
 20072  00282A  B4D8               	btfsc	status,2,c
 20073  00282C  D7DE               	goto	l2076
 20074  00282E  0A01               	xorlw	1	; case 3
 20075  002830  B4D8               	btfsc	status,2,c
 20076  002832  D6D4               	goto	l19198
 20077  002834  0A07               	xorlw	7	; case 4
 20078  002836  B4D8               	btfsc	status,2,c
 20079  002838  D7DC               	goto	l19274
 20080  00283A  0A01               	xorlw	1	; case 5
 20081  00283C  B4D8               	btfsc	status,2,c
 20082  00283E  D720               	goto	l19218
 20083  002840  0A03               	xorlw	3	; case 6
 20084  002842  B4D8               	btfsc	status,2,c
 20085  002844  D764               	goto	l19238
 20086  002846  0A01               	xorlw	1	; case 7
 20087  002848  B4D8               	btfsc	status,2,c
 20088  00284A  D794               	goto	l19256
 20089  00284C  0A0F               	xorlw	15	; case 8
 20090  00284E  B4D8               	btfsc	status,2,c
 20091  002850  D7D0               	goto	l19274
 20092  002852                     l19286:
 20093                           
 20094                           ; BSR set to: 0
 20095  002852  2B6C               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 20096  002854                     l19288:
 20097                           
 20098                           ; BSR set to: 0
 20099  002854  0102               	movlb	2	; () banked
 20100  002856  51AC               	movf	(_loRa+167)& (0+255),w,b
 20101  002858  0100               	movlb	0	; () banked
 20102  00285A  5D6C               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 20103  00285C  A0D8               	btfss	status,0,c
 20104  00285E  D678               	goto	l19190
 20105  002860                     u20800:
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;lorawan.c: 1957: };lorawan.c: 1959: *pBufferIndex = bufferIndex;
 20109  002860  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 20110  002864  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 20111  002868  C06D  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 20112                           
 20113                           ; BSR set to: 0
 20114  00286C  0012               	return		;funcret
 20115  00286E                     __end_of_IncludeMacCommandsResponse:
 20116                           	opt callstack 0
 20117                           
 20118 ;; *************** function _RADIO_GetPacketSnr *****************
 20119 ;; Defined at:
 20120 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20121 ;; Parameters:    Size  Location     Type
 20122 ;;		None
 20123 ;; Auto vars:     Size  Location     Type
 20124 ;;		None
 20125 ;; Return value:  Size  Location     Type
 20126 ;;                  1    wreg      char 
 20127 ;; Registers used:
 20128 ;;		wreg, status,2
 20129 ;; Tracked objects:
 20130 ;;		On entry : 0/0
 20131 ;;		On exit  : 0/0
 20132 ;;		Unchanged: 0/0
 20133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20138 ;;Total ram usage:        0 bytes
 20139 ;; Hardware stack levels used:    1
 20140 ;; Hardware stack levels required when called:    7
 20141 ;; This function calls:
 20142 ;;		Nothing
 20143 ;; This function is called by:
 20144 ;;		_IncludeMacCommandsResponse
 20145 ;; This function uses a non-reentrant model
 20146 ;;
 20147                           
 20148                           	psect	text90
 20149  00A7DA                     __ptext90:
 20150                           	opt callstack 0
 20151  00A7DA                     _RADIO_GetPacketSnr:
 20152                           	opt callstack 18
 20153                           
 20154                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 20155                           
 20156                           ; BSR set to: 0
 20157                           ;incstack = 0
 20158  00A7DA  0101               	movlb	1	; () banked
 20159  00A7DC  515B               	movf	(_RadioConfiguration+50)& (0+255),w,b
 20160                           
 20161                           ; BSR set to: 1
 20162  00A7DE  0012               	return		;funcret
 20163  00A7E0                     __end_of_RADIO_GetPacketSnr:
 20164                           	opt callstack 0
 20165                           
 20166 ;; *************** function _FindSmallestDataRate *****************
 20167 ;; Defined at:
 20168 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20169 ;; Parameters:    Size  Location     Type
 20170 ;;		None
 20171 ;; Auto vars:     Size  Location     Type
 20172 ;;  dataRate        1    3[BANK0 ] unsigned char 
 20173 ;;  i               1    2[BANK0 ] unsigned char 
 20174 ;;  found           1    1[BANK0 ] unsigned char 
 20175 ;; Return value:  Size  Location     Type
 20176 ;;                  1    wreg      unsigned char 
 20177 ;; Registers used:
 20178 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20179 ;; Tracked objects:
 20180 ;;		On entry : 0/0
 20181 ;;		On exit  : 0/0
 20182 ;;		Unchanged: 0/0
 20183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20185 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20187 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20188 ;;Total ram usage:        4 bytes
 20189 ;; Hardware stack levels used:    1
 20190 ;; Hardware stack levels required when called:    7
 20191 ;; This function calls:
 20192 ;;		Nothing
 20193 ;; This function is called by:
 20194 ;;		_AckRetransmissionCallback
 20195 ;;		_AssemblePacket
 20196 ;; This function uses a non-reentrant model
 20197 ;;
 20198                           
 20199                           	psect	text91
 20200  0079C2                     __ptext91:
 20201                           	opt callstack 0
 20202  0079C2                     _FindSmallestDataRate:
 20203                           	opt callstack 19
 20204                           
 20205                           ;lorawan.c: 1966: bool found = 0;
 20206                           
 20207                           ; BSR set to: 1
 20208                           ;incstack = 0
 20209  0079C2  0E00               	movlw	0
 20210  0079C4  0100               	movlb	0	; () banked
 20211  0079C6  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20212                           
 20213                           ; BSR set to: 0
 20214                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 20215  0079C8  0102               	movlb	2	; () banked
 20216  0079CA  51E4               	movf	(_loRa+223)& (0+255),w,b
 20217  0079CC  5DF0               	subwf	(_loRa+235)& (0+255),w,b
 20218  0079CE  B0D8               	btfsc	status,0,c
 20219  0079D0  D056               	goto	l19116
 20220                           
 20221                           ; BSR set to: 2
 20222                           ;lorawan.c: 1969: {;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 20223  0079D2  05E4               	decf	(_loRa+223)& (0+255),w,b
 20224  0079D4  0100               	movlb	0	; () banked
 20225  0079D6  D044               	goto	L22
 20226  0079D8                     l19088:
 20227                           
 20228                           ; BSR set to: 0
 20229                           ;lorawan.c: 1973: {;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 20230  0079D8  0E00               	movlw	0
 20231  0079DA  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 20232  0079DC  D031               	goto	l19100
 20233  0079DE                     l19090:
 20234                           
 20235                           ; BSR set to: 0
 20236                           ;lorawan.c: 1975: {;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (da
      +                          taRate <= Channels[i].dataRange.max ) && ( Channels[i].status == 1 ) )
 20237  0079DE  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20238  0079E0  0D0E               	mullw	14
 20239  0079E2  0E19               	movlw	low (_Channels+5)
 20240  0079E4  24F3               	addwf	prodl,w,c
 20241  0079E6  6ED9               	movwf	fsr2l,c
 20242  0079E8  0E04               	movlw	high (_Channels+5)
 20243  0079EA  20F4               	addwfc	prodh,w,c
 20244  0079EC  6EDA               	movwf	fsr2h,c
 20245  0079EE  0104               	movlb	4	; () banked
 20246  0079F0  50DF               	movf	223,w,c
 20247  0079F2  0B0F               	andlw	15
 20248  0079F4  0100               	movlb	0	; () banked
 20249  0079F6  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20250  0079F8  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 20251  0079FA  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20252  0079FC  A0D8               	btfss	status,0,c
 20253  0079FE  D01F               	goto	l19098
 20254                           
 20255                           ; BSR set to: 0
 20256  007A00  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20257  007A02  0D0E               	mullw	14
 20258  007A04  0E19               	movlw	low (_Channels+5)
 20259  007A06  24F3               	addwf	prodl,w,c
 20260  007A08  6ED9               	movwf	fsr2l,c
 20261  007A0A  0E04               	movlw	high (_Channels+5)
 20262  007A0C  20F4               	addwfc	prodh,w,c
 20263  007A0E  6EDA               	movwf	fsr2h,c
 20264  007A10  0104               	movlb	4	; () banked
 20265  007A12  38DF               	swapf	223,w,c
 20266  007A14  0B0F               	andlw	15
 20267  007A16  0100               	movlb	0	; () banked
 20268  007A18  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20269  007A1A  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20270  007A1C  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 20271  007A1E  A0D8               	btfss	status,0,c
 20272  007A20  D00E               	goto	l19098
 20273                           
 20274                           ; BSR set to: 0
 20275  007A22  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20276  007A24  0D0E               	mullw	14
 20277  007A26  0E18               	movlw	low (_Channels+4)
 20278  007A28  24F3               	addwf	prodl,w,c
 20279  007A2A  6ED9               	movwf	fsr2l,c
 20280  007A2C  0E04               	movlw	high (_Channels+4)
 20281  007A2E  20F4               	addwfc	prodh,w,c
 20282  007A30  6EDA               	movwf	fsr2h,c
 20283  007A32  04DE               	decf	postinc2,w,c
 20284  007A34  A4D8               	btfss	status,2,c
 20285  007A36  D003               	goto	l19098
 20286                           
 20287                           ; BSR set to: 0
 20288                           ;lorawan.c: 1977: {;lorawan.c: 1978: found = 1;
 20289  007A38  0E01               	movlw	1
 20290  007A3A  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20291                           
 20292                           ;lorawan.c: 1979: break;
 20293  007A3C  D007               	goto	u20530
 20294  007A3E                     l19098:
 20295                           
 20296                           ; BSR set to: 0
 20297  007A3E  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 20298  007A40                     l19100:
 20299                           
 20300                           ; BSR set to: 0
 20301  007A40  0102               	movlb	2	; () banked
 20302  007A42  51F2               	movf	(_loRa+237)& (0+255),w,b
 20303  007A44  0100               	movlb	0	; () banked
 20304  007A46  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 20305  007A48  A0D8               	btfss	status,0,c
 20306  007A4A  D7C9               	goto	l19090
 20307  007A4C                     u20530:
 20308                           
 20309                           ; BSR set to: 0
 20310                           ;lorawan.c: 1980: };lorawan.c: 1981: };lorawan.c: 1982: if ( (found == 0) && (dataRate >
      +                           loRa.minDataRate) )
 20311  007A4C  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20312  007A4E  A4D8               	btfss	status,2,c
 20313  007A50  D008               	goto	l19108
 20314                           
 20315                           ; BSR set to: 0
 20316  007A52  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20317  007A54  0102               	movlb	2	; () banked
 20318  007A56  5DF0               	subwf	(_loRa+235)& (0+255),w,b
 20319  007A58  B0D8               	btfsc	status,0,c
 20320  007A5A  D003               	goto	l19108
 20321                           
 20322                           ; BSR set to: 2
 20323                           ;lorawan.c: 1983: {;lorawan.c: 1984: dataRate = dataRate - 1;
 20324  007A5C  0100               	movlb	0	; () banked
 20325  007A5E  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 20326  007A60                     L22:
 20327  007A60  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 20328  007A62                     l19108:
 20329  007A62  0100               	movlb	0	; () banked
 20330  007A64  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20331  007A66  A4D8               	btfss	status,2,c
 20332  007A68  D006               	goto	u20570
 20333                           
 20334                           ; BSR set to: 0
 20335  007A6A  0102               	movlb	2	; () banked
 20336  007A6C  51F0               	movf	(_loRa+235)& (0+255),w,b
 20337  007A6E  0100               	movlb	0	; () banked
 20338  007A70  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20339  007A72  B0D8               	btfsc	status,0,c
 20340  007A74  D7B1               	goto	l19088
 20341  007A76                     u20570:
 20342                           
 20343                           ; BSR set to: 0
 20344                           ;lorawan.c: 1985: };lorawan.c: 1986: };lorawan.c: 1988: if (found == 1)
 20345  007A76  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 20346  007A78  B4D8               	btfsc	status,2,c
 20347                           
 20348                           ; BSR set to: 0
 20349                           ;lorawan.c: 1989: {;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 20350  007A7A  C063  F2E4         	movff	FindSmallestDataRate@dataRate,_loRa+223
 20351  007A7E                     l19116:
 20352                           
 20353                           ;lorawan.c: 1991: };lorawan.c: 1992: };lorawan.c: 1994: return found;
 20354  007A7E  0100               	movlb	0	; () banked
 20355  007A80  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20356                           
 20357                           ; BSR set to: 0
 20358  007A82  0012               	return		;funcret
 20359  007A84                     __end_of_FindSmallestDataRate:
 20360                           	opt callstack 0
 20361                           
 20362 ;; *************** function _EncryptFRMPayload *****************
 20363 ;; Defined at:
 20364 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20365 ;; Parameters:    Size  Location     Type
 20366 ;;  buffer          2   50[BANK0 ] PTR unsigned char 
 20367 ;;		 -> sensorsString(40), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 20368 ;;  bufferLength    1   52[BANK0 ] unsigned char 
 20369 ;;  dir             1   53[BANK0 ] unsigned char 
 20370 ;;  frameCounter    4   54[BANK0 ] unsigned long 
 20371 ;;  key             2   58[BANK0 ] PTR unsigned char 
 20372 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20373 ;;  macBufferInd    1   60[BANK0 ] unsigned char 
 20374 ;;  bufferToBeEn    2   61[BANK0 ] PTR unsigned char 
 20375 ;;		 -> macBuffer(271), radioBuffer(271), 
 20376 ;;  multicastSta    1   63[BANK0 ] unsigned char 
 20377 ;; Auto vars:     Size  Location     Type
 20378 ;;  j               1   71[BANK0 ] unsigned char 
 20379 ;;  i               1   70[BANK0 ] unsigned char 
 20380 ;;  k               1   69[BANK0 ] unsigned char 
 20381 ;; Return value:  Size  Location     Type
 20382 ;;                  1    wreg      void 
 20383 ;; Registers used:
 20384 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20385 ;; Tracked objects:
 20386 ;;		On entry : 0/0
 20387 ;;		On exit  : 0/0
 20388 ;;		Unchanged: 0/0
 20389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20390 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20391 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20392 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20393 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20394 ;;Total ram usage:       22 bytes
 20395 ;; Hardware stack levels used:    1
 20396 ;; Hardware stack levels required when called:   10
 20397 ;; This function calls:
 20398 ;;		_AESEncodeLoRa
 20399 ;;		_AssembleEncryptionBlock
 20400 ;;		___awdiv
 20401 ;; This function is called by:
 20402 ;;		_LORAWAN_RxDone
 20403 ;;		_AssemblePacket
 20404 ;; This function uses a non-reentrant model
 20405 ;;
 20406                           
 20407                           	psect	text92
 20408  004E22                     __ptext92:
 20409                           	opt callstack 0
 20410  004E22                     _EncryptFRMPayload:
 20411                           	opt callstack 16
 20412                           
 20413                           ; BSR set to: 0
 20414                           ;incstack = 0
 20415  004E22  0E00               	movlw	0
 20416  004E24  0100               	movlb	0	; () banked
 20417  004E26  6FA6               	movwf	EncryptFRMPayload@i& (0+255),b
 20418  004E28  0E00               	movlw	0
 20419  004E2A  6FA7               	movwf	EncryptFRMPayload@j& (0+255),b
 20420                           
 20421                           ; BSR set to: 0
 20422                           ;lorawan.c: 2209: k = bufferLength / 16;
 20423  004E2C  C094  F060         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 20424  004E30  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 20425  004E32  0E00               	movlw	0
 20426  004E34  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 20427  004E36  0E10               	movlw	16
 20428  004E38  6F62               	movwf	___awdiv@divisor& (0+255),b
 20429  004E3A  ECA5  F041         	call	___awdiv	;wreg free
 20430  004E3E  0100               	movlb	0	; () banked
 20431  004E40  5160               	movf	?___awdiv& (0+255),w,b
 20432  004E42  6FA5               	movwf	EncryptFRMPayload@k& (0+255),b
 20433                           
 20434                           ; BSR set to: 0
 20435                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 20436  004E44  0E01               	movlw	1
 20437  004E46  6FA6               	movwf	EncryptFRMPayload@i& (0+255),b
 20438  004E48  D054               	goto	l19152
 20439  004E4A                     l19134:
 20440                           
 20441                           ; BSR set to: 0
 20442                           ;lorawan.c: 2211: {;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01
      +                          , multicastStatus);
 20443  004E4A  C096  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20444  004E4E  C097  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20445  004E52  C098  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20446  004E56  C099  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20447  004E5A  C0A6  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20448  004E5E  0E01               	movlw	1
 20449  004E60  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20450  004E62  C09F  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20451  004E66  5195               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20452  004E68  EC84  F03A         	call	_AssembleEncryptionBlock
 20453                           
 20454                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 20455  004E6C  0E5F               	movlw	low _aesBuffer
 20456  004E6E  0100               	movlb	0	; () banked
 20457  004E70  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 20458  004E72  0E01               	movlw	high _aesBuffer
 20459  004E74  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20460  004E76  C09A  F080         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20461  004E7A  C09B  F081         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20462  004E7E  ECA4  F04D         	call	_AESEncodeLoRa	;wreg free
 20463                           
 20464                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 20465  004E82  0E00               	movlw	0
 20466  004E84  0100               	movlb	0	; () banked
 20467  004E86  6FA7               	movwf	EncryptFRMPayload@j& (0+255),b
 20468  004E88                     l19142:
 20469                           
 20470                           ; BSR set to: 0
 20471                           ;lorawan.c: 2216: {;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j
      +                          ] ^ buffer[16*(i-1) + j];
 20472  004E88  519C               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20473  004E8A  259D               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20474  004E8C  6ED9               	movwf	fsr2l,c
 20475  004E8E  0E00               	movlw	0
 20476  004E90  219E               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20477  004E92  6EDA               	movwf	fsr2h,c
 20478  004E94  51A6               	movf	EncryptFRMPayload@i& (0+255),w,b
 20479  004E96  6FA0               	movwf	??_EncryptFRMPayload& (0+255),b
 20480  004E98  6BA1               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 20481  004E9A  3BA0               	swapf	??_EncryptFRMPayload& (0+255),f,b
 20482  004E9C  3BA1               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20483  004E9E  0EF0               	movlw	240
 20484  004EA0  17A1               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20485  004EA2  51A0               	movf	??_EncryptFRMPayload& (0+255),w,b
 20486  004EA4  0B0F               	andlw	15
 20487  004EA6  13A1               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20488  004EA8  0EF0               	movlw	240
 20489  004EAA  17A0               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20490  004EAC  C092  F0A2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 20491  004EB0  C093  F0A3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 20492  004EB4  51A0               	movf	??_EncryptFRMPayload& (0+255),w,b
 20493  004EB6  27A2               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20494  004EB8  51A1               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 20495  004EBA  23A3               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20496  004EBC  51A7               	movf	EncryptFRMPayload@j& (0+255),w,b
 20497  004EBE  27A2               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20498  004EC0  0E00               	movlw	0
 20499  004EC2  23A3               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20500  004EC4  0EF0               	movlw	240
 20501  004EC6  25A2               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20502  004EC8  6EE9               	movwf	fsr0l,c
 20503  004ECA  0EFF               	movlw	255
 20504  004ECC  21A3               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 20505  004ECE  6EEA               	movwf	fsr0h,c
 20506  004ED0  50EF               	movf	indf0,w,c
 20507  004ED2  6FA4               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 20508  004ED4  0E5F               	movlw	low _aesBuffer
 20509  004ED6  25A7               	addwf	EncryptFRMPayload@j& (0+255),w,b
 20510  004ED8  6EE9               	movwf	fsr0l,c
 20511  004EDA  6AEA               	clrf	fsr0h,c
 20512  004EDC  0E01               	movlw	high _aesBuffer
 20513  004EDE  22EA               	addwfc	fsr0h,f,c
 20514  004EE0  50EF               	movf	indf0,w,c
 20515  004EE2  19A4               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 20516  004EE4  6EDF               	movwf	indf2,c
 20517                           
 20518                           ; BSR set to: 0
 20519  004EE6  2B9C               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20520                           
 20521                           ; BSR set to: 0
 20522  004EE8  2BA7               	incf	EncryptFRMPayload@j& (0+255),f,b
 20523                           
 20524                           ; BSR set to: 0
 20525  004EEA  0E0F               	movlw	15
 20526  004EEC  65A7               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 20527  004EEE  D7CC               	goto	l19142
 20528                           
 20529                           ; BSR set to: 0
 20530  004EF0  2BA6               	incf	EncryptFRMPayload@i& (0+255),f,b
 20531  004EF2                     l19152:
 20532                           
 20533                           ; BSR set to: 0
 20534  004EF2  51A6               	movf	EncryptFRMPayload@i& (0+255),w,b
 20535  004EF4  5DA5               	subwf	EncryptFRMPayload@k& (0+255),w,b
 20536  004EF6  B0D8               	btfsc	status,0,c
 20537  004EF8  D7A8               	goto	l19134
 20538                           
 20539                           ; BSR set to: 0
 20540                           ;lorawan.c: 2218: };lorawan.c: 2219: };lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 20541  004EFA  C094  F0A0         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20542  004EFE  0E0F               	movlw	15
 20543  004F00  17A0               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20544  004F02  B4D8               	btfsc	status,2,c
 20545  004F04  0012               	return	
 20546                           
 20547                           ; BSR set to: 0
 20548                           ;lorawan.c: 2222: {;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01
      +                          , multicastStatus);
 20549  004F06  C096  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20550  004F0A  C097  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20551  004F0E  C098  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20552  004F12  C099  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20553  004F16  C0A6  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20554  004F1A  0E01               	movlw	1
 20555  004F1C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20556  004F1E  C09F  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20557  004F22  5195               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20558  004F24  EC84  F03A         	call	_AssembleEncryptionBlock
 20559                           
 20560                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 20561  004F28  0E5F               	movlw	low _aesBuffer
 20562  004F2A  0100               	movlb	0	; () banked
 20563  004F2C  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 20564  004F2E  0E01               	movlw	high _aesBuffer
 20565  004F30  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20566  004F32  C09A  F080         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20567  004F36  C09B  F081         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20568  004F3A  ECA4  F04D         	call	_AESEncodeLoRa	;wreg free
 20569                           
 20570                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 20571  004F3E  0E00               	movlw	0
 20572  004F40  0100               	movlb	0	; () banked
 20573  004F42  6FA7               	movwf	EncryptFRMPayload@j& (0+255),b
 20574  004F44  D023               	goto	l19166
 20575  004F46                     l19160:
 20576                           
 20577                           ; BSR set to: 0
 20578                           ;lorawan.c: 2227: {;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j
      +                          ] ^ buffer[(16*k) + j];
 20579  004F46  519C               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20580  004F48  259D               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20581  004F4A  6ED9               	movwf	fsr2l,c
 20582  004F4C  0E00               	movlw	0
 20583  004F4E  219E               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20584  004F50  6EDA               	movwf	fsr2h,c
 20585  004F52  51A5               	movf	EncryptFRMPayload@k& (0+255),w,b
 20586  004F54  0D10               	mullw	16
 20587  004F56  C092  F0A0         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 20588  004F5A  C093  F0A1         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 20589  004F5E  50F3               	movf	prodl,w,c
 20590  004F60  27A0               	addwf	??_EncryptFRMPayload& (0+255),f,b
 20591  004F62  50F4               	movf	prodh,w,c
 20592  004F64  23A1               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 20593  004F66  51A7               	movf	EncryptFRMPayload@j& (0+255),w,b
 20594  004F68  25A0               	addwf	??_EncryptFRMPayload& (0+255),w,b
 20595  004F6A  6EE9               	movwf	fsr0l,c
 20596  004F6C  0E00               	movlw	0
 20597  004F6E  21A1               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 20598  004F70  6EEA               	movwf	fsr0h,c
 20599  004F72  50EF               	movf	indf0,w,c
 20600  004F74  6FA2               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 20601  004F76  0E5F               	movlw	low _aesBuffer
 20602  004F78  25A7               	addwf	EncryptFRMPayload@j& (0+255),w,b
 20603  004F7A  6EE9               	movwf	fsr0l,c
 20604  004F7C  6AEA               	clrf	fsr0h,c
 20605  004F7E  0E01               	movlw	high _aesBuffer
 20606  004F80  22EA               	addwfc	fsr0h,f,c
 20607  004F82  50EF               	movf	indf0,w,c
 20608  004F84  19A2               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20609  004F86  6EDF               	movwf	indf2,c
 20610                           
 20611                           ; BSR set to: 0
 20612  004F88  2B9C               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20613                           
 20614                           ; BSR set to: 0
 20615  004F8A  2BA7               	incf	EncryptFRMPayload@j& (0+255),f,b
 20616  004F8C                     l19166:
 20617                           
 20618                           ; BSR set to: 0
 20619  004F8C  C094  F0A0         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20620  004F90  0E0F               	movlw	15
 20621  004F92  17A0               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20622  004F94  51A0               	movf	??_EncryptFRMPayload& (0+255),w,b
 20623  004F96  5DA7               	subwf	EncryptFRMPayload@j& (0+255),w,b
 20624  004F98  B0D8               	btfsc	status,0,c
 20625  004F9A  0012               	return	
 20626  004F9C  D7D4               	goto	l19160
 20627  004F9E                     __end_of_EncryptFRMPayload:
 20628                           	opt callstack 0
 20629                           
 20630 ;; *************** function ___awdiv *****************
 20631 ;; Defined at:
 20632 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 20633 ;; Parameters:    Size  Location     Type
 20634 ;;  dividend        2    0[BANK0 ] int 
 20635 ;;  divisor         2    2[BANK0 ] int 
 20636 ;; Auto vars:     Size  Location     Type
 20637 ;;  quotient        2    6[BANK0 ] int 
 20638 ;;  sign            1    5[BANK0 ] unsigned char 
 20639 ;;  counter         1    4[BANK0 ] unsigned char 
 20640 ;; Return value:  Size  Location     Type
 20641 ;;                  2    0[BANK0 ] int 
 20642 ;; Registers used:
 20643 ;;		wreg, status,2, status,0
 20644 ;; Tracked objects:
 20645 ;;		On entry : 0/0
 20646 ;;		On exit  : 0/0
 20647 ;;		Unchanged: 0/0
 20648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20649 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20650 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20652 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20653 ;;Total ram usage:        8 bytes
 20654 ;; Hardware stack levels used:    1
 20655 ;; Hardware stack levels required when called:    7
 20656 ;; This function calls:
 20657 ;;		Nothing
 20658 ;; This function is called by:
 20659 ;;		_EncryptFRMPayload
 20660 ;;		_timerHandler
 20661 ;; This function uses a non-reentrant model
 20662 ;;
 20663                           
 20664                           	psect	text93
 20665  00834A                     __ptext93:
 20666                           	opt callstack 0
 20667  00834A                     ___awdiv:
 20668                           	opt callstack 18
 20669                           
 20670                           ; BSR set to: 0
 20671                           ;incstack = 0
 20672  00834A  0E00               	movlw	0
 20673  00834C  0100               	movlb	0	; () banked
 20674  00834E  6F65               	movwf	___awdiv@sign& (0+255),b
 20675                           
 20676                           ; BSR set to: 0
 20677  008350  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 20678  008352  D006               	goto	l18658
 20679                           
 20680                           ; BSR set to: 0
 20681  008354  6D62               	negf	___awdiv@divisor& (0+255),b
 20682  008356  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 20683  008358  B0D8               	btfsc	status,0,c
 20684  00835A  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 20685                           
 20686                           ; BSR set to: 0
 20687  00835C  0E01               	movlw	1
 20688  00835E  6F65               	movwf	___awdiv@sign& (0+255),b
 20689  008360                     l18658:
 20690                           
 20691                           ; BSR set to: 0
 20692  008360  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 20693  008362  D006               	goto	l18664
 20694                           
 20695                           ; BSR set to: 0
 20696  008364  6D60               	negf	___awdiv@dividend& (0+255),b
 20697  008366  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 20698  008368  B0D8               	btfsc	status,0,c
 20699  00836A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 20700                           
 20701                           ; BSR set to: 0
 20702  00836C  0E01               	movlw	1
 20703  00836E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 20704  008370                     l18664:
 20705                           
 20706                           ; BSR set to: 0
 20707  008370  0E00               	movlw	0
 20708  008372  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 20709  008374  0E00               	movlw	0
 20710  008376  6F66               	movwf	___awdiv@quotient& (0+255),b
 20711                           
 20712                           ; BSR set to: 0
 20713  008378  5162               	movf	___awdiv@divisor& (0+255),w,b
 20714  00837A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 20715  00837C  B4D8               	btfsc	status,2,c
 20716  00837E  D01C               	goto	l18686
 20717                           
 20718                           ; BSR set to: 0
 20719  008380  0E01               	movlw	1
 20720  008382  6F64               	movwf	___awdiv@counter& (0+255),b
 20721  008384  D004               	goto	l18672
 20722  008386                     l18670:
 20723                           
 20724                           ; BSR set to: 0
 20725  008386  90D8               	bcf	status,0,c
 20726  008388  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 20727  00838A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 20728  00838C  2B64               	incf	___awdiv@counter& (0+255),f,b
 20729  00838E                     l18672:
 20730                           
 20731                           ; BSR set to: 0
 20732  00838E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 20733  008390  D7FA               	goto	l18670
 20734  008392                     u19830:
 20735                           
 20736                           ; BSR set to: 0
 20737  008392  90D8               	bcf	status,0,c
 20738  008394  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 20739  008396  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 20740                           
 20741                           ; BSR set to: 0
 20742  008398  5162               	movf	___awdiv@divisor& (0+255),w,b
 20743  00839A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 20744  00839C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20745  00839E  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 20746  0083A0  A0D8               	btfss	status,0,c
 20747  0083A2  D005               	goto	l18682
 20748                           
 20749                           ; BSR set to: 0
 20750  0083A4  5162               	movf	___awdiv@divisor& (0+255),w,b
 20751  0083A6  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 20752  0083A8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20753  0083AA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 20754                           
 20755                           ; BSR set to: 0
 20756  0083AC  8166               	bsf	___awdiv@quotient& (0+255),0,b
 20757  0083AE                     l18682:
 20758                           
 20759                           ; BSR set to: 0
 20760  0083AE  90D8               	bcf	status,0,c
 20761  0083B0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 20762  0083B2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 20763                           
 20764                           ; BSR set to: 0
 20765  0083B4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 20766  0083B6  D7ED               	goto	u19830
 20767  0083B8                     l18686:
 20768                           
 20769                           ; BSR set to: 0
 20770  0083B8  5165               	movf	___awdiv@sign& (0+255),w,b
 20771  0083BA  B4D8               	btfsc	status,2,c
 20772  0083BC  D004               	goto	l18690
 20773                           
 20774                           ; BSR set to: 0
 20775  0083BE  6D66               	negf	___awdiv@quotient& (0+255),b
 20776  0083C0  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 20777  0083C2  B0D8               	btfsc	status,0,c
 20778  0083C4  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 20779  0083C6                     l18690:
 20780                           
 20781                           ; BSR set to: 0
 20782  0083C6  C066  F060         	movff	___awdiv@quotient,?___awdiv
 20783  0083CA  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 20784                           
 20785                           ; BSR set to: 0
 20786  0083CE  0012               	return		;funcret
 20787  0083D0                     __end_of___awdiv:
 20788                           	opt callstack 0
 20789                           
 20790 ;; *************** function _AssembleEncryptionBlock *****************
 20791 ;; Defined at:
 20792 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20793 ;; Parameters:    Size  Location     Type
 20794 ;;  dir             1    wreg     unsigned char 
 20795 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 20796 ;;  blockId         1   15[BANK0 ] unsigned char 
 20797 ;;  firstByte       1   16[BANK0 ] unsigned char 
 20798 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 20799 ;; Auto vars:     Size  Location     Type
 20800 ;;  dir             1   18[BANK0 ] unsigned char 
 20801 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 20802 ;; Return value:  Size  Location     Type
 20803 ;;                  1    wreg      void 
 20804 ;; Registers used:
 20805 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20806 ;; Tracked objects:
 20807 ;;		On entry : 0/0
 20808 ;;		On exit  : 0/0
 20809 ;;		Unchanged: 0/0
 20810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20811 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20812 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20814 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20815 ;;Total ram usage:        9 bytes
 20816 ;; Hardware stack levels used:    1
 20817 ;; Hardware stack levels required when called:    8
 20818 ;; This function calls:
 20819 ;;		_memcpy
 20820 ;;		_memset
 20821 ;; This function is called by:
 20822 ;;		_LORAWAN_RxDone
 20823 ;;		_AssemblePacket
 20824 ;;		_EncryptFRMPayload
 20825 ;; This function uses a non-reentrant model
 20826 ;;
 20827                           
 20828                           	psect	text94
 20829  007508                     __ptext94:
 20830                           	opt callstack 0
 20831  007508                     _AssembleEncryptionBlock:
 20832                           	opt callstack 17
 20833                           
 20834                           ; BSR set to: 0
 20835                           ;incstack = 0
 20836                           ;AssembleEncryptionBlock@dir stored from wreg
 20837  007508  0100               	movlb	0	; () banked
 20838  00750A  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 20839                           
 20840                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 20841  00750C  0E00               	movlw	0
 20842  00750E  0100               	movlb	0	; () banked
 20843  007510  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20844                           
 20845                           ; BSR set to: 0
 20846                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 20847  007512  0E5F               	movlw	low _aesBuffer
 20848  007514  6F60               	movwf	memset@p1& (0+255),b
 20849  007516  0E01               	movlw	high _aesBuffer
 20850  007518  6F61               	movwf	(memset@p1+1)& (0+255),b
 20851  00751A  0E00               	movlw	0
 20852  00751C  6F63               	movwf	(memset@c+1)& (0+255),b
 20853  00751E  0E00               	movlw	0
 20854  007520  6F62               	movwf	memset@c& (0+255),b
 20855  007522  0E00               	movlw	0
 20856  007524  6F65               	movwf	(memset@n+1)& (0+255),b
 20857  007526  0E10               	movlw	16
 20858  007528  6F64               	movwf	memset@n& (0+255),b
 20859  00752A  EC70  F04F         	call	_memset	;wreg free
 20860                           
 20861                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 20862  00752E  C070  F15F         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 20863                           
 20864                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 20865  007532  0100               	movlb	0	; () banked
 20866  007534  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20867  007536  0F05               	addlw	5
 20868  007538  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20869                           
 20870                           ; BSR set to: 0
 20871                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 20872  00753A  0E5F               	movlw	low _aesBuffer
 20873  00753C  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20874  00753E  6ED9               	movwf	fsr2l,c
 20875  007540  6ADA               	clrf	fsr2h,c
 20876  007542  0E01               	movlw	high _aesBuffer
 20877  007544  22DA               	addwfc	fsr2h,f,c
 20878  007546  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 20879                           
 20880                           ; BSR set to: 0
 20881  00754A  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20882                           
 20883                           ; BSR set to: 0
 20884                           ;lorawan.c: 2168: if (0 == multicastStatus)
 20885  00754C  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 20886  00754E  A4D8               	btfss	status,2,c
 20887  007550  D015               	goto	l18634
 20888                           
 20889                           ; BSR set to: 0
 20890                           ;lorawan.c: 2169: {;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationPa
      +                          rameters.deviceAddress, sizeof (loRa.activationParameters.deviceAddress));
 20891  007552  0E5F               	movlw	low _aesBuffer
 20892  007554  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20893  007556  6F60               	movwf	memcpy@d1& (0+255),b
 20894  007558  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 20895  00755A  0E01               	movlw	high _aesBuffer
 20896  00755C  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20897  00755E  0E23               	movlw	low (_loRa+30)
 20898  007560  6F62               	movwf	memcpy@s1& (0+255),b
 20899  007562  0E02               	movlw	high (_loRa+30)
 20900  007564  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20901  007566  0E00               	movlw	0
 20902  007568  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20903  00756A  0E04               	movlw	4
 20904  00756C  6F64               	movwf	memcpy@n& (0+255),b
 20905  00756E  ECC3  F047         	call	_memcpy	;wreg free
 20906  007572                     l18632:
 20907                           
 20908                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 20909  007572  0100               	movlb	0	; () banked
 20910  007574  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20911  007576  0F04               	addlw	4
 20912  007578  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20913                           
 20914                           ;lorawan.c: 2172: }
 20915  00757A  D011               	goto	l18638
 20916  00757C                     l18634:
 20917                           
 20918                           ; BSR set to: 0
 20919                           ;lorawan.c: 2173: else;lorawan.c: 2174: {;lorawan.c: 2175: memcpy (&aesBuffer[bufferInde
      +                          x], &loRa.activationParameters.mcastDeviceAddress, sizeof (loRa.activationParameters.mca
      +                          stDeviceAddress));
 20920  00757C  0E5F               	movlw	low _aesBuffer
 20921  00757E  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20922  007580  6F60               	movwf	memcpy@d1& (0+255),b
 20923  007582  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 20924  007584  0E01               	movlw	high _aesBuffer
 20925  007586  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20926  007588  0E67               	movlw	low (_loRa+98)
 20927  00758A  6F62               	movwf	memcpy@s1& (0+255),b
 20928  00758C  0E02               	movlw	high (_loRa+98)
 20929  00758E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20930  007590  0E00               	movlw	0
 20931  007592  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20932  007594  0E04               	movlw	4
 20933  007596  6F64               	movwf	memcpy@n& (0+255),b
 20934  007598  ECC3  F047         	call	_memcpy	;wreg free
 20935  00759C  D7EA               	goto	l18632
 20936  00759E                     l18638:
 20937                           
 20938                           ; BSR set to: 0
 20939                           ;lorawan.c: 2177: };lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, siz
      +                          eof (frameCounter));
 20940  00759E  0E5F               	movlw	low _aesBuffer
 20941  0075A0  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20942  0075A2  6F60               	movwf	memcpy@d1& (0+255),b
 20943  0075A4  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 20944  0075A6  0E01               	movlw	high _aesBuffer
 20945  0075A8  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20946  0075AA  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 20947  0075AC  6F62               	movwf	memcpy@s1& (0+255),b
 20948  0075AE  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 20949  0075B0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20950  0075B2  0E00               	movlw	0
 20951  0075B4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20952  0075B6  0E04               	movlw	4
 20953  0075B8  6F64               	movwf	memcpy@n& (0+255),b
 20954  0075BA  ECC3  F047         	call	_memcpy	;wreg free
 20955                           
 20956                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 20957  0075BE  0100               	movlb	0	; () banked
 20958  0075C0  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20959  0075C2  0F04               	addlw	4
 20960  0075C4  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20961                           
 20962                           ; BSR set to: 0
 20963                           ;lorawan.c: 2182: bufferIndex ++;
 20964  0075C6  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20965                           
 20966                           ; BSR set to: 0
 20967                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 20968  0075C8  0E5F               	movlw	low _aesBuffer
 20969  0075CA  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20970  0075CC  6ED9               	movwf	fsr2l,c
 20971  0075CE  6ADA               	clrf	fsr2h,c
 20972  0075D0  0E01               	movlw	high _aesBuffer
 20973  0075D2  22DA               	addwfc	fsr2h,f,c
 20974  0075D4  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 20975                           
 20976                           ; BSR set to: 0
 20977  0075D8  0012               	return		;funcret
 20978  0075DA                     __end_of_AssembleEncryptionBlock:
 20979                           	opt callstack 0
 20980                           
 20981 ;; *************** function _CountfOptsLength *****************
 20982 ;; Defined at:
 20983 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20984 ;; Parameters:    Size  Location     Type
 20985 ;;		None
 20986 ;; Auto vars:     Size  Location     Type
 20987 ;;  i               1    7[BANK0 ] unsigned char 
 20988 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 20989 ;; Return value:  Size  Location     Type
 20990 ;;                  1    wreg      unsigned char 
 20991 ;; Registers used:
 20992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20993 ;; Tracked objects:
 20994 ;;		On entry : 0/0
 20995 ;;		On exit  : 0/0
 20996 ;;		Unchanged: 0/0
 20997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20999 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21000 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21001 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21002 ;;Total ram usage:        8 bytes
 21003 ;; Hardware stack levels used:    1
 21004 ;; Hardware stack levels required when called:    7
 21005 ;; This function calls:
 21006 ;;		Nothing
 21007 ;; This function is called by:
 21008 ;;		_LORAWAN_GetMaxPayloadSize
 21009 ;;		_AssemblePacket
 21010 ;; This function uses a non-reentrant model
 21011 ;;
 21012                           
 21013                           	psect	text95
 21014  0076AA                     __ptext95:
 21015                           	opt callstack 0
 21016  0076AA                     _CountfOptsLength:
 21017                           	opt callstack 19
 21018                           
 21019                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 21020                           
 21021                           ; BSR set to: 0
 21022                           ;incstack = 0
 21023  0076AA  0E00               	movlw	0
 21024  0076AC  0100               	movlb	0	; () banked
 21025  0076AE  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 21026                           
 21027                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 21028  0076B0  0E00               	movlw	0
 21029  0076B2  6F67               	movwf	CountfOptsLength@i& (0+255),b
 21030  0076B4  D057               	goto	l19178
 21031  0076B6                     l19170:
 21032                           
 21033                           ; BSR set to: 0
 21034                           ;lorawan.c: 2139: {;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 21035  0076B6  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21036  0076B8  0D02               	mullw	2
 21037  0076BA  0EAD               	movlw	low (_loRa+168)
 21038  0076BC  24F3               	addwf	prodl,w,c
 21039  0076BE  6ED9               	movwf	fsr2l,c
 21040  0076C0  0E02               	movlw	high (_loRa+168)
 21041  0076C2  20F4               	addwfc	prodh,w,c
 21042  0076C4  6EDA               	movwf	fsr2h,c
 21043  0076C6  28DE               	incf	postinc2,w,c
 21044  0076C8  B4D8               	btfsc	status,2,c
 21045  0076CA  D04B               	goto	l19176
 21046                           
 21047                           ; BSR set to: 0
 21048                           ;lorawan.c: 2141: {;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.ma
      +                          cCommands[i].receivedCid - 2]) <= 0x0F)
 21049  0076CC  0EFE               	movlw	254
 21050  0076CE  6F60               	movwf	??_CountfOptsLength& (0+255),b
 21051  0076D0  0EFF               	movlw	255
 21052  0076D2  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 21053  0076D4  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21054  0076D6  0D02               	mullw	2
 21055  0076D8  0EAD               	movlw	low (_loRa+168)
 21056  0076DA  24F3               	addwf	prodl,w,c
 21057  0076DC  6ED9               	movwf	fsr2l,c
 21058  0076DE  0E02               	movlw	high (_loRa+168)
 21059  0076E0  20F4               	addwfc	prodh,w,c
 21060  0076E2  6EDA               	movwf	fsr2h,c
 21061  0076E4  50DF               	movf	indf2,w,c
 21062  0076E6  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21063  0076E8  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21064  0076EA  5160               	movf	??_CountfOptsLength& (0+255),w,b
 21065  0076EC  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21066  0076EE  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21067  0076F0  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21068  0076F2  0E27               	movlw	low _macEndDevCmdReplyLen
 21069  0076F4  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21070  0076F6  6EF6               	movwf	tblptrl,c
 21071  0076F8  0EFF               	movlw	high _macEndDevCmdReplyLen
 21072  0076FA  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21073  0076FC  6EF7               	movwf	tblptrh,c
 21074  0076FE                     	if	1	;There are 3 active tblptr bytes
 21075  0076FE  6AF8               	clrf	tblptru,c
 21076  007700  0E00               	movlw	low (__mediumconst shr (0+16))
 21077  007702  22F8               	addwfc	tblptru,f,c
 21078  007704                     	endif
 21079  007704  0008               	tblrd		*
 21080  007706  50F5               	movf	tablat,w,c
 21081  007708  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 21082  00770C  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 21083  00770E  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 21084  007710  0E00               	movlw	0
 21085  007712  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 21086  007714  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 21087  007716  D006               	goto	u20650
 21088  007718  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 21089  00771A  E12A               	bnz	l19180
 21090  00771C  0E10               	movlw	16
 21091  00771E  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 21092  007720  B0D8               	btfsc	status,0,c
 21093  007722  D026               	goto	u20660
 21094  007724                     u20650:
 21095                           
 21096                           ; BSR set to: 0
 21097                           ;lorawan.c: 2143: {;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCo
      +                          mmands[i].receivedCid - 2];
 21098  007724  0EFE               	movlw	254
 21099  007726  6F60               	movwf	??_CountfOptsLength& (0+255),b
 21100  007728  0EFF               	movlw	255
 21101  00772A  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 21102  00772C  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21103  00772E  0D02               	mullw	2
 21104  007730  0EAD               	movlw	low (_loRa+168)
 21105  007732  24F3               	addwf	prodl,w,c
 21106  007734  6ED9               	movwf	fsr2l,c
 21107  007736  0E02               	movlw	high (_loRa+168)
 21108  007738  20F4               	addwfc	prodh,w,c
 21109  00773A  6EDA               	movwf	fsr2h,c
 21110  00773C  50DF               	movf	indf2,w,c
 21111  00773E  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21112  007740  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21113  007742  5160               	movf	??_CountfOptsLength& (0+255),w,b
 21114  007744  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21115  007746  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21116  007748  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21117  00774A  0E27               	movlw	low _macEndDevCmdReplyLen
 21118  00774C  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21119  00774E  6EF6               	movwf	tblptrl,c
 21120  007750  0EFF               	movlw	high _macEndDevCmdReplyLen
 21121  007752  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21122  007754  6EF7               	movwf	tblptrh,c
 21123  007756                     	if	1	;There are 3 active tblptr bytes
 21124  007756  6AF8               	clrf	tblptru,c
 21125  007758  0E00               	movlw	low (__mediumconst shr (0+16))
 21126  00775A  22F8               	addwfc	tblptru,f,c
 21127  00775C                     	endif
 21128  00775C  0008               	tblrd		*
 21129  00775E  50F5               	movf	tablat,w,c
 21130  007760  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 21131  007762                     l19176:
 21132                           
 21133                           ; BSR set to: 0
 21134  007762  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 21135  007764                     l19178:
 21136                           
 21137                           ; BSR set to: 0
 21138  007764  0102               	movlb	2	; () banked
 21139  007766  51AC               	movf	(_loRa+167)& (0+255),w,b
 21140  007768  0100               	movlb	0	; () banked
 21141  00776A  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 21142  00776C  A0D8               	btfss	status,0,c
 21143  00776E  D7A3               	goto	l19170
 21144  007770                     u20660:
 21145  007770                     l19180:
 21146                           
 21147                           ; BSR set to: 0
 21148                           ;lorawan.c: 2149: };lorawan.c: 2150: };lorawan.c: 2151: };lorawan.c: 2153: return macCom
      +                          mandLength;
 21149  007770  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 21150                           
 21151                           ; BSR set to: 0
 21152  007772  0012               	return		;funcret
 21153  007774                     __end_of_CountfOptsLength:
 21154                           	opt callstack 0
 21155                           
 21156 ;; *************** function _ExtractMic *****************
 21157 ;; Defined at:
 21158 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21159 ;; Parameters:    Size  Location     Type
 21160 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 21161 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21162 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 21163 ;; Auto vars:     Size  Location     Type
 21164 ;;  mic             4   17[BANK0 ] unsigned long 
 21165 ;; Return value:  Size  Location     Type
 21166 ;;                  4   11[BANK0 ] unsigned long 
 21167 ;; Registers used:
 21168 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21169 ;; Tracked objects:
 21170 ;;		On entry : 0/0
 21171 ;;		On exit  : 0/0
 21172 ;;		Unchanged: 0/0
 21173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21175 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21176 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21177 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21178 ;;Total ram usage:       10 bytes
 21179 ;; Hardware stack levels used:    1
 21180 ;; Hardware stack levels required when called:    8
 21181 ;; This function calls:
 21182 ;;		_memcpy
 21183 ;; This function is called by:
 21184 ;;		_LORAWAN_RxDone
 21185 ;; This function uses a non-reentrant model
 21186 ;;
 21187                           
 21188                           	psect	text96
 21189  0094EE                     __ptext96:
 21190                           	opt callstack 0
 21191  0094EE                     _ExtractMic:
 21192                           	opt callstack 16
 21193                           
 21194                           ;lorawan.c: 2189: uint32_t mic = 0;
 21195                           
 21196                           ; BSR set to: 0
 21197                           ;incstack = 0
 21198  0094EE  0E00               	movlw	0
 21199  0094F0  0100               	movlb	0	; () banked
 21200  0094F2  6F71               	movwf	ExtractMic@mic& (0+255),b
 21201  0094F4  0E00               	movlw	0
 21202  0094F6  6F72               	movwf	(ExtractMic@mic+1)& (0+255),b
 21203  0094F8  0E00               	movlw	0
 21204  0094FA  6F73               	movwf	(ExtractMic@mic+2)& (0+255),b
 21205  0094FC  0E00               	movlw	0
 21206  0094FE  6F74               	movwf	(ExtractMic@mic+3)& (0+255),b
 21207                           
 21208                           ; BSR set to: 0
 21209                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 21210  009500  0E71               	movlw	low ExtractMic@mic
 21211  009502  6F60               	movwf	memcpy@d1& (0+255),b
 21212  009504  0E00               	movlw	high ExtractMic@mic
 21213  009506  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21214  009508  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 21215  00950A  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 21216  00950C  6F6F               	movwf	??_ExtractMic& (0+255),b
 21217  00950E  0E00               	movlw	0
 21218  009510  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 21219  009512  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 21220  009514  0EFC               	movlw	252
 21221  009516  256F               	addwf	??_ExtractMic& (0+255),w,b
 21222  009518  6F62               	movwf	memcpy@s1& (0+255),b
 21223  00951A  0EFF               	movlw	255
 21224  00951C  2170               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 21225  00951E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21226  009520  0E00               	movlw	0
 21227  009522  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21228  009524  0E04               	movlw	4
 21229  009526  6F64               	movwf	memcpy@n& (0+255),b
 21230  009528  ECC3  F047         	call	_memcpy	;wreg free
 21231                           
 21232                           ;lorawan.c: 2191: return mic;
 21233  00952C  C071  F06B         	movff	ExtractMic@mic,?_ExtractMic
 21234  009530  C072  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 21235  009534  C073  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 21236  009538  C074  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 21237  00953C  0012               	return		;funcret
 21238  00953E                     __end_of_ExtractMic:
 21239                           	opt callstack 0
 21240                           
 21241 ;; *************** function _ComputeSessionKeys *****************
 21242 ;; Defined at:
 21243 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21244 ;; Parameters:    Size  Location     Type
 21245 ;;  joinAcceptBu    2   50[BANK0 ] PTR struct .
 21246 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21247 ;; Auto vars:     Size  Location     Type
 21248 ;;		None
 21249 ;; Return value:  Size  Location     Type
 21250 ;;                  1    wreg      void 
 21251 ;; Registers used:
 21252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21253 ;; Tracked objects:
 21254 ;;		On entry : 0/0
 21255 ;;		On exit  : 0/0
 21256 ;;		Unchanged: 0/0
 21257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21258 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21261 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21262 ;;Total ram usage:        2 bytes
 21263 ;; Hardware stack levels used:    1
 21264 ;; Hardware stack levels required when called:   10
 21265 ;; This function calls:
 21266 ;;		_AESEncodeLoRa
 21267 ;;		_PrepareSessionKeys
 21268 ;; This function is called by:
 21269 ;;		_LORAWAN_RxDone
 21270 ;; This function uses a non-reentrant model
 21271 ;;
 21272                           
 21273                           	psect	text97
 21274  0083D0                     __ptext97:
 21275                           	opt callstack 0
 21276  0083D0                     _ComputeSessionKeys:
 21277                           	opt callstack 14
 21278                           
 21279                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21280                           
 21281                           ;incstack = 0
 21282  0083D0  0E37               	movlw	low (_loRa+50)
 21283  0083D2  0100               	movlb	0	; () banked
 21284  0083D4  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21285  0083D6  0E02               	movlw	high (_loRa+50)
 21286  0083D8  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21287  0083DA  0E01               	movlw	1
 21288  0083DC  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21289  0083DE  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21290  0083E0  0E00               	movlw	0
 21291  0083E2  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21292  0083E4  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21293  0083E6  0E04               	movlw	4
 21294  0083E8  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21295  0083EA  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21296  0083EC  0E00               	movlw	0
 21297  0083EE  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21298  0083F0  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21299  0083F2  ECFE  F03F         	call	_PrepareSessionKeys	;wreg free
 21300                           
 21301                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 21302  0083F6  0E02               	movlw	2
 21303  0083F8  0102               	movlb	2	; () banked
 21304  0083FA  6F37               	movwf	(_loRa+50)& (0+255),b
 21305                           
 21306                           ; BSR set to: 2
 21307                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 21308  0083FC  0E37               	movlw	low (_loRa+50)
 21309  0083FE  0100               	movlb	0	; () banked
 21310  008400  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 21311  008402  0E02               	movlw	high (_loRa+50)
 21312  008404  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21313  008406  0E47               	movlw	low (_loRa+66)
 21314  008408  6F80               	movwf	AESEncodeLoRa@key& (0+255),b
 21315  00840A  0E02               	movlw	high (_loRa+66)
 21316  00840C  6F81               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21317  00840E  ECA4  F04D         	call	_AESEncodeLoRa	;wreg free
 21318                           
 21319                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21320  008412  0E27               	movlw	low (_loRa+34)
 21321  008414  0100               	movlb	0	; () banked
 21322  008416  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21323  008418  0E02               	movlw	high (_loRa+34)
 21324  00841A  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21325  00841C  0E01               	movlw	1
 21326  00841E  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21327  008420  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21328  008422  0E00               	movlw	0
 21329  008424  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21330  008426  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21331  008428  0E04               	movlw	4
 21332  00842A  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21333  00842C  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21334  00842E  0E00               	movlw	0
 21335  008430  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21336  008432  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21337  008434  ECFE  F03F         	call	_PrepareSessionKeys	;wreg free
 21338                           
 21339                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 21340  008438  0E01               	movlw	1
 21341  00843A  0102               	movlb	2	; () banked
 21342  00843C  6F27               	movwf	(_loRa+34)& (0+255),b
 21343                           
 21344                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 21345  00843E  0E27               	movlw	low (_loRa+34)
 21346  008440  0100               	movlb	0	; () banked
 21347  008442  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 21348  008444  0E02               	movlw	high (_loRa+34)
 21349  008446  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21350  008448  0E47               	movlw	low (_loRa+66)
 21351  00844A  6F80               	movwf	AESEncodeLoRa@key& (0+255),b
 21352  00844C  0E02               	movlw	high (_loRa+66)
 21353  00844E  6F81               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21354  008450  ECA4  F04D         	call	_AESEncodeLoRa	;wreg free
 21355  008454  0012               	return		;funcret
 21356  008456                     __end_of_ComputeSessionKeys:
 21357                           	opt callstack 0
 21358                           
 21359 ;; *************** function _PrepareSessionKeys *****************
 21360 ;; Defined at:
 21361 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21362 ;; Parameters:    Size  Location     Type
 21363 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 21364 ;;		 -> loRa.activationParameters(105), loRa(245), 
 21365 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 21366 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21367 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 21368 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21369 ;; Auto vars:     Size  Location     Type
 21370 ;;  index           1   17[BANK0 ] unsigned char 
 21371 ;; Return value:  Size  Location     Type
 21372 ;;                  1    wreg      void 
 21373 ;; Registers used:
 21374 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21375 ;; Tracked objects:
 21376 ;;		On entry : 0/0
 21377 ;;		On exit  : 0/0
 21378 ;;		Unchanged: 0/0
 21379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21380 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21383 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21384 ;;Total ram usage:        7 bytes
 21385 ;; Hardware stack levels used:    1
 21386 ;; Hardware stack levels required when called:    8
 21387 ;; This function calls:
 21388 ;;		_memcpy
 21389 ;;		_memset
 21390 ;; This function is called by:
 21391 ;;		_ComputeSessionKeys
 21392 ;; This function uses a non-reentrant model
 21393 ;;
 21394                           
 21395                           	psect	text98
 21396  007FFC                     __ptext98:
 21397                           	opt callstack 0
 21398  007FFC                     _PrepareSessionKeys:
 21399                           	opt callstack 15
 21400                           
 21401                           ;lorawan.c: 2047: uint8_t index = 0;
 21402                           
 21403                           ;incstack = 0
 21404  007FFC  0E00               	movlw	0
 21405  007FFE  0100               	movlb	0	; () banked
 21406  008000  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 21410  008002  C06B  F060         	movff	PrepareSessionKeys@sessionKey,memset@p1
 21411  008006  C06C  F061         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 21412  00800A  0E00               	movlw	0
 21413  00800C  6F63               	movwf	(memset@c+1)& (0+255),b
 21414  00800E  0E00               	movlw	0
 21415  008010  6F62               	movwf	memset@c& (0+255),b
 21416  008012  0E00               	movlw	0
 21417  008014  6F65               	movwf	(memset@n+1)& (0+255),b
 21418  008016  0E10               	movlw	16
 21419  008018  6F64               	movwf	memset@n& (0+255),b
 21420  00801A  EC70  F04F         	call	_memset	;wreg free
 21421                           
 21422                           ;lorawan.c: 2050: index ++;
 21423  00801E  0100               	movlb	0	; () banked
 21424  008020  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 21425                           
 21426                           ; BSR set to: 0
 21427                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 21428  008022  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21429  008024  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21430  008026  6F60               	movwf	memcpy@d1& (0+255),b
 21431  008028  0E00               	movlw	0
 21432  00802A  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21433  00802C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21434  00802E  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 21435  008032  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 21436  008036  0E00               	movlw	0
 21437  008038  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21438  00803A  0E03               	movlw	3
 21439  00803C  6F64               	movwf	memcpy@n& (0+255),b
 21440  00803E  ECC3  F047         	call	_memcpy	;wreg free
 21441                           
 21442                           ;lorawan.c: 2053: index = index + 3;
 21443  008042  0100               	movlb	0	; () banked
 21444  008044  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21445  008046  0F03               	addlw	3
 21446  008048  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 21447                           
 21448                           ; BSR set to: 0
 21449                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 21450  00804A  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21451  00804C  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21452  00804E  6F60               	movwf	memcpy@d1& (0+255),b
 21453  008050  0E00               	movlw	0
 21454  008052  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21455  008054  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21456  008056  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 21457  00805A  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 21458  00805E  0E00               	movlw	0
 21459  008060  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21460  008062  0E03               	movlw	3
 21461  008064  6F64               	movwf	memcpy@n& (0+255),b
 21462  008066  ECC3  F047         	call	_memcpy	;wreg free
 21463                           
 21464                           ;lorawan.c: 2056: index = index + 3;
 21465  00806A  0100               	movlb	0	; () banked
 21466  00806C  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21467  00806E  0F03               	addlw	3
 21468  008070  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 21469                           
 21470                           ; BSR set to: 0
 21471                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 21472  008072  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21473  008074  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21474  008076  6F60               	movwf	memcpy@d1& (0+255),b
 21475  008078  0E00               	movlw	0
 21476  00807A  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21477  00807C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21478  00807E  0ED7               	movlw	low (_loRa+210)
 21479  008080  6F62               	movwf	memcpy@s1& (0+255),b
 21480  008082  0E02               	movlw	high (_loRa+210)
 21481  008084  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21482  008086  0E00               	movlw	0
 21483  008088  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21484  00808A  0E02               	movlw	2
 21485  00808C  6F64               	movwf	memcpy@n& (0+255),b
 21486  00808E  ECC3  F047         	call	_memcpy	;wreg free
 21487  008092  0012               	return		;funcret
 21488  008094                     __end_of_PrepareSessionKeys:
 21489                           	opt callstack 0
 21490                           
 21491 ;; *************** function _CheckMcastFlags *****************
 21492 ;; Defined at:
 21493 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21494 ;; Parameters:    Size  Location     Type
 21495 ;;  hdr             2    0[BANK0 ] PTR struct .
 21496 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21497 ;; Auto vars:     Size  Location     Type
 21498 ;;		None
 21499 ;; Return value:  Size  Location     Type
 21500 ;;                  1    wreg      unsigned char 
 21501 ;; Registers used:
 21502 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21503 ;; Tracked objects:
 21504 ;;		On entry : 0/0
 21505 ;;		On exit  : 0/0
 21506 ;;		Unchanged: 0/0
 21507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21508 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21511 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21512 ;;Total ram usage:        2 bytes
 21513 ;; Hardware stack levels used:    1
 21514 ;; Hardware stack levels required when called:    7
 21515 ;; This function calls:
 21516 ;;		Nothing
 21517 ;; This function is called by:
 21518 ;;		_LORAWAN_RxDone
 21519 ;; This function uses a non-reentrant model
 21520 ;;
 21521                           
 21522                           	psect	text99
 21523  0086DE                     __ptext99:
 21524                           	opt callstack 0
 21525  0086DE                     _CheckMcastFlags:
 21526                           	opt callstack 17
 21527                           
 21528                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 21529                           
 21530                           ;incstack = 0
 21531  0086DE  0100               	movlb	0	; () banked
 21532  0086E0  EE20 F005          	lfsr	2,5
 21533  0086E4  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21534  0086E6  26D9               	addwf	fsr2l,f,c
 21535  0086E8  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21536  0086EA  22DA               	addwfc	fsr2h,f,c
 21537  0086EC  BADF               	btfsc	indf2,5,c
 21538  0086EE  D012               	goto	u21970
 21539                           
 21540                           ; BSR set to: 0
 21541  0086F0  EE20 F005          	lfsr	2,5
 21542  0086F4  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21543  0086F6  26D9               	addwf	fsr2l,f,c
 21544  0086F8  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21545  0086FA  22DA               	addwfc	fsr2h,f,c
 21546  0086FC  BCDF               	btfsc	indf2,6,c
 21547  0086FE  D00A               	goto	u21970
 21548                           
 21549                           ; BSR set to: 0
 21550  008700  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 21551  008704  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 21552  008708  38DF               	swapf	223,w,c
 21553  00870A  32E8               	rrcf	wreg,f,c
 21554  00870C  0B07               	andlw	7
 21555  00870E  0A03               	xorlw	3
 21556  008710  B4D8               	btfsc	status,2,c
 21557  008712  D002               	goto	l20108
 21558  008714                     u21970:
 21559                           
 21560                           ; BSR set to: 0
 21561                           ;lorawan.c: 2110: {;lorawan.c: 2111: return 0;
 21562  008714  0E00               	movlw	0
 21563  008716  0012               	return	
 21564  008718                     l20108:
 21565                           
 21566                           ; BSR set to: 0
 21567                           ;lorawan.c: 2112: };lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 21568  008718  EE20 F005          	lfsr	2,5
 21569  00871C  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21570  00871E  26D9               	addwf	fsr2l,f,c
 21571  008720  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21572  008722  22DA               	addwfc	fsr2h,f,c
 21573  008724  50DF               	movf	223,w,c
 21574  008726  0B0F               	andlw	15
 21575  008728  0900               	iorlw	0
 21576  00872A  A4D8               	btfss	status,2,c
 21577  00872C  D7F3               	goto	u21970
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;lorawan.c: 2118: else;lorawan.c: 2119: {;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) 
      +                          + 8))
 21581  00872E  EE20 F008          	lfsr	2,8
 21582  008732  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21583  008734  26D9               	addwf	fsr2l,f,c
 21584  008736  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21585  008738  22DA               	addwfc	fsr2h,f,c
 21586  00873A  50DF               	movf	indf2,w,c
 21587  00873C  B4D8               	btfsc	status,2,c
 21588  00873E  D7EA               	goto	u21970
 21589                           
 21590                           ; BSR set to: 0
 21591                           ;lorawan.c: 2123: };lorawan.c: 2124: };lorawan.c: 2126: if (hdr->members.fCtrl.fPending 
      +                          == 1)
 21592  008740  EE20 F005          	lfsr	2,5
 21593  008744  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21594  008746  26D9               	addwf	fsr2l,f,c
 21595  008748  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21596  00874A  22DA               	addwfc	fsr2h,f,c
 21597  00874C  A8DF               	btfss	indf2,4,c
 21598  00874E  D002               	goto	l20126
 21599                           
 21600                           ; BSR set to: 0
 21601                           ;lorawan.c: 2127: {;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 21602  008750  0102               	movlb	2	; () banked
 21603  008752  8705               	bsf	_loRa& (0+255),3,b
 21604  008754                     l20126:
 21605                           
 21606                           ;lorawan.c: 2129: };lorawan.c: 2131: return 1;
 21607  008754  0E01               	movlw	1
 21608  008756  0012               	return		;funcret
 21609  008758                     __end_of_CheckMcastFlags:
 21610                           	opt callstack 0
 21611                           
 21612 ;; *************** function _CheckFlags *****************
 21613 ;; Defined at:
 21614 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21615 ;; Parameters:    Size  Location     Type
 21616 ;;  hdr             2    0[BANK0 ] PTR struct .
 21617 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21618 ;; Auto vars:     Size  Location     Type
 21619 ;;		None
 21620 ;; Return value:  Size  Location     Type
 21621 ;;                  1    wreg      void 
 21622 ;; Registers used:
 21623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21624 ;; Tracked objects:
 21625 ;;		On entry : 0/0
 21626 ;;		On exit  : 0/0
 21627 ;;		Unchanged: 0/0
 21628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21629 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21632 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21633 ;;Total ram usage:        2 bytes
 21634 ;; Hardware stack levels used:    1
 21635 ;; Hardware stack levels required when called:    7
 21636 ;; This function calls:
 21637 ;;		Nothing
 21638 ;; This function is called by:
 21639 ;;		_LORAWAN_RxDone
 21640 ;; This function uses a non-reentrant model
 21641 ;;
 21642                           
 21643                           	psect	text100
 21644  009044                     __ptext100:
 21645                           	opt callstack 0
 21646  009044                     _CheckFlags:
 21647                           	opt callstack 17
 21648                           
 21649                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 21650                           
 21651                           ;incstack = 0
 21652  009044  0100               	movlb	0	; () banked
 21653  009046  EE20 F005          	lfsr	2,5
 21654  00904A  5160               	movf	CheckFlags@hdr& (0+255),w,b
 21655  00904C  26D9               	addwf	fsr2l,f,c
 21656  00904E  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21657  009050  22DA               	addwfc	fsr2h,f,c
 21658  009052  AEDF               	btfss	indf2,7,c
 21659  009054  D002               	goto	l20156
 21660                           
 21661                           ; BSR set to: 0
 21662                           ;lorawan.c: 2077: {;lorawan.c: 2078: loRa.macStatus.adr = 1;
 21663  009056  0102               	movlb	2	; () banked
 21664  009058  8D07               	bsf	(_loRa+2)& (0+255),6,b
 21665  00905A                     l20156:
 21666                           
 21667                           ;lorawan.c: 2079: };lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 21668  00905A  0100               	movlb	0	; () banked
 21669  00905C  EE20 F005          	lfsr	2,5
 21670  009060  5160               	movf	CheckFlags@hdr& (0+255),w,b
 21671  009062  26D9               	addwf	fsr2l,f,c
 21672  009064  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21673  009066  22DA               	addwfc	fsr2h,f,c
 21674  009068  A8DF               	btfss	indf2,4,c
 21675  00906A  D002               	goto	l20160
 21676                           
 21677                           ; BSR set to: 0
 21678                           ;lorawan.c: 2082: {;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 21679  00906C  0102               	movlb	2	; () banked
 21680  00906E  8705               	bsf	_loRa& (0+255),3,b
 21681  009070                     l20160:
 21682                           
 21683                           ;lorawan.c: 2084: };lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 21684  009070  0100               	movlb	0	; () banked
 21685  009072  EE20 F005          	lfsr	2,5
 21686  009076  5160               	movf	CheckFlags@hdr& (0+255),w,b
 21687  009078  26D9               	addwf	fsr2l,f,c
 21688  00907A  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21689  00907C  22DA               	addwfc	fsr2h,f,c
 21690  00907E  ACDF               	btfss	indf2,6,c
 21691  009080  D002               	goto	l20164
 21692                           
 21693                           ; BSR set to: 0
 21694                           ;lorawan.c: 2087: {;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 21695  009082  0102               	movlb	2	; () banked
 21696  009084  8905               	bsf	_loRa& (0+255),4,b
 21697  009086                     l20164:
 21698                           
 21699                           ;lorawan.c: 2089: };lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA
      +                          _CONFIRMED_DOWN)
 21700  009086  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 21701  00908A  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 21702  00908E  0100               	movlb	0	; () banked
 21703  009090  38DF               	swapf	223,w,c
 21704  009092  32E8               	rrcf	wreg,f,c
 21705  009094  0B07               	andlw	7
 21706  009096  0A05               	xorlw	5
 21707  009098  A4D8               	btfss	status,2,c
 21708  00909A  0012               	return	
 21709                           
 21710                           ; BSR set to: 0
 21711                           ;lorawan.c: 2092: {;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMess
      +                          age = 1;
 21712  00909C  0102               	movlb	2	; () banked
 21713  00909E  8305               	bsf	_loRa& (0+255),1,b
 21714  0090A0  0012               	return		;funcret
 21715  0090A2                     __end_of_CheckFlags:
 21716                           	opt callstack 0
 21717                           
 21718 ;; *************** function _RADIO_FSKPacketSent *****************
 21719 ;; Defined at:
 21720 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 21721 ;; Parameters:    Size  Location     Type
 21722 ;;		None
 21723 ;; Auto vars:     Size  Location     Type
 21724 ;;  timeOnAir       4  119[BANK0 ] unsigned long 
 21725 ;;  irqFlags        1  127[BANK0 ] unsigned char 
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  1    wreg      void 
 21728 ;; Registers used:
 21729 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21736 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21738 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21739 ;;Total ram usage:        9 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; Hardware stack levels required when called:   15
 21742 ;; This function calls:
 21743 ;;		_LORAWAN_TxDone
 21744 ;;		_RADIO_RegisterRead
 21745 ;;		_RADIO_WriteMode
 21746 ;;		_SwTimerReadValue
 21747 ;;		_SwTimerStop
 21748 ;;		___lmul
 21749 ;; This function is called by:
 21750 ;;		_RADIO_DIO0
 21751 ;; This function uses a non-reentrant model
 21752 ;;
 21753                           
 21754                           	psect	text101
 21755  0064A4                     __ptext101:
 21756                           	opt callstack 0
 21757  0064A4                     _RADIO_FSKPacketSent:
 21758                           	opt callstack 11
 21759                           
 21760                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;;radio_driver_SX1276.c: 1096: uint32_t ti
      +                          meOnAir;;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 21761                           
 21762                           ;incstack = 0
 21763  0064A4  0E3F               	movlw	63
 21764  0064A6  EC9B  F050         	call	_RADIO_RegisterRead
 21765  0064AA  0100               	movlb	0	; () banked
 21766  0064AC  6FDF               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 21767                           
 21768                           ; BSR set to: 0
 21769                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 21770  0064AE  A7DF               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 21771  0064B0  0012               	return	
 21772                           
 21773                           ; BSR set to: 0
 21774                           ;radio_driver_SX1276.c: 1100: {;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
 21775  0064B2  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 21776  0064B6  0E00               	movlw	0
 21777  0064B8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 21778  0064BA  0E00               	movlw	0
 21779  0064BC  ECD9  F035         	call	_RADIO_WriteMode
 21780                           
 21781                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 21782  0064C0  0101               	movlb	1	; () banked
 21783  0064C2  914C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 21784                           
 21785                           ; BSR set to: 1
 21786                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 21787  0064C4  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 21788  0064C6  EC7B  F051         	call	_SwTimerStop
 21789                           
 21790                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 21791  0064CA  0101               	movlb	1	; () banked
 21792  0064CC  B94C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 21793  0064CE  0012               	return	
 21794                           
 21795                           ; BSR set to: 1
 21796                           ;radio_driver_SX1276.c: 1107: {;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)2000
      +                          0) - ((SwTimerReadValue(RadioConfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint
      +                          32_t)(SwTimerReadValue(RadioConfiguration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((
      +                          uint32_t)(SwTimerReadValue(RadioConfiguration.t
 21797  0064D0  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21798  0064D2  EC91  F04C         	call	_SwTimerReadValue
 21799  0064D6  0100               	movlb	0	; () banked
 21800  0064D8  518C               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 21801  0064DA  E108               	bnz	u23620
 21802  0064DC  0E1F               	movlw	31
 21803  0064DE  5D89               	subwf	?_SwTimerReadValue& (0+255),w,b
 21804  0064E0  0EAC               	movlw	172
 21805  0064E2  598A               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 21806  0064E4  0EDF               	movlw	223
 21807  0064E6  598B               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 21808  0064E8  A0D8               	btfss	status,0,c
 21809  0064EA  D021               	goto	l20980
 21810  0064EC                     u23620:
 21811                           
 21812                           ; BSR set to: 0
 21813  0064EC  0101               	movlb	1	; () banked
 21814  0064EE  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21815  0064F0  EC91  F04C         	call	_SwTimerReadValue
 21816  0064F4  0E0D               	movlw	13
 21817  0064F6  D006               	goto	u23630
 21818  0064F8                     u23635:
 21819  0064F8  0100               	movlb	0	; () banked
 21820  0064FA  90D8               	bcf	status,0,c
 21821  0064FC  338C               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 21822  0064FE  338B               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 21823  006500  338A               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 21824  006502  3389               	rrcf	?_SwTimerReadValue& (0+255),f,b
 21825  006504                     u23630:
 21826  006504  2EE8               	decfsz	wreg,f,c
 21827  006506  D7F8               	goto	u23635
 21828  006508  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 21829  00650C  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 21830  006510  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 21831  006514  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 21832  006518  0E7D               	movlw	125
 21833  00651A  6F96               	movwf	___lmul@multiplicand& (0+255),b
 21834  00651C  0E00               	movlw	0
 21835  00651E  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21836  006520  0E00               	movlw	0
 21837  006522  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21838  006524  0E00               	movlw	0
 21839  006526  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21840  006528  ECAD  F048         	call	___lmul	;wreg free
 21841  00652C  D021               	goto	L23
 21842  00652E                     l20980:
 21843                           
 21844                           ; BSR set to: 0
 21845  00652E  0101               	movlb	1	; () banked
 21846  006530  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21847  006532  EC91  F04C         	call	_SwTimerReadValue
 21848  006536  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 21849  00653A  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 21850  00653E  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 21851  006542  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 21852  006546  0E7D               	movlw	125
 21853  006548  0100               	movlb	0	; () banked
 21854  00654A  6F96               	movwf	___lmul@multiplicand& (0+255),b
 21855  00654C  0E00               	movlw	0
 21856  00654E  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21857  006550  0E00               	movlw	0
 21858  006552  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21859  006554  0E00               	movlw	0
 21860  006556  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21861  006558  ECAD  F048         	call	___lmul	;wreg free
 21862  00655C  0E0D               	movlw	13
 21863  00655E  D006               	goto	u23640
 21864  006560                     u23645:
 21865  006560  0100               	movlb	0	; () banked
 21866  006562  90D8               	bcf	status,0,c
 21867  006564  3395               	rrcf	(?___lmul+3)& (0+255),f,b
 21868  006566  3394               	rrcf	(?___lmul+2)& (0+255),f,b
 21869  006568  3393               	rrcf	(?___lmul+1)& (0+255),f,b
 21870  00656A  3392               	rrcf	?___lmul& (0+255),f,b
 21871  00656C                     u23640:
 21872  00656C  2EE8               	decfsz	wreg,f,c
 21873  00656E  D7F8               	goto	u23645
 21874  006570                     L23:
 21875  006570  C092  F0DB         	movff	?___lmul,_RADIO_FSKPacketSent$800
 21876  006574  C093  F0DC         	movff	?___lmul+1,_RADIO_FSKPacketSent$800+1
 21877  006578  C094  F0DD         	movff	?___lmul+2,_RADIO_FSKPacketSent$800+2
 21878  00657C  C095  F0DE         	movff	?___lmul+3,_RADIO_FSKPacketSent$800+3
 21879  006580  0100               	movlb	0	; () banked
 21880  006582  51DB               	movf	_RADIO_FSKPacketSent$800& (0+255),w,b
 21881  006584  0820               	sublw	32
 21882  006586  6FD7               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21883  006588  0E4E               	movlw	78
 21884  00658A  55DC               	subfwb	(_RADIO_FSKPacketSent$800+1)& (0+255),w,b
 21885  00658C  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21886  00658E  0E00               	movlw	0
 21887  006590  55DD               	subfwb	(_RADIO_FSKPacketSent$800+2)& (0+255),w,b
 21888  006592  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21889  006594  0E00               	movlw	0
 21890  006596  55DE               	subfwb	(_RADIO_FSKPacketSent$800+3)& (0+255),w,b
 21891  006598  6FDA               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21895  00659A  0101               	movlb	1	; () banked
 21896  00659C  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21897  00659E  EC7B  F051         	call	_SwTimerStop
 21898                           
 21899                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21900  0065A2  C0D7  F0B3         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21901  0065A6  C0D8  F0B4         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21902  0065AA  ECEC  F005         	call	_LORAWAN_TxDone	;wreg free
 21903  0065AE  0012               	return		;funcret
 21904  0065B0                     __end_of_RADIO_FSKPacketSent:
 21905                           	opt callstack 0
 21906                           
 21907 ;; *************** function _LORAWAN_TxDone *****************
 21908 ;; Defined at:
 21909 ;;		line 366 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21910 ;; Parameters:    Size  Location     Type
 21911 ;;  timeOnAir       2   83[BANK0 ] unsigned int 
 21912 ;; Auto vars:     Size  Location     Type
 21913 ;;  minim           4  114[BANK0 ] unsigned long 
 21914 ;;  ticks           4  110[BANK0 ] unsigned long 
 21915 ;;  delta           4  102[BANK0 ] unsigned long 
 21916 ;;  i               1  118[BANK0 ] unsigned char 
 21917 ;;  found           1  101[BANK0 ] unsigned char 
 21918 ;; Return value:  Size  Location     Type
 21919 ;;                  1    wreg      void 
 21920 ;; Registers used:
 21921 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21922 ;; Tracked objects:
 21923 ;;		On entry : 0/0
 21924 ;;		On exit  : 0/0
 21925 ;;		Unchanged: 0/0
 21926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21927 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21928 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21929 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21930 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21931 ;;Total ram usage:       36 bytes
 21932 ;; Hardware stack levels used:    1
 21933 ;; Hardware stack levels required when called:   14
 21934 ;; This function calls:
 21935 ;;		_LORAWAN_EnterContinuousReceive
 21936 ;;		_RADIO_GetStatus
 21937 ;;		_RxData
 21938 ;;		_SwTimerIsRunning
 21939 ;;		_SwTimerReadValue
 21940 ;;		_SwTimerSetTimeout
 21941 ;;		_SwTimerStart
 21942 ;;		_SwTimerStop
 21943 ;;		___lldiv
 21944 ;;		___lmul
 21945 ;; This function is called by:
 21946 ;;		_RADIO_TxDone
 21947 ;;		_RADIO_FSKPacketSent
 21948 ;;		_RADIO_WatchdogTimeout
 21949 ;; This function uses a non-reentrant model
 21950 ;;
 21951                           
 21952                           	psect	text102
 21953  000BD8                     __ptext102:
 21954                           	opt callstack 0
 21955  000BD8                     _LORAWAN_TxDone:
 21956                           	opt callstack 11
 21957                           
 21958                           ;lorawan_eu.c: 368: if (loRa.macStatus.macPause == 0)
 21959                           
 21960                           ;incstack = 0
 21961  000BD8  0102               	movlb	2	; () banked
 21962  000BDA  B108               	btfsc	(_loRa+3)& (0+255),0,b
 21963  000BDC  D348               	goto	l20792
 21964                           
 21965                           ; BSR set to: 2
 21966                           ;lorawan_eu.c: 369: {;lorawan_eu.c: 370: bool found = 0;
 21967  000BDE  0E00               	movlw	0
 21968  000BE0  0100               	movlb	0	; () banked
 21969  000BE2  6FC5               	movwf	LORAWAN_TxDone@found& (0+255),b
 21970                           
 21971                           ;lorawan_eu.c: 371: uint8_t i;;lorawan_eu.c: 372: uint32_t delta = 0, minim = (429496729
      +                          5UL), ticks;
 21972  000BE4  0E00               	movlw	0
 21973  000BE6  6FC6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 21974  000BE8  0E00               	movlw	0
 21975  000BEA  6FC7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21976  000BEC  0E00               	movlw	0
 21977  000BEE  6FC8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21978  000BF0  0E00               	movlw	0
 21979  000BF2  6FC9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21980                           
 21981                           ; BSR set to: 0
 21982  000BF4  69D2               	setf	LORAWAN_TxDone@minim& (0+255),b
 21983  000BF6  69D3               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21984  000BF8  69D4               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21985  000BFA  69D5               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21986                           
 21987                           ;lorawan_eu.c: 375: loRa.rx2DelayExpired = 0;
 21988  000BFC  0E00               	movlw	0
 21989  000BFE  0102               	movlb	2	; () banked
 21990  000C00  6FF6               	movwf	(_loRa+241)& (0+255),b
 21991                           
 21992                           ;lorawan_eu.c: 377: loRa.macStatus.macState = BEFORE_RX1;
 21993  000C02  5107               	movf	(_loRa+2)& (0+255),w,b
 21994  000C04  0BF0               	andlw	-16
 21995  000C06  0902               	iorlw	2
 21996  000C08  6F07               	movwf	(_loRa+2)& (0+255),b
 21997                           
 21998                           ; BSR set to: 2
 21999                           ;lorawan_eu.c: 379: i = loRa.lastUsedChannelIndex;
 22000  000C0A  C2DF  F0D6         	movff	_loRa+218,LORAWAN_TxDone@i
 22001                           
 22002                           ; BSR set to: 2
 22003                           ;lorawan_eu.c: 382: if (loRa.lorawanMacStatus.joining == 1)
 22004  000C0E  A505               	btfss	_loRa& (0+255),2,b
 22005  000C10  D0B6               	goto	l20726
 22006                           
 22007                           ; BSR set to: 2
 22008                           ;lorawan_eu.c: 383: {;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( ((
      +                          (uint32_t)(loRa.protocolParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1
      +                          Parameters.dataRate])) << (12)) / 125UL ));
 22009  000C12  0E0F               	movlw	low _rxWindowOffset
 22010  000C14  251C               	addwf	(_loRa+23)& (0+255),w,b
 22011  000C16  6EF6               	movwf	tblptrl,c
 22012  000C18  6AF7               	clrf	tblptrh,c
 22013  000C1A  0EFF               	movlw	high _rxWindowOffset
 22014  000C1C  22F7               	addwfc	tblptrh,f,c
 22015  000C1E                     	if	1	;There are 3 active tblptr bytes
 22016  000C1E  6AF8               	clrf	tblptru,c
 22017  000C20  0E00               	movlw	low (__mediumconst shr (0+16))
 22018  000C22  22F8               	addwfc	tblptru,f,c
 22019  000C24                     	endif
 22020  000C24  0008               	tblrd		*
 22021  000C26  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 22022  000C2A  519D               	movf	(_loRa+152)& (0+255),w,b
 22023  000C2C  0100               	movlb	0	; () banked
 22024  000C2E  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22025  000C30  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22026  000C32  0E00               	movlw	0
 22027  000C34  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22028  000C36  0EFF               	movlw	255
 22029  000C38  0102               	movlb	2	; () banked
 22030  000C3A  219E               	addwfc	(_loRa+153)& (0+255),w,b
 22031  000C3C  0100               	movlb	0	; () banked
 22032  000C3E  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22033  000C40  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22034  000C42  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22035  000C44  0E0C               	movlw	12
 22036  000C46                     u23155:
 22037  000C46  90D8               	bcf	status,0,c
 22038  000C48  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22039  000C4A  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22040  000C4C  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22041  000C4E  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22042  000C50  2EE8               	decfsz	wreg,f,c
 22043  000C52  D7F9               	goto	u23155
 22044  000C54  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22045  000C58  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22046  000C5C  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22047  000C60  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22048  000C64  0E7D               	movlw	125
 22049  000C66  6F64               	movwf	___lldiv@divisor& (0+255),b
 22050  000C68  0E00               	movlw	0
 22051  000C6A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22052  000C6C  0E00               	movlw	0
 22053  000C6E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22054  000C70  0E00               	movlw	0
 22055  000C72  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22056  000C74  EC6D  F042         	call	___lldiv	;wreg free
 22057  000C78  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22058  000C7C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22059  000C80  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22060  000C84  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22061  000C88  0102               	movlb	2	; () banked
 22062  000C8A  51E7               	movf	(_loRa+226)& (0+255),w,b
 22063  000C8C  EC2D  F04C         	call	_SwTimerSetTimeout
 22064                           
 22065                           ;lorawan_eu.c: 385: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22066  000C90  0E0F               	movlw	low _rxWindowOffset
 22067  000C92  0102               	movlb	2	; () banked
 22068  000C94  2521               	addwf	(_loRa+28)& (0+255),w,b
 22069  000C96  6EF6               	movwf	tblptrl,c
 22070  000C98  6AF7               	clrf	tblptrh,c
 22071  000C9A  0EFF               	movlw	high _rxWindowOffset
 22072  000C9C  22F7               	addwfc	tblptrh,f,c
 22073  000C9E                     	if	1	;There are 3 active tblptr bytes
 22074  000C9E  6AF8               	clrf	tblptru,c
 22075  000CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 22076  000CA2  22F8               	addwfc	tblptru,f,c
 22077  000CA4                     	endif
 22078  000CA4  0008               	tblrd		*
 22079  000CA6  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 22080  000CAA  519F               	movf	(_loRa+154)& (0+255),w,b
 22081  000CAC  0100               	movlb	0	; () banked
 22082  000CAE  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22083  000CB0  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22084  000CB2  0E00               	movlw	0
 22085  000CB4  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22086  000CB6  0EFF               	movlw	255
 22087  000CB8  0102               	movlb	2	; () banked
 22088  000CBA  21A0               	addwfc	(_loRa+155)& (0+255),w,b
 22089  000CBC  0100               	movlb	0	; () banked
 22090  000CBE  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22091  000CC0  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22092  000CC2  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22093  000CC4  0E0C               	movlw	12
 22094  000CC6                     u23165:
 22095  000CC6  90D8               	bcf	status,0,c
 22096  000CC8  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22097  000CCA  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22098  000CCC  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22099  000CCE  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22100  000CD0  2EE8               	decfsz	wreg,f,c
 22101  000CD2  D7F9               	goto	u23165
 22102  000CD4  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22103  000CD8  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22104  000CDC  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22105  000CE0  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22106  000CE4  0E7D               	movlw	125
 22107  000CE6  6F64               	movwf	___lldiv@divisor& (0+255),b
 22108  000CE8  0E00               	movlw	0
 22109  000CEA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22110  000CEC  0E00               	movlw	0
 22111  000CEE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22112  000CF0  0E00               	movlw	0
 22113  000CF2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22114  000CF4  EC6D  F042         	call	___lldiv	;wreg free
 22115  000CF8  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22116  000CFC  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22117  000D00  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22118  000D04  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22119  000D08  0102               	movlb	2	; () banked
 22120  000D0A  51E8               	movf	(_loRa+227)& (0+255),w,b
 22121  000D0C  EC2D  F04C         	call	_SwTimerSetTimeout
 22122                           
 22123                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept1TimerId);
 22124  000D10  0102               	movlb	2	; () banked
 22125  000D12  51E7               	movf	(_loRa+226)& (0+255),w,b
 22126  000D14  EC4A  F040         	call	_SwTimerStart
 22127                           
 22128                           ;lorawan_eu.c: 387: SwTimerStart(loRa.joinAccept2TimerId);
 22129  000D18  0102               	movlb	2	; () banked
 22130  000D1A  51E8               	movf	(_loRa+227)& (0+255),w,b
 22131  000D1C  EC4A  F040         	call	_SwTimerStart
 22132                           
 22133                           ;lorawan_eu.c: 389: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 22134  000D20  C2E0  F092         	movff	_loRa+219,___lmul@multiplier
 22135  000D24  C2E1  F093         	movff	_loRa+220,___lmul@multiplier+1
 22136  000D28  0100               	movlb	0	; () banked
 22137  000D2A  6B94               	clrf	(___lmul@multiplier+2)& (0+255),b
 22138  000D2C  6B95               	clrf	(___lmul@multiplier+3)& (0+255),b
 22139  000D2E  0ED6               	movlw	214
 22140  000D30  6F96               	movwf	___lmul@multiplicand& (0+255),b
 22141  000D32  0E0B               	movlw	11
 22142  000D34  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22143  000D36  0E00               	movlw	0
 22144  000D38  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22145  000D3A  0E00               	movlw	0
 22146  000D3C  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22147  000D3E  ECAD  F048         	call	___lmul	;wreg free
 22148  000D42  0EFF               	movlw	255
 22149  000D44  0100               	movlb	0	; () banked
 22150  000D46  2592               	addwf	?___lmul& (0+255),w,b
 22151  000D48  6FCA               	movwf	_LORAWAN_TxDone$6790& (0+255),b
 22152  000D4A  0EFF               	movlw	255
 22153  000D4C  2193               	addwfc	(?___lmul+1)& (0+255),w,b
 22154  000D4E  6FCB               	movwf	(_LORAWAN_TxDone$6790+1)& (0+255),b
 22155  000D50  0EFF               	movlw	255
 22156  000D52  2194               	addwfc	(?___lmul+2)& (0+255),w,b
 22157  000D54  6FCC               	movwf	(_LORAWAN_TxDone$6790+2)& (0+255),b
 22158  000D56  0EFF               	movlw	255
 22159  000D58  2195               	addwfc	(?___lmul+3)& (0+255),w,b
 22160  000D5A  6FCD               	movwf	(_LORAWAN_TxDone$6790+3)& (0+255),b
 22161                           
 22162                           ; BSR set to: 0
 22163                           ;lorawan_eu.c: 389: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 22164  000D5C  C0CA  F092         	movff	_LORAWAN_TxDone$6790,___lmul@multiplier
 22165  000D60  C0CB  F093         	movff	_LORAWAN_TxDone$6790+1,___lmul@multiplier+1
 22166  000D64  C0CC  F094         	movff	_LORAWAN_TxDone$6790+2,___lmul@multiplier+2
 22167  000D68  C0CD  F095         	movff	_LORAWAN_TxDone$6790+3,___lmul@multiplier+3
 22168  000D6C  C0B3  F096         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 22169  000D70  C0B4  F097         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 22170  000D74  6B98               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22171  000D76  6B99               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22172  000D78  ECAD  F048         	call	___lmul	;wreg free
 22173  000D7C  D0CE               	goto	L24
 22174  000D7E                     l20726:
 22175                           
 22176                           ; BSR set to: 2
 22177                           ;lorawan_eu.c: 391: else;lorawan_eu.c: 392: {;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.
      +                          receiveWindow1TimerId, ( (((uint32_t)(loRa.protocolParameters.receiveDelay1 + rxWindowOf
      +                          fset[loRa.receiveWindow1Parameters.dataRate])) << (12)) / 125UL ));
 22178  000D7E  0E0F               	movlw	low _rxWindowOffset
 22179  000D80  251C               	addwf	(_loRa+23)& (0+255),w,b
 22180  000D82  6EF6               	movwf	tblptrl,c
 22181  000D84  6AF7               	clrf	tblptrh,c
 22182  000D86  0EFF               	movlw	high _rxWindowOffset
 22183  000D88  22F7               	addwfc	tblptrh,f,c
 22184  000D8A                     	if	1	;There are 3 active tblptr bytes
 22185  000D8A  6AF8               	clrf	tblptru,c
 22186  000D8C  0E00               	movlw	low (__mediumconst shr (0+16))
 22187  000D8E  22F8               	addwfc	tblptru,f,c
 22188  000D90                     	endif
 22189  000D90  0008               	tblrd		*
 22190  000D92  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 22191  000D96  5199               	movf	(_loRa+148)& (0+255),w,b
 22192  000D98  0100               	movlb	0	; () banked
 22193  000D9A  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22194  000D9C  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22195  000D9E  0E00               	movlw	0
 22196  000DA0  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22197  000DA2  0EFF               	movlw	255
 22198  000DA4  0102               	movlb	2	; () banked
 22199  000DA6  219A               	addwfc	(_loRa+149)& (0+255),w,b
 22200  000DA8  0100               	movlb	0	; () banked
 22201  000DAA  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22202  000DAC  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22203  000DAE  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22204  000DB0  0E0C               	movlw	12
 22205  000DB2                     u23175:
 22206  000DB2  90D8               	bcf	status,0,c
 22207  000DB4  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22208  000DB6  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22209  000DB8  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22210  000DBA  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22211  000DBC  2EE8               	decfsz	wreg,f,c
 22212  000DBE  D7F9               	goto	u23175
 22213  000DC0  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22214  000DC4  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22215  000DC8  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22216  000DCC  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22217  000DD0  0E7D               	movlw	125
 22218  000DD2  6F64               	movwf	___lldiv@divisor& (0+255),b
 22219  000DD4  0E00               	movlw	0
 22220  000DD6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22221  000DD8  0E00               	movlw	0
 22222  000DDA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22223  000DDC  0E00               	movlw	0
 22224  000DDE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22225  000DE0  EC6D  F042         	call	___lldiv	;wreg free
 22226  000DE4  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22227  000DE8  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22228  000DEC  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22229  000DF0  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22230  000DF4  0102               	movlb	2	; () banked
 22231  000DF6  51E9               	movf	(_loRa+228)& (0+255),w,b
 22232  000DF8  EC2D  F04C         	call	_SwTimerSetTimeout
 22233                           
 22234                           ;lorawan_eu.c: 394: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22235  000DFC  0E0F               	movlw	low _rxWindowOffset
 22236  000DFE  0102               	movlb	2	; () banked
 22237  000E00  2521               	addwf	(_loRa+28)& (0+255),w,b
 22238  000E02  6EF6               	movwf	tblptrl,c
 22239  000E04  6AF7               	clrf	tblptrh,c
 22240  000E06  0EFF               	movlw	high _rxWindowOffset
 22241  000E08  22F7               	addwfc	tblptrh,f,c
 22242  000E0A                     	if	1	;There are 3 active tblptr bytes
 22243  000E0A  6AF8               	clrf	tblptru,c
 22244  000E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 22245  000E0E  22F8               	addwfc	tblptru,f,c
 22246  000E10                     	endif
 22247  000E10  0008               	tblrd		*
 22248  000E12  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 22249  000E16  519B               	movf	(_loRa+150)& (0+255),w,b
 22250  000E18  0100               	movlb	0	; () banked
 22251  000E1A  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22252  000E1C  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22253  000E1E  0E00               	movlw	0
 22254  000E20  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22255  000E22  0EFF               	movlw	255
 22256  000E24  0102               	movlb	2	; () banked
 22257  000E26  219C               	addwfc	(_loRa+151)& (0+255),w,b
 22258  000E28  0100               	movlb	0	; () banked
 22259  000E2A  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22260  000E2C  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22261  000E2E  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22262  000E30  0E0C               	movlw	12
 22263  000E32                     u23185:
 22264  000E32  90D8               	bcf	status,0,c
 22265  000E34  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22266  000E36  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22267  000E38  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22268  000E3A  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22269  000E3C  2EE8               	decfsz	wreg,f,c
 22270  000E3E  D7F9               	goto	u23185
 22271  000E40  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22272  000E44  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22273  000E48  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22274  000E4C  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22275  000E50  0E7D               	movlw	125
 22276  000E52  6F64               	movwf	___lldiv@divisor& (0+255),b
 22277  000E54  0E00               	movlw	0
 22278  000E56  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22279  000E58  0E00               	movlw	0
 22280  000E5A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22281  000E5C  0E00               	movlw	0
 22282  000E5E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22283  000E60  EC6D  F042         	call	___lldiv	;wreg free
 22284  000E64  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22285  000E68  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22286  000E6C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22287  000E70  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22288  000E74  0102               	movlb	2	; () banked
 22289  000E76  51EA               	movf	(_loRa+229)& (0+255),w,b
 22290  000E78  EC2D  F04C         	call	_SwTimerSetTimeout
 22291                           
 22292                           ;lorawan_eu.c: 395: SwTimerStart(loRa.receiveWindow1TimerId);
 22293  000E7C  0102               	movlb	2	; () banked
 22294  000E7E  51E9               	movf	(_loRa+228)& (0+255),w,b
 22295  000E80  EC4A  F040         	call	_SwTimerStart
 22296                           
 22297                           ;lorawan_eu.c: 396: if (CLASS_A == loRa.deviceClass)
 22298  000E84  0102               	movlb	2	; () banked
 22299  000E86  5117               	movf	(_loRa+18)& (0+255),w,b
 22300  000E88  A4D8               	btfss	status,2,c
 22301  000E8A  D003               	goto	l1040
 22302                           
 22303                           ; BSR set to: 2
 22304                           ;lorawan_eu.c: 397: {;lorawan_eu.c: 398: SwTimerStart(loRa.receiveWindow2TimerId);
 22305  000E8C  51EA               	movf	(_loRa+229)& (0+255),w,b
 22306  000E8E  EC4A  F040         	call	_SwTimerStart
 22307  000E92                     l1040:
 22308                           
 22309                           ;lorawan_eu.c: 399: };lorawan_eu.c: 401: Channels[i].channelTimer = ((uint32_t)timeOnAir
      +                          ) * (((uint32_t)Channels[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 22310  000E92  0100               	movlb	0	; () banked
 22311  000E94  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22312  000E96  0D0E               	mullw	14
 22313  000E98  0E1A               	movlw	low (_Channels+6)
 22314  000E9A  24F3               	addwf	prodl,w,c
 22315  000E9C  6ED9               	movwf	fsr2l,c
 22316  000E9E  0E04               	movlw	high (_Channels+6)
 22317  000EA0  20F4               	addwfc	prodh,w,c
 22318  000EA2  6EDA               	movwf	fsr2h,c
 22319  000EA4  CFDE F0B5          	movff	postinc2,??_LORAWAN_TxDone
 22320  000EA8  CFDD F0B6          	movff	postdec2,??_LORAWAN_TxDone+1
 22321  000EAC  51B5               	movf	??_LORAWAN_TxDone& (0+255),w,b
 22322  000EAE  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22323  000EB0  51B6               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22324  000EB2  6FB8               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22325  000EB4  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22326  000EB6  6BBA               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 22327  000EB8  0E01               	movlw	1
 22328  000EBA  25B7               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22329  000EBC  6F92               	movwf	___lmul@multiplier& (0+255),b
 22330  000EBE  0E00               	movlw	0
 22331  000EC0  21B8               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22332  000EC2  6F93               	movwf	(___lmul@multiplier+1)& (0+255),b
 22333  000EC4  0E00               	movlw	0
 22334  000EC6  21B9               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 22335  000EC8  6F94               	movwf	(___lmul@multiplier+2)& (0+255),b
 22336  000ECA  0E00               	movlw	0
 22337  000ECC  21BA               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 22338  000ECE  6F95               	movwf	(___lmul@multiplier+3)& (0+255),b
 22339  000ED0  C2E0  F096         	movff	_loRa+219,___lmul@multiplicand
 22340  000ED4  C2E1  F097         	movff	_loRa+220,___lmul@multiplicand+1
 22341  000ED8  6B98               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22342  000EDA  6B99               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22343  000EDC  ECAD  F048         	call	___lmul	;wreg free
 22344  000EE0  0EFF               	movlw	255
 22345  000EE2  0100               	movlb	0	; () banked
 22346  000EE4  2592               	addwf	?___lmul& (0+255),w,b
 22347  000EE6  6FCA               	movwf	_LORAWAN_TxDone$6790& (0+255),b
 22348  000EE8  0EFF               	movlw	255
 22349  000EEA  2193               	addwfc	(?___lmul+1)& (0+255),w,b
 22350  000EEC  6FCB               	movwf	(_LORAWAN_TxDone$6790+1)& (0+255),b
 22351  000EEE  0EFF               	movlw	255
 22352  000EF0  2194               	addwfc	(?___lmul+2)& (0+255),w,b
 22353  000EF2  6FCC               	movwf	(_LORAWAN_TxDone$6790+2)& (0+255),b
 22354  000EF4  0EFF               	movlw	255
 22355  000EF6  2195               	addwfc	(?___lmul+3)& (0+255),w,b
 22356  000EF8  6FCD               	movwf	(_LORAWAN_TxDone$6790+3)& (0+255),b
 22357                           
 22358                           ;lorawan_eu.c: 399: };lorawan_eu.c: 401: Channels[i].channelTimer = ((uint32_t)timeOnAir
      +                          ) * (((uint32_t)Channels[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 22359  000EFA  C0CA  F092         	movff	_LORAWAN_TxDone$6790,___lmul@multiplier
 22360  000EFE  C0CB  F093         	movff	_LORAWAN_TxDone$6790+1,___lmul@multiplier+1
 22361  000F02  C0CC  F094         	movff	_LORAWAN_TxDone$6790+2,___lmul@multiplier+2
 22362  000F06  C0CD  F095         	movff	_LORAWAN_TxDone$6790+3,___lmul@multiplier+3
 22363  000F0A  C0B3  F096         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 22364  000F0E  C0B4  F097         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 22365  000F12  6B98               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22366  000F14  6B99               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22367  000F16  ECAD  F048         	call	___lmul	;wreg free
 22368  000F1A                     L24:
 22369  000F1A  0100               	movlb	0	; () banked
 22370  000F1C  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22371  000F1E  0D0E               	mullw	14
 22372  000F20  0E1C               	movlw	low (_Channels+8)
 22373  000F22  24F3               	addwf	prodl,w,c
 22374  000F24  6ED9               	movwf	fsr2l,c
 22375  000F26  0E04               	movlw	high (_Channels+8)
 22376  000F28  20F4               	addwfc	prodh,w,c
 22377  000F2A  6EDA               	movwf	fsr2h,c
 22378  000F2C  C092  FFDE         	movff	?___lmul,postinc2
 22379  000F30  C093  FFDE         	movff	?___lmul+1,postinc2
 22380  000F34  C094  FFDE         	movff	?___lmul+2,postinc2
 22381  000F38  C095  FFDE         	movff	?___lmul+3,postinc2
 22382                           
 22383                           ; BSR set to: 0
 22384                           ;lorawan_eu.c: 402: };lorawan_eu.c: 404: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 22385  000F3C  0102               	movlb	2	; () banked
 22386  000F3E  51EE               	movf	(_loRa+233)& (0+255),w,b
 22387  000F40  ECE6  F050         	call	_SwTimerIsRunning
 22388  000F44  0900               	iorlw	0
 22389  000F46  B4D8               	btfsc	status,2,c
 22390  000F48  D078               	goto	l20744
 22391                           
 22392                           ;lorawan_eu.c: 405: {;lorawan_eu.c: 406: SwTimerStop(loRa.dutyCycleTimerId);
 22393  000F4A  0102               	movlb	2	; () banked
 22394  000F4C  51EE               	movf	(_loRa+233)& (0+255),w,b
 22395  000F4E  EC7B  F051         	call	_SwTimerStop
 22396                           
 22397                           ;lorawan_eu.c: 408: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 22398  000F52  0102               	movlb	2	; () banked
 22399  000F54  51EE               	movf	(_loRa+233)& (0+255),w,b
 22400  000F56  EC91  F04C         	call	_SwTimerReadValue
 22401  000F5A  C089  F0CE         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 22402  000F5E  C08A  F0CF         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 22403  000F62  C08B  F0D0         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 22404  000F66  C08C  F0D1         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 22405                           
 22406                           ;lorawan_eu.c: 409: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 22407  000F6A  0100               	movlb	0	; () banked
 22408  000F6C  51D1               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 22409  000F6E  E108               	bnz	u23210
 22410  000F70  0E1F               	movlw	31
 22411  000F72  5DCE               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 22412  000F74  0EAC               	movlw	172
 22413  000F76  59CF               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 22414  000F78  0EDF               	movlw	223
 22415  000F7A  59D0               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 22416  000F7C  A0D8               	btfss	status,0,c
 22417  000F7E  D024               	goto	l20740
 22418  000F80                     u23210:
 22419                           
 22420                           ; BSR set to: 0
 22421  000F80  C0CE  F0B5         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 22422  000F84  C0CF  F0B6         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 22423  000F88  C0D0  F0B7         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 22424  000F8C  C0D1  F0B8         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 22425  000F90  0E0D               	movlw	13
 22426  000F92  D005               	goto	u23220
 22427  000F94                     u23225:
 22428  000F94  90D8               	bcf	status,0,c
 22429  000F96  33B8               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22430  000F98  33B7               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22431  000F9A  33B6               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22432  000F9C  33B5               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 22433  000F9E                     u23220:
 22434  000F9E  2EE8               	decfsz	wreg,f,c
 22435  000FA0  D7F9               	goto	u23225
 22436  000FA2  C0B5  F092         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 22437  000FA6  C0B6  F093         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 22438  000FAA  C0B7  F094         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 22439  000FAE  C0B8  F095         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 22440  000FB2  0E7D               	movlw	125
 22441  000FB4  6F96               	movwf	___lmul@multiplicand& (0+255),b
 22442  000FB6  0E00               	movlw	0
 22443  000FB8  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22444  000FBA  0E00               	movlw	0
 22445  000FBC  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22446  000FBE  0E00               	movlw	0
 22447  000FC0  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22448  000FC2  ECAD  F048         	call	___lmul	;wreg free
 22449  000FC6  D01C               	goto	L25
 22450  000FC8                     l20740:
 22451                           
 22452                           ; BSR set to: 0
 22453  000FC8  C0CE  F092         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 22454  000FCC  C0CF  F093         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 22455  000FD0  C0D0  F094         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 22456  000FD4  C0D1  F095         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 22457  000FD8  0E7D               	movlw	125
 22458  000FDA  6F96               	movwf	___lmul@multiplicand& (0+255),b
 22459  000FDC  0E00               	movlw	0
 22460  000FDE  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22461  000FE0  0E00               	movlw	0
 22462  000FE2  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22463  000FE4  0E00               	movlw	0
 22464  000FE6  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22465  000FE8  ECAD  F048         	call	___lmul	;wreg free
 22466  000FEC  0E0D               	movlw	13
 22467  000FEE  D006               	goto	u23230
 22468  000FF0                     u23235:
 22469  000FF0  0100               	movlb	0	; () banked
 22470  000FF2  90D8               	bcf	status,0,c
 22471  000FF4  3395               	rrcf	(?___lmul+3)& (0+255),f,b
 22472  000FF6  3394               	rrcf	(?___lmul+2)& (0+255),f,b
 22473  000FF8  3393               	rrcf	(?___lmul+1)& (0+255),f,b
 22474  000FFA  3392               	rrcf	?___lmul& (0+255),f,b
 22475  000FFC                     u23230:
 22476  000FFC  2EE8               	decfsz	wreg,f,c
 22477  000FFE  D7F8               	goto	u23235
 22478  001000                     L25:
 22479  001000  C092  F0BD         	movff	?___lmul,_LORAWAN_TxDone$1673
 22480  001004  C093  F0BE         	movff	?___lmul+1,_LORAWAN_TxDone$1673+1
 22481  001008  C094  F0BF         	movff	?___lmul+2,_LORAWAN_TxDone$1673+2
 22482  00100C  C095  F0C0         	movff	?___lmul+3,_LORAWAN_TxDone$1673+3
 22483  001010  0100               	movlb	0	; () banked
 22484  001012  51BD               	movf	_LORAWAN_TxDone$1673& (0+255),w,b
 22485  001014  0102               	movlb	2	; () banked
 22486  001016  5DCD               	subwf	(_loRa+200)& (0+255),w,b
 22487  001018  0100               	movlb	0	; () banked
 22488  00101A  6FC6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 22489  00101C  51BE               	movf	(_LORAWAN_TxDone$1673+1)& (0+255),w,b
 22490  00101E  0102               	movlb	2	; () banked
 22491  001020  59CE               	subwfb	(_loRa+201)& (0+255),w,b
 22492  001022  0100               	movlb	0	; () banked
 22493  001024  6FC7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 22494  001026  51BF               	movf	(_LORAWAN_TxDone$1673+2)& (0+255),w,b
 22495  001028  0102               	movlb	2	; () banked
 22496  00102A  59CF               	subwfb	(_loRa+202)& (0+255),w,b
 22497  00102C  0100               	movlb	0	; () banked
 22498  00102E  6FC8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 22499  001030  51C0               	movf	(_LORAWAN_TxDone$1673+3)& (0+255),w,b
 22500  001032  0102               	movlb	2	; () banked
 22501  001034  59D0               	subwfb	(_loRa+203)& (0+255),w,b
 22502  001036  0100               	movlb	0	; () banked
 22503  001038  6FC9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 22504  00103A                     l20744:
 22505                           
 22506                           ;lorawan_eu.c: 410: };lorawan_eu.c: 412: for (i=0; i < 16; i++)
 22507  00103A  0E00               	movlw	0
 22508  00103C  0100               	movlb	0	; () banked
 22509  00103E  6FD6               	movwf	LORAWAN_TxDone@i& (0+255),b
 22510  001040                     l20750:
 22511                           
 22512                           ; BSR set to: 0
 22513                           ;lorawan_eu.c: 413: {;lorawan_eu.c: 414: if ((Channels[i].status == 1) && ( Channels[i].
      +                          channelTimer != 0 ))
 22514  001040  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22515  001042  0D0E               	mullw	14
 22516  001044  0E18               	movlw	low (_Channels+4)
 22517  001046  24F3               	addwf	prodl,w,c
 22518  001048  6ED9               	movwf	fsr2l,c
 22519  00104A  0E04               	movlw	high (_Channels+4)
 22520  00104C  20F4               	addwfc	prodh,w,c
 22521  00104E  6EDA               	movwf	fsr2h,c
 22522  001050  04DE               	decf	postinc2,w,c
 22523  001052  A4D8               	btfss	status,2,c
 22524  001054  D092               	goto	l20768
 22525                           
 22526                           ; BSR set to: 0
 22527  001056  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22528  001058  0D0E               	mullw	14
 22529  00105A  0E1C               	movlw	low (_Channels+8)
 22530  00105C  24F3               	addwf	prodl,w,c
 22531  00105E  6ED9               	movwf	fsr2l,c
 22532  001060  0E04               	movlw	high (_Channels+8)
 22533  001062  20F4               	addwfc	prodh,w,c
 22534  001064  6EDA               	movwf	fsr2h,c
 22535  001066  50DE               	movf	postinc2,w,c
 22536  001068  10DE               	iorwf	postinc2,w,c
 22537  00106A  10DE               	iorwf	postinc2,w,c
 22538  00106C  10DE               	iorwf	postinc2,w,c
 22539  00106E  B4D8               	btfsc	status,2,c
 22540  001070  D084               	goto	l20768
 22541                           
 22542                           ; BSR set to: 0
 22543                           ;lorawan_eu.c: 415: {;lorawan_eu.c: 416: if( i != loRa.lastUsedChannelIndex )
 22544  001072  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22545  001074  0102               	movlb	2	; () banked
 22546  001076  19DF               	xorwf	(_loRa+218)& (0+255),w,b
 22547  001078  B4D8               	btfsc	status,2,c
 22548  00107A  D04C               	goto	l1049
 22549                           
 22550                           ; BSR set to: 2
 22551                           ;lorawan_eu.c: 417: {;lorawan_eu.c: 418: if (Channels[i].channelTimer > delta)
 22552  00107C  0100               	movlb	0	; () banked
 22553  00107E  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22554  001080  0D0E               	mullw	14
 22555  001082  0E1C               	movlw	low (_Channels+8)
 22556  001084  24F3               	addwf	prodl,w,c
 22557  001086  6ED9               	movwf	fsr2l,c
 22558  001088  0E04               	movlw	high (_Channels+8)
 22559  00108A  20F4               	addwfc	prodh,w,c
 22560  00108C  6EDA               	movwf	fsr2h,c
 22561  00108E  50DE               	movf	postinc2,w,c
 22562  001090  5DC6               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 22563  001092  50DE               	movf	postinc2,w,c
 22564  001094  59C7               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22565  001096  50DE               	movf	postinc2,w,c
 22566  001098  59C8               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22567  00109A  50DE               	movf	postinc2,w,c
 22568  00109C  59C9               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22569  00109E  B0D8               	btfsc	status,0,c
 22570  0010A0  D02D               	goto	l20760
 22571                           
 22572                           ; BSR set to: 0
 22573                           ;lorawan_eu.c: 419: {;lorawan_eu.c: 420: Channels[i].channelTimer = Channels[i].channelT
      +                          imer - delta;
 22574  0010A2  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22575  0010A4  0D0E               	mullw	14
 22576  0010A6  0E1C               	movlw	low (_Channels+8)
 22577  0010A8  24F3               	addwf	prodl,w,c
 22578  0010AA  6ED9               	movwf	fsr2l,c
 22579  0010AC  0E04               	movlw	high (_Channels+8)
 22580  0010AE  20F4               	addwfc	prodh,w,c
 22581  0010B0  6EDA               	movwf	fsr2h,c
 22582  0010B2  CFDE F0B5          	movff	postinc2,??_LORAWAN_TxDone
 22583  0010B6  CFDE F0B6          	movff	postinc2,??_LORAWAN_TxDone+1
 22584  0010BA  CFDE F0B7          	movff	postinc2,??_LORAWAN_TxDone+2
 22585  0010BE  CFDE F0B8          	movff	postinc2,??_LORAWAN_TxDone+3
 22586  0010C2  51C6               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22587  0010C4  5DB5               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22588  0010C6  6FB9               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22589  0010C8  51C7               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22590  0010CA  59B6               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22591  0010CC  6FBA               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22592  0010CE  51C8               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22593  0010D0  59B7               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22594  0010D2  6FBB               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22595  0010D4  51C9               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22596  0010D6  59B8               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22597  0010D8  6FBC               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22598  0010DA  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22599  0010DC  0D0E               	mullw	14
 22600  0010DE  0E1C               	movlw	low (_Channels+8)
 22601  0010E0  24F3               	addwf	prodl,w,c
 22602  0010E2  6ED9               	movwf	fsr2l,c
 22603  0010E4  0E04               	movlw	high (_Channels+8)
 22604  0010E6  20F4               	addwfc	prodh,w,c
 22605  0010E8  6EDA               	movwf	fsr2h,c
 22606  0010EA  C0B9  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22607  0010EE  C0BA  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22608  0010F2  C0BB  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22609  0010F6  C0BC  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22610                           
 22611                           ;lorawan_eu.c: 421: }
 22612  0010FA  D00C               	goto	l1049
 22613  0010FC                     l20760:
 22614                           
 22615                           ; BSR set to: 0
 22616                           ;lorawan_eu.c: 422: else;lorawan_eu.c: 423: {;lorawan_eu.c: 424: Channels[i].channelTime
      +                          r = 0;
 22617  0010FC  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22618  0010FE  0D0E               	mullw	14
 22619  001100  0E1C               	movlw	low (_Channels+8)
 22620  001102  24F3               	addwf	prodl,w,c
 22621  001104  6ED9               	movwf	fsr2l,c
 22622  001106  0E04               	movlw	high (_Channels+8)
 22623  001108  20F4               	addwfc	prodh,w,c
 22624  00110A  6EDA               	movwf	fsr2h,c
 22625  00110C  6ADE               	clrf	postinc2,c
 22626  00110E  6ADE               	clrf	postinc2,c
 22627  001110  6ADE               	clrf	postinc2,c
 22628  001112  6ADD               	clrf	postdec2,c
 22629  001114                     l1049:
 22630                           
 22631                           ;lorawan_eu.c: 425: };lorawan_eu.c: 426: };lorawan_eu.c: 427: if ( (Channels[i].channelT
      +                          imer <= minim) && (Channels[i].channelTimer !=0) )
 22632  001114  0100               	movlb	0	; () banked
 22633  001116  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22634  001118  0D0E               	mullw	14
 22635  00111A  0E1C               	movlw	low (_Channels+8)
 22636  00111C  24F3               	addwf	prodl,w,c
 22637  00111E  6ED9               	movwf	fsr2l,c
 22638  001120  0E04               	movlw	high (_Channels+8)
 22639  001122  20F4               	addwfc	prodh,w,c
 22640  001124  6EDA               	movwf	fsr2h,c
 22641  001126  50DE               	movf	postinc2,w,c
 22642  001128  5DD2               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22643  00112A  50DE               	movf	postinc2,w,c
 22644  00112C  59D3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22645  00112E  50DE               	movf	postinc2,w,c
 22646  001130  59D4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22647  001132  50DE               	movf	postinc2,w,c
 22648  001134  59D5               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22649  001136  A0D8               	btfss	status,0,c
 22650  001138  D020               	goto	l20768
 22651                           
 22652                           ; BSR set to: 0
 22653  00113A  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22654  00113C  0D0E               	mullw	14
 22655  00113E  0E1C               	movlw	low (_Channels+8)
 22656  001140  24F3               	addwf	prodl,w,c
 22657  001142  6ED9               	movwf	fsr2l,c
 22658  001144  0E04               	movlw	high (_Channels+8)
 22659  001146  20F4               	addwfc	prodh,w,c
 22660  001148  6EDA               	movwf	fsr2h,c
 22661  00114A  50DE               	movf	postinc2,w,c
 22662  00114C  10DE               	iorwf	postinc2,w,c
 22663  00114E  10DE               	iorwf	postinc2,w,c
 22664  001150  10DE               	iorwf	postinc2,w,c
 22665  001152  B4D8               	btfsc	status,2,c
 22666  001154  D012               	goto	l20768
 22667                           
 22668                           ; BSR set to: 0
 22669                           ;lorawan_eu.c: 428: {;lorawan_eu.c: 429: minim = Channels[i].channelTimer;
 22670  001156  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22671  001158  0D0E               	mullw	14
 22672  00115A  0E1C               	movlw	low (_Channels+8)
 22673  00115C  24F3               	addwf	prodl,w,c
 22674  00115E  6ED9               	movwf	fsr2l,c
 22675  001160  0E04               	movlw	high (_Channels+8)
 22676  001162  20F4               	addwfc	prodh,w,c
 22677  001164  6EDA               	movwf	fsr2h,c
 22678  001166  CFDE F0D2          	movff	postinc2,LORAWAN_TxDone@minim
 22679  00116A  CFDE F0D3          	movff	postinc2,LORAWAN_TxDone@minim+1
 22680  00116E  CFDE F0D4          	movff	postinc2,LORAWAN_TxDone@minim+2
 22681  001172  CFDE F0D5          	movff	postinc2,LORAWAN_TxDone@minim+3
 22682                           
 22683                           ; BSR set to: 0
 22684                           ;lorawan_eu.c: 430: found = 1;
 22685  001176  0E01               	movlw	1
 22686  001178  6FC5               	movwf	LORAWAN_TxDone@found& (0+255),b
 22687  00117A                     l20768:
 22688                           
 22689                           ; BSR set to: 0
 22690  00117A  2BD6               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22691                           
 22692                           ; BSR set to: 0
 22693  00117C  0E0F               	movlw	15
 22694  00117E  65D6               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22695  001180  D75F               	goto	l20750
 22696                           
 22697                           ; BSR set to: 0
 22698                           ;lorawan_eu.c: 431: };lorawan_eu.c: 432: };lorawan_eu.c: 433: };lorawan_eu.c: 434: if (f
      +                          ound == 1)
 22699  001182  05C5               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22700  001184  A4D8               	btfss	status,2,c
 22701  001186  D067               	goto	l20786
 22702                           
 22703                           ; BSR set to: 0
 22704                           ;lorawan_eu.c: 435: {;lorawan_eu.c: 436: loRa.lastTimerValue = minim;
 22705  001188  C0D2  F2CD         	movff	LORAWAN_TxDone@minim,_loRa+200
 22706  00118C  C0D3  F2CE         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22707  001190  C0D4  F2CF         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22708  001194  C0D5  F2D0         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22709                           
 22710                           ; BSR set to: 0
 22711                           ;lorawan_eu.c: 437: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22712  001198  51D5               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22713  00119A  E107               	bnz	u23320
 22714  00119C  29D2               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22715  00119E  0EFF               	movlw	255
 22716  0011A0  59D3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22717  0011A2  0E0F               	movlw	15
 22718  0011A4  59D4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22719  0011A6  A0D8               	btfss	status,0,c
 22720  0011A8  D01C               	goto	l20780
 22721  0011AA                     u23320:
 22722                           
 22723                           ; BSR set to: 0
 22724  0011AA  C0D2  F060         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22725  0011AE  C0D3  F061         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22726  0011B2  C0D4  F062         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22727  0011B6  C0D5  F063         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22728  0011BA  0E7D               	movlw	125
 22729  0011BC  6F64               	movwf	___lldiv@divisor& (0+255),b
 22730  0011BE  0E00               	movlw	0
 22731  0011C0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22732  0011C2  0E00               	movlw	0
 22733  0011C4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22734  0011C6  0E00               	movlw	0
 22735  0011C8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22736  0011CA  EC6D  F042         	call	___lldiv	;wreg free
 22737  0011CE  0E0C               	movlw	12
 22738  0011D0                     u23335:
 22739  0011D0  90D8               	bcf	status,0,c
 22740  0011D2  0100               	movlb	0	; () banked
 22741  0011D4  3760               	rlcf	?___lldiv& (0+255),f,b
 22742  0011D6  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 22743  0011D8  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 22744  0011DA  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 22745  0011DC  2EE8               	decfsz	wreg,f,c
 22746  0011DE  D7F8               	goto	u23335
 22747  0011E0  D022               	goto	L26
 22748  0011E2                     l20780:
 22749                           
 22750                           ; BSR set to: 0
 22751  0011E2  C0D2  F0B5         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22752  0011E6  C0D3  F0B6         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22753  0011EA  C0D4  F0B7         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22754  0011EE  C0D5  F0B8         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22755  0011F2  0E0C               	movlw	12
 22756  0011F4                     u23345:
 22757  0011F4  90D8               	bcf	status,0,c
 22758  0011F6  37B5               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22759  0011F8  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22760  0011FA  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22761  0011FC  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22762  0011FE  2EE8               	decfsz	wreg,f,c
 22763  001200  D7F9               	goto	u23345
 22764  001202  C0B5  F060         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22765  001206  C0B6  F061         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22766  00120A  C0B7  F062         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22767  00120E  C0B8  F063         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22768  001212  0E7D               	movlw	125
 22769  001214  6F64               	movwf	___lldiv@divisor& (0+255),b
 22770  001216  0E00               	movlw	0
 22771  001218  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22772  00121A  0E00               	movlw	0
 22773  00121C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22774  00121E  0E00               	movlw	0
 22775  001220  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22776  001222  EC6D  F042         	call	___lldiv	;wreg free
 22777  001226                     L26:
 22778  001226  C060  F0C1         	movff	?___lldiv,_LORAWAN_TxDone$1674
 22779  00122A  C061  F0C2         	movff	?___lldiv+1,_LORAWAN_TxDone$1674+1
 22780  00122E  C062  F0C3         	movff	?___lldiv+2,_LORAWAN_TxDone$1674+2
 22781  001232  C063  F0C4         	movff	?___lldiv+3,_LORAWAN_TxDone$1674+3
 22782  001236  C0C1  F06D         	movff	_LORAWAN_TxDone$1674,SwTimerSetTimeout@timeout
 22783  00123A  C0C2  F06E         	movff	_LORAWAN_TxDone$1674+1,SwTimerSetTimeout@timeout+1
 22784  00123E  C0C3  F06F         	movff	_LORAWAN_TxDone$1674+2,SwTimerSetTimeout@timeout+2
 22785  001242  C0C4  F070         	movff	_LORAWAN_TxDone$1674+3,SwTimerSetTimeout@timeout+3
 22786  001246  0102               	movlb	2	; () banked
 22787  001248  51EE               	movf	(_loRa+233)& (0+255),w,b
 22788  00124A  EC2D  F04C         	call	_SwTimerSetTimeout
 22789                           
 22790                           ;lorawan_eu.c: 438: SwTimerStart (loRa.dutyCycleTimerId);
 22791  00124E  0102               	movlb	2	; () banked
 22792  001250  51EE               	movf	(_loRa+233)& (0+255),w,b
 22793  001252  EC4A  F040         	call	_SwTimerStart
 22794  001256                     l20786:
 22795                           
 22796                           ;lorawan_eu.c: 439: };lorawan_eu.c: 440: if (CLASS_C == loRa.deviceClass)
 22797  001256  0E02               	movlw	2
 22798  001258  0102               	movlb	2	; () banked
 22799  00125A  1917               	xorwf	(_loRa+18)& (0+255),w,b
 22800  00125C  A4D8               	btfss	status,2,c
 22801  00125E  0012               	return	
 22802                           
 22803                           ; BSR set to: 2
 22804                           ;lorawan_eu.c: 441: {;lorawan_eu.c: 442: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22805  001260  5107               	movf	(_loRa+2)& (0+255),w,b
 22806  001262  0BF0               	andlw	-16
 22807  001264  0908               	iorlw	8
 22808  001266  6F07               	movwf	(_loRa+2)& (0+255),b
 22809                           
 22810                           ; BSR set to: 2
 22811                           ;lorawan_eu.c: 443: LORAWAN_EnterContinuousReceive();
 22812  001268  ECAC  F043         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 22813  00126C  0012               	return	
 22814  00126E                     l20792:
 22815                           
 22816                           ; BSR set to: 2
 22817                           ;lorawan_eu.c: 446: else;lorawan_eu.c: 447: {;lorawan_eu.c: 448: if ((RADIO_GetStatus() 
      +                          & (1 << (4))) != 0)
 22818  00126E  ECF0  F053         	call	_RADIO_GetStatus	;wreg free
 22819  001272  0100               	movlb	0	; () banked
 22820  001274  6FB5               	movwf	??_LORAWAN_TxDone& (0+255),b
 22821  001276  A9B5               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22822  001278  D014               	goto	l20796
 22823                           
 22824                           ; BSR set to: 0
 22825                           ;lorawan_eu.c: 449: {;lorawan_eu.c: 451: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22826  00127A  0E00               	movlw	0
 22827  00127C  6F60               	movwf	RxData@pData& (0+255),b
 22828  00127E  0E00               	movlw	0
 22829  001280  6F61               	movwf	(RxData@pData+1)& (0+255),b
 22830  001282  0E00               	movlw	0
 22831  001284  6F62               	movwf	RxData@dataLength& (0+255),b
 22832  001286  0E02               	movlw	2
 22833  001288  6F63               	movwf	RxData@status& (0+255),b
 22834  00128A  D801               	call	u23378
 22835  00128C  0012               	return	
 22836  00128E                     u23378:
 22837  00128E  0005               	push	
 22838  001290  6EFA               	movwf	pclath,c
 22839  001292  0101               	movlb	1	; () banked
 22840  001294  510E               	movf	_rxPayload& (0+255),w,b
 22841  001296  6EFD               	movwf	tosl,c
 22842  001298  510F               	movf	(_rxPayload+1)& (0+255),w,b
 22843  00129A  6EFE               	movwf	tosh,c
 22844  00129C  6AFF               	clrf	tosu,c
 22845  00129E  50FA               	movf	pclath,w,c
 22846  0012A0  0012               	return		;indir
 22847  0012A2                     l20796:
 22848                           
 22849                           ; BSR set to: 0
 22850                           ;lorawan_eu.c: 453: else;lorawan_eu.c: 454: {;lorawan_eu.c: 456: if ( rxPayload.RxAppDat
      +                          a != (0) )
 22851  0012A2  0101               	movlb	1	; () banked
 22852  0012A4  510E               	movf	_rxPayload& (0+255),w,b
 22853  0012A6  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 22854  0012A8  B4D8               	btfsc	status,2,c
 22855  0012AA  0012               	return	
 22856                           
 22857                           ; BSR set to: 1
 22858                           ;lorawan_eu.c: 457: {;lorawan_eu.c: 458: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22859  0012AC  0E00               	movlw	0
 22860  0012AE  0100               	movlb	0	; () banked
 22861  0012B0  6F60               	movwf	RxData@pData& (0+255),b
 22862  0012B2  0E00               	movlw	0
 22863  0012B4  6F61               	movwf	(RxData@pData+1)& (0+255),b
 22864  0012B6  0E00               	movlw	0
 22865  0012B8  6F62               	movwf	RxData@dataLength& (0+255),b
 22866  0012BA  0E03               	movlw	3
 22867  0012BC  6F63               	movwf	RxData@status& (0+255),b
 22868  0012BE  D801               	call	u23398
 22869  0012C0  0012               	return	
 22870  0012C2                     u23398:
 22871  0012C2  0005               	push	
 22872  0012C4  6EFA               	movwf	pclath,c
 22873  0012C6  0101               	movlb	1	; () banked
 22874  0012C8  510E               	movf	_rxPayload& (0+255),w,b
 22875  0012CA  6EFD               	movwf	tosl,c
 22876  0012CC  510F               	movf	(_rxPayload+1)& (0+255),w,b
 22877  0012CE  6EFE               	movwf	tosh,c
 22878  0012D0  6AFF               	clrf	tosu,c
 22879  0012D2  50FA               	movf	pclath,w,c
 22880  0012D4  0012               	return		;indir
 22881  0012D6                     __end_of_LORAWAN_TxDone:
 22882                           	opt callstack 0
 22883                           
 22884 ;; *************** function _SwTimerReadValue *****************
 22885 ;; Defined at:
 22886 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22887 ;; Parameters:    Size  Location     Type
 22888 ;;  timerId         1    wreg     unsigned char 
 22889 ;; Auto vars:     Size  Location     Type
 22890 ;;  timerId         1   49[BANK0 ] unsigned char 
 22891 ;;  ticksCount      4   45[BANK0 ] unsigned long 
 22892 ;; Return value:  Size  Location     Type
 22893 ;;                  4   41[BANK0 ] unsigned long 
 22894 ;; Registers used:
 22895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22896 ;; Tracked objects:
 22897 ;;		On entry : 0/0
 22898 ;;		On exit  : 0/0
 22899 ;;		Unchanged: 0/0
 22900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22901 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22902 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22904 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22905 ;;Total ram usage:        9 bytes
 22906 ;; Hardware stack levels used:    1
 22907 ;; Hardware stack levels required when called:   10
 22908 ;; This function calls:
 22909 ;;		_SwTimersInterrupt
 22910 ;; This function is called by:
 22911 ;;		_RADIO_TxDone
 22912 ;;		_RADIO_FSKPacketSent
 22913 ;;		_LORAWAN_TxDone
 22914 ;;		_LORAWAN_Pause
 22915 ;; This function uses a non-reentrant model
 22916 ;;
 22917                           
 22918                           	psect	text103
 22919  009922                     __ptext103:
 22920                           	opt callstack 0
 22921  009922                     _SwTimerReadValue:
 22922                           	opt callstack 14
 22923                           
 22924                           ;incstack = 0
 22925                           ;SwTimerReadValue@timerId stored from wreg
 22926  009922  0100               	movlb	0	; () banked
 22927  009924  6F91               	movwf	SwTimerReadValue@timerId& (0+255),b
 22928                           
 22929                           ;sw_timer.c: 195: uint32_t ticksCount;;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22930  009926  9EF2               	bcf	4082,7,c	;volatile
 22931                           
 22932                           ;sw_timer.c: 200: SwTimersInterrupt();
 22933  009928  ECDC  F034         	call	_SwTimersInterrupt	;wreg free
 22934                           
 22935                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22936  00992C  0100               	movlb	0	; () banked
 22937  00992E  5191               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22938  009930  0D08               	mullw	8
 22939  009932  0E00               	movlw	low _swTimers
 22940  009934  24F3               	addwf	prodl,w,c
 22941  009936  6ED9               	movwf	fsr2l,c
 22942  009938  0E03               	movlw	high _swTimers
 22943  00993A  20F4               	addwfc	prodh,w,c
 22944  00993C  6EDA               	movwf	fsr2h,c
 22945  00993E  CFDE F08D          	movff	postinc2,SwTimerReadValue@ticksCount
 22946  009942  CFDE F08E          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22947  009946  CFDE F08F          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22948  00994A  CFDE F090          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22949                           
 22950                           ; BSR set to: 0
 22951                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22952  00994E  8EF2               	bsf	4082,7,c	;volatile
 22953                           
 22954                           ; BSR set to: 0
 22955                           ;sw_timer.c: 204: return ticksCount;
 22956  009950  C08D  F089         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22957  009954  C08E  F08A         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22958  009958  C08F  F08B         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22959  00995C  C090  F08C         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22960                           
 22961                           ; BSR set to: 0
 22962  009960  0012               	return		;funcret
 22963  009962                     __end_of_SwTimerReadValue:
 22964                           	opt callstack 0
 22965                           
 22966 ;; *************** function _SwTimerIsRunning *****************
 22967 ;; Defined at:
 22968 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22969 ;; Parameters:    Size  Location     Type
 22970 ;;  timerId         1    wreg     unsigned char 
 22971 ;; Auto vars:     Size  Location     Type
 22972 ;;  timerId         1    0[BANK0 ] unsigned char 
 22973 ;;  isRunning       1    1[BANK0 ] unsigned char 
 22974 ;; Return value:  Size  Location     Type
 22975 ;;                  1    wreg      unsigned char 
 22976 ;; Registers used:
 22977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22978 ;; Tracked objects:
 22979 ;;		On entry : 0/0
 22980 ;;		On exit  : 0/0
 22981 ;;		Unchanged: 0/0
 22982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22984 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22986 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22987 ;;Total ram usage:        2 bytes
 22988 ;; Hardware stack levels used:    1
 22989 ;; Hardware stack levels required when called:    7
 22990 ;; This function calls:
 22991 ;;		Nothing
 22992 ;; This function is called by:
 22993 ;;		_LORAWAN_TxDone
 22994 ;; This function uses a non-reentrant model
 22995 ;;
 22996                           
 22997                           	psect	text104
 22998  00A1CC                     __ptext104:
 22999                           	opt callstack 0
 23000  00A1CC                     _SwTimerIsRunning:
 23001                           	opt callstack 17
 23002                           
 23003                           ; BSR set to: 0
 23004                           ;incstack = 0
 23005                           ;SwTimerIsRunning@timerId stored from wreg
 23006  00A1CC  0100               	movlb	0	; () banked
 23007  00A1CE  6F60               	movwf	SwTimerIsRunning@timerId& (0+255),b
 23008                           
 23009                           ;sw_timer.c: 209: uint8_t isRunning;;sw_timer.c: 211: (INTCONbits.GIE = 0);
 23010  00A1D0  9EF2               	bcf	4082,7,c	;volatile
 23011                           
 23012                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 23013  00A1D2  0100               	movlb	0	; () banked
 23014  00A1D4  5160               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 23015  00A1D6  0D08               	mullw	8
 23016  00A1D8  0E04               	movlw	low (_swTimers+4)
 23017  00A1DA  24F3               	addwf	prodl,w,c
 23018  00A1DC  6ED9               	movwf	fsr2l,c
 23019  00A1DE  0E03               	movlw	high (_swTimers+4)
 23020  00A1E0  20F4               	addwfc	prodh,w,c
 23021  00A1E2  6EDA               	movwf	fsr2h,c
 23022  00A1E4  50DF               	movf	indf2,w,c
 23023  00A1E6  6F61               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 23024                           
 23025                           ; BSR set to: 0
 23026                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 23027  00A1E8  8EF2               	bsf	4082,7,c	;volatile
 23028                           
 23029                           ; BSR set to: 0
 23030                           ;sw_timer.c: 215: return isRunning;
 23031  00A1EA  5161               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 23032                           
 23033                           ; BSR set to: 0
 23034  00A1EC  0012               	return		;funcret
 23035  00A1EE                     __end_of_SwTimerIsRunning:
 23036                           	opt callstack 0
 23037                           
 23038 ;; *************** function _RADIO_GetStatus *****************
 23039 ;; Defined at:
 23040 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23041 ;; Parameters:    Size  Location     Type
 23042 ;;		None
 23043 ;; Auto vars:     Size  Location     Type
 23044 ;;		None
 23045 ;; Return value:  Size  Location     Type
 23046 ;;                  1    wreg      unsigned char 
 23047 ;; Registers used:
 23048 ;;		wreg, status,2
 23049 ;; Tracked objects:
 23050 ;;		On entry : 0/0
 23051 ;;		On exit  : 0/0
 23052 ;;		Unchanged: 0/0
 23053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23058 ;;Total ram usage:        0 bytes
 23059 ;; Hardware stack levels used:    1
 23060 ;; Hardware stack levels required when called:    7
 23061 ;; This function calls:
 23062 ;;		Nothing
 23063 ;; This function is called by:
 23064 ;;		_LORAWAN_TxDone
 23065 ;;		_LORAWAN_ReceiveWindow2Callback
 23066 ;;		_LORAWAN_RxDone
 23067 ;; This function uses a non-reentrant model
 23068 ;;
 23069                           
 23070                           	psect	text105
 23071  00A7E0                     __ptext105:
 23072                           	opt callstack 0
 23073  00A7E0                     _RADIO_GetStatus:
 23074                           	opt callstack 17
 23075                           
 23076                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 23077                           
 23078                           ; BSR set to: 0
 23079                           ;incstack = 0
 23080  00A7E0  0101               	movlb	1	; () banked
 23081  00A7E2  514C               	movf	(_RadioConfiguration+35)& (0+255),w,b
 23082                           
 23083                           ; BSR set to: 1
 23084  00A7E4  0012               	return		;funcret
 23085  00A7E6                     __end_of_RADIO_GetStatus:
 23086                           	opt callstack 0
 23087                           
 23088 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 23089 ;; Defined at:
 23090 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23091 ;; Parameters:    Size  Location     Type
 23092 ;;		None
 23093 ;; Auto vars:     Size  Location     Type
 23094 ;;		None
 23095 ;; Return value:  Size  Location     Type
 23096 ;;                  1    wreg      void 
 23097 ;; Registers used:
 23098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23099 ;; Tracked objects:
 23100 ;;		On entry : 0/0
 23101 ;;		On exit  : 0/0
 23102 ;;		Unchanged: 0/0
 23103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23108 ;;Total ram usage:        0 bytes
 23109 ;; Hardware stack levels used:    1
 23110 ;; Hardware stack levels required when called:   13
 23111 ;; This function calls:
 23112 ;;		_ConfigureRadioRx
 23113 ;;		_RADIO_ReceiveStart
 23114 ;;		_RADIO_ReceiveStop
 23115 ;;		_RADIO_ReleaseData
 23116 ;;		_ResetParametersForConfirmedTransmission
 23117 ;;		_ResetParametersForUnconfirmedTransmission
 23118 ;;		_RxData
 23119 ;; This function is called by:
 23120 ;;		_LORAWAN_TxDone
 23121 ;;		_LORAWAN_ReceiveWindow2Callback
 23122 ;;		_LORAWAN_RxDone
 23123 ;;		_SetReceptionNotOkState
 23124 ;; This function uses a non-reentrant model
 23125 ;;
 23126                           
 23127                           	psect	text106
 23128  008758                     __ptext106:
 23129                           	opt callstack 0
 23130  008758                     _LORAWAN_EnterContinuousReceive:
 23131                           	opt callstack 11
 23132                           
 23133                           ;lorawan.c: 917: RADIO_ReceiveStop();
 23134                           
 23135                           ; BSR set to: 1
 23136                           ;incstack = 0
 23137  008758  EC5B  F051         	call	_RADIO_ReceiveStop	;wreg free
 23138                           
 23139                           ;lorawan.c: 918: RADIO_ReleaseData();
 23140  00875C  ECF3  F053         	call	_RADIO_ReleaseData	;wreg free
 23141                           
 23142                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 23143  008760  C21D  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 23144  008764  C21E  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 23145  008768  C21F  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 23146  00876C  C220  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 23147  008770  0102               	movlb	2	; () banked
 23148  008772  5121               	movf	(_loRa+28)& (0+255),w,b
 23149  008774  EC0C  F050         	call	_ConfigureRadioRx
 23150                           
 23151                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 23152  008778  0E00               	movlw	0
 23153  00877A  0100               	movlb	0	; () banked
 23154  00877C  6FAA               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 23155  00877E  0E00               	movlw	0
 23156  008780  6FA9               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 23157  008782  EC6A  F01E         	call	_RADIO_ReceiveStart	;wreg free
 23158  008786  0100               	movlb	0	; () banked
 23159  008788  51A9               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 23160  00878A  11AA               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 23161  00878C  B4D8               	btfsc	status,2,c
 23162  00878E  0012               	return	
 23163                           
 23164                           ; BSR set to: 0
 23165                           ;lorawan.c: 923: {;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 23166  008790  EC33  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23167                           
 23168                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 23169  008794  EC03  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 23170                           
 23171                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 23172  008798  0EF0               	movlw	-16
 23173  00879A  0102               	movlb	2	; () banked
 23174  00879C  1707               	andwf	(_loRa+2)& (0+255),f,b
 23175                           
 23176                           ; BSR set to: 2
 23177                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 23178  00879E  0101               	movlb	1	; () banked
 23179  0087A0  510E               	movf	_rxPayload& (0+255),w,b
 23180  0087A2  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 23181  0087A4  B4D8               	btfsc	status,2,c
 23182  0087A6  0012               	return	
 23183                           
 23184                           ; BSR set to: 1
 23185                           ;lorawan.c: 928: {;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 23186  0087A8  0E00               	movlw	0
 23187  0087AA  0100               	movlb	0	; () banked
 23188  0087AC  6F60               	movwf	RxData@pData& (0+255),b
 23189  0087AE  0E00               	movlw	0
 23190  0087B0  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23191  0087B2  0E00               	movlw	0
 23192  0087B4  6F62               	movwf	RxData@dataLength& (0+255),b
 23193  0087B6  0E00               	movlw	0
 23194  0087B8  6F63               	movwf	RxData@status& (0+255),b
 23195  0087BA  D801               	call	u21068
 23196  0087BC  0012               	return	
 23197  0087BE                     u21068:
 23198  0087BE  0005               	push	
 23199  0087C0  6EFA               	movwf	pclath,c
 23200  0087C2  0101               	movlb	1	; () banked
 23201  0087C4  510E               	movf	_rxPayload& (0+255),w,b
 23202  0087C6  6EFD               	movwf	tosl,c
 23203  0087C8  510F               	movf	(_rxPayload+1)& (0+255),w,b
 23204  0087CA  6EFE               	movwf	tosh,c
 23205  0087CC  6AFF               	clrf	tosu,c
 23206  0087CE  50FA               	movf	pclath,w,c
 23207  0087D0  0012               	return		;indir
 23208  0087D2                     __end_of_LORAWAN_EnterContinuousReceive:
 23209                           	opt callstack 0
 23210                           
 23211 ;; *************** function _RxData *****************
 23212 ;; Defined at:
 23213 ;;		line 73 in file "main.c"
 23214 ;; Parameters:    Size  Location     Type
 23215 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 23216 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 23217 ;;  dataLength      1    2[BANK0 ] unsigned char 
 23218 ;;  status          1    3[BANK0 ] enum E6285
 23219 ;; Auto vars:     Size  Location     Type
 23220 ;;		None
 23221 ;; Return value:  Size  Location     Type
 23222 ;;                  1    wreg      void 
 23223 ;; Registers used:
 23224 ;;		None
 23225 ;; Tracked objects:
 23226 ;;		On entry : 0/0
 23227 ;;		On exit  : 0/0
 23228 ;;		Unchanged: 0/0
 23229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23230 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23233 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23234 ;;Total ram usage:        4 bytes
 23235 ;; Hardware stack levels used:    1
 23236 ;; Hardware stack levels required when called:    7
 23237 ;; This function calls:
 23238 ;;		Nothing
 23239 ;; This function is called by:
 23240 ;;		_main
 23241 ;;		_LORAWAN_EnterContinuousReceive
 23242 ;;		_LORAWAN_ReceiveWindow2Callback
 23243 ;;		_SetReceptionNotOkState
 23244 ;;		_LORAWAN_RxDone
 23245 ;;		_LORAWAN_RxTimeout
 23246 ;;		_LORAWAN_TxDone
 23247 ;;		_AckRetransmissionCallback
 23248 ;;		_UnconfirmedTransmissionCallback
 23249 ;; This function uses a non-reentrant model
 23250 ;;
 23251                           
 23252                           	psect	text107
 23253  00A82E                     __ptext107:
 23254                           	opt callstack 0
 23255  00A82E                     _RxData:
 23256                           	opt callstack 18
 23257                           
 23258                           ;incstack = 0
 23259  00A82E  0012               	return		;funcret
 23260  00A830                     __end_of_RxData:
 23261                           	opt callstack 0
 23262                           
 23263 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 23264 ;; Defined at:
 23265 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23266 ;; Parameters:    Size  Location     Type
 23267 ;;		None
 23268 ;; Auto vars:     Size  Location     Type
 23269 ;;		None
 23270 ;; Return value:  Size  Location     Type
 23271 ;;                  1    wreg      void 
 23272 ;; Registers used:
 23273 ;;		wreg, status,2
 23274 ;; Tracked objects:
 23275 ;;		On entry : 0/0
 23276 ;;		On exit  : 0/0
 23277 ;;		Unchanged: 0/0
 23278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23283 ;;Total ram usage:        0 bytes
 23284 ;; Hardware stack levels used:    1
 23285 ;; Hardware stack levels required when called:    7
 23286 ;; This function calls:
 23287 ;;		Nothing
 23288 ;; This function is called by:
 23289 ;;		_LORAWAN_RxTimeout
 23290 ;;		_LORAWAN_ReceiveWindow2Callback
 23291 ;;		_LORAWAN_EnterContinuousReceive
 23292 ;;		_UnconfirmedTransmissionCallback
 23293 ;; This function uses a non-reentrant model
 23294 ;;
 23295                           
 23296                           	psect	text108
 23297  00A606                     __ptext108:
 23298                           	opt callstack 0
 23299  00A606                     _ResetParametersForUnconfirmedTransmission:
 23300                           	opt callstack 18
 23301                           
 23302                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 23303                           
 23304                           ;incstack = 0
 23305  00A606  0EF0               	movlw	-16
 23306  00A608  0102               	movlb	2	; () banked
 23307  00A60A  1707               	andwf	(_loRa+2)& (0+255),f,b
 23308                           
 23309                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 23310  00A60C  0E01               	movlw	1
 23311  00A60E  6FDD               	movwf	(_loRa+216)& (0+255),b
 23312                           
 23313                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 23314  00A610  0E00               	movlw	0
 23315  00A612  6FAC               	movwf	(_loRa+167)& (0+255),b
 23316                           
 23317                           ; BSR set to: 2
 23318  00A614  0012               	return		;funcret
 23319  00A616                     __end_of_ResetParametersForUnconfirmedTransmission:
 23320                           	opt callstack 0
 23321                           
 23322 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 23323 ;; Defined at:
 23324 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23325 ;; Parameters:    Size  Location     Type
 23326 ;;		None
 23327 ;; Auto vars:     Size  Location     Type
 23328 ;;		None
 23329 ;; Return value:  Size  Location     Type
 23330 ;;                  1    wreg      void 
 23331 ;; Registers used:
 23332 ;;		wreg, status,2
 23333 ;; Tracked objects:
 23334 ;;		On entry : 0/0
 23335 ;;		On exit  : 0/0
 23336 ;;		Unchanged: 0/0
 23337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23342 ;;Total ram usage:        0 bytes
 23343 ;; Hardware stack levels used:    1
 23344 ;; Hardware stack levels required when called:    7
 23345 ;; This function calls:
 23346 ;;		Nothing
 23347 ;; This function is called by:
 23348 ;;		_LORAWAN_RxTimeout
 23349 ;;		_LORAWAN_ReceiveWindow2Callback
 23350 ;;		_LORAWAN_EnterContinuousReceive
 23351 ;;		_AckRetransmissionCallback
 23352 ;; This function uses a non-reentrant model
 23353 ;;
 23354                           
 23355                           	psect	text109
 23356  00A666                     __ptext109:
 23357                           	opt callstack 0
 23358  00A666                     _ResetParametersForConfirmedTransmission:
 23359                           	opt callstack 16
 23360                           
 23361                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23362                           
 23363                           ; BSR set to: 2
 23364                           ;incstack = 0
 23365  00A666  0EF0               	movlw	-16
 23366  00A668  0102               	movlb	2	; () banked
 23367  00A66A  1707               	andwf	(_loRa+2)& (0+255),f,b
 23368                           
 23369                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23370  00A66C  0E01               	movlw	1
 23371  00A66E  6FDE               	movwf	(_loRa+217)& (0+255),b
 23372                           
 23373                           ; BSR set to: 2
 23374                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23375  00A670  9105               	bcf	_loRa& (0+255),0,b
 23376                           
 23377                           ; BSR set to: 2
 23378  00A672  0012               	return		;funcret
 23379  00A674                     __end_of_ResetParametersForConfirmedTransmission:
 23380                           	opt callstack 0
 23381                           
 23382 ;; *************** function _RADIO_ReleaseData *****************
 23383 ;; Defined at:
 23384 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23385 ;; Parameters:    Size  Location     Type
 23386 ;;		None
 23387 ;; Auto vars:     Size  Location     Type
 23388 ;;		None
 23389 ;; Return value:  Size  Location     Type
 23390 ;;                  1    wreg      void 
 23391 ;; Registers used:
 23392 ;;		status,2, status,0
 23393 ;; Tracked objects:
 23394 ;;		On entry : 0/0
 23395 ;;		On exit  : 0/0
 23396 ;;		Unchanged: 0/0
 23397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23402 ;;Total ram usage:        0 bytes
 23403 ;; Hardware stack levels used:    1
 23404 ;; Hardware stack levels required when called:    7
 23405 ;; This function calls:
 23406 ;;		Nothing
 23407 ;; This function is called by:
 23408 ;;		_LORAWAN_ReceiveWindow1Callback
 23409 ;;		_LORAWAN_ReceiveWindow2Callback
 23410 ;;		_LORAWAN_EnterContinuousReceive
 23411 ;;		_LORAWAN_RxDone
 23412 ;; This function uses a non-reentrant model
 23413 ;;
 23414                           
 23415                           	psect	text110
 23416  00A7E6                     __ptext110:
 23417                           	opt callstack 0
 23418  00A7E6                     _RADIO_ReleaseData:
 23419                           	opt callstack 16
 23420                           
 23421                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23422                           
 23423                           ; BSR set to: 2
 23424                           ;incstack = 0
 23425  00A7E6  0101               	movlb	1	; () banked
 23426  00A7E8  954C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23427                           
 23428                           ; BSR set to: 1
 23429  00A7EA  0012               	return		;funcret
 23430  00A7EC                     __end_of_RADIO_ReleaseData:
 23431                           	opt callstack 0
 23432                           
 23433 ;; *************** function _RADIO_ReceiveStop *****************
 23434 ;; Defined at:
 23435 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23436 ;; Parameters:    Size  Location     Type
 23437 ;;		None
 23438 ;; Auto vars:     Size  Location     Type
 23439 ;;		None
 23440 ;; Return value:  Size  Location     Type
 23441 ;;                  1    wreg      void 
 23442 ;; Registers used:
 23443 ;;		wreg, status,2, status,0, cstack
 23444 ;; Tracked objects:
 23445 ;;		On entry : 0/0
 23446 ;;		On exit  : 0/0
 23447 ;;		Unchanged: 0/0
 23448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23453 ;;Total ram usage:        0 bytes
 23454 ;; Hardware stack levels used:    1
 23455 ;; Hardware stack levels required when called:   11
 23456 ;; This function calls:
 23457 ;;		_RADIO_WriteMode
 23458 ;; This function is called by:
 23459 ;;		_LORAWAN_Send
 23460 ;;		_LORAWAN_ReceiveWindow1Callback
 23461 ;;		_LORAWAN_ReceiveWindow2Callback
 23462 ;;		_LORAWAN_EnterContinuousReceive
 23463 ;;		_LORAWAN_SetClass
 23464 ;; This function uses a non-reentrant model
 23465 ;;
 23466                           
 23467                           	psect	text111
 23468  00A2B6                     __ptext111:
 23469                           	opt callstack 0
 23470  00A2B6                     _RADIO_ReceiveStop:
 23471                           	opt callstack 16
 23472                           
 23473                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23474                           
 23475                           ; BSR set to: 1
 23476                           ;incstack = 0
 23477  00A2B6  0E02               	movlw	2
 23478  00A2B8  0101               	movlb	1	; () banked
 23479  00A2BA  194C               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23480  00A2BC  A4D8               	btfss	status,2,c
 23481  00A2BE  0012               	return	
 23482                           
 23483                           ; BSR set to: 1
 23484                           ;radio_driver_SX1276.c: 954: {;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, R
      +                          adioConfiguration.modulation, 0);
 23485  00A2C0  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23486  00A2C4  0E00               	movlw	0
 23487  00A2C6  0100               	movlb	0	; () banked
 23488  00A2C8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23489  00A2CA  0E00               	movlw	0
 23490  00A2CC  ECD9  F035         	call	_RADIO_WriteMode
 23491                           
 23492                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23493  00A2D0  0101               	movlb	1	; () banked
 23494  00A2D2  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23495                           
 23496                           ; BSR set to: 1
 23497  00A2D4  0012               	return		;funcret
 23498  00A2D6                     __end_of_RADIO_ReceiveStop:
 23499                           	opt callstack 0
 23500                           
 23501 ;; *************** function _RADIO_ReceiveStart *****************
 23502 ;; Defined at:
 23503 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23504 ;; Parameters:    Size  Location     Type
 23505 ;;  rxWindowSize    2   73[BANK0 ] unsigned int 
 23506 ;; Auto vars:     Size  Location     Type
 23507 ;;		None
 23508 ;; Return value:  Size  Location     Type
 23509 ;;                  2   73[BANK0 ] enum E5907
 23510 ;; Registers used:
 23511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23512 ;; Tracked objects:
 23513 ;;		On entry : 0/0
 23514 ;;		On exit  : 0/0
 23515 ;;		Unchanged: 0/0
 23516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23517 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23518 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23519 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23520 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23521 ;;Total ram usage:       10 bytes
 23522 ;; Hardware stack levels used:    1
 23523 ;; Hardware stack levels required when called:   12
 23524 ;; This function calls:
 23525 ;;		_RADIO_RegisterWrite
 23526 ;;		_RADIO_WriteConfiguration
 23527 ;;		_RADIO_WriteMode
 23528 ;;		_SwTimerSetTimeout
 23529 ;;		_SwTimerStart
 23530 ;;		___lldiv
 23531 ;; This function is called by:
 23532 ;;		_LORAWAN_ReceiveWindow1Callback
 23533 ;;		_LORAWAN_ReceiveWindow2Callback
 23534 ;;		_LORAWAN_EnterContinuousReceive
 23535 ;; This function uses a non-reentrant model
 23536 ;;
 23537                           
 23538                           	psect	text112
 23539  003CD4                     __ptext112:
 23540                           	opt callstack 0
 23541  003CD4                     _RADIO_ReceiveStart:
 23542                           	opt callstack 11
 23543                           
 23544                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23545                           
 23546                           ; BSR set to: 1
 23547                           ;incstack = 0
 23548  003CD4  0101               	movlb	1	; () banked
 23549  003CD6  A54C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23550  003CD8  D006               	goto	l18802
 23551                           
 23552                           ; BSR set to: 1
 23553                           ;radio_driver_SX1276.c: 878: {;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23554  003CDA  0E80               	movlw	128
 23555  003CDC  0100               	movlb	0	; () banked
 23556  003CDE  6FAA               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23557  003CE0  0E03               	movlw	3
 23558  003CE2  6FA9               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23559  003CE4  0012               	return	
 23560  003CE6                     l18802:
 23561                           
 23562                           ; BSR set to: 1
 23563                           ;radio_driver_SX1276.c: 880: };radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags
      +                           & ((1 << (0)) | (1 << (1)))) != 0)
 23564  003CE6  C14C  F0AB         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23565  003CEA  0E03               	movlw	3
 23566  003CEC  0100               	movlb	0	; () banked
 23567  003CEE  17AB               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23568  003CF0  B4D8               	btfsc	status,2,c
 23569  003CF2  D005               	goto	l18808
 23570                           
 23571                           ; BSR set to: 0
 23572                           ;radio_driver_SX1276.c: 883: {;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23573  003CF4  0E80               	movlw	128
 23574  003CF6  6FAA               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23575  003CF8  0E04               	movlw	4
 23576  003CFA  6FA9               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23577  003CFC  0012               	return	
 23578  003CFE                     l18808:
 23579                           
 23580                           ; BSR set to: 0
 23581                           ;radio_driver_SX1276.c: 885: };radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23582  003CFE  51A9               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23583  003D00  11AA               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23584  003D02  A4D8               	btfss	status,2,c
 23585  003D04  D007               	goto	l18812
 23586                           
 23587                           ; BSR set to: 0
 23588                           ;radio_driver_SX1276.c: 888: {;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23589  003D06  0E00               	movlw	0
 23590  003D08  6F9F               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23591  003D0A  0E04               	movlw	4
 23592  003D0C  6F9E               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23593  003D0E  EC6B  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23594                           
 23595                           ;radio_driver_SX1276.c: 890: }
 23596  003D12  D006               	goto	l18814
 23597  003D14                     l18812:
 23598                           
 23599                           ; BSR set to: 0
 23600                           ;radio_driver_SX1276.c: 891: else;radio_driver_SX1276.c: 892: {;radio_driver_SX1276.c: 8
      +                          93: RADIO_WriteConfiguration(rxWindowSize);
 23601  003D14  C0A9  F09E         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23602  003D18  C0AA  F09F         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23603  003D1C  EC6B  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23604  003D20                     l18814:
 23605                           
 23606                           ;radio_driver_SX1276.c: 894: };radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioC
      +                          onfiguration.modulation)
 23607  003D20  0101               	movlb	1	; () banked
 23608  003D22  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23609  003D24  A4D8               	btfss	status,2,c
 23610  003D26  D013               	goto	l18818
 23611                           
 23612                           ; BSR set to: 1
 23613                           ;radio_driver_SX1276.c: 897: {;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x0
      +                          1);
 23614  003D28  0E01               	movlw	1
 23615  003D2A  0100               	movlb	0	; () banked
 23616  003D2C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23617  003D2E  0E22               	movlw	34
 23618  003D30  EC6B  F051         	call	_RADIO_RegisterWrite
 23619                           
 23620                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23621  003D34  0E00               	movlw	0
 23622  003D36  0100               	movlb	0	; () banked
 23623  003D38  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23624  003D3A  0E40               	movlw	64
 23625  003D3C  EC6B  F051         	call	_RADIO_RegisterWrite
 23626                           
 23627                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23628  003D40  0E00               	movlw	0
 23629  003D42  0100               	movlb	0	; () banked
 23630  003D44  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23631  003D46  0E41               	movlw	65
 23632  003D48  EC6B  F051         	call	_RADIO_RegisterWrite
 23633                           
 23634                           ;radio_driver_SX1276.c: 908: }
 23635  003D4C  D016               	goto	l18820
 23636  003D4E                     l18818:
 23637                           
 23638                           ; BSR set to: 1
 23639                           ;radio_driver_SX1276.c: 909: else;radio_driver_SX1276.c: 910: {;radio_driver_SX1276.c: 9
      +                          11: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23640  003D4E  C15D  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23641  003D52  0E12               	movlw	18
 23642  003D54  EC6B  F051         	call	_RADIO_RegisterWrite
 23643                           
 23644                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23645  003D58  C15E  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23646  003D5C  0E13               	movlw	19
 23647  003D5E  EC6B  F051         	call	_RADIO_RegisterWrite
 23648                           
 23649                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23650  003D62  0E00               	movlw	0
 23651  003D64  0100               	movlb	0	; () banked
 23652  003D66  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23653  003D68  0E40               	movlw	64
 23654  003D6A  EC6B  F051         	call	_RADIO_RegisterWrite
 23655                           
 23656                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23657  003D6E  0E00               	movlw	0
 23658  003D70  0100               	movlb	0	; () banked
 23659  003D72  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23660  003D74  0E41               	movlw	65
 23661  003D76  EC6B  F051         	call	_RADIO_RegisterWrite
 23662  003D7A                     l18820:
 23663                           
 23664                           ;radio_driver_SX1276.c: 917: };radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (
      +                          1 << (1));
 23665  003D7A  0101               	movlb	1	; () banked
 23666  003D7C  834C               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23667                           
 23668                           ; BSR set to: 1
 23669                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23670  003D7E  0EE7               	movlw	231
 23671  003D80  174C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23672                           
 23673                           ; BSR set to: 1
 23674                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23675  003D82  0100               	movlb	0	; () banked
 23676  003D84  51A9               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23677  003D86  11AA               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23678  003D88  A4D8               	btfss	status,2,c
 23679  003D8A  D008               	goto	l18828
 23680                           
 23681                           ; BSR set to: 0
 23682                           ;radio_driver_SX1276.c: 925: {;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, 
      +                          RadioConfiguration.modulation, 0);
 23683  003D8C  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23684  003D90  0E00               	movlw	0
 23685  003D92  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23686  003D94  0E05               	movlw	5
 23687  003D96  ECD9  F035         	call	_RADIO_WriteMode
 23688                           
 23689                           ;radio_driver_SX1276.c: 927: }
 23690  003D9A  D046               	goto	l18838
 23691  003D9C                     l18828:
 23692                           
 23693                           ; BSR set to: 0
 23694                           ;radio_driver_SX1276.c: 928: else;radio_driver_SX1276.c: 929: {;radio_driver_SX1276.c: 9
      +                          30: if (MODULATION_LORA == RadioConfiguration.modulation)
 23695  003D9C  0101               	movlb	1	; () banked
 23696  003D9E  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23697  003DA0  A4D8               	btfss	status,2,c
 23698  003DA2  D009               	goto	l18832
 23699                           
 23700                           ; BSR set to: 1
 23701                           ;radio_driver_SX1276.c: 931: {;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE
      +                          , MODULATION_LORA, 0);
 23702  003DA4  0E01               	movlw	1
 23703  003DA6  0100               	movlb	0	; () banked
 23704  003DA8  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23705  003DAA  0E00               	movlw	0
 23706  003DAC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23707  003DAE  0E06               	movlw	6
 23708  003DB0  ECD9  F035         	call	_RADIO_WriteMode
 23709                           
 23710                           ;radio_driver_SX1276.c: 933: }
 23711  003DB4  D039               	goto	l18838
 23712  003DB6                     l18832:
 23713                           
 23714                           ; BSR set to: 1
 23715                           ;radio_driver_SX1276.c: 934: else;radio_driver_SX1276.c: 935: {;radio_driver_SX1276.c: 9
      +                          36: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23716  003DB6  0E00               	movlw	0
 23717  003DB8  0100               	movlb	0	; () banked
 23718  003DBA  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23719  003DBC  0E00               	movlw	0
 23720  003DBE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23721  003DC0  0E05               	movlw	5
 23722  003DC2  ECD9  F035         	call	_RADIO_WriteMode
 23723                           
 23724                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23725  003DC6  0100               	movlb	0	; () banked
 23726  003DC8  51A9               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23727  003DCA  6FAB               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23728  003DCC  51AA               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23729  003DCE  6FAC               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23730  003DD0  6BAD               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23731  003DD2  6BAE               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23732  003DD4  0E0C               	movlw	12
 23733  003DD6                     u20055:
 23734  003DD6  90D8               	bcf	status,0,c
 23735  003DD8  37AB               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23736  003DDA  37AC               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23737  003DDC  37AD               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23738  003DDE  37AE               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23739  003DE0  2EE8               	decfsz	wreg,f,c
 23740  003DE2  D7F9               	goto	u20055
 23741  003DE4  C0AB  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23742  003DE8  C0AC  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23743  003DEC  C0AD  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23744  003DF0  C0AE  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23745  003DF4  0E7D               	movlw	125
 23746  003DF6  6F64               	movwf	___lldiv@divisor& (0+255),b
 23747  003DF8  0E00               	movlw	0
 23748  003DFA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23749  003DFC  0E00               	movlw	0
 23750  003DFE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23751  003E00  0E00               	movlw	0
 23752  003E02  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23753  003E04  EC6D  F042         	call	___lldiv	;wreg free
 23754  003E08  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23755  003E0C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23756  003E10  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23757  003E14  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23758  003E18  0101               	movlb	1	; () banked
 23759  003E1A  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23760  003E1C  EC2D  F04C         	call	_SwTimerSetTimeout
 23761                           
 23762                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23763  003E20  0101               	movlb	1	; () banked
 23764  003E22  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23765  003E24  EC4A  F040         	call	_SwTimerStart
 23766  003E28                     l18838:
 23767                           
 23768                           ;radio_driver_SX1276.c: 939: };radio_driver_SX1276.c: 940: };radio_driver_SX1276.c: 942:
      +                           if (0 != RadioConfiguration.watchdogTimerTimeout)
 23769  003E28  0101               	movlb	1	; () banked
 23770  003E2A  5153               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23771  003E2C  1154               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23772  003E2E  1155               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23773  003E30  1156               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23774  003E32  B4D8               	btfsc	status,2,c
 23775  003E34  D061               	goto	l18850
 23776                           
 23777                           ; BSR set to: 1
 23778                           ;radio_driver_SX1276.c: 943: {;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfig
      +                          uration.watchdogTimerId, ((RadioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (
      +                          ((uint32_t)(RadioConfiguration.watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t
      +                          )(RadioConfiguration.watchdogTimerTimeout)) /
 23779  003E36  5156               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23780  003E38  E107               	bnz	u20070
 23781  003E3A  2953               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23782  003E3C  0EFF               	movlw	255
 23783  003E3E  5954               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23784  003E40  0E0F               	movlw	15
 23785  003E42  5955               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23786  003E44  A0D8               	btfss	status,0,c
 23787  003E46  D01D               	goto	l18844
 23788  003E48                     u20070:
 23789                           
 23790                           ; BSR set to: 1
 23791  003E48  C153  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 23792  003E4C  C154  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23793  003E50  C155  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23794  003E54  C156  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23795  003E58  0E7D               	movlw	125
 23796  003E5A  0100               	movlb	0	; () banked
 23797  003E5C  6F64               	movwf	___lldiv@divisor& (0+255),b
 23798  003E5E  0E00               	movlw	0
 23799  003E60  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23800  003E62  0E00               	movlw	0
 23801  003E64  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23802  003E66  0E00               	movlw	0
 23803  003E68  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23804  003E6A  EC6D  F042         	call	___lldiv	;wreg free
 23805  003E6E  0E0C               	movlw	12
 23806  003E70                     u20085:
 23807  003E70  90D8               	bcf	status,0,c
 23808  003E72  0100               	movlb	0	; () banked
 23809  003E74  3760               	rlcf	?___lldiv& (0+255),f,b
 23810  003E76  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 23811  003E78  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 23812  003E7A  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 23813  003E7C  2EE8               	decfsz	wreg,f,c
 23814  003E7E  D7F8               	goto	u20085
 23815  003E80  D023               	goto	L27
 23816  003E82                     l18844:
 23817                           
 23818                           ; BSR set to: 1
 23819  003E82  C153  F0AB         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23820  003E86  C154  F0AC         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23821  003E8A  C155  F0AD         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23822  003E8E  C156  F0AE         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23823  003E92  0E0C               	movlw	12
 23824  003E94                     u20095:
 23825  003E94  90D8               	bcf	status,0,c
 23826  003E96  0100               	movlb	0	; () banked
 23827  003E98  37AB               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23828  003E9A  37AC               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23829  003E9C  37AD               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23830  003E9E  37AE               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23831  003EA0  2EE8               	decfsz	wreg,f,c
 23832  003EA2  D7F8               	goto	u20095
 23833  003EA4  C0AB  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23834  003EA8  C0AC  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23835  003EAC  C0AD  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23836  003EB0  C0AE  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23837  003EB4  0E7D               	movlw	125
 23838  003EB6  6F64               	movwf	___lldiv@divisor& (0+255),b
 23839  003EB8  0E00               	movlw	0
 23840  003EBA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23841  003EBC  0E00               	movlw	0
 23842  003EBE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23843  003EC0  0E00               	movlw	0
 23844  003EC2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23845  003EC4  EC6D  F042         	call	___lldiv	;wreg free
 23846  003EC8                     L27:
 23847  003EC8  C060  F0AF         	movff	?___lldiv,_RADIO_ReceiveStart$784
 23848  003ECC  C061  F0B0         	movff	?___lldiv+1,_RADIO_ReceiveStart$784+1
 23849  003ED0  C062  F0B1         	movff	?___lldiv+2,_RADIO_ReceiveStart$784+2
 23850  003ED4  C063  F0B2         	movff	?___lldiv+3,_RADIO_ReceiveStart$784+3
 23851  003ED8  C0AF  F06D         	movff	_RADIO_ReceiveStart$784,SwTimerSetTimeout@timeout
 23852  003EDC  C0B0  F06E         	movff	_RADIO_ReceiveStart$784+1,SwTimerSetTimeout@timeout+1
 23853  003EE0  C0B1  F06F         	movff	_RADIO_ReceiveStart$784+2,SwTimerSetTimeout@timeout+2
 23854  003EE4  C0B2  F070         	movff	_RADIO_ReceiveStart$784+3,SwTimerSetTimeout@timeout+3
 23855  003EE8  0101               	movlb	1	; () banked
 23856  003EEA  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23857  003EEC  EC2D  F04C         	call	_SwTimerSetTimeout
 23858                           
 23859                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23860  003EF0  0101               	movlb	1	; () banked
 23861  003EF2  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23862  003EF4  EC4A  F040         	call	_SwTimerStart
 23863  003EF8                     l18850:
 23864                           
 23865                           ;radio_driver_SX1276.c: 946: };radio_driver_SX1276.c: 947: return ERR_NONE;
 23866  003EF8  0E00               	movlw	0
 23867  003EFA  0100               	movlb	0	; () banked
 23868  003EFC  6FAA               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23869  003EFE  0E00               	movlw	0
 23870  003F00  6FA9               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23871                           
 23872                           ; BSR set to: 0
 23873  003F02  0012               	return		;funcret
 23874  003F04                     __end_of_RADIO_ReceiveStart:
 23875                           	opt callstack 0
 23876                           
 23877 ;; *************** function _ConfigureRadioRx *****************
 23878 ;; Defined at:
 23879 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23880 ;; Parameters:    Size  Location     Type
 23881 ;;  dataRate        1    wreg     unsigned char 
 23882 ;;  freq            4   19[BANK0 ] unsigned long 
 23883 ;; Auto vars:     Size  Location     Type
 23884 ;;  dataRate        1   23[BANK0 ] unsigned char 
 23885 ;; Return value:  Size  Location     Type
 23886 ;;                  1    wreg      void 
 23887 ;; Registers used:
 23888 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23889 ;; Tracked objects:
 23890 ;;		On entry : 0/0
 23891 ;;		On exit  : 0/0
 23892 ;;		Unchanged: 0/0
 23893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23895 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23897 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23898 ;;Total ram usage:        5 bytes
 23899 ;; Hardware stack levels used:    1
 23900 ;; Hardware stack levels required when called:   10
 23901 ;; This function calls:
 23902 ;;		_ConfigureRadio
 23903 ;;		_RADIO_SetCRC
 23904 ;;		_RADIO_SetIQInverted
 23905 ;; This function is called by:
 23906 ;;		_LORAWAN_ReceiveWindow1Callback
 23907 ;;		_LORAWAN_ReceiveWindow2Callback
 23908 ;;		_LORAWAN_EnterContinuousReceive
 23909 ;; This function uses a non-reentrant model
 23910 ;;
 23911                           
 23912                           	psect	text113
 23913  00A018                     __ptext113:
 23914                           	opt callstack 0
 23915  00A018                     _ConfigureRadioRx:
 23916                           	opt callstack 13
 23917                           
 23918                           ; BSR set to: 0
 23919                           ;incstack = 0
 23920                           ;ConfigureRadioRx@dataRate stored from wreg
 23921  00A018  0100               	movlb	0	; () banked
 23922  00A01A  6F77               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 23923                           
 23924                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 23925  00A01C  C073  F06E         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 23926  00A020  C074  F06F         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 23927  00A024  C075  F070         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 23928  00A028  C076  F071         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 23929  00A02C  0100               	movlb	0	; () banked
 23930  00A02E  5177               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 23931  00A030  ECB1  F03F         	call	_ConfigureRadio
 23932                           
 23933                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 23934  00A034  0E00               	movlw	0
 23935  00A036  ECB5  F053         	call	_RADIO_SetCRC
 23936                           
 23937                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 23938  00A03A  0E01               	movlw	1
 23939  00A03C  ECB0  F053         	call	_RADIO_SetIQInverted
 23940  00A040  0012               	return		;funcret
 23941  00A042                     __end_of_ConfigureRadioRx:
 23942                           	opt callstack 0
 23943                           
 23944 ;; *************** function _INTERRUPT_GetDioStatus *****************
 23945 ;; Defined at:
 23946 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 23947 ;; Parameters:    Size  Location     Type
 23948 ;;		None
 23949 ;; Auto vars:     Size  Location     Type
 23950 ;;  a               1    0[BANK0 ] unsigned char 
 23951 ;; Return value:  Size  Location     Type
 23952 ;;                  1    wreg      unsigned char 
 23953 ;; Registers used:
 23954 ;;		wreg, status,2
 23955 ;; Tracked objects:
 23956 ;;		On entry : 0/0
 23957 ;;		On exit  : 0/0
 23958 ;;		Unchanged: 0/0
 23959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23963 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23964 ;;Total ram usage:        1 bytes
 23965 ;; Hardware stack levels used:    1
 23966 ;; Hardware stack levels required when called:    7
 23967 ;; This function calls:
 23968 ;;		Nothing
 23969 ;; This function is called by:
 23970 ;;		_LORAWAN_Mainloop
 23971 ;; This function uses a non-reentrant model
 23972 ;;
 23973                           
 23974                           	psect	text114
 23975  00A5BE                     __ptext114:
 23976                           	opt callstack 0
 23977  00A5BE                     _INTERRUPT_GetDioStatus:
 23978                           	opt callstack 20
 23979                           
 23980                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;;interrupt_manager_lora_addons.c: 51: (I
      +                          NTCONbits.GIE = 0);
 23981                           
 23982                           ;incstack = 0
 23983  00A5BE  9EF2               	bcf	4082,7,c	;volatile
 23984                           
 23985                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 23986  00A5C0  C045  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 23987                           
 23988                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 23989  00A5C4  0E00               	movlw	0
 23990  00A5C6  6E45               	movwf	_dioStatus,c	;volatile
 23991                           
 23992                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 23993  00A5C8  8EF2               	bsf	4082,7,c	;volatile
 23994                           
 23995                           ;interrupt_manager_lora_addons.c: 55: return a;
 23996  00A5CA  0100               	movlb	0	; () banked
 23997  00A5CC  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 23998                           
 23999                           ; BSR set to: 0
 24000  00A5CE  0012               	return		;funcret
 24001  00A5D0                     __end_of_INTERRUPT_GetDioStatus:
 24002                           	opt callstack 0
 24003                           
 24004 ;; *************** function _lightSensAcquisition *****************
 24005 ;; Defined at:
 24006 ;;		line 304 in file "acuadori.c"
 24007 ;; Parameters:    Size  Location     Type
 24008 ;;		None
 24009 ;; Auto vars:     Size  Location     Type
 24010 ;;		None
 24011 ;; Return value:  Size  Location     Type
 24012 ;;                  1    wreg      void 
 24013 ;; Registers used:
 24014 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 24015 ;; Tracked objects:
 24016 ;;		On entry : 0/0
 24017 ;;		On exit  : 0/0
 24018 ;;		Unchanged: 0/0
 24019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24024 ;;Total ram usage:        0 bytes
 24025 ;; Hardware stack levels used:    1
 24026 ;; Hardware stack levels required when called:   11
 24027 ;; This function calls:
 24028 ;;		_GPIODigitalWrite
 24029 ;;		_acquisitionData
 24030 ;;		_adaptString
 24031 ;;		_rn2483_delaysec
 24032 ;; This function is called by:
 24033 ;;		_acuadoriApp
 24034 ;; This function uses a non-reentrant model
 24035 ;;
 24036                           
 24037                           	psect	text115
 24038  00953E                     __ptext115:
 24039                           	opt callstack 0
 24040  00953E                     _lightSensAcquisition:
 24041                           	opt callstack 18
 24042                           
 24043                           ;acuadori.c: 307: GPIODigitalWrite(0xFF, 1);
 24044                           
 24045                           ; BSR set to: 0
 24046                           ;incstack = 0
 24047  00953E  0E01               	movlw	1
 24048  009540  0100               	movlb	0	; () banked
 24049  009542  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 24050  009544  0EFF               	movlw	255
 24051  009546  ECD5  F036         	call	_GPIODigitalWrite
 24052                           
 24053                           ;acuadori.c: 309: rn2483_delaysec(1);
 24054  00954A  0E00               	movlw	0
 24055  00954C  0100               	movlb	0	; () banked
 24056  00954E  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
 24057  009550  0E01               	movlw	1
 24058  009552  6F60               	movwf	rn2483_delaysec@length& (0+255),b
 24059  009554  ECB1  F04C         	call	_rn2483_delaysec	;wreg free
 24060                           
 24061                           ;acuadori.c: 310: acquisitionData(0x03, stringValue);
 24062  009558  0E6F               	movlw	low _stringValue
 24063  00955A  0100               	movlb	0	; () banked
 24064  00955C  6FAB               	movwf	acquisitionData@string& (0+255),b
 24065  00955E  0E01               	movlw	high _stringValue
 24066  009560  6FAC               	movwf	(acquisitionData@string+1)& (0+255),b
 24067  009562  0E03               	movlw	3
 24068  009564  ECF7  F050         	call	_acquisitionData
 24069                           
 24070                           ;acuadori.c: 311: stringValueLength = adaptString(stringValue, 5);
 24071  009568  0E6F               	movlw	low _stringValue
 24072  00956A  0100               	movlb	0	; () banked
 24073  00956C  6F60               	movwf	adaptString@string& (0+255),b
 24074  00956E  0E01               	movlw	high _stringValue
 24075  009570  6F61               	movwf	(adaptString@string+1)& (0+255),b
 24076  009572  0E05               	movlw	5
 24077  009574  6F62               	movwf	adaptString@length& (0+255),b
 24078  009576  EC62  F044         	call	_adaptString	;wreg free
 24079  00957A  0101               	movlb	1	; () banked
 24080  00957C  6FF9               	movwf	_stringValueLength& (0+255),b
 24081                           
 24082                           ; BSR set to: 1
 24083                           ;acuadori.c: 315: GPIODigitalWrite(0xFF, 0);
 24084  00957E  0E00               	movlw	0
 24085  009580  0100               	movlb	0	; () banked
 24086  009582  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 24087  009584  0EFF               	movlw	255
 24088  009586  ECD5  F036         	call	_GPIODigitalWrite
 24089  00958A  0012               	return		;funcret
 24090  00958C                     __end_of_lightSensAcquisition:
 24091                           	opt callstack 0
 24092                           
 24093 ;; *************** function _rn2483_delaysec *****************
 24094 ;; Defined at:
 24095 ;;		line 24 in file "rn2483APP.c"
 24096 ;; Parameters:    Size  Location     Type
 24097 ;;  length          2    0[BANK0 ] unsigned int 
 24098 ;; Auto vars:     Size  Location     Type
 24099 ;;  counter         2    3[BANK0 ] unsigned int 
 24100 ;; Return value:  Size  Location     Type
 24101 ;;                  1    wreg      void 
 24102 ;; Registers used:
 24103 ;;		wreg, status,2, status,0
 24104 ;; Tracked objects:
 24105 ;;		On entry : 0/0
 24106 ;;		On exit  : 0/0
 24107 ;;		Unchanged: 0/0
 24108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24112 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24113 ;;Total ram usage:        5 bytes
 24114 ;; Hardware stack levels used:    1
 24115 ;; Hardware stack levels required when called:    7
 24116 ;; This function calls:
 24117 ;;		Nothing
 24118 ;; This function is called by:
 24119 ;;		_acuadoriApp
 24120 ;;		_lightSensAcquisition
 24121 ;; This function uses a non-reentrant model
 24122 ;;
 24123                           
 24124                           	psect	text116
 24125  009962                     __ptext116:
 24126                           	opt callstack 0
 24127  009962                     _rn2483_delaysec:
 24128                           	opt callstack 22
 24129                           
 24130                           ;rn2483APP.c: 26: uint16_t counter;;rn2483APP.c: 27: while(length){
 24131                           
 24132                           ;incstack = 0
 24133  009962  D019               	goto	l16036
 24134  009964                     l16024:
 24135                           
 24136                           ; BSR set to: 0
 24137                           ;rn2483APP.c: 28: for(counter = 0; counter < 1000; counter++)
 24138  009964  0E00               	movlw	0
 24139  009966  6F64               	movwf	(rn2483_delaysec@counter+1)& (0+255),b
 24140  009968  0E00               	movlw	0
 24141  00996A  6F63               	movwf	rn2483_delaysec@counter& (0+255),b
 24142  00996C                     l16030:
 24143                           
 24144                           ; BSR set to: 0
 24145                           ;rn2483APP.c: 29: {;rn2483APP.c: 30: _delay((unsigned long)((1)*(16000000/4000.0)));
 24146  00996C  0E06               	movlw	6
 24147  00996E  0100               	movlb	0	; () banked
 24148  009970  6F62               	movwf	??_rn2483_delaysec& (0+255),b
 24149  009972  0E30               	movlw	48
 24150  009974                     u25447:
 24151  009974  2EE8               	decfsz	wreg,f,c
 24152  009976  D7FE               	bra	u25447
 24153  009978  2F62               	decfsz	??_rn2483_delaysec& (0+255),f,b
 24154  00997A  D7FC               	bra	u25447
 24155  00997C  F000               	nop	
 24156  00997E  0100               	movlb	0	; () banked
 24157  009980  4B63               	infsnz	rn2483_delaysec@counter& (0+255),f,b
 24158  009982  2B64               	incf	(rn2483_delaysec@counter+1)& (0+255),f,b
 24159  009984  0EE8               	movlw	232
 24160  009986  5D63               	subwf	rn2483_delaysec@counter& (0+255),w,b
 24161  009988  0E03               	movlw	3
 24162  00998A  5964               	subwfb	(rn2483_delaysec@counter+1)& (0+255),w,b
 24163  00998C  A0D8               	btfss	status,0,c
 24164  00998E  D7EE               	goto	l16030
 24165                           
 24166                           ; BSR set to: 0
 24167                           ;rn2483APP.c: 31: };rn2483APP.c: 32: length--;
 24168  009990  0760               	decf	rn2483_delaysec@length& (0+255),f,b
 24169  009992  A0D8               	btfss	status,0,c
 24170  009994  0761               	decf	(rn2483_delaysec@length+1)& (0+255),f,b
 24171  009996                     l16036:
 24172  009996  0100               	movlb	0	; () banked
 24173  009998  5160               	movf	rn2483_delaysec@length& (0+255),w,b
 24174  00999A  1161               	iorwf	(rn2483_delaysec@length+1)& (0+255),w,b
 24175  00999C  B4D8               	btfsc	status,2,c
 24176  00999E  0012               	return	
 24177  0099A0  D7E1               	goto	l16024
 24178  0099A2                     __end_of_rn2483_delaysec:
 24179                           	opt callstack 0
 24180                           
 24181 ;; *************** function _leafSensAcquisition *****************
 24182 ;; Defined at:
 24183 ;;		line 319 in file "acuadori.c"
 24184 ;; Parameters:    Size  Location     Type
 24185 ;;		None
 24186 ;; Auto vars:     Size  Location     Type
 24187 ;;		None
 24188 ;; Return value:  Size  Location     Type
 24189 ;;                  1    wreg      void 
 24190 ;; Registers used:
 24191 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 24192 ;; Tracked objects:
 24193 ;;		On entry : 0/0
 24194 ;;		On exit  : 0/0
 24195 ;;		Unchanged: 0/0
 24196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24201 ;;Total ram usage:        0 bytes
 24202 ;; Hardware stack levels used:    1
 24203 ;; Hardware stack levels required when called:   11
 24204 ;; This function calls:
 24205 ;;		_acquisitionData
 24206 ;;		_adaptString
 24207 ;; This function is called by:
 24208 ;;		_acuadoriApp
 24209 ;; This function uses a non-reentrant model
 24210 ;;
 24211                           
 24212                           	psect	text117
 24213  00A10E                     __ptext117:
 24214                           	opt callstack 0
 24215  00A10E                     _leafSensAcquisition:
 24216                           	opt callstack 18
 24217                           
 24218                           ;acuadori.c: 320: acquisitionData(0x01, stringValue);
 24219                           
 24220                           ; BSR set to: 0
 24221                           ;incstack = 0
 24222  00A10E  0E6F               	movlw	low _stringValue
 24223  00A110  0100               	movlb	0	; () banked
 24224  00A112  6FAB               	movwf	acquisitionData@string& (0+255),b
 24225  00A114  0E01               	movlw	high _stringValue
 24226  00A116  6FAC               	movwf	(acquisitionData@string+1)& (0+255),b
 24227  00A118  0E01               	movlw	1
 24228  00A11A  ECF7  F050         	call	_acquisitionData
 24229                           
 24230                           ;acuadori.c: 321: stringValueLength = adaptString(stringValue, 5);
 24231  00A11E  0E6F               	movlw	low _stringValue
 24232  00A120  0100               	movlb	0	; () banked
 24233  00A122  6F60               	movwf	adaptString@string& (0+255),b
 24234  00A124  0E01               	movlw	high _stringValue
 24235  00A126  6F61               	movwf	(adaptString@string+1)& (0+255),b
 24236  00A128  0E05               	movlw	5
 24237  00A12A  6F62               	movwf	adaptString@length& (0+255),b
 24238  00A12C  EC62  F044         	call	_adaptString	;wreg free
 24239  00A130  0101               	movlb	1	; () banked
 24240  00A132  6FF9               	movwf	_stringValueLength& (0+255),b
 24241                           
 24242                           ; BSR set to: 1
 24243  00A134  0012               	return		;funcret
 24244  00A136                     __end_of_leafSensAcquisition:
 24245                           	opt callstack 0
 24246                           
 24247 ;; *************** function _acquisitionData *****************
 24248 ;; Defined at:
 24249 ;;		line 300 in file "rn2483APP.c"
 24250 ;; Parameters:    Size  Location     Type
 24251 ;;  GPIO            1    wreg     unsigned char 
 24252 ;;  string          2   75[BANK0 ] PTR unsigned char 
 24253 ;;		 -> stringValue(5), 
 24254 ;; Auto vars:     Size  Location     Type
 24255 ;;  GPIO            1   77[BANK0 ] unsigned char 
 24256 ;; Return value:  Size  Location     Type
 24257 ;;                  1    wreg      void 
 24258 ;; Registers used:
 24259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24260 ;; Tracked objects:
 24261 ;;		On entry : 0/0
 24262 ;;		On exit  : 0/0
 24263 ;;		Unchanged: 0/0
 24264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24268 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24269 ;;Total ram usage:        3 bytes
 24270 ;; Hardware stack levels used:    1
 24271 ;; Hardware stack levels required when called:   10
 24272 ;; This function calls:
 24273 ;;		_GPIOAverageRead
 24274 ;;		_uint16ToString
 24275 ;; This function is called by:
 24276 ;;		_lightSensAcquisition
 24277 ;;		_leafSensAcquisition
 24278 ;; This function uses a non-reentrant model
 24279 ;;
 24280                           
 24281                           	psect	text118
 24282  00A1EE                     __ptext118:
 24283                           	opt callstack 0
 24284  00A1EE                     _acquisitionData:
 24285                           	opt callstack 18
 24286                           
 24287                           ; BSR set to: 1
 24288                           ;incstack = 0
 24289                           ;acquisitionData@GPIO stored from wreg
 24290  00A1EE  0100               	movlb	0	; () banked
 24291  00A1F0  6FAD               	movwf	acquisitionData@GPIO& (0+255),b
 24292                           
 24293                           ;rn2483APP.c: 302: uint16ToString(GPIOAverageRead(GPIO), string);
 24294  00A1F2  0100               	movlb	0	; () banked
 24295  00A1F4  51AD               	movf	acquisitionData@GPIO& (0+255),w,b
 24296  00A1F6  ECE9  F043         	call	_GPIOAverageRead
 24297  00A1FA  C06D  F0A5         	movff	?_GPIOAverageRead,uint16ToString@value
 24298  00A1FE  C06E  F0A6         	movff	?_GPIOAverageRead+1,uint16ToString@value+1
 24299  00A202  C0AB  F0A7         	movff	acquisitionData@string,uint16ToString@output
 24300  00A206  C0AC  F0A8         	movff	acquisitionData@string+1,uint16ToString@output+1
 24301  00A20A  EC87  F02C         	call	_uint16ToString	;wreg free
 24302  00A20E  0012               	return		;funcret
 24303  00A210                     __end_of_acquisitionData:
 24304                           	opt callstack 0
 24305                           
 24306 ;; *************** function _GPIOAverageRead *****************
 24307 ;; Defined at:
 24308 ;;		line 287 in file "rn2483APP.c"
 24309 ;; Parameters:    Size  Location     Type
 24310 ;;  GPIO            1    wreg     unsigned char 
 24311 ;; Auto vars:     Size  Location     Type
 24312 ;;  GPIO            1   18[BANK0 ] unsigned char 
 24313 ;;  i               2   19[BANK0 ] unsigned int 
 24314 ;;  finalValue      3   21[BANK0 ] unsigned um
 24315 ;; Return value:  Size  Location     Type
 24316 ;;                  2   13[BANK0 ] unsigned int 
 24317 ;; Registers used:
 24318 ;;		wreg, status,2, status,0, cstack
 24319 ;; Tracked objects:
 24320 ;;		On entry : 0/0
 24321 ;;		On exit  : 0/0
 24322 ;;		Unchanged: 0/0
 24323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24324 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24325 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24326 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24327 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24328 ;;Total ram usage:       11 bytes
 24329 ;; Hardware stack levels used:    1
 24330 ;; Hardware stack levels required when called:    9
 24331 ;; This function calls:
 24332 ;;		_GPIOAnalogRead
 24333 ;;		___ltdiv
 24334 ;; This function is called by:
 24335 ;;		_acquisitionData
 24336 ;;		_tempSensAcquisition
 24337 ;; This function uses a non-reentrant model
 24338 ;;
 24339                           
 24340                           	psect	text119
 24341  0087D2                     __ptext119:
 24342                           	opt callstack 0
 24343  0087D2                     _GPIOAverageRead:
 24344                           	opt callstack 19
 24345                           
 24346                           ;incstack = 0
 24347                           ;GPIOAverageRead@GPIO stored from wreg
 24348  0087D2  0100               	movlb	0	; () banked
 24349  0087D4  6F72               	movwf	GPIOAverageRead@GPIO& (0+255),b
 24350                           
 24351                           ;rn2483APP.c: 289: uint24_t finalValue = 0;
 24352  0087D6  0E00               	movlw	0
 24353  0087D8  0100               	movlb	0	; () banked
 24354  0087DA  6F75               	movwf	GPIOAverageRead@finalValue& (0+255),b
 24355  0087DC  0E00               	movlw	0
 24356  0087DE  6F76               	movwf	(GPIOAverageRead@finalValue+1)& (0+255),b
 24357  0087E0  0E00               	movlw	0
 24358  0087E2  6F77               	movwf	(GPIOAverageRead@finalValue+2)& (0+255),b
 24359                           
 24360                           ;rn2483APP.c: 291: for(uint16_t i=0; i<(1000); i++){
 24361  0087E4  0E00               	movlw	0
 24362  0087E6  6F74               	movwf	(GPIOAverageRead@i+1)& (0+255),b
 24363  0087E8  0E00               	movlw	0
 24364  0087EA  6F73               	movwf	GPIOAverageRead@i& (0+255),b
 24365  0087EC                     l15480:
 24366                           
 24367                           ; BSR set to: 0
 24368                           ;rn2483APP.c: 292: finalValue += GPIOAnalogRead(GPIO);
 24369  0087EC  5172               	movf	GPIOAverageRead@GPIO& (0+255),w,b
 24370  0087EE  ECEB  F051         	call	_GPIOAnalogRead
 24371  0087F2  0100               	movlb	0	; () banked
 24372  0087F4  C068  F06F         	movff	?_GPIOAnalogRead,??_GPIOAverageRead
 24373  0087F8  C069  F070         	movff	?_GPIOAnalogRead+1,??_GPIOAverageRead+1
 24374  0087FC  6B71               	clrf	(??_GPIOAverageRead+2)& (0+255),b
 24375  0087FE  516F               	movf	??_GPIOAverageRead& (0+255),w,b
 24376  008800  2775               	addwf	GPIOAverageRead@finalValue& (0+255),f,b
 24377  008802  5170               	movf	(??_GPIOAverageRead+1)& (0+255),w,b
 24378  008804  2376               	addwfc	(GPIOAverageRead@finalValue+1)& (0+255),f,b
 24379  008806  5171               	movf	(??_GPIOAverageRead+2)& (0+255),w,b
 24380  008808  2377               	addwfc	(GPIOAverageRead@finalValue+2)& (0+255),f,b
 24381                           
 24382                           ; BSR set to: 0
 24383  00880A  4B73               	infsnz	GPIOAverageRead@i& (0+255),f,b
 24384  00880C  2B74               	incf	(GPIOAverageRead@i+1)& (0+255),f,b
 24385                           
 24386                           ; BSR set to: 0
 24387  00880E  0EE8               	movlw	232
 24388  008810  5D73               	subwf	GPIOAverageRead@i& (0+255),w,b
 24389  008812  0E03               	movlw	3
 24390  008814  5974               	subwfb	(GPIOAverageRead@i+1)& (0+255),w,b
 24391  008816  A0D8               	btfss	status,0,c
 24392  008818  D7E9               	goto	l15480
 24393                           
 24394                           ; BSR set to: 0
 24395                           ;rn2483APP.c: 293: };rn2483APP.c: 294: finalValue/= 1000;
 24396  00881A  C075  F060         	movff	GPIOAverageRead@finalValue,___ltdiv@dividend
 24397  00881E  C076  F061         	movff	GPIOAverageRead@finalValue+1,___ltdiv@dividend+1
 24398  008822  C077  F062         	movff	GPIOAverageRead@finalValue+2,___ltdiv@dividend+2
 24399  008826  0EE8               	movlw	232
 24400  008828  6F63               	movwf	___ltdiv@divisor& (0+255),b
 24401  00882A  0E03               	movlw	3
 24402  00882C  6F64               	movwf	(___ltdiv@divisor+1)& (0+255),b
 24403  00882E  0E00               	movlw	0
 24404  008830  6F65               	movwf	(___ltdiv@divisor+2)& (0+255),b
 24405  008832  ECC1  F045         	call	___ltdiv	;wreg free
 24406  008836  C060  F075         	movff	?___ltdiv,GPIOAverageRead@finalValue
 24407  00883A  C061  F076         	movff	?___ltdiv+1,GPIOAverageRead@finalValue+1
 24408  00883E  C062  F077         	movff	?___ltdiv+2,GPIOAverageRead@finalValue+2
 24409                           
 24410                           ;rn2483APP.c: 295: return finalValue;
 24411  008842  C075  F06D         	movff	GPIOAverageRead@finalValue,?_GPIOAverageRead
 24412  008846  C076  F06E         	movff	GPIOAverageRead@finalValue+1,?_GPIOAverageRead+1
 24413  00884A  0012               	return		;funcret
 24414  00884C                     __end_of_GPIOAverageRead:
 24415                           	opt callstack 0
 24416                           
 24417 ;; *************** function _GPIOAnalogRead *****************
 24418 ;; Defined at:
 24419 ;;		line 308 in file "rn2483APP.c"
 24420 ;; Parameters:    Size  Location     Type
 24421 ;;  GPIO            1    wreg     unsigned char 
 24422 ;; Auto vars:     Size  Location     Type
 24423 ;;  GPIO            1   12[BANK0 ] unsigned char 
 24424 ;;  result          2   10[BANK0 ] unsigned int 
 24425 ;; Return value:  Size  Location     Type
 24426 ;;                  2    8[BANK0 ] unsigned int 
 24427 ;; Registers used:
 24428 ;;		wreg, status,2, status,0, cstack
 24429 ;; Tracked objects:
 24430 ;;		On entry : 0/0
 24431 ;;		On exit  : 0/0
 24432 ;;		Unchanged: 0/0
 24433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24434 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24435 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24437 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24438 ;;Total ram usage:        5 bytes
 24439 ;; Hardware stack levels used:    1
 24440 ;; Hardware stack levels required when called:    8
 24441 ;; This function calls:
 24442 ;;		_ADC_GetConversion
 24443 ;; This function is called by:
 24444 ;;		_GPIOAverageRead
 24445 ;; This function uses a non-reentrant model
 24446 ;;
 24447                           
 24448                           	psect	text120
 24449  00A3D6                     __ptext120:
 24450                           	opt callstack 0
 24451  00A3D6                     _GPIOAnalogRead:
 24452                           	opt callstack 19
 24453                           
 24454                           ;incstack = 0
 24455                           ;GPIOAnalogRead@GPIO stored from wreg
 24456  00A3D6  0100               	movlb	0	; () banked
 24457  00A3D8  6F6C               	movwf	GPIOAnalogRead@GPIO& (0+255),b
 24458                           
 24459                           ;rn2483APP.c: 310: adc_result_t result;;rn2483APP.c: 312: result = ADC_GetConversion(GPI
      +                          O);
 24460  00A3DA  0100               	movlb	0	; () banked
 24461  00A3DC  516C               	movf	GPIOAnalogRead@GPIO& (0+255),w,b
 24462  00A3DE  EC2E  F049         	call	_ADC_GetConversion
 24463  00A3E2  C060  F06A         	movff	?_ADC_GetConversion,GPIOAnalogRead@result
 24464  00A3E6  C061  F06B         	movff	?_ADC_GetConversion+1,GPIOAnalogRead@result+1
 24465                           
 24466                           ;rn2483APP.c: 314: return result;
 24467  00A3EA  C06A  F068         	movff	GPIOAnalogRead@result,?_GPIOAnalogRead
 24468  00A3EE  C06B  F069         	movff	GPIOAnalogRead@result+1,?_GPIOAnalogRead+1
 24469  00A3F2  0012               	return		;funcret
 24470  00A3F4                     __end_of_GPIOAnalogRead:
 24471                           	opt callstack 0
 24472                           
 24473 ;; *************** function _ADC_GetConversion *****************
 24474 ;; Defined at:
 24475 ;;		line 110 in file "mcc_generated_files/adc.c"
 24476 ;; Parameters:    Size  Location     Type
 24477 ;;  channel         1    wreg     enum E5859
 24478 ;; Auto vars:     Size  Location     Type
 24479 ;;  channel         1    7[BANK0 ] enum E5859
 24480 ;;  result          2    5[BANK0 ] unsigned int 
 24481 ;; Return value:  Size  Location     Type
 24482 ;;                  2    0[BANK0 ] unsigned int 
 24483 ;; Registers used:
 24484 ;;		wreg, status,2, status,0
 24485 ;; Tracked objects:
 24486 ;;		On entry : 0/0
 24487 ;;		On exit  : 0/0
 24488 ;;		Unchanged: 0/0
 24489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24491 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24492 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24493 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24494 ;;Total ram usage:        8 bytes
 24495 ;; Hardware stack levels used:    1
 24496 ;; Hardware stack levels required when called:    7
 24497 ;; This function calls:
 24498 ;;		Nothing
 24499 ;; This function is called by:
 24500 ;;		_GPIOAnalogRead
 24501 ;; This function uses a non-reentrant model
 24502 ;;
 24503                           
 24504                           	psect	text121
 24505  00925C                     __ptext121:
 24506                           	opt callstack 0
 24507  00925C                     _ADC_GetConversion:
 24508                           	opt callstack 19
 24509                           
 24510                           ;incstack = 0
 24511                           ;ADC_GetConversion@channel stored from wreg
 24512  00925C  0100               	movlb	0	; () banked
 24513  00925E  6F67               	movwf	ADC_GetConversion@channel& (0+255),b
 24514                           
 24515                           ;adc.c: 113: ADCON0bits.CHS = channel;
 24516  009260  C067  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 24517  009264  0100               	movlb	0	; () banked
 24518  009266  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 24519  009268  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 24520  00926A  50C2               	movf	4034,w,c	;volatile
 24521  00926C  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 24522  00926E  0B83               	andlw	-125
 24523  009270  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 24524  009272  6EC2               	movwf	4034,c	;volatile
 24525                           
 24526                           ; BSR set to: 0
 24527                           ;adc.c: 116: ADCON0bits.ADON = 1;
 24528  009274  80C2               	bsf	4034,0,c	;volatile
 24529                           
 24530                           ; BSR set to: 0
 24531                           ;adc.c: 119: ADCON0bits.GO_nDONE = 1;
 24532  009276  82C2               	bsf	4034,1,c	;volatile
 24533  009278                     l2528:
 24534  009278  B2C2               	btfsc	4034,1,c	;volatile
 24535  00927A  D7FE               	goto	l2528
 24536                           
 24537                           ;adc.c: 124: };adc.c: 127: adc_result_t result = ((adc_result_t)((ADRESH << 8) + ADRESL)
      +                          );
 24538  00927C  50C4               	movf	4036,w,c	;volatile
 24539  00927E  0100               	movlb	0	; () banked
 24540  009280  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 24541  009282  6B62               	clrf	??_ADC_GetConversion& (0+255),b
 24542  009284  50C3               	movf	4035,w,c	;volatile
 24543  009286  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
 24544  009288  6F65               	movwf	ADC_GetConversion@result& (0+255),b
 24545  00928A  0E00               	movlw	0
 24546  00928C  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 24547  00928E  6F66               	movwf	(ADC_GetConversion@result+1)& (0+255),b
 24548                           
 24549                           ;adc.c: 128: return result>>6;
 24550  009290  C065  F062         	movff	ADC_GetConversion@result,??_ADC_GetConversion
 24551  009294  C066  F063         	movff	ADC_GetConversion@result+1,??_ADC_GetConversion+1
 24552  009298  0E06               	movlw	6
 24553  00929A  6F64               	movwf	(??_ADC_GetConversion+2)& (0+255),b
 24554  00929C                     u14055:
 24555  00929C  90D8               	bcf	status,0,c
 24556  00929E  3363               	rrcf	(??_ADC_GetConversion+1)& (0+255),f,b
 24557  0092A0  3362               	rrcf	??_ADC_GetConversion& (0+255),f,b
 24558  0092A2  2F64               	decfsz	(??_ADC_GetConversion+2)& (0+255),f,b
 24559  0092A4  D7FB               	goto	u14055
 24560  0092A6  C062  F060         	movff	??_ADC_GetConversion,?_ADC_GetConversion
 24561  0092AA  C063  F061         	movff	??_ADC_GetConversion+1,?_ADC_GetConversion+1
 24562                           
 24563                           ; BSR set to: 0
 24564  0092AE  0012               	return		;funcret
 24565  0092B0                     __end_of_ADC_GetConversion:
 24566                           	opt callstack 0
 24567                           
 24568 ;; *************** function _impedenceAcquisition *****************
 24569 ;; Defined at:
 24570 ;;		line 325 in file "acuadori.c"
 24571 ;; Parameters:    Size  Location     Type
 24572 ;;		None
 24573 ;; Auto vars:     Size  Location     Type
 24574 ;;		None
 24575 ;; Return value:  Size  Location     Type
 24576 ;;                  1    wreg      void 
 24577 ;; Registers used:
 24578 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24579 ;; Tracked objects:
 24580 ;;		On entry : 0/0
 24581 ;;		On exit  : 0/0
 24582 ;;		Unchanged: 0/0
 24583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24588 ;;Total ram usage:        0 bytes
 24589 ;; Hardware stack levels used:    1
 24590 ;; Hardware stack levels required when called:   11
 24591 ;; This function calls:
 24592 ;;		_adaptString
 24593 ;;		_averageMeasure
 24594 ;;		_sinGenStart
 24595 ;;		_uint16ToString
 24596 ;; This function is called by:
 24597 ;;		_acuadoriApp
 24598 ;; This function uses a non-reentrant model
 24599 ;;
 24600                           
 24601                           	psect	text122
 24602  009B12                     __ptext122:
 24603                           	opt callstack 0
 24604  009B12                     _impedenceAcquisition:
 24605                           	opt callstack 18
 24606                           
 24607                           ;acuadori.c: 326: sinGenStart();
 24608                           
 24609                           ; BSR set to: 0
 24610                           ;incstack = 0
 24611  009B12  ECC6  F02D         	call	_sinGenStart	;wreg free
 24612                           
 24613                           ;acuadori.c: 327: uint16ToString(averageMeasure(), stringValue);
 24614  009B16  EC61  F041         	call	_averageMeasure	;wreg free
 24615  009B1A  C06A  F0A5         	movff	?_averageMeasure,uint16ToString@value
 24616  009B1E  C06B  F0A6         	movff	?_averageMeasure+1,uint16ToString@value+1
 24617  009B22  0E6F               	movlw	low _stringValue
 24618  009B24  0100               	movlb	0	; () banked
 24619  009B26  6FA7               	movwf	uint16ToString@output& (0+255),b
 24620  009B28  0E01               	movlw	high _stringValue
 24621  009B2A  6FA8               	movwf	(uint16ToString@output+1)& (0+255),b
 24622  009B2C  EC87  F02C         	call	_uint16ToString	;wreg free
 24623                           
 24624                           ;acuadori.c: 328: stringValueLength = adaptString(stringValue, 5);
 24625  009B30  0E6F               	movlw	low _stringValue
 24626  009B32  0100               	movlb	0	; () banked
 24627  009B34  6F60               	movwf	adaptString@string& (0+255),b
 24628  009B36  0E01               	movlw	high _stringValue
 24629  009B38  6F61               	movwf	(adaptString@string+1)& (0+255),b
 24630  009B3A  0E05               	movlw	5
 24631  009B3C  6F62               	movwf	adaptString@length& (0+255),b
 24632  009B3E  EC62  F044         	call	_adaptString	;wreg free
 24633  009B42  0101               	movlb	1	; () banked
 24634  009B44  6FF9               	movwf	_stringValueLength& (0+255),b
 24635                           
 24636                           ; BSR set to: 1
 24637  009B46  0012               	return		;funcret
 24638  009B48                     __end_of_impedenceAcquisition:
 24639                           	opt callstack 0
 24640                           
 24641 ;; *************** function _uint16ToString *****************
 24642 ;; Defined at:
 24643 ;;		line 257 in file "rn2483APP.c"
 24644 ;; Parameters:    Size  Location     Type
 24645 ;;  value           2   69[BANK0 ] unsigned int 
 24646 ;;  output          2   71[BANK0 ] PTR unsigned char 
 24647 ;;		 -> stringValue(5), 
 24648 ;; Auto vars:     Size  Location     Type
 24649 ;;  position        2    0        unsigned int 
 24650 ;; Return value:  Size  Location     Type
 24651 ;;                  1    wreg      void 
 24652 ;; Registers used:
 24653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24654 ;; Tracked objects:
 24655 ;;		On entry : 0/0
 24656 ;;		On exit  : 0/0
 24657 ;;		Unchanged: 0/0
 24658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24659 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24660 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24662 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24663 ;;Total ram usage:        6 bytes
 24664 ;; Hardware stack levels used:    1
 24665 ;; Hardware stack levels required when called:    8
 24666 ;; This function calls:
 24667 ;;		___lwdiv
 24668 ;;		___lwmod
 24669 ;; This function is called by:
 24670 ;;		_acquisitionData
 24671 ;;		_tempSensAcquisition
 24672 ;;		_impedenceAcquisition
 24673 ;; This function uses a non-reentrant model
 24674 ;;
 24675                           
 24676                           	psect	text123
 24677  00590E                     __ptext123:
 24678                           	opt callstack 0
 24679  00590E                     _uint16ToString:
 24680                           	opt callstack 20
 24681                           
 24682                           ;rn2483APP.c: 271: output[position + 4] = '0' + (value % 10);
 24683                           
 24684                           ; BSR set to: 1
 24685                           ;incstack = 0
 24686  00590E  0100               	movlb	0	; () banked
 24687  005910  EE20 F004          	lfsr	2,4
 24688  005914  51A7               	movf	uint16ToString@output& (0+255),w,b
 24689  005916  26D9               	addwf	fsr2l,f,c
 24690  005918  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24691  00591A  22DA               	addwfc	fsr2h,f,c
 24692  00591C  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24693  005920  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24694  005924  0E00               	movlw	0
 24695  005926  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24696  005928  0E0A               	movlw	10
 24697  00592A  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24698  00592C  EC0B  F04C         	call	___lwmod	;wreg free
 24699  005930  0100               	movlb	0	; () banked
 24700  005932  51A0               	movf	?___lwmod& (0+255),w,b
 24701  005934  0F30               	addlw	48
 24702  005936  6EDF               	movwf	indf2,c
 24703                           
 24704                           ; BSR set to: 0
 24705                           ;rn2483APP.c: 272: value /= 10;
 24706  005938  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24707  00593C  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24708  005940  0E00               	movlw	0
 24709  005942  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24710  005944  0E0A               	movlw	10
 24711  005946  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24712  005948  EC58  F049         	call	___lwdiv	;wreg free
 24713  00594C  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24714  005950  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24715                           
 24716                           ;rn2483APP.c: 273: output[position + 3] = '0' + (value % 10);
 24717  005954  0100               	movlb	0	; () banked
 24718  005956  EE20 F003          	lfsr	2,3
 24719  00595A  51A7               	movf	uint16ToString@output& (0+255),w,b
 24720  00595C  26D9               	addwf	fsr2l,f,c
 24721  00595E  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24722  005960  22DA               	addwfc	fsr2h,f,c
 24723  005962  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24724  005966  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24725  00596A  0E00               	movlw	0
 24726  00596C  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24727  00596E  0E0A               	movlw	10
 24728  005970  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24729  005972  EC0B  F04C         	call	___lwmod	;wreg free
 24730  005976  0100               	movlb	0	; () banked
 24731  005978  51A0               	movf	?___lwmod& (0+255),w,b
 24732  00597A  0F30               	addlw	48
 24733  00597C  6EDF               	movwf	indf2,c
 24734                           
 24735                           ; BSR set to: 0
 24736                           ;rn2483APP.c: 274: value /= 10;
 24737  00597E  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24738  005982  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24739  005986  0E00               	movlw	0
 24740  005988  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24741  00598A  0E0A               	movlw	10
 24742  00598C  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24743  00598E  EC58  F049         	call	___lwdiv	;wreg free
 24744  005992  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24745  005996  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24746                           
 24747                           ;rn2483APP.c: 275: output[position + 2] = '0' + (value % 10);
 24748  00599A  0100               	movlb	0	; () banked
 24749  00599C  EE20 F002          	lfsr	2,2
 24750  0059A0  51A7               	movf	uint16ToString@output& (0+255),w,b
 24751  0059A2  26D9               	addwf	fsr2l,f,c
 24752  0059A4  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24753  0059A6  22DA               	addwfc	fsr2h,f,c
 24754  0059A8  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24755  0059AC  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24756  0059B0  0E00               	movlw	0
 24757  0059B2  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24758  0059B4  0E0A               	movlw	10
 24759  0059B6  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24760  0059B8  EC0B  F04C         	call	___lwmod	;wreg free
 24761  0059BC  0100               	movlb	0	; () banked
 24762  0059BE  51A0               	movf	?___lwmod& (0+255),w,b
 24763  0059C0  0F30               	addlw	48
 24764  0059C2  6EDF               	movwf	indf2,c
 24765                           
 24766                           ; BSR set to: 0
 24767                           ;rn2483APP.c: 276: value /= 10;
 24768  0059C4  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24769  0059C8  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24770  0059CC  0E00               	movlw	0
 24771  0059CE  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24772  0059D0  0E0A               	movlw	10
 24773  0059D2  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24774  0059D4  EC58  F049         	call	___lwdiv	;wreg free
 24775  0059D8  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24776  0059DC  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24777                           
 24778                           ;rn2483APP.c: 277: output[position + 1] = '0' + (value % 10);
 24779  0059E0  0100               	movlb	0	; () banked
 24780  0059E2  EE20 F001          	lfsr	2,1
 24781  0059E6  51A7               	movf	uint16ToString@output& (0+255),w,b
 24782  0059E8  26D9               	addwf	fsr2l,f,c
 24783  0059EA  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24784  0059EC  22DA               	addwfc	fsr2h,f,c
 24785  0059EE  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24786  0059F2  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24787  0059F6  0E00               	movlw	0
 24788  0059F8  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24789  0059FA  0E0A               	movlw	10
 24790  0059FC  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24791  0059FE  EC0B  F04C         	call	___lwmod	;wreg free
 24792  005A02  0100               	movlb	0	; () banked
 24793  005A04  51A0               	movf	?___lwmod& (0+255),w,b
 24794  005A06  0F30               	addlw	48
 24795  005A08  6EDF               	movwf	indf2,c
 24796                           
 24797                           ; BSR set to: 0
 24798                           ;rn2483APP.c: 278: value /= 10;
 24799  005A0A  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24800  005A0E  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24801  005A12  0E00               	movlw	0
 24802  005A14  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24803  005A16  0E0A               	movlw	10
 24804  005A18  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24805  005A1A  EC58  F049         	call	___lwdiv	;wreg free
 24806  005A1E  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24807  005A22  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24808                           
 24809                           ;rn2483APP.c: 279: output[position] = '0' + (value % 10);
 24810  005A26  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24811  005A2A  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24812  005A2E  0E00               	movlw	0
 24813  005A30  0100               	movlb	0	; () banked
 24814  005A32  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24815  005A34  0E0A               	movlw	10
 24816  005A36  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24817  005A38  EC0B  F04C         	call	___lwmod	;wreg free
 24818  005A3C  0100               	movlb	0	; () banked
 24819  005A3E  51A0               	movf	?___lwmod& (0+255),w,b
 24820  005A40  0F30               	addlw	48
 24821  005A42  C0A7  FFD9         	movff	uint16ToString@output,fsr2l
 24822  005A46  C0A8  FFDA         	movff	uint16ToString@output+1,fsr2h
 24823  005A4A  6EDF               	movwf	indf2,c
 24824                           
 24825                           ; BSR set to: 0
 24826  005A4C  0012               	return		;funcret
 24827  005A4E                     __end_of_uint16ToString:
 24828                           	opt callstack 0
 24829                           
 24830 ;; *************** function ___lwdiv *****************
 24831 ;; Defined at:
 24832 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 24833 ;; Parameters:    Size  Location     Type
 24834 ;;  dividend        2    0[BANK0 ] unsigned int 
 24835 ;;  divisor         2    2[BANK0 ] unsigned int 
 24836 ;; Auto vars:     Size  Location     Type
 24837 ;;  quotient        2    4[BANK0 ] unsigned int 
 24838 ;;  counter         1    6[BANK0 ] unsigned char 
 24839 ;; Return value:  Size  Location     Type
 24840 ;;                  2    0[BANK0 ] unsigned int 
 24841 ;; Registers used:
 24842 ;;		wreg, status,2, status,0
 24843 ;; Tracked objects:
 24844 ;;		On entry : 0/0
 24845 ;;		On exit  : 0/0
 24846 ;;		Unchanged: 0/0
 24847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24848 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24849 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24851 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24852 ;;Total ram usage:        7 bytes
 24853 ;; Hardware stack levels used:    1
 24854 ;; Hardware stack levels required when called:    7
 24855 ;; This function calls:
 24856 ;;		Nothing
 24857 ;; This function is called by:
 24858 ;;		_uint16ToString
 24859 ;;		_timerHandler
 24860 ;; This function uses a non-reentrant model
 24861 ;;
 24862                           
 24863                           	psect	text124
 24864  0092B0                     __ptext124:
 24865                           	opt callstack 0
 24866  0092B0                     ___lwdiv:
 24867                           	opt callstack 20
 24868                           
 24869                           ; BSR set to: 0
 24870                           ;incstack = 0
 24871  0092B0  0E00               	movlw	0
 24872  0092B2  0100               	movlb	0	; () banked
 24873  0092B4  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 24874  0092B6  0E00               	movlw	0
 24875  0092B8  6F64               	movwf	___lwdiv@quotient& (0+255),b
 24876                           
 24877                           ; BSR set to: 0
 24878  0092BA  5162               	movf	___lwdiv@divisor& (0+255),w,b
 24879  0092BC  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 24880  0092BE  B4D8               	btfsc	status,2,c
 24881  0092C0  D01C               	goto	l4002
 24882                           
 24883                           ; BSR set to: 0
 24884  0092C2  0E01               	movlw	1
 24885  0092C4  6F66               	movwf	___lwdiv@counter& (0+255),b
 24886  0092C6  D004               	goto	l15178
 24887  0092C8                     l15176:
 24888                           
 24889                           ; BSR set to: 0
 24890  0092C8  90D8               	bcf	status,0,c
 24891  0092CA  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 24892  0092CC  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 24893  0092CE  2B66               	incf	___lwdiv@counter& (0+255),f,b
 24894  0092D0                     l15178:
 24895                           
 24896                           ; BSR set to: 0
 24897  0092D0  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 24898  0092D2  D7FA               	goto	l15176
 24899  0092D4                     u15560:
 24900                           
 24901                           ; BSR set to: 0
 24902  0092D4  90D8               	bcf	status,0,c
 24903  0092D6  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 24904  0092D8  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 24905                           
 24906                           ; BSR set to: 0
 24907  0092DA  5162               	movf	___lwdiv@divisor& (0+255),w,b
 24908  0092DC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 24909  0092DE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24910  0092E0  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 24911  0092E2  A0D8               	btfss	status,0,c
 24912  0092E4  D005               	goto	l15188
 24913                           
 24914                           ; BSR set to: 0
 24915  0092E6  5162               	movf	___lwdiv@divisor& (0+255),w,b
 24916  0092E8  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 24917  0092EA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24918  0092EC  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 24919                           
 24920                           ; BSR set to: 0
 24921  0092EE  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 24922  0092F0                     l15188:
 24923                           
 24924                           ; BSR set to: 0
 24925  0092F0  90D8               	bcf	status,0,c
 24926  0092F2  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 24927  0092F4  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 24928                           
 24929                           ; BSR set to: 0
 24930  0092F6  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 24931  0092F8  D7ED               	goto	u15560
 24932  0092FA                     l4002:
 24933                           
 24934                           ; BSR set to: 0
 24935  0092FA  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 24936  0092FE  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 24937                           
 24938                           ; BSR set to: 0
 24939  009302  0012               	return		;funcret
 24940  009304                     __end_of___lwdiv:
 24941                           	opt callstack 0
 24942                           
 24943 ;; *************** function _sinGenStart *****************
 24944 ;; Defined at:
 24945 ;;		line 154 in file "acuadori.c"
 24946 ;; Parameters:    Size  Location     Type
 24947 ;;		None
 24948 ;; Auto vars:     Size  Location     Type
 24949 ;;  i               2    8[BANK0 ] int 
 24950 ;;  t               1   13[BANK0 ] unsigned char 
 24951 ;;  i               1   12[BANK0 ] char 
 24952 ;;  d               2   10[BANK0 ] unsigned int 
 24953 ;; Return value:  Size  Location     Type
 24954 ;;                  1    wreg      void 
 24955 ;; Registers used:
 24956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24957 ;; Tracked objects:
 24958 ;;		On entry : 0/0
 24959 ;;		On exit  : 0/0
 24960 ;;		Unchanged: 0/0
 24961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24963 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24964 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24965 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24966 ;;Total ram usage:        8 bytes
 24967 ;; Hardware stack levels used:    1
 24968 ;; Hardware stack levels required when called:   10
 24969 ;; This function calls:
 24970 ;;		_TMR3_StartTimer
 24971 ;;		_TMR3_StopTimer
 24972 ;;		_TMR5_StartTimer
 24973 ;;		_TMR5_StopTimer
 24974 ;;		_i2c_sendData
 24975 ;;		_i2c_stop
 24976 ;;		_i2c_waitACK
 24977 ;; This function is called by:
 24978 ;;		_impedenceAcquisition
 24979 ;; This function uses a non-reentrant model
 24980 ;;
 24981                           
 24982                           	psect	text125
 24983  005B8C                     __ptext125:
 24984                           	opt callstack 0
 24985  005B8C                     _sinGenStart:
 24986                           	opt callstack 18
 24987                           
 24988                           ;acuadori.c: 156: for(uint16_t d=0; d<200; d++){
 24989                           
 24990                           ; BSR set to: 0
 24991                           ;incstack = 0
 24992  005B8C  0E00               	movlw	0
 24993  005B8E  0100               	movlb	0	; () banked
 24994  005B90  6F6B               	movwf	(sinGenStart@d+1)& (0+255),b
 24995  005B92  0E00               	movlw	0
 24996  005B94  6F6A               	movwf	sinGenStart@d& (0+255),b
 24997  005B96                     l21500:
 24998                           
 24999                           ; BSR set to: 0
 25000                           ;acuadori.c: 158: TMR5_StopTimer();
 25001  005B96  ECF6  F053         	call	_TMR5_StopTimer	;wreg free
 25002                           
 25003                           ;acuadori.c: 159: TMR3_StartTimer();
 25004  005B9A  EC03  F054         	call	_TMR3_StartTimer	;wreg free
 25005  005B9E                     l3321:
 25006  005B9E  A084               	btfss	3972,0,c	;volatile
 25007  005BA0  D7FE               	goto	l3321
 25008                           
 25009                           ;acuadori.c: 165: LATE &= ~0x2;
 25010  005BA2  928D               	bcf	3981,1,c	;volatile
 25011                           
 25012                           ;acuadori.c: 167: for(int8_t i = 7; i > -1; i--){
 25013  005BA4  0E07               	movlw	7
 25014  005BA6  0100               	movlb	0	; () banked
 25015  005BA8  6F6C               	movwf	sinGenStart@i& (0+255),b
 25016  005BAA                     l21510:
 25017                           
 25018                           ; BSR set to: 0
 25019                           ;acuadori.c: 168: if(flag){
 25020  005BAA  5041               	movf	_flag,w,c
 25021  005BAC  B4D8               	btfsc	status,2,c
 25022  005BAE  D002               	goto	u24480
 25023  005BB0                     u24470:
 25024  005BB0  A084               	btfss	3972,0,c	;volatile
 25025  005BB2  D7FE               	goto	u24470
 25026  005BB4                     u24480:
 25027  005BB4  B084               	btfsc	3972,0,c	;volatile
 25028  005BB6  D7FE               	goto	u24480
 25029                           
 25030                           ;acuadori.c: 176: if(address & (1 << i)){
 25031  005BB8  C06C  F066         	movff	sinGenStart@i,??_sinGenStart
 25032  005BBC  0E01               	movlw	1
 25033  005BBE  0100               	movlb	0	; () banked
 25034  005BC0  6F67               	movwf	(??_sinGenStart+1)& (0+255),b
 25035  005BC2  2B66               	incf	??_sinGenStart& (0+255),f,b
 25036  005BC4  D002               	goto	u24504
 25037  005BC6                     u24505:
 25038  005BC6  90D8               	bcf	status,0,c
 25039  005BC8  3767               	rlcf	(??_sinGenStart+1)& (0+255),f,b
 25040  005BCA                     u24504:
 25041  005BCA  2F66               	decfsz	??_sinGenStart& (0+255),f,b
 25042  005BCC  D7FC               	goto	u24505
 25043  005BCE  0E90               	movlw	144
 25044  005BD0  0100               	movlb	0	; () banked
 25045  005BD2  1767               	andwf	(??_sinGenStart+1)& (0+255),f,b
 25046  005BD4  B4D8               	btfsc	status,2,c
 25047  005BD6  D002               	goto	l21518
 25048                           
 25049                           ; BSR set to: 0
 25050                           ;acuadori.c: 178: LATE |= 0x2;
 25051  005BD8  828D               	bsf	3981,1,c	;volatile
 25052                           
 25053                           ;acuadori.c: 180: }
 25054  005BDA  D001               	goto	l21520
 25055  005BDC                     l21518:
 25056                           
 25057                           ; BSR set to: 0
 25058                           ;acuadori.c: 181: else{;acuadori.c: 183: LATE &= ~ 0x2;
 25059  005BDC  928D               	bcf	3981,1,c	;volatile
 25060  005BDE                     l21520:
 25061                           
 25062                           ; BSR set to: 0
 25063                           ;acuadori.c: 185: };acuadori.c: 186: flag = 1;
 25064  005BDE  0E01               	movlw	1
 25065  005BE0  6E41               	movwf	_flag,c
 25066                           
 25067                           ; BSR set to: 0
 25068  005BE2  076C               	decf	sinGenStart@i& (0+255),f,b
 25069                           
 25070                           ; BSR set to: 0
 25071  005BE4  AF6C               	btfss	sinGenStart@i& (0+255),7,b
 25072  005BE6  D7E1               	goto	l21510
 25073  005BE8                     u24520:
 25074  005BE8  A084               	btfss	3972,0,c	;volatile
 25075  005BEA  D7FE               	goto	u24520
 25076  005BEC                     u24530:
 25077  005BEC  B084               	btfsc	3972,0,c	;volatile
 25078  005BEE  D7FE               	goto	u24530
 25079                           
 25080                           ;acuadori.c: 191: if(!i2c_waitACK() || 1){
 25081  005BF0  EC6B  F052         	call	_i2c_waitACK	;wreg free
 25082                           
 25083                           ;acuadori.c: 194: for(uint8_t t=0; t<2; t++){
 25084  005BF4  0E00               	movlw	0
 25085  005BF6  0100               	movlb	0	; () banked
 25086  005BF8  6F6D               	movwf	sinGenStart@t& (0+255),b
 25087  005BFA                     l21534:
 25088                           
 25089                           ; BSR set to: 0
 25090                           ;acuadori.c: 196: i2c_sendData(pulseSignal[t]);
 25091  005BFA  516D               	movf	sinGenStart@t& (0+255),w,b
 25092  005BFC  0D02               	mullw	2
 25093  005BFE  0EF3               	movlw	low _pulseSignal
 25094  005C00  24F3               	addwf	prodl,w,c
 25095  005C02  6ED9               	movwf	fsr2l,c
 25096  005C04  0E01               	movlw	high _pulseSignal
 25097  005C06  20F4               	addwfc	prodh,w,c
 25098  005C08  6EDA               	movwf	fsr2h,c
 25099  005C0A  CFDE F064          	movff	postinc2,i2c_sendData@data
 25100  005C0E  CFDD F065          	movff	postdec2,i2c_sendData@data+1
 25101  005C12  EC9E  F04E         	call	_i2c_sendData	;wreg free
 25102  005C16  0100               	movlb	0	; () banked
 25103  005C18  2B6D               	incf	sinGenStart@t& (0+255),f,b
 25104                           
 25105                           ; BSR set to: 0
 25106  005C1A  0E01               	movlw	1
 25107  005C1C  656D               	cpfsgt	sinGenStart@t& (0+255),b
 25108  005C1E  D7ED               	goto	l21534
 25109                           
 25110                           ; BSR set to: 0
 25111                           ;acuadori.c: 199: };acuadori.c: 200: TMR3_StopTimer();
 25112  005C20  EC01  F054         	call	_TMR3_StopTimer	;wreg free
 25113                           
 25114                           ;acuadori.c: 202: for(int i=0; i<70; i++){
 25115  005C24  0E00               	movlw	0
 25116  005C26  0100               	movlb	0	; () banked
 25117  005C28  6F69               	movwf	(sinGenStart@i_5310+1)& (0+255),b
 25118  005C2A  0E00               	movlw	0
 25119  005C2C  6F68               	movwf	sinGenStart@i_5310& (0+255),b
 25120  005C2E                     l3346:
 25121                           
 25122                           ; BSR set to: 0
 25123                           ;acuadori.c: 203: _delay((unsigned long)((1)*(16000000/4000000.0)));
 25124  005C2E  D000               	nop2		;2 cycle nop
 25125  005C30  D000               	nop2		;2 cycle nop
 25126  005C32  0100               	movlb	0	; () banked
 25127  005C34  4B68               	infsnz	sinGenStart@i_5310& (0+255),f,b
 25128  005C36  2B69               	incf	(sinGenStart@i_5310+1)& (0+255),f,b
 25129                           
 25130                           ; BSR set to: 0
 25131  005C38  BF69               	btfsc	(sinGenStart@i_5310+1)& (0+255),7,b
 25132  005C3A  D7F9               	goto	l3346
 25133  005C3C  5169               	movf	(sinGenStart@i_5310+1)& (0+255),w,b
 25134  005C3E  E104               	bnz	u24560
 25135  005C40  0E46               	movlw	70
 25136  005C42  5D68               	subwf	sinGenStart@i_5310& (0+255),w,b
 25137  005C44  A0D8               	btfss	status,0,c
 25138  005C46  D7F3               	goto	l3346
 25139  005C48                     u24560:
 25140                           
 25141                           ; BSR set to: 0
 25142                           ;acuadori.c: 204: };acuadori.c: 208: ADCON0bits.CHS = 0x02;
 25143  005C48  50C2               	movf	4034,w,c	;volatile
 25144  005C4A  0B83               	andlw	-125
 25145  005C4C  0908               	iorlw	8
 25146  005C4E  6EC2               	movwf	4034,c	;volatile
 25147                           
 25148                           ; BSR set to: 0
 25149                           ;acuadori.c: 211: ADCON0bits.ADON = 1;
 25150  005C50  80C2               	bsf	4034,0,c	;volatile
 25151                           
 25152                           ; BSR set to: 0
 25153                           ;acuadori.c: 214: ADCON0bits.GO_nDONE = 1;
 25154  005C52  82C2               	bsf	4034,1,c	;volatile
 25155  005C54                     l3348:
 25156  005C54  B2C2               	btfsc	4034,1,c	;volatile
 25157  005C56  D7FE               	goto	l3348
 25158                           
 25159                           ;acuadori.c: 219: };acuadori.c: 222: result = ((adc_result_t)((ADRESH << 8) + ADRESL));
 25160  005C58  50C4               	movf	4036,w,c	;volatile
 25161  005C5A  0100               	movlb	0	; () banked
 25162  005C5C  6F67               	movwf	(??_sinGenStart+1)& (0+255),b
 25163  005C5E  6B66               	clrf	??_sinGenStart& (0+255),b
 25164  005C60  50C3               	movf	4035,w,c	;volatile
 25165  005C62  2566               	addwf	??_sinGenStart& (0+255),w,b
 25166  005C64  0101               	movlb	1	; () banked
 25167  005C66  6F18               	movwf	_result& (0+255),b
 25168  005C68  0E00               	movlw	0
 25169  005C6A  0100               	movlb	0	; () banked
 25170  005C6C  2167               	addwfc	(??_sinGenStart+1)& (0+255),w,b
 25171  005C6E  0101               	movlb	1	; () banked
 25172  005C70  6F19               	movwf	(_result+1)& (0+255),b
 25173                           
 25174                           ;acuadori.c: 223: result>>=6;
 25175  005C72  0E06               	movlw	6
 25176  005C74  0100               	movlb	0	; () banked
 25177  005C76  6F66               	movwf	??_sinGenStart& (0+255),b
 25178  005C78                     u24585:
 25179  005C78  90D8               	bcf	status,0,c
 25180  005C7A  0101               	movlb	1	; () banked
 25181  005C7C  3319               	rrcf	(_result+1)& (0+255),f,b
 25182  005C7E  3318               	rrcf	_result& (0+255),f,b
 25183  005C80  0100               	movlb	0	; () banked
 25184  005C82  2F66               	decfsz	??_sinGenStart& (0+255),f,b
 25185  005C84  D7F9               	goto	u24585
 25186                           
 25187                           ; BSR set to: 0
 25188                           ;acuadori.c: 224: capValues[d] = result;
 25189  005C86  90D8               	bcf	status,0,c
 25190  005C88  356A               	rlcf	sinGenStart@d& (0+255),w,b
 25191  005C8A  6ED9               	movwf	fsr2l,c
 25192  005C8C  356B               	rlcf	(sinGenStart@d+1)& (0+255),w,b
 25193  005C8E  6EDA               	movwf	fsr2h,c
 25194  005C90  0E28               	movlw	low _capValues
 25195  005C92  26D9               	addwf	fsr2l,f,c
 25196  005C94  0E05               	movlw	high _capValues
 25197  005C96  22DA               	addwfc	fsr2h,f,c
 25198  005C98  C118  FFDE         	movff	_result,postinc2
 25199  005C9C  C119  FFDD         	movff	_result+1,postdec2
 25200                           
 25201                           ; BSR set to: 0
 25202                           ;acuadori.c: 225: TMR3_StartTimer();
 25203  005CA0  EC03  F054         	call	_TMR3_StartTimer	;wreg free
 25204                           
 25205                           ;acuadori.c: 226: };acuadori.c: 228: i2c_stop();
 25206  005CA4  EC86  F04E         	call	_i2c_stop	;wreg free
 25207                           
 25208                           ;acuadori.c: 229: TMR3_StopTimer();
 25209  005CA8  EC01  F054         	call	_TMR3_StopTimer	;wreg free
 25210                           
 25211                           ;acuadori.c: 230: TMR5_StartTimer();
 25212  005CAC  ECF9  F053         	call	_TMR5_StartTimer	;wreg free
 25213  005CB0  0100               	movlb	0	; () banked
 25214  005CB2  4B6A               	infsnz	sinGenStart@d& (0+255),f,b
 25215  005CB4  2B6B               	incf	(sinGenStart@d+1)& (0+255),f,b
 25216                           
 25217                           ; BSR set to: 0
 25218  005CB6  516B               	movf	(sinGenStart@d+1)& (0+255),w,b
 25219  005CB8  E105               	bnz	u24590
 25220  005CBA  0EC8               	movlw	200
 25221  005CBC  5D6A               	subwf	sinGenStart@d& (0+255),w,b
 25222  005CBE  B0D8               	btfsc	status,0,c
 25223  005CC0  0012               	return	
 25224  005CC2  D769               	goto	l21500
 25225  005CC4                     u24590:
 25226                           
 25227                           ; BSR set to: 0
 25228  005CC4  0012               	return		;funcret
 25229  005CC6                     __end_of_sinGenStart:
 25230                           	opt callstack 0
 25231                           
 25232 ;; *************** function _i2c_stop *****************
 25233 ;; Defined at:
 25234 ;;		line 38 in file "I2C.c"
 25235 ;; Parameters:    Size  Location     Type
 25236 ;;		None
 25237 ;; Auto vars:     Size  Location     Type
 25238 ;;		None
 25239 ;; Return value:  Size  Location     Type
 25240 ;;                  1    wreg      void 
 25241 ;; Registers used:
 25242 ;;		wreg, status,2, status,0, cstack
 25243 ;; Tracked objects:
 25244 ;;		On entry : 0/0
 25245 ;;		On exit  : 0/0
 25246 ;;		Unchanged: 0/0
 25247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25252 ;;Total ram usage:        0 bytes
 25253 ;; Hardware stack levels used:    1
 25254 ;; Hardware stack levels required when called:    9
 25255 ;; This function calls:
 25256 ;;		_GPIODigitalRead
 25257 ;;		_i2c_usdelay
 25258 ;;		_resetSDA
 25259 ;;		_setSDA
 25260 ;; This function is called by:
 25261 ;;		_sinGenStart
 25262 ;; This function uses a non-reentrant model
 25263 ;;
 25264                           
 25265                           	psect	text126
 25266  009D0C                     __ptext126:
 25267                           	opt callstack 0
 25268  009D0C                     _i2c_stop:
 25269                           	opt callstack 18
 25270                           
 25271                           ;I2C.c: 40: resetSDA();
 25272                           
 25273                           ; BSR set to: 0
 25274                           ;incstack = 0
 25275  009D0C  EC41  F053         	call	_resetSDA	;wreg free
 25276  009D10                     l21346:
 25277  009D10  0E05               	movlw	5
 25278  009D12  EC42  F03D         	call	_GPIODigitalRead
 25279  009D16  0900               	iorlw	0
 25280  009D18  B4D8               	btfsc	status,2,c
 25281  009D1A  D7FA               	goto	l21346
 25282                           
 25283                           ;I2C.c: 43: setSDA();
 25284  009D1C  EC3A  F053         	call	_setSDA	;wreg free
 25285                           
 25286                           ;I2C.c: 44: i2c_usdelay(1);
 25287  009D20  0E00               	movlw	0
 25288  009D22  0100               	movlb	0	; () banked
 25289  009D24  6F61               	movwf	(i2c_usdelay@time+1)& (0+255),b
 25290  009D26  0E01               	movlw	1
 25291  009D28  6F60               	movwf	i2c_usdelay@time& (0+255),b
 25292  009D2A  ECD4  F050         	call	_i2c_usdelay	;wreg free
 25293  009D2E                     l21350:
 25294  009D2E  0E05               	movlw	5
 25295  009D30  EC42  F03D         	call	_GPIODigitalRead
 25296  009D34  0900               	iorlw	0
 25297  009D36  B4D8               	btfsc	status,2,c
 25298  009D38  0012               	return	
 25299  009D3A  D7F9               	goto	l21350
 25300  009D3C                     __end_of_i2c_stop:
 25301                           	opt callstack 0
 25302                           
 25303 ;; *************** function _setSDA *****************
 25304 ;; Defined at:
 25305 ;;		line 161 in file "I2C.c"
 25306 ;; Parameters:    Size  Location     Type
 25307 ;;		None
 25308 ;; Auto vars:     Size  Location     Type
 25309 ;;		None
 25310 ;; Return value:  Size  Location     Type
 25311 ;;                  1    wreg      void 
 25312 ;; Registers used:
 25313 ;;		wreg, status,2, status,0, cstack
 25314 ;; Tracked objects:
 25315 ;;		On entry : 0/0
 25316 ;;		On exit  : 0/0
 25317 ;;		Unchanged: 0/0
 25318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25323 ;;Total ram usage:        0 bytes
 25324 ;; Hardware stack levels used:    1
 25325 ;; Hardware stack levels required when called:    8
 25326 ;; This function calls:
 25327 ;;		_GPIODigitalWrite
 25328 ;; This function is called by:
 25329 ;;		_i2c_stop
 25330 ;; This function uses a non-reentrant model
 25331 ;;
 25332                           
 25333                           	psect	text127
 25334  00A674                     __ptext127:
 25335                           	opt callstack 0
 25336  00A674                     _setSDA:
 25337                           	opt callstack 18
 25338                           
 25339                           ;I2C.c: 162: GPIODigitalWrite(0x06, 1);
 25340                           
 25341                           ;incstack = 0
 25342  00A674  0E01               	movlw	1
 25343  00A676  0100               	movlb	0	; () banked
 25344  00A678  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 25345  00A67A  0E06               	movlw	6
 25346  00A67C  ECD5  F036         	call	_GPIODigitalWrite
 25347  00A680  0012               	return		;funcret
 25348  00A682                     __end_of_setSDA:
 25349                           	opt callstack 0
 25350                           
 25351 ;; *************** function _resetSDA *****************
 25352 ;; Defined at:
 25353 ;;		line 168 in file "I2C.c"
 25354 ;; Parameters:    Size  Location     Type
 25355 ;;		None
 25356 ;; Auto vars:     Size  Location     Type
 25357 ;;		None
 25358 ;; Return value:  Size  Location     Type
 25359 ;;                  1    wreg      void 
 25360 ;; Registers used:
 25361 ;;		wreg, status,2, status,0, cstack
 25362 ;; Tracked objects:
 25363 ;;		On entry : 0/0
 25364 ;;		On exit  : 0/0
 25365 ;;		Unchanged: 0/0
 25366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25371 ;;Total ram usage:        0 bytes
 25372 ;; Hardware stack levels used:    1
 25373 ;; Hardware stack levels required when called:    8
 25374 ;; This function calls:
 25375 ;;		_GPIODigitalWrite
 25376 ;; This function is called by:
 25377 ;;		_i2c_stop
 25378 ;; This function uses a non-reentrant model
 25379 ;;
 25380                           
 25381                           	psect	text128
 25382  00A682                     __ptext128:
 25383                           	opt callstack 0
 25384  00A682                     _resetSDA:
 25385                           	opt callstack 18
 25386                           
 25387                           ;I2C.c: 169: GPIODigitalWrite(0x06, 0);
 25388                           
 25389                           ;incstack = 0
 25390  00A682  0E00               	movlw	0
 25391  00A684  0100               	movlb	0	; () banked
 25392  00A686  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 25393  00A688  0E06               	movlw	6
 25394  00A68A  ECD5  F036         	call	_GPIODigitalWrite
 25395  00A68E  0012               	return		;funcret
 25396  00A690                     __end_of_resetSDA:
 25397                           	opt callstack 0
 25398                           
 25399 ;; *************** function _i2c_usdelay *****************
 25400 ;; Defined at:
 25401 ;;		line 155 in file "I2C.c"
 25402 ;; Parameters:    Size  Location     Type
 25403 ;;  time            2    0[BANK0 ] unsigned int 
 25404 ;; Auto vars:     Size  Location     Type
 25405 ;;  i               2    2[BANK0 ] int 
 25406 ;; Return value:  Size  Location     Type
 25407 ;;                  1    wreg      void 
 25408 ;; Registers used:
 25409 ;;		wreg, status,2, status,0
 25410 ;; Tracked objects:
 25411 ;;		On entry : 0/0
 25412 ;;		On exit  : 0/0
 25413 ;;		Unchanged: 0/0
 25414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25415 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25418 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25419 ;;Total ram usage:        4 bytes
 25420 ;; Hardware stack levels used:    1
 25421 ;; Hardware stack levels required when called:    7
 25422 ;; This function calls:
 25423 ;;		Nothing
 25424 ;; This function is called by:
 25425 ;;		_i2c_stop
 25426 ;; This function uses a non-reentrant model
 25427 ;;
 25428                           
 25429                           	psect	text129
 25430  00A1A8                     __ptext129:
 25431                           	opt callstack 0
 25432  00A1A8                     _i2c_usdelay:
 25433                           	opt callstack 19
 25434                           
 25435                           ;I2C.c: 156: for (int i=0; i< time; i++){
 25436                           
 25437                           ;incstack = 0
 25438  00A1A8  0E00               	movlw	0
 25439  00A1AA  0100               	movlb	0	; () banked
 25440  00A1AC  6F63               	movwf	(i2c_usdelay@i+1)& (0+255),b
 25441  00A1AE  0E00               	movlw	0
 25442  00A1B0  6F62               	movwf	i2c_usdelay@i& (0+255),b
 25443  00A1B2  D005               	goto	l15122
 25444  00A1B4                     l3506:
 25445                           
 25446                           ; BSR set to: 0
 25447                           ;I2C.c: 157: _delay((unsigned long)((1)*(16000000/4000000.0)));
 25448  00A1B4  D000               	nop2		;2 cycle nop
 25449  00A1B6  D000               	nop2		;2 cycle nop
 25450  00A1B8  0100               	movlb	0	; () banked
 25451  00A1BA  4B62               	infsnz	i2c_usdelay@i& (0+255),f,b
 25452  00A1BC  2B63               	incf	(i2c_usdelay@i+1)& (0+255),f,b
 25453  00A1BE                     l15122:
 25454                           
 25455                           ; BSR set to: 0
 25456  00A1BE  5160               	movf	i2c_usdelay@time& (0+255),w,b
 25457  00A1C0  5D62               	subwf	i2c_usdelay@i& (0+255),w,b
 25458  00A1C2  5161               	movf	(i2c_usdelay@time+1)& (0+255),w,b
 25459  00A1C4  5963               	subwfb	(i2c_usdelay@i+1)& (0+255),w,b
 25460  00A1C6  B0D8               	btfsc	status,0,c
 25461  00A1C8  0012               	return	
 25462  00A1CA  D7F4               	goto	l3506
 25463  00A1CC                     __end_of_i2c_usdelay:
 25464                           	opt callstack 0
 25465                           
 25466 ;; *************** function _GPIODigitalRead *****************
 25467 ;; Defined at:
 25468 ;;		line 173 in file "rn2483APP.c"
 25469 ;; Parameters:    Size  Location     Type
 25470 ;;  GPIO            1    wreg     unsigned char 
 25471 ;; Auto vars:     Size  Location     Type
 25472 ;;  GPIO            1    0[BANK0 ] unsigned char 
 25473 ;; Return value:  Size  Location     Type
 25474 ;;                  1    wreg      unsigned char 
 25475 ;; Registers used:
 25476 ;;		wreg, status,2, status,0
 25477 ;; Tracked objects:
 25478 ;;		On entry : 0/0
 25479 ;;		On exit  : 0/0
 25480 ;;		Unchanged: 0/0
 25481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25485 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25486 ;;Total ram usage:        1 bytes
 25487 ;; Hardware stack levels used:    1
 25488 ;; Hardware stack levels required when called:    7
 25489 ;; This function calls:
 25490 ;;		Nothing
 25491 ;; This function is called by:
 25492 ;;		_i2c_stop
 25493 ;; This function uses a non-reentrant model
 25494 ;;
 25495                           
 25496                           	psect	text130
 25497  007A84                     __ptext130:
 25498                           	opt callstack 0
 25499  007A84                     _GPIODigitalRead:
 25500                           	opt callstack 19
 25501                           
 25502                           ; BSR set to: 0
 25503                           ;incstack = 0
 25504                           ;GPIODigitalRead@GPIO stored from wreg
 25505  007A84  0100               	movlb	0	; () banked
 25506  007A86  6F60               	movwf	GPIODigitalRead@GPIO& (0+255),b
 25507                           
 25508                           ;rn2483APP.c: 174: switch(GPIO){
 25509  007A88  D035               	goto	l15106
 25510  007A8A                     l15032:
 25511                           
 25512                           ; BSR set to: 0
 25513                           ;rn2483APP.c: 176: return ((PORTA & 0x1) >> 0x0);
 25514  007A8A  5080               	movf	3968,w,c	;volatile
 25515  007A8C  0B01               	andlw	1
 25516  007A8E  0012               	return	
 25517  007A90                     l15038:
 25518                           
 25519                           ; BSR set to: 0
 25520                           ;rn2483APP.c: 179: return ((PORTA & 0x2) >> 0x1);
 25521  007A90  90D8               	bcf	status,0,c
 25522  007A92  3080               	rrcf	3968,w,c	;volatile
 25523  007A94  0B01               	andlw	1
 25524  007A96  0012               	return	
 25525  007A98                     l15044:
 25526                           
 25527                           ; BSR set to: 0
 25528                           ;rn2483APP.c: 182: return ((PORTA & 0x4) >> 0x2);
 25529  007A98  4080               	rrncf	3968,w,c	;volatile
 25530  007A9A  42E8               	rrncf	wreg,f,c
 25531  007A9C  0B3F               	andlw	63
 25532  007A9E  0B01               	andlw	1
 25533  007AA0  0012               	return	
 25534  007AA2                     l15050:
 25535                           
 25536                           ; BSR set to: 0
 25537                           ;rn2483APP.c: 185: return ((PORTA & 0x8) >> 0x3);
 25538  007AA2  3880               	swapf	3968,w,c	;volatile
 25539  007AA4  46E8               	rlncf	wreg,f,c
 25540  007AA6  0B1F               	andlw	31
 25541  007AA8  0B01               	andlw	1
 25542  007AAA  0012               	return	
 25543  007AAC                     l15056:
 25544                           
 25545                           ; BSR set to: 0
 25546                           ;rn2483APP.c: 188: return ((PORTA & 0x10) >> 0x4);
 25547  007AAC  3880               	swapf	3968,w,c	;volatile
 25548  007AAE  0B0F               	andlw	15
 25549  007AB0  0B01               	andlw	1
 25550  007AB2  0012               	return	
 25551  007AB4                     l15062:
 25552                           
 25553                           ; BSR set to: 0
 25554                           ;rn2483APP.c: 191: return ((PORTA & 0x20) >> 0x5);
 25555  007AB4  3880               	swapf	3968,w,c	;volatile
 25556  007AB6  42E8               	rrncf	wreg,f,c
 25557  007AB8  0B07               	andlw	7
 25558  007ABA  0B01               	andlw	1
 25559  007ABC  0012               	return	
 25560  007ABE                     l15068:
 25561                           
 25562                           ; BSR set to: 0
 25563                           ;rn2483APP.c: 194: return ((PORTE & 0x1) >> 0x0);
 25564  007ABE  5084               	movf	3972,w,c	;volatile
 25565  007AC0  0B01               	andlw	1
 25566  007AC2  0012               	return	
 25567  007AC4                     l15074:
 25568                           
 25569                           ; BSR set to: 0
 25570                           ;rn2483APP.c: 197: return ((PORTE & 0x2) >> 0x1);
 25571  007AC4  90D8               	bcf	status,0,c
 25572  007AC6  3084               	rrcf	3972,w,c	;volatile
 25573  007AC8  0B01               	andlw	1
 25574  007ACA  0012               	return	
 25575  007ACC                     l15080:
 25576                           
 25577                           ; BSR set to: 0
 25578                           ;rn2483APP.c: 200: return ((PORTD & 0x4) >> 0x2);
 25579  007ACC  4083               	rrncf	3971,w,c	;volatile
 25580  007ACE  42E8               	rrncf	wreg,f,c
 25581  007AD0  0B3F               	andlw	63
 25582  007AD2  0B01               	andlw	1
 25583  007AD4  0012               	return	
 25584  007AD6                     l15086:
 25585                           
 25586                           ; BSR set to: 0
 25587                           ;rn2483APP.c: 203: return ((PORTE & 0x4) >> 0x2);
 25588  007AD6  4084               	rrncf	3972,w,c	;volatile
 25589  007AD8  42E8               	rrncf	wreg,f,c
 25590  007ADA  0B3F               	andlw	63
 25591  007ADC  0B01               	andlw	1
 25592  007ADE  0012               	return	
 25593  007AE0                     l15092:
 25594                           
 25595                           ; BSR set to: 0
 25596                           ;rn2483APP.c: 206: return ((PORTC & 0x20) >> 0x5);
 25597  007AE0  3882               	swapf	3970,w,c	;volatile
 25598  007AE2  42E8               	rrncf	wreg,f,c
 25599  007AE4  0B07               	andlw	7
 25600  007AE6  0B01               	andlw	1
 25601  007AE8  0012               	return	
 25602  007AEA                     l15098:
 25603                           
 25604                           ; BSR set to: 0
 25605                           ;rn2483APP.c: 209: return ((PORTD & 0x20) >> 0x5);
 25606  007AEA  3883               	swapf	3971,w,c	;volatile
 25607  007AEC  42E8               	rrncf	wreg,f,c
 25608  007AEE  0B07               	andlw	7
 25609  007AF0  0B01               	andlw	1
 25610  007AF2  0012               	return	
 25611  007AF4                     l15106:
 25612  007AF4  0100               	movlb	0	; () banked
 25613  007AF6  5160               	movf	GPIODigitalRead@GPIO& (0+255),w,b
 25614                           
 25615                           ; Switch size 1, requested type "simple"
 25616                           ; Number of cases is 12, Range of values is 0 to 255
 25617                           ; switch strategies available:
 25618                           ; Name         Instructions Cycles
 25619                           ; simple_byte           37    19 (average)
 25620                           ;	Chosen strategy is simple_byte
 25621  007AF8  0A00               	xorlw	0	; case 0
 25622  007AFA  B4D8               	btfsc	status,2,c
 25623  007AFC  D7C6               	goto	l15032
 25624  007AFE  0A01               	xorlw	1	; case 1
 25625  007B00  B4D8               	btfsc	status,2,c
 25626  007B02  D7C6               	goto	l15038
 25627  007B04  0A03               	xorlw	3	; case 2
 25628  007B06  B4D8               	btfsc	status,2,c
 25629  007B08  D7C7               	goto	l15044
 25630  007B0A  0A01               	xorlw	1	; case 3
 25631  007B0C  B4D8               	btfsc	status,2,c
 25632  007B0E  D7C9               	goto	l15050
 25633  007B10  0A07               	xorlw	7	; case 4
 25634  007B12  B4D8               	btfsc	status,2,c
 25635  007B14  D7CF               	goto	l15062
 25636  007B16  0A01               	xorlw	1	; case 5
 25637  007B18  B4D8               	btfsc	status,2,c
 25638  007B1A  D7D1               	goto	l15068
 25639  007B1C  0A03               	xorlw	3	; case 6
 25640  007B1E  B4D8               	btfsc	status,2,c
 25641  007B20  D7D1               	goto	l15074
 25642  007B22  0A01               	xorlw	1	; case 7
 25643  007B24  B4D8               	btfsc	status,2,c
 25644  007B26  D7D7               	goto	l15086
 25645  007B28  0A16               	xorlw	22	; case 17
 25646  007B2A  B4D8               	btfsc	status,2,c
 25647  007B2C  D7D9               	goto	l15092
 25648  007B2E  0A07               	xorlw	7	; case 22
 25649  007B30  B4D8               	btfsc	status,2,c
 25650  007B32  D7CC               	goto	l15080
 25651  007B34  0A0F               	xorlw	15	; case 25
 25652  007B36  B4D8               	btfsc	status,2,c
 25653  007B38  D7D8               	goto	l15098
 25654  007B3A  0AE6               	xorlw	230	; case 255
 25655  007B3C  A4D8               	btfss	status,2,c
 25656  007B3E  0012               	return	
 25657  007B40  D7B5               	goto	l15056
 25658  007B42                     __end_of_GPIODigitalRead:
 25659                           	opt callstack 0
 25660                           
 25661 ;; *************** function _i2c_sendData *****************
 25662 ;; Defined at:
 25663 ;;		line 134 in file "I2C.c"
 25664 ;; Parameters:    Size  Location     Type
 25665 ;;  data            2    4[BANK0 ] unsigned int 
 25666 ;; Auto vars:     Size  Location     Type
 25667 ;;		None
 25668 ;; Return value:  Size  Location     Type
 25669 ;;                  1    wreg      unsigned char 
 25670 ;; Registers used:
 25671 ;;		wreg, status,2, status,0, cstack
 25672 ;; Tracked objects:
 25673 ;;		On entry : 0/0
 25674 ;;		On exit  : 0/0
 25675 ;;		Unchanged: 0/0
 25676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25680 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25681 ;;Total ram usage:        2 bytes
 25682 ;; Hardware stack levels used:    1
 25683 ;; Hardware stack levels required when called:    9
 25684 ;; This function calls:
 25685 ;;		_i2c_sdaWrite
 25686 ;; This function is called by:
 25687 ;;		_sinGenStart
 25688 ;; This function uses a non-reentrant model
 25689 ;;
 25690                           
 25691                           	psect	text131
 25692  009D3C                     __ptext131:
 25693                           	opt callstack 0
 25694  009D3C                     _i2c_sendData:
 25695                           	opt callstack 18
 25696                           
 25697                           ;I2C.c: 136: data <<= 2;
 25698                           
 25699                           ; BSR set to: 0
 25700                           ;incstack = 0
 25701  009D3C  0100               	movlb	0	; () banked
 25702  009D3E  90D8               	bcf	status,0,c
 25703  009D40  3764               	rlcf	i2c_sendData@data& (0+255),f,b
 25704  009D42  3765               	rlcf	(i2c_sendData@data+1)& (0+255),f,b
 25705  009D44  90D8               	bcf	status,0,c
 25706  009D46  3764               	rlcf	i2c_sendData@data& (0+255),f,b
 25707  009D48  3765               	rlcf	(i2c_sendData@data+1)& (0+255),f,b
 25708                           
 25709                           ; BSR set to: 0
 25710                           ;I2C.c: 137: data &= 0x0FFC;
 25711  009D4A  0EFC               	movlw	252
 25712  009D4C  1764               	andwf	i2c_sendData@data& (0+255),f,b
 25713  009D4E  0E0F               	movlw	15
 25714  009D50  1765               	andwf	(i2c_sendData@data+1)& (0+255),f,b
 25715                           
 25716                           ; BSR set to: 0
 25717                           ;I2C.c: 138: high = data >>8;
 25718  009D52  5165               	movf	(i2c_sendData@data+1)& (0+255),w,b
 25719  009D54  0101               	movlb	1	; () banked
 25720  009D56  6F22               	movwf	_high& (0+255),b
 25721                           
 25722                           ; BSR set to: 1
 25723                           ;I2C.c: 139: low = data & 0x00FF;
 25724  009D58  C064  F121         	movff	i2c_sendData@data,_low
 25725                           
 25726                           ; BSR set to: 1
 25727                           ;I2C.c: 140: i2c_sdaWrite(high);
 25728  009D5C  5122               	movf	_high& (0+255),w,b
 25729  009D5E  EC51  F048         	call	_i2c_sdaWrite
 25730                           
 25731                           ;I2C.c: 141: i2c_sdaWrite(low);
 25732  009D62  0101               	movlb	1	; () banked
 25733  009D64  5121               	movf	_low& (0+255),w,b
 25734  009D66  EC51  F048         	call	_i2c_sdaWrite
 25735  009D6A  0012               	return		;funcret
 25736  009D6C                     __end_of_i2c_sendData:
 25737                           	opt callstack 0
 25738                           
 25739 ;; *************** function _i2c_sdaWrite *****************
 25740 ;; Defined at:
 25741 ;;		line 53 in file "I2C.c"
 25742 ;; Parameters:    Size  Location     Type
 25743 ;;  data            1    wreg     unsigned char 
 25744 ;; Auto vars:     Size  Location     Type
 25745 ;;  data            1    2[BANK0 ] unsigned char 
 25746 ;;  i               1    3[BANK0 ] char 
 25747 ;; Return value:  Size  Location     Type
 25748 ;;                  1    wreg      unsigned char 
 25749 ;; Registers used:
 25750 ;;		wreg, status,2, status,0, cstack
 25751 ;; Tracked objects:
 25752 ;;		On entry : 0/0
 25753 ;;		On exit  : 0/0
 25754 ;;		Unchanged: 0/0
 25755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25757 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25758 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25759 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25760 ;;Total ram usage:        4 bytes
 25761 ;; Hardware stack levels used:    1
 25762 ;; Hardware stack levels required when called:    8
 25763 ;; This function calls:
 25764 ;;		_i2c_waitACK
 25765 ;; This function is called by:
 25766 ;;		_i2c_sendData
 25767 ;; This function uses a non-reentrant model
 25768 ;;
 25769                           
 25770                           	psect	text132
 25771  0090A2                     __ptext132:
 25772                           	opt callstack 0
 25773  0090A2                     _i2c_sdaWrite:
 25774                           	opt callstack 18
 25775                           
 25776                           ;incstack = 0
 25777                           ;i2c_sdaWrite@data stored from wreg
 25778  0090A2  0100               	movlb	0	; () banked
 25779  0090A4  6F62               	movwf	i2c_sdaWrite@data& (0+255),b
 25780                           
 25781                           ;I2C.c: 55: flag = 0;
 25782  0090A6  0E00               	movlw	0
 25783  0090A8  6E40               	movwf	I2C@flag,c
 25784                           
 25785                           ;I2C.c: 57: for(int8_t i = 7; i > -1; i--){
 25786  0090AA  0E07               	movlw	7
 25787  0090AC  0100               	movlb	0	; () banked
 25788  0090AE  6F63               	movwf	i2c_sdaWrite@i& (0+255),b
 25789  0090B0                     l15130:
 25790                           
 25791                           ; BSR set to: 0
 25792                           ;I2C.c: 58: if(flag){
 25793  0090B0  5040               	movf	I2C@flag,w,c
 25794  0090B2  B4D8               	btfsc	status,2,c
 25795  0090B4  D002               	goto	u15450
 25796  0090B6                     u15440:
 25797  0090B6  A084               	btfss	3972,0,c	;volatile
 25798  0090B8  D7FE               	goto	u15440
 25799  0090BA                     u15450:
 25800  0090BA  B084               	btfsc	3972,0,c	;volatile
 25801  0090BC  D7FE               	goto	u15450
 25802                           
 25803                           ;I2C.c: 63: if(data & (1 << i)){
 25804  0090BE  C063  F060         	movff	i2c_sdaWrite@i,??_i2c_sdaWrite
 25805  0090C2  0E01               	movlw	1
 25806  0090C4  0100               	movlb	0	; () banked
 25807  0090C6  6F61               	movwf	(??_i2c_sdaWrite+1)& (0+255),b
 25808  0090C8  2B60               	incf	??_i2c_sdaWrite& (0+255),f,b
 25809  0090CA  D002               	goto	u15474
 25810  0090CC                     u15475:
 25811  0090CC  90D8               	bcf	status,0,c
 25812  0090CE  3761               	rlcf	(??_i2c_sdaWrite+1)& (0+255),f,b
 25813  0090D0                     u15474:
 25814  0090D0  2F60               	decfsz	??_i2c_sdaWrite& (0+255),f,b
 25815  0090D2  D7FC               	goto	u15475
 25816  0090D4  0100               	movlb	0	; () banked
 25817  0090D6  5161               	movf	(??_i2c_sdaWrite+1)& (0+255),w,b
 25818  0090D8  1562               	andwf	i2c_sdaWrite@data& (0+255),w,b
 25819  0090DA  0900               	iorlw	0
 25820  0090DC  B4D8               	btfsc	status,2,c
 25821  0090DE  D002               	goto	l15138
 25822                           
 25823                           ; BSR set to: 0
 25824                           ;I2C.c: 64: LATE |= 0x2;
 25825  0090E0  828D               	bsf	3981,1,c	;volatile
 25826                           
 25827                           ;I2C.c: 65: }
 25828  0090E2  D001               	goto	l15140
 25829  0090E4                     l15138:
 25830                           
 25831                           ; BSR set to: 0
 25832                           ;I2C.c: 66: else{;I2C.c: 67: LATE &= ~0x2;
 25833  0090E4  928D               	bcf	3981,1,c	;volatile
 25834  0090E6                     l15140:
 25835                           
 25836                           ; BSR set to: 0
 25837                           ;I2C.c: 68: };I2C.c: 69: flag = 1;
 25838  0090E6  0E01               	movlw	1
 25839  0090E8  6E40               	movwf	I2C@flag,c
 25840                           
 25841                           ; BSR set to: 0
 25842  0090EA  0763               	decf	i2c_sdaWrite@i& (0+255),f,b
 25843                           
 25844                           ; BSR set to: 0
 25845  0090EC  AF63               	btfss	i2c_sdaWrite@i& (0+255),7,b
 25846  0090EE  D7E0               	goto	l15130
 25847  0090F0                     u15490:
 25848  0090F0  A084               	btfss	3972,0,c	;volatile
 25849  0090F2  D7FE               	goto	u15490
 25850  0090F4                     u15500:
 25851  0090F4  B084               	btfsc	3972,0,c	;volatile
 25852  0090F6  D7FE               	goto	u15500
 25853                           
 25854                           ;I2C.c: 73: return i2c_waitACK();;	Return value of _i2c_sdaWrite is never used
 25855  0090F8  EC6B  F052         	call	_i2c_waitACK	;wreg free
 25856  0090FC  0012               	return		;funcret
 25857  0090FE                     __end_of_i2c_sdaWrite:
 25858                           	opt callstack 0
 25859                           
 25860 ;; *************** function _i2c_waitACK *****************
 25861 ;; Defined at:
 25862 ;;		line 112 in file "I2C.c"
 25863 ;; Parameters:    Size  Location     Type
 25864 ;;		None
 25865 ;; Auto vars:     Size  Location     Type
 25866 ;;		None
 25867 ;; Return value:  Size  Location     Type
 25868 ;;                  1    wreg      unsigned char 
 25869 ;; Registers used:
 25870 ;;		wreg, status,2, status,0
 25871 ;; Tracked objects:
 25872 ;;		On entry : 0/0
 25873 ;;		On exit  : 0/0
 25874 ;;		Unchanged: 0/0
 25875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25880 ;;Total ram usage:        0 bytes
 25881 ;; Hardware stack levels used:    1
 25882 ;; Hardware stack levels required when called:    7
 25883 ;; This function calls:
 25884 ;;		Nothing
 25885 ;; This function is called by:
 25886 ;;		_sinGenStart
 25887 ;;		_i2c_sdaWrite
 25888 ;;		_i2c_sdaAddress
 25889 ;; This function uses a non-reentrant model
 25890 ;;
 25891                           
 25892                           	psect	text133
 25893  00A4D6                     __ptext133:
 25894                           	opt callstack 0
 25895  00A4D6                     _i2c_waitACK:
 25896                           	opt callstack 20
 25897                           
 25898                           ;I2C.c: 118: TRISE |= (0x2);
 25899                           
 25900                           ;incstack = 0
 25901  00A4D6  8296               	bsf	3990,1,c	;volatile
 25902  00A4D8                     l3487:
 25903  00A4D8  A084               	btfss	3972,0,c	;volatile
 25904  00A4DA  D7FE               	goto	l3487
 25905                           
 25906                           ;I2C.c: 125: nACK = (PORTE & 0x2);
 25907  00A4DC  5084               	movf	3972,w,c	;volatile
 25908  00A4DE  0B02               	andlw	2
 25909  00A4E0  0101               	movlb	1	; () banked
 25910  00A4E2  6F20               	movwf	_nACK& (0+255),b
 25911                           
 25912                           ; BSR set to: 1
 25913                           ;I2C.c: 127: TRISE &= ~(0x2);
 25914  00A4E4  9296               	bcf	3990,1,c	;volatile
 25915  00A4E6                     l3490:
 25916  00A4E6  B084               	btfsc	3972,0,c	;volatile
 25917  00A4E8  D7FE               	goto	l3490
 25918                           
 25919                           ;I2C.c: 131: return nACK;
 25920  00A4EA  0101               	movlb	1	; () banked
 25921  00A4EC  5120               	movf	_nACK& (0+255),w,b
 25922                           
 25923                           ; BSR set to: 1
 25924  00A4EE  0012               	return		;funcret
 25925  00A4F0                     __end_of_i2c_waitACK:
 25926                           	opt callstack 0
 25927                           
 25928 ;; *************** function _TMR5_StopTimer *****************
 25929 ;; Defined at:
 25930 ;;		line 104 in file "mcc_generated_files/tmr5.c"
 25931 ;; Parameters:    Size  Location     Type
 25932 ;;		None
 25933 ;; Auto vars:     Size  Location     Type
 25934 ;;		None
 25935 ;; Return value:  Size  Location     Type
 25936 ;;                  1    wreg      void 
 25937 ;; Registers used:
 25938 ;;		None
 25939 ;; Tracked objects:
 25940 ;;		On entry : 0/0
 25941 ;;		On exit  : 0/0
 25942 ;;		Unchanged: 0/0
 25943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25948 ;;Total ram usage:        0 bytes
 25949 ;; Hardware stack levels used:    1
 25950 ;; Hardware stack levels required when called:    7
 25951 ;; This function calls:
 25952 ;;		Nothing
 25953 ;; This function is called by:
 25954 ;;		_sinGenStart
 25955 ;; This function uses a non-reentrant model
 25956 ;;
 25957                           
 25958                           	psect	text134
 25959  00A7EC                     __ptext134:
 25960                           	opt callstack 0
 25961  00A7EC                     _TMR5_StopTimer:
 25962                           	opt callstack 20
 25963                           
 25964                           ;tmr5.c: 107: T5CONbits.TMR5ON = 0;
 25965                           
 25966                           ; BSR set to: 1
 25967                           ;incstack = 0
 25968  00A7EC  010F               	movlb	15	; () banked
 25969  00A7EE  914E               	bcf	78,0,b	;volatile
 25970                           
 25971                           ; BSR set to: 15
 25972  00A7F0  0012               	return		;funcret
 25973  00A7F2                     __end_of_TMR5_StopTimer:
 25974                           	opt callstack 0
 25975                           
 25976 ;; *************** function _TMR5_StartTimer *****************
 25977 ;; Defined at:
 25978 ;;		line 97 in file "mcc_generated_files/tmr5.c"
 25979 ;; Parameters:    Size  Location     Type
 25980 ;;		None
 25981 ;; Auto vars:     Size  Location     Type
 25982 ;;		None
 25983 ;; Return value:  Size  Location     Type
 25984 ;;                  1    wreg      void 
 25985 ;; Registers used:
 25986 ;;		None
 25987 ;; Tracked objects:
 25988 ;;		On entry : 0/0
 25989 ;;		On exit  : 0/0
 25990 ;;		Unchanged: 0/0
 25991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25996 ;;Total ram usage:        0 bytes
 25997 ;; Hardware stack levels used:    1
 25998 ;; Hardware stack levels required when called:    7
 25999 ;; This function calls:
 26000 ;;		Nothing
 26001 ;; This function is called by:
 26002 ;;		_main
 26003 ;;		_sinGenStart
 26004 ;; This function uses a non-reentrant model
 26005 ;;
 26006                           
 26007                           	psect	text135
 26008  00A7F2                     __ptext135:
 26009                           	opt callstack 0
 26010  00A7F2                     _TMR5_StartTimer:
 26011                           	opt callstack 20
 26012                           
 26013                           ;tmr5.c: 100: T5CONbits.TMR5ON = 1;
 26014                           
 26015                           ; BSR set to: 15
 26016                           ;incstack = 0
 26017  00A7F2  010F               	movlb	15	; () banked
 26018  00A7F4  814E               	bsf	78,0,b	;volatile
 26019                           
 26020                           ; BSR set to: 15
 26021  00A7F6  0012               	return		;funcret
 26022  00A7F8                     __end_of_TMR5_StartTimer:
 26023                           	opt callstack 0
 26024                           
 26025 ;; *************** function _TMR3_StopTimer *****************
 26026 ;; Defined at:
 26027 ;;		line 101 in file "mcc_generated_files/tmr3.c"
 26028 ;; Parameters:    Size  Location     Type
 26029 ;;		None
 26030 ;; Auto vars:     Size  Location     Type
 26031 ;;		None
 26032 ;; Return value:  Size  Location     Type
 26033 ;;                  1    wreg      void 
 26034 ;; Registers used:
 26035 ;;		None
 26036 ;; Tracked objects:
 26037 ;;		On entry : 0/0
 26038 ;;		On exit  : 0/0
 26039 ;;		Unchanged: 0/0
 26040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26045 ;;Total ram usage:        0 bytes
 26046 ;; Hardware stack levels used:    1
 26047 ;; Hardware stack levels required when called:    7
 26048 ;; This function calls:
 26049 ;;		Nothing
 26050 ;; This function is called by:
 26051 ;;		_sinGenStart
 26052 ;;		_i2c_sclStop
 26053 ;; This function uses a non-reentrant model
 26054 ;;
 26055                           
 26056                           	psect	text136
 26057  00A802                     __ptext136:
 26058                           	opt callstack 0
 26059  00A802                     _TMR3_StopTimer:
 26060                           	opt callstack 20
 26061                           
 26062                           ;tmr3.c: 104: T3CONbits.TMR3ON = 0;
 26063                           
 26064                           ; BSR set to: 15
 26065                           ;incstack = 0
 26066  00A802  90B1               	bcf	4017,0,c	;volatile
 26067  00A804  0012               	return		;funcret
 26068  00A806                     __end_of_TMR3_StopTimer:
 26069                           	opt callstack 0
 26070                           
 26071 ;; *************** function _TMR3_StartTimer *****************
 26072 ;; Defined at:
 26073 ;;		line 95 in file "mcc_generated_files/tmr3.c"
 26074 ;; Parameters:    Size  Location     Type
 26075 ;;		None
 26076 ;; Auto vars:     Size  Location     Type
 26077 ;;		None
 26078 ;; Return value:  Size  Location     Type
 26079 ;;                  1    wreg      void 
 26080 ;; Registers used:
 26081 ;;		None
 26082 ;; Tracked objects:
 26083 ;;		On entry : 0/0
 26084 ;;		On exit  : 0/0
 26085 ;;		Unchanged: 0/0
 26086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26091 ;;Total ram usage:        0 bytes
 26092 ;; Hardware stack levels used:    1
 26093 ;; Hardware stack levels required when called:    7
 26094 ;; This function calls:
 26095 ;;		Nothing
 26096 ;; This function is called by:
 26097 ;;		_sinGenStart
 26098 ;;		_i2c_sclStart
 26099 ;; This function uses a non-reentrant model
 26100 ;;
 26101                           
 26102                           	psect	text137
 26103  00A806                     __ptext137:
 26104                           	opt callstack 0
 26105  00A806                     _TMR3_StartTimer:
 26106                           	opt callstack 20
 26107                           
 26108                           ;tmr3.c: 98: T3CONbits.TMR3ON = 1;
 26109                           
 26110                           ;incstack = 0
 26111  00A806  80B1               	bsf	4017,0,c	;volatile
 26112  00A808  0012               	return		;funcret
 26113  00A80A                     __end_of_TMR3_StartTimer:
 26114                           	opt callstack 0
 26115                           
 26116 ;; *************** function _averageMeasure *****************
 26117 ;; Defined at:
 26118 ;;		line 435 in file "acuadori.c"
 26119 ;; Parameters:    Size  Location     Type
 26120 ;;		None
 26121 ;; Auto vars:     Size  Location     Type
 26122 ;;  i               2   20[BANK0 ] unsigned int 
 26123 ;;  value           3   17[BANK0 ] unsigned um
 26124 ;; Return value:  Size  Location     Type
 26125 ;;                  2   10[BANK0 ] unsigned int 
 26126 ;; Registers used:
 26127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26128 ;; Tracked objects:
 26129 ;;		On entry : 0/0
 26130 ;;		On exit  : 0/0
 26131 ;;		Unchanged: 0/0
 26132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26134 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26135 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26136 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26137 ;;Total ram usage:       12 bytes
 26138 ;; Hardware stack levels used:    1
 26139 ;; Hardware stack levels required when called:    8
 26140 ;; This function calls:
 26141 ;;		___ltdiv
 26142 ;; This function is called by:
 26143 ;;		_impedenceAcquisition
 26144 ;; This function uses a non-reentrant model
 26145 ;;
 26146                           
 26147                           	psect	text138
 26148  0082C2                     __ptext138:
 26149                           	opt callstack 0
 26150  0082C2                     _averageMeasure:
 26151                           	opt callstack 20
 26152                           
 26153                           ;acuadori.c: 436: uint24_t value = 0;
 26154                           
 26155                           ;incstack = 0
 26156  0082C2  0E00               	movlw	0
 26157  0082C4  0100               	movlb	0	; () banked
 26158  0082C6  6F71               	movwf	averageMeasure@value& (0+255),b
 26159  0082C8  0E00               	movlw	0
 26160  0082CA  6F72               	movwf	(averageMeasure@value+1)& (0+255),b
 26161  0082CC  0E00               	movlw	0
 26162  0082CE  6F73               	movwf	(averageMeasure@value+2)& (0+255),b
 26163                           
 26164                           ;acuadori.c: 437: for(uint16_t i=0; i<(200); i++){
 26165  0082D0  0E00               	movlw	0
 26166  0082D2  6F75               	movwf	(averageMeasure@i+1)& (0+255),b
 26167  0082D4  0E00               	movlw	0
 26168  0082D6  6F74               	movwf	averageMeasure@i& (0+255),b
 26169  0082D8                     l16198:
 26170                           
 26171                           ; BSR set to: 0
 26172                           ;acuadori.c: 438: value += capValues[i];
 26173  0082D8  90D8               	bcf	status,0,c
 26174  0082DA  3574               	rlcf	averageMeasure@i& (0+255),w,b
 26175  0082DC  6ED9               	movwf	fsr2l,c
 26176  0082DE  3575               	rlcf	(averageMeasure@i+1)& (0+255),w,b
 26177  0082E0  6EDA               	movwf	fsr2h,c
 26178  0082E2  0E28               	movlw	low _capValues
 26179  0082E4  26D9               	addwf	fsr2l,f,c
 26180  0082E6  0E05               	movlw	high _capValues
 26181  0082E8  22DA               	addwfc	fsr2h,f,c
 26182  0082EA  CFDE F06C          	movff	postinc2,??_averageMeasure
 26183  0082EE  CFDD F06D          	movff	postdec2,??_averageMeasure+1
 26184  0082F2  C06C  F06E         	movff	??_averageMeasure,??_averageMeasure+2
 26185  0082F6  C06D  F06F         	movff	??_averageMeasure+1,??_averageMeasure+3
 26186  0082FA  6B70               	clrf	(??_averageMeasure+4)& (0+255),b
 26187  0082FC  516E               	movf	(??_averageMeasure+2)& (0+255),w,b
 26188  0082FE  2771               	addwf	averageMeasure@value& (0+255),f,b
 26189  008300  516F               	movf	(??_averageMeasure+3)& (0+255),w,b
 26190  008302  2372               	addwfc	(averageMeasure@value+1)& (0+255),f,b
 26191  008304  5170               	movf	(??_averageMeasure+4)& (0+255),w,b
 26192  008306  2373               	addwfc	(averageMeasure@value+2)& (0+255),f,b
 26193                           
 26194                           ; BSR set to: 0
 26195  008308  4B74               	infsnz	averageMeasure@i& (0+255),f,b
 26196  00830A  2B75               	incf	(averageMeasure@i+1)& (0+255),f,b
 26197                           
 26198                           ; BSR set to: 0
 26199  00830C  5175               	movf	(averageMeasure@i+1)& (0+255),w,b
 26200  00830E  E104               	bnz	u16830
 26201  008310  0EC8               	movlw	200
 26202  008312  5D74               	subwf	averageMeasure@i& (0+255),w,b
 26203  008314  A0D8               	btfss	status,0,c
 26204  008316  D7E0               	goto	l16198
 26205  008318                     u16830:
 26206                           
 26207                           ; BSR set to: 0
 26208                           ;acuadori.c: 439: };acuadori.c: 440: value/= 200;
 26209  008318  C071  F060         	movff	averageMeasure@value,___ltdiv@dividend
 26210  00831C  C072  F061         	movff	averageMeasure@value+1,___ltdiv@dividend+1
 26211  008320  C073  F062         	movff	averageMeasure@value+2,___ltdiv@dividend+2
 26212  008324  0EC8               	movlw	200
 26213  008326  6F63               	movwf	___ltdiv@divisor& (0+255),b
 26214  008328  0E00               	movlw	0
 26215  00832A  6F64               	movwf	(___ltdiv@divisor+1)& (0+255),b
 26216  00832C  0E00               	movlw	0
 26217  00832E  6F65               	movwf	(___ltdiv@divisor+2)& (0+255),b
 26218  008330  ECC1  F045         	call	___ltdiv	;wreg free
 26219  008334  C060  F071         	movff	?___ltdiv,averageMeasure@value
 26220  008338  C061  F072         	movff	?___ltdiv+1,averageMeasure@value+1
 26221  00833C  C062  F073         	movff	?___ltdiv+2,averageMeasure@value+2
 26222                           
 26223                           ;acuadori.c: 441: return value;
 26224  008340  C071  F06A         	movff	averageMeasure@value,?_averageMeasure
 26225  008344  C072  F06B         	movff	averageMeasure@value+1,?_averageMeasure+1
 26226  008348  0012               	return		;funcret
 26227  00834A                     __end_of_averageMeasure:
 26228                           	opt callstack 0
 26229                           
 26230 ;; *************** function ___ltdiv *****************
 26231 ;; Defined at:
 26232 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ltdiv.c"
 26233 ;; Parameters:    Size  Location     Type
 26234 ;;  dividend        3    0[BANK0 ] unsigned um
 26235 ;;  divisor         3    3[BANK0 ] unsigned um
 26236 ;; Auto vars:     Size  Location     Type
 26237 ;;  quotient        3    6[BANK0 ] unsigned um
 26238 ;;  counter         1    9[BANK0 ] unsigned char 
 26239 ;; Return value:  Size  Location     Type
 26240 ;;                  3    0[BANK0 ] unsigned um
 26241 ;; Registers used:
 26242 ;;		wreg, status,2, status,0
 26243 ;; Tracked objects:
 26244 ;;		On entry : 0/0
 26245 ;;		On exit  : 0/0
 26246 ;;		Unchanged: 0/0
 26247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26248 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26249 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26251 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26252 ;;Total ram usage:       10 bytes
 26253 ;; Hardware stack levels used:    1
 26254 ;; Hardware stack levels required when called:    7
 26255 ;; This function calls:
 26256 ;;		Nothing
 26257 ;; This function is called by:
 26258 ;;		_GPIOAverageRead
 26259 ;;		_averageMeasure
 26260 ;; This function uses a non-reentrant model
 26261 ;;
 26262                           
 26263                           	psect	text139
 26264  008B82                     __ptext139:
 26265                           	opt callstack 0
 26266  008B82                     ___ltdiv:
 26267                           	opt callstack 20
 26268                           
 26269                           ;incstack = 0
 26270  008B82  0E00               	movlw	0
 26271  008B84  0100               	movlb	0	; () banked
 26272  008B86  6F66               	movwf	___ltdiv@quotient& (0+255),b
 26273  008B88  0E00               	movlw	0
 26274  008B8A  6F67               	movwf	(___ltdiv@quotient+1)& (0+255),b
 26275  008B8C  0E00               	movlw	0
 26276  008B8E  6F68               	movwf	(___ltdiv@quotient+2)& (0+255),b
 26277                           
 26278                           ; BSR set to: 0
 26279  008B90  5163               	movf	___ltdiv@divisor& (0+255),w,b
 26280  008B92  1164               	iorwf	(___ltdiv@divisor+1)& (0+255),w,b
 26281  008B94  1165               	iorwf	(___ltdiv@divisor+2)& (0+255),w,b
 26282  008B96  B4D8               	btfsc	status,2,c
 26283  008B98  D023               	goto	l3977
 26284                           
 26285                           ; BSR set to: 0
 26286  008B9A  0E01               	movlw	1
 26287  008B9C  6F69               	movwf	___ltdiv@counter& (0+255),b
 26288  008B9E  D005               	goto	l15158
 26289  008BA0                     l15156:
 26290                           
 26291                           ; BSR set to: 0
 26292  008BA0  90D8               	bcf	status,0,c
 26293  008BA2  3763               	rlcf	___ltdiv@divisor& (0+255),f,b
 26294  008BA4  3764               	rlcf	(___ltdiv@divisor+1)& (0+255),f,b
 26295  008BA6  3765               	rlcf	(___ltdiv@divisor+2)& (0+255),f,b
 26296  008BA8  2B69               	incf	___ltdiv@counter& (0+255),f,b
 26297  008BAA                     l15158:
 26298                           
 26299                           ; BSR set to: 0
 26300  008BAA  AF65               	btfss	(___ltdiv@divisor+2)& (0+255),7,b
 26301  008BAC  D7F9               	goto	l15156
 26302  008BAE                     u15530:
 26303                           
 26304                           ; BSR set to: 0
 26305  008BAE  90D8               	bcf	status,0,c
 26306  008BB0  3766               	rlcf	___ltdiv@quotient& (0+255),f,b
 26307  008BB2  3767               	rlcf	(___ltdiv@quotient+1)& (0+255),f,b
 26308  008BB4  3768               	rlcf	(___ltdiv@quotient+2)& (0+255),f,b
 26309                           
 26310                           ; BSR set to: 0
 26311  008BB6  5163               	movf	___ltdiv@divisor& (0+255),w,b
 26312  008BB8  5D60               	subwf	___ltdiv@dividend& (0+255),w,b
 26313  008BBA  5164               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 26314  008BBC  5961               	subwfb	(___ltdiv@dividend+1)& (0+255),w,b
 26315  008BBE  5165               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 26316  008BC0  5962               	subwfb	(___ltdiv@dividend+2)& (0+255),w,b
 26317  008BC2  A0D8               	btfss	status,0,c
 26318  008BC4  D007               	goto	l3982
 26319                           
 26320                           ; BSR set to: 0
 26321  008BC6  5163               	movf	___ltdiv@divisor& (0+255),w,b
 26322  008BC8  5F60               	subwf	___ltdiv@dividend& (0+255),f,b
 26323  008BCA  5164               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 26324  008BCC  5B61               	subwfb	(___ltdiv@dividend+1)& (0+255),f,b
 26325  008BCE  5165               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 26326  008BD0  5B62               	subwfb	(___ltdiv@dividend+2)& (0+255),f,b
 26327                           
 26328                           ; BSR set to: 0
 26329  008BD2  8166               	bsf	___ltdiv@quotient& (0+255),0,b
 26330  008BD4                     l3982:
 26331                           
 26332                           ; BSR set to: 0
 26333  008BD4  90D8               	bcf	status,0,c
 26334  008BD6  3365               	rrcf	(___ltdiv@divisor+2)& (0+255),f,b
 26335  008BD8  3364               	rrcf	(___ltdiv@divisor+1)& (0+255),f,b
 26336  008BDA  3363               	rrcf	___ltdiv@divisor& (0+255),f,b
 26337                           
 26338                           ; BSR set to: 0
 26339  008BDC  2F69               	decfsz	___ltdiv@counter& (0+255),f,b
 26340  008BDE  D7E7               	goto	u15530
 26341  008BE0                     l3977:
 26342                           
 26343                           ; BSR set to: 0
 26344  008BE0  C066  F060         	movff	___ltdiv@quotient,?___ltdiv
 26345  008BE4  C067  F061         	movff	___ltdiv@quotient+1,?___ltdiv+1
 26346  008BE8  C068  F062         	movff	___ltdiv@quotient+2,?___ltdiv+2
 26347                           
 26348                           ; BSR set to: 0
 26349  008BEC  0012               	return		;funcret
 26350  008BEE                     __end_of___ltdiv:
 26351                           	opt callstack 0
 26352                           
 26353 ;; *************** function _adaptString *****************
 26354 ;; Defined at:
 26355 ;;		line 363 in file "rn2483APP.c"
 26356 ;; Parameters:    Size  Location     Type
 26357 ;;  string          2    0[BANK0 ] PTR unsigned char 
 26358 ;;		 -> stringValue(5), 
 26359 ;;  length          1    2[BANK0 ] unsigned char 
 26360 ;; Auto vars:     Size  Location     Type
 26361 ;;  i               1    7[BANK0 ] unsigned char 
 26362 ;;  deleteElem      1    6[BANK0 ] unsigned char 
 26363 ;;  flag            1    5[BANK0 ] unsigned char 
 26364 ;; Return value:  Size  Location     Type
 26365 ;;                  1    wreg      unsigned char 
 26366 ;; Registers used:
 26367 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 26368 ;; Tracked objects:
 26369 ;;		On entry : 0/0
 26370 ;;		On exit  : 0/0
 26371 ;;		Unchanged: 0/0
 26372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26373 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26374 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26375 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26376 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26377 ;;Total ram usage:        8 bytes
 26378 ;; Hardware stack levels used:    1
 26379 ;; Hardware stack levels required when called:    7
 26380 ;; This function calls:
 26381 ;;		Nothing
 26382 ;; This function is called by:
 26383 ;;		_tempSensAcquisition
 26384 ;;		_lightSensAcquisition
 26385 ;;		_leafSensAcquisition
 26386 ;;		_impedenceAcquisition
 26387 ;; This function uses a non-reentrant model
 26388 ;;
 26389                           
 26390                           	psect	text140
 26391  0088C4                     __ptext140:
 26392                           	opt callstack 0
 26393  0088C4                     _adaptString:
 26394                           	opt callstack 21
 26395                           
 26396                           ;rn2483APP.c: 364: uint8_t deleteElem = 0;
 26397                           
 26398                           ; BSR set to: 0
 26399                           ;incstack = 0
 26400  0088C4  0E00               	movlw	0
 26401  0088C6  0100               	movlb	0	; () banked
 26402  0088C8  6F66               	movwf	adaptString@deleteElem& (0+255),b
 26403                           
 26404                           ;rn2483APP.c: 365: bool flag = 0;
 26405  0088CA  0E00               	movlw	0
 26406  0088CC  6F65               	movwf	adaptString@flag& (0+255),b
 26407                           
 26408                           ;rn2483APP.c: 367: for(uint8_t i = 0; i<length; i++){
 26409  0088CE  0E00               	movlw	0
 26410  0088D0  6F67               	movwf	adaptString@i& (0+255),b
 26411  0088D2  D027               	goto	l16054
 26412  0088D4                     l16042:
 26413                           
 26414                           ; BSR set to: 0
 26415                           ;rn2483APP.c: 368: if(string[i]== 0x30 && !flag){
 26416  0088D4  5167               	movf	adaptString@i& (0+255),w,b
 26417  0088D6  2560               	addwf	adaptString@string& (0+255),w,b
 26418  0088D8  6ED9               	movwf	fsr2l,c
 26419  0088DA  0E00               	movlw	0
 26420  0088DC  2161               	addwfc	(adaptString@string+1)& (0+255),w,b
 26421  0088DE  6EDA               	movwf	fsr2h,c
 26422  0088E0  0E30               	movlw	48
 26423  0088E2  18DE               	xorwf	postinc2,w,c
 26424  0088E4  A4D8               	btfss	status,2,c
 26425  0088E6  D005               	goto	l16048
 26426                           
 26427                           ; BSR set to: 0
 26428  0088E8  5165               	movf	adaptString@flag& (0+255),w,b
 26429  0088EA  A4D8               	btfss	status,2,c
 26430  0088EC  D002               	goto	l16048
 26431                           
 26432                           ; BSR set to: 0
 26433                           ;rn2483APP.c: 369: deleteElem++;
 26434  0088EE  2B66               	incf	adaptString@deleteElem& (0+255),f,b
 26435                           
 26436                           ;rn2483APP.c: 370: }
 26437  0088F0  D017               	goto	l16052
 26438  0088F2                     l16048:
 26439                           
 26440                           ; BSR set to: 0
 26441                           ;rn2483APP.c: 371: else{;rn2483APP.c: 372: string[i-deleteElem] = string[i];
 26442  0088F2  5167               	movf	adaptString@i& (0+255),w,b
 26443  0088F4  2560               	addwf	adaptString@string& (0+255),w,b
 26444  0088F6  6ED9               	movwf	fsr2l,c
 26445  0088F8  0E00               	movlw	0
 26446  0088FA  2161               	addwfc	(adaptString@string+1)& (0+255),w,b
 26447  0088FC  6EDA               	movwf	fsr2h,c
 26448  0088FE  5167               	movf	adaptString@i& (0+255),w,b
 26449  008900  2560               	addwf	adaptString@string& (0+255),w,b
 26450  008902  6F63               	movwf	??_adaptString& (0+255),b
 26451  008904  0E00               	movlw	0
 26452  008906  2161               	addwfc	(adaptString@string+1)& (0+255),w,b
 26453  008908  6F64               	movwf	(??_adaptString+1)& (0+255),b
 26454  00890A  5166               	movf	adaptString@deleteElem& (0+255),w,b
 26455  00890C  5D63               	subwf	??_adaptString& (0+255),w,b
 26456  00890E  6EE9               	movwf	fsr0l,c
 26457  008910  5164               	movf	(??_adaptString+1)& (0+255),w,b
 26458  008912  A0D8               	btfss	status,0,c
 26459  008914  0564               	decf	(??_adaptString+1)& (0+255),w,b
 26460  008916  6EEA               	movwf	fsr0h,c
 26461  008918  CFDF FFEF          	movff	indf2,indf0
 26462                           
 26463                           ; BSR set to: 0
 26464                           ;rn2483APP.c: 373: flag=1;
 26465  00891C  0E01               	movlw	1
 26466  00891E  6F65               	movwf	adaptString@flag& (0+255),b
 26467  008920                     l16052:
 26468                           
 26469                           ; BSR set to: 0
 26470  008920  2B67               	incf	adaptString@i& (0+255),f,b
 26471  008922                     l16054:
 26472                           
 26473                           ; BSR set to: 0
 26474  008922  5162               	movf	adaptString@length& (0+255),w,b
 26475  008924  5D67               	subwf	adaptString@i& (0+255),w,b
 26476  008926  A0D8               	btfss	status,0,c
 26477  008928  D7D5               	goto	l16042
 26478                           
 26479                           ; BSR set to: 0
 26480                           ;rn2483APP.c: 374: };rn2483APP.c: 375: };rn2483APP.c: 377: if (deleteElem == length){
 26481  00892A  5162               	movf	adaptString@length& (0+255),w,b
 26482  00892C  1966               	xorwf	adaptString@deleteElem& (0+255),w,b
 26483  00892E  A4D8               	btfss	status,2,c
 26484  008930  D002               	goto	l16062
 26485                           
 26486                           ; BSR set to: 0
 26487                           ;rn2483APP.c: 378: return 1;
 26488  008932  0E01               	movlw	1
 26489  008934  0012               	return	
 26490  008936                     l16062:
 26491                           
 26492                           ; BSR set to: 0
 26493                           ;rn2483APP.c: 379: };rn2483APP.c: 380: return length-deleteElem;
 26494  008936  5166               	movf	adaptString@deleteElem& (0+255),w,b
 26495  008938  5D62               	subwf	adaptString@length& (0+255),w,b
 26496                           
 26497                           ; BSR set to: 0
 26498  00893A  0012               	return		;funcret
 26499  00893C                     __end_of_adaptString:
 26500                           	opt callstack 0
 26501                           
 26502 ;; *************** function _LORAWAN_SetUplinkCounter *****************
 26503 ;; Defined at:
 26504 ;;		line 486 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26505 ;; Parameters:    Size  Location     Type
 26506 ;;  ctr             4    0[BANK0 ] unsigned long 
 26507 ;; Auto vars:     Size  Location     Type
 26508 ;;		None
 26509 ;; Return value:  Size  Location     Type
 26510 ;;                  1    wreg      void 
 26511 ;; Registers used:
 26512 ;;		None
 26513 ;; Tracked objects:
 26514 ;;		On entry : 0/0
 26515 ;;		On exit  : 0/0
 26516 ;;		Unchanged: 0/0
 26517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26518 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26521 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26522 ;;Total ram usage:        4 bytes
 26523 ;; Hardware stack levels used:    1
 26524 ;; Hardware stack levels required when called:    7
 26525 ;; This function calls:
 26526 ;;		Nothing
 26527 ;; This function is called by:
 26528 ;;		_acuadoriApp
 26529 ;; This function uses a non-reentrant model
 26530 ;;
 26531                           
 26532                           	psect	text141
 26533  00A5D0                     __ptext141:
 26534                           	opt callstack 0
 26535  00A5D0                     _LORAWAN_SetUplinkCounter:
 26536                           	opt callstack 22
 26537                           
 26538                           ;lorawan.c: 488: loRa.fCntUp.value = ctr;
 26539                           
 26540                           ; BSR set to: 0
 26541                           ;incstack = 0
 26542  00A5D0  C060  F20B         	movff	LORAWAN_SetUplinkCounter@ctr,_loRa+6
 26543  00A5D4  C061  F20C         	movff	LORAWAN_SetUplinkCounter@ctr+1,_loRa+7
 26544  00A5D8  C062  F20D         	movff	LORAWAN_SetUplinkCounter@ctr+2,_loRa+8
 26545  00A5DC  C063  F20E         	movff	LORAWAN_SetUplinkCounter@ctr+3,_loRa+9
 26546  00A5E0  0012               	return		;funcret
 26547  00A5E2                     __end_of_LORAWAN_SetUplinkCounter:
 26548                           	opt callstack 0
 26549                           
 26550 ;; *************** function _LORAWAN_GetUplinkCounter *****************
 26551 ;; Defined at:
 26552 ;;		line 491 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26553 ;; Parameters:    Size  Location     Type
 26554 ;;		None
 26555 ;; Auto vars:     Size  Location     Type
 26556 ;;		None
 26557 ;; Return value:  Size  Location     Type
 26558 ;;                  4    0[BANK0 ] unsigned long 
 26559 ;; Registers used:
 26560 ;;		None
 26561 ;; Tracked objects:
 26562 ;;		On entry : 0/0
 26563 ;;		On exit  : 0/0
 26564 ;;		Unchanged: 0/0
 26565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26566 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26569 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26570 ;;Total ram usage:        4 bytes
 26571 ;; Hardware stack levels used:    1
 26572 ;; Hardware stack levels required when called:    7
 26573 ;; This function calls:
 26574 ;;		Nothing
 26575 ;; This function is called by:
 26576 ;;		_acuadoriApp
 26577 ;; This function uses a non-reentrant model
 26578 ;;
 26579                           
 26580                           	psect	text142
 26581  00A5E2                     __ptext142:
 26582                           	opt callstack 0
 26583  00A5E2                     _LORAWAN_GetUplinkCounter:
 26584                           	opt callstack 22
 26585                           
 26586                           ;lorawan.c: 493: return loRa.fCntUp.value;
 26587                           
 26588                           ;incstack = 0
 26589  00A5E2  C20B  F060         	movff	_loRa+6,?_LORAWAN_GetUplinkCounter
 26590  00A5E6  C20C  F061         	movff	_loRa+7,?_LORAWAN_GetUplinkCounter+1
 26591  00A5EA  C20D  F062         	movff	_loRa+8,?_LORAWAN_GetUplinkCounter+2
 26592  00A5EE  C20E  F063         	movff	_loRa+9,?_LORAWAN_GetUplinkCounter+3
 26593  00A5F2  0012               	return		;funcret
 26594  00A5F4                     __end_of_LORAWAN_GetUplinkCounter:
 26595                           	opt callstack 0
 26596                           
 26597 ;; *************** function _SYSTEM_Initialize *****************
 26598 ;; Defined at:
 26599 ;;		line 50 in file "mcc_generated_files/mcc.c"
 26600 ;; Parameters:    Size  Location     Type
 26601 ;;		None
 26602 ;; Auto vars:     Size  Location     Type
 26603 ;;		None
 26604 ;; Return value:  Size  Location     Type
 26605 ;;                  1    wreg      void 
 26606 ;; Registers used:
 26607 ;;		wreg, status,2, status,0, cstack
 26608 ;; Tracked objects:
 26609 ;;		On entry : 0/0
 26610 ;;		On exit  : 0/0
 26611 ;;		Unchanged: 0/0
 26612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26617 ;;Total ram usage:        0 bytes
 26618 ;; Hardware stack levels used:    1
 26619 ;; Hardware stack levels required when called:   10
 26620 ;; This function calls:
 26621 ;;		_ADC_Initialize
 26622 ;;		_EUSART2_Initialize
 26623 ;;		_EXT_INT_Initialize
 26624 ;;		_INTERRUPT_Initialize
 26625 ;;		_LORAWAN_PlatformInit
 26626 ;;		_OSCILLATOR_Initialize
 26627 ;;		_PIN_MANAGER_Initialize
 26628 ;;		_SPI2_Initialize
 26629 ;;		_TMR1_Initialize
 26630 ;;		_TMR3_Initialize
 26631 ;;		_TMR5_Initialize
 26632 ;; This function is called by:
 26633 ;;		_main
 26634 ;; This function uses a non-reentrant model
 26635 ;;
 26636                           
 26637                           	psect	text143
 26638  009DFA                     __ptext143:
 26639                           	opt callstack 0
 26640  009DFA                     _SYSTEM_Initialize:
 26641                           	opt callstack 20
 26642                           
 26643                           ;mcc.c: 53: INTERRUPT_Initialize();
 26644                           
 26645                           ;incstack = 0
 26646  009DFA  EC05  F054         	call	_INTERRUPT_Initialize	;wreg free
 26647                           
 26648                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 26649  009DFE  EC82  F049         	call	_PIN_MANAGER_Initialize	;wreg free
 26650                           
 26651                           ;mcc.c: 55: OSCILLATOR_Initialize();
 26652  009E02  EC4F  F053         	call	_OSCILLATOR_Initialize	;wreg free
 26653                           
 26654                           ;mcc.c: 56: SPI2_Initialize();
 26655  009E06  EC48  F053         	call	_SPI2_Initialize	;wreg free
 26656                           
 26657                           ;mcc.c: 57: ADC_Initialize();
 26658  009E0A  ECAA  F052         	call	_ADC_Initialize	;wreg free
 26659                           
 26660                           ;mcc.c: 58: TMR3_Initialize();
 26661  009E0E  ECE1  F04F         	call	_TMR3_Initialize	;wreg free
 26662                           
 26663                           ;mcc.c: 59: TMR5_Initialize();
 26664  009E12  EC25  F04E         	call	_TMR5_Initialize	;wreg free
 26665                           
 26666                           ;mcc.c: 60: TMR1_Initialize();
 26667  009E16  EC14  F04F         	call	_TMR1_Initialize	;wreg free
 26668                           
 26669                           ;mcc.c: 61: EXT_INT_Initialize();
 26670  009E1A  EC21  F050         	call	_EXT_INT_Initialize	;wreg free
 26671                           
 26672                           ;mcc.c: 62: EUSART2_Initialize();
 26673  009E1E  ECC5  F04B         	call	_EUSART2_Initialize	;wreg free
 26674                           
 26675                           ;mcc.c: 63: LORAWAN_PlatformInit();
 26676  009E22  EC08  F051         	call	_LORAWAN_PlatformInit	;wreg free
 26677  009E26  0012               	return		;funcret
 26678  009E28                     __end_of_SYSTEM_Initialize:
 26679                           	opt callstack 0
 26680                           
 26681 ;; *************** function _TMR5_Initialize *****************
 26682 ;; Defined at:
 26683 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 26684 ;; Parameters:    Size  Location     Type
 26685 ;;		None
 26686 ;; Auto vars:     Size  Location     Type
 26687 ;;		None
 26688 ;; Return value:  Size  Location     Type
 26689 ;;                  1    wreg      void 
 26690 ;; Registers used:
 26691 ;;		wreg, status,2, status,0, cstack
 26692 ;; Tracked objects:
 26693 ;;		On entry : 0/0
 26694 ;;		On exit  : 0/0
 26695 ;;		Unchanged: 0/0
 26696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26701 ;;Total ram usage:        0 bytes
 26702 ;; Hardware stack levels used:    1
 26703 ;; Hardware stack levels required when called:    8
 26704 ;; This function calls:
 26705 ;;		_TMR5_SetInterruptHandler
 26706 ;; This function is called by:
 26707 ;;		_SYSTEM_Initialize
 26708 ;; This function uses a non-reentrant model
 26709 ;;
 26710                           
 26711                           	psect	text144
 26712  009C4A                     __ptext144:
 26713                           	opt callstack 0
 26714  009C4A                     _TMR5_Initialize:
 26715                           	opt callstack 21
 26716                           
 26717                           ;tmr5.c: 71: T5GCON = 0x00;
 26718                           
 26719                           ;incstack = 0
 26720  009C4A  0E00               	movlw	0
 26721  009C4C  010F               	movlb	15	; () banked
 26722  009C4E  6F4D               	movwf	77,b	;volatile
 26723                           
 26724                           ;tmr5.c: 74: TMR5H = 0x00;
 26725  009C50  0E00               	movlw	0
 26726  009C52  6F50               	movwf	80,b	;volatile
 26727                           
 26728                           ;tmr5.c: 77: TMR5L = 0x00;
 26729  009C54  0E00               	movlw	0
 26730  009C56  6F4F               	movwf	79,b	;volatile
 26731                           
 26732                           ; BSR set to: 15
 26733                           ;tmr5.c: 80: timer5ReloadVal=TMR5;
 26734  009C58  CF4F F1DF          	movff	3919,_timer5ReloadVal	;volatile
 26735  009C5C  CF50 F1E0          	movff	3920,_timer5ReloadVal+1	;volatile
 26736                           
 26737                           ; BSR set to: 15
 26738                           ;tmr5.c: 83: PIR5bits.TMR5IF = 0;
 26739  009C60  927E               	bcf	3966,1,c	;volatile
 26740                           
 26741                           ; BSR set to: 15
 26742                           ;tmr5.c: 86: PIE5bits.TMR5IE = 1;
 26743  009C62  827D               	bsf	3965,1,c	;volatile
 26744                           
 26745                           ; BSR set to: 15
 26746                           ;tmr5.c: 88: IPR5bits.TMR5IP = 0;
 26747  009C64  927F               	bcf	3967,1,c	;volatile
 26748                           
 26749                           ; BSR set to: 15
 26750                           ;tmr5.c: 91: TMR5_SetInterruptHandler(TMR5_InterruptTicker);
 26751  009C66  0EA6               	movlw	low _TMR5_InterruptTicker
 26752  009C68  0100               	movlb	0	; () banked
 26753  009C6A  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 26754  009C6C  0EA7               	movlw	high _TMR5_InterruptTicker
 26755  009C6E  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 26756  009C70  EC7E  F053         	call	_TMR5_SetInterruptHandler	;wreg free
 26757                           
 26758                           ;tmr5.c: 94: T5CON = 0xBD;
 26759  009C74  0EBD               	movlw	189
 26760  009C76  010F               	movlb	15	; () banked
 26761  009C78  6F4E               	movwf	78,b	;volatile
 26762                           
 26763                           ; BSR set to: 15
 26764  009C7A  0012               	return		;funcret
 26765  009C7C                     __end_of_TMR5_Initialize:
 26766                           	opt callstack 0
 26767                           
 26768 ;; *************** function _TMR5_SetInterruptHandler *****************
 26769 ;; Defined at:
 26770 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 26771 ;; Parameters:    Size  Location     Type
 26772 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 26773 ;;		 -> TMR5_InterruptTicker(1), 
 26774 ;; Auto vars:     Size  Location     Type
 26775 ;;		None
 26776 ;; Return value:  Size  Location     Type
 26777 ;;                  1    wreg      void 
 26778 ;; Registers used:
 26779 ;;		wreg, status,2, status,0
 26780 ;; Tracked objects:
 26781 ;;		On entry : 0/0
 26782 ;;		On exit  : 0/0
 26783 ;;		Unchanged: 0/0
 26784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26788 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26789 ;;Total ram usage:        2 bytes
 26790 ;; Hardware stack levels used:    1
 26791 ;; Hardware stack levels required when called:    7
 26792 ;; This function calls:
 26793 ;;		Nothing
 26794 ;; This function is called by:
 26795 ;;		_TMR5_Initialize
 26796 ;; This function uses a non-reentrant model
 26797 ;;
 26798                           
 26799                           	psect	text145
 26800  00A6FC                     __ptext145:
 26801                           	opt callstack 0
 26802  00A6FC                     _TMR5_SetInterruptHandler:
 26803                           	opt callstack 21
 26804                           
 26805                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
 26806                           
 26807                           ; BSR set to: 15
 26808                           ;incstack = 0
 26809  00A6FC  C060  F1DD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 26810  00A700  C061  F1DE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 26811  00A704  0012               	return		;funcret
 26812  00A706                     __end_of_TMR5_SetInterruptHandler:
 26813                           	opt callstack 0
 26814                           
 26815 ;; *************** function _TMR3_Initialize *****************
 26816 ;; Defined at:
 26817 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 26818 ;; Parameters:    Size  Location     Type
 26819 ;;		None
 26820 ;; Auto vars:     Size  Location     Type
 26821 ;;		None
 26822 ;; Return value:  Size  Location     Type
 26823 ;;                  1    wreg      void 
 26824 ;; Registers used:
 26825 ;;		wreg, status,2, status,0, cstack
 26826 ;; Tracked objects:
 26827 ;;		On entry : 0/0
 26828 ;;		On exit  : 0/0
 26829 ;;		Unchanged: 0/0
 26830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26835 ;;Total ram usage:        0 bytes
 26836 ;; Hardware stack levels used:    1
 26837 ;; Hardware stack levels required when called:    8
 26838 ;; This function calls:
 26839 ;;		_TMR3_SetInterruptHandler
 26840 ;; This function is called by:
 26841 ;;		_SYSTEM_Initialize
 26842 ;; This function uses a non-reentrant model
 26843 ;;
 26844                           
 26845                           	psect	text146
 26846  009FC2                     __ptext146:
 26847                           	opt callstack 0
 26848  009FC2                     _TMR3_Initialize:
 26849                           	opt callstack 21
 26850                           
 26851                           ;tmr3.c: 69: T3GCON = 0x00;
 26852                           
 26853                           ;incstack = 0
 26854  009FC2  0E00               	movlw	0
 26855  009FC4  6EB4               	movwf	4020,c	;volatile
 26856                           
 26857                           ;tmr3.c: 72: TMR3H = 0xFF;
 26858  009FC6  68B3               	setf	4019,c	;volatile
 26859                           
 26860                           ;tmr3.c: 75: TMR3L = 0xC4;
 26861  009FC8  0EC4               	movlw	196
 26862  009FCA  6EB2               	movwf	4018,c	;volatile
 26863                           
 26864                           ;tmr3.c: 78: timer3ReloadVal=TMR3;
 26865  009FCC  CFB2 F1E3          	movff	4018,_timer3ReloadVal	;volatile
 26866  009FD0  CFB3 F1E4          	movff	4019,_timer3ReloadVal+1	;volatile
 26867                           
 26868                           ;tmr3.c: 81: PIR2bits.TMR3IF = 0;
 26869  009FD4  92A1               	bcf	4001,1,c	;volatile
 26870                           
 26871                           ;tmr3.c: 84: PIE2bits.TMR3IE = 1;
 26872  009FD6  82A0               	bsf	4000,1,c	;volatile
 26873                           
 26874                           ;tmr3.c: 86: IPR2bits.TMR3IP = 1;
 26875  009FD8  82A2               	bsf	4002,1,c	;volatile
 26876                           
 26877                           ;tmr3.c: 89: TMR3_SetInterruptHandler(TMR3ISRClock);
 26878  009FDA  0EF8               	movlw	low _TMR3ISRClock
 26879  009FDC  0100               	movlb	0	; () banked
 26880  009FDE  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 26881  009FE0  0EA7               	movlw	high _TMR3ISRClock
 26882  009FE2  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 26883  009FE4  EC83  F053         	call	_TMR3_SetInterruptHandler	;wreg free
 26884                           
 26885                           ;tmr3.c: 92: T3CON = 0x10;
 26886  009FE8  0E10               	movlw	16
 26887  009FEA  6EB1               	movwf	4017,c	;volatile
 26888  009FEC  0012               	return		;funcret
 26889  009FEE                     __end_of_TMR3_Initialize:
 26890                           	opt callstack 0
 26891                           
 26892 ;; *************** function _TMR3_SetInterruptHandler *****************
 26893 ;; Defined at:
 26894 ;;		line 174 in file "mcc_generated_files/tmr3.c"
 26895 ;; Parameters:    Size  Location     Type
 26896 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 26897 ;;		 -> TMR3ISRClock(1), 
 26898 ;; Auto vars:     Size  Location     Type
 26899 ;;		None
 26900 ;; Return value:  Size  Location     Type
 26901 ;;                  1    wreg      void 
 26902 ;; Registers used:
 26903 ;;		wreg, status,2, status,0
 26904 ;; Tracked objects:
 26905 ;;		On entry : 0/0
 26906 ;;		On exit  : 0/0
 26907 ;;		Unchanged: 0/0
 26908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26909 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26912 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26913 ;;Total ram usage:        2 bytes
 26914 ;; Hardware stack levels used:    1
 26915 ;; Hardware stack levels required when called:    7
 26916 ;; This function calls:
 26917 ;;		Nothing
 26918 ;; This function is called by:
 26919 ;;		_TMR3_Initialize
 26920 ;; This function uses a non-reentrant model
 26921 ;;
 26922                           
 26923                           	psect	text147
 26924  00A706                     __ptext147:
 26925                           	opt callstack 0
 26926  00A706                     _TMR3_SetInterruptHandler:
 26927                           	opt callstack 21
 26928                           
 26929                           ;tmr3.c: 175: TMR3_InterruptHandler = InterruptHandler;
 26930                           
 26931                           ;incstack = 0
 26932  00A706  C060  F1E1         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 26933  00A70A  C061  F1E2         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 26934  00A70E  0012               	return		;funcret
 26935  00A710                     __end_of_TMR3_SetInterruptHandler:
 26936                           	opt callstack 0
 26937                           
 26938 ;; *************** function _TMR1_Initialize *****************
 26939 ;; Defined at:
 26940 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 26941 ;; Parameters:    Size  Location     Type
 26942 ;;		None
 26943 ;; Auto vars:     Size  Location     Type
 26944 ;;		None
 26945 ;; Return value:  Size  Location     Type
 26946 ;;                  1    wreg      void 
 26947 ;; Registers used:
 26948 ;;		wreg, status,2, status,0, cstack
 26949 ;; Tracked objects:
 26950 ;;		On entry : 0/0
 26951 ;;		On exit  : 0/0
 26952 ;;		Unchanged: 0/0
 26953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26958 ;;Total ram usage:        0 bytes
 26959 ;; Hardware stack levels used:    1
 26960 ;; Hardware stack levels required when called:    8
 26961 ;; This function calls:
 26962 ;;		_TMR1_SetInterruptHandler
 26963 ;; This function is called by:
 26964 ;;		_SYSTEM_Initialize
 26965 ;; This function uses a non-reentrant model
 26966 ;;
 26967                           
 26968                           	psect	text148
 26969  009E28                     __ptext148:
 26970                           	opt callstack 0
 26971  009E28                     _TMR1_Initialize:
 26972                           	opt callstack 21
 26973                           
 26974                           ;tmr1.c: 69: T1GCON = 0x00;
 26975                           
 26976                           ;incstack = 0
 26977  009E28  0E00               	movlw	0
 26978  009E2A  6ECC               	movwf	4044,c	;volatile
 26979                           
 26980                           ;tmr1.c: 72: TMR1H = 0x00;
 26981  009E2C  0E00               	movlw	0
 26982  009E2E  6ECF               	movwf	4047,c	;volatile
 26983                           
 26984                           ;tmr1.c: 75: TMR1L = 0x00;
 26985  009E30  0E00               	movlw	0
 26986  009E32  6ECE               	movwf	4046,c	;volatile
 26987                           
 26988                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
 26989  009E34  CFCE F1E7          	movff	4046,_timer1ReloadVal	;volatile
 26990  009E38  CFCF F1E8          	movff	4047,_timer1ReloadVal+1	;volatile
 26991                           
 26992                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
 26993  009E3C  909E               	bcf	3998,0,c	;volatile
 26994                           
 26995                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
 26996  009E3E  809D               	bsf	3997,0,c	;volatile
 26997                           
 26998                           ;tmr1.c: 86: IPR1bits.TMR1IP = 0;
 26999  009E40  909F               	bcf	3999,0,c	;volatile
 27000                           
 27001                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 27002  009E42  0E36               	movlw	low _TMR1_DefaultInterruptHandler
 27003  009E44  0100               	movlb	0	; () banked
 27004  009E46  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 27005  009E48  0EA8               	movlw	high _TMR1_DefaultInterruptHandler
 27006  009E4A  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27007  009E4C  EC88  F053         	call	_TMR1_SetInterruptHandler	;wreg free
 27008                           
 27009                           ;tmr1.c: 92: T1CON = 0x8D;
 27010  009E50  0E8D               	movlw	141
 27011  009E52  6ECD               	movwf	4045,c	;volatile
 27012  009E54  0012               	return		;funcret
 27013  009E56                     __end_of_TMR1_Initialize:
 27014                           	opt callstack 0
 27015                           
 27016 ;; *************** function _SPI2_Initialize *****************
 27017 ;; Defined at:
 27018 ;;		line 65 in file "mcc_generated_files/spi2.c"
 27019 ;; Parameters:    Size  Location     Type
 27020 ;;		None
 27021 ;; Auto vars:     Size  Location     Type
 27022 ;;		None
 27023 ;; Return value:  Size  Location     Type
 27024 ;;                  1    wreg      void 
 27025 ;; Registers used:
 27026 ;;		wreg, status,2
 27027 ;; Tracked objects:
 27028 ;;		On entry : 0/0
 27029 ;;		On exit  : 0/0
 27030 ;;		Unchanged: 0/0
 27031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27036 ;;Total ram usage:        0 bytes
 27037 ;; Hardware stack levels used:    1
 27038 ;; Hardware stack levels required when called:    7
 27039 ;; This function calls:
 27040 ;;		Nothing
 27041 ;; This function is called by:
 27042 ;;		_SYSTEM_Initialize
 27043 ;; This function uses a non-reentrant model
 27044 ;;
 27045                           
 27046                           	psect	text149
 27047  00A690                     __ptext149:
 27048                           	opt callstack 0
 27049  00A690                     _SPI2_Initialize:
 27050                           	opt callstack 22
 27051                           
 27052                           ;spi2.c: 70: SSP2STAT = 0x40;
 27053                           
 27054                           ;incstack = 0
 27055  00A690  0E40               	movlw	64
 27056  00A692  6E6D               	movwf	3949,c	;volatile
 27057                           
 27058                           ;spi2.c: 73: SSP2CON1 = 0x20;
 27059  00A694  0E20               	movlw	32
 27060  00A696  6E6C               	movwf	3948,c	;volatile
 27061                           
 27062                           ;spi2.c: 76: SSP2ADD = 0x00;
 27063  00A698  0E00               	movlw	0
 27064  00A69A  6E6E               	movwf	3950,c	;volatile
 27065  00A69C  0012               	return		;funcret
 27066  00A69E                     __end_of_SPI2_Initialize:
 27067                           	opt callstack 0
 27068                           
 27069 ;; *************** function _PIN_MANAGER_Initialize *****************
 27070 ;; Defined at:
 27071 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 27072 ;; Parameters:    Size  Location     Type
 27073 ;;		None
 27074 ;; Auto vars:     Size  Location     Type
 27075 ;;		None
 27076 ;; Return value:  Size  Location     Type
 27077 ;;                  1    wreg      void 
 27078 ;; Registers used:
 27079 ;;		wreg, status,2, status,0, cstack
 27080 ;; Tracked objects:
 27081 ;;		On entry : 0/0
 27082 ;;		On exit  : 0/0
 27083 ;;		Unchanged: 0/0
 27084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27089 ;;Total ram usage:        0 bytes
 27090 ;; Hardware stack levels used:    1
 27091 ;; Hardware stack levels required when called:    8
 27092 ;; This function calls:
 27093 ;;		_IOCB4_SetInterruptHandler
 27094 ;; This function is called by:
 27095 ;;		_SYSTEM_Initialize
 27096 ;; This function uses a non-reentrant model
 27097 ;;
 27098                           
 27099                           	psect	text150
 27100  009304                     __ptext150:
 27101                           	opt callstack 0
 27102  009304                     _PIN_MANAGER_Initialize:
 27103                           	opt callstack 21
 27104                           
 27105                           ;pin_manager.c: 62: LATE = 0x00;
 27106                           
 27107                           ;incstack = 0
 27108  009304  0E00               	movlw	0
 27109  009306  6E8D               	movwf	3981,c	;volatile
 27110                           
 27111                           ;pin_manager.c: 63: LATD = 0x00;
 27112  009308  0E00               	movlw	0
 27113  00930A  6E8C               	movwf	3980,c	;volatile
 27114                           
 27115                           ;pin_manager.c: 64: LATA = 0x00;
 27116  00930C  0E00               	movlw	0
 27117  00930E  6E89               	movwf	3977,c	;volatile
 27118                           
 27119                           ;pin_manager.c: 65: LATB = 0x00;
 27120  009310  0E00               	movlw	0
 27121  009312  6E8A               	movwf	3978,c	;volatile
 27122                           
 27123                           ;pin_manager.c: 66: LATC = 0x00;
 27124  009314  0E00               	movlw	0
 27125  009316  6E8B               	movwf	3979,c	;volatile
 27126                           
 27127                           ;pin_manager.c: 71: TRISE = 0x07;
 27128  009318  0E07               	movlw	7
 27129  00931A  6E96               	movwf	3990,c	;volatile
 27130                           
 27131                           ;pin_manager.c: 72: TRISA = 0xFF;
 27132  00931C  6892               	setf	3986,c	;volatile
 27133                           
 27134                           ;pin_manager.c: 73: TRISB = 0xFF;
 27135  00931E  6893               	setf	3987,c	;volatile
 27136                           
 27137                           ;pin_manager.c: 74: TRISC = 0xFE;
 27138  009320  0EFE               	movlw	254
 27139  009322  6E94               	movwf	3988,c	;volatile
 27140                           
 27141                           ;pin_manager.c: 75: TRISD = 0xE6;
 27142  009324  0EE6               	movlw	230
 27143  009326  6E95               	movwf	3989,c	;volatile
 27144                           
 27145                           ;pin_manager.c: 80: ANSELD = 0xE4;
 27146  009328  0EE4               	movlw	228
 27147  00932A  010F               	movlb	15	; () banked
 27148  00932C  6F3B               	movwf	59,b	;volatile
 27149                           
 27150                           ;pin_manager.c: 81: ANSELC = 0xF8;
 27151  00932E  0EF8               	movlw	248
 27152  009330  6F3A               	movwf	58,b	;volatile
 27153                           
 27154                           ;pin_manager.c: 82: ANSELB = 0x28;
 27155  009332  0E28               	movlw	40
 27156  009334  6F39               	movwf	57,b	;volatile
 27157                           
 27158                           ;pin_manager.c: 83: ANSELE = 0x07;
 27159  009336  0E07               	movlw	7
 27160  009338  6F3C               	movwf	60,b	;volatile
 27161                           
 27162                           ;pin_manager.c: 84: ANSELA = 0x2F;
 27163  00933A  0E2F               	movlw	47
 27164  00933C  6F38               	movwf	56,b	;volatile
 27165                           
 27166                           ;pin_manager.c: 89: WPUB = 0x17;
 27167  00933E  0E17               	movlw	23
 27168  009340  6E61               	movwf	3937,c	;volatile
 27169                           
 27170                           ; BSR set to: 15
 27171                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
 27172  009342  8EF1               	bsf	4081,7,c	;volatile
 27173                           
 27174                           ; BSR set to: 15
 27175                           ;pin_manager.c: 99: IOCBbits.IOCB4 = 1;
 27176  009344  8862               	bsf	3938,4,c	;volatile
 27177                           
 27178                           ; BSR set to: 15
 27179                           ;pin_manager.c: 104: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
 27180  009346  0E38               	movlw	low _IOCB4_DefaultInterruptHandler
 27181  009348  0100               	movlb	0	; () banked
 27182  00934A  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 27183  00934C  0EA8               	movlw	high _IOCB4_DefaultInterruptHandler
 27184  00934E  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27185  009350  EC8D  F053         	call	_IOCB4_SetInterruptHandler	;wreg free
 27186                           
 27187                           ;pin_manager.c: 107: INTCONbits.RBIE = 1;
 27188  009354  86F2               	bsf	4082,3,c	;volatile
 27189  009356  0012               	return		;funcret
 27190  009358                     __end_of_PIN_MANAGER_Initialize:
 27191                           	opt callstack 0
 27192                           
 27193 ;; *************** function _OSCILLATOR_Initialize *****************
 27194 ;; Defined at:
 27195 ;;		line 66 in file "mcc_generated_files/mcc.c"
 27196 ;; Parameters:    Size  Location     Type
 27197 ;;		None
 27198 ;; Auto vars:     Size  Location     Type
 27199 ;;		None
 27200 ;; Return value:  Size  Location     Type
 27201 ;;                  1    wreg      void 
 27202 ;; Registers used:
 27203 ;;		wreg, status,2
 27204 ;; Tracked objects:
 27205 ;;		On entry : 0/0
 27206 ;;		On exit  : 0/0
 27207 ;;		Unchanged: 0/0
 27208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27213 ;;Total ram usage:        0 bytes
 27214 ;; Hardware stack levels used:    1
 27215 ;; Hardware stack levels required when called:    7
 27216 ;; This function calls:
 27217 ;;		Nothing
 27218 ;; This function is called by:
 27219 ;;		_SYSTEM_Initialize
 27220 ;; This function uses a non-reentrant model
 27221 ;;
 27222                           
 27223                           	psect	text151
 27224  00A69E                     __ptext151:
 27225                           	opt callstack 0
 27226  00A69E                     _OSCILLATOR_Initialize:
 27227                           	opt callstack 22
 27228                           
 27229                           ;mcc.c: 69: OSCCON = 0x70;
 27230                           
 27231                           ;incstack = 0
 27232  00A69E  0E70               	movlw	112
 27233  00A6A0  6ED3               	movwf	4051,c	;volatile
 27234                           
 27235                           ;mcc.c: 71: OSCCON2 = 0x04;
 27236  00A6A2  0E04               	movlw	4
 27237  00A6A4  6ED2               	movwf	4050,c	;volatile
 27238                           
 27239                           ;mcc.c: 73: OSCTUNE = 0x00;
 27240  00A6A6  0E00               	movlw	0
 27241  00A6A8  6E9B               	movwf	3995,c	;volatile
 27242  00A6AA  0012               	return		;funcret
 27243  00A6AC                     __end_of_OSCILLATOR_Initialize:
 27244                           	opt callstack 0
 27245                           
 27246 ;; *************** function _LORAWAN_PlatformInit *****************
 27247 ;; Defined at:
 27248 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27249 ;; Parameters:    Size  Location     Type
 27250 ;;		None
 27251 ;; Auto vars:     Size  Location     Type
 27252 ;;		None
 27253 ;; Return value:  Size  Location     Type
 27254 ;;                  1    wreg      void 
 27255 ;; Registers used:
 27256 ;;		wreg, status,2, status,0, cstack
 27257 ;; Tracked objects:
 27258 ;;		On entry : 0/0
 27259 ;;		On exit  : 0/0
 27260 ;;		Unchanged: 0/0
 27261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27266 ;;Total ram usage:        0 bytes
 27267 ;; Hardware stack levels used:    1
 27268 ;; Hardware stack levels required when called:    9
 27269 ;; This function calls:
 27270 ;;		_DIO0_ISR_Lora_Init
 27271 ;;		_DIO1_ISR_Lora_Init
 27272 ;;		_DIO2_ISR_Lora_Init
 27273 ;;		_DIO3_ISR_Lora_Init
 27274 ;;		_DIO4_ISR_Lora_Init
 27275 ;;		_DIO5_ISR_Lora_Init
 27276 ;;		_SystemTimerInit
 27277 ;;		_TMR_ISR_Lora_Init
 27278 ;; This function is called by:
 27279 ;;		_SYSTEM_Initialize
 27280 ;; This function uses a non-reentrant model
 27281 ;;
 27282                           
 27283                           	psect	text152
 27284  00A210                     __ptext152:
 27285                           	opt callstack 0
 27286  00A210                     _LORAWAN_PlatformInit:
 27287                           	opt callstack 20
 27288                           
 27289                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
 27290                           
 27291                           ;incstack = 0
 27292  00A210  EC0B  F053         	call	_TMR_ISR_Lora_Init	;wreg free
 27293                           
 27294                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
 27295  00A214  EC23  F053         	call	_DIO0_ISR_Lora_Init	;wreg free
 27296                           
 27297                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
 27298  00A218  EC1B  F053         	call	_DIO1_ISR_Lora_Init	;wreg free
 27299                           
 27300                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
 27301  00A21C  EC13  F053         	call	_DIO2_ISR_Lora_Init	;wreg free
 27302                           
 27303                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
 27304  00A220  EC1A  F054         	call	_DIO3_ISR_Lora_Init	;wreg free
 27305                           
 27306                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
 27307  00A224  EC19  F054         	call	_DIO4_ISR_Lora_Init	;wreg free
 27308                           
 27309                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
 27310  00A228  EC18  F054         	call	_DIO5_ISR_Lora_Init	;wreg free
 27311                           
 27312                           ;lorawan_init.c: 81: SystemTimerInit();
 27313  00A22C  ECE1  F053         	call	_SystemTimerInit	;wreg free
 27314  00A230  0012               	return		;funcret
 27315  00A232                     __end_of_LORAWAN_PlatformInit:
 27316                           	opt callstack 0
 27317                           
 27318 ;; *************** function _TMR_ISR_Lora_Init *****************
 27319 ;; Defined at:
 27320 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 27321 ;; Parameters:    Size  Location     Type
 27322 ;;		None
 27323 ;; Auto vars:     Size  Location     Type
 27324 ;;		None
 27325 ;; Return value:  Size  Location     Type
 27326 ;;                  1    wreg      void 
 27327 ;; Registers used:
 27328 ;;		wreg, status,2, status,0, cstack
 27329 ;; Tracked objects:
 27330 ;;		On entry : 0/0
 27331 ;;		On exit  : 0/0
 27332 ;;		Unchanged: 0/0
 27333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27338 ;;Total ram usage:        0 bytes
 27339 ;; Hardware stack levels used:    1
 27340 ;; Hardware stack levels required when called:    8
 27341 ;; This function calls:
 27342 ;;		_TMR1_SetInterruptHandler
 27343 ;; This function is called by:
 27344 ;;		_LORAWAN_PlatformInit
 27345 ;; This function uses a non-reentrant model
 27346 ;;
 27347                           
 27348                           	psect	text153
 27349  00A616                     __ptext153:
 27350                           	opt callstack 0
 27351  00A616                     _TMR_ISR_Lora_Init:
 27352                           	opt callstack 20
 27353                           
 27354                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
 27355                           
 27356                           ;incstack = 0
 27357  00A616  0EB2               	movlw	low _TMR_ISR_lora
 27358  00A618  0100               	movlb	0	; () banked
 27359  00A61A  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 27360  00A61C  0E91               	movlw	high _TMR_ISR_lora
 27361  00A61E  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27362  00A620  EC88  F053         	call	_TMR1_SetInterruptHandler	;wreg free
 27363  00A624  0012               	return		;funcret
 27364  00A626                     __end_of_TMR_ISR_Lora_Init:
 27365                           	opt callstack 0
 27366                           
 27367 ;; *************** function _TMR1_SetInterruptHandler *****************
 27368 ;; Defined at:
 27369 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 27370 ;; Parameters:    Size  Location     Type
 27371 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27372 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
 27373 ;; Auto vars:     Size  Location     Type
 27374 ;;		None
 27375 ;; Return value:  Size  Location     Type
 27376 ;;                  1    wreg      void 
 27377 ;; Registers used:
 27378 ;;		wreg, status,2, status,0
 27379 ;; Tracked objects:
 27380 ;;		On entry : 0/0
 27381 ;;		On exit  : 0/0
 27382 ;;		Unchanged: 0/0
 27383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27384 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27387 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27388 ;;Total ram usage:        2 bytes
 27389 ;; Hardware stack levels used:    1
 27390 ;; Hardware stack levels required when called:    7
 27391 ;; This function calls:
 27392 ;;		Nothing
 27393 ;; This function is called by:
 27394 ;;		_TMR_ISR_Lora_Init
 27395 ;;		_TMR1_Initialize
 27396 ;; This function uses a non-reentrant model
 27397 ;;
 27398                           
 27399                           	psect	text154
 27400  00A710                     __ptext154:
 27401                           	opt callstack 0
 27402  00A710                     _TMR1_SetInterruptHandler:
 27403                           	opt callstack 21
 27404                           
 27405                           ;tmr1.c: 183: TMR1_InterruptHandler = InterruptHandler;
 27406                           
 27407                           ;incstack = 0
 27408  00A710  C060  F1E5         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 27409  00A714  C061  F1E6         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 27410  00A718  0012               	return		;funcret
 27411  00A71A                     __end_of_TMR1_SetInterruptHandler:
 27412                           	opt callstack 0
 27413                           
 27414 ;; *************** function _SystemTimerInit *****************
 27415 ;; Defined at:
 27416 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 27417 ;; Parameters:    Size  Location     Type
 27418 ;;		None
 27419 ;; Auto vars:     Size  Location     Type
 27420 ;;		None
 27421 ;; Return value:  Size  Location     Type
 27422 ;;                  1    wreg      void 
 27423 ;; Registers used:
 27424 ;;		wreg, status,2
 27425 ;; Tracked objects:
 27426 ;;		On entry : 0/0
 27427 ;;		On exit  : 0/0
 27428 ;;		Unchanged: 0/0
 27429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27434 ;;Total ram usage:        0 bytes
 27435 ;; Hardware stack levels used:    1
 27436 ;; Hardware stack levels required when called:    7
 27437 ;; This function calls:
 27438 ;;		Nothing
 27439 ;; This function is called by:
 27440 ;;		_LORAWAN_PlatformInit
 27441 ;; This function uses a non-reentrant model
 27442 ;;
 27443                           
 27444                           	psect	text155
 27445  00A7C2                     __ptext155:
 27446                           	opt callstack 0
 27447  00A7C2                     _SystemTimerInit:
 27448                           	opt callstack 21
 27449                           
 27450                           ;sw_timer.c: 137: allocatedTimers = 0;
 27451                           
 27452                           ;incstack = 0
 27453  00A7C2  0E00               	movlw	0
 27454  00A7C4  0101               	movlb	1	; () banked
 27455  00A7C6  6F28               	movwf	_allocatedTimers& (0+255),b	;volatile
 27456                           
 27457                           ; BSR set to: 1
 27458  00A7C8  0012               	return		;funcret
 27459  00A7CA                     __end_of_SystemTimerInit:
 27460                           	opt callstack 0
 27461                           
 27462 ;; *************** function _DIO5_ISR_Lora_Init *****************
 27463 ;; Defined at:
 27464 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27465 ;; Parameters:    Size  Location     Type
 27466 ;;		None
 27467 ;; Auto vars:     Size  Location     Type
 27468 ;;		None
 27469 ;; Return value:  Size  Location     Type
 27470 ;;                  1    wreg      void 
 27471 ;; Registers used:
 27472 ;;		None
 27473 ;; Tracked objects:
 27474 ;;		On entry : 0/0
 27475 ;;		On exit  : 0/0
 27476 ;;		Unchanged: 0/0
 27477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27482 ;;Total ram usage:        0 bytes
 27483 ;; Hardware stack levels used:    1
 27484 ;; Hardware stack levels required when called:    7
 27485 ;; This function calls:
 27486 ;;		Nothing
 27487 ;; This function is called by:
 27488 ;;		_LORAWAN_PlatformInit
 27489 ;; This function uses a non-reentrant model
 27490 ;;
 27491                           
 27492                           	psect	text156
 27493  00A830                     __ptext156:
 27494                           	opt callstack 0
 27495  00A830                     _DIO5_ISR_Lora_Init:
 27496                           	opt callstack 21
 27497                           
 27498                           ; BSR set to: 1
 27499                           ;incstack = 0
 27500  00A830  0012               	return		;funcret
 27501  00A832                     __end_of_DIO5_ISR_Lora_Init:
 27502                           	opt callstack 0
 27503                           
 27504 ;; *************** function _DIO4_ISR_Lora_Init *****************
 27505 ;; Defined at:
 27506 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27507 ;; Parameters:    Size  Location     Type
 27508 ;;		None
 27509 ;; Auto vars:     Size  Location     Type
 27510 ;;		None
 27511 ;; Return value:  Size  Location     Type
 27512 ;;                  1    wreg      void 
 27513 ;; Registers used:
 27514 ;;		None
 27515 ;; Tracked objects:
 27516 ;;		On entry : 0/0
 27517 ;;		On exit  : 0/0
 27518 ;;		Unchanged: 0/0
 27519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27524 ;;Total ram usage:        0 bytes
 27525 ;; Hardware stack levels used:    1
 27526 ;; Hardware stack levels required when called:    7
 27527 ;; This function calls:
 27528 ;;		Nothing
 27529 ;; This function is called by:
 27530 ;;		_LORAWAN_PlatformInit
 27531 ;; This function uses a non-reentrant model
 27532 ;;
 27533                           
 27534                           	psect	text157
 27535  00A832                     __ptext157:
 27536                           	opt callstack 0
 27537  00A832                     _DIO4_ISR_Lora_Init:
 27538                           	opt callstack 21
 27539                           
 27540                           ;incstack = 0
 27541  00A832  0012               	return		;funcret
 27542  00A834                     __end_of_DIO4_ISR_Lora_Init:
 27543                           	opt callstack 0
 27544                           
 27545 ;; *************** function _DIO3_ISR_Lora_Init *****************
 27546 ;; Defined at:
 27547 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27548 ;; Parameters:    Size  Location     Type
 27549 ;;		None
 27550 ;; Auto vars:     Size  Location     Type
 27551 ;;		None
 27552 ;; Return value:  Size  Location     Type
 27553 ;;                  1    wreg      void 
 27554 ;; Registers used:
 27555 ;;		None
 27556 ;; Tracked objects:
 27557 ;;		On entry : 0/0
 27558 ;;		On exit  : 0/0
 27559 ;;		Unchanged: 0/0
 27560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27565 ;;Total ram usage:        0 bytes
 27566 ;; Hardware stack levels used:    1
 27567 ;; Hardware stack levels required when called:    7
 27568 ;; This function calls:
 27569 ;;		Nothing
 27570 ;; This function is called by:
 27571 ;;		_LORAWAN_PlatformInit
 27572 ;; This function uses a non-reentrant model
 27573 ;;
 27574                           
 27575                           	psect	text158
 27576  00A834                     __ptext158:
 27577                           	opt callstack 0
 27578  00A834                     _DIO3_ISR_Lora_Init:
 27579                           	opt callstack 21
 27580                           
 27581                           ;incstack = 0
 27582  00A834  0012               	return		;funcret
 27583  00A836                     __end_of_DIO3_ISR_Lora_Init:
 27584                           	opt callstack 0
 27585                           
 27586 ;; *************** function _DIO2_ISR_Lora_Init *****************
 27587 ;; Defined at:
 27588 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27589 ;; Parameters:    Size  Location     Type
 27590 ;;		None
 27591 ;; Auto vars:     Size  Location     Type
 27592 ;;		None
 27593 ;; Return value:  Size  Location     Type
 27594 ;;                  1    wreg      void 
 27595 ;; Registers used:
 27596 ;;		wreg, status,2, status,0, cstack
 27597 ;; Tracked objects:
 27598 ;;		On entry : 0/0
 27599 ;;		On exit  : 0/0
 27600 ;;		Unchanged: 0/0
 27601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27606 ;;Total ram usage:        0 bytes
 27607 ;; Hardware stack levels used:    1
 27608 ;; Hardware stack levels required when called:    8
 27609 ;; This function calls:
 27610 ;;		_IOCB4_SetInterruptHandler
 27611 ;; This function is called by:
 27612 ;;		_LORAWAN_PlatformInit
 27613 ;; This function uses a non-reentrant model
 27614 ;;
 27615                           
 27616                           	psect	text159
 27617  00A626                     __ptext159:
 27618                           	opt callstack 0
 27619  00A626                     _DIO2_ISR_Lora_Init:
 27620                           	opt callstack 20
 27621                           
 27622                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
 27623                           
 27624                           ;incstack = 0
 27625  00A626  0E1E               	movlw	low _DIO2_ISR_Lora
 27626  00A628  0100               	movlb	0	; () banked
 27627  00A62A  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 27628  00A62C  0EA8               	movlw	high _DIO2_ISR_Lora
 27629  00A62E  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27630  00A630  EC8D  F053         	call	_IOCB4_SetInterruptHandler	;wreg free
 27631  00A634  0012               	return		;funcret
 27632  00A636                     __end_of_DIO2_ISR_Lora_Init:
 27633                           	opt callstack 0
 27634                           
 27635 ;; *************** function _IOCB4_SetInterruptHandler *****************
 27636 ;; Defined at:
 27637 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
 27638 ;; Parameters:    Size  Location     Type
 27639 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27640 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
 27641 ;; Auto vars:     Size  Location     Type
 27642 ;;		None
 27643 ;; Return value:  Size  Location     Type
 27644 ;;                  1    wreg      void 
 27645 ;; Registers used:
 27646 ;;		wreg, status,2, status,0
 27647 ;; Tracked objects:
 27648 ;;		On entry : 0/0
 27649 ;;		On exit  : 0/0
 27650 ;;		Unchanged: 0/0
 27651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27655 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27656 ;;Total ram usage:        2 bytes
 27657 ;; Hardware stack levels used:    1
 27658 ;; Hardware stack levels required when called:    7
 27659 ;; This function calls:
 27660 ;;		Nothing
 27661 ;; This function is called by:
 27662 ;;		_DIO2_ISR_Lora_Init
 27663 ;;		_PIN_MANAGER_Initialize
 27664 ;; This function uses a non-reentrant model
 27665 ;;
 27666                           
 27667                           	psect	text160
 27668  00A71A                     __ptext160:
 27669                           	opt callstack 0
 27670  00A71A                     _IOCB4_SetInterruptHandler:
 27671                           	opt callstack 21
 27672                           
 27673                           ;pin_manager.c: 140: IOCB4_InterruptHandler = InterruptHandler;
 27674                           
 27675                           ;incstack = 0
 27676  00A71A  C060  F1E9         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 27677  00A71E  C061  F1EA         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 27678  00A722  0012               	return		;funcret
 27679  00A724                     __end_of_IOCB4_SetInterruptHandler:
 27680                           	opt callstack 0
 27681                           
 27682 ;; *************** function _DIO1_ISR_Lora_Init *****************
 27683 ;; Defined at:
 27684 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27685 ;; Parameters:    Size  Location     Type
 27686 ;;		None
 27687 ;; Auto vars:     Size  Location     Type
 27688 ;;		None
 27689 ;; Return value:  Size  Location     Type
 27690 ;;                  1    wreg      void 
 27691 ;; Registers used:
 27692 ;;		wreg, status,2, status,0, cstack
 27693 ;; Tracked objects:
 27694 ;;		On entry : 0/0
 27695 ;;		On exit  : 0/0
 27696 ;;		Unchanged: 0/0
 27697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27702 ;;Total ram usage:        0 bytes
 27703 ;; Hardware stack levels used:    1
 27704 ;; Hardware stack levels required when called:    8
 27705 ;; This function calls:
 27706 ;;		_INT2_SetInterruptHandler
 27707 ;; This function is called by:
 27708 ;;		_LORAWAN_PlatformInit
 27709 ;; This function uses a non-reentrant model
 27710 ;;
 27711                           
 27712                           	psect	text161
 27713  00A636                     __ptext161:
 27714                           	opt callstack 0
 27715  00A636                     _DIO1_ISR_Lora_Init:
 27716                           	opt callstack 20
 27717                           
 27718                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
 27719                           
 27720                           ;incstack = 0
 27721  00A636  0E22               	movlw	low _DIO1_ISR_Lora
 27722  00A638  0100               	movlb	0	; () banked
 27723  00A63A  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 27724  00A63C  0EA8               	movlw	high _DIO1_ISR_Lora
 27725  00A63E  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27726  00A640  EC92  F053         	call	_INT2_SetInterruptHandler	;wreg free
 27727  00A644  0012               	return		;funcret
 27728  00A646                     __end_of_DIO1_ISR_Lora_Init:
 27729                           	opt callstack 0
 27730                           
 27731 ;; *************** function _DIO0_ISR_Lora_Init *****************
 27732 ;; Defined at:
 27733 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27734 ;; Parameters:    Size  Location     Type
 27735 ;;		None
 27736 ;; Auto vars:     Size  Location     Type
 27737 ;;		None
 27738 ;; Return value:  Size  Location     Type
 27739 ;;                  1    wreg      void 
 27740 ;; Registers used:
 27741 ;;		wreg, status,2, status,0, cstack
 27742 ;; Tracked objects:
 27743 ;;		On entry : 0/0
 27744 ;;		On exit  : 0/0
 27745 ;;		Unchanged: 0/0
 27746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27751 ;;Total ram usage:        0 bytes
 27752 ;; Hardware stack levels used:    1
 27753 ;; Hardware stack levels required when called:    8
 27754 ;; This function calls:
 27755 ;;		_INT1_SetInterruptHandler
 27756 ;; This function is called by:
 27757 ;;		_LORAWAN_PlatformInit
 27758 ;; This function uses a non-reentrant model
 27759 ;;
 27760                           
 27761                           	psect	text162
 27762  00A646                     __ptext162:
 27763                           	opt callstack 0
 27764  00A646                     _DIO0_ISR_Lora_Init:
 27765                           	opt callstack 20
 27766                           
 27767                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
 27768                           
 27769                           ;incstack = 0
 27770  00A646  0E26               	movlw	low _DIO0_ISR_Lora
 27771  00A648  0100               	movlb	0	; () banked
 27772  00A64A  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 27773  00A64C  0EA8               	movlw	high _DIO0_ISR_Lora
 27774  00A64E  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27775  00A650  EC97  F053         	call	_INT1_SetInterruptHandler	;wreg free
 27776  00A654  0012               	return		;funcret
 27777  00A656                     __end_of_DIO0_ISR_Lora_Init:
 27778                           	opt callstack 0
 27779                           
 27780 ;; *************** function _INTERRUPT_Initialize *****************
 27781 ;; Defined at:
 27782 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 27783 ;; Parameters:    Size  Location     Type
 27784 ;;		None
 27785 ;; Auto vars:     Size  Location     Type
 27786 ;;		None
 27787 ;; Return value:  Size  Location     Type
 27788 ;;                  1    wreg      void 
 27789 ;; Registers used:
 27790 ;;		None
 27791 ;; Tracked objects:
 27792 ;;		On entry : 0/0
 27793 ;;		On exit  : 0/0
 27794 ;;		Unchanged: 0/0
 27795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27800 ;;Total ram usage:        0 bytes
 27801 ;; Hardware stack levels used:    1
 27802 ;; Hardware stack levels required when called:    7
 27803 ;; This function calls:
 27804 ;;		Nothing
 27805 ;; This function is called by:
 27806 ;;		_SYSTEM_Initialize
 27807 ;; This function uses a non-reentrant model
 27808 ;;
 27809                           
 27810                           	psect	text163
 27811  00A80A                     __ptext163:
 27812                           	opt callstack 0
 27813  00A80A                     _INTERRUPT_Initialize:
 27814                           	opt callstack 22
 27815                           
 27816                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
 27817                           
 27818                           ;incstack = 0
 27819  00A80A  9ED0               	bcf	4048,7,c	;volatile
 27820  00A80C  0012               	return		;funcret
 27821  00A80E                     __end_of_INTERRUPT_Initialize:
 27822                           	opt callstack 0
 27823                           
 27824 ;; *************** function _EXT_INT_Initialize *****************
 27825 ;; Defined at:
 27826 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 27827 ;; Parameters:    Size  Location     Type
 27828 ;;		None
 27829 ;; Auto vars:     Size  Location     Type
 27830 ;;		None
 27831 ;; Return value:  Size  Location     Type
 27832 ;;                  1    wreg      void 
 27833 ;; Registers used:
 27834 ;;		wreg, status,2, status,0, cstack
 27835 ;; Tracked objects:
 27836 ;;		On entry : 0/0
 27837 ;;		On exit  : 0/0
 27838 ;;		Unchanged: 0/0
 27839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27844 ;;Total ram usage:        0 bytes
 27845 ;; Hardware stack levels used:    1
 27846 ;; Hardware stack levels required when called:    8
 27847 ;; This function calls:
 27848 ;;		_INT1_SetInterruptHandler
 27849 ;;		_INT2_SetInterruptHandler
 27850 ;; This function is called by:
 27851 ;;		_SYSTEM_Initialize
 27852 ;; This function uses a non-reentrant model
 27853 ;;
 27854                           
 27855                           	psect	text164
 27856  00A042                     __ptext164:
 27857                           	opt callstack 0
 27858  00A042                     _EXT_INT_Initialize:
 27859                           	opt callstack 21
 27860                           
 27861                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
 27862                           
 27863                           ;incstack = 0
 27864  00A042  90F0               	bcf	4080,0,c	;volatile
 27865                           
 27866                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
 27867  00A044  8AF1               	bsf	4081,5,c	;volatile
 27868                           
 27869                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 27870  00A046  0E3C               	movlw	low _INT1_DefaultInterruptHandler
 27871  00A048  0100               	movlb	0	; () banked
 27872  00A04A  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 27873  00A04C  0EA8               	movlw	high _INT1_DefaultInterruptHandler
 27874  00A04E  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27875  00A050  EC97  F053         	call	_INT1_SetInterruptHandler	;wreg free
 27876                           
 27877                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
 27878  00A054  86F0               	bsf	4080,3,c	;volatile
 27879                           
 27880                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
 27881  00A056  92F0               	bcf	4080,1,c	;volatile
 27882                           
 27883                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
 27884  00A058  88F1               	bsf	4081,4,c	;volatile
 27885                           
 27886                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 27887  00A05A  0E3A               	movlw	low _INT2_DefaultInterruptHandler
 27888  00A05C  0100               	movlb	0	; () banked
 27889  00A05E  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 27890  00A060  0EA8               	movlw	high _INT2_DefaultInterruptHandler
 27891  00A062  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27892  00A064  EC92  F053         	call	_INT2_SetInterruptHandler	;wreg free
 27893                           
 27894                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
 27895  00A068  88F0               	bsf	4080,4,c	;volatile
 27896  00A06A  0012               	return		;funcret
 27897  00A06C                     __end_of_EXT_INT_Initialize:
 27898                           	opt callstack 0
 27899                           
 27900 ;; *************** function _INT2_SetInterruptHandler *****************
 27901 ;; Defined at:
 27902 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 27903 ;; Parameters:    Size  Location     Type
 27904 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27905 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
 27906 ;; Auto vars:     Size  Location     Type
 27907 ;;		None
 27908 ;; Return value:  Size  Location     Type
 27909 ;;                  1    wreg      void 
 27910 ;; Registers used:
 27911 ;;		wreg, status,2, status,0
 27912 ;; Tracked objects:
 27913 ;;		On entry : 0/0
 27914 ;;		On exit  : 0/0
 27915 ;;		Unchanged: 0/0
 27916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27920 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27921 ;;Total ram usage:        2 bytes
 27922 ;; Hardware stack levels used:    1
 27923 ;; Hardware stack levels required when called:    7
 27924 ;; This function calls:
 27925 ;;		Nothing
 27926 ;; This function is called by:
 27927 ;;		_DIO1_ISR_Lora_Init
 27928 ;;		_EXT_INT_Initialize
 27929 ;; This function uses a non-reentrant model
 27930 ;;
 27931                           
 27932                           	psect	text165
 27933  00A724                     __ptext165:
 27934                           	opt callstack 0
 27935  00A724                     _INT2_SetInterruptHandler:
 27936                           	opt callstack 20
 27937                           
 27938                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 27939                           
 27940                           ;incstack = 0
 27941  00A724  C060  F1EB         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 27942  00A728  C061  F1EC         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 27943  00A72C  0012               	return		;funcret
 27944  00A72E                     __end_of_INT2_SetInterruptHandler:
 27945                           	opt callstack 0
 27946                           
 27947 ;; *************** function _INT1_SetInterruptHandler *****************
 27948 ;; Defined at:
 27949 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 27950 ;; Parameters:    Size  Location     Type
 27951 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27952 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
 27953 ;; Auto vars:     Size  Location     Type
 27954 ;;		None
 27955 ;; Return value:  Size  Location     Type
 27956 ;;                  1    wreg      void 
 27957 ;; Registers used:
 27958 ;;		wreg, status,2, status,0
 27959 ;; Tracked objects:
 27960 ;;		On entry : 0/0
 27961 ;;		On exit  : 0/0
 27962 ;;		Unchanged: 0/0
 27963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27964 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27967 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27968 ;;Total ram usage:        2 bytes
 27969 ;; Hardware stack levels used:    1
 27970 ;; Hardware stack levels required when called:    7
 27971 ;; This function calls:
 27972 ;;		Nothing
 27973 ;; This function is called by:
 27974 ;;		_DIO0_ISR_Lora_Init
 27975 ;;		_EXT_INT_Initialize
 27976 ;; This function uses a non-reentrant model
 27977 ;;
 27978                           
 27979                           	psect	text166
 27980  00A72E                     __ptext166:
 27981                           	opt callstack 0
 27982  00A72E                     _INT1_SetInterruptHandler:
 27983                           	opt callstack 20
 27984                           
 27985                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 27986                           
 27987                           ;incstack = 0
 27988  00A72E  C060  F1ED         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 27989  00A732  C061  F1EE         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 27990  00A736  0012               	return		;funcret
 27991  00A738                     __end_of_INT1_SetInterruptHandler:
 27992                           	opt callstack 0
 27993                           
 27994 ;; *************** function _EUSART2_Initialize *****************
 27995 ;; Defined at:
 27996 ;;		line 65 in file "mcc_generated_files/eusart2.c"
 27997 ;; Parameters:    Size  Location     Type
 27998 ;;		None
 27999 ;; Auto vars:     Size  Location     Type
 28000 ;;		None
 28001 ;; Return value:  Size  Location     Type
 28002 ;;                  1    wreg      void 
 28003 ;; Registers used:
 28004 ;;		wreg, status,2, status,0, cstack
 28005 ;; Tracked objects:
 28006 ;;		On entry : 0/0
 28007 ;;		On exit  : 0/0
 28008 ;;		Unchanged: 0/0
 28009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28014 ;;Total ram usage:        0 bytes
 28015 ;; Hardware stack levels used:    1
 28016 ;; Hardware stack levels required when called:    8
 28017 ;; This function calls:
 28018 ;;		_EUSART2_SetErrorHandler
 28019 ;;		_EUSART2_SetFramingErrorHandler
 28020 ;;		_EUSART2_SetOverrunErrorHandler
 28021 ;; This function is called by:
 28022 ;;		_SYSTEM_Initialize
 28023 ;; This function uses a non-reentrant model
 28024 ;;
 28025                           
 28026                           	psect	text167
 28027  00978A                     __ptext167:
 28028                           	opt callstack 0
 28029  00978A                     _EUSART2_Initialize:
 28030                           	opt callstack 21
 28031                           
 28032                           ;eusart2.c: 70: BAUDCON2 = 0x08;
 28033                           
 28034                           ;incstack = 0
 28035  00978A  0E08               	movlw	8
 28036  00978C  6E70               	movwf	3952,c	;volatile
 28037                           
 28038                           ;eusart2.c: 73: RCSTA2 = 0x80;
 28039  00978E  0E80               	movlw	128
 28040  009790  6E71               	movwf	3953,c	;volatile
 28041                           
 28042                           ;eusart2.c: 76: TXSTA2 = 0x04;
 28043  009792  0E04               	movlw	4
 28044  009794  6E72               	movwf	3954,c	;volatile
 28045                           
 28046                           ;eusart2.c: 79: SPBRG2 = 0xA0;
 28047  009796  0EA0               	movlw	160
 28048  009798  6E75               	movwf	3957,c	;volatile
 28049                           
 28050                           ;eusart2.c: 82: SPBRGH2 = 0x01;
 28051  00979A  0E01               	movlw	1
 28052  00979C  6E76               	movwf	3958,c	;volatile
 28053                           
 28054                           ;eusart2.c: 85: EUSART2_SetFramingErrorHandler(EUSART2_DefaultFramingErrorHandler);
 28055  00979E  0E00               	movlw	0
 28056  0097A0  0100               	movlb	0	; () banked
 28057  0097A2  6F60               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler& (0+255),b
 28058  0097A4  0E00               	movlw	0
 28059  0097A6  6F61               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 28060  0097A8  ECA1  F053         	call	_EUSART2_SetFramingErrorHandler	;wreg free
 28061                           
 28062                           ;eusart2.c: 86: EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOverrunErrorHandler);
 28063  0097AC  0E00               	movlw	0
 28064  0097AE  0100               	movlb	0	; () banked
 28065  0097B0  6F60               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler& (0+255),b
 28066  0097B2  0E00               	movlw	0
 28067  0097B4  6F61               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 28068  0097B6  EC9C  F053         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
 28069                           
 28070                           ;eusart2.c: 87: EUSART2_SetErrorHandler(EUSART2_DefaultErrorHandler);
 28071  0097BA  0E00               	movlw	0
 28072  0097BC  0100               	movlb	0	; () banked
 28073  0097BE  6F60               	movwf	EUSART2_SetErrorHandler@interruptHandler& (0+255),b
 28074  0097C0  0E00               	movlw	0
 28075  0097C2  6F61               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)& (0+255),b
 28076  0097C4  ECA6  F053         	call	_EUSART2_SetErrorHandler	;wreg free
 28077                           
 28078                           ;eusart2.c: 89: eusart2RxLastError.status = 0;
 28079  0097C8  0E00               	movlw	0
 28080  0097CA  0101               	movlb	1	; () banked
 28081  0097CC  6F26               	movwf	_eusart2RxLastError& (0+255),b	;volatile
 28082                           
 28083                           ; BSR set to: 1
 28084  0097CE  0012               	return		;funcret
 28085  0097D0                     __end_of_EUSART2_Initialize:
 28086                           	opt callstack 0
 28087                           
 28088 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 28089 ;; Defined at:
 28090 ;;		line 160 in file "mcc_generated_files/eusart2.c"
 28091 ;; Parameters:    Size  Location     Type
 28092 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 28093 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 28094 ;; Auto vars:     Size  Location     Type
 28095 ;;		None
 28096 ;; Return value:  Size  Location     Type
 28097 ;;                  1    wreg      void 
 28098 ;; Registers used:
 28099 ;;		wreg, status,2, status,0
 28100 ;; Tracked objects:
 28101 ;;		On entry : 0/0
 28102 ;;		On exit  : 0/0
 28103 ;;		Unchanged: 0/0
 28104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28108 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28109 ;;Total ram usage:        2 bytes
 28110 ;; Hardware stack levels used:    1
 28111 ;; Hardware stack levels required when called:    7
 28112 ;; This function calls:
 28113 ;;		Nothing
 28114 ;; This function is called by:
 28115 ;;		_EUSART2_Initialize
 28116 ;; This function uses a non-reentrant model
 28117 ;;
 28118                           
 28119                           	psect	text168
 28120  00A738                     __ptext168:
 28121                           	opt callstack 0
 28122  00A738                     _EUSART2_SetOverrunErrorHandler:
 28123                           	opt callstack 21
 28124                           
 28125                           ;eusart2.c: 161: EUSART2_OverrunErrorHandler = interruptHandler;
 28126                           
 28127                           ; BSR set to: 1
 28128                           ;incstack = 0
 28129  00A738  C060  F2FC         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
 28130  00A73C  C061  F2FD         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
 28131  00A740  0012               	return		;funcret
 28132  00A742                     __end_of_EUSART2_SetOverrunErrorHandler:
 28133                           	opt callstack 0
 28134                           
 28135 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 28136 ;; Defined at:
 28137 ;;		line 156 in file "mcc_generated_files/eusart2.c"
 28138 ;; Parameters:    Size  Location     Type
 28139 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 28140 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 28141 ;; Auto vars:     Size  Location     Type
 28142 ;;		None
 28143 ;; Return value:  Size  Location     Type
 28144 ;;                  1    wreg      void 
 28145 ;; Registers used:
 28146 ;;		wreg, status,2, status,0
 28147 ;; Tracked objects:
 28148 ;;		On entry : 0/0
 28149 ;;		On exit  : 0/0
 28150 ;;		Unchanged: 0/0
 28151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28152 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28155 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28156 ;;Total ram usage:        2 bytes
 28157 ;; Hardware stack levels used:    1
 28158 ;; Hardware stack levels required when called:    7
 28159 ;; This function calls:
 28160 ;;		Nothing
 28161 ;; This function is called by:
 28162 ;;		_EUSART2_Initialize
 28163 ;; This function uses a non-reentrant model
 28164 ;;
 28165                           
 28166                           	psect	text169
 28167  00A742                     __ptext169:
 28168                           	opt callstack 0
 28169  00A742                     _EUSART2_SetFramingErrorHandler:
 28170                           	opt callstack 21
 28171                           
 28172                           ;eusart2.c: 157: EUSART2_FramingErrorHandler = interruptHandler;
 28173                           
 28174                           ;incstack = 0
 28175  00A742  C060  F2FE         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
 28176  00A746  C061  F2FF         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
 28177  00A74A  0012               	return		;funcret
 28178  00A74C                     __end_of_EUSART2_SetFramingErrorHandler:
 28179                           	opt callstack 0
 28180                           
 28181 ;; *************** function _EUSART2_SetErrorHandler *****************
 28182 ;; Defined at:
 28183 ;;		line 164 in file "mcc_generated_files/eusart2.c"
 28184 ;; Parameters:    Size  Location     Type
 28185 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 28186 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 28187 ;; Auto vars:     Size  Location     Type
 28188 ;;		None
 28189 ;; Return value:  Size  Location     Type
 28190 ;;                  1    wreg      void 
 28191 ;; Registers used:
 28192 ;;		wreg, status,2, status,0
 28193 ;; Tracked objects:
 28194 ;;		On entry : 0/0
 28195 ;;		On exit  : 0/0
 28196 ;;		Unchanged: 0/0
 28197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28198 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28201 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28202 ;;Total ram usage:        2 bytes
 28203 ;; Hardware stack levels used:    1
 28204 ;; Hardware stack levels required when called:    7
 28205 ;; This function calls:
 28206 ;;		Nothing
 28207 ;; This function is called by:
 28208 ;;		_EUSART2_Initialize
 28209 ;; This function uses a non-reentrant model
 28210 ;;
 28211                           
 28212                           	psect	text170
 28213  00A74C                     __ptext170:
 28214                           	opt callstack 0
 28215  00A74C                     _EUSART2_SetErrorHandler:
 28216                           	opt callstack 21
 28217                           
 28218                           ;eusart2.c: 165: EUSART2_ErrorHandler = interruptHandler;
 28219                           
 28220                           ;incstack = 0
 28221  00A74C  C060  F2FA         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
 28222  00A750  C061  F2FB         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
 28223  00A754  0012               	return		;funcret
 28224  00A756                     __end_of_EUSART2_SetErrorHandler:
 28225                           	opt callstack 0
 28226                           
 28227 ;; *************** function _ADC_Initialize *****************
 28228 ;; Defined at:
 28229 ;;		line 60 in file "mcc_generated_files/adc.c"
 28230 ;; Parameters:    Size  Location     Type
 28231 ;;		None
 28232 ;; Auto vars:     Size  Location     Type
 28233 ;;		None
 28234 ;; Return value:  Size  Location     Type
 28235 ;;                  1    wreg      void 
 28236 ;; Registers used:
 28237 ;;		wreg, status,2
 28238 ;; Tracked objects:
 28239 ;;		On entry : 0/0
 28240 ;;		On exit  : 0/0
 28241 ;;		Unchanged: 0/0
 28242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28247 ;;Total ram usage:        0 bytes
 28248 ;; Hardware stack levels used:    1
 28249 ;; Hardware stack levels required when called:    7
 28250 ;; This function calls:
 28251 ;;		Nothing
 28252 ;; This function is called by:
 28253 ;;		_SYSTEM_Initialize
 28254 ;; This function uses a non-reentrant model
 28255 ;;
 28256                           
 28257                           	psect	text171
 28258  00A554                     __ptext171:
 28259                           	opt callstack 0
 28260  00A554                     _ADC_Initialize:
 28261                           	opt callstack 22
 28262                           
 28263                           ;adc.c: 65: ADCON0 = 0x01;
 28264                           
 28265                           ;incstack = 0
 28266  00A554  0E01               	movlw	1
 28267  00A556  6EC2               	movwf	4034,c	;volatile
 28268                           
 28269                           ;adc.c: 68: ADCON1 = 0x00;
 28270  00A558  0E00               	movlw	0
 28271  00A55A  6EC1               	movwf	4033,c	;volatile
 28272                           
 28273                           ;adc.c: 71: ADCON2 = 0x00;
 28274  00A55C  0E00               	movlw	0
 28275  00A55E  6EC0               	movwf	4032,c	;volatile
 28276                           
 28277                           ;adc.c: 74: ADRESL = 0x00;
 28278  00A560  0E00               	movlw	0
 28279  00A562  6EC3               	movwf	4035,c	;volatile
 28280                           
 28281                           ;adc.c: 77: ADRESH = 0x00;
 28282  00A564  0E00               	movlw	0
 28283  00A566  6EC4               	movwf	4036,c	;volatile
 28284                           
 28285                           ;adc.c: 80: PIE1bits.ADIE = 1;
 28286  00A568  8C9D               	bsf	3997,6,c	;volatile
 28287  00A56A  0012               	return		;funcret
 28288  00A56C                     __end_of_ADC_Initialize:
 28289                           	opt callstack 0
 28290                           
 28291 ;; *************** function _LORAWAN_SetDeviceEui *****************
 28292 ;; Defined at:
 28293 ;;		line 337 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28294 ;; Parameters:    Size  Location     Type
 28295 ;;  deviceEuiNew    2   11[BANK0 ] PTR unsigned char 
 28296 ;;		 -> deviceEui(8), 
 28297 ;; Auto vars:     Size  Location     Type
 28298 ;;		None
 28299 ;; Return value:  Size  Location     Type
 28300 ;;                  1    wreg      void 
 28301 ;; Registers used:
 28302 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28303 ;; Tracked objects:
 28304 ;;		On entry : 0/0
 28305 ;;		On exit  : 0/0
 28306 ;;		Unchanged: 0/0
 28307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28308 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28311 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28312 ;;Total ram usage:        2 bytes
 28313 ;; Hardware stack levels used:    1
 28314 ;; Hardware stack levels required when called:    8
 28315 ;; This function calls:
 28316 ;;		_memcpy
 28317 ;; This function is called by:
 28318 ;;		_main
 28319 ;; This function uses a non-reentrant model
 28320 ;;
 28321                           
 28322                           	psect	text172
 28323  009E56                     __ptext172:
 28324                           	opt callstack 0
 28325  009E56                     _LORAWAN_SetDeviceEui:
 28326                           	opt callstack 22
 28327                           
 28328                           ;lorawan.c: 339: if (deviceEuiNew != (0))
 28329                           
 28330                           ;incstack = 0
 28331  009E56  0100               	movlb	0	; () banked
 28332  009E58  516B               	movf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),w,b
 28333  009E5A  116C               	iorwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),w,b
 28334  009E5C  B4D8               	btfsc	status,2,c
 28335  009E5E  0012               	return	
 28336                           
 28337                           ; BSR set to: 0
 28338                           ;lorawan.c: 340: {;lorawan.c: 341: memcpy(loRa.activationParameters.deviceEui.buffer, de
      +                          viceEuiNew, sizeof(loRa.activationParameters.deviceEui) );
 28339  009E60  0E5F               	movlw	low (_loRa+90)
 28340  009E62  6F60               	movwf	memcpy@d1& (0+255),b
 28341  009E64  0E02               	movlw	high (_loRa+90)
 28342  009E66  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28343  009E68  C06B  F062         	movff	LORAWAN_SetDeviceEui@deviceEuiNew,memcpy@s1
 28344  009E6C  C06C  F063         	movff	LORAWAN_SetDeviceEui@deviceEuiNew+1,memcpy@s1+1
 28345  009E70  0E00               	movlw	0
 28346  009E72  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28347  009E74  0E08               	movlw	8
 28348  009E76  6F64               	movwf	memcpy@n& (0+255),b
 28349  009E78  ECC3  F047         	call	_memcpy	;wreg free
 28350                           
 28351                           ;lorawan.c: 342: loRa.macKeys.deviceEui = 1;
 28352  009E7C  0102               	movlb	2	; () banked
 28353  009E7E  81AA               	bsf	(_loRa+165)& (0+255),0,b
 28354                           
 28355                           ; BSR set to: 2
 28356                           ;lorawan.c: 343: loRa.macStatus.networkJoined = 0;
 28357  009E80  9907               	bcf	(_loRa+2)& (0+255),4,b
 28358  009E82  0012               	return		;funcret
 28359  009E84                     __end_of_LORAWAN_SetDeviceEui:
 28360                           	opt callstack 0
 28361                           
 28362 ;; *************** function _LORAWAN_SetApplicationKey *****************
 28363 ;; Defined at:
 28364 ;;		line 409 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28365 ;; Parameters:    Size  Location     Type
 28366 ;;  applicationK    2   11[BANK0 ] PTR unsigned char 
 28367 ;;		 -> appKey(16), 
 28368 ;; Auto vars:     Size  Location     Type
 28369 ;;		None
 28370 ;; Return value:  Size  Location     Type
 28371 ;;                  1    wreg      void 
 28372 ;; Registers used:
 28373 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28374 ;; Tracked objects:
 28375 ;;		On entry : 0/0
 28376 ;;		On exit  : 0/0
 28377 ;;		Unchanged: 0/0
 28378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28382 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28383 ;;Total ram usage:        2 bytes
 28384 ;; Hardware stack levels used:    1
 28385 ;; Hardware stack levels required when called:    8
 28386 ;; This function calls:
 28387 ;;		_memcpy
 28388 ;; This function is called by:
 28389 ;;		_main
 28390 ;; This function uses a non-reentrant model
 28391 ;;
 28392                           
 28393                           	psect	text173
 28394  009E84                     __ptext173:
 28395                           	opt callstack 0
 28396  009E84                     _LORAWAN_SetApplicationKey:
 28397                           	opt callstack 22
 28398                           
 28399                           ;lorawan.c: 411: if (applicationKeyNew != (0))
 28400                           
 28401                           ;incstack = 0
 28402  009E84  0100               	movlb	0	; () banked
 28403  009E86  516B               	movf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),w,b
 28404  009E88  116C               	iorwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),w,b
 28405  009E8A  B4D8               	btfsc	status,2,c
 28406  009E8C  0012               	return	
 28407                           
 28408                           ; BSR set to: 0
 28409                           ;lorawan.c: 412: {;lorawan.c: 413: memcpy( loRa.activationParameters.applicationKey, app
      +                          licationKeyNew, 16);
 28410  009E8E  0E47               	movlw	low (_loRa+66)
 28411  009E90  6F60               	movwf	memcpy@d1& (0+255),b
 28412  009E92  0E02               	movlw	high (_loRa+66)
 28413  009E94  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28414  009E96  C06B  F062         	movff	LORAWAN_SetApplicationKey@applicationKeyNew,memcpy@s1
 28415  009E9A  C06C  F063         	movff	LORAWAN_SetApplicationKey@applicationKeyNew+1,memcpy@s1+1
 28416  009E9E  0E00               	movlw	0
 28417  009EA0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28418  009EA2  0E10               	movlw	16
 28419  009EA4  6F64               	movwf	memcpy@n& (0+255),b
 28420  009EA6  ECC3  F047         	call	_memcpy	;wreg free
 28421                           
 28422                           ;lorawan.c: 414: loRa.macKeys.applicationKey = 1;
 28423  009EAA  0102               	movlb	2	; () banked
 28424  009EAC  87AA               	bsf	(_loRa+165)& (0+255),3,b
 28425                           
 28426                           ; BSR set to: 2
 28427                           ;lorawan.c: 415: loRa.macStatus.networkJoined = 0;
 28428  009EAE  9907               	bcf	(_loRa+2)& (0+255),4,b
 28429  009EB0  0012               	return		;funcret
 28430  009EB2                     __end_of_LORAWAN_SetApplicationKey:
 28431                           	opt callstack 0
 28432                           
 28433 ;; *************** function _LORAWAN_SetApplicationEui *****************
 28434 ;; Defined at:
 28435 ;;		line 352 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28436 ;; Parameters:    Size  Location     Type
 28437 ;;  applicationE    2   11[BANK0 ] PTR unsigned char 
 28438 ;;		 -> appEui(8), 
 28439 ;; Auto vars:     Size  Location     Type
 28440 ;;		None
 28441 ;; Return value:  Size  Location     Type
 28442 ;;                  1    wreg      void 
 28443 ;; Registers used:
 28444 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28445 ;; Tracked objects:
 28446 ;;		On entry : 0/0
 28447 ;;		On exit  : 0/0
 28448 ;;		Unchanged: 0/0
 28449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28454 ;;Total ram usage:        2 bytes
 28455 ;; Hardware stack levels used:    1
 28456 ;; Hardware stack levels required when called:    8
 28457 ;; This function calls:
 28458 ;;		_memcpy
 28459 ;; This function is called by:
 28460 ;;		_main
 28461 ;; This function uses a non-reentrant model
 28462 ;;
 28463                           
 28464                           	psect	text174
 28465  009EB2                     __ptext174:
 28466                           	opt callstack 0
 28467  009EB2                     _LORAWAN_SetApplicationEui:
 28468                           	opt callstack 22
 28469                           
 28470                           ;lorawan.c: 354: if (applicationEuiNew != (0))
 28471                           
 28472                           ;incstack = 0
 28473  009EB2  0100               	movlb	0	; () banked
 28474  009EB4  516B               	movf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),w,b
 28475  009EB6  116C               	iorwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),w,b
 28476  009EB8  B4D8               	btfsc	status,2,c
 28477  009EBA  0012               	return	
 28478                           
 28479                           ; BSR set to: 0
 28480                           ;lorawan.c: 355: {;lorawan.c: 356: memcpy(loRa.activationParameters.applicationEui.buffe
      +                          r, applicationEuiNew, 8);
 28481  009EBC  0E57               	movlw	low (_loRa+82)
 28482  009EBE  6F60               	movwf	memcpy@d1& (0+255),b
 28483  009EC0  0E02               	movlw	high (_loRa+82)
 28484  009EC2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28485  009EC4  C06B  F062         	movff	LORAWAN_SetApplicationEui@applicationEuiNew,memcpy@s1
 28486  009EC8  C06C  F063         	movff	LORAWAN_SetApplicationEui@applicationEuiNew+1,memcpy@s1+1
 28487  009ECC  0E00               	movlw	0
 28488  009ECE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28489  009ED0  0E08               	movlw	8
 28490  009ED2  6F64               	movwf	memcpy@n& (0+255),b
 28491  009ED4  ECC3  F047         	call	_memcpy	;wreg free
 28492                           
 28493                           ;lorawan.c: 357: loRa.macKeys.applicationEui = 1;
 28494  009ED8  0102               	movlb	2	; () banked
 28495  009EDA  83AA               	bsf	(_loRa+165)& (0+255),1,b
 28496                           
 28497                           ; BSR set to: 2
 28498                           ;lorawan.c: 358: loRa.macStatus.networkJoined = 0;
 28499  009EDC  9907               	bcf	(_loRa+2)& (0+255),4,b
 28500  009EDE  0012               	return		;funcret
 28501  009EE0                     __end_of_LORAWAN_SetApplicationEui:
 28502                           	opt callstack 0
 28503                           
 28504 ;; *************** function _LORAWAN_Join *****************
 28505 ;; Defined at:
 28506 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28507 ;; Parameters:    Size  Location     Type
 28508 ;;  activationTy    1    wreg     enum E6082
 28509 ;; Auto vars:     Size  Location     Type
 28510 ;;  activationTy    1  124[BANK0 ] enum E6082
 28511 ;;  result          1  123[BANK0 ] enum E6059
 28512 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 28513 ;; Return value:  Size  Location     Type
 28514 ;;                  1    wreg      enum E6059
 28515 ;; Registers used:
 28516 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28517 ;; Tracked objects:
 28518 ;;		On entry : 0/0
 28519 ;;		On exit  : 0/0
 28520 ;;		Unchanged: 0/0
 28521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28523 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28525 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28526 ;;Total ram usage:        3 bytes
 28527 ;; Hardware stack levels used:    1
 28528 ;; Hardware stack levels required when called:   14
 28529 ;; This function calls:
 28530 ;;		_PrepareJoinRequestFrame
 28531 ;;		_RADIO_Transmit
 28532 ;;		_SelectChannelForTransmission
 28533 ;;		_SwTimerSetTimeout
 28534 ;;		_SwTimerStart
 28535 ;;		_UpdateJoinInProgress
 28536 ;; This function is called by:
 28537 ;;		_main
 28538 ;; This function uses a non-reentrant model
 28539 ;;
 28540                           
 28541                           	psect	text175
 28542  007E1E                     __ptext175:
 28543                           	opt callstack 0
 28544  007E1E                     _LORAWAN_Join:
 28545                           	opt callstack 16
 28546                           
 28547                           ;incstack = 0
 28548                           ;LORAWAN_Join@activationTypeNew stored from wreg
 28549  007E1E  0100               	movlb	0	; () banked
 28550  007E20  6FDC               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 28551                           
 28552                           ;lorawan.c: 117: uint8_t bufferIndex;;lorawan.c: 118: LorawanError_t result;;lorawan.c: 
      +                          120: if (loRa.macStatus.macPause == 1)
 28553  007E22  0102               	movlb	2	; () banked
 28554  007E24  B108               	btfsc	(_loRa+3)& (0+255),0,b
 28555  007E26  0012               	return	
 28556                           
 28557                           ; BSR set to: 2
 28558                           ;lorawan.c: 123: };lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 28559  007E28  BF07               	btfsc	(_loRa+2)& (0+255),7,b
 28560  007E2A  0012               	return	
 28561                           
 28562                           ; BSR set to: 2
 28563                           ;lorawan.c: 128: };lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 28564  007E2C  5107               	movf	(_loRa+2)& (0+255),w,b
 28565  007E2E  0B0F               	andlw	15
 28566  007E30  0900               	iorlw	0
 28567  007E32  A4D8               	btfss	status,2,c
 28568  007E34  0012               	return	
 28569                           
 28570                           ; BSR set to: 2
 28571                           ;lorawan.c: 133: };lorawan.c: 135: loRa.activationParameters.activationType = activation
      +                          TypeNew;
 28572  007E36  C0DC  F222         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 28573                           
 28574                           ; BSR set to: 2
 28575                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 28576  007E3A  0100               	movlb	0	; () banked
 28577  007E3C  51DC               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 28578  007E3E  A4D8               	btfss	status,2,c
 28579  007E40  D024               	goto	l1511
 28580                           
 28581                           ; BSR set to: 0
 28582                           ;lorawan.c: 138: {;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.a
      +                          pplicationEui == 0) || (loRa.macKeys.applicationKey == 0) )
 28583  007E42  0102               	movlb	2	; () banked
 28584  007E44  A1AA               	btfss	(_loRa+165)& (0+255),0,b
 28585  007E46  0012               	return	
 28586                           
 28587                           ; BSR set to: 2
 28588  007E48  A3AA               	btfss	(_loRa+165)& (0+255),1,b
 28589  007E4A  0012               	return	
 28590                           
 28591                           ; BSR set to: 2
 28592  007E4C  A7AA               	btfss	(_loRa+165)& (0+255),3,b
 28593  007E4E  0012               	return	
 28594                           
 28595                           ; BSR set to: 2
 28596                           ;lorawan.c: 144: else;lorawan.c: 145: {;lorawan.c: 146: bufferIndex = PrepareJoinRequest
      +                          Frame ();
 28597  007E50  EC3D  F02B         	call	_PrepareJoinRequestFrame	;wreg free
 28598  007E54  0100               	movlb	0	; () banked
 28599  007E56  6FDA               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 28600                           
 28601                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 28602  007E58  0E00               	movlw	0
 28603  007E5A  EC61  F046         	call	_SelectChannelForTransmission
 28604  007E5E  0100               	movlb	0	; () banked
 28605  007E60  6FDB               	movwf	LORAWAN_Join@result& (0+255),b
 28606                           
 28607                           ; BSR set to: 0
 28608                           ;lorawan.c: 149: if (result == OK)
 28609  007E62  51DB               	movf	LORAWAN_Join@result& (0+255),w,b
 28610  007E64  A4D8               	btfss	status,2,c
 28611  007E66  0012               	return	
 28612                           
 28613                           ; BSR set to: 0
 28614                           ;lorawan.c: 150: {;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 28615  007E68  0EB8               	movlw	low _macBuffer
 28616  007E6A  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 28617  007E6C  0E06               	movlw	high _macBuffer
 28618  007E6E  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 28619  007E70  C0DA  F0AB         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 28620  007E74  EC82  F01F         	call	_RADIO_Transmit	;wreg free
 28621  007E78  0100               	movlb	0	; () banked
 28622  007E7A  51A9               	movf	?_RADIO_Transmit& (0+255),w,b
 28623  007E7C  11AA               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 28624  007E7E  A4D8               	btfss	status,2,c
 28625  007E80  0012               	return	
 28626                           
 28627                           ; BSR set to: 0
 28628                           ;lorawan.c: 152: {;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 28629  007E82  0E01               	movlw	1
 28630  007E84  EC78  F052         	call	_UpdateJoinInProgress
 28631  007E88  0012               	return	
 28632  007E8A                     l1511:
 28633                           
 28634                           ; BSR set to: 0
 28635                           ;lorawan.c: 167: else;lorawan.c: 168: {;lorawan.c: 170: if ( (loRa.macKeys.applicationSe
      +                          ssionKey == 0) || (loRa.macKeys.networkSessionKey == 0) || (loRa.macKeys.deviceAddress =
      +                          = 0) )
 28636  007E8A  0102               	movlb	2	; () banked
 28637  007E8C  ABAA               	btfss	(_loRa+165)& (0+255),5,b
 28638  007E8E  0012               	return	
 28639                           
 28640                           ; BSR set to: 2
 28641  007E90  A9AA               	btfss	(_loRa+165)& (0+255),4,b
 28642  007E92  0012               	return	
 28643                           
 28644                           ; BSR set to: 2
 28645  007E94  A5AA               	btfss	(_loRa+165)& (0+255),2,b
 28646  007E96  0012               	return	
 28647                           
 28648                           ; BSR set to: 2
 28649                           ;lorawan.c: 174: else;lorawan.c: 175: {;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 28650  007E98  0E07               	movlw	7
 28651  007E9A  EC78  F052         	call	_UpdateJoinInProgress
 28652                           
 28653                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 28654  007E9E  0E8F               	movlw	143
 28655  007EA0  0100               	movlb	0	; () banked
 28656  007EA2  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 28657  007EA4  0E02               	movlw	2
 28658  007EA6  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 28659  007EA8  0E00               	movlw	0
 28660  007EAA  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 28661  007EAC  0E00               	movlw	0
 28662  007EAE  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 28663  007EB0  0102               	movlb	2	; () banked
 28664  007EB2  51F8               	movf	(_loRa+243)& (0+255),w,b
 28665  007EB4  EC2D  F04C         	call	_SwTimerSetTimeout
 28666                           
 28667                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 28668  007EB8  0102               	movlb	2	; () banked
 28669  007EBA  51F8               	movf	(_loRa+243)& (0+255),w,b
 28670  007EBC  EC4A  F040         	call	_SwTimerStart
 28671  007EC0  0012               	return		;funcret
 28672  007EC2                     __end_of_LORAWAN_Join:
 28673                           	opt callstack 0
 28674                           
 28675 ;; *************** function _UpdateJoinInProgress *****************
 28676 ;; Defined at:
 28677 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28678 ;; Parameters:    Size  Location     Type
 28679 ;;  state           1    wreg     unsigned char 
 28680 ;; Auto vars:     Size  Location     Type
 28681 ;;  state           1    0[BANK0 ] unsigned char 
 28682 ;; Return value:  Size  Location     Type
 28683 ;;                  1    wreg      void 
 28684 ;; Registers used:
 28685 ;;		wreg, status,2, status,0
 28686 ;; Tracked objects:
 28687 ;;		On entry : 0/0
 28688 ;;		On exit  : 0/0
 28689 ;;		Unchanged: 0/0
 28690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28694 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28695 ;;Total ram usage:        1 bytes
 28696 ;; Hardware stack levels used:    1
 28697 ;; Hardware stack levels required when called:    7
 28698 ;; This function calls:
 28699 ;;		Nothing
 28700 ;; This function is called by:
 28701 ;;		_LORAWAN_Join
 28702 ;; This function uses a non-reentrant model
 28703 ;;
 28704                           
 28705                           	psect	text176
 28706  00A4F0                     __ptext176:
 28707                           	opt callstack 0
 28708  00A4F0                     _UpdateJoinInProgress:
 28709                           	opt callstack 22
 28710                           
 28711                           ;incstack = 0
 28712                           ;UpdateJoinInProgress@state stored from wreg
 28713  00A4F0  0100               	movlb	0	; () banked
 28714  00A4F2  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 28715                           
 28716                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 28717  00A4F4  0102               	movlb	2	; () banked
 28718  00A4F6  9907               	bcf	(_loRa+2)& (0+255),4,b
 28719                           
 28720                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 28721  00A4F8  8505               	bsf	_loRa& (0+255),2,b
 28722                           
 28723                           ; BSR set to: 2
 28724                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 28725  00A4FA  5107               	movf	(_loRa+2)& (0+255),w,b
 28726  00A4FC  0100               	movlb	0	; () banked
 28727  00A4FE  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28728  00A500  0BF0               	andlw	-16
 28729  00A502  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28730  00A504  0102               	movlb	2	; () banked
 28731  00A506  6F07               	movwf	(_loRa+2)& (0+255),b
 28732                           
 28733                           ; BSR set to: 2
 28734  00A508  0012               	return		;funcret
 28735  00A50A                     __end_of_UpdateJoinInProgress:
 28736                           	opt callstack 0
 28737                           
 28738 ;; *************** function _SelectChannelForTransmission *****************
 28739 ;; Defined at:
 28740 ;;		line 920 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28741 ;; Parameters:    Size  Location     Type
 28742 ;;  transmission    1    wreg     unsigned char 
 28743 ;; Auto vars:     Size  Location     Type
 28744 ;;  transmission    1   83[BANK0 ] unsigned char 
 28745 ;;  channelIndex    1   85[BANK0 ] unsigned char 
 28746 ;;  result          1   84[BANK0 ] enum E6118
 28747 ;; Return value:  Size  Location     Type
 28748 ;;                  1    wreg      enum E6118
 28749 ;; Registers used:
 28750 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28751 ;; Tracked objects:
 28752 ;;		On entry : 0/0
 28753 ;;		On exit  : 0/0
 28754 ;;		Unchanged: 0/0
 28755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28757 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28759 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28760 ;;Total ram usage:        3 bytes
 28761 ;; Hardware stack levels used:    1
 28762 ;; Hardware stack levels required when called:   11
 28763 ;; This function calls:
 28764 ;;		_ConfigureRadioTx
 28765 ;;		_SearchAvailableChannel
 28766 ;; This function is called by:
 28767 ;;		_LORAWAN_RxTimeout
 28768 ;;		_LORAWAN_Join
 28769 ;;		_LORAWAN_Send
 28770 ;;		_AckRetransmissionCallback
 28771 ;;		_UnconfirmedTransmissionCallback
 28772 ;; This function uses a non-reentrant model
 28773 ;;
 28774                           
 28775                           	psect	text177
 28776  008CC2                     __ptext177:
 28777                           	opt callstack 0
 28778  008CC2                     _SelectChannelForTransmission:
 28779                           	opt callstack 16
 28780                           
 28781                           ; BSR set to: 2
 28782                           ;incstack = 0
 28783                           ;SelectChannelForTransmission@transmissionType stored from wreg
 28784  008CC2  0100               	movlb	0	; () banked
 28785  008CC4  6FB3               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 28786                           
 28787                           ;lorawan_eu.c: 923: uint8_t channelIndex;;lorawan_eu.c: 925: result = SearchAvailableCha
      +                          nnel (16, transmissionType, &channelIndex);
 28788  008CC6  C0B3  F0A7         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 28789  008CCA  0EB5               	movlw	low SelectChannelForTransmission@channelIndex
 28790  008CCC  0100               	movlb	0	; () banked
 28791  008CCE  6FA8               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 28792  008CD0  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 28793  008CD2  6FA9               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 28794  008CD4  0E10               	movlw	16
 28795  008CD6  ECDB  F033         	call	_SearchAvailableChannel
 28796  008CDA  0100               	movlb	0	; () banked
 28797  008CDC  6FB4               	movwf	SelectChannelForTransmission@result& (0+255),b
 28798                           
 28799                           ; BSR set to: 0
 28800                           ;lorawan_eu.c: 927: if (result == OK)
 28801  008CDE  51B4               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28802  008CE0  A4D8               	btfss	status,2,c
 28803  008CE2  D020               	goto	l19494
 28804                           
 28805                           ; BSR set to: 0
 28806                           ;lorawan_eu.c: 928: {;lorawan_eu.c: 929: loRa.lastUsedChannelIndex = channelIndex;
 28807  008CE4  C0B5  F2DF         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 28808                           
 28809                           ; BSR set to: 0
 28810                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 28811  008CE8  51B5               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 28812  008CEA  0D0E               	mullw	14
 28813  008CEC  0E14               	movlw	low _Channels
 28814  008CEE  24F3               	addwf	prodl,w,c
 28815  008CF0  6ED9               	movwf	fsr2l,c
 28816  008CF2  0E04               	movlw	high _Channels
 28817  008CF4  20F4               	addwfc	prodh,w,c
 28818  008CF6  6EDA               	movwf	fsr2h,c
 28819  008CF8  CFDE F218          	movff	postinc2,_loRa+19
 28820  008CFC  CFDE F219          	movff	postinc2,_loRa+20
 28821  008D00  CFDE F21A          	movff	postinc2,_loRa+21
 28822  008D04  CFDE F21B          	movff	postinc2,_loRa+22
 28823                           
 28824                           ; BSR set to: 0
 28825                           ;lorawan_eu.c: 931: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 28826  008D08  C2E4  F21C         	movff	_loRa+223,_loRa+23
 28827                           
 28828                           ; BSR set to: 0
 28829                           ;lorawan_eu.c: 933: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 28830  008D0C  C218  F073         	movff	_loRa+19,ConfigureRadioTx@freq
 28831  008D10  C219  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
 28832  008D14  C21A  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
 28833  008D18  C21B  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
 28834  008D1C  0102               	movlb	2	; () banked
 28835  008D1E  511C               	movf	(_loRa+23)& (0+255),w,b
 28836  008D20  ECEC  F04A         	call	_ConfigureRadioTx
 28837  008D24                     l19494:
 28838                           
 28839                           ;lorawan_eu.c: 934: };lorawan_eu.c: 935: return result;
 28840  008D24  0100               	movlb	0	; () banked
 28841  008D26  51B4               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28842                           
 28843                           ; BSR set to: 0
 28844  008D28  0012               	return		;funcret
 28845  008D2A                     __end_of_SelectChannelForTransmission:
 28846                           	opt callstack 0
 28847                           
 28848 ;; *************** function _SearchAvailableChannel *****************
 28849 ;; Defined at:
 28850 ;;		line 779 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28851 ;; Parameters:    Size  Location     Type
 28852 ;;  maxChannels     1    wreg     unsigned char 
 28853 ;;  transmission    1   71[BANK0 ] unsigned char 
 28854 ;;  channelIndex    2   72[BANK0 ] PTR unsigned char 
 28855 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 28856 ;; Auto vars:     Size  Location     Type
 28857 ;;  maxChannels     1   80[BANK0 ] unsigned char 
 28858 ;;  i               1   82[BANK0 ] unsigned char 
 28859 ;;  randomNumber    1   81[BANK0 ] unsigned char 
 28860 ;;  result          1   79[BANK0 ] enum E6118
 28861 ;;  randomNumber    1   78[BANK0 ] unsigned char 
 28862 ;; Return value:  Size  Location     Type
 28863 ;;                  1    wreg      enum E6118
 28864 ;; Registers used:
 28865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28866 ;; Tracked objects:
 28867 ;;		On entry : 0/0
 28868 ;;		On exit  : 0/0
 28869 ;;		Unchanged: 0/0
 28870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28871 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28872 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28873 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28874 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28875 ;;Total ram usage:       12 bytes
 28876 ;; Hardware stack levels used:    1
 28877 ;; Hardware stack levels required when called:   10
 28878 ;; This function calls:
 28879 ;;		_Random
 28880 ;; This function is called by:
 28881 ;;		_SelectChannelForTransmission
 28882 ;;		_LORAWAN_RxDone
 28883 ;; This function uses a non-reentrant model
 28884 ;;
 28885                           
 28886                           	psect	text178
 28887  0067B6                     __ptext178:
 28888                           	opt callstack 0
 28889  0067B6                     _SearchAvailableChannel:
 28890                           	opt callstack 16
 28891                           
 28892                           ; BSR set to: 0
 28893                           ;incstack = 0
 28894                           ;SearchAvailableChannel@maxChannels stored from wreg
 28895  0067B6  0100               	movlb	0	; () banked
 28896  0067B8  6FB0               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 28897                           
 28898                           ;lorawan_eu.c: 781: uint8_t randomNumberCopy, randomNumber, i;;lorawan_eu.c: 782: Lorawa
      +                          nError_t result = OK;
 28899  0067BA  0E00               	movlw	0
 28900  0067BC  0100               	movlb	0	; () banked
 28901  0067BE  6FAF               	movwf	SearchAvailableChannel@result& (0+255),b
 28902                           
 28903                           ; BSR set to: 0
 28904                           ;lorawan_eu.c: 784: randomNumber = Random (maxChannels) + 1;
 28905  0067C0  C0B0  F0A5         	movff	SearchAvailableChannel@maxChannels,Random@max
 28906  0067C4  6BA6               	clrf	(Random@max+1)& (0+255),b
 28907  0067C6  EC19  F051         	call	_Random	;wreg free
 28908  0067CA  0100               	movlb	0	; () banked
 28909  0067CC  29A5               	incf	?_Random& (0+255),w,b
 28910  0067CE  6FB1               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 28911                           
 28912                           ; BSR set to: 0
 28913                           ;lorawan_eu.c: 785: randomNumberCopy = randomNumber;
 28914  0067D0  C0B1  F0AE         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 28915                           
 28916                           ;lorawan_eu.c: 787: while (randomNumber)
 28917  0067D4  D060               	goto	l19052
 28918  0067D6                     l19026:
 28919                           
 28920                           ; BSR set to: 0
 28921                           ;lorawan_eu.c: 788: {;lorawan_eu.c: 789: for (i=0; (i < maxChannels) && (randomNumber !=
      +                           0) ; i++)
 28922  0067D6  0E00               	movlw	0
 28923  0067D8  6FB2               	movwf	SearchAvailableChannel@i& (0+255),b
 28924  0067DA  D04F               	goto	l19044
 28925  0067DC                     l19028:
 28926                           
 28927                           ; BSR set to: 0
 28928                           ;lorawan_eu.c: 790: {;lorawan_eu.c: 791: if ( ( Channels[i].status == 1 ) && ( Channels[
      +                          i].channelTimer == 0 ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loR
      +                          a.currentDataRate <= Channels[i].dataRange.max ) )
 28929  0067DC  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28930  0067DE  0D0E               	mullw	14
 28931  0067E0  0E18               	movlw	low (_Channels+4)
 28932  0067E2  24F3               	addwf	prodl,w,c
 28933  0067E4  6ED9               	movwf	fsr2l,c
 28934  0067E6  0E04               	movlw	high (_Channels+4)
 28935  0067E8  20F4               	addwfc	prodh,w,c
 28936  0067EA  6EDA               	movwf	fsr2h,c
 28937  0067EC  04DE               	decf	postinc2,w,c
 28938  0067EE  A4D8               	btfss	status,2,c
 28939  0067F0  D042               	goto	l1154
 28940                           
 28941                           ; BSR set to: 0
 28942  0067F2  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28943  0067F4  0D0E               	mullw	14
 28944  0067F6  0E1C               	movlw	low (_Channels+8)
 28945  0067F8  24F3               	addwf	prodl,w,c
 28946  0067FA  6ED9               	movwf	fsr2l,c
 28947  0067FC  0E04               	movlw	high (_Channels+8)
 28948  0067FE  20F4               	addwfc	prodh,w,c
 28949  006800  6EDA               	movwf	fsr2h,c
 28950  006802  50DE               	movf	postinc2,w,c
 28951  006804  10DE               	iorwf	postinc2,w,c
 28952  006806  10DE               	iorwf	postinc2,w,c
 28953  006808  10DE               	iorwf	postinc2,w,c
 28954  00680A  A4D8               	btfss	status,2,c
 28955  00680C  D034               	goto	l1154
 28956                           
 28957                           ; BSR set to: 0
 28958  00680E  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28959  006810  0D0E               	mullw	14
 28960  006812  0E19               	movlw	low (_Channels+5)
 28961  006814  24F3               	addwf	prodl,w,c
 28962  006816  6ED9               	movwf	fsr2l,c
 28963  006818  0E04               	movlw	high (_Channels+5)
 28964  00681A  20F4               	addwfc	prodh,w,c
 28965  00681C  6EDA               	movwf	fsr2h,c
 28966  00681E  0104               	movlb	4	; () banked
 28967  006820  50DF               	movf	223,w,c
 28968  006822  0B0F               	andlw	15
 28969  006824  0100               	movlb	0	; () banked
 28970  006826  6FAA               	movwf	??_SearchAvailableChannel& (0+255),b
 28971  006828  51AA               	movf	??_SearchAvailableChannel& (0+255),w,b
 28972  00682A  0102               	movlb	2	; () banked
 28973  00682C  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 28974  00682E  A0D8               	btfss	status,0,c
 28975  006830  D022               	goto	l1154
 28976                           
 28977                           ; BSR set to: 2
 28978  006832  0100               	movlb	0	; () banked
 28979  006834  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28980  006836  0D0E               	mullw	14
 28981  006838  0E19               	movlw	low (_Channels+5)
 28982  00683A  24F3               	addwf	prodl,w,c
 28983  00683C  6ED9               	movwf	fsr2l,c
 28984  00683E  0E04               	movlw	high (_Channels+5)
 28985  006840  20F4               	addwfc	prodh,w,c
 28986  006842  6EDA               	movwf	fsr2h,c
 28987  006844  0104               	movlb	4	; () banked
 28988  006846  38DF               	swapf	223,w,c
 28989  006848  0B0F               	andlw	15
 28990  00684A  0100               	movlb	0	; () banked
 28991  00684C  6FAA               	movwf	??_SearchAvailableChannel& (0+255),b
 28992  00684E  0102               	movlb	2	; () banked
 28993  006850  51E4               	movf	(_loRa+223)& (0+255),w,b
 28994  006852  0100               	movlb	0	; () banked
 28995  006854  5DAA               	subwf	??_SearchAvailableChannel& (0+255),w,b
 28996  006856  A0D8               	btfss	status,0,c
 28997  006858  D00E               	goto	l1154
 28998                           
 28999                           ; BSR set to: 0
 29000                           ;lorawan_eu.c: 792: {;lorawan_eu.c: 793: if (transmissionType == 0)
 29001  00685A  51A7               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 29002  00685C  A4D8               	btfss	status,2,c
 29003  00685E  D00A               	goto	u20430
 29004                           
 29005                           ; BSR set to: 0
 29006                           ;lorawan_eu.c: 794: {;lorawan_eu.c: 795: if ( Channels[i].joinRequestChannel == 1 )
 29007  006860  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 29008  006862  0D0E               	mullw	14
 29009  006864  0E20               	movlw	low (_Channels+12)
 29010  006866  24F3               	addwf	prodl,w,c
 29011  006868  6ED9               	movwf	fsr2l,c
 29012  00686A  0E04               	movlw	high (_Channels+12)
 29013  00686C  20F4               	addwfc	prodh,w,c
 29014  00686E  6EDA               	movwf	fsr2h,c
 29015  006870  04DE               	decf	postinc2,w,c
 29016  006872  B4D8               	btfsc	status,2,c
 29017  006874                     u20430:
 29018                           
 29019                           ; BSR set to: 0
 29020                           ;lorawan_eu.c: 796: {;lorawan_eu.c: 797: randomNumber --;
 29021  006874  07B1               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 29022  006876                     l1154:
 29023  006876  0100               	movlb	0	; () banked
 29024  006878  2BB2               	incf	SearchAvailableChannel@i& (0+255),f,b
 29025  00687A                     l19044:
 29026                           
 29027                           ; BSR set to: 0
 29028  00687A  51B0               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 29029  00687C  5DB2               	subwf	SearchAvailableChannel@i& (0+255),w,b
 29030  00687E  B0D8               	btfsc	status,0,c
 29031  006880  D003               	goto	u20450
 29032                           
 29033                           ; BSR set to: 0
 29034  006882  51B1               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 29035  006884  A4D8               	btfss	status,2,c
 29036  006886  D7AA               	goto	l19028
 29037  006888                     u20450:
 29038                           
 29039                           ; BSR set to: 0
 29040                           ;lorawan_eu.c: 803: };lorawan_eu.c: 804: };lorawan_eu.c: 805: };lorawan_eu.c: 807: if ( 
      +                          randomNumber == randomNumberCopy )
 29041  006888  51AE               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 29042  00688A  19B1               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 29043  00688C  A4D8               	btfss	status,2,c
 29044  00688E  D003               	goto	l19052
 29045                           
 29046                           ; BSR set to: 0
 29047                           ;lorawan_eu.c: 808: {;lorawan_eu.c: 809: result = NO_CHANNELS_FOUND;
 29048  006890  0E09               	movlw	9
 29049  006892  6FAF               	movwf	SearchAvailableChannel@result& (0+255),b
 29050                           
 29051                           ;lorawan_eu.c: 810: break;
 29052  006894  D003               	goto	u20470
 29053  006896                     l19052:
 29054                           
 29055                           ; BSR set to: 0
 29056  006896  51B1               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 29057  006898  A4D8               	btfss	status,2,c
 29058  00689A  D79D               	goto	l19026
 29059  00689C                     u20470:
 29060                           
 29061                           ; BSR set to: 0
 29062                           ;lorawan_eu.c: 811: };lorawan_eu.c: 812: };lorawan_eu.c: 814: if ( i != 0)
 29063  00689C  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 29064  00689E  B4D8               	btfsc	status,2,c
 29065  0068A0  D007               	goto	l19058
 29066                           
 29067                           ; BSR set to: 0
 29068                           ;lorawan_eu.c: 815: {;lorawan_eu.c: 816: *channelIndex = i - 1;
 29069  0068A2  05B2               	decf	SearchAvailableChannel@i& (0+255),w,b
 29070  0068A4  C0A8  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 29071  0068A8  C0A9  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 29072  0068AC  6EDF               	movwf	indf2,c
 29073                           
 29074                           ;lorawan_eu.c: 817: }
 29075  0068AE  D002               	goto	l1164
 29076  0068B0                     l19058:
 29077                           
 29078                           ; BSR set to: 0
 29079                           ;lorawan_eu.c: 818: else;lorawan_eu.c: 819: {;lorawan_eu.c: 820: result = NO_CHANNELS_FO
      +                          UND;
 29080  0068B0  0E09               	movlw	9
 29081  0068B2  6FAF               	movwf	SearchAvailableChannel@result& (0+255),b
 29082  0068B4                     l1164:
 29083                           
 29084                           ; BSR set to: 0
 29085                           ;lorawan_eu.c: 821: };lorawan_eu.c: 822: return result;
 29086  0068B4  51AF               	movf	SearchAvailableChannel@result& (0+255),w,b
 29087                           
 29088                           ; BSR set to: 0
 29089  0068B6  0012               	return		;funcret
 29090  0068B8                     __end_of_SearchAvailableChannel:
 29091                           	opt callstack 0
 29092                           
 29093 ;; *************** function _ConfigureRadioTx *****************
 29094 ;; Defined at:
 29095 ;;		line 1256 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29096 ;; Parameters:    Size  Location     Type
 29097 ;;  dataRate        1    wreg     unsigned char 
 29098 ;;  freq            4   19[BANK0 ] unsigned long 
 29099 ;; Auto vars:     Size  Location     Type
 29100 ;;  dataRate        1   23[BANK0 ] unsigned char 
 29101 ;;  txPower         1   24[BANK0 ] char 
 29102 ;; Return value:  Size  Location     Type
 29103 ;;                  1    wreg      void 
 29104 ;; Registers used:
 29105 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29106 ;; Tracked objects:
 29107 ;;		On entry : 0/0
 29108 ;;		On exit  : 0/0
 29109 ;;		Unchanged: 0/0
 29110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29112 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29114 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29115 ;;Total ram usage:        6 bytes
 29116 ;; Hardware stack levels used:    1
 29117 ;; Hardware stack levels required when called:   10
 29118 ;; This function calls:
 29119 ;;		_ConfigureRadio
 29120 ;;		_RADIO_SetCRC
 29121 ;;		_RADIO_SetIQInverted
 29122 ;;		_RADIO_SetOutputPower
 29123 ;; This function is called by:
 29124 ;;		_SelectChannelForTransmission
 29125 ;; This function uses a non-reentrant model
 29126 ;;
 29127                           
 29128                           	psect	text179
 29129  0095D8                     __ptext179:
 29130                           	opt callstack 0
 29131  0095D8                     _ConfigureRadioTx:
 29132                           	opt callstack 16
 29133                           
 29134                           ; BSR set to: 0
 29135                           ;incstack = 0
 29136                           ;ConfigureRadioTx@dataRate stored from wreg
 29137  0095D8  0100               	movlb	0	; () banked
 29138  0095DA  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 29139                           
 29140                           ;lorawan_eu.c: 1258: int8_t txPower;;lorawan_eu.c: 1260: ConfigureRadio(dataRate, freq);
 29141  0095DC  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 29142  0095E0  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 29143  0095E4  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 29144  0095E8  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 29145  0095EC  0100               	movlb	0	; () banked
 29146  0095EE  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 29147  0095F0  ECB1  F03F         	call	_ConfigureRadio
 29148                           
 29149                           ;lorawan_eu.c: 1263: {;lorawan_eu.c: 1264: txPower = txPower868[loRa.txPower];
 29150  0095F4  0E42               	movlw	low _txPower868
 29151  0095F6  0102               	movlb	2	; () banked
 29152  0095F8  25E6               	addwf	(_loRa+225)& (0+255),w,b
 29153  0095FA  6EF6               	movwf	tblptrl,c
 29154  0095FC  6AF7               	clrf	tblptrh,c
 29155  0095FE  0EFF               	movlw	high _txPower868
 29156  009600  22F7               	addwfc	tblptrh,f,c
 29157  009602                     	if	1	;There are 3 active tblptr bytes
 29158  009602  6AF8               	clrf	tblptru,c
 29159  009604  0E00               	movlw	low (__mediumconst shr (0+16))
 29160  009606  22F8               	addwfc	tblptru,f,c
 29161  009608                     	endif
 29162  009608  0008               	tblrd		*
 29163  00960A  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
 29164                           
 29165                           ; BSR set to: 2
 29166                           ;lorawan_eu.c: 1269: };lorawan_eu.c: 1271: RADIO_SetOutputPower (txPower);
 29167                           
 29168                           ;lorawan_eu.c: 1265: }
 29169  00960E  0100               	movlb	0	; () banked
 29170  009610  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 29171  009612  ECAB  F053         	call	_RADIO_SetOutputPower
 29172                           
 29173                           ;lorawan_eu.c: 1273: RADIO_SetCRC(1);
 29174  009616  0E01               	movlw	1
 29175  009618  ECB5  F053         	call	_RADIO_SetCRC
 29176                           
 29177                           ;lorawan_eu.c: 1274: RADIO_SetIQInverted(0);
 29178  00961C  0E00               	movlw	0
 29179  00961E  ECB0  F053         	call	_RADIO_SetIQInverted
 29180  009622  0012               	return		;funcret
 29181  009624                     __end_of_ConfigureRadioTx:
 29182                           	opt callstack 0
 29183                           
 29184 ;; *************** function _RADIO_SetOutputPower *****************
 29185 ;; Defined at:
 29186 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29187 ;; Parameters:    Size  Location     Type
 29188 ;;  power           1    wreg     char 
 29189 ;; Auto vars:     Size  Location     Type
 29190 ;;  power           1    0[BANK0 ] char 
 29191 ;; Return value:  Size  Location     Type
 29192 ;;                  1    wreg      void 
 29193 ;; Registers used:
 29194 ;;		wreg
 29195 ;; Tracked objects:
 29196 ;;		On entry : 0/0
 29197 ;;		On exit  : 0/0
 29198 ;;		Unchanged: 0/0
 29199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29203 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29204 ;;Total ram usage:        1 bytes
 29205 ;; Hardware stack levels used:    1
 29206 ;; Hardware stack levels required when called:    7
 29207 ;; This function calls:
 29208 ;;		Nothing
 29209 ;; This function is called by:
 29210 ;;		_ConfigureRadioTx
 29211 ;; This function uses a non-reentrant model
 29212 ;;
 29213                           
 29214                           	psect	text180
 29215  00A756                     __ptext180:
 29216                           	opt callstack 0
 29217  00A756                     _RADIO_SetOutputPower:
 29218                           	opt callstack 18
 29219                           
 29220                           ;incstack = 0
 29221                           ;RADIO_SetOutputPower@power stored from wreg
 29222  00A756  0100               	movlb	0	; () banked
 29223  00A758  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 29224                           
 29225                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 29226  00A75A  C060  F144         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 29227  00A75E  0012               	return		;funcret
 29228  00A760                     __end_of_RADIO_SetOutputPower:
 29229                           	opt callstack 0
 29230                           
 29231 ;; *************** function _RADIO_SetIQInverted *****************
 29232 ;; Defined at:
 29233 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29234 ;; Parameters:    Size  Location     Type
 29235 ;;  iqInverted      1    wreg     unsigned char 
 29236 ;; Auto vars:     Size  Location     Type
 29237 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 29238 ;; Return value:  Size  Location     Type
 29239 ;;                  1    wreg      void 
 29240 ;; Registers used:
 29241 ;;		wreg
 29242 ;; Tracked objects:
 29243 ;;		On entry : 0/0
 29244 ;;		On exit  : 0/0
 29245 ;;		Unchanged: 0/0
 29246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29248 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29250 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29251 ;;Total ram usage:        1 bytes
 29252 ;; Hardware stack levels used:    1
 29253 ;; Hardware stack levels required when called:    7
 29254 ;; This function calls:
 29255 ;;		Nothing
 29256 ;; This function is called by:
 29257 ;;		_ConfigureRadioTx
 29258 ;;		_ConfigureRadioRx
 29259 ;; This function uses a non-reentrant model
 29260 ;;
 29261                           
 29262                           	psect	text181
 29263  00A760                     __ptext181:
 29264                           	opt callstack 0
 29265  00A760                     _RADIO_SetIQInverted:
 29266                           	opt callstack 18
 29267                           
 29268                           ;incstack = 0
 29269                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 29270  00A760  0100               	movlb	0	; () banked
 29271  00A762  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 29272                           
 29273                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 29274  00A764  C060  F149         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 29275  00A768  0012               	return		;funcret
 29276  00A76A                     __end_of_RADIO_SetIQInverted:
 29277                           	opt callstack 0
 29278                           
 29279 ;; *************** function _RADIO_SetCRC *****************
 29280 ;; Defined at:
 29281 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29282 ;; Parameters:    Size  Location     Type
 29283 ;;  crc             1    wreg     unsigned char 
 29284 ;; Auto vars:     Size  Location     Type
 29285 ;;  crc             1    0[BANK0 ] unsigned char 
 29286 ;; Return value:  Size  Location     Type
 29287 ;;                  1    wreg      void 
 29288 ;; Registers used:
 29289 ;;		wreg
 29290 ;; Tracked objects:
 29291 ;;		On entry : 0/0
 29292 ;;		On exit  : 0/0
 29293 ;;		Unchanged: 0/0
 29294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29296 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29298 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29299 ;;Total ram usage:        1 bytes
 29300 ;; Hardware stack levels used:    1
 29301 ;; Hardware stack levels required when called:    7
 29302 ;; This function calls:
 29303 ;;		Nothing
 29304 ;; This function is called by:
 29305 ;;		_ConfigureRadioTx
 29306 ;;		_ConfigureRadioRx
 29307 ;; This function uses a non-reentrant model
 29308 ;;
 29309                           
 29310                           	psect	text182
 29311  00A76A                     __ptext182:
 29312                           	opt callstack 0
 29313  00A76A                     _RADIO_SetCRC:
 29314                           	opt callstack 18
 29315                           
 29316                           ;incstack = 0
 29317                           ;RADIO_SetCRC@crc stored from wreg
 29318  00A76A  0100               	movlb	0	; () banked
 29319  00A76C  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 29320                           
 29321                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 29322  00A76E  C060  F145         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 29323  00A772  0012               	return		;funcret
 29324  00A774                     __end_of_RADIO_SetCRC:
 29325                           	opt callstack 0
 29326                           
 29327 ;; *************** function _ConfigureRadio *****************
 29328 ;; Defined at:
 29329 ;;		line 864 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29330 ;; Parameters:    Size  Location     Type
 29331 ;;  dataRate        1    wreg     unsigned char 
 29332 ;;  freq            4   14[BANK0 ] unsigned long 
 29333 ;; Auto vars:     Size  Location     Type
 29334 ;;  dataRate        1   18[BANK0 ] unsigned char 
 29335 ;; Return value:  Size  Location     Type
 29336 ;;                  1    wreg      void 
 29337 ;; Registers used:
 29338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29339 ;; Tracked objects:
 29340 ;;		On entry : 0/0
 29341 ;;		On exit  : 0/0
 29342 ;;		Unchanged: 0/0
 29343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29344 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29347 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29348 ;;Total ram usage:        5 bytes
 29349 ;; Hardware stack levels used:    1
 29350 ;; Hardware stack levels required when called:    9
 29351 ;; This function calls:
 29352 ;;		_RADIO_SetBandwidth
 29353 ;;		_RADIO_SetChannelFrequency
 29354 ;;		_RADIO_SetFSKSyncWord
 29355 ;;		_RADIO_SetFrequencyHopPeriod
 29356 ;;		_RADIO_SetLoRaSyncWord
 29357 ;;		_RADIO_SetModulation
 29358 ;;		_RADIO_SetSpreadingFactor
 29359 ;; This function is called by:
 29360 ;;		_ConfigureRadioTx
 29361 ;;		_ConfigureRadioRx
 29362 ;; This function uses a non-reentrant model
 29363 ;;
 29364                           
 29365                           	psect	text183
 29366  007F62                     __ptext183:
 29367                           	opt callstack 0
 29368  007F62                     _ConfigureRadio:
 29369                           	opt callstack 16
 29370                           
 29371                           ;incstack = 0
 29372                           ;ConfigureRadio@dataRate stored from wreg
 29373  007F62  0100               	movlb	0	; () banked
 29374  007F64  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
 29375                           
 29376                           ;lorawan_eu.c: 866: RADIO_SetModulation (modulation[dataRate]);
 29377  007F66  0E07               	movlw	low _modulation
 29378  007F68  0100               	movlb	0	; () banked
 29379  007F6A  2572               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 29380  007F6C  6EF6               	movwf	tblptrl,c
 29381  007F6E  6AF7               	clrf	tblptrh,c
 29382  007F70  0EFF               	movlw	high _modulation
 29383  007F72  22F7               	addwfc	tblptrh,f,c
 29384  007F74                     	if	1	;There are 3 active tblptr bytes
 29385  007F74  6AF8               	clrf	tblptru,c
 29386  007F76  0E00               	movlw	low (__mediumconst shr (0+16))
 29387  007F78  22F8               	addwfc	tblptru,f,c
 29388  007F7A                     	endif
 29389  007F7A  0008               	tblrd		*
 29390  007F7C  50F5               	movf	tablat,w,c
 29391  007F7E  ECBF  F053         	call	_RADIO_SetModulation
 29392                           
 29393                           ;lorawan_eu.c: 867: RADIO_SetChannelFrequency (freq);
 29394  007F82  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 29395  007F86  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 29396  007F8A  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 29397  007F8E  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 29398  007F92  EC1C  F041         	call	_RADIO_SetChannelFrequency	;wreg free
 29399                           
 29400                           ;lorawan_eu.c: 868: RADIO_SetFrequencyHopPeriod (0);
 29401  007F96  0E00               	movlw	0
 29402  007F98  0100               	movlb	0	; () banked
 29403  007F9A  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 29404  007F9C  0E00               	movlw	0
 29405  007F9E  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 29406  007FA0  ECC4  F053         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 29407                           
 29408                           ;lorawan_eu.c: 870: if (dataRate <= 6)
 29409  007FA4  0E07               	movlw	7
 29410  007FA6  0100               	movlb	0	; () banked
 29411  007FA8  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 29412  007FAA  D020               	goto	l18590
 29413                           
 29414                           ; BSR set to: 0
 29415                           ;lorawan_eu.c: 871: {;lorawan_eu.c: 873: RADIO_SetSpreadingFactor (spreadingFactor[dataR
      +                          ate]);
 29416  007FAC  0E35               	movlw	low _spreadingFactor
 29417  007FAE  2572               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 29418  007FB0  6EF6               	movwf	tblptrl,c
 29419  007FB2  6AF7               	clrf	tblptrh,c
 29420  007FB4  0EFF               	movlw	high _spreadingFactor
 29421  007FB6  22F7               	addwfc	tblptrh,f,c
 29422  007FB8                     	if	1	;There are 3 active tblptr bytes
 29423  007FB8  6AF8               	clrf	tblptru,c
 29424  007FBA  0E00               	movlw	low (__mediumconst shr (0+16))
 29425  007FBC  22F8               	addwfc	tblptru,f,c
 29426  007FBE                     	endif
 29427  007FBE  0008               	tblrd		*
 29428  007FC0  50F5               	movf	tablat,w,c
 29429  007FC2  ECBA  F053         	call	_RADIO_SetSpreadingFactor
 29430                           
 29431                           ;lorawan_eu.c: 874: RADIO_SetBandwidth (bandwidth[dataRate]);
 29432  007FC6  0E2E               	movlw	low _bandwidth
 29433  007FC8  0100               	movlb	0	; () banked
 29434  007FCA  2572               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 29435  007FCC  6EF6               	movwf	tblptrl,c
 29436  007FCE  6AF7               	clrf	tblptrh,c
 29437  007FD0  0EFF               	movlw	high _bandwidth
 29438  007FD2  22F7               	addwfc	tblptrh,f,c
 29439  007FD4                     	if	1	;There are 3 active tblptr bytes
 29440  007FD4  6AF8               	clrf	tblptru,c
 29441  007FD6  0E00               	movlw	low (__mediumconst shr (0+16))
 29442  007FD8  22F8               	addwfc	tblptru,f,c
 29443  007FDA                     	endif
 29444  007FDA  0008               	tblrd		*
 29445  007FDC  50F5               	movf	tablat,w,c
 29446  007FDE  ECC9  F053         	call	_RADIO_SetBandwidth
 29447                           
 29448                           ;lorawan_eu.c: 875: RADIO_SetLoRaSyncWord(loRa.syncWord);
 29449  007FE2  0102               	movlb	2	; () banked
 29450  007FE4  51F9               	movf	(_loRa+244)& (0+255),w,b
 29451  007FE6  ECCE  F053         	call	_RADIO_SetLoRaSyncWord
 29452                           
 29453                           ;lorawan_eu.c: 876: }
 29454  007FEA  0012               	return	
 29455  007FEC                     l18590:
 29456                           
 29457                           ; BSR set to: 0
 29458                           ;lorawan_eu.c: 877: else;lorawan_eu.c: 878: {;lorawan_eu.c: 880: RADIO_SetFSKSyncWord(si
      +                          zeof(FskSyncWordBuff) / sizeof(FskSyncWordBuff[0]), (uint8_t*)FskSyncWordBuff);
 29459  007FEC  0EF2               	movlw	low _FskSyncWordBuff
 29460  007FEE  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 29461  007FF0  0EFF               	movlw	high _FskSyncWordBuff
 29462  007FF2  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 29463  007FF4  0E03               	movlw	3
 29464  007FF6  ECB6  F04E         	call	_RADIO_SetFSKSyncWord
 29465  007FFA  0012               	return		;funcret
 29466  007FFC                     __end_of_ConfigureRadio:
 29467                           	opt callstack 0
 29468                           
 29469 ;; *************** function _RADIO_SetSpreadingFactor *****************
 29470 ;; Defined at:
 29471 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29472 ;; Parameters:    Size  Location     Type
 29473 ;;  spreadingFac    1    wreg     enum E5863
 29474 ;; Auto vars:     Size  Location     Type
 29475 ;;  spreadingFac    1    0[BANK0 ] enum E5863
 29476 ;; Return value:  Size  Location     Type
 29477 ;;                  1    wreg      void 
 29478 ;; Registers used:
 29479 ;;		wreg
 29480 ;; Tracked objects:
 29481 ;;		On entry : 0/0
 29482 ;;		On exit  : 0/0
 29483 ;;		Unchanged: 0/0
 29484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29488 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29489 ;;Total ram usage:        1 bytes
 29490 ;; Hardware stack levels used:    1
 29491 ;; Hardware stack levels required when called:    7
 29492 ;; This function calls:
 29493 ;;		Nothing
 29494 ;; This function is called by:
 29495 ;;		_ConfigureRadio
 29496 ;; This function uses a non-reentrant model
 29497 ;;
 29498                           
 29499                           	psect	text184
 29500  00A774                     __ptext184:
 29501                           	opt callstack 0
 29502  00A774                     _RADIO_SetSpreadingFactor:
 29503                           	opt callstack 17
 29504                           
 29505                           ;incstack = 0
 29506                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 29507  00A774  0100               	movlb	0	; () banked
 29508  00A776  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 29509                           
 29510                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 29511  00A778  C060  F142         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 29512  00A77C  0012               	return		;funcret
 29513  00A77E                     __end_of_RADIO_SetSpreadingFactor:
 29514                           	opt callstack 0
 29515                           
 29516 ;; *************** function _RADIO_SetModulation *****************
 29517 ;; Defined at:
 29518 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29519 ;; Parameters:    Size  Location     Type
 29520 ;;  modulation      1    wreg     enum E5853
 29521 ;; Auto vars:     Size  Location     Type
 29522 ;;  modulation      1    0[BANK0 ] enum E5853
 29523 ;; Return value:  Size  Location     Type
 29524 ;;                  1    wreg      void 
 29525 ;; Registers used:
 29526 ;;		wreg
 29527 ;; Tracked objects:
 29528 ;;		On entry : 0/0
 29529 ;;		On exit  : 0/0
 29530 ;;		Unchanged: 0/0
 29531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29533 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29535 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29536 ;;Total ram usage:        1 bytes
 29537 ;; Hardware stack levels used:    1
 29538 ;; Hardware stack levels required when called:    7
 29539 ;; This function calls:
 29540 ;;		Nothing
 29541 ;; This function is called by:
 29542 ;;		_ConfigureRadio
 29543 ;; This function uses a non-reentrant model
 29544 ;;
 29545                           
 29546                           	psect	text185
 29547  00A77E                     __ptext185:
 29548                           	opt callstack 0
 29549  00A77E                     _RADIO_SetModulation:
 29550                           	opt callstack 17
 29551                           
 29552                           ;incstack = 0
 29553                           ;RADIO_SetModulation@modulation stored from wreg
 29554  00A77E  0100               	movlb	0	; () banked
 29555  00A780  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 29556                           
 29557                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 29558  00A782  C060  F141         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 29559  00A786  0012               	return		;funcret
 29560  00A788                     __end_of_RADIO_SetModulation:
 29561                           	opt callstack 0
 29562                           
 29563 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 29564 ;; Defined at:
 29565 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29566 ;; Parameters:    Size  Location     Type
 29567 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 29568 ;; Auto vars:     Size  Location     Type
 29569 ;;		None
 29570 ;; Return value:  Size  Location     Type
 29571 ;;                  1    wreg      void 
 29572 ;; Registers used:
 29573 ;;		None
 29574 ;; Tracked objects:
 29575 ;;		On entry : 0/0
 29576 ;;		On exit  : 0/0
 29577 ;;		Unchanged: 0/0
 29578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29582 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29583 ;;Total ram usage:        2 bytes
 29584 ;; Hardware stack levels used:    1
 29585 ;; Hardware stack levels required when called:    7
 29586 ;; This function calls:
 29587 ;;		Nothing
 29588 ;; This function is called by:
 29589 ;;		_ConfigureRadio
 29590 ;; This function uses a non-reentrant model
 29591 ;;
 29592                           
 29593                           	psect	text186
 29594  00A788                     __ptext186:
 29595                           	opt callstack 0
 29596  00A788                     _RADIO_SetFrequencyHopPeriod:
 29597                           	opt callstack 17
 29598                           
 29599                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 29600                           
 29601                           ;incstack = 0
 29602  00A788  C060  F147         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 29603  00A78C  C061  F148         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 29604  00A790  0012               	return		;funcret
 29605  00A792                     __end_of_RADIO_SetFrequencyHopPeriod:
 29606                           	opt callstack 0
 29607                           
 29608 ;; *************** function _RADIO_SetFSKSyncWord *****************
 29609 ;; Defined at:
 29610 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29611 ;; Parameters:    Size  Location     Type
 29612 ;;  syncWordLen     1    wreg     unsigned char 
 29613 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 29614 ;;		 -> FskSyncWordBuff(3), 
 29615 ;; Auto vars:     Size  Location     Type
 29616 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 29617 ;; Return value:  Size  Location     Type
 29618 ;;                  1    wreg      void 
 29619 ;; Registers used:
 29620 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29621 ;; Tracked objects:
 29622 ;;		On entry : 0/0
 29623 ;;		On exit  : 0/0
 29624 ;;		Unchanged: 0/0
 29625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29626 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29627 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29629 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29630 ;;Total ram usage:        3 bytes
 29631 ;; Hardware stack levels used:    1
 29632 ;; Hardware stack levels required when called:    8
 29633 ;; This function calls:
 29634 ;;		_memcpy
 29635 ;; This function is called by:
 29636 ;;		_ConfigureRadio
 29637 ;; This function uses a non-reentrant model
 29638 ;;
 29639                           
 29640                           	psect	text187
 29641  009D6C                     __ptext187:
 29642                           	opt callstack 0
 29643  009D6C                     _RADIO_SetFSKSyncWord:
 29644                           	opt callstack 16
 29645                           
 29646                           ;incstack = 0
 29647                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 29648  009D6C  0100               	movlb	0	; () banked
 29649  009D6E  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29650                           
 29651                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 29652  009D70  0E08               	movlw	8
 29653  009D72  0100               	movlb	0	; () banked
 29654  009D74  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29655  009D76  D002               	goto	l18262
 29656                           
 29657                           ; BSR set to: 0
 29658                           ;radio_driver_SX1276.c: 1627: {;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 29659  009D78  0E08               	movlw	8
 29660  009D7A  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29661  009D7C                     l18262:
 29662                           
 29663                           ; BSR set to: 0
 29664                           ;radio_driver_SX1276.c: 1629: };radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.s
      +                          yncWord, syncWord, syncWordLen);
 29665  009D7C  0E38               	movlw	low (_RadioConfiguration+15)
 29666  009D7E  6F60               	movwf	memcpy@d1& (0+255),b
 29667  009D80  0E01               	movlw	high (_RadioConfiguration+15)
 29668  009D82  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29669  009D84  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 29670  009D88  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 29671  009D8C  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 29672  009D90  6B65               	clrf	(memcpy@n+1)& (0+255),b
 29673  009D92  ECC3  F047         	call	_memcpy	;wreg free
 29674                           
 29675                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 29676  009D96  C06D  F140         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 29677  009D9A  0012               	return		;funcret
 29678  009D9C                     __end_of_RADIO_SetFSKSyncWord:
 29679                           	opt callstack 0
 29680                           
 29681 ;; *************** function _RADIO_SetChannelFrequency *****************
 29682 ;; Defined at:
 29683 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29684 ;; Parameters:    Size  Location     Type
 29685 ;;  frequency       4    0[BANK0 ] unsigned long 
 29686 ;; Auto vars:     Size  Location     Type
 29687 ;;		None
 29688 ;; Return value:  Size  Location     Type
 29689 ;;                  2    0[BANK0 ] enum E5907
 29690 ;; Registers used:
 29691 ;;		wreg, status,2, status,0
 29692 ;; Tracked objects:
 29693 ;;		On entry : 0/0
 29694 ;;		On exit  : 0/0
 29695 ;;		Unchanged: 0/0
 29696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29697 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29700 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29701 ;;Total ram usage:        4 bytes
 29702 ;; Hardware stack levels used:    1
 29703 ;; Hardware stack levels required when called:    7
 29704 ;; This function calls:
 29705 ;;		Nothing
 29706 ;; This function is called by:
 29707 ;;		_ConfigureRadio
 29708 ;; This function uses a non-reentrant model
 29709 ;;
 29710                           
 29711                           	psect	text188
 29712  008238                     __ptext188:
 29713                           	opt callstack 0
 29714  008238                     _RADIO_SetChannelFrequency:
 29715                           	opt callstack 17
 29716                           
 29717                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||;
      +                          radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 29718                           
 29719                           ;incstack = 0
 29720  008238  0E40               	movlw	64
 29721  00823A  0100               	movlb	0	; () banked
 29722  00823C  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29723  00823E  0E74               	movlw	116
 29724  008240  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29725  008242  0E2A               	movlw	42
 29726  008244  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29727  008246  0E08               	movlw	8
 29728  008248  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29729  00824A  A0D8               	btfss	status,0,c
 29730  00824C  D00A               	goto	u19210
 29731                           
 29732                           ; BSR set to: 0
 29733  00824E  0EC1               	movlw	193
 29734  008250  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29735  008252  0E49               	movlw	73
 29736  008254  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29737  008256  0E6E               	movlw	110
 29738  008258  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29739  00825A  0E0A               	movlw	10
 29740  00825C  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29741  00825E  A0D8               	btfss	status,0,c
 29742  008260  D027               	goto	u19250
 29743  008262                     u19210:
 29744                           
 29745                           ; BSR set to: 0
 29746  008262  0E80               	movlw	128
 29747  008264  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29748  008266  0E1A               	movlw	26
 29749  008268  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29750  00826A  0E70               	movlw	112
 29751  00826C  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29752  00826E  0E18               	movlw	24
 29753  008270  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29754  008272  A0D8               	btfss	status,0,c
 29755  008274  D00A               	goto	u19230
 29756                           
 29757                           ; BSR set to: 0
 29758  008276  0E41               	movlw	65
 29759  008278  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29760  00827A  0EDD               	movlw	221
 29761  00827C  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29762  00827E  0E4A               	movlw	74
 29763  008280  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29764  008282  0E1F               	movlw	31
 29765  008284  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29766  008286  A0D8               	btfss	status,0,c
 29767  008288  D013               	goto	u19250
 29768  00828A                     u19230:
 29769                           
 29770                           ; BSR set to: 0
 29771  00828A  0E80               	movlw	128
 29772  00828C  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29773  00828E  0E13               	movlw	19
 29774  008290  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29775  008292  0E61               	movlw	97
 29776  008294  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29777  008296  0E33               	movlw	51
 29778  008298  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29779  00829A  A0D8               	btfss	status,0,c
 29780  00829C  0012               	return	
 29781                           
 29782                           ; BSR set to: 0
 29783  00829E  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29784  0082A0  0EF7               	movlw	247
 29785  0082A2  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29786  0082A4  0ECB               	movlw	203
 29787  0082A6  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29788  0082A8  0E3C               	movlw	60
 29789  0082AA  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29790  0082AC  B0D8               	btfsc	status,0,c
 29791  0082AE  0012               	return	
 29792  0082B0                     u19250:
 29793                           
 29794                           ; BSR set to: 0
 29795                           ;radio_driver_SX1276.c: 1449: {;radio_driver_SX1276.c: 1450: RadioConfiguration.frequenc
      +                          y = frequency;
 29796  0082B0  C060  F129         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 29797  0082B4  C061  F12A         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 29798  0082B8  C062  F12B         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 29799  0082BC  C063  F12C         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 29800                           
 29801                           ; BSR set to: 0
 29802                           
 29803                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;;	Return value of _RADIO_SetChannelFrequen
      +                          cy is never used
 29804  0082C0  0012               	return		;funcret
 29805  0082C2                     __end_of_RADIO_SetChannelFrequency:
 29806                           	opt callstack 0
 29807                           
 29808 ;; *************** function _RADIO_SetBandwidth *****************
 29809 ;; Defined at:
 29810 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29811 ;; Parameters:    Size  Location     Type
 29812 ;;  bandwidth       1    wreg     enum E5871
 29813 ;; Auto vars:     Size  Location     Type
 29814 ;;  bandwidth       1    0[BANK0 ] enum E5871
 29815 ;; Return value:  Size  Location     Type
 29816 ;;                  1    wreg      void 
 29817 ;; Registers used:
 29818 ;;		wreg
 29819 ;; Tracked objects:
 29820 ;;		On entry : 0/0
 29821 ;;		On exit  : 0/0
 29822 ;;		Unchanged: 0/0
 29823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29825 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29827 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29828 ;;Total ram usage:        1 bytes
 29829 ;; Hardware stack levels used:    1
 29830 ;; Hardware stack levels required when called:    7
 29831 ;; This function calls:
 29832 ;;		Nothing
 29833 ;; This function is called by:
 29834 ;;		_ConfigureRadio
 29835 ;; This function uses a non-reentrant model
 29836 ;;
 29837                           
 29838                           	psect	text189
 29839  00A792                     __ptext189:
 29840                           	opt callstack 0
 29841  00A792                     _RADIO_SetBandwidth:
 29842                           	opt callstack 17
 29843                           
 29844                           ; BSR set to: 0
 29845                           ;incstack = 0
 29846                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 29847  00A792  0100               	movlb	0	; () banked
 29848  00A794  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 29849                           
 29850                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 29851  00A796  C060  F143         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 29852  00A79A  0012               	return		;funcret
 29853  00A79C                     __end_of_RADIO_SetBandwidth:
 29854                           	opt callstack 0
 29855                           
 29856 ;; *************** function _RADIO_Transmit *****************
 29857 ;; Defined at:
 29858 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29859 ;; Parameters:    Size  Location     Type
 29860 ;;  buffer          2   73[BANK0 ] PTR unsigned char 
 29861 ;;		 -> macBuffer(271), 
 29862 ;;  bufferLen       1   75[BANK0 ] unsigned char 
 29863 ;; Auto vars:     Size  Location     Type
 29864 ;;  i               1   89[BANK0 ] unsigned char 
 29865 ;;  regValue        1   88[BANK0 ] unsigned char 
 29866 ;; Return value:  Size  Location     Type
 29867 ;;                  2   73[BANK0 ] enum E5907
 29868 ;; Registers used:
 29869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29870 ;; Tracked objects:
 29871 ;;		On entry : 0/0
 29872 ;;		On exit  : 0/0
 29873 ;;		Unchanged: 0/0
 29874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29875 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29876 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29877 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29878 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29879 ;;Total ram usage:       17 bytes
 29880 ;; Hardware stack levels used:    1
 29881 ;; Hardware stack levels required when called:   12
 29882 ;; This function calls:
 29883 ;;		_HALSPICSAssert
 29884 ;;		_HALSPICSDeassert
 29885 ;;		_HALSPISend
 29886 ;;		_RADIO_RegisterRead
 29887 ;;		_RADIO_RegisterWrite
 29888 ;;		_RADIO_WriteConfiguration
 29889 ;;		_RADIO_WriteMode
 29890 ;;		_SwTimerSetTimeout
 29891 ;;		_SwTimerStart
 29892 ;;		_SwTimerStop
 29893 ;;		___lldiv
 29894 ;; This function is called by:
 29895 ;;		_LORAWAN_RxTimeout
 29896 ;;		_LORAWAN_Join
 29897 ;;		_LORAWAN_Send
 29898 ;;		_AckRetransmissionCallback
 29899 ;;		_UnconfirmedTransmissionCallback
 29900 ;; This function uses a non-reentrant model
 29901 ;;
 29902                           
 29903                           	psect	text190
 29904  003F04                     __ptext190:
 29905                           	opt callstack 0
 29906  003F04                     _RADIO_Transmit:
 29907                           	opt callstack 15
 29908                           
 29909                           ;radio_driver_SX1276.c: 788: uint8_t regValue;;radio_driver_SX1276.c: 789: uint8_t i;;ra
      +                          dio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 29910                           
 29911                           ;incstack = 0
 29912  003F04  0101               	movlb	1	; () banked
 29913  003F06  A54C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 29914  003F08  D006               	goto	l19376
 29915                           
 29916                           ; BSR set to: 1
 29917                           ;radio_driver_SX1276.c: 792: {;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 29918  003F0A  0E80               	movlw	128
 29919  003F0C  0100               	movlb	0	; () banked
 29920  003F0E  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29921  003F10  0E03               	movlw	3
 29922  003F12  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 29923  003F14  0012               	return	
 29924  003F16                     l19376:
 29925                           
 29926                           ; BSR set to: 1
 29927                           ;radio_driver_SX1276.c: 794: };radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags
      +                           & ((1 << (0)) | (1 << (1)))) != 0)
 29928  003F16  C14C  F0AC         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 29929  003F1A  0E03               	movlw	3
 29930  003F1C  0100               	movlb	0	; () banked
 29931  003F1E  17AC               	andwf	??_RADIO_Transmit& (0+255),f,b
 29932  003F20  B4D8               	btfsc	status,2,c
 29933  003F22  D005               	goto	l19382
 29934                           
 29935                           ; BSR set to: 0
 29936                           ;radio_driver_SX1276.c: 797: {;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 29937  003F24  0E80               	movlw	128
 29938  003F26  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29939  003F28  0E04               	movlw	4
 29940  003F2A  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 29941  003F2C  0012               	return	
 29942  003F2E                     l19382:
 29943                           
 29944                           ; BSR set to: 0
 29945                           ;radio_driver_SX1276.c: 799: };radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioC
      +                          onfiguration.modulation) && (bufferLen > 64))
 29946  003F2E  0101               	movlb	1	; () banked
 29947  003F30  5141               	movf	(_RadioConfiguration+24)& (0+255),w,b
 29948  003F32  A4D8               	btfss	status,2,c
 29949  003F34  D009               	goto	l19390
 29950                           
 29951                           ; BSR set to: 1
 29952  003F36  0E40               	movlw	64
 29953  003F38  0100               	movlb	0	; () banked
 29954  003F3A  65AB               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 29955  003F3C  D005               	goto	l19390
 29956                           
 29957                           ; BSR set to: 0
 29958                           ;radio_driver_SX1276.c: 802: {;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 29959  003F3E  0E80               	movlw	128
 29960  003F40  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29961  003F42  0E02               	movlw	2
 29962  003F44  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 29963  003F46  0012               	return	
 29964  003F48                     l19390:
 29965                           
 29966                           ;radio_driver_SX1276.c: 804: };radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguratio
      +                          n.timeOnAirTimerId);
 29967  003F48  0101               	movlb	1	; () banked
 29968  003F4A  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 29969  003F4C  EC7B  F051         	call	_SwTimerStop
 29970                           
 29971                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 29972  003F50  0E00               	movlw	0
 29973  003F52  0100               	movlb	0	; () banked
 29974  003F54  6F9F               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 29975  003F56  0E04               	movlw	4
 29976  003F58  6F9E               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 29977  003F5A  EC6B  F009         	call	_RADIO_WriteConfiguration	;wreg free
 29978                           
 29979                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 29980  003F5E  0101               	movlb	1	; () banked
 29981  003F60  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 29982  003F62  A4D8               	btfss	status,2,c
 29983  003F64  D027               	goto	l19410
 29984                           
 29985                           ; BSR set to: 1
 29986                           ;radio_driver_SX1276.c: 813: {;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, buf
      +                          ferLen);
 29987  003F66  C0AB  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 29988  003F6A  0E22               	movlw	34
 29989  003F6C  EC6B  F051         	call	_RADIO_RegisterWrite
 29990                           
 29991                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 29992  003F70  0E0A               	movlw	10
 29993  003F72  EC9B  F050         	call	_RADIO_RegisterRead
 29994  003F76  0100               	movlb	0	; () banked
 29995  003F78  6FB8               	movwf	RADIO_Transmit@regValue& (0+255),b
 29996                           
 29997                           ; BSR set to: 0
 29998                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 29999  003F7A  0EF0               	movlw	240
 30000  003F7C  17B8               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 30001                           
 30002                           ; BSR set to: 0
 30003                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 30004  003F7E  87B8               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 30005                           
 30006                           ; BSR set to: 0
 30007                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 30008  003F80  C0B8  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 30009  003F84  0E0A               	movlw	10
 30010  003F86  EC6B  F051         	call	_RADIO_RegisterWrite
 30011                           
 30012                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 30013  003F8A  0E40               	movlw	64
 30014  003F8C  0100               	movlb	0	; () banked
 30015  003F8E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30016  003F90  0E40               	movlw	64
 30017  003F92  EC6B  F051         	call	_RADIO_RegisterWrite
 30018                           
 30019                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 30020  003F96  0E00               	movlw	0
 30021  003F98  0100               	movlb	0	; () banked
 30022  003F9A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30023  003F9C  0E41               	movlw	65
 30024  003F9E  EC6B  F051         	call	_RADIO_RegisterWrite
 30025                           
 30026                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 30027  003FA2  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30028  003FA6  0E01               	movlw	1
 30029  003FA8  0100               	movlb	0	; () banked
 30030  003FAA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30031  003FAC  0E01               	movlw	1
 30032  003FAE  ECD9  F035         	call	_RADIO_WriteMode
 30033                           
 30034                           ;radio_driver_SX1276.c: 828: }
 30035  003FB2  D00C               	goto	l19412
 30036  003FB4                     l19410:
 30037                           
 30038                           ; BSR set to: 1
 30039                           ;radio_driver_SX1276.c: 829: else;radio_driver_SX1276.c: 830: {;radio_driver_SX1276.c: 8
      +                          32: RADIO_RegisterWrite(0x40, 0x00);
 30040  003FB4  0E00               	movlw	0
 30041  003FB6  0100               	movlb	0	; () banked
 30042  003FB8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30043  003FBA  0E40               	movlw	64
 30044  003FBC  EC6B  F051         	call	_RADIO_RegisterWrite
 30045                           
 30046                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 30047  003FC0  0E00               	movlw	0
 30048  003FC2  0100               	movlb	0	; () banked
 30049  003FC4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30050  003FC6  0E41               	movlw	65
 30051  003FC8  EC6B  F051         	call	_RADIO_RegisterWrite
 30052  003FCC                     l19412:
 30053                           
 30054                           ;radio_driver_SX1276.c: 834: };radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioCo
      +                          nfiguration.modulation)
 30055  003FCC  0101               	movlb	1	; () banked
 30056  003FCE  5141               	movf	(_RadioConfiguration+24)& (0+255),w,b
 30057  003FD0  A4D8               	btfss	status,2,c
 30058  003FD2  D005               	goto	l19416
 30059                           
 30060                           ; BSR set to: 1
 30061                           ;radio_driver_SX1276.c: 837: {;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, buf
      +                          ferLen);
 30062  003FD4  C0AB  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 30063  003FD8  0E00               	movlw	0
 30064  003FDA  EC6B  F051         	call	_RADIO_RegisterWrite
 30065  003FDE                     l19416:
 30066                           
 30067                           ;radio_driver_SX1276.c: 840: };radio_driver_SX1276.c: 842: HALSPICSAssert();
 30068  003FDE  EC09  F054         	call	_HALSPICSAssert	;wreg free
 30069                           
 30070                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 30071  003FE2  0E80               	movlw	128
 30072  003FE4  EC56  F053         	call	_HALSPISend
 30073                           
 30074                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 30075  003FE8  0E00               	movlw	0
 30076  003FEA  0100               	movlb	0	; () banked
 30077  003FEC  6FB9               	movwf	RADIO_Transmit@i& (0+255),b
 30078  003FEE  D00B               	goto	l19426
 30079  003FF0                     l19422:
 30080                           
 30081                           ; BSR set to: 0
 30082                           ;radio_driver_SX1276.c: 846: {;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 30083  003FF0  51B9               	movf	RADIO_Transmit@i& (0+255),w,b
 30084  003FF2  25A9               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 30085  003FF4  6ED9               	movwf	fsr2l,c
 30086  003FF6  0E00               	movlw	0
 30087  003FF8  21AA               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 30088  003FFA  6EDA               	movwf	fsr2h,c
 30089  003FFC  50DF               	movf	indf2,w,c
 30090  003FFE  EC56  F053         	call	_HALSPISend
 30091  004002  0100               	movlb	0	; () banked
 30092  004004  2BB9               	incf	RADIO_Transmit@i& (0+255),f,b
 30093  004006                     l19426:
 30094                           
 30095                           ; BSR set to: 0
 30096  004006  51AB               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 30097  004008  5DB9               	subwf	RADIO_Transmit@i& (0+255),w,b
 30098  00400A  A0D8               	btfss	status,0,c
 30099  00400C  D7F1               	goto	l19422
 30100                           
 30101                           ; BSR set to: 0
 30102                           ;radio_driver_SX1276.c: 848: };radio_driver_SX1276.c: 849: HALSPICSDeassert();
 30103  00400E  EC07  F054         	call	_HALSPICSDeassert	;wreg free
 30104                           
 30105                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 30106  004012  0101               	movlb	1	; () banked
 30107  004014  814C               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 30108                           
 30109                           ; BSR set to: 1
 30110                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 30111  004016  0EE7               	movlw	231
 30112  004018  174C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 30113                           
 30114                           ; BSR set to: 1
 30115                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 30116  00401A  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30117  00401E  0E00               	movlw	0
 30118  004020  0100               	movlb	0	; () banked
 30119  004022  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30120  004024  0E03               	movlw	3
 30121  004026  ECD9  F035         	call	_RADIO_WriteMode
 30122                           
 30123                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 30124  00402A  0E00               	movlw	0
 30125  00402C  0100               	movlb	0	; () banked
 30126  00402E  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 30127  004030  0E00               	movlw	0
 30128  004032  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 30129  004034  0E0A               	movlw	10
 30130  004036  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 30131  004038  0E00               	movlw	0
 30132  00403A  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 30133  00403C  0101               	movlb	1	; () banked
 30134  00403E  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30135  004040  EC2D  F04C         	call	_SwTimerSetTimeout
 30136                           
 30137                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 30138  004044  0101               	movlb	1	; () banked
 30139  004046  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30140  004048  EC4A  F040         	call	_SwTimerStart
 30141                           
 30142                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 30143  00404C  0101               	movlb	1	; () banked
 30144  00404E  5153               	movf	(_RadioConfiguration+42)& (0+255),w,b
 30145  004050  1154               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 30146  004052  1155               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 30147  004054  1156               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 30148  004056  B4D8               	btfsc	status,2,c
 30149  004058  D061               	goto	l19456
 30150                           
 30151                           ; BSR set to: 1
 30152                           ;radio_driver_SX1276.c: 866: {;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfig
      +                          uration.watchdogTimerId, ((RadioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (
      +                          ((uint32_t)(RadioConfiguration.watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t
      +                          )(RadioConfiguration.watchdogTimerTimeout)) /
 30153  00405A  5156               	movf	(_RadioConfiguration+45)& (0+255),w,b
 30154  00405C  E107               	bnz	u21010
 30155  00405E  2953               	incf	(_RadioConfiguration+42)& (0+255),w,b
 30156  004060  0EFF               	movlw	255
 30157  004062  5954               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 30158  004064  0E0F               	movlw	15
 30159  004066  5955               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 30160  004068  A0D8               	btfss	status,0,c
 30161  00406A  D01D               	goto	l19450
 30162  00406C                     u21010:
 30163                           
 30164                           ; BSR set to: 1
 30165  00406C  C153  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 30166  004070  C154  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 30167  004074  C155  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 30168  004078  C156  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 30169  00407C  0E7D               	movlw	125
 30170  00407E  0100               	movlb	0	; () banked
 30171  004080  6F64               	movwf	___lldiv@divisor& (0+255),b
 30172  004082  0E00               	movlw	0
 30173  004084  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30174  004086  0E00               	movlw	0
 30175  004088  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30176  00408A  0E00               	movlw	0
 30177  00408C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30178  00408E  EC6D  F042         	call	___lldiv	;wreg free
 30179  004092  0E0C               	movlw	12
 30180  004094                     u21025:
 30181  004094  90D8               	bcf	status,0,c
 30182  004096  0100               	movlb	0	; () banked
 30183  004098  3760               	rlcf	?___lldiv& (0+255),f,b
 30184  00409A  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 30185  00409C  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 30186  00409E  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 30187  0040A0  2EE8               	decfsz	wreg,f,c
 30188  0040A2  D7F8               	goto	u21025
 30189  0040A4  D023               	goto	L28
 30190  0040A6                     l19450:
 30191                           
 30192                           ; BSR set to: 1
 30193  0040A6  C153  F0AC         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 30194  0040AA  C154  F0AD         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 30195  0040AE  C155  F0AE         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 30196  0040B2  C156  F0AF         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 30197  0040B6  0E0C               	movlw	12
 30198  0040B8                     u21035:
 30199  0040B8  90D8               	bcf	status,0,c
 30200  0040BA  0100               	movlb	0	; () banked
 30201  0040BC  37AC               	rlcf	??_RADIO_Transmit& (0+255),f,b
 30202  0040BE  37AD               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 30203  0040C0  37AE               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 30204  0040C2  37AF               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 30205  0040C4  2EE8               	decfsz	wreg,f,c
 30206  0040C6  D7F8               	goto	u21035
 30207  0040C8  C0AC  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 30208  0040CC  C0AD  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 30209  0040D0  C0AE  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 30210  0040D4  C0AF  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 30211  0040D8  0E7D               	movlw	125
 30212  0040DA  6F64               	movwf	___lldiv@divisor& (0+255),b
 30213  0040DC  0E00               	movlw	0
 30214  0040DE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30215  0040E0  0E00               	movlw	0
 30216  0040E2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30217  0040E4  0E00               	movlw	0
 30218  0040E6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30219  0040E8  EC6D  F042         	call	___lldiv	;wreg free
 30220  0040EC                     L28:
 30221  0040EC  C060  F0B4         	movff	?___lldiv,_RADIO_Transmit$781
 30222  0040F0  C061  F0B5         	movff	?___lldiv+1,_RADIO_Transmit$781+1
 30223  0040F4  C062  F0B6         	movff	?___lldiv+2,_RADIO_Transmit$781+2
 30224  0040F8  C063  F0B7         	movff	?___lldiv+3,_RADIO_Transmit$781+3
 30225  0040FC  C0B4  F06D         	movff	_RADIO_Transmit$781,SwTimerSetTimeout@timeout
 30226  004100  C0B5  F06E         	movff	_RADIO_Transmit$781+1,SwTimerSetTimeout@timeout+1
 30227  004104  C0B6  F06F         	movff	_RADIO_Transmit$781+2,SwTimerSetTimeout@timeout+2
 30228  004108  C0B7  F070         	movff	_RADIO_Transmit$781+3,SwTimerSetTimeout@timeout+3
 30229  00410C  0101               	movlb	1	; () banked
 30230  00410E  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30231  004110  EC2D  F04C         	call	_SwTimerSetTimeout
 30232                           
 30233                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 30234  004114  0101               	movlb	1	; () banked
 30235  004116  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30236  004118  EC4A  F040         	call	_SwTimerStart
 30237  00411C                     l19456:
 30238                           
 30239                           ;radio_driver_SX1276.c: 869: };radio_driver_SX1276.c: 871: return ERR_NONE;
 30240  00411C  0E00               	movlw	0
 30241  00411E  0100               	movlb	0	; () banked
 30242  004120  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30243  004122  0E00               	movlw	0
 30244  004124  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 30245                           
 30246                           ; BSR set to: 0
 30247  004126  0012               	return		;funcret
 30248  004128                     __end_of_RADIO_Transmit:
 30249                           	opt callstack 0
 30250                           
 30251 ;; *************** function _RADIO_WriteConfiguration *****************
 30252 ;; Defined at:
 30253 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 30254 ;; Parameters:    Size  Location     Type
 30255 ;;  symbolTimeou    2   62[BANK0 ] unsigned int 
 30256 ;; Auto vars:     Size  Location     Type
 30257 ;;  tempValue       4   68[BANK0 ] unsigned long 
 30258 ;;  regValue        1   72[BANK0 ] unsigned char 
 30259 ;;  i               1   67[BANK0 ] unsigned char 
 30260 ;; Return value:  Size  Location     Type
 30261 ;;                  1    wreg      void 
 30262 ;; Registers used:
 30263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30264 ;; Tracked objects:
 30265 ;;		On entry : 0/0
 30266 ;;		On exit  : 0/0
 30267 ;;		Unchanged: 0/0
 30268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30269 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30270 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30271 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30272 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30273 ;;Total ram usage:       11 bytes
 30274 ;; Hardware stack levels used:    1
 30275 ;; Hardware stack levels required when called:   11
 30276 ;; This function calls:
 30277 ;;		_RADIO_RegisterRead
 30278 ;;		_RADIO_RegisterWrite
 30279 ;;		_RADIO_WriteFSKBitRate
 30280 ;;		_RADIO_WriteFSKFrequencyDeviation
 30281 ;;		_RADIO_WriteFrequency
 30282 ;;		_RADIO_WriteMode
 30283 ;;		_RADIO_WritePower
 30284 ;;		___lmul
 30285 ;; This function is called by:
 30286 ;;		_RADIO_Transmit
 30287 ;;		_RADIO_ReceiveStart
 30288 ;;		_RADIO_TransmitCW
 30289 ;; This function uses a non-reentrant model
 30290 ;;
 30291                           
 30292                           	psect	text191
 30293  0012D6                     __ptext191:
 30294                           	opt callstack 0
 30295  0012D6                     _RADIO_WriteConfiguration:
 30296                           	opt callstack 15
 30297                           
 30298                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;;radio_driver_SX1276.c: 536: uint8_t reg
      +                          Value;;radio_driver_SX1276.c: 537: uint8_t i;;radio_driver_SX1276.c: 540: RADIO_WriteMod
      +                          e(MODE_SLEEP, RadioConfiguration.modulation, 0);
 30299                           
 30300                           ; BSR set to: 0
 30301                           ;incstack = 0
 30302  0012D6  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30303  0012DA  0E00               	movlw	0
 30304  0012DC  0100               	movlb	0	; () banked
 30305  0012DE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30306  0012E0  0E00               	movlw	0
 30307  0012E2  ECD9  F035         	call	_RADIO_WriteMode
 30308                           
 30309                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 30310  0012E6  C129  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 30311  0012EA  C12A  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 30312  0012EE  C12B  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 30313  0012F2  C12C  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 30314  0012F6  EC48  F038         	call	_RADIO_WriteFrequency	;wreg free
 30315                           
 30316                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 30317  0012FA  0101               	movlb	1	; () banked
 30318  0012FC  5144               	movf	(_RadioConfiguration+27)& (0+255),w,b
 30319  0012FE  ECC0  F038         	call	_RADIO_WritePower
 30320                           
 30321                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 30322  001302  0101               	movlb	1	; () banked
 30323  001304  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 30324  001306  A4D8               	btfss	status,2,c
 30325  001308  D1EC               	goto	l18516
 30326                           
 30327                           ; BSR set to: 1
 30328                           ;radio_driver_SX1276.c: 545: {;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, Rad
      +                          ioConfiguration.syncWordLoRa);
 30329  00130A  C137  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 30330  00130E  0E39               	movlw	57
 30331  001310  EC6B  F051         	call	_RADIO_RegisterWrite
 30332                           
 30333                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,;radio_driver_SX1276.c: 549: (Radi
      +                          oConfiguration.bandWidth << (4)) |;radio_driver_SX1276.c: 550: (RadioConfiguration.error
      +                          CodingRate << (1)) |;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode 
      +                          & 0x01));
 30334  001314  C14B  F0A0         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 30335  001318  0E01               	movlw	1
 30336  00131A  0100               	movlb	0	; () banked
 30337  00131C  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30338  00131E  0101               	movlb	1	; () banked
 30339  001320  90D8               	bcf	status,0,c
 30340  001322  354A               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 30341  001324  0100               	movlb	0	; () banked
 30342  001326  6FA1               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30343  001328  0101               	movlb	1	; () banked
 30344  00132A  3943               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 30345  00132C  0BF0               	andlw	240
 30346  00132E  0100               	movlb	0	; () banked
 30347  001330  11A1               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 30348  001332  11A0               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30349  001334  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30350  001336  0E1D               	movlw	29
 30351  001338  EC6B  F051         	call	_RADIO_RegisterWrite
 30352                           
 30353                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,;radio_driver_SX1276.c: 554: (Radi
      +                          oConfiguration.dataRate << (4)) |;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn
      +                           & 0x01) << (2)) |;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 30354  00133C  C09E  F0A0         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 30355  001340  C09F  F0A1         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 30356  001344  C0A1  F0A0         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 30357  001348  0100               	movlb	0	; () banked
 30358  00134A  6BA1               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30359  00134C  0E03               	movlw	3
 30360  00134E  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30361  001350  C145  F0A2         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 30362  001354  0E01               	movlw	1
 30363  001356  17A2               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30364  001358  90D8               	bcf	status,0,c
 30365  00135A  37A2               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30366  00135C  90D8               	bcf	status,0,c
 30367  00135E  37A2               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30368  001360  0101               	movlb	1	; () banked
 30369  001362  3942               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 30370  001364  0BF0               	andlw	240
 30371  001366  0100               	movlb	0	; () banked
 30372  001368  11A2               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 30373  00136A  11A0               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30374  00136C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30375  00136E  0E1E               	movlw	30
 30376  001370  EC6B  F051         	call	_RADIO_RegisterWrite
 30377                           
 30378                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 30379  001374  0101               	movlb	1	; () banked
 30380  001376  5147               	movf	(_RadioConfiguration+30)& (0+255),w,b
 30381  001378  1148               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 30382  00137A  B4D8               	btfsc	status,2,c
 30383  00137C  D06F               	goto	l18406
 30384                           
 30385                           ; BSR set to: 1
 30386                           ;radio_driver_SX1276.c: 561: {;radio_driver_SX1276.c: 562: tempValue = RadioConfiguratio
      +                          n.frequencyHopPeriod;
 30387  00137E  C147  F0A4         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 30388  001382  C148  F0A5         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 30389  001386  0100               	movlb	0	; () banked
 30390  001388  6BA6               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30391  00138A  6BA7               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30392                           
 30393                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 30394  00138C  D04E               	goto	l18402
 30395  00138E                     l18392:
 30396                           
 30397                           ; BSR set to: 1
 30398                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 30399  00138E  C0A4  F092         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30400  001392  C0A5  F093         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30401  001396  C0A6  F094         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30402  00139A  C0A7  F095         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30403  00139E  0E7D               	movlw	125
 30404  0013A0  0100               	movlb	0	; () banked
 30405  0013A2  6F96               	movwf	___lmul@multiplicand& (0+255),b
 30406  0013A4  0E00               	movlw	0
 30407  0013A6  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30408  0013A8  0E00               	movlw	0
 30409  0013AA  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30410  0013AC  0E00               	movlw	0
 30411  0013AE  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30412  0013B0  ECAD  F048         	call	___lmul	;wreg free
 30413  0013B4  D027               	goto	L30
 30414  0013B6                     l18394:
 30415                           
 30416                           ; BSR set to: 1
 30417                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 30418  0013B6  C0A4  F092         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30419  0013BA  C0A5  F093         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30420  0013BE  C0A6  F094         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30421  0013C2  C0A7  F095         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30422  0013C6  0EFA               	movlw	250
 30423  0013C8  0100               	movlb	0	; () banked
 30424  0013CA  6F96               	movwf	___lmul@multiplicand& (0+255),b
 30425  0013CC  0E00               	movlw	0
 30426  0013CE  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30427  0013D0  0E00               	movlw	0
 30428  0013D2  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30429  0013D4  0E00               	movlw	0
 30430  0013D6  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30431  0013D8  ECAD  F048         	call	___lmul	;wreg free
 30432  0013DC  D013               	goto	L30
 30433  0013DE                     l18396:
 30434                           
 30435                           ; BSR set to: 1
 30436                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 30437  0013DE  C0A4  F092         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30438  0013E2  C0A5  F093         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30439  0013E6  C0A6  F094         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30440  0013EA  C0A7  F095         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30441  0013EE  0EF4               	movlw	244
 30442  0013F0  0100               	movlb	0	; () banked
 30443  0013F2  6F96               	movwf	___lmul@multiplicand& (0+255),b
 30444  0013F4  0E01               	movlw	1
 30445  0013F6  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30446  0013F8  0E00               	movlw	0
 30447  0013FA  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30448  0013FC  0E00               	movlw	0
 30449  0013FE  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30450  001400  ECAD  F048         	call	___lmul	;wreg free
 30451  001404                     L30:
 30452  001404  C092  F0A4         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 30453  001408  C093  F0A5         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 30454  00140C  C094  F0A6         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 30455  001410  C095  F0A7         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 30456                           
 30457                           ;radio_driver_SX1276.c: 574: break;
 30458  001414  D016               	goto	l18404
 30459  001416                     l18398:
 30460                           
 30461                           ; BSR set to: 1
 30462                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 30463  001416  0E00               	movlw	0
 30464  001418  0100               	movlb	0	; () banked
 30465  00141A  6FA4               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30466  00141C  0E00               	movlw	0
 30467  00141E  6FA5               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30468  001420  0E00               	movlw	0
 30469  001422  6FA6               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30470  001424  0E00               	movlw	0
 30471  001426  6FA7               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30472                           
 30473                           ;radio_driver_SX1276.c: 578: break;
 30474  001428  D00C               	goto	l18404
 30475  00142A                     l18402:
 30476                           
 30477                           ; BSR set to: 0
 30478  00142A  0101               	movlb	1	; () banked
 30479  00142C  5143               	movf	(_RadioConfiguration+26)& (0+255),w,b
 30480                           
 30481                           ; Switch size 1, requested type "simple"
 30482                           ; Number of cases is 3, Range of values is 7 to 9
 30483                           ; switch strategies available:
 30484                           ; Name         Instructions Cycles
 30485                           ; simple_byte           10     6 (average)
 30486                           ;	Chosen strategy is simple_byte
 30487  00142E  0A07               	xorlw	7	; case 7
 30488  001430  B4D8               	btfsc	status,2,c
 30489  001432  D7AD               	goto	l18392
 30490  001434  0A0F               	xorlw	15	; case 8
 30491  001436  B4D8               	btfsc	status,2,c
 30492  001438  D7BE               	goto	l18394
 30493  00143A  0A01               	xorlw	1	; case 9
 30494  00143C  B4D8               	btfsc	status,2,c
 30495  00143E  D7CF               	goto	l18396
 30496  001440  D7EA               	goto	l18398
 30497  001442                     l18404:
 30498                           
 30499                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 30500  001442  0101               	movlb	1	; () banked
 30501  001444  2942               	incf	(_RadioConfiguration+25)& (0+255),w,b
 30502  001446  0100               	movlb	0	; () banked
 30503  001448  6FA0               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 30504  00144A  D005               	goto	u19460
 30505  00144C                     u19465:
 30506  00144C  90D8               	bcf	status,0,c
 30507  00144E  33A7               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 30508  001450  33A6               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 30509  001452  33A5               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 30510  001454  33A4               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 30511  001456                     u19460:
 30512  001456  2FA0               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 30513  001458  D7F9               	goto	u19465
 30514                           
 30515                           ;radio_driver_SX1276.c: 582: }
 30516  00145A  D009               	goto	l18408
 30517  00145C                     l18406:
 30518                           
 30519                           ; BSR set to: 1
 30520                           ;radio_driver_SX1276.c: 583: else;radio_driver_SX1276.c: 584: {;radio_driver_SX1276.c: 5
      +                          85: tempValue = 0;
 30521  00145C  0E00               	movlw	0
 30522  00145E  0100               	movlb	0	; () banked
 30523  001460  6FA4               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30524  001462  0E00               	movlw	0
 30525  001464  6FA5               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30526  001466  0E00               	movlw	0
 30527  001468  6FA6               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30528  00146A  0E00               	movlw	0
 30529  00146C  6FA7               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30530  00146E                     l18408:
 30531                           
 30532                           ;radio_driver_SX1276.c: 586: };radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (ui
      +                          nt8_t)tempValue);
 30533  00146E  C0A4  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 30534  001472  0E24               	movlw	36
 30535  001474  EC6B  F051         	call	_RADIO_RegisterWrite
 30536                           
 30537                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 30538  001478  C09E  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 30539  00147C  0E1F               	movlw	31
 30540  00147E  EC6B  F051         	call	_RADIO_RegisterWrite
 30541                           
 30542                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 30543  001482  0E26               	movlw	38
 30544  001484  EC9B  F050         	call	_RADIO_RegisterRead
 30545  001488  0100               	movlb	0	; () banked
 30546  00148A  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30547                           
 30548                           ; BSR set to: 0
 30549                           ;radio_driver_SX1276.c: 596: if (;radio_driver_SX1276.c: 597: (;radio_driver_SX1276.c: 5
      +                          98: (SF_12 == RadioConfiguration.dataRate) &&;radio_driver_SX1276.c: 599: ((BW_125KHZ ==
      +                           RadioConfiguration.bandWidth) || (BW_250KHZ == RadioConfiguration.bandWidth));radio_dri
      +                          ver_SX1276.c: 600: ) ||;radio_driver_SX1276.c: 601: (;radio_driver_SX1276.c: 602: (SF_11
      +                           == RadioConfiguration.dataRate) &&;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfi
      +                          guration.bandWidth);radio_driver_SX1276.c: 604: );radio_driver_SX1276.c: 605: )
 30550  00148C  0E0C               	movlw	12
 30551  00148E  0101               	movlb	1	; () banked
 30552  001490  1942               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30553  001492  A4D8               	btfss	status,2,c
 30554  001494  D008               	goto	u19490
 30555                           
 30556                           ; BSR set to: 1
 30557  001496  0E07               	movlw	7
 30558  001498  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30559  00149A  B4D8               	btfsc	status,2,c
 30560  00149C  D00C               	goto	u19510
 30561                           
 30562                           ; BSR set to: 1
 30563  00149E  0E08               	movlw	8
 30564  0014A0  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30565  0014A2  B4D8               	btfsc	status,2,c
 30566  0014A4  D008               	goto	u19510
 30567  0014A6                     u19490:
 30568                           
 30569                           ; BSR set to: 1
 30570  0014A6  0E0B               	movlw	11
 30571  0014A8  1942               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30572  0014AA  A4D8               	btfss	status,2,c
 30573  0014AC  D007               	goto	l18426
 30574                           
 30575                           ; BSR set to: 1
 30576  0014AE  0E07               	movlw	7
 30577  0014B0  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30578  0014B2  A4D8               	btfss	status,2,c
 30579  0014B4  D003               	goto	l18426
 30580  0014B6                     u19510:
 30581                           
 30582                           ; BSR set to: 1
 30583                           ;radio_driver_SX1276.c: 606: {;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 30584  0014B6  0100               	movlb	0	; () banked
 30585  0014B8  87A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30586                           
 30587                           ;radio_driver_SX1276.c: 608: }
 30588  0014BA  D002               	goto	l478
 30589  0014BC                     l18426:
 30590                           
 30591                           ; BSR set to: 1
 30592                           ;radio_driver_SX1276.c: 609: else;radio_driver_SX1276.c: 610: {;radio_driver_SX1276.c: 6
      +                          11: regValue &= ~(1 << (3));
 30593  0014BC  0100               	movlb	0	; () banked
 30594  0014BE  97A8               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30595  0014C0                     l478:
 30596                           
 30597                           ; BSR set to: 0
 30598                           ;radio_driver_SX1276.c: 612: };radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 30599  0014C0  85A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 30600                           
 30601                           ; BSR set to: 0
 30602                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 30603  0014C2  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30604  0014C6  0E26               	movlw	38
 30605  0014C8  EC6B  F051         	call	_RADIO_RegisterWrite
 30606                           
 30607                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 30608  0014CC  0E31               	movlw	49
 30609  0014CE  EC9B  F050         	call	_RADIO_RegisterRead
 30610  0014D2  0100               	movlb	0	; () banked
 30611  0014D4  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30612                           
 30613                           ; BSR set to: 0
 30614                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 30615  0014D6  0EF8               	movlw	248
 30616  0014D8  17A8               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30617                           
 30618                           ; BSR set to: 0
 30619                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 30620  0014DA  0E03               	movlw	3
 30621  0014DC  13A8               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30622                           
 30623                           ; BSR set to: 0
 30624                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 30625  0014DE  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30626  0014E2  0E31               	movlw	49
 30627  0014E4  EC6B  F051         	call	_RADIO_RegisterWrite
 30628                           
 30629                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 30630  0014E8  0E0A               	movlw	10
 30631  0014EA  0100               	movlb	0	; () banked
 30632  0014EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30633  0014EE  0E37               	movlw	55
 30634  0014F0  EC6B  F051         	call	_RADIO_RegisterWrite
 30635                           
 30636                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 30637  0014F4  0E12               	movlw	18
 30638  0014F6  0101               	movlb	1	; () banked
 30639  0014F8  195A               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30640  0014FA  A4D8               	btfss	status,2,c
 30641  0014FC  D02F               	goto	l18464
 30642                           
 30643                           ; BSR set to: 1
 30644                           ;radio_driver_SX1276.c: 626: {;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfi
      +                          guration.bandWidth) ||;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.band
      +                          Width) )
 30645  0014FE  0E07               	movlw	7
 30646  001500  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30647  001502  B4D8               	btfsc	status,2,c
 30648  001504  D004               	goto	u19540
 30649                           
 30650                           ; BSR set to: 1
 30651  001506  0E08               	movlw	8
 30652  001508  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30653  00150A  A4D8               	btfss	status,2,c
 30654  00150C  D017               	goto	l18456
 30655  00150E                     u19540:
 30656                           
 30657                           ; BSR set to: 1
 30658                           ;radio_driver_SX1276.c: 631: {;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead
      +                          (0x31);
 30659  00150E  0E31               	movlw	49
 30660  001510  EC9B  F050         	call	_RADIO_RegisterRead
 30661  001514  0100               	movlb	0	; () banked
 30662  001516  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30663                           
 30664                           ; BSR set to: 0
 30665                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 30666  001518  9FA8               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30667                           
 30668                           ; BSR set to: 0
 30669                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 30670  00151A  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30671  00151E  0E31               	movlw	49
 30672  001520  EC6B  F051         	call	_RADIO_RegisterWrite
 30673                           
 30674                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 30675  001524  0E40               	movlw	64
 30676  001526  0100               	movlb	0	; () banked
 30677  001528  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30678  00152A  0E2F               	movlw	47
 30679  00152C  EC6B  F051         	call	_RADIO_RegisterWrite
 30680                           
 30681                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 30682  001530  0E00               	movlw	0
 30683  001532  0100               	movlb	0	; () banked
 30684  001534  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30685  001536  0E30               	movlw	48
 30686  001538  EC6B  F051         	call	_RADIO_RegisterWrite
 30687  00153C                     l18456:
 30688                           
 30689                           ;radio_driver_SX1276.c: 637: };radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfigu
      +                          ration.bandWidth)
 30690  00153C  0E09               	movlw	9
 30691  00153E  0101               	movlb	1	; () banked
 30692  001540  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30693  001542  A4D8               	btfss	status,2,c
 30694  001544  D00B               	goto	l18464
 30695                           
 30696                           ; BSR set to: 1
 30697                           ;radio_driver_SX1276.c: 640: {;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead
      +                          (0x31);
 30698  001546  0E31               	movlw	49
 30699  001548  EC9B  F050         	call	_RADIO_RegisterRead
 30700  00154C  0100               	movlb	0	; () banked
 30701  00154E  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30702                           
 30703                           ; BSR set to: 0
 30704                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 30705  001550  8FA8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30706                           
 30707                           ; BSR set to: 0
 30708                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 30709  001552  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30710  001556  0E31               	movlw	49
 30711  001558  EC6B  F051         	call	_RADIO_RegisterWrite
 30712  00155C                     l18464:
 30713                           
 30714                           ;radio_driver_SX1276.c: 644: };radio_driver_SX1276.c: 645: };radio_driver_SX1276.c: 647:
      +                           regValue = RADIO_RegisterRead(0x33);
 30715  00155C  0E33               	movlw	51
 30716  00155E  EC9B  F050         	call	_RADIO_RegisterRead
 30717  001562  0100               	movlb	0	; () banked
 30718  001564  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30719                           
 30720                           ; BSR set to: 0
 30721                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 30722  001566  9DA8               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 30723                           
 30724                           ; BSR set to: 0
 30725                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 30726  001568  81A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 30727                           
 30728                           ; BSR set to: 0
 30729                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 30730  00156A  C149  F0A0         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30731  00156E  0E01               	movlw	1
 30732  001570  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30733  001572  0E06               	movlw	6
 30734  001574  6FA1               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30735  001576                     u19565:
 30736  001576  90D8               	bcf	status,0,c
 30737  001578  37A0               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30738  00157A  2FA1               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 30739  00157C  D7FC               	goto	u19565
 30740  00157E  51A0               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 30741  001580  13A8               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30742                           
 30743                           ; BSR set to: 0
 30744                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 30745  001582  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30746  001586  0E33               	movlw	51
 30747  001588  EC6B  F051         	call	_RADIO_RegisterWrite
 30748                           
 30749                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 30750  00158C  C149  F0A0         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30751  001590  0E01               	movlw	1
 30752  001592  0100               	movlb	0	; () banked
 30753  001594  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30754  001596  90D8               	bcf	status,0,c
 30755  001598  37A0               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30756  00159A  90D8               	bcf	status,0,c
 30757  00159C  35A0               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 30758  00159E  0AFF               	xorlw	255
 30759  0015A0  0B1D               	andlw	29
 30760  0015A2  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30761                           
 30762                           ; BSR set to: 0
 30763                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 30764  0015A4  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30765  0015A8  0E3B               	movlw	59
 30766  0015AA  EC6B  F051         	call	_RADIO_RegisterWrite
 30767                           
 30768                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 30769  0015AE  0101               	movlb	1	; () banked
 30770  0015B0  5136               	movf	(_RadioConfiguration+13)& (0+255),w,b
 30771  0015B2  0100               	movlb	0	; () banked
 30772  0015B4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30773  0015B6  0E20               	movlw	32
 30774  0015B8  EC6B  F051         	call	_RADIO_RegisterWrite
 30775                           
 30776                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 30777  0015BC  C135  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 30778  0015C0  0E21               	movlw	33
 30779  0015C2  EC6B  F051         	call	_RADIO_RegisterWrite
 30780                           
 30781                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 30782  0015C6  0E00               	movlw	0
 30783  0015C8  0100               	movlb	0	; () banked
 30784  0015CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30785  0015CC  0E0D               	movlw	13
 30786  0015CE  EC6B  F051         	call	_RADIO_RegisterWrite
 30787                           
 30788                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 30789  0015D2  0E00               	movlw	0
 30790  0015D4  0100               	movlb	0	; () banked
 30791  0015D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30792  0015D8  0E0E               	movlw	14
 30793  0015DA  EC6B  F051         	call	_RADIO_RegisterWrite
 30794                           
 30795                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 30796  0015DE  0E00               	movlw	0
 30797  0015E0  0100               	movlb	0	; () banked
 30798  0015E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30799  0015E4  0E0F               	movlw	15
 30800  0015E6  EC6B  F051         	call	_RADIO_RegisterWrite
 30801                           
 30802                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 30803  0015EA  0E12               	movlw	18
 30804  0015EC  0101               	movlb	1	; () banked
 30805  0015EE  195A               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30806  0015F0  A4D8               	btfss	status,2,c
 30807  0015F2  D070               	goto	l484
 30808                           
 30809                           ; BSR set to: 1
 30810                           ;radio_driver_SX1276.c: 665: {;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfi
      +                          guration.bandWidth) &&;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 8620
      +                          00000) &&;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000);radio
      +                          _driver_SX1276.c: 669: )
 30811  0015F4  0E09               	movlw	9
 30812  0015F6  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30813  0015F8  A4D8               	btfss	status,2,c
 30814  0015FA  D020               	goto	l18498
 30815                           
 30816                           ; BSR set to: 1
 30817  0015FC  0E80               	movlw	128
 30818  0015FE  5D29               	subwf	_RadioConfiguration& (0+255),w,b
 30819  001600  0E13               	movlw	19
 30820  001602  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30821  001604  0E61               	movlw	97
 30822  001606  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30823  001608  0E33               	movlw	51
 30824  00160A  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30825  00160C  A0D8               	btfss	status,0,c
 30826  00160E  D016               	goto	l18498
 30827                           
 30828                           ; BSR set to: 1
 30829  001610  0529               	decf	_RadioConfiguration& (0+255),w,b
 30830  001612  0EF7               	movlw	247
 30831  001614  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30832  001616  0ECB               	movlw	203
 30833  001618  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30834  00161A  0E3C               	movlw	60
 30835  00161C  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30836  00161E  B0D8               	btfsc	status,0,c
 30837  001620  D00D               	goto	l18498
 30838                           
 30839                           ; BSR set to: 1
 30840                           ;radio_driver_SX1276.c: 670: {;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x0
      +                          2);
 30841  001622  0E02               	movlw	2
 30842  001624  0100               	movlb	0	; () banked
 30843  001626  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30844  001628  0E36               	movlw	54
 30845  00162A  EC6B  F051         	call	_RADIO_RegisterWrite
 30846                           
 30847                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 30848  00162E  0E64               	movlw	100
 30849  001630  0100               	movlb	0	; () banked
 30850  001632  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30851  001634  0E3A               	movlw	58
 30852  001636  EC6B  F051         	call	_RADIO_RegisterWrite
 30853                           
 30854                           ;radio_driver_SX1276.c: 673: }
 30855  00163A  D02B               	goto	l18508
 30856  00163C                     l18498:
 30857                           
 30858                           ; BSR set to: 1
 30859                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&;ra
      +                          dio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&;radio_driver_SX
      +                          1276.c: 676: (RadioConfiguration.frequency <= 525000000);radio_driver_SX1276.c: 677: )
 30860  00163C  0E09               	movlw	9
 30861  00163E  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30862  001640  A4D8               	btfss	status,2,c
 30863  001642  D021               	goto	l18506
 30864                           
 30865                           ; BSR set to: 1
 30866  001644  0E80               	movlw	128
 30867  001646  5D29               	subwf	_RadioConfiguration& (0+255),w,b
 30868  001648  0E1A               	movlw	26
 30869  00164A  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30870  00164C  0E70               	movlw	112
 30871  00164E  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30872  001650  0E18               	movlw	24
 30873  001652  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30874  001654  A0D8               	btfss	status,0,c
 30875  001656  D017               	goto	l18506
 30876                           
 30877                           ; BSR set to: 1
 30878  001658  0E41               	movlw	65
 30879  00165A  5D29               	subwf	_RadioConfiguration& (0+255),w,b
 30880  00165C  0EDD               	movlw	221
 30881  00165E  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30882  001660  0E4A               	movlw	74
 30883  001662  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30884  001664  0E1F               	movlw	31
 30885  001666  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30886  001668  B0D8               	btfsc	status,0,c
 30887  00166A  D00D               	goto	l18506
 30888                           
 30889                           ; BSR set to: 1
 30890                           ;radio_driver_SX1276.c: 678: {;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x0
      +                          2);
 30891  00166C  0E02               	movlw	2
 30892  00166E  0100               	movlb	0	; () banked
 30893  001670  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30894  001672  0E36               	movlw	54
 30895  001674  EC6B  F051         	call	_RADIO_RegisterWrite
 30896                           
 30897                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 30898  001678  0E7F               	movlw	127
 30899  00167A  0100               	movlb	0	; () banked
 30900  00167C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30901  00167E  0E3A               	movlw	58
 30902  001680  EC6B  F051         	call	_RADIO_RegisterWrite
 30903                           
 30904                           ;radio_driver_SX1276.c: 681: }
 30905  001684  D006               	goto	l18508
 30906  001686                     l18506:
 30907                           
 30908                           ; BSR set to: 1
 30909                           ;radio_driver_SX1276.c: 682: else;radio_driver_SX1276.c: 683: {;radio_driver_SX1276.c: 6
      +                          84: RADIO_RegisterWrite(0x36, 0x03);
 30910  001686  0E03               	movlw	3
 30911  001688  0100               	movlb	0	; () banked
 30912  00168A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30913  00168C  0E36               	movlw	54
 30914  00168E  EC6B  F051         	call	_RADIO_RegisterWrite
 30915  001692                     l18508:
 30916                           
 30917                           ;radio_driver_SX1276.c: 685: };radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfig
      +                          uration.bandWidth) && (1 == RadioConfiguration.iqInverted))
 30918  001692  0E09               	movlw	9
 30919  001694  0101               	movlb	1	; () banked
 30920  001696  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30921  001698  A4D8               	btfss	status,2,c
 30922  00169A  D010               	goto	l18514
 30923                           
 30924                           ; BSR set to: 1
 30925  00169C  0549               	decf	(_RadioConfiguration+32)& (0+255),w,b
 30926  00169E  A4D8               	btfss	status,2,c
 30927  0016A0  D00D               	goto	l18514
 30928                           
 30929                           ; BSR set to: 1
 30930                           ;radio_driver_SX1276.c: 689: {;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x6
      +                          5);
 30931  0016A2  0E65               	movlw	101
 30932  0016A4  0100               	movlb	0	; () banked
 30933  0016A6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30934  0016A8  0E3A               	movlw	58
 30935  0016AA  EC6B  F051         	call	_RADIO_RegisterWrite
 30936                           
 30937                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 30938  0016AE  0E19               	movlw	25
 30939  0016B0  0100               	movlb	0	; () banked
 30940  0016B2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30941  0016B4  0E3B               	movlw	59
 30942  0016B6  EC6B  F051         	call	_RADIO_RegisterWrite
 30943                           
 30944                           ;radio_driver_SX1276.c: 692: }
 30945  0016BA  D00C               	goto	l484
 30946  0016BC                     l18514:
 30947                           
 30948                           ; BSR set to: 1
 30949                           ;radio_driver_SX1276.c: 693: else;radio_driver_SX1276.c: 694: {;radio_driver_SX1276.c: 6
      +                          95: RADIO_RegisterWrite(0x3A, 0x65);
 30950  0016BC  0E65               	movlw	101
 30951  0016BE  0100               	movlb	0	; () banked
 30952  0016C0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30953  0016C2  0E3A               	movlw	58
 30954  0016C4  EC6B  F051         	call	_RADIO_RegisterWrite
 30955                           
 30956                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 30957  0016C8  0E1D               	movlw	29
 30958  0016CA  0100               	movlb	0	; () banked
 30959  0016CC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30960  0016CE  0E3B               	movlw	59
 30961  0016D0  EC6B  F051         	call	_RADIO_RegisterWrite
 30962  0016D4                     l484:
 30963                           
 30964                           ;radio_driver_SX1276.c: 697: };radio_driver_SX1276.c: 698: };radio_driver_SX1276.c: 701:
      +                           RADIO_RegisterWrite(0x12, 0xFF);
 30965  0016D4  0EFF               	movlw	255
 30966  0016D6  0100               	movlb	0	; () banked
 30967  0016D8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30968  0016DA  0E12               	movlw	18
 30969  0016DC  EC6B  F051         	call	_RADIO_RegisterWrite
 30970                           
 30971                           ;radio_driver_SX1276.c: 702: }
 30972  0016E0  0012               	return	
 30973  0016E2                     l18516:
 30974                           
 30975                           ; BSR set to: 1
 30976                           ;radio_driver_SX1276.c: 703: else;radio_driver_SX1276.c: 704: {;radio_driver_SX1276.c: 7
      +                          06: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequencyDeviation);
 30977  0016E2  C12D  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 30978  0016E6  C12E  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 30979  0016EA  C12F  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 30980  0016EE  C130  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 30981  0016F2  EC2C  F046         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 30982                           
 30983                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 30984  0016F6  C131  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 30985  0016FA  C132  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 30986  0016FE  C133  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 30987  001702  C134  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 30988  001706  EC95  F046         	call	_RADIO_WriteFSKBitRate	;wreg free
 30989                           
 30990                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 30991  00170A  0101               	movlb	1	; () banked
 30992  00170C  5136               	movf	(_RadioConfiguration+13)& (0+255),w,b
 30993  00170E  0100               	movlb	0	; () banked
 30994  001710  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30995  001712  0E25               	movlw	37
 30996  001714  EC6B  F051         	call	_RADIO_RegisterWrite
 30997                           
 30998                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 30999  001718  C135  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 31000  00171C  0E26               	movlw	38
 31001  00171E  EC6B  F051         	call	_RADIO_RegisterWrite
 31002                           
 31003                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 31004  001722  0E0A               	movlw	10
 31005  001724  EC9B  F050         	call	_RADIO_RegisterRead
 31006  001728  0100               	movlb	0	; () banked
 31007  00172A  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31008                           
 31009                           ; BSR set to: 0
 31010                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 31011  00172C  0E9F               	movlw	159
 31012  00172E  17A8               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 31013                           
 31014                           ; BSR set to: 0
 31015                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 31016  001730  0101               	movlb	1	; () banked
 31017  001732  395C               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 31018  001734  46E8               	rlncf	wreg,f,c
 31019  001736  0BE0               	andlw	224
 31020  001738  0100               	movlb	0	; () banked
 31021  00173A  13A8               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 31022                           
 31023                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 31024  00173C  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31025  001740  0E0A               	movlw	10
 31026  001742  EC6B  F051         	call	_RADIO_RegisterWrite
 31027                           
 31028                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 31029  001746  0EC8               	movlw	200
 31030  001748  0100               	movlb	0	; () banked
 31031  00174A  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31032                           
 31033                           ; BSR set to: 0
 31034                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 31035  00174C  0101               	movlb	1	; () banked
 31036  00174E  5145               	movf	(_RadioConfiguration+28)& (0+255),w,b
 31037  001750  B4D8               	btfsc	status,2,c
 31038  001752  D002               	goto	l18528
 31039                           
 31040                           ; BSR set to: 1
 31041                           ;radio_driver_SX1276.c: 722: {;radio_driver_SX1276.c: 723: regValue |= 0x10;
 31042  001754  0100               	movlb	0	; () banked
 31043  001756  89A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 31044  001758                     l18528:
 31045                           
 31046                           ;radio_driver_SX1276.c: 724: };radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, reg
      +                          Value);
 31047  001758  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31048  00175C  0E30               	movlw	48
 31049  00175E  EC6B  F051         	call	_RADIO_RegisterWrite
 31050                           
 31051                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 31052  001762  0E00               	movlw	0
 31053  001764  0100               	movlb	0	; () banked
 31054  001766  6FA3               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 31055  001768  D00E               	goto	l18536
 31056  00176A                     l18532:
 31057                           
 31058                           ; BSR set to: 0
 31059                           ;radio_driver_SX1276.c: 729: {;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i,
      +                           RadioConfiguration.syncWord[i]);
 31060  00176A  0E38               	movlw	low (_RadioConfiguration+15)
 31061  00176C  25A3               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 31062  00176E  6ED9               	movwf	fsr2l,c
 31063  001770  6ADA               	clrf	fsr2h,c
 31064  001772  0E01               	movlw	high (_RadioConfiguration+15)
 31065  001774  22DA               	addwfc	fsr2h,f,c
 31066  001776  50DF               	movf	indf2,w,c
 31067  001778  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31068  00177A  51A3               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 31069  00177C  0F28               	addlw	40
 31070  00177E  EC6B  F051         	call	_RADIO_RegisterWrite
 31071  001782  0100               	movlb	0	; () banked
 31072  001784  2BA3               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 31073  001786                     l18536:
 31074                           
 31075                           ; BSR set to: 0
 31076  001786  0101               	movlb	1	; () banked
 31077  001788  5140               	movf	(_RadioConfiguration+23)& (0+255),w,b
 31078  00178A  0100               	movlb	0	; () banked
 31079  00178C  5DA3               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 31080  00178E  A0D8               	btfss	status,0,c
 31081  001790  D7EC               	goto	l18532
 31082                           
 31083                           ; BSR set to: 0
 31084                           ;radio_driver_SX1276.c: 733: };radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWo
      +                          rdLen != 0)
 31085  001792  0101               	movlb	1	; () banked
 31086  001794  5140               	movf	(_RadioConfiguration+23)& (0+255),w,b
 31087  001796  B4D8               	btfsc	status,2,c
 31088  001798  D008               	goto	l18542
 31089                           
 31090                           ; BSR set to: 1
 31091                           ;radio_driver_SX1276.c: 737: {;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x1
      +                          0 | (RadioConfiguration.syncWordLen - 1));
 31092  00179A  0540               	decf	(_RadioConfiguration+23)& (0+255),w,b
 31093  00179C  0910               	iorlw	16
 31094  00179E  0100               	movlb	0	; () banked
 31095  0017A0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31096  0017A2  0E27               	movlw	39
 31097  0017A4  EC6B  F051         	call	_RADIO_RegisterWrite
 31098                           
 31099                           ;radio_driver_SX1276.c: 739: }
 31100  0017A8  D006               	goto	l497
 31101  0017AA                     l18542:
 31102                           
 31103                           ; BSR set to: 1
 31104                           ;radio_driver_SX1276.c: 740: else;radio_driver_SX1276.c: 741: {;radio_driver_SX1276.c: 7
      +                          42: RADIO_RegisterWrite(0x27, 0x00);
 31105  0017AA  0E00               	movlw	0
 31106  0017AC  0100               	movlb	0	; () banked
 31107  0017AE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31108  0017B0  0E27               	movlw	39
 31109  0017B2  EC6B  F051         	call	_RADIO_RegisterWrite
 31110  0017B6                     l497:
 31111                           
 31112                           ;radio_driver_SX1276.c: 743: };radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xF
      +                          F);
 31113  0017B6  0EFF               	movlw	255
 31114  0017B8  0100               	movlb	0	; () banked
 31115  0017BA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31116  0017BC  0E3E               	movlw	62
 31117  0017BE  EC6B  F051         	call	_RADIO_RegisterWrite
 31118                           
 31119                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 31120  0017C2  0EFF               	movlw	255
 31121  0017C4  0100               	movlb	0	; () banked
 31122  0017C6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31123  0017C8  0E3F               	movlw	63
 31124  0017CA  EC6B  F051         	call	_RADIO_RegisterWrite
 31125  0017CE  0012               	return		;funcret
 31126  0017D0                     __end_of_RADIO_WriteConfiguration:
 31127                           	opt callstack 0
 31128                           
 31129 ;; *************** function _RADIO_WritePower *****************
 31130 ;; Defined at:
 31131 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31132 ;; Parameters:    Size  Location     Type
 31133 ;;  power           1    wreg     char 
 31134 ;; Auto vars:     Size  Location     Type
 31135 ;;  power           1    6[BANK0 ] char 
 31136 ;;  paDac           1    5[BANK0 ] unsigned char 
 31137 ;;  ocp             1    4[BANK0 ] unsigned char 
 31138 ;; Return value:  Size  Location     Type
 31139 ;;                  1    wreg      void 
 31140 ;; Registers used:
 31141 ;;		wreg, status,2, status,0, cstack
 31142 ;; Tracked objects:
 31143 ;;		On entry : 0/0
 31144 ;;		On exit  : 0/0
 31145 ;;		Unchanged: 0/0
 31146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31148 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31150 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31151 ;;Total ram usage:        3 bytes
 31152 ;; Hardware stack levels used:    1
 31153 ;; Hardware stack levels required when called:   10
 31154 ;; This function calls:
 31155 ;;		_RADIO_RegisterRead
 31156 ;;		_RADIO_RegisterWrite
 31157 ;; This function is called by:
 31158 ;;		_RADIO_WriteConfiguration
 31159 ;; This function uses a non-reentrant model
 31160 ;;
 31161                           
 31162                           	psect	text192
 31163  007180                     __ptext192:
 31164                           	opt callstack 0
 31165  007180                     _RADIO_WritePower:
 31166                           	opt callstack 15
 31167                           
 31168                           ;incstack = 0
 31169                           ;RADIO_WritePower@power stored from wreg
 31170  007180  0100               	movlb	0	; () banked
 31171  007182  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31172                           
 31173                           ;radio_driver_SX1276.c: 344: uint8_t paDac;;radio_driver_SX1276.c: 345: uint8_t ocp;;rad
      +                          io_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 31174  007184  0101               	movlb	1	; () banked
 31175  007186  5146               	movf	(_RadioConfiguration+29)& (0+255),w,b
 31176  007188  A4D8               	btfss	status,2,c
 31177  00718A  D02F               	goto	l18196
 31178                           
 31179                           ; BSR set to: 1
 31180                           ;radio_driver_SX1276.c: 348: {;radio_driver_SX1276.c: 350: if (power < -3)
 31181  00718C  0100               	movlb	0	; () banked
 31182  00718E  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31183  007190  0A80               	xorlw	128
 31184  007192  0F83               	addlw	131
 31185  007194  B0D8               	btfsc	status,0,c
 31186  007196  D002               	goto	l18176
 31187                           
 31188                           ; BSR set to: 0
 31189                           ;radio_driver_SX1276.c: 351: {;radio_driver_SX1276.c: 352: power = -3;
 31190  007198  0EFD               	movlw	253
 31191  00719A  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31192  00719C                     l18176:
 31193                           
 31194                           ; BSR set to: 0
 31195                           ;radio_driver_SX1276.c: 353: };radio_driver_SX1276.c: 354: if (power > 15)
 31196  00719C  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31197  00719E  0A80               	xorlw	128
 31198  0071A0  0F70               	addlw	-144
 31199  0071A2  A0D8               	btfss	status,0,c
 31200  0071A4  D002               	goto	l18180
 31201                           
 31202                           ; BSR set to: 0
 31203                           ;radio_driver_SX1276.c: 355: {;radio_driver_SX1276.c: 356: power = 15;
 31204  0071A6  0E0F               	movlw	15
 31205  0071A8  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31206  0071AA                     l18180:
 31207                           
 31208                           ; BSR set to: 0
 31209                           ;radio_driver_SX1276.c: 357: };radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x
      +                          4D);
 31210  0071AA  0E4D               	movlw	77
 31211  0071AC  EC9B  F050         	call	_RADIO_RegisterRead
 31212  0071B0  0100               	movlb	0	; () banked
 31213  0071B2  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 31214                           
 31215                           ; BSR set to: 0
 31216                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 31217  0071B4  0EF8               	movlw	248
 31218  0071B6  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31219                           
 31220                           ; BSR set to: 0
 31221                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 31222  0071B8  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31223                           
 31224                           ; BSR set to: 0
 31225                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 31226  0071BA  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31227  0071BE  0E4D               	movlw	77
 31228  0071C0  EC6B  F051         	call	_RADIO_RegisterWrite
 31229                           
 31230                           ;radio_driver_SX1276.c: 364: if (power < 0)
 31231  0071C4  0100               	movlb	0	; () banked
 31232  0071C6  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 31233  0071C8  D009               	goto	l18194
 31234                           
 31235                           ; BSR set to: 0
 31236                           ;radio_driver_SX1276.c: 365: {;radio_driver_SX1276.c: 369: power += 3;
 31237  0071CA  0E03               	movlw	3
 31238  0071CC  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 31239                           
 31240                           ; BSR set to: 0
 31241                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 31242  0071CE  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31243  0071D0  0920               	iorlw	32
 31244  0071D2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31245  0071D4  0E09               	movlw	9
 31246  0071D6  EC6B  F051         	call	_RADIO_RegisterWrite
 31247                           
 31248                           ;radio_driver_SX1276.c: 371: }
 31249  0071DA  0012               	return	
 31250  0071DC                     l18194:
 31251                           
 31252                           ; BSR set to: 0
 31253                           ;radio_driver_SX1276.c: 372: else;radio_driver_SX1276.c: 373: {;radio_driver_SX1276.c: 3
      +                          77: RADIO_RegisterWrite(0x09, 0x70 | power);
 31254  0071DC  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31255  0071DE  0970               	iorlw	112
 31256  0071E0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31257  0071E2  0E09               	movlw	9
 31258  0071E4  EC6B  F051         	call	_RADIO_RegisterWrite
 31259  0071E8  0012               	return	
 31260  0071EA                     l18196:
 31261                           
 31262                           ; BSR set to: 1
 31263                           ;radio_driver_SX1276.c: 380: else;radio_driver_SX1276.c: 381: {;radio_driver_SX1276.c: 3
      +                          85: if (power < 2)
 31264  0071EA  0100               	movlb	0	; () banked
 31265  0071EC  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31266  0071EE  0A80               	xorlw	128
 31267  0071F0  0F7E               	addlw	-130
 31268  0071F2  B0D8               	btfsc	status,0,c
 31269  0071F4  D002               	goto	l18200
 31270                           
 31271                           ; BSR set to: 0
 31272                           ;radio_driver_SX1276.c: 386: {;radio_driver_SX1276.c: 387: power = 2;
 31273  0071F6  0E02               	movlw	2
 31274  0071F8  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31275  0071FA                     l18200:
 31276                           
 31277                           ; BSR set to: 0
 31278                           ;radio_driver_SX1276.c: 388: };radio_driver_SX1276.c: 391: if (power >= 20)
 31279  0071FA  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31280  0071FC  0A80               	xorlw	128
 31281  0071FE  0F6C               	addlw	-148
 31282  007200  A0D8               	btfss	status,0,c
 31283  007202  D002               	goto	l18204
 31284                           
 31285                           ; BSR set to: 0
 31286                           ;radio_driver_SX1276.c: 392: {;radio_driver_SX1276.c: 393: power = 20;
 31287  007204  0E14               	movlw	20
 31288  007206  D006               	goto	L31
 31289  007208                     l18204:
 31290                           
 31291                           ; BSR set to: 0
 31292                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 31293  007208  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31294  00720A  0A80               	xorlw	128
 31295  00720C  0F6E               	addlw	-146
 31296  00720E  A0D8               	btfss	status,0,c
 31297  007210  D002               	goto	l18208
 31298                           
 31299                           ; BSR set to: 0
 31300                           ;radio_driver_SX1276.c: 396: {;radio_driver_SX1276.c: 397: power = 17;
 31301  007212  0E11               	movlw	17
 31302  007214                     L31:
 31303  007214  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31304  007216                     l18208:
 31305                           
 31306                           ; BSR set to: 0
 31307                           ;radio_driver_SX1276.c: 398: };radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B
      +                          );
 31308  007216  0E0B               	movlw	11
 31309  007218  EC9B  F050         	call	_RADIO_RegisterRead
 31310  00721C  0100               	movlb	0	; () banked
 31311  00721E  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 31312                           
 31313                           ; BSR set to: 0
 31314                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 31315  007220  0E4D               	movlw	77
 31316  007222  EC9B  F050         	call	_RADIO_RegisterRead
 31317  007226  0100               	movlb	0	; () banked
 31318  007228  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 31319                           
 31320                           ; BSR set to: 0
 31321                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 31322  00722A  0EF8               	movlw	248
 31323  00722C  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31324                           
 31325                           ; BSR set to: 0
 31326                           ;radio_driver_SX1276.c: 403: if (power == 20)
 31327  00722E  0E14               	movlw	20
 31328  007230  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 31329  007232  A4D8               	btfss	status,2,c
 31330  007234  D006               	goto	l18222
 31331                           
 31332                           ; BSR set to: 0
 31333                           ;radio_driver_SX1276.c: 404: {;radio_driver_SX1276.c: 405: paDac |= 0x07;
 31334  007236  0E07               	movlw	7
 31335  007238  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 31336                           
 31337                           ; BSR set to: 0
 31338                           ;radio_driver_SX1276.c: 406: power = 15;
 31339  00723A  0E0F               	movlw	15
 31340  00723C  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31341                           
 31342                           ; BSR set to: 0
 31343                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 31344  00723E  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 31345                           
 31346                           ;radio_driver_SX1276.c: 408: }
 31347  007240  D004               	goto	l18228
 31348  007242                     l18222:
 31349                           
 31350                           ; BSR set to: 0
 31351                           ;radio_driver_SX1276.c: 409: else;radio_driver_SX1276.c: 410: {;radio_driver_SX1276.c: 4
      +                          11: paDac |= 0x04;
 31352  007242  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31353                           
 31354                           ; BSR set to: 0
 31355                           ;radio_driver_SX1276.c: 412: power -= 2;
 31356  007244  0EFE               	movlw	254
 31357  007246  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 31358                           
 31359                           ; BSR set to: 0
 31360                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 31361  007248  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 31362  00724A                     l18228:
 31363                           
 31364                           ; BSR set to: 0
 31365                           ;radio_driver_SX1276.c: 414: };radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paD
      +                          ac);
 31366  00724A  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31367  00724E  0E4D               	movlw	77
 31368  007250  EC6B  F051         	call	_RADIO_RegisterWrite
 31369                           
 31370                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 31371  007254  0100               	movlb	0	; () banked
 31372  007256  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31373  007258  0980               	iorlw	128
 31374  00725A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31375  00725C  0E09               	movlw	9
 31376  00725E  EC6B  F051         	call	_RADIO_RegisterWrite
 31377                           
 31378                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 31379  007262  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 31380  007266  0E0B               	movlw	11
 31381  007268  EC6B  F051         	call	_RADIO_RegisterWrite
 31382  00726C  0012               	return		;funcret
 31383  00726E                     __end_of_RADIO_WritePower:
 31384                           	opt callstack 0
 31385                           
 31386 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 31387 ;; Defined at:
 31388 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31389 ;; Parameters:    Size  Location     Type
 31390 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 31391 ;; Auto vars:     Size  Location     Type
 31392 ;;  num             4   17[BANK0 ] unsigned long 
 31393 ;; Return value:  Size  Location     Type
 31394 ;;                  1    wreg      void 
 31395 ;; Registers used:
 31396 ;;		wreg, status,2, status,0, cstack
 31397 ;; Tracked objects:
 31398 ;;		On entry : 0/0
 31399 ;;		On exit  : 0/0
 31400 ;;		Unchanged: 0/0
 31401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31402 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31403 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31405 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31406 ;;Total ram usage:        8 bytes
 31407 ;; Hardware stack levels used:    1
 31408 ;; Hardware stack levels required when called:   10
 31409 ;; This function calls:
 31410 ;;		_RADIO_RegisterWrite
 31411 ;;		___lldiv
 31412 ;; This function is called by:
 31413 ;;		_RADIO_WriteConfiguration
 31414 ;; This function uses a non-reentrant model
 31415 ;;
 31416                           
 31417                           	psect	text193
 31418  008C58                     __ptext193:
 31419                           	opt callstack 0
 31420  008C58                     _RADIO_WriteFSKFrequencyDeviation:
 31421                           	opt callstack 15
 31422                           
 31423                           ;radio_driver_SX1276.c: 296: uint32_t num;;radio_driver_SX1276.c: 303: num = frequencyDe
      +                          viation;
 31424                           
 31425                           ;incstack = 0
 31426  008C58  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 31427  008C5C  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 31428  008C60  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 31429  008C64  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 31430                           
 31431                           ;radio_driver_SX1276.c: 304: num <<= (8);
 31432  008C68  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 31433  008C6C  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 31434  008C70  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 31435  008C74  0100               	movlb	0	; () banked
 31436  008C76  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 31437                           
 31438                           ; BSR set to: 0
 31439                           ;radio_driver_SX1276.c: 305: num /= 15625;
 31440  008C78  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 31441  008C7C  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 31442  008C80  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 31443  008C84  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 31444  008C88  0E09               	movlw	9
 31445  008C8A  6F64               	movwf	___lldiv@divisor& (0+255),b
 31446  008C8C  0E3D               	movlw	61
 31447  008C8E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 31448  008C90  0E00               	movlw	0
 31449  008C92  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 31450  008C94  0E00               	movlw	0
 31451  008C96  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 31452  008C98  EC6D  F042         	call	___lldiv	;wreg free
 31453  008C9C  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 31454  008CA0  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 31455  008CA4  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 31456  008CA8  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 31457                           
 31458                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 31459  008CAC  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 31460  008CB0  0E04               	movlw	4
 31461  008CB2  EC6B  F051         	call	_RADIO_RegisterWrite
 31462                           
 31463                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 31464  008CB6  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 31465  008CBA  0E05               	movlw	5
 31466  008CBC  EC6B  F051         	call	_RADIO_RegisterWrite
 31467  008CC0  0012               	return		;funcret
 31468  008CC2                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 31469                           	opt callstack 0
 31470                           
 31471 ;; *************** function _RADIO_WriteFSKBitRate *****************
 31472 ;; Defined at:
 31473 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31474 ;; Parameters:    Size  Location     Type
 31475 ;;  bitRate         4   13[BANK0 ] unsigned long 
 31476 ;; Auto vars:     Size  Location     Type
 31477 ;;  num             4   17[BANK0 ] unsigned long 
 31478 ;; Return value:  Size  Location     Type
 31479 ;;                  1    wreg      void 
 31480 ;; Registers used:
 31481 ;;		wreg, status,2, status,0, cstack
 31482 ;; Tracked objects:
 31483 ;;		On entry : 0/0
 31484 ;;		On exit  : 0/0
 31485 ;;		Unchanged: 0/0
 31486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31487 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31491 ;;Total ram usage:        8 bytes
 31492 ;; Hardware stack levels used:    1
 31493 ;; Hardware stack levels required when called:   10
 31494 ;; This function calls:
 31495 ;;		_RADIO_RegisterWrite
 31496 ;;		___lldiv
 31497 ;; This function is called by:
 31498 ;;		_RADIO_WriteConfiguration
 31499 ;; This function uses a non-reentrant model
 31500 ;;
 31501                           
 31502                           	psect	text194
 31503  008D2A                     __ptext194:
 31504                           	opt callstack 0
 31505  008D2A                     _RADIO_WriteFSKBitRate:
 31506                           	opt callstack 15
 31507                           
 31508                           ;radio_driver_SX1276.c: 318: uint32_t num;;radio_driver_SX1276.c: 320: num = 32000000;
 31509                           
 31510                           ;incstack = 0
 31511  008D2A  0E00               	movlw	0
 31512  008D2C  0100               	movlb	0	; () banked
 31513  008D2E  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 31514  008D30  0E48               	movlw	72
 31515  008D32  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 31516  008D34  0EE8               	movlw	232
 31517  008D36  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 31518  008D38  0E01               	movlw	1
 31519  008D3A  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 31520                           
 31521                           ; BSR set to: 0
 31522                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 31523  008D3C  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 31524  008D40  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 31525  008D44  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 31526  008D48  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 31527  008D4C  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 31528  008D50  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 31529  008D54  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 31530  008D58  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 31531  008D5C  EC6D  F042         	call	___lldiv	;wreg free
 31532  008D60  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 31533  008D64  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 31534  008D68  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 31535  008D6C  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 31536                           
 31537                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 31538  008D70  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 31539  008D74  0E02               	movlw	2
 31540  008D76  EC6B  F051         	call	_RADIO_RegisterWrite
 31541                           
 31542                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 31543  008D7A  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 31544  008D7E  0E03               	movlw	3
 31545  008D80  EC6B  F051         	call	_RADIO_RegisterWrite
 31546                           
 31547                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 31548  008D84  0E00               	movlw	0
 31549  008D86  0100               	movlb	0	; () banked
 31550  008D88  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31551  008D8A  0E5D               	movlw	93
 31552  008D8C  EC6B  F051         	call	_RADIO_RegisterWrite
 31553  008D90  0012               	return		;funcret
 31554  008D92                     __end_of_RADIO_WriteFSKBitRate:
 31555                           	opt callstack 0
 31556                           
 31557 ;; *************** function _PrepareJoinRequestFrame *****************
 31558 ;; Defined at:
 31559 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31560 ;; Parameters:    Size  Location     Type
 31561 ;;		None
 31562 ;; Auto vars:     Size  Location     Type
 31563 ;;  mic             4  115[BANK0 ] unsigned long 
 31564 ;;  bufferIndex     1  121[BANK0 ] unsigned char 
 31565 ;;  iCtr            1  120[BANK0 ] unsigned char 
 31566 ;;  mhdr            1  119[BANK0 ] struct .
 31567 ;; Return value:  Size  Location     Type
 31568 ;;                  1    wreg      unsigned char 
 31569 ;; Registers used:
 31570 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31571 ;; Tracked objects:
 31572 ;;		On entry : 0/0
 31573 ;;		On exit  : 0/0
 31574 ;;		Unchanged: 0/0
 31575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31577 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31578 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31579 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31580 ;;Total ram usage:        9 bytes
 31581 ;; Hardware stack levels used:    1
 31582 ;; Hardware stack levels required when called:   13
 31583 ;; This function calls:
 31584 ;;		_ComputeMic
 31585 ;;		_Random
 31586 ;;		_memcpy
 31587 ;;		_memset
 31588 ;; This function is called by:
 31589 ;;		_LORAWAN_Join
 31590 ;; This function uses a non-reentrant model
 31591 ;;
 31592                           
 31593                           	psect	text195
 31594  00567A                     __ptext195:
 31595                           	opt callstack 0
 31596  00567A                     _PrepareJoinRequestFrame:
 31597                           	opt callstack 16
 31598                           
 31599                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 31600                           
 31601                           ;incstack = 0
 31602  00567A  0E00               	movlw	0
 31603  00567C  0100               	movlb	0	; () banked
 31604  00567E  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31605                           
 31606                           ; BSR set to: 0
 31607                           ;lorawan.c: 1809: Mhdr_t mhdr;;lorawan.c: 1810: uint32_t mic;;lorawan.c: 1812: memset (m
      +                          acBuffer, 0, sizeof(macBuffer) );
 31608  005680  0EB8               	movlw	low _macBuffer
 31609  005682  6F60               	movwf	memset@p1& (0+255),b
 31610  005684  0E06               	movlw	high _macBuffer
 31611  005686  6F61               	movwf	(memset@p1+1)& (0+255),b
 31612  005688  0E00               	movlw	0
 31613  00568A  6F63               	movwf	(memset@c+1)& (0+255),b
 31614  00568C  0E00               	movlw	0
 31615  00568E  6F62               	movwf	memset@c& (0+255),b
 31616  005690  0E01               	movlw	1
 31617  005692  6F65               	movwf	(memset@n+1)& (0+255),b
 31618  005694  0E0F               	movlw	15
 31619  005696  6F64               	movwf	memset@n& (0+255),b
 31620  005698  EC70  F04F         	call	_memset	;wreg free
 31621                           
 31622                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 31623  00569C  0E1F               	movlw	-225
 31624  00569E  0100               	movlb	0	; () banked
 31625  0056A0  17D7               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31626                           
 31627                           ; BSR set to: 0
 31628                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 31629  0056A2  0EFC               	movlw	-4
 31630  0056A4  17D7               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31631                           
 31632                           ; BSR set to: 0
 31633                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 31634  0056A6  0EE3               	movlw	-29
 31635  0056A8  17D7               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31636                           
 31637                           ; BSR set to: 0
 31638                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 31639  0056AA  EE26  F0B8         	lfsr	2,_macBuffer
 31640  0056AE  C0D7  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 31641                           
 31642                           ; BSR set to: 0
 31643  0056B2  2BD9               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 31644                           
 31645                           ; BSR set to: 0
 31646                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 31647  0056B4  0E00               	movlw	0
 31648  0056B6  6FD8               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 31649  0056B8                     l21728:
 31650                           
 31651                           ; BSR set to: 0
 31652                           ;lorawan.c: 1821: {;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationPara
      +                          meters.applicationEui.buffer[7 - iCtr];
 31653  0056B8  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31654  0056BA  085E               	sublw	low (_loRa+89)
 31655  0056BC  6ED9               	movwf	fsr2l,c
 31656  0056BE  0E00               	movlw	0
 31657  0056C0  A0D8               	btfss	status,0,c
 31658  0056C2  2AE8               	incf	wreg,f,c
 31659  0056C4  0802               	sublw	high (_loRa+89)
 31660  0056C6  6EDA               	movwf	fsr2h,c
 31661  0056C8  0EB8               	movlw	low _macBuffer
 31662  0056CA  6FD1               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 31663  0056CC  0E06               	movlw	high _macBuffer
 31664  0056CE  6FD2               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 31665  0056D0  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31666  0056D2  27D1               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 31667  0056D4  0E00               	movlw	0
 31668  0056D6  23D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 31669  0056D8  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31670  0056DA  25D1               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 31671  0056DC  6EE9               	movwf	fsr0l,c
 31672  0056DE  0E00               	movlw	0
 31673  0056E0  21D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 31674  0056E2  6EEA               	movwf	fsr0h,c
 31675  0056E4  CFDF FFEF          	movff	indf2,indf0
 31676                           
 31677                           ; BSR set to: 0
 31678  0056E8  2BD8               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 31679                           
 31680                           ; BSR set to: 0
 31681  0056EA  0E07               	movlw	7
 31682  0056EC  65D8               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 31683  0056EE  D7E4               	goto	l21728
 31684                           
 31685                           ; BSR set to: 0
 31686                           ;lorawan.c: 1823: };lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationP
      +                          arameters.applicationEui);
 31687  0056F0  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31688  0056F2  0F08               	addlw	8
 31689  0056F4  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31690                           
 31691                           ; BSR set to: 0
 31692                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 31693  0056F6  0E00               	movlw	0
 31694  0056F8  6FD8               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 31695  0056FA                     l21742:
 31696                           
 31697                           ; BSR set to: 0
 31698                           ;lorawan.c: 1828: {;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationPara
      +                          meters.deviceEui.buffer[7 - iCtr];
 31699  0056FA  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31700  0056FC  0866               	sublw	low (_loRa+97)
 31701  0056FE  6ED9               	movwf	fsr2l,c
 31702  005700  0E00               	movlw	0
 31703  005702  A0D8               	btfss	status,0,c
 31704  005704  2AE8               	incf	wreg,f,c
 31705  005706  0802               	sublw	high (_loRa+97)
 31706  005708  6EDA               	movwf	fsr2h,c
 31707  00570A  0EB8               	movlw	low _macBuffer
 31708  00570C  6FD1               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 31709  00570E  0E06               	movlw	high _macBuffer
 31710  005710  6FD2               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 31711  005712  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31712  005714  27D1               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 31713  005716  0E00               	movlw	0
 31714  005718  23D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 31715  00571A  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31716  00571C  25D1               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 31717  00571E  6EE9               	movwf	fsr0l,c
 31718  005720  0E00               	movlw	0
 31719  005722  21D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 31720  005724  6EEA               	movwf	fsr0h,c
 31721  005726  CFDF FFEF          	movff	indf2,indf0
 31722                           
 31723                           ; BSR set to: 0
 31724  00572A  2BD8               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 31725                           
 31726                           ; BSR set to: 0
 31727  00572C  0E07               	movlw	7
 31728  00572E  65D8               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 31729  005730  D7E4               	goto	l21742
 31730                           
 31731                           ; BSR set to: 0
 31732                           ;lorawan.c: 1830: };lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activation
      +                          Parameters.deviceEui );
 31733  005732  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31734  005734  0F08               	addlw	8
 31735  005736  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31736                           
 31737                           ; BSR set to: 0
 31738                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 31739  005738  0EFF               	movlw	255
 31740  00573A  6FA6               	movwf	(Random@max+1)& (0+255),b
 31741  00573C  69A5               	setf	Random@max& (0+255),b
 31742  00573E  EC19  F051         	call	_Random	;wreg free
 31743  005742  C0A5  F2D7         	movff	?_Random,_loRa+210
 31744  005746  C0A6  F2D8         	movff	?_Random+1,_loRa+211
 31745                           
 31746                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 31747  00574A  0EB8               	movlw	low _macBuffer
 31748  00574C  0100               	movlb	0	; () banked
 31749  00574E  25D9               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31750  005750  6F60               	movwf	memcpy@d1& (0+255),b
 31751  005752  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 31752  005754  0E06               	movlw	high _macBuffer
 31753  005756  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 31754  005758  0ED7               	movlw	low (_loRa+210)
 31755  00575A  6F62               	movwf	memcpy@s1& (0+255),b
 31756  00575C  0E02               	movlw	high (_loRa+210)
 31757  00575E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31758  005760  0E00               	movlw	0
 31759  005762  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31760  005764  0E02               	movlw	2
 31761  005766  6F64               	movwf	memcpy@n& (0+255),b
 31762  005768  ECC3  F047         	call	_memcpy	;wreg free
 31763                           
 31764                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 31765  00576C  0100               	movlb	0	; () banked
 31766  00576E  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31767  005770  0F02               	addlw	2
 31768  005772  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31769                           
 31770                           ; BSR set to: 0
 31771                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 31772  005774  0E47               	movlw	low (_loRa+66)
 31773  005776  6FC8               	movwf	ComputeMic@key& (0+255),b
 31774  005778  0E02               	movlw	high (_loRa+66)
 31775  00577A  6FC9               	movwf	(ComputeMic@key+1)& (0+255),b
 31776  00577C  0EB8               	movlw	low _macBuffer
 31777  00577E  6FCA               	movwf	ComputeMic@buffer& (0+255),b
 31778  005780  0E06               	movlw	high _macBuffer
 31779  005782  6FCB               	movwf	(ComputeMic@buffer+1)& (0+255),b
 31780  005784  C0D9  F0CC         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 31781  005788  EC61  F047         	call	_ComputeMic	;wreg free
 31782  00578C  C0C8  F0D3         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 31783  005790  C0C9  F0D4         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 31784  005794  C0CA  F0D5         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 31785  005798  C0CB  F0D6         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 31786                           
 31787                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 31788  00579C  0EB8               	movlw	low _macBuffer
 31789  00579E  0100               	movlb	0	; () banked
 31790  0057A0  25D9               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31791  0057A2  6F60               	movwf	memcpy@d1& (0+255),b
 31792  0057A4  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 31793  0057A6  0E06               	movlw	high _macBuffer
 31794  0057A8  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 31795  0057AA  0ED3               	movlw	low PrepareJoinRequestFrame@mic
 31796  0057AC  6F62               	movwf	memcpy@s1& (0+255),b
 31797  0057AE  0E00               	movlw	high PrepareJoinRequestFrame@mic
 31798  0057B0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31799  0057B2  0E00               	movlw	0
 31800  0057B4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31801  0057B6  0E04               	movlw	4
 31802  0057B8  6F64               	movwf	memcpy@n& (0+255),b
 31803  0057BA  ECC3  F047         	call	_memcpy	;wreg free
 31804                           
 31805                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 31806  0057BE  0100               	movlb	0	; () banked
 31807  0057C0  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31808  0057C2  0F04               	addlw	4
 31809  0057C4  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31810                           
 31811                           ; BSR set to: 0
 31812                           ;lorawan.c: 1842: return bufferIndex;
 31813  0057C6  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31814                           
 31815                           ; BSR set to: 0
 31816  0057C8  0012               	return		;funcret
 31817  0057CA                     __end_of_PrepareJoinRequestFrame:
 31818                           	opt callstack 0
 31819                           
 31820 ;; *************** function _Random *****************
 31821 ;; Defined at:
 31822 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31823 ;; Parameters:    Size  Location     Type
 31824 ;;  max             2   69[BANK0 ] unsigned int 
 31825 ;; Auto vars:     Size  Location     Type
 31826 ;;		None
 31827 ;; Return value:  Size  Location     Type
 31828 ;;                  2   69[BANK0 ] unsigned int 
 31829 ;; Registers used:
 31830 ;;		wreg, status,2, status,0, cstack
 31831 ;; Tracked objects:
 31832 ;;		On entry : 0/0
 31833 ;;		On exit  : 0/0
 31834 ;;		Unchanged: 0/0
 31835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31839 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31840 ;;Total ram usage:        2 bytes
 31841 ;; Hardware stack levels used:    1
 31842 ;; Hardware stack levels required when called:    9
 31843 ;; This function calls:
 31844 ;;		___lwmod
 31845 ;;		_rand
 31846 ;; This function is called by:
 31847 ;;		_SearchAvailableChannel
 31848 ;;		_PrepareJoinRequestFrame
 31849 ;; This function uses a non-reentrant model
 31850 ;;
 31851                           
 31852                           	psect	text196
 31853  00A232                     __ptext196:
 31854                           	opt callstack 0
 31855  00A232                     _Random:
 31856                           	opt callstack 16
 31857                           
 31858                           ;lorawan.c: 1118: return (rand () % max);
 31859                           
 31860                           ; BSR set to: 0
 31861                           ;incstack = 0
 31862  00A232  EC7F  F048         	call	_rand	;wreg free
 31863  00A236  C09E  F0A0         	movff	?_rand,___lwmod@dividend
 31864  00A23A  C09F  F0A1         	movff	?_rand+1,___lwmod@dividend+1
 31865  00A23E  C0A5  F0A2         	movff	Random@max,___lwmod@divisor
 31866  00A242  C0A6  F0A3         	movff	Random@max+1,___lwmod@divisor+1
 31867  00A246  EC0B  F04C         	call	___lwmod	;wreg free
 31868  00A24A  C0A0  F0A5         	movff	?___lwmod,?_Random
 31869  00A24E  C0A1  F0A6         	movff	?___lwmod+1,?_Random+1
 31870  00A252  0012               	return		;funcret
 31871  00A254                     __end_of_Random:
 31872                           	opt callstack 0
 31873                           
 31874 ;; *************** function _rand *****************
 31875 ;; Defined at:
 31876 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 31877 ;; Parameters:    Size  Location     Type
 31878 ;;		None
 31879 ;; Auto vars:     Size  Location     Type
 31880 ;;		None
 31881 ;; Return value:  Size  Location     Type
 31882 ;;                  2   62[BANK0 ] int 
 31883 ;; Registers used:
 31884 ;;		wreg, status,2, status,0, cstack
 31885 ;; Tracked objects:
 31886 ;;		On entry : 0/0
 31887 ;;		On exit  : 0/0
 31888 ;;		Unchanged: 0/0
 31889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31890 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31893 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31894 ;;Total ram usage:        2 bytes
 31895 ;; Hardware stack levels used:    1
 31896 ;; Hardware stack levels required when called:    8
 31897 ;; This function calls:
 31898 ;;		___lmul
 31899 ;; This function is called by:
 31900 ;;		_Random
 31901 ;; This function uses a non-reentrant model
 31902 ;;
 31903                           
 31904                           	psect	text197
 31905  0090FE                     __ptext197:
 31906                           	opt callstack 0
 31907  0090FE                     _rand:
 31908                           	opt callstack 16
 31909                           
 31910                           ;incstack = 0
 31911  0090FE  C1EF  F092         	movff	_randx,___lmul@multiplier
 31912  009102  C1F0  F093         	movff	_randx+1,___lmul@multiplier+1
 31913  009106  C1F1  F094         	movff	_randx+2,___lmul@multiplier+2
 31914  00910A  C1F2  F095         	movff	_randx+3,___lmul@multiplier+3
 31915  00910E  0E6D               	movlw	109
 31916  009110  0100               	movlb	0	; () banked
 31917  009112  6F96               	movwf	___lmul@multiplicand& (0+255),b
 31918  009114  0E4E               	movlw	78
 31919  009116  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31920  009118  0EC6               	movlw	198
 31921  00911A  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31922  00911C  0E41               	movlw	65
 31923  00911E  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31924  009120  ECAD  F048         	call	___lmul	;wreg free
 31925  009124  C092  F1EF         	movff	?___lmul,_randx
 31926  009128  C093  F1F0         	movff	?___lmul+1,_randx+1
 31927  00912C  C094  F1F1         	movff	?___lmul+2,_randx+2
 31928  009130  C095  F1F2         	movff	?___lmul+3,_randx+3
 31929  009134  0E39               	movlw	57
 31930  009136  0101               	movlb	1	; () banked
 31931  009138  27EF               	addwf	_randx& (0+255),f,b
 31932  00913A  0E30               	movlw	48
 31933  00913C  23F0               	addwfc	(_randx+1)& (0+255),f,b
 31934  00913E  0E00               	movlw	0
 31935  009140  23F1               	addwfc	(_randx+2)& (0+255),f,b
 31936  009142  0E00               	movlw	0
 31937  009144  23F2               	addwfc	(_randx+3)& (0+255),f,b
 31938                           
 31939                           ; BSR set to: 1
 31940  009146  0EFF               	movlw	255
 31941  009148  15F1               	andwf	(_randx+2)& (0+255),w,b
 31942  00914A  0100               	movlb	0	; () banked
 31943  00914C  6F9E               	movwf	?_rand& (0+255),b
 31944  00914E  0E7F               	movlw	127
 31945  009150  0101               	movlb	1	; () banked
 31946  009152  15F2               	andwf	(_randx+3)& (0+255),w,b
 31947  009154  0100               	movlb	0	; () banked
 31948  009156  6F9F               	movwf	(?_rand+1)& (0+255),b
 31949                           
 31950                           ; BSR set to: 0
 31951  009158  0012               	return		;funcret
 31952  00915A                     __end_of_rand:
 31953                           	opt callstack 0
 31954                           
 31955 ;; *************** function ___lwmod *****************
 31956 ;; Defined at:
 31957 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 31958 ;; Parameters:    Size  Location     Type
 31959 ;;  dividend        2   64[BANK0 ] unsigned int 
 31960 ;;  divisor         2   66[BANK0 ] unsigned int 
 31961 ;; Auto vars:     Size  Location     Type
 31962 ;;  counter         1   68[BANK0 ] unsigned char 
 31963 ;; Return value:  Size  Location     Type
 31964 ;;                  2   64[BANK0 ] unsigned int 
 31965 ;; Registers used:
 31966 ;;		wreg, status,2, status,0
 31967 ;; Tracked objects:
 31968 ;;		On entry : 0/0
 31969 ;;		On exit  : 0/0
 31970 ;;		Unchanged: 0/0
 31971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31975 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31976 ;;Total ram usage:        5 bytes
 31977 ;; Hardware stack levels used:    1
 31978 ;; Hardware stack levels required when called:    7
 31979 ;; This function calls:
 31980 ;;		Nothing
 31981 ;; This function is called by:
 31982 ;;		_Random
 31983 ;;		_uint16ToString
 31984 ;;		_timerHandler
 31985 ;; This function uses a non-reentrant model
 31986 ;;
 31987                           
 31988                           	psect	text198
 31989  009816                     __ptext198:
 31990                           	opt callstack 0
 31991  009816                     ___lwmod:
 31992                           	opt callstack 20
 31993                           
 31994                           ; BSR set to: 0
 31995                           ;incstack = 0
 31996  009816  0100               	movlb	0	; () banked
 31997  009818  51A2               	movf	___lwmod@divisor& (0+255),w,b
 31998  00981A  11A3               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 31999  00981C  B4D8               	btfsc	status,2,c
 32000  00981E  D018               	goto	l4012
 32001                           
 32002                           ; BSR set to: 0
 32003  009820  0E01               	movlw	1
 32004  009822  6FA4               	movwf	___lwmod@counter& (0+255),b
 32005  009824  D004               	goto	l18308
 32006  009826                     l18306:
 32007                           
 32008                           ; BSR set to: 0
 32009  009826  90D8               	bcf	status,0,c
 32010  009828  37A2               	rlcf	___lwmod@divisor& (0+255),f,b
 32011  00982A  37A3               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 32012  00982C  2BA4               	incf	___lwmod@counter& (0+255),f,b
 32013  00982E                     l18308:
 32014                           
 32015                           ; BSR set to: 0
 32016  00982E  AFA3               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 32017  009830  D7FA               	goto	l18306
 32018  009832                     u19360:
 32019                           
 32020                           ; BSR set to: 0
 32021  009832  51A2               	movf	___lwmod@divisor& (0+255),w,b
 32022  009834  5DA0               	subwf	___lwmod@dividend& (0+255),w,b
 32023  009836  51A3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 32024  009838  59A1               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 32025  00983A  A0D8               	btfss	status,0,c
 32026  00983C  D004               	goto	l18314
 32027                           
 32028                           ; BSR set to: 0
 32029  00983E  51A2               	movf	___lwmod@divisor& (0+255),w,b
 32030  009840  5FA0               	subwf	___lwmod@dividend& (0+255),f,b
 32031  009842  51A3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 32032  009844  5BA1               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 32033  009846                     l18314:
 32034                           
 32035                           ; BSR set to: 0
 32036  009846  90D8               	bcf	status,0,c
 32037  009848  33A3               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 32038  00984A  33A2               	rrcf	___lwmod@divisor& (0+255),f,b
 32039                           
 32040                           ; BSR set to: 0
 32041  00984C  2FA4               	decfsz	___lwmod@counter& (0+255),f,b
 32042  00984E  D7F1               	goto	u19360
 32043  009850                     l4012:
 32044                           
 32045                           ; BSR set to: 0
 32046  009850  C0A0  F0A0         	movff	___lwmod@dividend,?___lwmod
 32047  009854  C0A1  F0A1         	movff	___lwmod@dividend+1,?___lwmod+1
 32048                           
 32049                           ; BSR set to: 0
 32050  009858  0012               	return		;funcret
 32051  00985A                     __end_of___lwmod:
 32052                           	opt callstack 0
 32053                           
 32054 ;; *************** function _ComputeMic *****************
 32055 ;; Defined at:
 32056 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32057 ;; Parameters:    Size  Location     Type
 32058 ;;  key             2  104[BANK0 ] PTR unsigned char 
 32059 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32060 ;;  buffer          2  106[BANK0 ] PTR unsigned char 
 32061 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32062 ;;  bufferLength    1  108[BANK0 ] unsigned char 
 32063 ;; Auto vars:     Size  Location     Type
 32064 ;;  mic             4  109[BANK0 ] unsigned long 
 32065 ;; Return value:  Size  Location     Type
 32066 ;;                  4  104[BANK0 ] unsigned long 
 32067 ;; Registers used:
 32068 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32069 ;; Tracked objects:
 32070 ;;		On entry : 0/0
 32071 ;;		On exit  : 0/0
 32072 ;;		Unchanged: 0/0
 32073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32074 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32075 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32077 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32078 ;;Total ram usage:        9 bytes
 32079 ;; Hardware stack levels used:    1
 32080 ;; Hardware stack levels required when called:   12
 32081 ;; This function calls:
 32082 ;;		_AESCmac
 32083 ;;		_memcpy
 32084 ;; This function is called by:
 32085 ;;		_LORAWAN_RxDone
 32086 ;;		_PrepareJoinRequestFrame
 32087 ;; This function uses a non-reentrant model
 32088 ;;
 32089                           
 32090                           	psect	text199
 32091  008EC2                     __ptext199:
 32092                           	opt callstack 0
 32093  008EC2                     _ComputeMic:
 32094                           	opt callstack 12
 32095                           
 32096                           ;lorawan.c: 2196: uint32_t mic = 0;
 32097                           
 32098                           ; BSR set to: 0
 32099                           ;incstack = 0
 32100  008EC2  0E00               	movlw	0
 32101  008EC4  0100               	movlb	0	; () banked
 32102  008EC6  6FCD               	movwf	ComputeMic@mic& (0+255),b
 32103  008EC8  0E00               	movlw	0
 32104  008ECA  6FCE               	movwf	(ComputeMic@mic+1)& (0+255),b
 32105  008ECC  0E00               	movlw	0
 32106  008ECE  6FCF               	movwf	(ComputeMic@mic+2)& (0+255),b
 32107  008ED0  0E00               	movlw	0
 32108  008ED2  6FD0               	movwf	(ComputeMic@mic+3)& (0+255),b
 32109                           
 32110                           ; BSR set to: 0
 32111                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 32112  008ED4  C0C8  F0BA         	movff	ComputeMic@key,AESCmac@key
 32113  008ED8  C0C9  F0BB         	movff	ComputeMic@key+1,AESCmac@key+1
 32114  008EDC  0E5F               	movlw	low _aesBuffer
 32115  008EDE  6FBC               	movwf	AESCmac@output& (0+255),b
 32116  008EE0  0E01               	movlw	high _aesBuffer
 32117  008EE2  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 32118  008EE4  C0CA  F0BE         	movff	ComputeMic@buffer,AESCmac@input
 32119  008EE8  C0CB  F0BF         	movff	ComputeMic@buffer+1,AESCmac@input+1
 32120  008EEC  C0CC  F0C0         	movff	ComputeMic@bufferLength,AESCmac@size
 32121  008EF0  ECAD  F00D         	call	_AESCmac	;wreg free
 32122                           
 32123                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 32124  008EF4  0ECD               	movlw	low ComputeMic@mic
 32125  008EF6  0100               	movlb	0	; () banked
 32126  008EF8  6F60               	movwf	memcpy@d1& (0+255),b
 32127  008EFA  0E00               	movlw	high ComputeMic@mic
 32128  008EFC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32129  008EFE  0E5F               	movlw	low _aesBuffer
 32130  008F00  6F62               	movwf	memcpy@s1& (0+255),b
 32131  008F02  0E01               	movlw	high _aesBuffer
 32132  008F04  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32133  008F06  0E00               	movlw	0
 32134  008F08  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32135  008F0A  0E04               	movlw	4
 32136  008F0C  6F64               	movwf	memcpy@n& (0+255),b
 32137  008F0E  ECC3  F047         	call	_memcpy	;wreg free
 32138                           
 32139                           ;lorawan.c: 2202: return mic;
 32140  008F12  C0CD  F0C8         	movff	ComputeMic@mic,?_ComputeMic
 32141  008F16  C0CE  F0C9         	movff	ComputeMic@mic+1,?_ComputeMic+1
 32142  008F1A  C0CF  F0CA         	movff	ComputeMic@mic+2,?_ComputeMic+2
 32143  008F1E  C0D0  F0CB         	movff	ComputeMic@mic+3,?_ComputeMic+3
 32144  008F22  0012               	return		;funcret
 32145  008F24                     __end_of_ComputeMic:
 32146                           	opt callstack 0
 32147                           
 32148 ;; *************** function _AESCmac *****************
 32149 ;; Defined at:
 32150 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32151 ;; Parameters:    Size  Location     Type
 32152 ;;  key             2   90[BANK0 ] PTR unsigned char 
 32153 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32154 ;;  output          2   92[BANK0 ] PTR unsigned char 
 32155 ;;		 -> aesBuffer(16), 
 32156 ;;  input           2   94[BANK0 ] PTR unsigned char 
 32157 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32158 ;;  size            1   96[BANK0 ] unsigned char 
 32159 ;; Auto vars:     Size  Location     Type
 32160 ;;  x              16   80[BANK1 ] unsigned char [16]
 32161 ;;  y              16   64[BANK1 ] unsigned char [16]
 32162 ;;  padded         16   48[BANK1 ] unsigned char [16]
 32163 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 32164 ;;  k1             16   16[BANK1 ] unsigned char [16]
 32165 ;;  k2             16    0[BANK1 ] unsigned char [16]
 32166 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 32167 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 32168 ;;  i               1  101[BANK1 ] unsigned char 
 32169 ;;  j               1  100[BANK1 ] unsigned char 
 32170 ;;  n               1   99[BANK1 ] unsigned char 
 32171 ;;  flag            1   98[BANK1 ] unsigned char 
 32172 ;; Return value:  Size  Location     Type
 32173 ;;                  1    wreg      void 
 32174 ;; Registers used:
 32175 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32176 ;; Tracked objects:
 32177 ;;		On entry : 0/0
 32178 ;;		On exit  : 0/0
 32179 ;;		Unchanged: 0/0
 32180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32181 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32182 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32183 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32184 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32185 ;;Total ram usage:      116 bytes
 32186 ;; Hardware stack levels used:    1
 32187 ;; Hardware stack levels required when called:   11
 32188 ;; This function calls:
 32189 ;;		_AESEncodeLoRa
 32190 ;;		_GenerateSubkey
 32191 ;;		_memcpy
 32192 ;;		_memset
 32193 ;; This function is called by:
 32194 ;;		_LORAWAN_RxDone
 32195 ;;		_AssemblePacket
 32196 ;;		_ComputeMic
 32197 ;; This function uses a non-reentrant model
 32198 ;;
 32199                           
 32200                           	psect	text200
 32201  001B5A                     __ptext200:
 32202                           	opt callstack 0
 32203  001B5A                     _AESCmac:
 32204                           	opt callstack 15
 32205                           
 32206                           ;incstack = 0
 32207  001B5A  0E00               	movlw	0
 32208  001B5C  0101               	movlb	1	; () banked
 32209  001B5E  6FD9               	movwf	AESCmac@i& (0+255),b
 32210  001B60  0E00               	movlw	0
 32211  001B62  6FD8               	movwf	AESCmac@j& (0+255),b
 32212                           
 32213                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 32214  001B64  0E00               	movlw	0
 32215  001B66  6FD6               	movwf	AESCmac@flag& (0+255),b
 32216                           
 32217                           ; BSR set to: 1
 32218                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 32219                           
 32220                           ; BSR set to: 1
 32221  001B68  C0BA  F092         	movff	AESCmac@key,GenerateSubkey@key
 32222  001B6C  C0BB  F093         	movff	AESCmac@key+1,GenerateSubkey@key+1
 32223  001B70  0E84               	movlw	low AESCmac@k1
 32224  001B72  0100               	movlb	0	; () banked
 32225  001B74  6F94               	movwf	GenerateSubkey@k1& (0+255),b
 32226  001B76  0E01               	movlw	high AESCmac@k1
 32227  001B78  6F95               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 32228  001B7A  0E74               	movlw	low AESCmac@k2
 32229  001B7C  6F96               	movwf	GenerateSubkey@k2& (0+255),b
 32230  001B7E  0E01               	movlw	high AESCmac@k2
 32231  001B80  6F97               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 32232  001B82  EC00  F02F         	call	_GenerateSubkey	;wreg free
 32233                           
 32234                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 32235  001B86  0100               	movlb	0	; () banked
 32236  001B88  51C0               	movf	AESCmac@size& (0+255),w,b
 32237  001B8A  6FC1               	movwf	??_AESCmac& (0+255),b
 32238  001B8C  6BC2               	clrf	(??_AESCmac+1)& (0+255),b
 32239  001B8E  0E0F               	movlw	15
 32240  001B90  27C1               	addwf	??_AESCmac& (0+255),f,b
 32241  001B92  0E00               	movlw	0
 32242  001B94  23C2               	addwfc	(??_AESCmac+1)& (0+255),f,b
 32243  001B96  0E04               	movlw	4
 32244  001B98  6FC3               	movwf	(??_AESCmac+2)& (0+255),b
 32245  001B9A                     u19865:
 32246  001B9A  35C2               	rlcf	(??_AESCmac+1)& (0+255),w,b
 32247  001B9C  33C2               	rrcf	(??_AESCmac+1)& (0+255),f,b
 32248  001B9E  33C1               	rrcf	??_AESCmac& (0+255),f,b
 32249  001BA0  2FC3               	decfsz	(??_AESCmac+2)& (0+255),f,b
 32250  001BA2  D7FB               	goto	u19865
 32251  001BA4  51C1               	movf	??_AESCmac& (0+255),w,b
 32252  001BA6  0101               	movlb	1	; () banked
 32253  001BA8  6FD7               	movwf	AESCmac@n& (0+255),b
 32254                           
 32255                           ; BSR set to: 1
 32256                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 32257  001BAA  51D7               	movf	AESCmac@n& (0+255),w,b
 32258  001BAC  A4D8               	btfss	status,2,c
 32259  001BAE  D004               	goto	l18706
 32260                           
 32261                           ; BSR set to: 1
 32262                           ;lorawan_aes_cmac.c: 53: {;lorawan_aes_cmac.c: 54: n = 1;
 32263  001BB0  0E01               	movlw	1
 32264  001BB2  6FD7               	movwf	AESCmac@n& (0+255),b
 32265                           
 32266                           ;lorawan_aes_cmac.c: 55: flag = 0;
 32267  001BB4  0E00               	movlw	0
 32268  001BB6  D00B               	goto	L32
 32269  001BB8                     l18706:
 32270                           
 32271                           ; BSR set to: 1
 32272                           ;lorawan_aes_cmac.c: 57: else;lorawan_aes_cmac.c: 58: {;lorawan_aes_cmac.c: 59: flag = !
      +                          (size % 16);
 32273  001BB8  C0C0  F0C1         	movff	AESCmac@size,??_AESCmac
 32274  001BBC  0E0F               	movlw	15
 32275  001BBE  0100               	movlb	0	; () banked
 32276  001BC0  17C1               	andwf	??_AESCmac& (0+255),f,b
 32277  001BC2  A4D8               	btfss	status,2,c
 32278  001BC4  D002               	goto	u19880
 32279  001BC6  0E01               	movlw	1
 32280  001BC8  D001               	goto	u19890
 32281  001BCA                     u19880:
 32282  001BCA  0E00               	movlw	0
 32283  001BCC                     u19890:
 32284  001BCC  0101               	movlb	1	; () banked
 32285  001BCE                     L32:
 32286  001BCE  6FD6               	movwf	AESCmac@flag& (0+255),b
 32287                           
 32288                           ; BSR set to: 1
 32289                           ;lorawan_aes_cmac.c: 60: };lorawan_aes_cmac.c: 62: if ( flag == 1 )
 32290  001BD0  05D6               	decf	AESCmac@flag& (0+255),w,b
 32291  001BD2  A4D8               	btfss	status,2,c
 32292  001BD4  D045               	goto	l18720
 32293                           
 32294                           ; BSR set to: 1
 32295                           ;lorawan_aes_cmac.c: 63: {;lorawan_aes_cmac.c: 64: j = 0;
 32296  001BD6  0E00               	movlw	0
 32297  001BD8  6FD8               	movwf	AESCmac@j& (0+255),b
 32298                           
 32299                           ; BSR set to: 1
 32300                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 32301  001BDA  51D7               	movf	AESCmac@n& (0+255),w,b
 32302  001BDC  0D10               	mullw	16
 32303  001BDE  50F3               	movf	prodl,w,c
 32304  001BE0  0FF0               	addlw	240
 32305  001BE2  6FD9               	movwf	AESCmac@i& (0+255),b
 32306  001BE4  D020               	goto	l18718
 32307  001BE6                     l18712:
 32308                           
 32309                           ; BSR set to: 0
 32310                           ;lorawan_aes_cmac.c: 66: {;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 32311  001BE6  0E94               	movlw	low AESCmac@mLast
 32312  001BE8  0101               	movlb	1	; () banked
 32313  001BEA  25D8               	addwf	AESCmac@j& (0+255),w,b
 32314  001BEC  6ED9               	movwf	fsr2l,c
 32315  001BEE  6ADA               	clrf	fsr2h,c
 32316  001BF0  0E01               	movlw	high AESCmac@mLast
 32317  001BF2  22DA               	addwfc	fsr2h,f,c
 32318  001BF4  0E84               	movlw	low AESCmac@k1
 32319  001BF6  25D8               	addwf	AESCmac@j& (0+255),w,b
 32320  001BF8  6EE9               	movwf	fsr0l,c
 32321  001BFA  6AEA               	clrf	fsr0h,c
 32322  001BFC  0E01               	movlw	high AESCmac@k1
 32323  001BFE  22EA               	addwfc	fsr0h,f,c
 32324  001C00  50EF               	movf	indf0,w,c
 32325  001C02  0100               	movlb	0	; () banked
 32326  001C04  6FC1               	movwf	??_AESCmac& (0+255),b
 32327  001C06  0101               	movlb	1	; () banked
 32328  001C08  51D9               	movf	AESCmac@i& (0+255),w,b
 32329  001C0A  0100               	movlb	0	; () banked
 32330  001C0C  25BE               	addwf	AESCmac@input& (0+255),w,b
 32331  001C0E  6EE9               	movwf	fsr0l,c
 32332  001C10  0101               	movlb	1	; () banked
 32333  001C12  0E00               	movlw	0
 32334  001C14  0100               	movlb	0	; () banked
 32335  001C16  21BF               	addwfc	(AESCmac@input+1)& (0+255),w,b
 32336  001C18  6EEA               	movwf	fsr0h,c
 32337  001C1A  50EF               	movf	indf0,w,c
 32338  001C1C  19C1               	xorwf	??_AESCmac& (0+255),w,b
 32339  001C1E  6EDF               	movwf	indf2,c
 32340                           
 32341                           ; BSR set to: 0
 32342                           ;lorawan_aes_cmac.c: 68: j++;
 32343  001C20  0101               	movlb	1	; () banked
 32344  001C22  2BD8               	incf	AESCmac@j& (0+255),f,b
 32345                           
 32346                           ; BSR set to: 1
 32347  001C24  2BD9               	incf	AESCmac@i& (0+255),f,b
 32348  001C26                     l18718:
 32349                           
 32350                           ; BSR set to: 1
 32351  001C26  51D7               	movf	AESCmac@n& (0+255),w,b
 32352  001C28  0100               	movlb	0	; () banked
 32353  001C2A  6FC1               	movwf	??_AESCmac& (0+255),b
 32354  001C2C  6BC2               	clrf	(??_AESCmac+1)& (0+255),b
 32355  001C2E  3BC1               	swapf	??_AESCmac& (0+255),f,b
 32356  001C30  3BC2               	swapf	(??_AESCmac+1)& (0+255),f,b
 32357  001C32  0EF0               	movlw	240
 32358  001C34  17C2               	andwf	(??_AESCmac+1)& (0+255),f,b
 32359  001C36  51C1               	movf	??_AESCmac& (0+255),w,b
 32360  001C38  0B0F               	andlw	15
 32361  001C3A  13C2               	iorwf	(??_AESCmac+1)& (0+255),f,b
 32362  001C3C  0EF0               	movlw	240
 32363  001C3E  17C1               	andwf	??_AESCmac& (0+255),f,b
 32364  001C40  0101               	movlb	1	; () banked
 32365  001C42  51D9               	movf	AESCmac@i& (0+255),w,b
 32366  001C44  0100               	movlb	0	; () banked
 32367  001C46  6FC3               	movwf	(??_AESCmac+2)& (0+255),b
 32368  001C48  6BC4               	clrf	(??_AESCmac+3)& (0+255),b
 32369  001C4A  51C1               	movf	??_AESCmac& (0+255),w,b
 32370  001C4C  5DC3               	subwf	(??_AESCmac+2)& (0+255),w,b
 32371  001C4E  51C4               	movf	(??_AESCmac+3)& (0+255),w,b
 32372  001C50  0A80               	xorlw	128
 32373  001C52  6FC5               	movwf	(??_AESCmac+4)& (0+255),b
 32374  001C54  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32375  001C56  0A80               	xorlw	128
 32376  001C58  59C5               	subwfb	(??_AESCmac+4)& (0+255),w,b
 32377  001C5A  B0D8               	btfsc	status,0,c
 32378  001C5C  D069               	goto	u19950
 32379  001C5E  D7C3               	goto	l18712
 32380  001C60                     l18720:
 32381                           
 32382                           ; BSR set to: 1
 32383                           ;lorawan_aes_cmac.c: 71: else;lorawan_aes_cmac.c: 72: {;lorawan_aes_cmac.c: 74: ptr = &i
      +                          nput[size - (size%16)];
 32384  001C60  0100               	movlb	0	; () banked
 32385  001C62  51C0               	movf	AESCmac@size& (0+255),w,b
 32386  001C64  25BE               	addwf	AESCmac@input& (0+255),w,b
 32387  001C66  6FC1               	movwf	??_AESCmac& (0+255),b
 32388  001C68  0E00               	movlw	0
 32389  001C6A  21BF               	addwfc	(AESCmac@input+1)& (0+255),w,b
 32390  001C6C  6FC2               	movwf	(??_AESCmac+1)& (0+255),b
 32391  001C6E  C0C0  F0C3         	movff	AESCmac@size,??_AESCmac+2
 32392  001C72  0E0F               	movlw	15
 32393  001C74  17C3               	andwf	(??_AESCmac+2)& (0+255),f,b
 32394  001C76  51C3               	movf	(??_AESCmac+2)& (0+255),w,b
 32395  001C78  5DC1               	subwf	??_AESCmac& (0+255),w,b
 32396  001C7A  0101               	movlb	1	; () banked
 32397  001C7C  6FD4               	movwf	AESCmac@ptr& (0+255),b
 32398  001C7E  0100               	movlb	0	; () banked
 32399  001C80  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32400  001C82  A0D8               	btfss	status,0,c
 32401  001C84  05C2               	decf	(??_AESCmac+1)& (0+255),w,b
 32402  001C86  0101               	movlb	1	; () banked
 32403  001C88  6FD5               	movwf	(AESCmac@ptr+1)& (0+255),b
 32404                           
 32405                           ; BSR set to: 1
 32406                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 32407  001C8A  0E00               	movlw	0
 32408  001C8C  6FD9               	movwf	AESCmac@i& (0+255),b
 32409  001C8E                     l18728:
 32410                           
 32411                           ; BSR set to: 1
 32412                           ;lorawan_aes_cmac.c: 76: {;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 32413  001C8E  0100               	movlb	0	; () banked
 32414  001C90  51C0               	movf	AESCmac@size& (0+255),w,b
 32415  001C92  0B0F               	andlw	15
 32416  001C94  0101               	movlb	1	; () banked
 32417  001C96  61D9               	cpfslt	AESCmac@i& (0+255),b
 32418  001C98  D00F               	goto	l18732
 32419                           
 32420                           ; BSR set to: 1
 32421                           ;lorawan_aes_cmac.c: 78: {;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 32422  001C9A  51D9               	movf	AESCmac@i& (0+255),w,b
 32423  001C9C  25D4               	addwf	AESCmac@ptr& (0+255),w,b
 32424  001C9E  6ED9               	movwf	fsr2l,c
 32425  001CA0  0E00               	movlw	0
 32426  001CA2  21D5               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 32427  001CA4  6EDA               	movwf	fsr2h,c
 32428  001CA6  0EA4               	movlw	low AESCmac@padded
 32429  001CA8  25D9               	addwf	AESCmac@i& (0+255),w,b
 32430  001CAA  6EE9               	movwf	fsr0l,c
 32431  001CAC  6AEA               	clrf	fsr0h,c
 32432  001CAE  0E01               	movlw	high AESCmac@padded
 32433  001CB0  22EA               	addwfc	fsr0h,f,c
 32434  001CB2  CFDF FFEF          	movff	indf2,indf0
 32435                           
 32436                           ;lorawan_aes_cmac.c: 80: }
 32437  001CB6  D017               	goto	l18738
 32438  001CB8                     l18732:
 32439                           
 32440                           ; BSR set to: 1
 32441                           ;lorawan_aes_cmac.c: 81: else;lorawan_aes_cmac.c: 82: {;lorawan_aes_cmac.c: 83: if ( i =
      +                          = (size%16) )
 32442  001CB8  0100               	movlb	0	; () banked
 32443  001CBA  51C0               	movf	AESCmac@size& (0+255),w,b
 32444  001CBC  0B0F               	andlw	15
 32445  001CBE  0101               	movlb	1	; () banked
 32446  001CC0  19D9               	xorwf	AESCmac@i& (0+255),w,b
 32447  001CC2  A4D8               	btfss	status,2,c
 32448  001CC4  D008               	goto	l18736
 32449                           
 32450                           ; BSR set to: 1
 32451                           ;lorawan_aes_cmac.c: 84: {;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 32452  001CC6  0EA4               	movlw	low AESCmac@padded
 32453  001CC8  25D9               	addwf	AESCmac@i& (0+255),w,b
 32454  001CCA  6ED9               	movwf	fsr2l,c
 32455  001CCC  6ADA               	clrf	fsr2h,c
 32456  001CCE  0E01               	movlw	high AESCmac@padded
 32457  001CD0  22DA               	addwfc	fsr2h,f,c
 32458  001CD2  0E80               	movlw	128
 32459  001CD4  D007               	goto	L33
 32460  001CD6                     l18736:
 32461                           
 32462                           ; BSR set to: 1
 32463                           ;lorawan_aes_cmac.c: 87: else;lorawan_aes_cmac.c: 88: {;lorawan_aes_cmac.c: 89: padded[i
      +                          ] = 0x00;
 32464  001CD6  0EA4               	movlw	low AESCmac@padded
 32465  001CD8  25D9               	addwf	AESCmac@i& (0+255),w,b
 32466  001CDA  6ED9               	movwf	fsr2l,c
 32467  001CDC  6ADA               	clrf	fsr2h,c
 32468  001CDE  0E01               	movlw	high AESCmac@padded
 32469  001CE0  22DA               	addwfc	fsr2h,f,c
 32470  001CE2  0E00               	movlw	0
 32471  001CE4                     L33:
 32472  001CE4  6EDF               	movwf	indf2,c
 32473  001CE6                     l18738:
 32474                           
 32475                           ; BSR set to: 1
 32476  001CE6  2BD9               	incf	AESCmac@i& (0+255),f,b
 32477                           
 32478                           ; BSR set to: 1
 32479  001CE8  0E0F               	movlw	15
 32480  001CEA  65D9               	cpfsgt	AESCmac@i& (0+255),b
 32481  001CEC  D7D0               	goto	l18728
 32482                           
 32483                           ; BSR set to: 1
 32484                           ;lorawan_aes_cmac.c: 90: };lorawan_aes_cmac.c: 91: };lorawan_aes_cmac.c: 92: };lorawan_a
      +                          es_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 32485  001CEE  0E00               	movlw	0
 32486  001CF0  6FD9               	movwf	AESCmac@i& (0+255),b
 32487  001CF2                     l18748:
 32488                           
 32489                           ; BSR set to: 1
 32490                           ;lorawan_aes_cmac.c: 96: {;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 32491  001CF2  0E94               	movlw	low AESCmac@mLast
 32492  001CF4  25D9               	addwf	AESCmac@i& (0+255),w,b
 32493  001CF6  6ED9               	movwf	fsr2l,c
 32494  001CF8  6ADA               	clrf	fsr2h,c
 32495  001CFA  0E01               	movlw	high AESCmac@mLast
 32496  001CFC  22DA               	addwfc	fsr2h,f,c
 32497  001CFE  0E74               	movlw	low AESCmac@k2
 32498  001D00  25D9               	addwf	AESCmac@i& (0+255),w,b
 32499  001D02  6EE9               	movwf	fsr0l,c
 32500  001D04  6AEA               	clrf	fsr0h,c
 32501  001D06  0E01               	movlw	high AESCmac@k2
 32502  001D08  22EA               	addwfc	fsr0h,f,c
 32503  001D0A  50EF               	movf	indf0,w,c
 32504  001D0C  0100               	movlb	0	; () banked
 32505  001D0E  6FC1               	movwf	??_AESCmac& (0+255),b
 32506  001D10  0EA4               	movlw	low AESCmac@padded
 32507  001D12  0101               	movlb	1	; () banked
 32508  001D14  25D9               	addwf	AESCmac@i& (0+255),w,b
 32509  001D16  6EE9               	movwf	fsr0l,c
 32510  001D18  6AEA               	clrf	fsr0h,c
 32511  001D1A  0E01               	movlw	high AESCmac@padded
 32512  001D1C  22EA               	addwfc	fsr0h,f,c
 32513  001D1E  50EF               	movf	indf0,w,c
 32514  001D20  0100               	movlb	0	; () banked
 32515  001D22  19C1               	xorwf	??_AESCmac& (0+255),w,b
 32516  001D24  6EDF               	movwf	indf2,c
 32517                           
 32518                           ; BSR set to: 0
 32519  001D26  0101               	movlb	1	; () banked
 32520  001D28  2BD9               	incf	AESCmac@i& (0+255),f,b
 32521                           
 32522                           ; BSR set to: 1
 32523  001D2A  0E0F               	movlw	15
 32524  001D2C  65D9               	cpfsgt	AESCmac@i& (0+255),b
 32525  001D2E  D7E1               	goto	l18748
 32526  001D30                     u19950:
 32527                           
 32528                           ;lorawan_aes_cmac.c: 98: };lorawan_aes_cmac.c: 99: };lorawan_aes_cmac.c: 101: memset(x, 
      +                          0, sizeof(x));
 32529  001D30  0EC4               	movlw	low AESCmac@x
 32530  001D32  0100               	movlb	0	; () banked
 32531  001D34  6F60               	movwf	memset@p1& (0+255),b
 32532  001D36  0E01               	movlw	high AESCmac@x
 32533  001D38  6F61               	movwf	(memset@p1+1)& (0+255),b
 32534  001D3A  0E00               	movlw	0
 32535  001D3C  6F63               	movwf	(memset@c+1)& (0+255),b
 32536  001D3E  0E00               	movlw	0
 32537  001D40  6F62               	movwf	memset@c& (0+255),b
 32538  001D42  0E00               	movlw	0
 32539  001D44  6F65               	movwf	(memset@n+1)& (0+255),b
 32540  001D46  0E10               	movlw	16
 32541  001D48  6F64               	movwf	memset@n& (0+255),b
 32542  001D4A  EC70  F04F         	call	_memset	;wreg free
 32543                           
 32544                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 32545  001D4E  0E00               	movlw	0
 32546  001D50  0101               	movlb	1	; () banked
 32547  001D52  6FD9               	movwf	AESCmac@i& (0+255),b
 32548  001D54  D056               	goto	l18774
 32549  001D56                     l18758:
 32550                           
 32551                           ; BSR set to: 0
 32552                           ;lorawan_aes_cmac.c: 104: {;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 32553  001D56  0E00               	movlw	0
 32554  001D58  0101               	movlb	1	; () banked
 32555  001D5A  6FD8               	movwf	AESCmac@j& (0+255),b
 32556  001D5C                     l18764:
 32557                           
 32558                           ; BSR set to: 1
 32559                           ;lorawan_aes_cmac.c: 106: {;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 32560  001D5C  0EB4               	movlw	low AESCmac@y
 32561  001D5E  25D8               	addwf	AESCmac@j& (0+255),w,b
 32562  001D60  6ED9               	movwf	fsr2l,c
 32563  001D62  6ADA               	clrf	fsr2h,c
 32564  001D64  0E01               	movlw	high AESCmac@y
 32565  001D66  22DA               	addwfc	fsr2h,f,c
 32566  001D68  51D9               	movf	AESCmac@i& (0+255),w,b
 32567  001D6A  0100               	movlb	0	; () banked
 32568  001D6C  6FC1               	movwf	??_AESCmac& (0+255),b
 32569  001D6E  6BC2               	clrf	(??_AESCmac+1)& (0+255),b
 32570  001D70  3BC1               	swapf	??_AESCmac& (0+255),f,b
 32571  001D72  3BC2               	swapf	(??_AESCmac+1)& (0+255),f,b
 32572  001D74  0EF0               	movlw	240
 32573  001D76  17C2               	andwf	(??_AESCmac+1)& (0+255),f,b
 32574  001D78  51C1               	movf	??_AESCmac& (0+255),w,b
 32575  001D7A  0B0F               	andlw	15
 32576  001D7C  13C2               	iorwf	(??_AESCmac+1)& (0+255),f,b
 32577  001D7E  0EF0               	movlw	240
 32578  001D80  17C1               	andwf	??_AESCmac& (0+255),f,b
 32579  001D82  C0BE  F0C3         	movff	AESCmac@input,??_AESCmac+2
 32580  001D86  C0BF  F0C4         	movff	AESCmac@input+1,??_AESCmac+3
 32581  001D8A  51C1               	movf	??_AESCmac& (0+255),w,b
 32582  001D8C  27C3               	addwf	(??_AESCmac+2)& (0+255),f,b
 32583  001D8E  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32584  001D90  23C4               	addwfc	(??_AESCmac+3)& (0+255),f,b
 32585  001D92  0101               	movlb	1	; () banked
 32586  001D94  51D8               	movf	AESCmac@j& (0+255),w,b
 32587  001D96  0100               	movlb	0	; () banked
 32588  001D98  25C3               	addwf	(??_AESCmac+2)& (0+255),w,b
 32589  001D9A  6EE9               	movwf	fsr0l,c
 32590  001D9C  0101               	movlb	1	; () banked
 32591  001D9E  0E00               	movlw	0
 32592  001DA0  0100               	movlb	0	; () banked
 32593  001DA2  21C4               	addwfc	(??_AESCmac+3)& (0+255),w,b
 32594  001DA4  6EEA               	movwf	fsr0h,c
 32595  001DA6  50EF               	movf	indf0,w,c
 32596  001DA8  6FC5               	movwf	(??_AESCmac+4)& (0+255),b
 32597  001DAA  0EC4               	movlw	low AESCmac@x
 32598  001DAC  0101               	movlb	1	; () banked
 32599  001DAE  25D8               	addwf	AESCmac@j& (0+255),w,b
 32600  001DB0  6EE9               	movwf	fsr0l,c
 32601  001DB2  6AEA               	clrf	fsr0h,c
 32602  001DB4  0E01               	movlw	high AESCmac@x
 32603  001DB6  22EA               	addwfc	fsr0h,f,c
 32604  001DB8  50EF               	movf	indf0,w,c
 32605  001DBA  0100               	movlb	0	; () banked
 32606  001DBC  19C5               	xorwf	(??_AESCmac+4)& (0+255),w,b
 32607  001DBE  6EDF               	movwf	indf2,c
 32608                           
 32609                           ; BSR set to: 0
 32610  001DC0  0101               	movlb	1	; () banked
 32611  001DC2  2BD8               	incf	AESCmac@j& (0+255),f,b
 32612                           
 32613                           ; BSR set to: 1
 32614  001DC4  0E0F               	movlw	15
 32615  001DC6  65D8               	cpfsgt	AESCmac@j& (0+255),b
 32616  001DC8  D7C9               	goto	l18764
 32617                           
 32618                           ; BSR set to: 1
 32619                           ;lorawan_aes_cmac.c: 108: };lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 32620  001DCA  0EC4               	movlw	low AESCmac@x
 32621  001DCC  0100               	movlb	0	; () banked
 32622  001DCE  6F60               	movwf	memcpy@d1& (0+255),b
 32623  001DD0  0E01               	movlw	high AESCmac@x
 32624  001DD2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32625  001DD4  0EB4               	movlw	low AESCmac@y
 32626  001DD6  6F62               	movwf	memcpy@s1& (0+255),b
 32627  001DD8  0E01               	movlw	high AESCmac@y
 32628  001DDA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32629  001DDC  0E00               	movlw	0
 32630  001DDE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32631  001DE0  0E10               	movlw	16
 32632  001DE2  6F64               	movwf	memcpy@n& (0+255),b
 32633  001DE4  ECC3  F047         	call	_memcpy	;wreg free
 32634                           
 32635                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 32636  001DE8  0EC4               	movlw	low AESCmac@x
 32637  001DEA  0100               	movlb	0	; () banked
 32638  001DEC  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 32639  001DEE  0E01               	movlw	high AESCmac@x
 32640  001DF0  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32641  001DF2  C0BA  F080         	movff	AESCmac@key,AESEncodeLoRa@key
 32642  001DF6  C0BB  F081         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 32643  001DFA  ECA4  F04D         	call	_AESEncodeLoRa	;wreg free
 32644  001DFE  0101               	movlb	1	; () banked
 32645  001E00  2BD9               	incf	AESCmac@i& (0+255),f,b
 32646  001E02                     l18774:
 32647                           
 32648                           ; BSR set to: 1
 32649  001E02  0EFF               	movlw	255
 32650  001E04  0100               	movlb	0	; () banked
 32651  001E06  6FC1               	movwf	??_AESCmac& (0+255),b
 32652  001E08  0EFF               	movlw	255
 32653  001E0A  6FC2               	movwf	(??_AESCmac+1)& (0+255),b
 32654  001E0C  0101               	movlb	1	; () banked
 32655  001E0E  51D7               	movf	AESCmac@n& (0+255),w,b
 32656  001E10  0100               	movlb	0	; () banked
 32657  001E12  6FC3               	movwf	(??_AESCmac+2)& (0+255),b
 32658  001E14  6BC4               	clrf	(??_AESCmac+3)& (0+255),b
 32659  001E16  51C1               	movf	??_AESCmac& (0+255),w,b
 32660  001E18  27C3               	addwf	(??_AESCmac+2)& (0+255),f,b
 32661  001E1A  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32662  001E1C  23C4               	addwfc	(??_AESCmac+3)& (0+255),f,b
 32663  001E1E  0101               	movlb	1	; () banked
 32664  001E20  51D9               	movf	AESCmac@i& (0+255),w,b
 32665  001E22  0100               	movlb	0	; () banked
 32666  001E24  6FC5               	movwf	(??_AESCmac+4)& (0+255),b
 32667  001E26  6BC6               	clrf	(??_AESCmac+5)& (0+255),b
 32668  001E28  51C3               	movf	(??_AESCmac+2)& (0+255),w,b
 32669  001E2A  5DC5               	subwf	(??_AESCmac+4)& (0+255),w,b
 32670  001E2C  51C6               	movf	(??_AESCmac+5)& (0+255),w,b
 32671  001E2E  0A80               	xorlw	128
 32672  001E30  6FC7               	movwf	(??_AESCmac+6)& (0+255),b
 32673  001E32  51C4               	movf	(??_AESCmac+3)& (0+255),w,b
 32674  001E34  0A80               	xorlw	128
 32675  001E36  59C7               	subwfb	(??_AESCmac+6)& (0+255),w,b
 32676  001E38  A0D8               	btfss	status,0,c
 32677  001E3A  D78D               	goto	l18758
 32678                           
 32679                           ; BSR set to: 0
 32680                           ;lorawan_aes_cmac.c: 111: };lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 32681  001E3C  0E00               	movlw	0
 32682  001E3E  0101               	movlb	1	; () banked
 32683  001E40  6FD9               	movwf	AESCmac@i& (0+255),b
 32684  001E42                     l18782:
 32685                           
 32686                           ; BSR set to: 1
 32687                           ;lorawan_aes_cmac.c: 114: {;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 32688  001E42  0EB4               	movlw	low AESCmac@y
 32689  001E44  25D9               	addwf	AESCmac@i& (0+255),w,b
 32690  001E46  6ED9               	movwf	fsr2l,c
 32691  001E48  6ADA               	clrf	fsr2h,c
 32692  001E4A  0E01               	movlw	high AESCmac@y
 32693  001E4C  22DA               	addwfc	fsr2h,f,c
 32694  001E4E  0E94               	movlw	low AESCmac@mLast
 32695  001E50  25D9               	addwf	AESCmac@i& (0+255),w,b
 32696  001E52  6EE9               	movwf	fsr0l,c
 32697  001E54  6AEA               	clrf	fsr0h,c
 32698  001E56  0E01               	movlw	high AESCmac@mLast
 32699  001E58  22EA               	addwfc	fsr0h,f,c
 32700  001E5A  50EF               	movf	indf0,w,c
 32701  001E5C  0100               	movlb	0	; () banked
 32702  001E5E  6FC1               	movwf	??_AESCmac& (0+255),b
 32703  001E60  0EC4               	movlw	low AESCmac@x
 32704  001E62  0101               	movlb	1	; () banked
 32705  001E64  25D9               	addwf	AESCmac@i& (0+255),w,b
 32706  001E66  6EE9               	movwf	fsr0l,c
 32707  001E68  6AEA               	clrf	fsr0h,c
 32708  001E6A  0E01               	movlw	high AESCmac@x
 32709  001E6C  22EA               	addwfc	fsr0h,f,c
 32710  001E6E  50EF               	movf	indf0,w,c
 32711  001E70  0100               	movlb	0	; () banked
 32712  001E72  19C1               	xorwf	??_AESCmac& (0+255),w,b
 32713  001E74  6EDF               	movwf	indf2,c
 32714                           
 32715                           ; BSR set to: 0
 32716  001E76  0101               	movlb	1	; () banked
 32717  001E78  2BD9               	incf	AESCmac@i& (0+255),f,b
 32718                           
 32719                           ; BSR set to: 1
 32720  001E7A  0E0F               	movlw	15
 32721  001E7C  65D9               	cpfsgt	AESCmac@i& (0+255),b
 32722  001E7E  D7E1               	goto	l18782
 32723                           
 32724                           ; BSR set to: 1
 32725                           ;lorawan_aes_cmac.c: 116: };lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 32726  001E80  0EB4               	movlw	low AESCmac@y
 32727  001E82  0100               	movlb	0	; () banked
 32728  001E84  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 32729  001E86  0E01               	movlw	high AESCmac@y
 32730  001E88  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32731  001E8A  C0BA  F080         	movff	AESCmac@key,AESEncodeLoRa@key
 32732  001E8E  C0BB  F081         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 32733  001E92  ECA4  F04D         	call	_AESEncodeLoRa	;wreg free
 32734                           
 32735                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 32736  001E96  C0BC  F060         	movff	AESCmac@output,memcpy@d1
 32737  001E9A  C0BD  F061         	movff	AESCmac@output+1,memcpy@d1+1
 32738  001E9E  0EB4               	movlw	low AESCmac@y
 32739  001EA0  0100               	movlb	0	; () banked
 32740  001EA2  6F62               	movwf	memcpy@s1& (0+255),b
 32741  001EA4  0E01               	movlw	high AESCmac@y
 32742  001EA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32743  001EA8  0E00               	movlw	0
 32744  001EAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32745  001EAC  0E10               	movlw	16
 32746  001EAE  6F64               	movwf	memcpy@n& (0+255),b
 32747  001EB0  ECC3  F047         	call	_memcpy	;wreg free
 32748  001EB4  0012               	return		;funcret
 32749  001EB6                     __end_of_AESCmac:
 32750                           	opt callstack 0
 32751                           
 32752 ;; *************** function _GenerateSubkey *****************
 32753 ;; Defined at:
 32754 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32755 ;; Parameters:    Size  Location     Type
 32756 ;;  key             2   50[BANK0 ] PTR unsigned char 
 32757 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32758 ;;  k1              2   52[BANK0 ] PTR unsigned char 
 32759 ;;		 -> AESCmac@k1(16), 
 32760 ;;  k2              2   54[BANK0 ] PTR unsigned char 
 32761 ;;		 -> AESCmac@k2(16), 
 32762 ;; Auto vars:     Size  Location     Type
 32763 ;;  l              16   73[BANK0 ] unsigned char [16]
 32764 ;;  const_Rb       16   57[BANK0 ] unsigned char [16]
 32765 ;;  i               1   89[BANK0 ] unsigned char 
 32766 ;; Return value:  Size  Location     Type
 32767 ;;                  1    wreg      void 
 32768 ;; Registers used:
 32769 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32770 ;; Tracked objects:
 32771 ;;		On entry : 0/0
 32772 ;;		On exit  : 0/0
 32773 ;;		Unchanged: 0/0
 32774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32775 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32776 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32777 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32778 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32779 ;;Total ram usage:       40 bytes
 32780 ;; Hardware stack levels used:    1
 32781 ;; Hardware stack levels required when called:   10
 32782 ;; This function calls:
 32783 ;;		_AESEncodeLoRa
 32784 ;;		_FillSubKey
 32785 ;;		_memset
 32786 ;; This function is called by:
 32787 ;;		_AESCmac
 32788 ;; This function uses a non-reentrant model
 32789 ;;
 32790                           
 32791                           	psect	text201
 32792  005E00                     __ptext201:
 32793                           	opt callstack 0
 32794  005E00                     _GenerateSubkey:
 32795                           	opt callstack 15
 32796                           
 32797                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] =
      +                           {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0
      +                          x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 32798                           
 32799                           ;incstack = 0
 32800  005E00  EE23  F0D0         	lfsr	2,GenerateSubkey@F5972
 32801  005E04  EE00  F099         	lfsr	0,GenerateSubkey@const_Rb
 32802  005E08  0E0F               	movlw	15
 32803  005E0A                     u19381:
 32804  005E0A  CFDB FFEB          	movff	plusw2,plusw0
 32805  005E0E  06E8               	decf	wreg,f,c
 32806  005E10  E2FC               	bc	u19381
 32807                           
 32808                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 32809  005E12  0EA9               	movlw	low GenerateSubkey@l
 32810  005E14  0100               	movlb	0	; () banked
 32811  005E16  6F60               	movwf	memset@p1& (0+255),b
 32812  005E18  0E00               	movlw	high GenerateSubkey@l
 32813  005E1A  6F61               	movwf	(memset@p1+1)& (0+255),b
 32814  005E1C  0E00               	movlw	0
 32815  005E1E  6F63               	movwf	(memset@c+1)& (0+255),b
 32816  005E20  0E00               	movlw	0
 32817  005E22  6F62               	movwf	memset@c& (0+255),b
 32818  005E24  0E00               	movlw	0
 32819  005E26  6F65               	movwf	(memset@n+1)& (0+255),b
 32820  005E28  0E10               	movlw	16
 32821  005E2A  6F64               	movwf	memset@n& (0+255),b
 32822  005E2C  EC70  F04F         	call	_memset	;wreg free
 32823                           
 32824                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 32825  005E30  0EA9               	movlw	low GenerateSubkey@l
 32826  005E32  0100               	movlb	0	; () banked
 32827  005E34  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 32828  005E36  0E00               	movlw	high GenerateSubkey@l
 32829  005E38  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32830  005E3A  C092  F080         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 32831  005E3E  C093  F081         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 32832  005E42  ECA4  F04D         	call	_AESEncodeLoRa	;wreg free
 32833                           
 32834                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 32835  005E46  0100               	movlb	0	; () banked
 32836  005E48  BFA9               	btfsc	GenerateSubkey@l& (0+255),7,b
 32837  005E4A  D00D               	goto	l18330
 32838                           
 32839                           ; BSR set to: 0
 32840                           ;lorawan_aes_cmac.c: 138: {;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 32841  005E4C  0EA9               	movlw	low GenerateSubkey@l
 32842  005E4E  6F60               	movwf	FillSubKey@source& (0+255),b
 32843  005E50  0E00               	movlw	high GenerateSubkey@l
 32844  005E52  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 32845  005E54  C094  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 32846  005E58  C095  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 32847  005E5C  0E10               	movlw	16
 32848  005E5E  6F64               	movwf	FillSubKey@size& (0+255),b
 32849  005E60  ECAC  F049         	call	_FillSubKey	;wreg free
 32850                           
 32851                           ;lorawan_aes_cmac.c: 140: }
 32852  005E64  D023               	goto	u19400
 32853  005E66                     l18330:
 32854                           
 32855                           ; BSR set to: 0
 32856                           ;lorawan_aes_cmac.c: 141: else;lorawan_aes_cmac.c: 142: {;lorawan_aes_cmac.c: 143: FillS
      +                          ubKey( l, k1, (sizeof(l) ) );
 32857  005E66  0EA9               	movlw	low GenerateSubkey@l
 32858  005E68  6F60               	movwf	FillSubKey@source& (0+255),b
 32859  005E6A  0E00               	movlw	high GenerateSubkey@l
 32860  005E6C  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 32861  005E6E  C094  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 32862  005E72  C095  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 32863  005E76  0E10               	movlw	16
 32864  005E78  6F64               	movwf	FillSubKey@size& (0+255),b
 32865  005E7A  ECAC  F049         	call	_FillSubKey	;wreg free
 32866                           
 32867                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 32868  005E7E  0E00               	movlw	0
 32869  005E80  0100               	movlb	0	; () banked
 32870  005E82  6FB9               	movwf	GenerateSubkey@i& (0+255),b
 32871  005E84                     l18338:
 32872                           
 32873                           ; BSR set to: 0
 32874                           ;lorawan_aes_cmac.c: 146: {;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 32875  005E84  0E99               	movlw	low GenerateSubkey@const_Rb
 32876  005E86  25B9               	addwf	GenerateSubkey@i& (0+255),w,b
 32877  005E88  6ED9               	movwf	fsr2l,c
 32878  005E8A  6ADA               	clrf	fsr2h,c
 32879  005E8C  0E00               	movlw	high GenerateSubkey@const_Rb
 32880  005E8E  22DA               	addwfc	fsr2h,f,c
 32881  005E90  50DF               	movf	indf2,w,c
 32882  005E92  6F98               	movwf	??_GenerateSubkey& (0+255),b
 32883  005E94  51B9               	movf	GenerateSubkey@i& (0+255),w,b
 32884  005E96  2594               	addwf	GenerateSubkey@k1& (0+255),w,b
 32885  005E98  6ED9               	movwf	fsr2l,c
 32886  005E9A  0E00               	movlw	0
 32887  005E9C  2195               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 32888  005E9E  6EDA               	movwf	fsr2h,c
 32889  005EA0  5198               	movf	??_GenerateSubkey& (0+255),w,b
 32890  005EA2  1ADF               	xorwf	indf2,f,c
 32891                           
 32892                           ; BSR set to: 0
 32893  005EA4  2BB9               	incf	GenerateSubkey@i& (0+255),f,b
 32894                           
 32895                           ; BSR set to: 0
 32896  005EA6  0E0F               	movlw	15
 32897  005EA8  65B9               	cpfsgt	GenerateSubkey@i& (0+255),b
 32898  005EAA  D7EC               	goto	l18338
 32899  005EAC                     u19400:
 32900                           
 32901                           ;lorawan_aes_cmac.c: 148: };lorawan_aes_cmac.c: 149: };lorawan_aes_cmac.c: 152: if ( (k1
      +                          [0] & 0x80) == 0x00 )
 32902  005EAC  C094  FFD9         	movff	GenerateSubkey@k1,fsr2l
 32903  005EB0  C095  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 32904  005EB4  0100               	movlb	0	; () banked
 32905  005EB6  BEDF               	btfsc	indf2,7,c
 32906  005EB8  D00D               	goto	l18348
 32907                           
 32908                           ; BSR set to: 0
 32909                           ;lorawan_aes_cmac.c: 153: {;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 32910  005EBA  C094  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 32911  005EBE  C095  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 32912  005EC2  C096  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 32913  005EC6  C097  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 32914  005ECA  0E10               	movlw	16
 32915  005ECC  6F64               	movwf	FillSubKey@size& (0+255),b
 32916  005ECE  ECAC  F049         	call	_FillSubKey	;wreg free
 32917                           
 32918                           ;lorawan_aes_cmac.c: 155: }
 32919  005ED2  0012               	return	
 32920  005ED4                     l18348:
 32921                           
 32922                           ; BSR set to: 0
 32923                           ;lorawan_aes_cmac.c: 156: else;lorawan_aes_cmac.c: 157: {;lorawan_aes_cmac.c: 158: FillS
      +                          ubKey( k1, k2, (sizeof(l) ) );
 32924  005ED4  C094  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 32925  005ED8  C095  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 32926  005EDC  C096  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 32927  005EE0  C097  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 32928  005EE4  0E10               	movlw	16
 32929  005EE6  6F64               	movwf	FillSubKey@size& (0+255),b
 32930  005EE8  ECAC  F049         	call	_FillSubKey	;wreg free
 32931                           
 32932                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 32933  005EEC  0E00               	movlw	0
 32934  005EEE  0100               	movlb	0	; () banked
 32935  005EF0  6FB9               	movwf	GenerateSubkey@i& (0+255),b
 32936  005EF2                     l18356:
 32937                           
 32938                           ; BSR set to: 0
 32939                           ;lorawan_aes_cmac.c: 161: {;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 32940  005EF2  51B9               	movf	GenerateSubkey@i& (0+255),w,b
 32941  005EF4  2596               	addwf	GenerateSubkey@k2& (0+255),w,b
 32942  005EF6  6ED9               	movwf	fsr2l,c
 32943  005EF8  0E00               	movlw	0
 32944  005EFA  2197               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 32945  005EFC  6EDA               	movwf	fsr2h,c
 32946  005EFE  0E99               	movlw	low GenerateSubkey@const_Rb
 32947  005F00  25B9               	addwf	GenerateSubkey@i& (0+255),w,b
 32948  005F02  6EE9               	movwf	fsr0l,c
 32949  005F04  6AEA               	clrf	fsr0h,c
 32950  005F06  0E00               	movlw	high GenerateSubkey@const_Rb
 32951  005F08  22EA               	addwfc	fsr0h,f,c
 32952  005F0A  50EF               	movf	indf0,w,c
 32953  005F0C  6F98               	movwf	??_GenerateSubkey& (0+255),b
 32954  005F0E  51B9               	movf	GenerateSubkey@i& (0+255),w,b
 32955  005F10  2596               	addwf	GenerateSubkey@k2& (0+255),w,b
 32956  005F12  6EE9               	movwf	fsr0l,c
 32957  005F14  0E00               	movlw	0
 32958  005F16  2197               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 32959  005F18  6EEA               	movwf	fsr0h,c
 32960  005F1A  50EF               	movf	indf0,w,c
 32961  005F1C  1998               	xorwf	??_GenerateSubkey& (0+255),w,b
 32962  005F1E  6EDF               	movwf	indf2,c
 32963                           
 32964                           ; BSR set to: 0
 32965  005F20  2BB9               	incf	GenerateSubkey@i& (0+255),f,b
 32966                           
 32967                           ; BSR set to: 0
 32968  005F22  0E0F               	movlw	15
 32969  005F24  65B9               	cpfsgt	GenerateSubkey@i& (0+255),b
 32970  005F26  D7E5               	goto	l18356
 32971  005F28  0012               	return	
 32972  005F2A                     __end_of_GenerateSubkey:
 32973                           	opt callstack 0
 32974                           
 32975 ;; *************** function _FillSubKey *****************
 32976 ;; Defined at:
 32977 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32978 ;; Parameters:    Size  Location     Type
 32979 ;;  source          2    0[BANK0 ] PTR unsigned char 
 32980 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 32981 ;;  key             2    2[BANK0 ] PTR unsigned char 
 32982 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 32983 ;;  size            1    4[BANK0 ] unsigned char 
 32984 ;; Auto vars:     Size  Location     Type
 32985 ;;  i               1    7[BANK0 ] unsigned char 
 32986 ;;  carry           1    6[BANK0 ] unsigned char 
 32987 ;; Return value:  Size  Location     Type
 32988 ;;                  1    wreg      void 
 32989 ;; Registers used:
 32990 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 32991 ;; Tracked objects:
 32992 ;;		On entry : 0/0
 32993 ;;		On exit  : 0/0
 32994 ;;		Unchanged: 0/0
 32995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32996 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32997 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32998 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32999 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33000 ;;Total ram usage:        8 bytes
 33001 ;; Hardware stack levels used:    1
 33002 ;; Hardware stack levels required when called:    7
 33003 ;; This function calls:
 33004 ;;		Nothing
 33005 ;; This function is called by:
 33006 ;;		_GenerateSubkey
 33007 ;; This function uses a non-reentrant model
 33008 ;;
 33009                           
 33010                           	psect	text202
 33011  009358                     __ptext202:
 33012                           	opt callstack 0
 33013  009358                     _FillSubKey:
 33014                           	opt callstack 17
 33015                           
 33016                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 33017                           
 33018                           ;incstack = 0
 33019  009358  0E00               	movlw	0
 33020  00935A  0100               	movlb	0	; () banked
 33021  00935C  6F66               	movwf	FillSubKey@carry& (0+255),b
 33022                           
 33023                           ; BSR set to: 0
 33024                           ;lorawan_aes_cmac.c: 172: i=size;
 33025  00935E  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 33026                           
 33027                           ;lorawan_aes_cmac.c: 174: while(i--)
 33028  009362  D01E               	goto	l18038
 33029  009364                     l18034:
 33030                           
 33031                           ; BSR set to: 0
 33032                           ;lorawan_aes_cmac.c: 175: {;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry
      +                          ;
 33033  009364  5167               	movf	FillSubKey@i& (0+255),w,b
 33034  009366  2562               	addwf	FillSubKey@key& (0+255),w,b
 33035  009368  6ED9               	movwf	fsr2l,c
 33036  00936A  0E00               	movlw	0
 33037  00936C  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 33038  00936E  6EDA               	movwf	fsr2h,c
 33039  009370  5167               	movf	FillSubKey@i& (0+255),w,b
 33040  009372  2560               	addwf	FillSubKey@source& (0+255),w,b
 33041  009374  6EE9               	movwf	fsr0l,c
 33042  009376  0E00               	movlw	0
 33043  009378  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 33044  00937A  6EEA               	movwf	fsr0h,c
 33045  00937C  50EF               	movf	indf0,w,c
 33046  00937E  6F65               	movwf	??_FillSubKey& (0+255),b
 33047  009380  90D8               	bcf	status,0,c
 33048  009382  3565               	rlcf	??_FillSubKey& (0+255),w,b
 33049  009384  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 33050  009386  6EDF               	movwf	indf2,c
 33051                           
 33052                           ; BSR set to: 0
 33053                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 33054  009388  5167               	movf	FillSubKey@i& (0+255),w,b
 33055  00938A  2560               	addwf	FillSubKey@source& (0+255),w,b
 33056  00938C  6ED9               	movwf	fsr2l,c
 33057  00938E  0E00               	movlw	0
 33058  009390  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 33059  009392  6EDA               	movwf	fsr2h,c
 33060  009394  AEDF               	btfss	indf2,7,c
 33061  009396  D002               	goto	u18890
 33062  009398  0E01               	movlw	1
 33063  00939A  D001               	goto	u18900
 33064  00939C                     u18890:
 33065  00939C  0E00               	movlw	0
 33066  00939E                     u18900:
 33067  00939E  6F66               	movwf	FillSubKey@carry& (0+255),b
 33068  0093A0                     l18038:
 33069                           
 33070                           ; BSR set to: 0
 33071  0093A0  0767               	decf	FillSubKey@i& (0+255),f,b
 33072  0093A2  2967               	incf	FillSubKey@i& (0+255),w,b
 33073  0093A4  B4D8               	btfsc	status,2,c
 33074  0093A6  0012               	return	
 33075  0093A8  D7DD               	goto	l18034
 33076  0093AA                     __end_of_FillSubKey:
 33077                           	opt callstack 0
 33078                           
 33079 ;; *************** function _AESEncodeLoRa *****************
 33080 ;; Defined at:
 33081 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 33082 ;; Parameters:    Size  Location     Type
 33083 ;;  block           2   30[BANK0 ] PTR unsigned char 
 33084 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 33085 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 33086 ;;  key             2   32[BANK0 ] PTR unsigned char 
 33087 ;;		 -> loRa.activationParameters(105), loRa(245), 
 33088 ;; Auto vars:     Size  Location     Type
 33089 ;;  useKey         16   34[BANK0 ] unsigned char [16]
 33090 ;; Return value:  Size  Location     Type
 33091 ;;                  1    wreg      void 
 33092 ;; Registers used:
 33093 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33094 ;; Tracked objects:
 33095 ;;		On entry : 0/0
 33096 ;;		On exit  : 0/0
 33097 ;;		Unchanged: 0/0
 33098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33099 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33100 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33102 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33103 ;;Total ram usage:       20 bytes
 33104 ;; Hardware stack levels used:    1
 33105 ;; Hardware stack levels required when called:    9
 33106 ;; This function calls:
 33107 ;;		_AESEncode
 33108 ;;		_memcpy
 33109 ;; This function is called by:
 33110 ;;		_AESCmac
 33111 ;;		_GenerateSubkey
 33112 ;;		_LORAWAN_RxDone
 33113 ;;		_ComputeSessionKeys
 33114 ;;		_EncryptFRMPayload
 33115 ;; This function uses a non-reentrant model
 33116 ;;
 33117                           
 33118                           	psect	text203
 33119  009B48                     __ptext203:
 33120                           	opt callstack 0
 33121  009B48                     _AESEncodeLoRa:
 33122                           	opt callstack 16
 33123                           
 33124                           ;lorawan_aes.c: 36: uint8_t useKey[16];;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(us
      +                          eKey));
 33125                           
 33126                           ; BSR set to: 0
 33127                           ;incstack = 0
 33128  009B48  0E82               	movlw	low AESEncodeLoRa@useKey
 33129  009B4A  0100               	movlb	0	; () banked
 33130  009B4C  6F60               	movwf	memcpy@d1& (0+255),b
 33131  009B4E  0E00               	movlw	high AESEncodeLoRa@useKey
 33132  009B50  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 33133  009B52  C080  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 33134  009B56  C081  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 33135  009B5A  0E00               	movlw	0
 33136  009B5C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 33137  009B5E  0E10               	movlw	16
 33138  009B60  6F64               	movwf	memcpy@n& (0+255),b
 33139  009B62  ECC3  F047         	call	_memcpy	;wreg free
 33140                           
 33141                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 33142  009B66  C07E  F067         	movff	AESEncodeLoRa@block,AESEncode@block
 33143  009B6A  C07F  F068         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 33144  009B6E  0E82               	movlw	low AESEncodeLoRa@useKey
 33145  009B70  0100               	movlb	0	; () banked
 33146  009B72  6F69               	movwf	AESEncode@key& (0+255),b
 33147  009B74  0E00               	movlw	high AESEncodeLoRa@useKey
 33148  009B76  6F6A               	movwf	(AESEncode@key+1)& (0+255),b
 33149  009B78  EC57  F01A         	call	_AESEncode	;wreg free
 33150  009B7C  0012               	return		;funcret
 33151  009B7E                     __end_of_AESEncodeLoRa:
 33152                           	opt callstack 0
 33153                           
 33154 ;; *************** function _AESEncode *****************
 33155 ;; Defined at:
 33156 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 33157 ;; Parameters:    Size  Location     Type
 33158 ;;  block           2    7[BANK0 ] PTR unsigned char 
 33159 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 33160 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 33161 ;;  key             2    9[BANK0 ] PTR unsigned char 
 33162 ;;		 -> AESEncodeLoRa@useKey(16), 
 33163 ;; Auto vars:     Size  Location     Type
 33164 ;;  aux3            1   28[BANK0 ] unsigned char 
 33165 ;;  aux1            1   27[BANK0 ] unsigned char 
 33166 ;;  aux2            1   26[BANK0 ] unsigned char 
 33167 ;;  aux             1   25[BANK0 ] unsigned char 
 33168 ;;  i               1   29[BANK0 ] unsigned char 
 33169 ;;  temp            1    0        unsigned char 
 33170 ;; Return value:  Size  Location     Type
 33171 ;;                  1    wreg      void 
 33172 ;; Registers used:
 33173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33174 ;; Tracked objects:
 33175 ;;		On entry : 0/0
 33176 ;;		On exit  : 0/0
 33177 ;;		Unchanged: 0/0
 33178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33179 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33180 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33181 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33182 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33183 ;;Total ram usage:       23 bytes
 33184 ;; Hardware stack levels used:    1
 33185 ;; Hardware stack levels required when called:    8
 33186 ;; This function calls:
 33187 ;;		_EncKeySchedule
 33188 ;;		_EncodeShiftRow
 33189 ;; This function is called by:
 33190 ;;		_AESEncodeLoRa
 33191 ;; This function uses a non-reentrant model
 33192 ;;
 33193                           
 33194                           	psect	text204
 33195  0034AE                     __ptext204:
 33196                           	opt callstack 0
 33197  0034AE                     _AESEncode:
 33198                           	opt callstack 16
 33199                           
 33200                           ;AES.c: 250: unsigned char i;;AES.c: 251: unsigned char temp;;AES.c: 254: _roundCounter 
      +                          = 10;
 33201                           
 33202                           ;incstack = 0
 33203  0034AE  0E0A               	movlw	10
 33204  0034B0  6E43               	movwf	__roundCounter,c
 33205                           
 33206                           ;AES.c: 256: _rcon = 0x01;
 33207  0034B2  0E01               	movlw	1
 33208  0034B4  6E42               	movwf	__rcon,c
 33209                           
 33210                           ;AES.c: 259: for(i=0;i<16;i++)
 33211  0034B6  0E00               	movlw	0
 33212  0034B8  0100               	movlb	0	; () banked
 33213  0034BA  6F7D               	movwf	AESEncode@i& (0+255),b
 33214  0034BC                     l17872:
 33215                           
 33216                           ; BSR set to: 0
 33217                           ;AES.c: 260: {;AES.c: 261: block[i] ^= key[i];
 33218  0034BC  517D               	movf	AESEncode@i& (0+255),w,b
 33219  0034BE  2569               	addwf	AESEncode@key& (0+255),w,b
 33220  0034C0  6ED9               	movwf	fsr2l,c
 33221  0034C2  0E00               	movlw	0
 33222  0034C4  216A               	addwfc	(AESEncode@key+1)& (0+255),w,b
 33223  0034C6  6EDA               	movwf	fsr2h,c
 33224  0034C8  50DF               	movf	indf2,w,c
 33225  0034CA  6F6B               	movwf	??_AESEncode& (0+255),b
 33226  0034CC  517D               	movf	AESEncode@i& (0+255),w,b
 33227  0034CE  2567               	addwf	AESEncode@block& (0+255),w,b
 33228  0034D0  6ED9               	movwf	fsr2l,c
 33229  0034D2  0E00               	movlw	0
 33230  0034D4  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33231  0034D6  6EDA               	movwf	fsr2h,c
 33232  0034D8  516B               	movf	??_AESEncode& (0+255),w,b
 33233  0034DA  1ADF               	xorwf	indf2,f,c
 33234                           
 33235                           ; BSR set to: 0
 33236  0034DC  2B7D               	incf	AESEncode@i& (0+255),f,b
 33237                           
 33238                           ; BSR set to: 0
 33239  0034DE  0E0F               	movlw	15
 33240  0034E0  657D               	cpfsgt	AESEncode@i& (0+255),b
 33241  0034E2  D7EC               	goto	l17872
 33242  0034E4                     u18710:
 33243                           
 33244                           ; BSR set to: 0
 33245                           ;AES.c: 265: {;AES.c: 268: for(i=0;i<16;i++)
 33246  0034E4  0E00               	movlw	0
 33247  0034E6  6F7D               	movwf	AESEncode@i& (0+255),b
 33248  0034E8                     l17884:
 33249                           
 33250                           ; BSR set to: 0
 33251                           ;AES.c: 269: {;AES.c: 270: block[i]=STable[block[i]];
 33252  0034E8  517D               	movf	AESEncode@i& (0+255),w,b
 33253  0034EA  2567               	addwf	AESEncode@block& (0+255),w,b
 33254  0034EC  6ED9               	movwf	fsr2l,c
 33255  0034EE  0E00               	movlw	0
 33256  0034F0  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33257  0034F2  6EDA               	movwf	fsr2h,c
 33258  0034F4  50DF               	movf	indf2,w,c
 33259  0034F6  6F6B               	movwf	??_AESEncode& (0+255),b
 33260  0034F8  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33261  0034FA  0E07               	movlw	low _STable
 33262  0034FC  256B               	addwf	??_AESEncode& (0+255),w,b
 33263  0034FE  6EF6               	movwf	tblptrl,c
 33264  003500  0EFE               	movlw	high _STable
 33265  003502  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33266  003504  6EF7               	movwf	tblptrh,c
 33267  003506                     	if	1	;There are 3 active tblptr bytes
 33268  003506  6AF8               	clrf	tblptru,c
 33269  003508  0E00               	movlw	low (__mediumconst shr (0+16))
 33270  00350A  22F8               	addwfc	tblptru,f,c
 33271  00350C                     	endif
 33272  00350C  517D               	movf	AESEncode@i& (0+255),w,b
 33273  00350E  2567               	addwf	AESEncode@block& (0+255),w,b
 33274  003510  6ED9               	movwf	fsr2l,c
 33275  003512  0E00               	movlw	0
 33276  003514  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33277  003516  6EDA               	movwf	fsr2h,c
 33278  003518  0008               	tblrd		*
 33279  00351A  CFF5 FFDF          	movff	tablat,indf2
 33280                           
 33281                           ; BSR set to: 0
 33282  00351E  2B7D               	incf	AESEncode@i& (0+255),f,b
 33283                           
 33284                           ; BSR set to: 0
 33285  003520  0E0F               	movlw	15
 33286  003522  657D               	cpfsgt	AESEncode@i& (0+255),b
 33287  003524  D7E1               	goto	l17884
 33288                           
 33289                           ; BSR set to: 0
 33290                           ;AES.c: 271: };AES.c: 274: EncodeShiftRow(block);
 33291  003526  C067  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 33292  00352A  C068  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 33293  00352E  EC85  F028         	call	_EncodeShiftRow	;wreg free
 33294                           
 33295                           ;AES.c: 277: if(_roundCounter != 1)
 33296  003532  0443               	decf	__roundCounter,w,c
 33297  003534  B4D8               	btfsc	status,2,c
 33298  003536  D119               	goto	u18770
 33299                           
 33300                           ;AES.c: 278: {;AES.c: 279: unsigned char aux,aux1,aux2,aux3;;AES.c: 281: for(i=0;i<16;i+
      +                          =4)
 33301  003538  0E00               	movlw	0
 33302  00353A  0100               	movlb	0	; () banked
 33303  00353C  6F7D               	movwf	AESEncode@i& (0+255),b
 33304  00353E                     l17900:
 33305                           
 33306                           ; BSR set to: 0
 33307                           ;AES.c: 282: {;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 33308  00353E  517D               	movf	AESEncode@i& (0+255),w,b
 33309  003540  2567               	addwf	AESEncode@block& (0+255),w,b
 33310  003542  6F6B               	movwf	??_AESEncode& (0+255),b
 33311  003544  0E00               	movlw	0
 33312  003546  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33313  003548  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33314  00354A  0E01               	movlw	1
 33315  00354C  256B               	addwf	??_AESEncode& (0+255),w,b
 33316  00354E  6ED9               	movwf	fsr2l,c
 33317  003550  0E00               	movlw	0
 33318  003552  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33319  003554  6EDA               	movwf	fsr2h,c
 33320  003556  50DF               	movf	indf2,w,c
 33321  003558  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33322  00355A  517D               	movf	AESEncode@i& (0+255),w,b
 33323  00355C  2567               	addwf	AESEncode@block& (0+255),w,b
 33324  00355E  6ED9               	movwf	fsr2l,c
 33325  003560  0E00               	movlw	0
 33326  003562  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33327  003564  6EDA               	movwf	fsr2h,c
 33328  003566  50DF               	movf	indf2,w,c
 33329  003568  196D               	xorwf	(??_AESEncode+2)& (0+255),w,b
 33330  00356A  6F7B               	movwf	AESEncode@aux1& (0+255),b
 33331                           
 33332                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 33333  00356C  517D               	movf	AESEncode@i& (0+255),w,b
 33334  00356E  2567               	addwf	AESEncode@block& (0+255),w,b
 33335  003570  6F6B               	movwf	??_AESEncode& (0+255),b
 33336  003572  0E00               	movlw	0
 33337  003574  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33338  003576  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33339  003578  0E03               	movlw	3
 33340  00357A  256B               	addwf	??_AESEncode& (0+255),w,b
 33341  00357C  6ED9               	movwf	fsr2l,c
 33342  00357E  0E00               	movlw	0
 33343  003580  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33344  003582  6EDA               	movwf	fsr2h,c
 33345  003584  50DF               	movf	indf2,w,c
 33346  003586  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33347  003588  517D               	movf	AESEncode@i& (0+255),w,b
 33348  00358A  2567               	addwf	AESEncode@block& (0+255),w,b
 33349  00358C  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33350  00358E  0E00               	movlw	0
 33351  003590  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33352  003592  6F6F               	movwf	(??_AESEncode+4)& (0+255),b
 33353  003594  0E02               	movlw	2
 33354  003596  256E               	addwf	(??_AESEncode+3)& (0+255),w,b
 33355  003598  6ED9               	movwf	fsr2l,c
 33356  00359A  0E00               	movlw	0
 33357  00359C  216F               	addwfc	(??_AESEncode+4)& (0+255),w,b
 33358  00359E  6EDA               	movwf	fsr2h,c
 33359  0035A0  50DF               	movf	indf2,w,c
 33360  0035A2  196D               	xorwf	(??_AESEncode+2)& (0+255),w,b
 33361  0035A4  6F7C               	movwf	AESEncode@aux3& (0+255),b
 33362                           
 33363                           ; BSR set to: 0
 33364                           ;AES.c: 285: aux = aux1 ^ aux3;
 33365  0035A6  517B               	movf	AESEncode@aux1& (0+255),w,b
 33366  0035A8  197C               	xorwf	AESEncode@aux3& (0+255),w,b
 33367  0035AA  6F79               	movwf	AESEncode@aux& (0+255),b
 33368                           
 33369                           ; BSR set to: 0
 33370                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 33371  0035AC  517D               	movf	AESEncode@i& (0+255),w,b
 33372  0035AE  2567               	addwf	AESEncode@block& (0+255),w,b
 33373  0035B0  6F6B               	movwf	??_AESEncode& (0+255),b
 33374  0035B2  0E00               	movlw	0
 33375  0035B4  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33376  0035B6  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33377  0035B8  0E01               	movlw	1
 33378  0035BA  256B               	addwf	??_AESEncode& (0+255),w,b
 33379  0035BC  6ED9               	movwf	fsr2l,c
 33380  0035BE  0E00               	movlw	0
 33381  0035C0  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33382  0035C2  6EDA               	movwf	fsr2h,c
 33383  0035C4  50DF               	movf	indf2,w,c
 33384  0035C6  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33385  0035C8  517D               	movf	AESEncode@i& (0+255),w,b
 33386  0035CA  2567               	addwf	AESEncode@block& (0+255),w,b
 33387  0035CC  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33388  0035CE  0E00               	movlw	0
 33389  0035D0  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33390  0035D2  6F6F               	movwf	(??_AESEncode+4)& (0+255),b
 33391  0035D4  0E02               	movlw	2
 33392  0035D6  256E               	addwf	(??_AESEncode+3)& (0+255),w,b
 33393  0035D8  6ED9               	movwf	fsr2l,c
 33394  0035DA  0E00               	movlw	0
 33395  0035DC  216F               	addwfc	(??_AESEncode+4)& (0+255),w,b
 33396  0035DE  6EDA               	movwf	fsr2h,c
 33397  0035E0  50DF               	movf	indf2,w,c
 33398  0035E2  196D               	xorwf	(??_AESEncode+2)& (0+255),w,b
 33399  0035E4  6F7A               	movwf	AESEncode@aux2& (0+255),b
 33400                           
 33401                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 33402  0035E6  0E7F               	movlw	127
 33403  0035E8  657B               	cpfsgt	AESEncode@aux1& (0+255),b
 33404  0035EA  D00C               	goto	l17908
 33405                           
 33406                           ; BSR set to: 0
 33407  0035EC  0E1B               	movlw	27
 33408  0035EE  C07B  F06B         	movff	AESEncode@aux1,??_AESEncode
 33409  0035F2  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33410  0035F4  90D8               	bcf	status,0,c
 33411  0035F6  376B               	rlcf	??_AESEncode& (0+255),f,b
 33412  0035F8  376C               	rlcf	(??_AESEncode+1)& (0+255),f,b
 33413  0035FA  196B               	xorwf	??_AESEncode& (0+255),w,b
 33414  0035FC  6F73               	movwf	_AESEncode$516& (0+255),b
 33415  0035FE  516C               	movf	(??_AESEncode+1)& (0+255),w,b
 33416  003600  6F74               	movwf	(_AESEncode$516+1)& (0+255),b
 33417  003602  D005               	goto	l17910
 33418  003604                     l17908:
 33419                           
 33420                           ; BSR set to: 0
 33421  003604  90D8               	bcf	status,0,c
 33422  003606  357B               	rlcf	AESEncode@aux1& (0+255),w,b
 33423  003608  6F73               	movwf	_AESEncode$516& (0+255),b
 33424  00360A  6B74               	clrf	(_AESEncode$516+1)& (0+255),b
 33425  00360C  3774               	rlcf	(_AESEncode$516+1)& (0+255),f,b
 33426  00360E                     l17910:
 33427                           
 33428                           ; BSR set to: 0
 33429  00360E  C073  F07B         	movff	_AESEncode$516,AESEncode@aux1
 33430                           
 33431                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 33432  003612  0E7F               	movlw	127
 33433  003614  657A               	cpfsgt	AESEncode@aux2& (0+255),b
 33434  003616  D00C               	goto	l17914
 33435                           
 33436                           ; BSR set to: 0
 33437  003618  0E1B               	movlw	27
 33438  00361A  C07A  F06B         	movff	AESEncode@aux2,??_AESEncode
 33439  00361E  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33440  003620  90D8               	bcf	status,0,c
 33441  003622  376B               	rlcf	??_AESEncode& (0+255),f,b
 33442  003624  376C               	rlcf	(??_AESEncode+1)& (0+255),f,b
 33443  003626  196B               	xorwf	??_AESEncode& (0+255),w,b
 33444  003628  6F75               	movwf	_AESEncode$517& (0+255),b
 33445  00362A  516C               	movf	(??_AESEncode+1)& (0+255),w,b
 33446  00362C  6F76               	movwf	(_AESEncode$517+1)& (0+255),b
 33447  00362E  D005               	goto	l17916
 33448  003630                     l17914:
 33449                           
 33450                           ; BSR set to: 0
 33451  003630  90D8               	bcf	status,0,c
 33452  003632  357A               	rlcf	AESEncode@aux2& (0+255),w,b
 33453  003634  6F75               	movwf	_AESEncode$517& (0+255),b
 33454  003636  6B76               	clrf	(_AESEncode$517+1)& (0+255),b
 33455  003638  3776               	rlcf	(_AESEncode$517+1)& (0+255),f,b
 33456  00363A                     l17916:
 33457                           
 33458                           ; BSR set to: 0
 33459  00363A  C075  F07A         	movff	_AESEncode$517,AESEncode@aux2
 33460                           
 33461                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 33462  00363E  0E7F               	movlw	127
 33463  003640  657C               	cpfsgt	AESEncode@aux3& (0+255),b
 33464  003642  D00C               	goto	l17920
 33465                           
 33466                           ; BSR set to: 0
 33467  003644  0E1B               	movlw	27
 33468  003646  C07C  F06B         	movff	AESEncode@aux3,??_AESEncode
 33469  00364A  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33470  00364C  90D8               	bcf	status,0,c
 33471  00364E  376B               	rlcf	??_AESEncode& (0+255),f,b
 33472  003650  376C               	rlcf	(??_AESEncode+1)& (0+255),f,b
 33473  003652  196B               	xorwf	??_AESEncode& (0+255),w,b
 33474  003654  6F77               	movwf	_AESEncode$518& (0+255),b
 33475  003656  516C               	movf	(??_AESEncode+1)& (0+255),w,b
 33476  003658  6F78               	movwf	(_AESEncode$518+1)& (0+255),b
 33477  00365A  D005               	goto	l17922
 33478  00365C                     l17920:
 33479                           
 33480                           ; BSR set to: 0
 33481  00365C  90D8               	bcf	status,0,c
 33482  00365E  357C               	rlcf	AESEncode@aux3& (0+255),w,b
 33483  003660  6F77               	movwf	_AESEncode$518& (0+255),b
 33484  003662  6B78               	clrf	(_AESEncode$518+1)& (0+255),b
 33485  003664  3778               	rlcf	(_AESEncode$518+1)& (0+255),f,b
 33486  003666                     l17922:
 33487                           
 33488                           ; BSR set to: 0
 33489  003666  C077  F07C         	movff	_AESEncode$518,AESEncode@aux3
 33490                           
 33491                           ; BSR set to: 0
 33492                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 33493  00366A  517D               	movf	AESEncode@i& (0+255),w,b
 33494  00366C  2567               	addwf	AESEncode@block& (0+255),w,b
 33495  00366E  6ED9               	movwf	fsr2l,c
 33496  003670  0E00               	movlw	0
 33497  003672  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33498  003674  6EDA               	movwf	fsr2h,c
 33499  003676  517D               	movf	AESEncode@i& (0+255),w,b
 33500  003678  2567               	addwf	AESEncode@block& (0+255),w,b
 33501  00367A  6EE9               	movwf	fsr0l,c
 33502  00367C  0E00               	movlw	0
 33503  00367E  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33504  003680  6EEA               	movwf	fsr0h,c
 33505  003682  50EF               	movf	indf0,w,c
 33506  003684  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33507  003686  197B               	xorwf	AESEncode@aux1& (0+255),w,b
 33508  003688  6EDF               	movwf	indf2,c
 33509                           
 33510                           ; BSR set to: 0
 33511                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 33512  00368A  517D               	movf	AESEncode@i& (0+255),w,b
 33513  00368C  2567               	addwf	AESEncode@block& (0+255),w,b
 33514  00368E  6F6B               	movwf	??_AESEncode& (0+255),b
 33515  003690  0E00               	movlw	0
 33516  003692  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33517  003694  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33518  003696  0E01               	movlw	1
 33519  003698  256B               	addwf	??_AESEncode& (0+255),w,b
 33520  00369A  6ED9               	movwf	fsr2l,c
 33521  00369C  0E00               	movlw	0
 33522  00369E  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33523  0036A0  6EDA               	movwf	fsr2h,c
 33524  0036A2  517D               	movf	AESEncode@i& (0+255),w,b
 33525  0036A4  2567               	addwf	AESEncode@block& (0+255),w,b
 33526  0036A6  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33527  0036A8  0E00               	movlw	0
 33528  0036AA  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33529  0036AC  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33530  0036AE  0E01               	movlw	1
 33531  0036B0  256D               	addwf	(??_AESEncode+2)& (0+255),w,b
 33532  0036B2  6EE9               	movwf	fsr0l,c
 33533  0036B4  0E00               	movlw	0
 33534  0036B6  216E               	addwfc	(??_AESEncode+3)& (0+255),w,b
 33535  0036B8  6EEA               	movwf	fsr0h,c
 33536  0036BA  50EF               	movf	indf0,w,c
 33537  0036BC  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33538  0036BE  197A               	xorwf	AESEncode@aux2& (0+255),w,b
 33539  0036C0  6EDF               	movwf	indf2,c
 33540                           
 33541                           ; BSR set to: 0
 33542                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 33543  0036C2  517D               	movf	AESEncode@i& (0+255),w,b
 33544  0036C4  2567               	addwf	AESEncode@block& (0+255),w,b
 33545  0036C6  6F6B               	movwf	??_AESEncode& (0+255),b
 33546  0036C8  0E00               	movlw	0
 33547  0036CA  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33548  0036CC  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33549  0036CE  0E02               	movlw	2
 33550  0036D0  256B               	addwf	??_AESEncode& (0+255),w,b
 33551  0036D2  6ED9               	movwf	fsr2l,c
 33552  0036D4  0E00               	movlw	0
 33553  0036D6  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33554  0036D8  6EDA               	movwf	fsr2h,c
 33555  0036DA  517D               	movf	AESEncode@i& (0+255),w,b
 33556  0036DC  2567               	addwf	AESEncode@block& (0+255),w,b
 33557  0036DE  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33558  0036E0  0E00               	movlw	0
 33559  0036E2  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33560  0036E4  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33561  0036E6  0E02               	movlw	2
 33562  0036E8  256D               	addwf	(??_AESEncode+2)& (0+255),w,b
 33563  0036EA  6EE9               	movwf	fsr0l,c
 33564  0036EC  0E00               	movlw	0
 33565  0036EE  216E               	addwfc	(??_AESEncode+3)& (0+255),w,b
 33566  0036F0  6EEA               	movwf	fsr0h,c
 33567  0036F2  50EF               	movf	indf0,w,c
 33568  0036F4  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33569  0036F6  197C               	xorwf	AESEncode@aux3& (0+255),w,b
 33570  0036F8  6EDF               	movwf	indf2,c
 33571                           
 33572                           ; BSR set to: 0
 33573                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 33574  0036FA  517D               	movf	AESEncode@i& (0+255),w,b
 33575  0036FC  2567               	addwf	AESEncode@block& (0+255),w,b
 33576  0036FE  6F6B               	movwf	??_AESEncode& (0+255),b
 33577  003700  0E00               	movlw	0
 33578  003702  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33579  003704  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33580  003706  0E03               	movlw	3
 33581  003708  256B               	addwf	??_AESEncode& (0+255),w,b
 33582  00370A  6ED9               	movwf	fsr2l,c
 33583  00370C  0E00               	movlw	0
 33584  00370E  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33585  003710  6EDA               	movwf	fsr2h,c
 33586  003712  517D               	movf	AESEncode@i& (0+255),w,b
 33587  003714  2567               	addwf	AESEncode@block& (0+255),w,b
 33588  003716  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33589  003718  0E00               	movlw	0
 33590  00371A  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33591  00371C  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33592  00371E  0E02               	movlw	2
 33593  003720  256D               	addwf	(??_AESEncode+2)& (0+255),w,b
 33594  003722  6EE9               	movwf	fsr0l,c
 33595  003724  0E00               	movlw	0
 33596  003726  216E               	addwfc	(??_AESEncode+3)& (0+255),w,b
 33597  003728  6EEA               	movwf	fsr0h,c
 33598  00372A  50EF               	movf	indf0,w,c
 33599  00372C  6F6F               	movwf	(??_AESEncode+4)& (0+255),b
 33600  00372E  517D               	movf	AESEncode@i& (0+255),w,b
 33601  003730  2567               	addwf	AESEncode@block& (0+255),w,b
 33602  003732  6F70               	movwf	(??_AESEncode+5)& (0+255),b
 33603  003734  0E00               	movlw	0
 33604  003736  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33605  003738  6F71               	movwf	(??_AESEncode+6)& (0+255),b
 33606  00373A  0E01               	movlw	1
 33607  00373C  2570               	addwf	(??_AESEncode+5)& (0+255),w,b
 33608  00373E  6EE9               	movwf	fsr0l,c
 33609  003740  0E00               	movlw	0
 33610  003742  2171               	addwfc	(??_AESEncode+6)& (0+255),w,b
 33611  003744  6EEA               	movwf	fsr0h,c
 33612  003746  50EF               	movf	indf0,w,c
 33613  003748  6F72               	movwf	(??_AESEncode+7)& (0+255),b
 33614  00374A  517D               	movf	AESEncode@i& (0+255),w,b
 33615  00374C  2567               	addwf	AESEncode@block& (0+255),w,b
 33616  00374E  6EE9               	movwf	fsr0l,c
 33617  003750  0E00               	movlw	0
 33618  003752  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33619  003754  6EEA               	movwf	fsr0h,c
 33620  003756  50EF               	movf	indf0,w,c
 33621  003758  1972               	xorwf	(??_AESEncode+7)& (0+255),w,b
 33622  00375A  196F               	xorwf	(??_AESEncode+4)& (0+255),w,b
 33623  00375C  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33624  00375E  6EDF               	movwf	indf2,c
 33625  003760  0E04               	movlw	4
 33626  003762  277D               	addwf	AESEncode@i& (0+255),f,b
 33627  003764  0E0F               	movlw	15
 33628  003766  657D               	cpfsgt	AESEncode@i& (0+255),b
 33629  003768  D6EA               	goto	l17900
 33630  00376A                     u18770:
 33631                           
 33632                           ;AES.c: 296: };AES.c: 297: };AES.c: 299: EncKeySchedule(key);
 33633  00376A  C069  F060         	movff	AESEncode@key,EncKeySchedule@key
 33634  00376E  C06A  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 33635  003772  ECD7  F01B         	call	_EncKeySchedule	;wreg free
 33636                           
 33637                           ;AES.c: 302: for(i=0;i<16;i++)
 33638  003776  0E00               	movlw	0
 33639  003778  0100               	movlb	0	; () banked
 33640  00377A  6F7D               	movwf	AESEncode@i& (0+255),b
 33641  00377C                     l17940:
 33642                           
 33643                           ; BSR set to: 0
 33644                           ;AES.c: 303: {;AES.c: 304: block[i] ^= key[i];
 33645  00377C  517D               	movf	AESEncode@i& (0+255),w,b
 33646  00377E  2569               	addwf	AESEncode@key& (0+255),w,b
 33647  003780  6ED9               	movwf	fsr2l,c
 33648  003782  0E00               	movlw	0
 33649  003784  216A               	addwfc	(AESEncode@key+1)& (0+255),w,b
 33650  003786  6EDA               	movwf	fsr2h,c
 33651  003788  50DF               	movf	indf2,w,c
 33652  00378A  6F6B               	movwf	??_AESEncode& (0+255),b
 33653  00378C  517D               	movf	AESEncode@i& (0+255),w,b
 33654  00378E  2567               	addwf	AESEncode@block& (0+255),w,b
 33655  003790  6ED9               	movwf	fsr2l,c
 33656  003792  0E00               	movlw	0
 33657  003794  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33658  003796  6EDA               	movwf	fsr2h,c
 33659  003798  516B               	movf	??_AESEncode& (0+255),w,b
 33660  00379A  1ADF               	xorwf	indf2,f,c
 33661                           
 33662                           ; BSR set to: 0
 33663  00379C  2B7D               	incf	AESEncode@i& (0+255),f,b
 33664                           
 33665                           ; BSR set to: 0
 33666  00379E  0E0F               	movlw	15
 33667  0037A0  657D               	cpfsgt	AESEncode@i& (0+255),b
 33668  0037A2  D7EC               	goto	l17940
 33669                           
 33670                           ; BSR set to: 0
 33671                           ;AES.c: 305: };AES.c: 307: _roundCounter--;
 33672  0037A4  0643               	decf	__roundCounter,f,c
 33673                           
 33674                           ; BSR set to: 0
 33675                           ;AES.c: 308: };AES.c: 309: while(_roundCounter !=0);
 33676  0037A6  5043               	movf	__roundCounter,w,c
 33677  0037A8  B4D8               	btfsc	status,2,c
 33678  0037AA  0012               	return	
 33679  0037AC  D69B               	goto	u18710
 33680  0037AE                     __end_of_AESEncode:
 33681                           	opt callstack 0
 33682                           
 33683 ;; *************** function _EncodeShiftRow *****************
 33684 ;; Defined at:
 33685 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 33686 ;; Parameters:    Size  Location     Type
 33687 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 33688 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 33689 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 33690 ;; Auto vars:     Size  Location     Type
 33691 ;;  temp            1    2[BANK0 ] unsigned char 
 33692 ;; Return value:  Size  Location     Type
 33693 ;;                  1    wreg      void 
 33694 ;; Registers used:
 33695 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 33696 ;; Tracked objects:
 33697 ;;		On entry : 0/0
 33698 ;;		On exit  : 0/0
 33699 ;;		Unchanged: 0/0
 33700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33701 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33704 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33705 ;;Total ram usage:        3 bytes
 33706 ;; Hardware stack levels used:    1
 33707 ;; Hardware stack levels required when called:    7
 33708 ;; This function calls:
 33709 ;;		Nothing
 33710 ;; This function is called by:
 33711 ;;		_AESEncode
 33712 ;; This function uses a non-reentrant model
 33713 ;;
 33714                           
 33715                           	psect	text205
 33716  00510A                     __ptext205:
 33717                           	opt callstack 0
 33718  00510A                     _EncodeShiftRow:
 33719                           	opt callstack 16
 33720                           
 33721                           ;AES.c: 387: unsigned char temp;;AES.c: 392: temp=stateTable[1];
 33722                           
 33723                           ; BSR set to: 0
 33724                           ;incstack = 0
 33725  00510A  0100               	movlb	0	; () banked
 33726  00510C  EE20 F001          	lfsr	2,1
 33727  005110  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33728  005112  26D9               	addwf	fsr2l,f,c
 33729  005114  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33730  005116  22DA               	addwfc	fsr2h,f,c
 33731  005118  50DF               	movf	indf2,w,c
 33732  00511A  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33733                           
 33734                           ; BSR set to: 0
 33735                           ;AES.c: 393: stateTable[1]=stateTable[5];
 33736  00511C  EE20 F005          	lfsr	2,5
 33737  005120  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33738  005122  26D9               	addwf	fsr2l,f,c
 33739  005124  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33740  005126  22DA               	addwfc	fsr2h,f,c
 33741  005128  EE00 F001          	lfsr	0,1
 33742  00512C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33743  00512E  26E9               	addwf	fsr0l,f,c
 33744  005130  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33745  005132  22EA               	addwfc	fsr0h,f,c
 33746  005134  CFDF FFEF          	movff	indf2,indf0
 33747                           
 33748                           ; BSR set to: 0
 33749                           ;AES.c: 394: stateTable[5]=stateTable[9];
 33750  005138  EE20 F009          	lfsr	2,9
 33751  00513C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33752  00513E  26D9               	addwf	fsr2l,f,c
 33753  005140  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33754  005142  22DA               	addwfc	fsr2h,f,c
 33755  005144  EE00 F005          	lfsr	0,5
 33756  005148  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33757  00514A  26E9               	addwf	fsr0l,f,c
 33758  00514C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33759  00514E  22EA               	addwfc	fsr0h,f,c
 33760  005150  CFDF FFEF          	movff	indf2,indf0
 33761                           
 33762                           ; BSR set to: 0
 33763                           ;AES.c: 395: stateTable[9]=stateTable[13];
 33764  005154  EE20 F00D          	lfsr	2,13
 33765  005158  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33766  00515A  26D9               	addwf	fsr2l,f,c
 33767  00515C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33768  00515E  22DA               	addwfc	fsr2h,f,c
 33769  005160  EE00 F009          	lfsr	0,9
 33770  005164  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33771  005166  26E9               	addwf	fsr0l,f,c
 33772  005168  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33773  00516A  22EA               	addwfc	fsr0h,f,c
 33774  00516C  CFDF FFEF          	movff	indf2,indf0
 33775                           
 33776                           ; BSR set to: 0
 33777                           ;AES.c: 396: stateTable[13]=temp;
 33778  005170  EE20 F00D          	lfsr	2,13
 33779  005174  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33780  005176  26D9               	addwf	fsr2l,f,c
 33781  005178  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33782  00517A  22DA               	addwfc	fsr2h,f,c
 33783  00517C  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33784                           
 33785                           ; BSR set to: 0
 33786                           ;AES.c: 399: temp=stateTable[2];
 33787  005180  EE20 F002          	lfsr	2,2
 33788  005184  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33789  005186  26D9               	addwf	fsr2l,f,c
 33790  005188  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33791  00518A  22DA               	addwfc	fsr2h,f,c
 33792  00518C  50DF               	movf	indf2,w,c
 33793  00518E  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33794                           
 33795                           ; BSR set to: 0
 33796                           ;AES.c: 400: stateTable[2]=stateTable[10];
 33797  005190  EE20 F00A          	lfsr	2,10
 33798  005194  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33799  005196  26D9               	addwf	fsr2l,f,c
 33800  005198  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33801  00519A  22DA               	addwfc	fsr2h,f,c
 33802  00519C  EE00 F002          	lfsr	0,2
 33803  0051A0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33804  0051A2  26E9               	addwf	fsr0l,f,c
 33805  0051A4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33806  0051A6  22EA               	addwfc	fsr0h,f,c
 33807  0051A8  CFDF FFEF          	movff	indf2,indf0
 33808                           
 33809                           ;AES.c: 401: stateTable[10]=temp;
 33810  0051AC  EE20 F00A          	lfsr	2,10
 33811  0051B0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33812  0051B2  26D9               	addwf	fsr2l,f,c
 33813  0051B4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33814  0051B6  22DA               	addwfc	fsr2h,f,c
 33815  0051B8  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33816                           
 33817                           ;AES.c: 402: temp=stateTable[14];
 33818  0051BC  EE20 F00E          	lfsr	2,14
 33819  0051C0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33820  0051C2  26D9               	addwf	fsr2l,f,c
 33821  0051C4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33822  0051C6  22DA               	addwfc	fsr2h,f,c
 33823  0051C8  50DF               	movf	indf2,w,c
 33824  0051CA  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33825                           
 33826                           ; BSR set to: 0
 33827                           ;AES.c: 403: stateTable[14]=stateTable[6];
 33828  0051CC  EE20 F006          	lfsr	2,6
 33829  0051D0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33830  0051D2  26D9               	addwf	fsr2l,f,c
 33831  0051D4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33832  0051D6  22DA               	addwfc	fsr2h,f,c
 33833  0051D8  EE00 F00E          	lfsr	0,14
 33834  0051DC  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33835  0051DE  26E9               	addwf	fsr0l,f,c
 33836  0051E0  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33837  0051E2  22EA               	addwfc	fsr0h,f,c
 33838  0051E4  CFDF FFEF          	movff	indf2,indf0
 33839                           
 33840                           ; BSR set to: 0
 33841                           ;AES.c: 404: stateTable[6]=temp;
 33842  0051E8  EE20 F006          	lfsr	2,6
 33843  0051EC  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33844  0051EE  26D9               	addwf	fsr2l,f,c
 33845  0051F0  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33846  0051F2  22DA               	addwfc	fsr2h,f,c
 33847  0051F4  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33848                           
 33849                           ; BSR set to: 0
 33850                           ;AES.c: 407: temp=stateTable[3];
 33851  0051F8  EE20 F003          	lfsr	2,3
 33852  0051FC  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33853  0051FE  26D9               	addwf	fsr2l,f,c
 33854  005200  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33855  005202  22DA               	addwfc	fsr2h,f,c
 33856  005204  50DF               	movf	indf2,w,c
 33857  005206  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33858                           
 33859                           ; BSR set to: 0
 33860                           ;AES.c: 408: stateTable[3]=stateTable[15];
 33861  005208  EE20 F00F          	lfsr	2,15
 33862  00520C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33863  00520E  26D9               	addwf	fsr2l,f,c
 33864  005210  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33865  005212  22DA               	addwfc	fsr2h,f,c
 33866  005214  EE00 F003          	lfsr	0,3
 33867  005218  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33868  00521A  26E9               	addwf	fsr0l,f,c
 33869  00521C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33870  00521E  22EA               	addwfc	fsr0h,f,c
 33871  005220  CFDF FFEF          	movff	indf2,indf0
 33872                           
 33873                           ; BSR set to: 0
 33874                           ;AES.c: 409: stateTable[15]=stateTable[11];
 33875  005224  EE20 F00B          	lfsr	2,11
 33876  005228  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33877  00522A  26D9               	addwf	fsr2l,f,c
 33878  00522C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33879  00522E  22DA               	addwfc	fsr2h,f,c
 33880  005230  EE00 F00F          	lfsr	0,15
 33881  005234  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33882  005236  26E9               	addwf	fsr0l,f,c
 33883  005238  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33884  00523A  22EA               	addwfc	fsr0h,f,c
 33885  00523C  CFDF FFEF          	movff	indf2,indf0
 33886                           
 33887                           ; BSR set to: 0
 33888                           ;AES.c: 410: stateTable[11]=stateTable[7];
 33889  005240  EE20 F007          	lfsr	2,7
 33890  005244  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33891  005246  26D9               	addwf	fsr2l,f,c
 33892  005248  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33893  00524A  22DA               	addwfc	fsr2h,f,c
 33894  00524C  EE00 F00B          	lfsr	0,11
 33895  005250  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33896  005252  26E9               	addwf	fsr0l,f,c
 33897  005254  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33898  005256  22EA               	addwfc	fsr0h,f,c
 33899  005258  CFDF FFEF          	movff	indf2,indf0
 33900                           
 33901                           ;AES.c: 411: stateTable[7]=temp;
 33902  00525C  EE20 F007          	lfsr	2,7
 33903  005260  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33904  005262  26D9               	addwf	fsr2l,f,c
 33905  005264  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33906  005266  22DA               	addwfc	fsr2h,f,c
 33907  005268  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33908                           
 33909                           ; BSR set to: 0
 33910  00526C  0012               	return		;funcret
 33911  00526E                     __end_of_EncodeShiftRow:
 33912                           	opt callstack 0
 33913                           
 33914 ;; *************** function _EncKeySchedule *****************
 33915 ;; Defined at:
 33916 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 33917 ;; Parameters:    Size  Location     Type
 33918 ;;  key             2    0[BANK0 ] PTR unsigned char 
 33919 ;;		 -> AESEncodeLoRa@useKey(16), 
 33920 ;; Auto vars:     Size  Location     Type
 33921 ;;		None
 33922 ;; Return value:  Size  Location     Type
 33923 ;;                  1    wreg      void 
 33924 ;; Registers used:
 33925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33926 ;; Tracked objects:
 33927 ;;		On entry : 0/0
 33928 ;;		On exit  : 0/0
 33929 ;;		Unchanged: 0/0
 33930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33931 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33932 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33933 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33934 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33935 ;;Total ram usage:        7 bytes
 33936 ;; Hardware stack levels used:    1
 33937 ;; Hardware stack levels required when called:    7
 33938 ;; This function calls:
 33939 ;;		Nothing
 33940 ;; This function is called by:
 33941 ;;		_AESEncode
 33942 ;; This function uses a non-reentrant model
 33943 ;;
 33944                           
 33945                           	psect	text206
 33946  0037AE                     __ptext206:
 33947                           	opt callstack 0
 33948  0037AE                     _EncKeySchedule:
 33949                           	opt callstack 16
 33950                           
 33951                           ;AES.c: 340: key[0]^=STable[key[13]];
 33952                           
 33953                           ; BSR set to: 0
 33954                           ;incstack = 0
 33955  0037AE  0100               	movlb	0	; () banked
 33956  0037B0  EE20 F00D          	lfsr	2,13
 33957  0037B4  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33958  0037B6  26D9               	addwf	fsr2l,f,c
 33959  0037B8  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33960  0037BA  22DA               	addwfc	fsr2h,f,c
 33961  0037BC  50DF               	movf	indf2,w,c
 33962  0037BE  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33963  0037C0  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33964  0037C2  0E07               	movlw	low _STable
 33965  0037C4  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33966  0037C6  6EF6               	movwf	tblptrl,c
 33967  0037C8  0EFE               	movlw	high _STable
 33968  0037CA  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33969  0037CC  6EF7               	movwf	tblptrh,c
 33970  0037CE                     	if	1	;There are 3 active tblptr bytes
 33971  0037CE  6AF8               	clrf	tblptru,c
 33972  0037D0  0E00               	movlw	low (__mediumconst shr (0+16))
 33973  0037D2  22F8               	addwfc	tblptru,f,c
 33974  0037D4                     	endif
 33975  0037D4  0008               	tblrd		*
 33976  0037D6  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 33977  0037DA  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 33978  0037DE  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 33979  0037E2  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 33980  0037E4  1ADF               	xorwf	indf2,f,c
 33981                           
 33982                           ;AES.c: 341: key[1]^=STable[key[14]];
 33983  0037E6  EE20 F00E          	lfsr	2,14
 33984  0037EA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33985  0037EC  26D9               	addwf	fsr2l,f,c
 33986  0037EE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33987  0037F0  22DA               	addwfc	fsr2h,f,c
 33988  0037F2  50DF               	movf	indf2,w,c
 33989  0037F4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33990  0037F6  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33991  0037F8  0E07               	movlw	low _STable
 33992  0037FA  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33993  0037FC  6EF6               	movwf	tblptrl,c
 33994  0037FE  0EFE               	movlw	high _STable
 33995  003800  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33996  003802  6EF7               	movwf	tblptrh,c
 33997  003804                     	if	1	;There are 3 active tblptr bytes
 33998  003804  6AF8               	clrf	tblptru,c
 33999  003806  0E00               	movlw	low (__mediumconst shr (0+16))
 34000  003808  22F8               	addwfc	tblptru,f,c
 34001  00380A                     	endif
 34002  00380A  0008               	tblrd		*
 34003  00380C  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 34004  003810  EE20 F001          	lfsr	2,1
 34005  003814  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34006  003816  26D9               	addwf	fsr2l,f,c
 34007  003818  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34008  00381A  22DA               	addwfc	fsr2h,f,c
 34009  00381C  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 34010  00381E  1ADF               	xorwf	indf2,f,c
 34011                           
 34012                           ;AES.c: 342: key[2]^=STable[key[15]];
 34013  003820  EE20 F00F          	lfsr	2,15
 34014  003824  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34015  003826  26D9               	addwf	fsr2l,f,c
 34016  003828  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34017  00382A  22DA               	addwfc	fsr2h,f,c
 34018  00382C  50DF               	movf	indf2,w,c
 34019  00382E  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34020  003830  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 34021  003832  0E07               	movlw	low _STable
 34022  003834  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 34023  003836  6EF6               	movwf	tblptrl,c
 34024  003838  0EFE               	movlw	high _STable
 34025  00383A  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 34026  00383C  6EF7               	movwf	tblptrh,c
 34027  00383E                     	if	1	;There are 3 active tblptr bytes
 34028  00383E  6AF8               	clrf	tblptru,c
 34029  003840  0E00               	movlw	low (__mediumconst shr (0+16))
 34030  003842  22F8               	addwfc	tblptru,f,c
 34031  003844                     	endif
 34032  003844  0008               	tblrd		*
 34033  003846  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 34034  00384A  EE20 F002          	lfsr	2,2
 34035  00384E  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34036  003850  26D9               	addwf	fsr2l,f,c
 34037  003852  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34038  003854  22DA               	addwfc	fsr2h,f,c
 34039  003856  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 34040  003858  1ADF               	xorwf	indf2,f,c
 34041                           
 34042                           ;AES.c: 343: key[3]^=STable[key[12]];
 34043  00385A  EE20 F00C          	lfsr	2,12
 34044  00385E  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34045  003860  26D9               	addwf	fsr2l,f,c
 34046  003862  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34047  003864  22DA               	addwfc	fsr2h,f,c
 34048  003866  50DF               	movf	indf2,w,c
 34049  003868  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34050  00386A  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 34051  00386C  0E07               	movlw	low _STable
 34052  00386E  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 34053  003870  6EF6               	movwf	tblptrl,c
 34054  003872  0EFE               	movlw	high _STable
 34055  003874  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 34056  003876  6EF7               	movwf	tblptrh,c
 34057  003878                     	if	1	;There are 3 active tblptr bytes
 34058  003878  6AF8               	clrf	tblptru,c
 34059  00387A  0E00               	movlw	low (__mediumconst shr (0+16))
 34060  00387C  22F8               	addwfc	tblptru,f,c
 34061  00387E                     	endif
 34062  00387E  0008               	tblrd		*
 34063  003880  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 34064  003884  EE20 F003          	lfsr	2,3
 34065  003888  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34066  00388A  26D9               	addwf	fsr2l,f,c
 34067  00388C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34068  00388E  22DA               	addwfc	fsr2h,f,c
 34069  003890  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 34070  003892  1ADF               	xorwf	indf2,f,c
 34071                           
 34072                           ; BSR set to: 0
 34073                           ;AES.c: 345: key[0]^=_rcon;
 34074  003894  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 34075  003898  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 34076  00389C  5042               	movf	__rcon,w,c
 34077  00389E  1ADF               	xorwf	indf2,f,c
 34078                           
 34079                           ; BSR set to: 0
 34080                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 34081  0038A0  0E7F               	movlw	127
 34082  0038A2  6442               	cpfsgt	__rcon,c
 34083  0038A4  D00C               	goto	l17780
 34084                           
 34085                           ; BSR set to: 0
 34086  0038A6  0E1B               	movlw	27
 34087  0038A8  C042  F062         	movff	__rcon,??_EncKeySchedule
 34088  0038AC  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 34089  0038AE  90D8               	bcf	status,0,c
 34090  0038B0  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 34091  0038B2  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 34092  0038B4  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 34093  0038B6  6F65               	movwf	_EncKeySchedule$521& (0+255),b
 34094  0038B8  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 34095  0038BA  6F66               	movwf	(_EncKeySchedule$521+1)& (0+255),b
 34096  0038BC  D005               	goto	l17782
 34097  0038BE                     l17780:
 34098                           
 34099                           ; BSR set to: 0
 34100  0038BE  90D8               	bcf	status,0,c
 34101  0038C0  3442               	rlcf	__rcon,w,c
 34102  0038C2  6F65               	movwf	_EncKeySchedule$521& (0+255),b
 34103  0038C4  6B66               	clrf	(_EncKeySchedule$521+1)& (0+255),b
 34104  0038C6  3766               	rlcf	(_EncKeySchedule$521+1)& (0+255),f,b
 34105  0038C8                     l17782:
 34106                           
 34107                           ; BSR set to: 0
 34108  0038C8  C065  F042         	movff	_EncKeySchedule$521,__rcon
 34109                           
 34110                           ; BSR set to: 0
 34111                           ;AES.c: 349: key[4]^=key[0];
 34112  0038CC  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 34113  0038D0  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 34114  0038D4  50DF               	movf	indf2,w,c
 34115  0038D6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34116  0038D8  EE20 F004          	lfsr	2,4
 34117  0038DC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34118  0038DE  26D9               	addwf	fsr2l,f,c
 34119  0038E0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34120  0038E2  22DA               	addwfc	fsr2h,f,c
 34121  0038E4  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34122  0038E6  1ADF               	xorwf	indf2,f,c
 34123                           
 34124                           ; BSR set to: 0
 34125                           ;AES.c: 350: key[5]^=key[1];
 34126  0038E8  EE20 F001          	lfsr	2,1
 34127  0038EC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34128  0038EE  26D9               	addwf	fsr2l,f,c
 34129  0038F0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34130  0038F2  22DA               	addwfc	fsr2h,f,c
 34131  0038F4  50DF               	movf	indf2,w,c
 34132  0038F6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34133  0038F8  EE20 F005          	lfsr	2,5
 34134  0038FC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34135  0038FE  26D9               	addwf	fsr2l,f,c
 34136  003900  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34137  003902  22DA               	addwfc	fsr2h,f,c
 34138  003904  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34139  003906  1ADF               	xorwf	indf2,f,c
 34140                           
 34141                           ; BSR set to: 0
 34142                           ;AES.c: 351: key[6]^=key[2];
 34143  003908  EE20 F002          	lfsr	2,2
 34144  00390C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34145  00390E  26D9               	addwf	fsr2l,f,c
 34146  003910  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34147  003912  22DA               	addwfc	fsr2h,f,c
 34148  003914  50DF               	movf	indf2,w,c
 34149  003916  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34150  003918  EE20 F006          	lfsr	2,6
 34151  00391C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34152  00391E  26D9               	addwf	fsr2l,f,c
 34153  003920  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34154  003922  22DA               	addwfc	fsr2h,f,c
 34155  003924  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34156  003926  1ADF               	xorwf	indf2,f,c
 34157                           
 34158                           ; BSR set to: 0
 34159                           ;AES.c: 352: key[7]^=key[3];
 34160  003928  EE20 F003          	lfsr	2,3
 34161  00392C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34162  00392E  26D9               	addwf	fsr2l,f,c
 34163  003930  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34164  003932  22DA               	addwfc	fsr2h,f,c
 34165  003934  50DF               	movf	indf2,w,c
 34166  003936  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34167  003938  EE20 F007          	lfsr	2,7
 34168  00393C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34169  00393E  26D9               	addwf	fsr2l,f,c
 34170  003940  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34171  003942  22DA               	addwfc	fsr2h,f,c
 34172  003944  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34173  003946  1ADF               	xorwf	indf2,f,c
 34174                           
 34175                           ; BSR set to: 0
 34176                           ;AES.c: 355: key[8]^=key[4];
 34177  003948  EE20 F004          	lfsr	2,4
 34178  00394C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34179  00394E  26D9               	addwf	fsr2l,f,c
 34180  003950  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34181  003952  22DA               	addwfc	fsr2h,f,c
 34182  003954  50DF               	movf	indf2,w,c
 34183  003956  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34184  003958  EE20 F008          	lfsr	2,8
 34185  00395C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34186  00395E  26D9               	addwf	fsr2l,f,c
 34187  003960  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34188  003962  22DA               	addwfc	fsr2h,f,c
 34189  003964  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34190  003966  1ADF               	xorwf	indf2,f,c
 34191                           
 34192                           ; BSR set to: 0
 34193                           ;AES.c: 356: key[9]^=key[5];
 34194  003968  EE20 F005          	lfsr	2,5
 34195  00396C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34196  00396E  26D9               	addwf	fsr2l,f,c
 34197  003970  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34198  003972  22DA               	addwfc	fsr2h,f,c
 34199  003974  50DF               	movf	indf2,w,c
 34200  003976  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34201  003978  EE20 F009          	lfsr	2,9
 34202  00397C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34203  00397E  26D9               	addwf	fsr2l,f,c
 34204  003980  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34205  003982  22DA               	addwfc	fsr2h,f,c
 34206  003984  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34207  003986  1ADF               	xorwf	indf2,f,c
 34208                           
 34209                           ; BSR set to: 0
 34210                           ;AES.c: 357: key[10]^=key[6];
 34211  003988  EE20 F006          	lfsr	2,6
 34212  00398C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34213  00398E  26D9               	addwf	fsr2l,f,c
 34214  003990  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34215  003992  22DA               	addwfc	fsr2h,f,c
 34216  003994  50DF               	movf	indf2,w,c
 34217  003996  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34218  003998  EE20 F00A          	lfsr	2,10
 34219  00399C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34220  00399E  26D9               	addwf	fsr2l,f,c
 34221  0039A0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34222  0039A2  22DA               	addwfc	fsr2h,f,c
 34223  0039A4  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34224  0039A6  1ADF               	xorwf	indf2,f,c
 34225                           
 34226                           ; BSR set to: 0
 34227                           ;AES.c: 358: key[11]^=key[7];
 34228  0039A8  EE20 F007          	lfsr	2,7
 34229  0039AC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34230  0039AE  26D9               	addwf	fsr2l,f,c
 34231  0039B0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34232  0039B2  22DA               	addwfc	fsr2h,f,c
 34233  0039B4  50DF               	movf	indf2,w,c
 34234  0039B6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34235  0039B8  EE20 F00B          	lfsr	2,11
 34236  0039BC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34237  0039BE  26D9               	addwf	fsr2l,f,c
 34238  0039C0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34239  0039C2  22DA               	addwfc	fsr2h,f,c
 34240  0039C4  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34241  0039C6  1ADF               	xorwf	indf2,f,c
 34242                           
 34243                           ; BSR set to: 0
 34244                           ;AES.c: 361: key[12]^=key[8];
 34245  0039C8  EE20 F008          	lfsr	2,8
 34246  0039CC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34247  0039CE  26D9               	addwf	fsr2l,f,c
 34248  0039D0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34249  0039D2  22DA               	addwfc	fsr2h,f,c
 34250  0039D4  50DF               	movf	indf2,w,c
 34251  0039D6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34252  0039D8  EE20 F00C          	lfsr	2,12
 34253  0039DC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34254  0039DE  26D9               	addwf	fsr2l,f,c
 34255  0039E0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34256  0039E2  22DA               	addwfc	fsr2h,f,c
 34257  0039E4  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34258  0039E6  1ADF               	xorwf	indf2,f,c
 34259                           
 34260                           ; BSR set to: 0
 34261                           ;AES.c: 362: key[13]^=key[9];
 34262  0039E8  EE20 F009          	lfsr	2,9
 34263  0039EC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34264  0039EE  26D9               	addwf	fsr2l,f,c
 34265  0039F0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34266  0039F2  22DA               	addwfc	fsr2h,f,c
 34267  0039F4  50DF               	movf	indf2,w,c
 34268  0039F6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34269  0039F8  EE20 F00D          	lfsr	2,13
 34270  0039FC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34271  0039FE  26D9               	addwf	fsr2l,f,c
 34272  003A00  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34273  003A02  22DA               	addwfc	fsr2h,f,c
 34274  003A04  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34275  003A06  1ADF               	xorwf	indf2,f,c
 34276                           
 34277                           ; BSR set to: 0
 34278                           ;AES.c: 363: key[14]^=key[10];
 34279  003A08  EE20 F00A          	lfsr	2,10
 34280  003A0C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34281  003A0E  26D9               	addwf	fsr2l,f,c
 34282  003A10  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34283  003A12  22DA               	addwfc	fsr2h,f,c
 34284  003A14  50DF               	movf	indf2,w,c
 34285  003A16  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34286  003A18  EE20 F00E          	lfsr	2,14
 34287  003A1C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34288  003A1E  26D9               	addwf	fsr2l,f,c
 34289  003A20  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34290  003A22  22DA               	addwfc	fsr2h,f,c
 34291  003A24  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34292  003A26  1ADF               	xorwf	indf2,f,c
 34293                           
 34294                           ; BSR set to: 0
 34295                           ;AES.c: 364: key[15]^=key[11];
 34296  003A28  EE20 F00B          	lfsr	2,11
 34297  003A2C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34298  003A2E  26D9               	addwf	fsr2l,f,c
 34299  003A30  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34300  003A32  22DA               	addwfc	fsr2h,f,c
 34301  003A34  50DF               	movf	indf2,w,c
 34302  003A36  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34303  003A38  EE20 F00F          	lfsr	2,15
 34304  003A3C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34305  003A3E  26D9               	addwf	fsr2l,f,c
 34306  003A40  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34307  003A42  22DA               	addwfc	fsr2h,f,c
 34308  003A44  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34309  003A46  1ADF               	xorwf	indf2,f,c
 34310                           
 34311                           ; BSR set to: 0
 34312  003A48  0012               	return		;funcret
 34313  003A4A                     __end_of_EncKeySchedule:
 34314                           	opt callstack 0
 34315                           
 34316 ;; *************** function _LORAWAN_Init *****************
 34317 ;; Defined at:
 34318 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34319 ;; Parameters:    Size  Location     Type
 34320 ;;  RxPayload       2   74[BANK0 ] PTR FTN(PTR unsigned cha
 34321 ;;		 -> RxData(1), 
 34322 ;;  RxJoinRespon    2   76[BANK0 ] PTR FTN(unsigned char ,)
 34323 ;;		 -> RxJoinResponse(1), 
 34324 ;; Auto vars:     Size  Location     Type
 34325 ;;		None
 34326 ;; Return value:  Size  Location     Type
 34327 ;;                  1    wreg      void 
 34328 ;; Registers used:
 34329 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34330 ;; Tracked objects:
 34331 ;;		On entry : 0/0
 34332 ;;		On exit  : 0/0
 34333 ;;		Unchanged: 0/0
 34334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34338 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34339 ;;Total ram usage:        4 bytes
 34340 ;; Hardware stack levels used:    1
 34341 ;; Hardware stack levels required when called:   13
 34342 ;; This function calls:
 34343 ;;		_CreateAllSoftwareTimers
 34344 ;;		_LORAWAN_Reset
 34345 ;;		_RADIO_Init
 34346 ;;		_RADIO_ReadRandom
 34347 ;;		_SetCallbackSoftwareTimers
 34348 ;;		_StopAllSoftwareTimers
 34349 ;;		_srand
 34350 ;; This function is called by:
 34351 ;;		_main
 34352 ;; This function uses a non-reentrant model
 34353 ;;
 34354                           
 34355                           	psect	text207
 34356  008F24                     __ptext207:
 34357                           	opt callstack 0
 34358  008F24                     _LORAWAN_Init:
 34359                           	opt callstack 17
 34360                           
 34361                           ;lorawan_eu.c: 127: if (loRa.macInitialized == 0)
 34362                           
 34363                           ; BSR set to: 0
 34364                           ;incstack = 0
 34365  008F24  0102               	movlb	2	; () banked
 34366  008F26  51F5               	movf	(_loRa+240)& (0+255),w,b
 34367  008F28  A4D8               	btfss	status,2,c
 34368  008F2A  D008               	goto	l21826
 34369                           
 34370                           ; BSR set to: 2
 34371                           ;lorawan_eu.c: 128: {;lorawan_eu.c: 129: CreateAllSoftwareTimers ();
 34372  008F2C  ECFE  F049         	call	_CreateAllSoftwareTimers	;wreg free
 34373                           
 34374                           ;lorawan_eu.c: 130: SetCallbackSoftwareTimers ();
 34375  008F30  ECA9  F039         	call	_SetCallbackSoftwareTimers	;wreg free
 34376                           
 34377                           ;lorawan_eu.c: 131: loRa.macInitialized = 1;
 34378  008F34  0E01               	movlw	1
 34379  008F36  0102               	movlb	2	; () banked
 34380  008F38  6FF5               	movwf	(_loRa+240)& (0+255),b
 34381                           
 34382                           ;lorawan_eu.c: 132: }
 34383  008F3A  D002               	goto	l21828
 34384  008F3C                     l21826:
 34385                           
 34386                           ; BSR set to: 2
 34387                           ;lorawan_eu.c: 133: else;lorawan_eu.c: 134: {;lorawan_eu.c: 135: StopAllSoftwareTimers (
      +                          );
 34388  008F3C  ECD5  F049         	call	_StopAllSoftwareTimers	;wreg free
 34389  008F40                     l21828:
 34390                           
 34391                           ;lorawan_eu.c: 136: };lorawan_eu.c: 138: rxPayload.RxAppData = RxPayload;
 34392  008F40  C0AA  F10E         	movff	LORAWAN_Init@RxPayload,_rxPayload
 34393  008F44  C0AB  F10F         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 34394                           
 34395                           ;lorawan_eu.c: 139: rxPayload.RxJoinResponse = RxJoinResponse;
 34396  008F48  C0AC  F110         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 34397  008F4C  C0AD  F111         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 34398                           
 34399                           ;lorawan_eu.c: 141: RADIO_Init(&radioBuffer[16], (868100000));
 34400  008F50  0ED7               	movlw	low (_radioBuffer+16)
 34401  008F52  0100               	movlb	0	; () banked
 34402  008F54  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34403  008F56  0E07               	movlw	high (_radioBuffer+16)
 34404  008F58  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34405  008F5A  0EA0               	movlw	160
 34406  008F5C  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34407  008F5E  0E27               	movlw	39
 34408  008F60  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34409  008F62  0EBE               	movlw	190
 34410  008F64  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34411  008F66  0E33               	movlw	51
 34412  008F68  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34413  008F6A  EC63  F025         	call	_RADIO_Init	;wreg free
 34414                           
 34415                           ;lorawan_eu.c: 143: srand (RADIO_ReadRandom ());
 34416  008F6E  EC61  F03F         	call	_RADIO_ReadRandom	;wreg free
 34417  008F72  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 34418  008F76  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 34419  008F7A  EC2B  F053         	call	_srand	;wreg free
 34420                           
 34421                           ;lorawan_eu.c: 145: LORAWAN_Reset (ISM_EU868);
 34422  008F7E  0E00               	movlw	0
 34423  008F80  EC98  F023         	call	_LORAWAN_Reset
 34424  008F84  0012               	return		;funcret
 34425  008F86                     __end_of_LORAWAN_Init:
 34426                           	opt callstack 0
 34427                           
 34428 ;; *************** function _srand *****************
 34429 ;; Defined at:
 34430 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 34431 ;; Parameters:    Size  Location     Type
 34432 ;;  x               2   18[BANK0 ] unsigned int 
 34433 ;; Auto vars:     Size  Location     Type
 34434 ;;		None
 34435 ;; Return value:  Size  Location     Type
 34436 ;;                  1    wreg      void 
 34437 ;; Registers used:
 34438 ;;		status,2
 34439 ;; Tracked objects:
 34440 ;;		On entry : 0/0
 34441 ;;		On exit  : 0/0
 34442 ;;		Unchanged: 0/0
 34443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34444 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34447 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34448 ;;Total ram usage:        2 bytes
 34449 ;; Hardware stack levels used:    1
 34450 ;; Hardware stack levels required when called:    7
 34451 ;; This function calls:
 34452 ;;		Nothing
 34453 ;; This function is called by:
 34454 ;;		_LORAWAN_Init
 34455 ;; This function uses a non-reentrant model
 34456 ;;
 34457                           
 34458                           	psect	text208
 34459  00A656                     __ptext208:
 34460                           	opt callstack 0
 34461  00A656                     _srand:
 34462                           	opt callstack 22
 34463                           
 34464                           ;incstack = 0
 34465  00A656  C072  F1EF         	movff	srand@x,_randx
 34466  00A65A  C073  F1F0         	movff	srand@x+1,_randx+1
 34467  00A65E  0101               	movlb	1	; () banked
 34468  00A660  6BF1               	clrf	(_randx+2)& (0+255),b
 34469  00A662  6BF2               	clrf	(_randx+3)& (0+255),b
 34470                           
 34471                           ; BSR set to: 1
 34472  00A664  0012               	return		;funcret
 34473  00A666                     __end_of_srand:
 34474                           	opt callstack 0
 34475                           
 34476 ;; *************** function _SetCallbackSoftwareTimers *****************
 34477 ;; Defined at:
 34478 ;;		line 952 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34479 ;; Parameters:    Size  Location     Type
 34480 ;;		None
 34481 ;; Auto vars:     Size  Location     Type
 34482 ;;		None
 34483 ;; Return value:  Size  Location     Type
 34484 ;;                  1    wreg      void 
 34485 ;; Registers used:
 34486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34487 ;; Tracked objects:
 34488 ;;		On entry : 0/0
 34489 ;;		On exit  : 0/0
 34490 ;;		Unchanged: 0/0
 34491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34496 ;;Total ram usage:        0 bytes
 34497 ;; Hardware stack levels used:    1
 34498 ;; Hardware stack levels required when called:    8
 34499 ;; This function calls:
 34500 ;;		_SwTimerSetCallback
 34501 ;; This function is called by:
 34502 ;;		_LORAWAN_Init
 34503 ;; This function uses a non-reentrant model
 34504 ;;
 34505                           
 34506                           	psect	text209
 34507  007352                     __ptext209:
 34508                           	opt callstack 0
 34509  007352                     _SetCallbackSoftwareTimers:
 34510                           	opt callstack 21
 34511                           
 34512                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 34513                           
 34514                           ; BSR set to: 1
 34515                           ;incstack = 0
 34516  007352  0EFE               	movlw	low _LORAWAN_ReceiveWindow1Callback
 34517  007354  0100               	movlb	0	; () banked
 34518  007356  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34519  007358  0E7B               	movlw	high _LORAWAN_ReceiveWindow1Callback
 34520  00735A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34521  00735C  0E00               	movlw	0
 34522  00735E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34523  007360  0102               	movlb	2	; () banked
 34524  007362  51E7               	movf	(_loRa+226)& (0+255),w,b
 34525  007364  ECD9  F04D         	call	_SwTimerSetCallback
 34526                           
 34527                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 34528  007368  0E30               	movlw	low _LORAWAN_ReceiveWindow2Callback
 34529  00736A  0100               	movlb	0	; () banked
 34530  00736C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34531  00736E  0E74               	movlw	high _LORAWAN_ReceiveWindow2Callback
 34532  007370  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34533  007372  0E00               	movlw	0
 34534  007374  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34535  007376  0102               	movlb	2	; () banked
 34536  007378  51E8               	movf	(_loRa+227)& (0+255),w,b
 34537  00737A  ECD9  F04D         	call	_SwTimerSetCallback
 34538                           
 34539                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 34540  00737E  0E9E               	movlw	low _LORAWAN_LinkCheckCallback
 34541  007380  0100               	movlb	0	; () banked
 34542  007382  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34543  007384  0E4F               	movlw	high _LORAWAN_LinkCheckCallback
 34544  007386  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34545  007388  0E00               	movlw	0
 34546  00738A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34547  00738C  0102               	movlb	2	; () banked
 34548  00738E  51EC               	movf	(_loRa+231)& (0+255),w,b
 34549  007390  ECD9  F04D         	call	_SwTimerSetCallback
 34550                           
 34551                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 34552  007394  0EFE               	movlw	low _LORAWAN_ReceiveWindow1Callback
 34553  007396  0100               	movlb	0	; () banked
 34554  007398  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34555  00739A  0E7B               	movlw	high _LORAWAN_ReceiveWindow1Callback
 34556  00739C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34557  00739E  0E00               	movlw	0
 34558  0073A0  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34559  0073A2  0102               	movlb	2	; () banked
 34560  0073A4  51E9               	movf	(_loRa+228)& (0+255),w,b
 34561  0073A6  ECD9  F04D         	call	_SwTimerSetCallback
 34562                           
 34563                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 34564  0073AA  0E30               	movlw	low _LORAWAN_ReceiveWindow2Callback
 34565  0073AC  0100               	movlb	0	; () banked
 34566  0073AE  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34567  0073B0  0E74               	movlw	high _LORAWAN_ReceiveWindow2Callback
 34568  0073B2  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34569  0073B4  0E00               	movlw	0
 34570  0073B6  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34571  0073B8  0102               	movlb	2	; () banked
 34572  0073BA  51EA               	movf	(_loRa+229)& (0+255),w,b
 34573  0073BC  ECD9  F04D         	call	_SwTimerSetCallback
 34574                           
 34575                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 34576  0073C0  0E2A               	movlw	low _AckRetransmissionCallback
 34577  0073C2  0100               	movlb	0	; () banked
 34578  0073C4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34579  0073C6  0E5F               	movlw	high _AckRetransmissionCallback
 34580  0073C8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34581  0073CA  0E00               	movlw	0
 34582  0073CC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34583  0073CE  0102               	movlb	2	; () banked
 34584  0073D0  51ED               	movf	(_loRa+232)& (0+255),w,b
 34585  0073D2  ECD9  F04D         	call	_SwTimerSetCallback
 34586                           
 34587                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 34588  0073D6  0E5E               	movlw	low _AutomaticReplyCallback
 34589  0073D8  0100               	movlb	0	; () banked
 34590  0073DA  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34591  0073DC  0EA1               	movlw	high _AutomaticReplyCallback
 34592  0073DE  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34593  0073E0  0E00               	movlw	0
 34594  0073E2  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34595  0073E4  0102               	movlb	2	; () banked
 34596  0073E6  51EB               	movf	(_loRa+230)& (0+255),w,b
 34597  0073E8  ECD9  F04D         	call	_SwTimerSetCallback
 34598                           
 34599                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 34600  0073EC  0E4C               	movlw	low _UnconfirmedTransmissionCallback
 34601  0073EE  0100               	movlb	0	; () banked
 34602  0073F0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34603  0073F2  0E88               	movlw	high _UnconfirmedTransmissionCallback
 34604  0073F4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34605  0073F6  0E00               	movlw	0
 34606  0073F8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34607  0073FA  0102               	movlb	2	; () banked
 34608  0073FC  51EF               	movf	(_loRa+234)& (0+255),w,b
 34609  0073FE  ECD9  F04D         	call	_SwTimerSetCallback
 34610                           
 34611                           ;lorawan_eu.c: 962: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 34612  007402  0E4E               	movlw	low _UpdateJoinSuccessState
 34613  007404  0100               	movlb	0	; () banked
 34614  007406  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34615  007408  0E5A               	movlw	high _UpdateJoinSuccessState
 34616  00740A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34617  00740C  0E00               	movlw	0
 34618  00740E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34619  007410  0102               	movlb	2	; () banked
 34620  007412  51F8               	movf	(_loRa+243)& (0+255),w,b
 34621  007414  ECD9  F04D         	call	_SwTimerSetCallback
 34622                           
 34623                           ;lorawan_eu.c: 963: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 34624  007418  0EA8               	movlw	low _DutyCycleCallback
 34625  00741A  0100               	movlb	0	; () banked
 34626  00741C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34627  00741E  0E2E               	movlw	high _DutyCycleCallback
 34628  007420  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34629  007422  0E00               	movlw	0
 34630  007424  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34631  007426  0102               	movlb	2	; () banked
 34632  007428  51EE               	movf	(_loRa+233)& (0+255),w,b
 34633  00742A  ECD9  F04D         	call	_SwTimerSetCallback
 34634  00742E  0012               	return		;funcret
 34635  007430                     __end_of_SetCallbackSoftwareTimers:
 34636                           	opt callstack 0
 34637                           
 34638 ;; *************** function _RADIO_ReadRandom *****************
 34639 ;; Defined at:
 34640 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34641 ;; Parameters:    Size  Location     Type
 34642 ;;		None
 34643 ;; Auto vars:     Size  Location     Type
 34644 ;;  retVal          2   15[BANK0 ] unsigned int 
 34645 ;;  i               1   17[BANK0 ] unsigned char 
 34646 ;; Return value:  Size  Location     Type
 34647 ;;                  2   12[BANK0 ] unsigned int 
 34648 ;; Registers used:
 34649 ;;		wreg, status,2, status,0, cstack
 34650 ;; Tracked objects:
 34651 ;;		On entry : 0/0
 34652 ;;		On exit  : 0/0
 34653 ;;		Unchanged: 0/0
 34654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34655 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34656 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34658 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34659 ;;Total ram usage:        6 bytes
 34660 ;; Hardware stack levels used:    1
 34661 ;; Hardware stack levels required when called:   11
 34662 ;; This function calls:
 34663 ;;		_RADIO_RegisterRead
 34664 ;;		_RADIO_RegisterWrite
 34665 ;;		_RADIO_WriteMode
 34666 ;;		_SystemBlockingWaitMs
 34667 ;; This function is called by:
 34668 ;;		_LORAWAN_Init
 34669 ;; This function uses a non-reentrant model
 34670 ;;
 34671                           
 34672                           	psect	text210
 34673  007EC2                     __ptext210:
 34674                           	opt callstack 0
 34675  007EC2                     _RADIO_ReadRandom:
 34676                           	opt callstack 18
 34677                           
 34678                           ;radio_driver_SX1276.c: 1369: uint8_t i;;radio_driver_SX1276.c: 1370: uint16_t retVal;;r
      +                          adio_driver_SX1276.c: 1371: retVal = 0;
 34679                           
 34680                           ;incstack = 0
 34681  007EC2  0E00               	movlw	0
 34682  007EC4  0100               	movlb	0	; () banked
 34683  007EC6  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 34684  007EC8  0E00               	movlw	0
 34685  007ECA  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 34686                           
 34687                           ; BSR set to: 0
 34688                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 34689  007ECC  0E01               	movlw	1
 34690  007ECE  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34691  007ED0  0E01               	movlw	1
 34692  007ED2  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34693  007ED4  0E00               	movlw	0
 34694  007ED6  ECD9  F035         	call	_RADIO_WriteMode
 34695                           
 34696                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 34697  007EDA  0EFF               	movlw	255
 34698  007EDC  0100               	movlb	0	; () banked
 34699  007EDE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34700  007EE0  0E11               	movlw	17
 34701  007EE2  EC6B  F051         	call	_RADIO_RegisterWrite
 34702                           
 34703                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 34704  007EE6  0E01               	movlw	1
 34705  007EE8  0100               	movlb	0	; () banked
 34706  007EEA  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34707  007EEC  0E01               	movlw	1
 34708  007EEE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34709  007EF0  0E05               	movlw	5
 34710  007EF2  ECD9  F035         	call	_RADIO_WriteMode
 34711                           
 34712                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 34713  007EF6  0E00               	movlw	0
 34714  007EF8  0100               	movlb	0	; () banked
 34715  007EFA  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 34716  007EFC                     l21588:
 34717                           
 34718                           ; BSR set to: 0
 34719                           ;radio_driver_SX1276.c: 1377: {;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 34720  007EFC  0E01               	movlw	1
 34721  007EFE  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34722  007F00  0E00               	movlw	0
 34723  007F02  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34724  007F04  0E00               	movlw	0
 34725  007F06  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34726  007F08  0E00               	movlw	0
 34727  007F0A  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34728  007F0C  ECCE  F04E         	call	_SystemBlockingWaitMs	;wreg free
 34729                           
 34730                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 34731  007F10  0100               	movlb	0	; () banked
 34732  007F12  90D8               	bcf	status,0,c
 34733  007F14  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 34734  007F16  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 34735                           
 34736                           ; BSR set to: 0
 34737                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 34738  007F18  0E2C               	movlw	44
 34739  007F1A  EC9B  F050         	call	_RADIO_RegisterRead
 34740  007F1E  0100               	movlb	0	; () banked
 34741  007F20  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 34742  007F22  0E01               	movlw	1
 34743  007F24  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 34744  007F26  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 34745  007F28  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 34746  007F2A  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 34747                           
 34748                           ; BSR set to: 0
 34749  007F2C  0E0F               	movlw	15
 34750  007F2E  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 34751  007F30  D7E5               	goto	l21588
 34752                           
 34753                           ; BSR set to: 0
 34754                           ;radio_driver_SX1276.c: 1381: };radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP,
      +                           MODULATION_LORA, 1);
 34755  007F32  0E01               	movlw	1
 34756  007F34  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34757  007F36  0E01               	movlw	1
 34758  007F38  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34759  007F3A  0E00               	movlw	0
 34760  007F3C  ECD9  F035         	call	_RADIO_WriteMode
 34761                           
 34762                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 34763  007F40  0EFF               	movlw	255
 34764  007F42  0100               	movlb	0	; () banked
 34765  007F44  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34766  007F46  0E12               	movlw	18
 34767  007F48  EC6B  F051         	call	_RADIO_RegisterWrite
 34768                           
 34769                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 34770  007F4C  0E00               	movlw	0
 34771  007F4E  0100               	movlb	0	; () banked
 34772  007F50  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34773  007F52  0E11               	movlw	17
 34774  007F54  EC6B  F051         	call	_RADIO_RegisterWrite
 34775                           
 34776                           ;radio_driver_SX1276.c: 1389: return retVal;
 34777  007F58  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 34778  007F5C  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 34779  007F60  0012               	return		;funcret
 34780  007F62                     __end_of_RADIO_ReadRandom:
 34781                           	opt callstack 0
 34782                           
 34783 ;; *************** function _LORAWAN_Reset *****************
 34784 ;; Defined at:
 34785 ;;		line 149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34786 ;; Parameters:    Size  Location     Type
 34787 ;;  ismBandNew      1    wreg     enum E6149
 34788 ;; Auto vars:     Size  Location     Type
 34789 ;;  ismBandNew      1   73[BANK0 ] enum E6149
 34790 ;; Return value:  Size  Location     Type
 34791 ;;                  1    wreg      void 
 34792 ;; Registers used:
 34793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34794 ;; Tracked objects:
 34795 ;;		On entry : 0/0
 34796 ;;		On exit  : 0/0
 34797 ;;		Unchanged: 0/0
 34798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34800 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34802 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34803 ;;Total ram usage:        1 bytes
 34804 ;; Hardware stack levels used:    1
 34805 ;; Hardware stack levels required when called:   12
 34806 ;; This function calls:
 34807 ;;		_InitDefault433Channels
 34808 ;;		_InitDefault868Channels
 34809 ;;		_LORAWAN_LinkCheckConfigure
 34810 ;;		_RADIO_Init
 34811 ;;		_RADIO_SetLoRaSyncWord
 34812 ;;		_StopAllSoftwareTimers
 34813 ;;		_UpdateMinMaxChDataRate
 34814 ;;		_memset
 34815 ;; This function is called by:
 34816 ;;		_LORAWAN_Init
 34817 ;;		_main
 34818 ;; This function uses a non-reentrant model
 34819 ;;
 34820                           
 34821                           	psect	text211
 34822  004730                     __ptext211:
 34823                           	opt callstack 0
 34824  004730                     _LORAWAN_Reset:
 34825                           	opt callstack 18
 34826                           
 34827                           ;incstack = 0
 34828                           ;LORAWAN_Reset@ismBandNew stored from wreg
 34829  004730  0100               	movlb	0	; () banked
 34830  004732  6FA9               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 34831                           
 34832                           ;lorawan_eu.c: 151: if (loRa.macInitialized == 1)
 34833  004734  0102               	movlb	2	; () banked
 34834  004736  05F5               	decf	(_loRa+240)& (0+255),w,b
 34835  004738  B4D8               	btfsc	status,2,c
 34836                           
 34837                           ; BSR set to: 2
 34838                           ;lorawan_eu.c: 152: {;lorawan_eu.c: 153: StopAllSoftwareTimers ();
 34839  00473A  ECD5  F049         	call	_StopAllSoftwareTimers	;wreg free
 34840                           
 34841                           ;lorawan_eu.c: 154: };lorawan_eu.c: 156: loRa.syncWord = 0x34;
 34842  00473E  0E34               	movlw	52
 34843  004740  0102               	movlb	2	; () banked
 34844  004742  6FF9               	movwf	(_loRa+244)& (0+255),b
 34845                           
 34846                           ; BSR set to: 2
 34847                           ;lorawan_eu.c: 157: RADIO_SetLoRaSyncWord(loRa.syncWord);
 34848  004744  51F9               	movf	(_loRa+244)& (0+255),w,b
 34849  004746  ECCE  F053         	call	_RADIO_SetLoRaSyncWord
 34850                           
 34851                           ;lorawan_eu.c: 159: loRa.macStatus.value = 0;
 34852  00474A  0E00               	movlw	0
 34853  00474C  0102               	movlb	2	; () banked
 34854  00474E  6F07               	movwf	(_loRa+2)& (0+255),b
 34855  004750  0E00               	movlw	0
 34856  004752  6F08               	movwf	(_loRa+3)& (0+255),b
 34857  004754  0E00               	movlw	0
 34858  004756  6F09               	movwf	(_loRa+4)& (0+255),b
 34859  004758  0E00               	movlw	0
 34860  00475A  6F0A               	movwf	(_loRa+5)& (0+255),b
 34861                           
 34862                           ; BSR set to: 2
 34863                           ;lorawan_eu.c: 160: loRa.linkCheckMargin = 255;
 34864  00475C  69E2               	setf	(_loRa+221)& (0+255),b
 34865                           
 34866                           ; BSR set to: 2
 34867                           ;lorawan_eu.c: 161: loRa.linkCheckGwCnt = 0;
 34868  00475E  0E00               	movlw	0
 34869  004760  6FE3               	movwf	(_loRa+222)& (0+255),b
 34870                           
 34871                           ; BSR set to: 2
 34872                           ;lorawan_eu.c: 162: loRa.lastTimerValue = 0;
 34873  004762  0E00               	movlw	0
 34874  004764  6FCD               	movwf	(_loRa+200)& (0+255),b
 34875  004766  0E00               	movlw	0
 34876  004768  6FCE               	movwf	(_loRa+201)& (0+255),b
 34877  00476A  0E00               	movlw	0
 34878  00476C  6FCF               	movwf	(_loRa+202)& (0+255),b
 34879  00476E  0E00               	movlw	0
 34880  004770  6FD0               	movwf	(_loRa+203)& (0+255),b
 34881                           
 34882                           ; BSR set to: 2
 34883                           ;lorawan_eu.c: 163: loRa.lastPacketLength = 0;
 34884  004772  0E00               	movlw	0
 34885  004774  6FDA               	movwf	(_loRa+213)& (0+255),b
 34886  004776  0E00               	movlw	0
 34887  004778  6FD9               	movwf	(_loRa+212)& (0+255),b
 34888                           
 34889                           ; BSR set to: 2
 34890                           ;lorawan_eu.c: 164: loRa.fCntDown.value = 0;
 34891  00477A  0E00               	movlw	0
 34892  00477C  6F0F               	movwf	(_loRa+10)& (0+255),b
 34893  00477E  0E00               	movlw	0
 34894  004780  6F10               	movwf	(_loRa+11)& (0+255),b
 34895  004782  0E00               	movlw	0
 34896  004784  6F11               	movwf	(_loRa+12)& (0+255),b
 34897  004786  0E00               	movlw	0
 34898  004788  6F12               	movwf	(_loRa+13)& (0+255),b
 34899                           
 34900                           ; BSR set to: 2
 34901                           ;lorawan_eu.c: 165: loRa.fCntUp.value = 0;
 34902  00478A  0E00               	movlw	0
 34903  00478C  6F0B               	movwf	(_loRa+6)& (0+255),b
 34904  00478E  0E00               	movlw	0
 34905  004790  6F0C               	movwf	(_loRa+7)& (0+255),b
 34906  004792  0E00               	movlw	0
 34907  004794  6F0D               	movwf	(_loRa+8)& (0+255),b
 34908  004796  0E00               	movlw	0
 34909  004798  6F0E               	movwf	(_loRa+9)& (0+255),b
 34910                           
 34911                           ; BSR set to: 2
 34912                           ;lorawan_eu.c: 166: loRa.devNonce = 0;
 34913  00479A  0E00               	movlw	0
 34914  00479C  6FD8               	movwf	(_loRa+211)& (0+255),b
 34915  00479E  0E00               	movlw	0
 34916  0047A0  6FD7               	movwf	(_loRa+210)& (0+255),b
 34917                           
 34918                           ; BSR set to: 2
 34919                           ;lorawan_eu.c: 167: loRa.prescaler = 1;
 34920  0047A2  0E00               	movlw	0
 34921  0047A4  6FE1               	movwf	(_loRa+220)& (0+255),b
 34922  0047A6  0E01               	movlw	1
 34923  0047A8  6FE0               	movwf	(_loRa+219)& (0+255),b
 34924                           
 34925                           ; BSR set to: 2
 34926                           ;lorawan_eu.c: 168: loRa.adrAckCnt = 0;
 34927  0047AA  0E00               	movlw	0
 34928  0047AC  6FD6               	movwf	(_loRa+209)& (0+255),b
 34929  0047AE  0E00               	movlw	0
 34930  0047B0  6FD5               	movwf	(_loRa+208)& (0+255),b
 34931                           
 34932                           ; BSR set to: 2
 34933                           ;lorawan_eu.c: 169: loRa.counterAdrAckDelay = 0;
 34934  0047B2  0E00               	movlw	0
 34935  0047B4  6FF3               	movwf	(_loRa+238)& (0+255),b
 34936                           
 34937                           ; BSR set to: 2
 34938                           ;lorawan_eu.c: 170: loRa.offset = 0;
 34939  0047B6  0E00               	movlw	0
 34940  0047B8  6FF4               	movwf	(_loRa+239)& (0+255),b
 34941                           
 34942                           ; BSR set to: 2
 34943                           ;lorawan_eu.c: 171: loRa.lastTimerValue = 0;
 34944  0047BA  0E00               	movlw	0
 34945  0047BC  6FCD               	movwf	(_loRa+200)& (0+255),b
 34946  0047BE  0E00               	movlw	0
 34947  0047C0  6FCE               	movwf	(_loRa+201)& (0+255),b
 34948  0047C2  0E00               	movlw	0
 34949  0047C4  6FCF               	movwf	(_loRa+202)& (0+255),b
 34950  0047C6  0E00               	movlw	0
 34951  0047C8  6FD0               	movwf	(_loRa+203)& (0+255),b
 34952                           
 34953                           ; BSR set to: 2
 34954                           ;lorawan_eu.c: 174: loRa.macStatus.linkCheck = 0;
 34955  0047CA  9508               	bcf	(_loRa+3)& (0+255),2,b
 34956                           
 34957                           ; BSR set to: 2
 34958                           ;lorawan_eu.c: 177: loRa.macStatus.value = 0;
 34959  0047CC  0E00               	movlw	0
 34960  0047CE  6F07               	movwf	(_loRa+2)& (0+255),b
 34961  0047D0  0E00               	movlw	0
 34962  0047D2  6F08               	movwf	(_loRa+3)& (0+255),b
 34963  0047D4  0E00               	movlw	0
 34964  0047D6  6F09               	movwf	(_loRa+4)& (0+255),b
 34965  0047D8  0E00               	movlw	0
 34966  0047DA  6F0A               	movwf	(_loRa+5)& (0+255),b
 34967                           
 34968                           ; BSR set to: 2
 34969                           ;lorawan_eu.c: 178: loRa.lorawanMacStatus.value = 0;
 34970  0047DC  0E00               	movlw	0
 34971  0047DE  6F06               	movwf	(_loRa+1)& (0+255),b
 34972  0047E0  0E00               	movlw	0
 34973  0047E2  6F05               	movwf	_loRa& (0+255),b
 34974                           
 34975                           ; BSR set to: 2
 34976                           ;lorawan_eu.c: 180: loRa.maxRepetitionsConfirmedUplink = 7;
 34977  0047E4  0E07               	movlw	7
 34978  0047E6  6FDC               	movwf	(_loRa+215)& (0+255),b
 34979                           
 34980                           ; BSR set to: 2
 34981                           ;lorawan_eu.c: 181: loRa.maxRepetitionsUnconfirmedUplink = 0;
 34982  0047E8  0E00               	movlw	0
 34983  0047EA  6FDB               	movwf	(_loRa+214)& (0+255),b
 34984                           
 34985                           ; BSR set to: 2
 34986                           ;lorawan_eu.c: 182: loRa.counterRepetitionsConfirmedUplink = 1;
 34987  0047EC  0E01               	movlw	1
 34988  0047EE  6FDE               	movwf	(_loRa+217)& (0+255),b
 34989                           
 34990                           ; BSR set to: 2
 34991                           ;lorawan_eu.c: 183: loRa.counterRepetitionsUnconfirmedUplink = 1;
 34992  0047F0  0E01               	movlw	1
 34993  0047F2  6FDD               	movwf	(_loRa+216)& (0+255),b
 34994                           
 34995                           ; BSR set to: 2
 34996                           ;lorawan_eu.c: 185: loRa.batteryLevel = (0xFF);
 34997  0047F4  69E5               	setf	(_loRa+224)& (0+255),b
 34998                           
 34999                           ; BSR set to: 2
 35000                           ;lorawan_eu.c: 187: loRa.ismBand = ismBandNew;
 35001  0047F6  C0A9  F2A9         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 35002                           
 35003                           ; BSR set to: 2
 35004                           ;lorawan_eu.c: 189: loRa.deviceClass = CLASS_A;
 35005  0047FA  0E00               	movlw	0
 35006  0047FC  6F17               	movwf	(_loRa+18)& (0+255),b
 35007                           
 35008                           ; BSR set to: 2
 35009                           ;lorawan_eu.c: 192: loRa.maxChannels = 16;
 35010  0047FE  0E10               	movlw	16
 35011  004800  6FF2               	movwf	(_loRa+237)& (0+255),b
 35012                           
 35013                           ; BSR set to: 2
 35014                           ;lorawan_eu.c: 193: if(ISM_EU868 == ismBandNew)
 35015  004802  0100               	movlb	0	; () banked
 35016  004804  51A9               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 35017  004806  A4D8               	btfss	status,2,c
 35018  004808  D01B               	goto	l21670
 35019                           
 35020                           ; BSR set to: 0
 35021                           ;lorawan_eu.c: 194: {;lorawan_eu.c: 195: RADIO_Init(&radioBuffer[16], (868100000));
 35022  00480A  0ED7               	movlw	low (_radioBuffer+16)
 35023  00480C  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 35024  00480E  0E07               	movlw	high (_radioBuffer+16)
 35025  004810  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 35026  004812  0EA0               	movlw	160
 35027  004814  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 35028  004816  0E27               	movlw	39
 35029  004818  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 35030  00481A  0EBE               	movlw	190
 35031  00481C  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 35032  00481E  0E33               	movlw	51
 35033  004820  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 35034  004822  EC63  F025         	call	_RADIO_Init	;wreg free
 35035                           
 35036                           ;lorawan_eu.c: 197: InitDefault868Channels ();
 35037  004826  EC9E  F044         	call	_InitDefault868Channels	;wreg free
 35038                           
 35039                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.dataRate = (0);
 35040  00482A  0E00               	movlw	0
 35041  00482C  0102               	movlb	2	; () banked
 35042  00482E  6F21               	movwf	(_loRa+28)& (0+255),b
 35043                           
 35044                           ; BSR set to: 2
 35045                           ;lorawan_eu.c: 200: loRa.receiveWindow2Parameters.frequency = (869525000);
 35046  004830  0E08               	movlw	8
 35047  004832  6F1D               	movwf	(_loRa+24)& (0+255),b
 35048  004834  0EE6               	movlw	230
 35049  004836  6F1E               	movwf	(_loRa+25)& (0+255),b
 35050  004838  0ED3               	movlw	211
 35051  00483A  6F1F               	movwf	(_loRa+26)& (0+255),b
 35052  00483C  0E33               	movlw	51
 35053  00483E  D01A               	goto	L34
 35054  004840                     l21670:
 35055                           
 35056                           ; BSR set to: 0
 35057                           ;lorawan_eu.c: 202: else;lorawan_eu.c: 203: {;lorawan_eu.c: 204: RADIO_Init(&radioBuffer
      +                          [16], (433300000));
 35058  004840  0ED7               	movlw	low (_radioBuffer+16)
 35059  004842  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 35060  004844  0E07               	movlw	high (_radioBuffer+16)
 35061  004846  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 35062  004848  0E20               	movlw	32
 35063  00484A  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 35064  00484C  0EA2               	movlw	162
 35065  00484E  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 35066  004850  0ED3               	movlw	211
 35067  004852  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 35068  004854  0E19               	movlw	25
 35069  004856  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 35070  004858  EC63  F025         	call	_RADIO_Init	;wreg free
 35071                           
 35072                           ;lorawan_eu.c: 206: InitDefault433Channels ();
 35073  00485C  ECDA  F044         	call	_InitDefault433Channels	;wreg free
 35074                           
 35075                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.dataRate = (0);
 35076  004860  0E00               	movlw	0
 35077  004862  0102               	movlb	2	; () banked
 35078  004864  6F21               	movwf	(_loRa+28)& (0+255),b
 35079                           
 35080                           ; BSR set to: 2
 35081                           ;lorawan_eu.c: 209: loRa.receiveWindow2Parameters.frequency = (434665000);
 35082  004866  0E28               	movlw	40
 35083  004868  6F1D               	movwf	(_loRa+24)& (0+255),b
 35084  00486A  0E76               	movlw	118
 35085  00486C  6F1E               	movwf	(_loRa+25)& (0+255),b
 35086  00486E  0EE8               	movlw	232
 35087  004870  6F1F               	movwf	(_loRa+26)& (0+255),b
 35088  004872  0E19               	movlw	25
 35089  004874                     L34:
 35090  004874  6F20               	movwf	(_loRa+27)& (0+255),b
 35091                           
 35092                           ; BSR set to: 2
 35093                           ;lorawan_eu.c: 210: };lorawan_eu.c: 212: loRa.txPower = 1;
 35094  004876  0E01               	movlw	1
 35095  004878  6FE6               	movwf	(_loRa+225)& (0+255),b
 35096                           
 35097                           ; BSR set to: 2
 35098                           ;lorawan_eu.c: 214: loRa.currentDataRate = 0;
 35099  00487A  0E00               	movlw	0
 35100  00487C  6FE4               	movwf	(_loRa+223)& (0+255),b
 35101                           
 35102                           ; BSR set to: 2
 35103                           ;lorawan_eu.c: 216: UpdateMinMaxChDataRate ();
 35104  00487E  ECBA  F03B         	call	_UpdateMinMaxChDataRate	;wreg free
 35105                           
 35106                           ;lorawan_eu.c: 219: loRa.macKeys.value = 0;
 35107  004882  0E00               	movlw	0
 35108  004884  0102               	movlb	2	; () banked
 35109  004886  6FAB               	movwf	(_loRa+166)& (0+255),b
 35110  004888  0E00               	movlw	0
 35111  00488A  6FAA               	movwf	(_loRa+165)& (0+255),b
 35112                           
 35113                           ; BSR set to: 2
 35114                           ;lorawan_eu.c: 220: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 35115  00488C  0E22               	movlw	low (_loRa+29)
 35116  00488E  0100               	movlb	0	; () banked
 35117  004890  6F60               	movwf	memset@p1& (0+255),b
 35118  004892  0E02               	movlw	high (_loRa+29)
 35119  004894  6F61               	movwf	(memset@p1+1)& (0+255),b
 35120  004896  0E00               	movlw	0
 35121  004898  6F63               	movwf	(memset@c+1)& (0+255),b
 35122  00489A  0E00               	movlw	0
 35123  00489C  6F62               	movwf	memset@c& (0+255),b
 35124  00489E  0E00               	movlw	0
 35125  0048A0  6F65               	movwf	(memset@n+1)& (0+255),b
 35126  0048A2  0E69               	movlw	105
 35127  0048A4  6F64               	movwf	memset@n& (0+255),b
 35128  0048A6  EC70  F04F         	call	_memset	;wreg free
 35129                           
 35130                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay1 = 1000UL;
 35131  0048AA  0E03               	movlw	3
 35132  0048AC  0102               	movlb	2	; () banked
 35133  0048AE  6F9A               	movwf	(_loRa+149)& (0+255),b
 35134  0048B0  0EE8               	movlw	232
 35135  0048B2  6F99               	movwf	(_loRa+148)& (0+255),b
 35136                           
 35137                           ; BSR set to: 2
 35138                           ;lorawan_eu.c: 224: loRa.protocolParameters.receiveDelay2 = 2000UL;
 35139  0048B4  0E07               	movlw	7
 35140  0048B6  6F9C               	movwf	(_loRa+151)& (0+255),b
 35141  0048B8  0ED0               	movlw	208
 35142  0048BA  6F9B               	movwf	(_loRa+150)& (0+255),b
 35143                           
 35144                           ; BSR set to: 2
 35145                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 35146  0048BC  0E13               	movlw	19
 35147  0048BE  6F9E               	movwf	(_loRa+153)& (0+255),b
 35148  0048C0  0E88               	movlw	136
 35149  0048C2  6F9D               	movwf	(_loRa+152)& (0+255),b
 35150                           
 35151                           ; BSR set to: 2
 35152                           ;lorawan_eu.c: 226: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 35153  0048C4  0E17               	movlw	23
 35154  0048C6  6FA0               	movwf	(_loRa+155)& (0+255),b
 35155  0048C8  0E70               	movlw	112
 35156  0048CA  6F9F               	movwf	(_loRa+154)& (0+255),b
 35157                           
 35158                           ; BSR set to: 2
 35159                           ;lorawan_eu.c: 227: loRa.protocolParameters.ackTimeout = 2000;
 35160  0048CC  0E07               	movlw	7
 35161  0048CE  6FA6               	movwf	(_loRa+161)& (0+255),b
 35162  0048D0  0ED0               	movlw	208
 35163  0048D2  6FA5               	movwf	(_loRa+160)& (0+255),b
 35164                           
 35165                           ; BSR set to: 2
 35166                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckDelay = 32;
 35167  0048D4  0E20               	movlw	32
 35168  0048D6  6FA8               	movwf	(_loRa+163)& (0+255),b
 35169                           
 35170                           ; BSR set to: 2
 35171                           ;lorawan_eu.c: 229: loRa.protocolParameters.adrAckLimit = 64;
 35172  0048D8  0E40               	movlw	64
 35173  0048DA  6FA7               	movwf	(_loRa+162)& (0+255),b
 35174                           
 35175                           ; BSR set to: 2
 35176                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxFcntGap = 16384;
 35177  0048DC  0E40               	movlw	64
 35178  0048DE  6FA2               	movwf	(_loRa+157)& (0+255),b
 35179  0048E0  0E00               	movlw	0
 35180  0048E2  6FA1               	movwf	(_loRa+156)& (0+255),b
 35181                           
 35182                           ; BSR set to: 2
 35183                           ;lorawan_eu.c: 231: loRa.protocolParameters.maxMultiFcntGap = 16384;
 35184  0048E4  0E40               	movlw	64
 35185  0048E6  6FA4               	movwf	(_loRa+159)& (0+255),b
 35186  0048E8  0E00               	movlw	0
 35187  0048EA  6FA3               	movwf	(_loRa+158)& (0+255),b
 35188                           
 35189                           ; BSR set to: 2
 35190                           ;lorawan_eu.c: 233: LORAWAN_LinkCheckConfigure (0);
 35191  0048EC  0E00               	movlw	0
 35192  0048EE  0100               	movlb	0	; () banked
 35193  0048F0  6F9F               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 35194  0048F2  0E00               	movlw	0
 35195  0048F4  6F9E               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 35196  0048F6  EC37  F029         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 35197  0048FA  0012               	return		;funcret
 35198  0048FC                     __end_of_LORAWAN_Reset:
 35199                           	opt callstack 0
 35200                           
 35201 ;; *************** function _UpdateMinMaxChDataRate *****************
 35202 ;; Defined at:
 35203 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35204 ;; Parameters:    Size  Location     Type
 35205 ;;		None
 35206 ;; Auto vars:     Size  Location     Type
 35207 ;;  i               1    1[BANK0 ] unsigned char 
 35208 ;; Return value:  Size  Location     Type
 35209 ;;                  1    wreg      void 
 35210 ;; Registers used:
 35211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35212 ;; Tracked objects:
 35213 ;;		On entry : 0/0
 35214 ;;		On exit  : 0/0
 35215 ;;		Unchanged: 0/0
 35216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35220 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35221 ;;Total ram usage:        2 bytes
 35222 ;; Hardware stack levels used:    1
 35223 ;; Hardware stack levels required when called:    7
 35224 ;; This function calls:
 35225 ;;		Nothing
 35226 ;; This function is called by:
 35227 ;;		_LORAWAN_Reset
 35228 ;; This function uses a non-reentrant model
 35229 ;;
 35230                           
 35231                           	psect	text212
 35232  007774                     __ptext212:
 35233                           	opt callstack 0
 35234  007774                     _UpdateMinMaxChDataRate:
 35235                           	opt callstack 22
 35236                           
 35237                           ;lorawan.c: 1065: uint8_t i;;lorawan.c: 1068: loRa.minDataRate = 7;
 35238                           
 35239                           ;incstack = 0
 35240  007774  0E07               	movlw	7
 35241  007776  0102               	movlb	2	; () banked
 35242  007778  6FF0               	movwf	(_loRa+235)& (0+255),b
 35243                           
 35244                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 35245  00777A  0E00               	movlw	0
 35246  00777C  6FF1               	movwf	(_loRa+236)& (0+255),b
 35247                           
 35248                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 35249  00777E  0E00               	movlw	0
 35250  007780  0100               	movlb	0	; () banked
 35251  007782  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 35252  007784  D055               	goto	l15926
 35253  007786                     l15914:
 35254                           
 35255                           ; BSR set to: 0
 35256                           ;lorawan.c: 1072: {;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate)
      +                           && (Channels[i].status == 1) )
 35257  007786  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35258  007788  0D0E               	mullw	14
 35259  00778A  0E19               	movlw	low (_Channels+5)
 35260  00778C  24F3               	addwf	prodl,w,c
 35261  00778E  6ED9               	movwf	fsr2l,c
 35262  007790  0E04               	movlw	high (_Channels+5)
 35263  007792  20F4               	addwfc	prodh,w,c
 35264  007794  6EDA               	movwf	fsr2h,c
 35265  007796  0104               	movlb	4	; () banked
 35266  007798  50DF               	movf	223,w,c
 35267  00779A  0B0F               	andlw	15
 35268  00779C  0100               	movlb	0	; () banked
 35269  00779E  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 35270  0077A0  0102               	movlb	2	; () banked
 35271  0077A2  51F0               	movf	(_loRa+235)& (0+255),w,b
 35272  0077A4  0100               	movlb	0	; () banked
 35273  0077A6  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 35274  0077A8  B0D8               	btfsc	status,0,c
 35275  0077AA  D018               	goto	l1888
 35276                           
 35277                           ; BSR set to: 0
 35278  0077AC  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35279  0077AE  0D0E               	mullw	14
 35280  0077B0  0E18               	movlw	low (_Channels+4)
 35281  0077B2  24F3               	addwf	prodl,w,c
 35282  0077B4  6ED9               	movwf	fsr2l,c
 35283  0077B6  0E04               	movlw	high (_Channels+4)
 35284  0077B8  20F4               	addwfc	prodh,w,c
 35285  0077BA  6EDA               	movwf	fsr2h,c
 35286  0077BC  04DE               	decf	postinc2,w,c
 35287  0077BE  A4D8               	btfss	status,2,c
 35288  0077C0  D00D               	goto	l1888
 35289                           
 35290                           ; BSR set to: 0
 35291                           ;lorawan.c: 1074: {;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 35292  0077C2  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35293  0077C4  0D0E               	mullw	14
 35294  0077C6  0E19               	movlw	low (_Channels+5)
 35295  0077C8  24F3               	addwf	prodl,w,c
 35296  0077CA  6ED9               	movwf	fsr2l,c
 35297  0077CC  0E04               	movlw	high (_Channels+5)
 35298  0077CE  20F4               	addwfc	prodh,w,c
 35299  0077D0  6EDA               	movwf	fsr2h,c
 35300  0077D2  0104               	movlb	4	; () banked
 35301  0077D4  50DF               	movf	223,w,c
 35302  0077D6  0B0F               	andlw	15
 35303  0077D8  0102               	movlb	2	; () banked
 35304  0077DA  6FF0               	movwf	(_loRa+235)& (0+255),b
 35305  0077DC                     l1888:
 35306                           
 35307                           ;lorawan.c: 1076: };lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate)
      +                           && (Channels[i].status == 1) )
 35308  0077DC  0100               	movlb	0	; () banked
 35309  0077DE  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35310  0077E0  0D0E               	mullw	14
 35311  0077E2  0E19               	movlw	low (_Channels+5)
 35312  0077E4  24F3               	addwf	prodl,w,c
 35313  0077E6  6ED9               	movwf	fsr2l,c
 35314  0077E8  0E04               	movlw	high (_Channels+5)
 35315  0077EA  20F4               	addwfc	prodh,w,c
 35316  0077EC  6EDA               	movwf	fsr2h,c
 35317  0077EE  0104               	movlb	4	; () banked
 35318  0077F0  38DF               	swapf	223,w,c
 35319  0077F2  0B0F               	andlw	15
 35320  0077F4  0102               	movlb	2	; () banked
 35321  0077F6  61F1               	cpfslt	(_loRa+236)& (0+255),b
 35322  0077F8  D019               	goto	l15924
 35323                           
 35324                           ; BSR set to: 2
 35325  0077FA  0100               	movlb	0	; () banked
 35326  0077FC  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35327  0077FE  0D0E               	mullw	14
 35328  007800  0E18               	movlw	low (_Channels+4)
 35329  007802  24F3               	addwf	prodl,w,c
 35330  007804  6ED9               	movwf	fsr2l,c
 35331  007806  0E04               	movlw	high (_Channels+4)
 35332  007808  20F4               	addwfc	prodh,w,c
 35333  00780A  6EDA               	movwf	fsr2h,c
 35334  00780C  04DE               	decf	postinc2,w,c
 35335  00780E  A4D8               	btfss	status,2,c
 35336  007810  D00D               	goto	l15924
 35337                           
 35338                           ; BSR set to: 0
 35339                           ;lorawan.c: 1078: {;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 35340  007812  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35341  007814  0D0E               	mullw	14
 35342  007816  0E19               	movlw	low (_Channels+5)
 35343  007818  24F3               	addwf	prodl,w,c
 35344  00781A  6ED9               	movwf	fsr2l,c
 35345  00781C  0E04               	movlw	high (_Channels+5)
 35346  00781E  20F4               	addwfc	prodh,w,c
 35347  007820  6EDA               	movwf	fsr2h,c
 35348  007822  0104               	movlb	4	; () banked
 35349  007824  38DF               	swapf	223,w,c
 35350  007826  0B0F               	andlw	15
 35351  007828  0102               	movlb	2	; () banked
 35352  00782A  6FF1               	movwf	(_loRa+236)& (0+255),b
 35353  00782C                     l15924:
 35354  00782C  0100               	movlb	0	; () banked
 35355  00782E  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 35356  007830                     l15926:
 35357                           
 35358                           ; BSR set to: 0
 35359  007830  0102               	movlb	2	; () banked
 35360  007832  51F2               	movf	(_loRa+237)& (0+255),w,b
 35361  007834  0100               	movlb	0	; () banked
 35362  007836  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35363  007838  B0D8               	btfsc	status,0,c
 35364  00783A  0012               	return	
 35365  00783C  D7A4               	goto	l15914
 35366  00783E                     __end_of_UpdateMinMaxChDataRate:
 35367                           	opt callstack 0
 35368                           
 35369 ;; *************** function _StopAllSoftwareTimers *****************
 35370 ;; Defined at:
 35371 ;;		line 966 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35372 ;; Parameters:    Size  Location     Type
 35373 ;;		None
 35374 ;; Auto vars:     Size  Location     Type
 35375 ;;		None
 35376 ;; Return value:  Size  Location     Type
 35377 ;;                  1    wreg      void 
 35378 ;; Registers used:
 35379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35380 ;; Tracked objects:
 35381 ;;		On entry : 0/0
 35382 ;;		On exit  : 0/0
 35383 ;;		Unchanged: 0/0
 35384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35389 ;;Total ram usage:        0 bytes
 35390 ;; Hardware stack levels used:    1
 35391 ;; Hardware stack levels required when called:    8
 35392 ;; This function calls:
 35393 ;;		_SwTimerStop
 35394 ;; This function is called by:
 35395 ;;		_LORAWAN_Init
 35396 ;;		_LORAWAN_Reset
 35397 ;; This function uses a non-reentrant model
 35398 ;;
 35399                           
 35400                           	psect	text213
 35401  0093AA                     __ptext213:
 35402                           	opt callstack 0
 35403  0093AA                     _StopAllSoftwareTimers:
 35404                           	opt callstack 21
 35405                           
 35406                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept1TimerId);
 35407                           
 35408                           ; BSR set to: 0
 35409                           ;incstack = 0
 35410  0093AA  0102               	movlb	2	; () banked
 35411  0093AC  51E7               	movf	(_loRa+226)& (0+255),w,b
 35412  0093AE  EC7B  F051         	call	_SwTimerStop
 35413                           
 35414                           ;lorawan_eu.c: 969: SwTimerStop(loRa.joinAccept2TimerId);
 35415  0093B2  0102               	movlb	2	; () banked
 35416  0093B4  51E8               	movf	(_loRa+227)& (0+255),w,b
 35417  0093B6  EC7B  F051         	call	_SwTimerStop
 35418                           
 35419                           ;lorawan_eu.c: 970: SwTimerStop(loRa.linkCheckTimerId);
 35420  0093BA  0102               	movlb	2	; () banked
 35421  0093BC  51EC               	movf	(_loRa+231)& (0+255),w,b
 35422  0093BE  EC7B  F051         	call	_SwTimerStop
 35423                           
 35424                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow1TimerId);
 35425  0093C2  0102               	movlb	2	; () banked
 35426  0093C4  51E9               	movf	(_loRa+228)& (0+255),w,b
 35427  0093C6  EC7B  F051         	call	_SwTimerStop
 35428                           
 35429                           ;lorawan_eu.c: 972: SwTimerStop(loRa.receiveWindow2TimerId);
 35430  0093CA  0102               	movlb	2	; () banked
 35431  0093CC  51EA               	movf	(_loRa+229)& (0+255),w,b
 35432  0093CE  EC7B  F051         	call	_SwTimerStop
 35433                           
 35434                           ;lorawan_eu.c: 973: SwTimerStop(loRa.ackTimeoutTimerId);
 35435  0093D2  0102               	movlb	2	; () banked
 35436  0093D4  51ED               	movf	(_loRa+232)& (0+255),w,b
 35437  0093D6  EC7B  F051         	call	_SwTimerStop
 35438                           
 35439                           ;lorawan_eu.c: 974: SwTimerStop(loRa.automaticReplyTimerId);
 35440  0093DA  0102               	movlb	2	; () banked
 35441  0093DC  51EB               	movf	(_loRa+230)& (0+255),w,b
 35442  0093DE  EC7B  F051         	call	_SwTimerStop
 35443                           
 35444                           ;lorawan_eu.c: 975: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 35445  0093E2  0102               	movlb	2	; () banked
 35446  0093E4  51EF               	movf	(_loRa+234)& (0+255),w,b
 35447  0093E6  EC7B  F051         	call	_SwTimerStop
 35448                           
 35449                           ;lorawan_eu.c: 976: SwTimerStop(loRa.abpJoinTimerId);
 35450  0093EA  0102               	movlb	2	; () banked
 35451  0093EC  51F8               	movf	(_loRa+243)& (0+255),w,b
 35452  0093EE  EC7B  F051         	call	_SwTimerStop
 35453                           
 35454                           ;lorawan_eu.c: 977: SwTimerStop(loRa.dutyCycleTimerId);
 35455  0093F2  0102               	movlb	2	; () banked
 35456  0093F4  51EE               	movf	(_loRa+233)& (0+255),w,b
 35457  0093F6  EC7B  F051         	call	_SwTimerStop
 35458  0093FA  0012               	return		;funcret
 35459  0093FC                     __end_of_StopAllSoftwareTimers:
 35460                           	opt callstack 0
 35461                           
 35462 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 35463 ;; Defined at:
 35464 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35465 ;; Parameters:    Size  Location     Type
 35466 ;;  syncWord        1    wreg     unsigned char 
 35467 ;; Auto vars:     Size  Location     Type
 35468 ;;  syncWord        1    0[BANK0 ] unsigned char 
 35469 ;; Return value:  Size  Location     Type
 35470 ;;                  1    wreg      void 
 35471 ;; Registers used:
 35472 ;;		wreg
 35473 ;; Tracked objects:
 35474 ;;		On entry : 0/0
 35475 ;;		On exit  : 0/0
 35476 ;;		Unchanged: 0/0
 35477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35479 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35481 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35482 ;;Total ram usage:        1 bytes
 35483 ;; Hardware stack levels used:    1
 35484 ;; Hardware stack levels required when called:    7
 35485 ;; This function calls:
 35486 ;;		Nothing
 35487 ;; This function is called by:
 35488 ;;		_LORAWAN_Reset
 35489 ;;		_ConfigureRadio
 35490 ;; This function uses a non-reentrant model
 35491 ;;
 35492                           
 35493                           	psect	text214
 35494  00A79C                     __ptext214:
 35495                           	opt callstack 0
 35496  00A79C                     _RADIO_SetLoRaSyncWord:
 35497                           	opt callstack 17
 35498                           
 35499                           ;incstack = 0
 35500                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 35501  00A79C  0100               	movlb	0	; () banked
 35502  00A79E  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 35503                           
 35504                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 35505  00A7A0  C060  F137         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 35506  00A7A4  0012               	return		;funcret
 35507  00A7A6                     __end_of_RADIO_SetLoRaSyncWord:
 35508                           	opt callstack 0
 35509                           
 35510 ;; *************** function _RADIO_Init *****************
 35511 ;; Defined at:
 35512 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35513 ;; Parameters:    Size  Location     Type
 35514 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 35515 ;;		 -> radioBuffer(271), 
 35516 ;;  frequency       4   27[BANK0 ] unsigned long 
 35517 ;; Auto vars:     Size  Location     Type
 35518 ;;		None
 35519 ;; Return value:  Size  Location     Type
 35520 ;;                  1    wreg      void 
 35521 ;; Registers used:
 35522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35523 ;; Tracked objects:
 35524 ;;		On entry : 0/0
 35525 ;;		On exit  : 0/0
 35526 ;;		Unchanged: 0/0
 35527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35528 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35530 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35531 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35532 ;;Total ram usage:        7 bytes
 35533 ;; Hardware stack levels used:    1
 35534 ;; Hardware stack levels required when called:   11
 35535 ;; This function calls:
 35536 ;;		_RADIO_RegisterRead
 35537 ;;		_RADIO_RegisterWrite
 35538 ;;		_RADIO_Reset
 35539 ;;		_RADIO_WriteFrequency
 35540 ;;		_RADIO_WriteMode
 35541 ;;		_SwTimerCreate
 35542 ;;		_SwTimerSetCallback
 35543 ;;		_SwTimerStop
 35544 ;; This function is called by:
 35545 ;;		_LORAWAN_Init
 35546 ;;		_LORAWAN_Reset
 35547 ;; This function uses a non-reentrant model
 35548 ;;
 35549                           
 35550                           	psect	text215
 35551  004AC6                     __ptext215:
 35552                           	opt callstack 0
 35553  004AC6                     _RADIO_Init:
 35554                           	opt callstack 18
 35555                           
 35556                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 35557                           
 35558                           ;incstack = 0
 35559  004AC6  C07B  F129         	movff	RADIO_Init@frequency,_RadioConfiguration
 35560  004ACA  C07C  F12A         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 35561  004ACE  C07D  F12B         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 35562  004AD2  C07E  F12C         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 35563                           
 35564                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 35565  004AD6  0EA8               	movlw	168
 35566  004AD8  0101               	movlb	1	; () banked
 35567  004ADA  6F2D               	movwf	(_RadioConfiguration+4)& (0+255),b
 35568  004ADC  0E61               	movlw	97
 35569  004ADE  6F2E               	movwf	(_RadioConfiguration+5)& (0+255),b
 35570  004AE0  0E00               	movlw	0
 35571  004AE2  6F2F               	movwf	(_RadioConfiguration+6)& (0+255),b
 35572  004AE4  0E00               	movlw	0
 35573  004AE6  6F30               	movwf	(_RadioConfiguration+7)& (0+255),b
 35574                           
 35575                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 35576  004AE8  0E50               	movlw	80
 35577  004AEA  6F31               	movwf	(_RadioConfiguration+8)& (0+255),b
 35578  004AEC  0EC3               	movlw	195
 35579  004AEE  6F32               	movwf	(_RadioConfiguration+9)& (0+255),b
 35580  004AF0  0E00               	movlw	0
 35581  004AF2  6F33               	movwf	(_RadioConfiguration+10)& (0+255),b
 35582  004AF4  0E00               	movlw	0
 35583  004AF6  6F34               	movwf	(_RadioConfiguration+11)& (0+255),b
 35584                           
 35585                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 35586  004AF8  0E01               	movlw	1
 35587  004AFA  6F41               	movwf	(_RadioConfiguration+24)& (0+255),b
 35588                           
 35589                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 35590  004AFC  0E07               	movlw	7
 35591  004AFE  6F43               	movwf	(_RadioConfiguration+26)& (0+255),b
 35592                           
 35593                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 35594  004B00  0E01               	movlw	1
 35595  004B02  6F44               	movwf	(_RadioConfiguration+27)& (0+255),b
 35596                           
 35597                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 35598  004B04  0E01               	movlw	1
 35599  004B06  6F4A               	movwf	(_RadioConfiguration+33)& (0+255),b
 35600                           
 35601                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 35602  004B08  0E00               	movlw	0
 35603  004B0A  6F4B               	movwf	(_RadioConfiguration+34)& (0+255),b
 35604                           
 35605                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 35606  004B0C  0E00               	movlw	0
 35607  004B0E  6F36               	movwf	(_RadioConfiguration+13)& (0+255),b
 35608  004B10  0E08               	movlw	8
 35609  004B12  6F35               	movwf	(_RadioConfiguration+12)& (0+255),b
 35610                           
 35611                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 35612  004B14  0E0C               	movlw	12
 35613  004B16  6F42               	movwf	(_RadioConfiguration+25)& (0+255),b
 35614                           
 35615                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 35616  004B18  0E01               	movlw	1
 35617  004B1A  6F45               	movwf	(_RadioConfiguration+28)& (0+255),b
 35618                           
 35619                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 35620  004B1C  0E00               	movlw	0
 35621  004B1E  6F46               	movwf	(_RadioConfiguration+29)& (0+255),b
 35622                           
 35623                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 35624  004B20  0E00               	movlw	0
 35625  004B22  6F49               	movwf	(_RadioConfiguration+32)& (0+255),b
 35626                           
 35627                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 35628  004B24  0EC1               	movlw	193
 35629  004B26  6F38               	movwf	(_RadioConfiguration+15)& (0+255),b
 35630                           
 35631                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 35632  004B28  0E94               	movlw	148
 35633  004B2A  6F39               	movwf	(_RadioConfiguration+16)& (0+255),b
 35634                           
 35635                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 35636  004B2C  0EC1               	movlw	193
 35637  004B2E  6F3A               	movwf	(_RadioConfiguration+17)& (0+255),b
 35638                           
 35639                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 35640  004B30  0E03               	movlw	3
 35641  004B32  6F40               	movwf	(_RadioConfiguration+23)& (0+255),b
 35642                           
 35643                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 35644  004B34  0E34               	movlw	52
 35645  004B36  6F37               	movwf	(_RadioConfiguration+14)& (0+255),b
 35646                           
 35647                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 35648  004B38  0E00               	movlw	0
 35649  004B3A  6F4C               	movwf	(_RadioConfiguration+35)& (0+255),b
 35650                           
 35651                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 35652  004B3C  0E00               	movlw	0
 35653  004B3E  6F4D               	movwf	(_RadioConfiguration+36)& (0+255),b
 35654                           
 35655                           ; BSR set to: 1
 35656                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 35657  004B40  C079  F14E         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 35658  004B44  C07A  F14F         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 35659                           
 35660                           ; BSR set to: 1
 35661                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 35662  004B48  0E00               	movlw	0
 35663  004B4A  6F48               	movwf	(_RadioConfiguration+31)& (0+255),b
 35664  004B4C  0E00               	movlw	0
 35665  004B4E  6F47               	movwf	(_RadioConfiguration+30)& (0+255),b
 35666                           
 35667                           ; BSR set to: 1
 35668                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 35669  004B50  0E80               	movlw	128
 35670  004B52  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 35671                           
 35672                           ; BSR set to: 1
 35673                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 35674  004B54  0E98               	movlw	152
 35675  004B56  6F53               	movwf	(_RadioConfiguration+42)& (0+255),b
 35676  004B58  0E3A               	movlw	58
 35677  004B5A  6F54               	movwf	(_RadioConfiguration+43)& (0+255),b
 35678  004B5C  0E00               	movlw	0
 35679  004B5E  6F55               	movwf	(_RadioConfiguration+44)& (0+255),b
 35680  004B60  0E00               	movlw	0
 35681  004B62  6F56               	movwf	(_RadioConfiguration+45)& (0+255),b
 35682                           
 35683                           ; BSR set to: 1
 35684                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 35685  004B64  0E02               	movlw	2
 35686  004B66  6F5C               	movwf	(_RadioConfiguration+51)& (0+255),b
 35687                           
 35688                           ; BSR set to: 1
 35689                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 35690  004B68  0E0B               	movlw	11
 35691  004B6A  6F5D               	movwf	(_RadioConfiguration+52)& (0+255),b
 35692                           
 35693                           ; BSR set to: 1
 35694                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 35695  004B6C  0E12               	movlw	18
 35696  004B6E  6F5E               	movwf	(_RadioConfiguration+53)& (0+255),b
 35697                           
 35698                           ; BSR set to: 1
 35699                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 35700  004B70  0E00               	movlw	0
 35701  004B72  6F58               	movwf	(_RadioConfiguration+47)& (0+255),b
 35702  004B74  0E00               	movlw	0
 35703  004B76  6F59               	movwf	(_RadioConfiguration+48)& (0+255),b
 35704                           
 35705                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 35706  004B78  5157               	movf	(_RadioConfiguration+46)& (0+255),w,b
 35707  004B7A  A4D8               	btfss	status,2,c
 35708  004B7C  D026               	goto	l21384
 35709                           
 35710                           ; BSR set to: 1
 35711                           ;radio_driver_SX1276.c: 457: {;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirT
      +                          imerId = SwTimerCreate();
 35712  004B7E  EC16  F045         	call	_SwTimerCreate	;wreg free
 35713  004B82  0101               	movlb	1	; () banked
 35714  004B84  6F50               	movwf	(_RadioConfiguration+39)& (0+255),b
 35715                           
 35716                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 35717  004B86  EC16  F045         	call	_SwTimerCreate	;wreg free
 35718  004B8A  0101               	movlb	1	; () banked
 35719  004B8C  6F51               	movwf	(_RadioConfiguration+40)& (0+255),b
 35720                           
 35721                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 35722  004B8E  EC16  F045         	call	_SwTimerCreate	;wreg free
 35723  004B92  0101               	movlb	1	; () banked
 35724  004B94  6F52               	movwf	(_RadioConfiguration+41)& (0+255),b
 35725                           
 35726                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 35727  004B96  0E5E               	movlw	low _RADIO_RxFSKTimeout
 35728  004B98  0100               	movlb	0	; () banked
 35729  004B9A  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35730  004B9C  0E9A               	movlw	high _RADIO_RxFSKTimeout
 35731  004B9E  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35732  004BA0  0E00               	movlw	0
 35733  004BA2  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35734  004BA4  0101               	movlb	1	; () banked
 35735  004BA6  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 35736  004BA8  ECD9  F04D         	call	_SwTimerSetCallback
 35737                           
 35738                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 35739  004BAC  0EFE               	movlw	low _RADIO_WatchdogTimeout
 35740  004BAE  0100               	movlb	0	; () banked
 35741  004BB0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35742  004BB2  0E96               	movlw	high _RADIO_WatchdogTimeout
 35743  004BB4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35744  004BB6  0E00               	movlw	0
 35745  004BB8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35746  004BBA  0101               	movlb	1	; () banked
 35747  004BBC  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 35748  004BBE  ECD9  F04D         	call	_SwTimerSetCallback
 35749                           
 35750                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 35751  004BC2  0E01               	movlw	1
 35752  004BC4  0101               	movlb	1	; () banked
 35753  004BC6  6F57               	movwf	(_RadioConfiguration+46)& (0+255),b
 35754                           
 35755                           ;radio_driver_SX1276.c: 466: }
 35756  004BC8  D00B               	goto	l21386
 35757  004BCA                     l21384:
 35758                           
 35759                           ; BSR set to: 1
 35760                           ;radio_driver_SX1276.c: 467: else;radio_driver_SX1276.c: 468: {;radio_driver_SX1276.c: 4
      +                          69: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 35761  004BCA  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 35762  004BCC  EC7B  F051         	call	_SwTimerStop
 35763                           
 35764                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 35765  004BD0  0101               	movlb	1	; () banked
 35766  004BD2  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 35767  004BD4  EC7B  F051         	call	_SwTimerStop
 35768                           
 35769                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 35770  004BD8  0101               	movlb	1	; () banked
 35771  004BDA  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 35772  004BDC  EC7B  F051         	call	_SwTimerStop
 35773  004BE0                     l21386:
 35774                           
 35775                           ;radio_driver_SX1276.c: 472: };radio_driver_SX1276.c: 474: RADIO_Reset();
 35776  004BE0  ECE8  F04B         	call	_RADIO_Reset	;wreg free
 35777                           
 35778                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 35779  004BE4  0E00               	movlw	0
 35780  004BE6  0100               	movlb	0	; () banked
 35781  004BE8  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35782  004BEA  0E01               	movlw	1
 35783  004BEC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35784  004BEE  0E01               	movlw	1
 35785  004BF0  ECD9  F035         	call	_RADIO_WriteMode
 35786                           
 35787                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 35788  004BF4  C129  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 35789  004BF8  C12A  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 35790  004BFC  C12B  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 35791  004C00  C12C  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 35792  004C04  EC48  F038         	call	_RADIO_WriteFrequency	;wreg free
 35793                           
 35794                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 35795  004C08  0E42               	movlw	66
 35796  004C0A  0100               	movlb	0	; () banked
 35797  004C0C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35798  004C0E  0E3B               	movlw	59
 35799  004C10  EC6B  F051         	call	_RADIO_RegisterWrite
 35800  004C14                     l21394:
 35801  004C14  0E3B               	movlw	59
 35802  004C16  EC9B  F050         	call	_RADIO_RegisterRead
 35803  004C1A  0100               	movlb	0	; () banked
 35804  004C1C  6F7F               	movwf	??_RADIO_Init& (0+255),b
 35805  004C1E  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 35806  004C20  D7F9               	goto	l21394
 35807                           
 35808                           ; BSR set to: 0
 35809                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 35810  004C22  0E23               	movlw	35
 35811  004C24  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35812  004C26  0E0C               	movlw	12
 35813  004C28  EC6B  F051         	call	_RADIO_RegisterWrite
 35814                           
 35815                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 35816  004C2C  0E1E               	movlw	30
 35817  004C2E  0100               	movlb	0	; () banked
 35818  004C30  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35819  004C32  0E0D               	movlw	13
 35820  004C34  EC6B  F051         	call	_RADIO_RegisterWrite
 35821                           
 35822                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 35823  004C38  0EAA               	movlw	170
 35824  004C3A  0100               	movlb	0	; () banked
 35825  004C3C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35826  004C3E  0E1F               	movlw	31
 35827  004C40  EC6B  F051         	call	_RADIO_RegisterWrite
 35828                           
 35829                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 35830  004C44  0E8F               	movlw	143
 35831  004C46  0100               	movlb	0	; () banked
 35832  004C48  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35833  004C4A  0E35               	movlw	53
 35834  004C4C  EC6B  F051         	call	_RADIO_RegisterWrite
 35835                           
 35836                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 35837  004C50  0EFF               	movlw	255
 35838  004C52  0100               	movlb	0	; () banked
 35839  004C54  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35840  004C56  0E32               	movlw	50
 35841  004C58  EC6B  F051         	call	_RADIO_RegisterWrite
 35842                           
 35843                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 35844  004C5C  0E40               	movlw	64
 35845  004C5E  0100               	movlb	0	; () banked
 35846  004C60  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35847  004C62  0E31               	movlw	49
 35848  004C64  EC6B  F051         	call	_RADIO_RegisterWrite
 35849                           
 35850                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 35851  004C68  0E01               	movlw	1
 35852  004C6A  0100               	movlb	0	; () banked
 35853  004C6C  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35854  004C6E  0E01               	movlw	1
 35855  004C70  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35856  004C72  0E00               	movlw	0
 35857  004C74  ECD9  F035         	call	_RADIO_WriteMode
 35858                           
 35859                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 35860  004C78  0EFF               	movlw	255
 35861  004C7A  0100               	movlb	0	; () banked
 35862  004C7C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35863  004C7E  0E23               	movlw	35
 35864  004C80  EC6B  F051         	call	_RADIO_RegisterWrite
 35865                           
 35866                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 35867  004C84  0E42               	movlw	66
 35868  004C86  EC9B  F050         	call	_RADIO_RegisterRead
 35869  004C8A  0101               	movlb	1	; () banked
 35870  004C8C  6F5A               	movwf	(_RadioConfiguration+49)& (0+255),b
 35871                           
 35872                           ; BSR set to: 1
 35873  004C8E  0012               	return		;funcret
 35874  004C90                     __end_of_RADIO_Init:
 35875                           	opt callstack 0
 35876                           
 35877 ;; *************** function _SwTimerSetCallback *****************
 35878 ;; Defined at:
 35879 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35880 ;; Parameters:    Size  Location     Type
 35881 ;;  timerId         1    wreg     unsigned char 
 35882 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 35883 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 35884 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 35885 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 35886 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 35887 ;; Auto vars:     Size  Location     Type
 35888 ;;  timerId         1    3[BANK0 ] unsigned char 
 35889 ;; Return value:  Size  Location     Type
 35890 ;;                  1    wreg      void 
 35891 ;; Registers used:
 35892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35893 ;; Tracked objects:
 35894 ;;		On entry : 0/0
 35895 ;;		On exit  : 0/0
 35896 ;;		Unchanged: 0/0
 35897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35898 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35899 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35901 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35902 ;;Total ram usage:        4 bytes
 35903 ;; Hardware stack levels used:    1
 35904 ;; Hardware stack levels required when called:    7
 35905 ;; This function calls:
 35906 ;;		Nothing
 35907 ;; This function is called by:
 35908 ;;		_RADIO_Init
 35909 ;;		_SetCallbackSoftwareTimers
 35910 ;; This function uses a non-reentrant model
 35911 ;;
 35912                           
 35913                           	psect	text216
 35914  009BB2                     __ptext216:
 35915                           	opt callstack 0
 35916  009BB2                     _SwTimerSetCallback:
 35917                           	opt callstack 21
 35918                           
 35919                           ; BSR set to: 1
 35920                           ;incstack = 0
 35921                           ;SwTimerSetCallback@timerId stored from wreg
 35922  009BB2  0100               	movlb	0	; () banked
 35923  009BB4  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 35924                           
 35925                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 35926  009BB6  0100               	movlb	0	; () banked
 35927  009BB8  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35928  009BBA  0D08               	mullw	8
 35929  009BBC  0E06               	movlw	low (_swTimers+6)
 35930  009BBE  24F3               	addwf	prodl,w,c
 35931  009BC0  6ED9               	movwf	fsr2l,c
 35932  009BC2  0E03               	movlw	high (_swTimers+6)
 35933  009BC4  20F4               	addwfc	prodh,w,c
 35934  009BC6  6EDA               	movwf	fsr2h,c
 35935  009BC8  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 35936  009BCC  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 35937                           
 35938                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 35939  009BD0  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35940  009BD2  0D08               	mullw	8
 35941  009BD4  0E05               	movlw	low (_swTimers+5)
 35942  009BD6  24F3               	addwf	prodl,w,c
 35943  009BD8  6ED9               	movwf	fsr2l,c
 35944  009BDA  0E03               	movlw	high (_swTimers+5)
 35945  009BDC  20F4               	addwfc	prodh,w,c
 35946  009BDE  6EDA               	movwf	fsr2h,c
 35947  009BE0  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 35948                           
 35949                           ; BSR set to: 0
 35950  009BE4  0012               	return		;funcret
 35951  009BE6                     __end_of_SwTimerSetCallback:
 35952                           	opt callstack 0
 35953                           
 35954 ;; *************** function _RADIO_WriteMode *****************
 35955 ;; Defined at:
 35956 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35957 ;; Parameters:    Size  Location     Type
 35958 ;;  newMode         1    wreg     enum E6591
 35959 ;;  newModulatio    1    5[BANK0 ] enum E5853
 35960 ;;  blocking        1    6[BANK0 ] unsigned char 
 35961 ;; Auto vars:     Size  Location     Type
 35962 ;;  newMode         1   10[BANK0 ] enum E6591
 35963 ;;  opMode          1   11[BANK0 ] unsigned char 
 35964 ;;  currentMode     1    9[BANK0 ] enum E6591
 35965 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 35966 ;;  currentModul    1    7[BANK0 ] enum E5853
 35967 ;; Return value:  Size  Location     Type
 35968 ;;                  1    wreg      void 
 35969 ;; Registers used:
 35970 ;;		wreg, status,2, status,0, cstack
 35971 ;; Tracked objects:
 35972 ;;		On entry : 0/0
 35973 ;;		On exit  : 0/0
 35974 ;;		Unchanged: 0/0
 35975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35977 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35979 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35980 ;;Total ram usage:        7 bytes
 35981 ;; Hardware stack levels used:    1
 35982 ;; Hardware stack levels required when called:   10
 35983 ;; This function calls:
 35984 ;;		_HALDIO5PinValue
 35985 ;;		_RADIO_RegisterRead
 35986 ;;		_RADIO_RegisterWrite
 35987 ;;		_SystemBlockingWaitMs
 35988 ;; This function is called by:
 35989 ;;		_RADIO_Init
 35990 ;;		_RADIO_WriteConfiguration
 35991 ;;		_RADIO_Transmit
 35992 ;;		_RADIO_ReceiveStart
 35993 ;;		_RADIO_ReceiveStop
 35994 ;;		_RADIO_RxDone
 35995 ;;		_RADIO_FSKPayloadReady
 35996 ;;		_RADIO_RxTimeout
 35997 ;;		_RADIO_TxDone
 35998 ;;		_RADIO_FSKPacketSent
 35999 ;;		_RADIO_ReadRandom
 36000 ;;		_RADIO_RxFSKTimeout
 36001 ;;		_RADIO_WatchdogTimeout
 36002 ;;		_RADIO_StopCW
 36003 ;; This function uses a non-reentrant model
 36004 ;;
 36005                           
 36006                           	psect	text217
 36007  006BB2                     __ptext217:
 36008                           	opt callstack 0
 36009  006BB2                     _RADIO_WriteMode:
 36010                           	opt callstack 16
 36011                           
 36012                           ; BSR set to: 0
 36013                           ;incstack = 0
 36014                           ;RADIO_WriteMode@newMode stored from wreg
 36015  006BB2  0100               	movlb	0	; () banked
 36016  006BB4  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 36017                           
 36018                           ;radio_driver_SX1276.c: 149: uint8_t opMode;;radio_driver_SX1276.c: 150: uint8_t dioMapp
      +                          ing;;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;;radio_driver_SX127
      +                          6.c: 152: RadioMode_t currentMode;;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == ne
      +                          wModulation) &&;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == 
      +                          newMode)))
 36019  006BB6  0100               	movlb	0	; () banked
 36020  006BB8  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 36021  006BBA  A4D8               	btfss	status,2,c
 36022  006BBC  D008               	goto	l18078
 36023                           
 36024                           ; BSR set to: 0
 36025  006BBE  0E06               	movlw	6
 36026  006BC0  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 36027  006BC2  B4D8               	btfsc	status,2,c
 36028  006BC4  0012               	return	
 36029                           
 36030                           ; BSR set to: 0
 36031  006BC6  0E07               	movlw	7
 36032  006BC8  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 36033  006BCA  B4D8               	btfsc	status,2,c
 36034  006BCC  0012               	return	
 36035  006BCE                     l18078:
 36036                           
 36037                           ; BSR set to: 0
 36038                           ;radio_driver_SX1276.c: 159: };radio_driver_SX1276.c: 162: newMode &= 0x07;
 36039  006BCE  0E07               	movlw	7
 36040  006BD0  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 36041                           
 36042                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 36043  006BD2  0E01               	movlw	1
 36044  006BD4  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 36045                           
 36046                           ; BSR set to: 0
 36047                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 36048  006BD6  0E01               	movlw	1
 36049  006BD8  EC9B  F050         	call	_RADIO_RegisterRead
 36050  006BDC  0100               	movlb	0	; () banked
 36051  006BDE  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 36052                           
 36053                           ; BSR set to: 0
 36054                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 36055  006BE0  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 36056  006BE2  D002               	goto	l18086
 36057                           
 36058                           ; BSR set to: 0
 36059                           ;radio_driver_SX1276.c: 168: {;radio_driver_SX1276.c: 169: currentModulation = MODULATIO
      +                          N_LORA;
 36060  006BE4  0E01               	movlw	1
 36061  006BE6  D001               	goto	L35
 36062  006BE8                     l18086:
 36063                           
 36064                           ; BSR set to: 0
 36065                           ;radio_driver_SX1276.c: 171: else;radio_driver_SX1276.c: 172: {;radio_driver_SX1276.c: 1
      +                          73: currentModulation = MODULATION_FSK;
 36066  006BE8  0E00               	movlw	0
 36067  006BEA                     L35:
 36068  006BEA  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 36069                           
 36070                           ; BSR set to: 0
 36071                           ;radio_driver_SX1276.c: 174: };radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 36072  006BEC  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36073  006BEE  0B07               	andlw	7
 36074  006BF0  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 36075                           
 36076                           ; BSR set to: 0
 36077                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 36078  006BF2  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 36079  006BF4  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 36080  006BF6  B4D8               	btfsc	status,2,c
 36081  006BF8  D01B               	goto	l18106
 36082                           
 36083                           ; BSR set to: 0
 36084                           ;radio_driver_SX1276.c: 181: {;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode
      +                          )
 36085  006BFA  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 36086  006BFC  B4D8               	btfsc	status,2,c
 36087  006BFE  D009               	goto	l18098
 36088                           
 36089                           ; BSR set to: 0
 36090                           ;radio_driver_SX1276.c: 184: {;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opM
      +                          ode & (~0x07));
 36091  006C00  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36092  006C02  0BF8               	andlw	248
 36093  006C04  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 36094  006C06  0E01               	movlw	1
 36095  006C08  EC6B  F051         	call	_RADIO_RegisterWrite
 36096                           
 36097                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 36098  006C0C  0E00               	movlw	0
 36099  006C0E  0100               	movlb	0	; () banked
 36100  006C10  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 36101  006C12                     l18098:
 36102                           
 36103                           ; BSR set to: 0
 36104                           ;radio_driver_SX1276.c: 188: };radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModu
      +                          lation)
 36105  006C12  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 36106  006C14  A4D8               	btfss	status,2,c
 36107  006C16  D003               	goto	l18102
 36108                           
 36109                           ; BSR set to: 0
 36110                           ;radio_driver_SX1276.c: 191: {;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 36111  006C18  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36112  006C1A  0B78               	andlw	120
 36113  006C1C  D003               	goto	L36
 36114  006C1E                     l18102:
 36115                           
 36116                           ; BSR set to: 0
 36117                           ;radio_driver_SX1276.c: 195: else;radio_driver_SX1276.c: 196: {;radio_driver_SX1276.c: 1
      +                          98: opMode = 0x80 | (opMode & (~0x87));
 36118  006C1E  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36119  006C20  0B78               	andlw	120
 36120  006C22  0980               	iorlw	128
 36121  006C24                     L36:
 36122  006C24  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 36123                           
 36124                           ; BSR set to: 0
 36125                           ;radio_driver_SX1276.c: 199: };radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opM
      +                          ode);
 36126  006C26  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 36127  006C2A  0E01               	movlw	1
 36128  006C2C  EC6B  F051         	call	_RADIO_RegisterWrite
 36129  006C30                     l18106:
 36130                           
 36131                           ;radio_driver_SX1276.c: 201: };radio_driver_SX1276.c: 207: if (newMode != currentMode)
 36132  006C30  0100               	movlb	0	; () banked
 36133  006C32  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 36134  006C34  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 36135  006C36  B4D8               	btfsc	status,2,c
 36136  006C38  0012               	return	
 36137                           
 36138                           ; BSR set to: 0
 36139                           ;radio_driver_SX1276.c: 208: {;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) &
      +                          & (1 == blocking))
 36140  006C3A  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36141  006C3C  B4D8               	btfsc	status,2,c
 36142  006C3E  D015               	goto	l18122
 36143                           
 36144                           ; BSR set to: 0
 36145  006C40  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 36146  006C42  A4D8               	btfss	status,2,c
 36147  006C44  D012               	goto	l18122
 36148                           
 36149                           ; BSR set to: 0
 36150                           ;radio_driver_SX1276.c: 212: {;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRe
      +                          ad(0x41);
 36151  006C46  0E41               	movlw	65
 36152  006C48  EC9B  F050         	call	_RADIO_RegisterRead
 36153  006C4C  0100               	movlb	0	; () banked
 36154  006C4E  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 36155                           
 36156                           ; BSR set to: 0
 36157                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 36158  006C50  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 36159  006C52  A4D8               	btfss	status,2,c
 36160  006C54  D003               	goto	l18118
 36161                           
 36162                           ; BSR set to: 0
 36163                           ;radio_driver_SX1276.c: 215: {;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 36164  006C56  0E30               	movlw	48
 36165  006C58  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 36166                           
 36167                           ;radio_driver_SX1276.c: 218: }
 36168  006C5A  D002               	goto	l18120
 36169  006C5C                     l18118:
 36170                           
 36171                           ; BSR set to: 0
 36172                           ;radio_driver_SX1276.c: 219: else;radio_driver_SX1276.c: 220: {;radio_driver_SX1276.c: 2
      +                          22: dioMapping &= ~0x30;
 36173  006C5C  0ECF               	movlw	207
 36174  006C5E  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 36175  006C60                     l18120:
 36176                           
 36177                           ; BSR set to: 0
 36178                           ;radio_driver_SX1276.c: 223: };radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dio
      +                          Mapping);
 36179  006C60  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 36180  006C64  0E41               	movlw	65
 36181  006C66  EC6B  F051         	call	_RADIO_RegisterWrite
 36182  006C6A                     l18122:
 36183                           
 36184                           ;radio_driver_SX1276.c: 225: };radio_driver_SX1276.c: 228: opMode &= ~0x07;
 36185  006C6A  0EF8               	movlw	248
 36186  006C6C  0100               	movlb	0	; () banked
 36187  006C6E  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 36188                           
 36189                           ; BSR set to: 0
 36190                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 36191  006C70  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36192  006C72  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 36193                           
 36194                           ; BSR set to: 0
 36195                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 36196  006C74  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 36197  006C78  0E01               	movlw	1
 36198  006C7A  EC6B  F051         	call	_RADIO_RegisterWrite
 36199                           
 36200                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 36201  006C7E  0100               	movlb	0	; () banked
 36202  006C80  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 36203  006C82  A4D8               	btfss	status,2,c
 36204  006C84  0012               	return	
 36205                           
 36206                           ; BSR set to: 0
 36207                           ;radio_driver_SX1276.c: 234: {;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 36208  006C86  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36209  006C88  B4D8               	btfsc	status,2,c
 36210  006C8A  D006               	goto	l18134
 36211  006C8C                     u19100:
 36212  006C8C  EC63  F053         	call	_HALDIO5PinValue	;wreg free
 36213  006C90  0900               	iorlw	0
 36214  006C92  A4D8               	btfss	status,2,c
 36215  006C94  0012               	return	
 36216  006C96  D7FA               	goto	u19100
 36217  006C98                     l18134:
 36218                           
 36219                           ; BSR set to: 0
 36220                           ;radio_driver_SX1276.c: 240: else;radio_driver_SX1276.c: 241: {;radio_driver_SX1276.c: 2
      +                          42: SystemBlockingWaitMs(1);
 36221  006C98  0E01               	movlw	1
 36222  006C9A  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36223  006C9C  0E00               	movlw	0
 36224  006C9E  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36225  006CA0  0E00               	movlw	0
 36226  006CA2  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36227  006CA4  0E00               	movlw	0
 36228  006CA6  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36229  006CA8  ECCE  F04E         	call	_SystemBlockingWaitMs	;wreg free
 36230  006CAC  0012               	return		;funcret
 36231  006CAE                     __end_of_RADIO_WriteMode:
 36232                           	opt callstack 0
 36233                           
 36234 ;; *************** function _RADIO_RegisterRead *****************
 36235 ;; Defined at:
 36236 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36237 ;; Parameters:    Size  Location     Type
 36238 ;;  reg             1    wreg     unsigned char 
 36239 ;; Auto vars:     Size  Location     Type
 36240 ;;  reg             1    2[BANK0 ] unsigned char 
 36241 ;;  readValue       1    3[BANK0 ] unsigned char 
 36242 ;; Return value:  Size  Location     Type
 36243 ;;                  1    wreg      unsigned char 
 36244 ;; Registers used:
 36245 ;;		wreg, status,2, status,0, cstack
 36246 ;; Tracked objects:
 36247 ;;		On entry : 0/0
 36248 ;;		On exit  : 0/0
 36249 ;;		Unchanged: 0/0
 36250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36252 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36254 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36255 ;;Total ram usage:        2 bytes
 36256 ;; Hardware stack levels used:    1
 36257 ;; Hardware stack levels required when called:    9
 36258 ;; This function calls:
 36259 ;;		_HALSPICSAssert
 36260 ;;		_HALSPICSDeassert
 36261 ;;		_HALSPISend
 36262 ;; This function is called by:
 36263 ;;		_RADIO_WriteMode
 36264 ;;		_RADIO_WritePower
 36265 ;;		_RADIO_Init
 36266 ;;		_RADIO_WriteConfiguration
 36267 ;;		_RADIO_Transmit
 36268 ;;		_RADIO_RxDone
 36269 ;;		_RADIO_FSKPayloadReady
 36270 ;;		_RADIO_FSKPacketSent
 36271 ;;		_RADIO_FHSSChangeChannel
 36272 ;;		_RADIO_DIO0
 36273 ;;		_RADIO_DIO1
 36274 ;;		_RADIO_DIO2
 36275 ;;		_RADIO_DIO3
 36276 ;;		_RADIO_DIO4
 36277 ;;		_RADIO_DIO5
 36278 ;;		_RADIO_ReadRandom
 36279 ;;		_RADIO_RxFSKTimeout
 36280 ;; This function uses a non-reentrant model
 36281 ;;
 36282                           
 36283                           	psect	text218
 36284  00A136                     __ptext218:
 36285                           	opt callstack 0
 36286  00A136                     _RADIO_RegisterRead:
 36287                           	opt callstack 16
 36288                           
 36289                           ;incstack = 0
 36290                           ;RADIO_RegisterRead@reg stored from wreg
 36291  00A136  0100               	movlb	0	; () banked
 36292  00A138  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 36293                           
 36294                           ;radio_driver_SX1276.c: 136: uint8_t readValue;;radio_driver_SX1276.c: 137: reg &= 0x7F;
 36295  00A13A  0100               	movlb	0	; () banked
 36296  00A13C  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 36297                           
 36298                           ; BSR set to: 0
 36299                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 36300  00A13E  EC09  F054         	call	_HALSPICSAssert	;wreg free
 36301                           
 36302                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 36303  00A142  0100               	movlb	0	; () banked
 36304  00A144  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 36305  00A146  EC56  F053         	call	_HALSPISend
 36306                           
 36307                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 36308  00A14A  0EFF               	movlw	255
 36309  00A14C  EC56  F053         	call	_HALSPISend
 36310  00A150  0100               	movlb	0	; () banked
 36311  00A152  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 36312                           
 36313                           ; BSR set to: 0
 36314                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 36315  00A154  EC07  F054         	call	_HALSPICSDeassert	;wreg free
 36316                           
 36317                           ;radio_driver_SX1276.c: 142: return readValue;
 36318  00A158  0100               	movlb	0	; () banked
 36319  00A15A  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 36320                           
 36321                           ; BSR set to: 0
 36322  00A15C  0012               	return		;funcret
 36323  00A15E                     __end_of_RADIO_RegisterRead:
 36324                           	opt callstack 0
 36325                           
 36326 ;; *************** function _HALDIO5PinValue *****************
 36327 ;; Defined at:
 36328 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36329 ;; Parameters:    Size  Location     Type
 36330 ;;		None
 36331 ;; Auto vars:     Size  Location     Type
 36332 ;;		None
 36333 ;; Return value:  Size  Location     Type
 36334 ;;                  1    wreg      unsigned char 
 36335 ;; Registers used:
 36336 ;;		wreg
 36337 ;; Tracked objects:
 36338 ;;		On entry : 0/0
 36339 ;;		On exit  : 0/0
 36340 ;;		Unchanged: 0/0
 36341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36346 ;;Total ram usage:        0 bytes
 36347 ;; Hardware stack levels used:    1
 36348 ;; Hardware stack levels required when called:    7
 36349 ;; This function calls:
 36350 ;;		Nothing
 36351 ;; This function is called by:
 36352 ;;		_RADIO_WriteMode
 36353 ;; This function uses a non-reentrant model
 36354 ;;
 36355                           
 36356                           	psect	text219
 36357  00A6C6                     __ptext219:
 36358                           	opt callstack 0
 36359  00A6C6                     _HALDIO5PinValue:
 36360                           	opt callstack 18
 36361                           
 36362                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 36363                           
 36364                           ; BSR set to: 0
 36365                           ;incstack = 0
 36366  00A6C6  A081               	btfss	3969,0,c	;volatile
 36367  00A6C8  D002               	goto	u18670
 36368  00A6CA  0E01               	movlw	1
 36369  00A6CC  0012               	return	
 36370  00A6CE                     u18670:
 36371  00A6CE  0E00               	movlw	0
 36372  00A6D0  0012               	return		;funcret
 36373  00A6D2                     __end_of_HALDIO5PinValue:
 36374                           	opt callstack 0
 36375                           
 36376 ;; *************** function _RADIO_WriteFrequency *****************
 36377 ;; Defined at:
 36378 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36379 ;; Parameters:    Size  Location     Type
 36380 ;;  frequency       4   13[BANK0 ] unsigned long 
 36381 ;; Auto vars:     Size  Location     Type
 36382 ;;  num             4   21[BANK0 ] unsigned long 
 36383 ;;  num_mod         4   17[BANK0 ] unsigned long 
 36384 ;; Return value:  Size  Location     Type
 36385 ;;                  1    wreg      void 
 36386 ;; Registers used:
 36387 ;;		wreg, status,2, status,0, cstack
 36388 ;; Tracked objects:
 36389 ;;		On entry : 0/0
 36390 ;;		On exit  : 0/0
 36391 ;;		Unchanged: 0/0
 36392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36393 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36394 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36396 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36397 ;;Total ram usage:       12 bytes
 36398 ;; Hardware stack levels used:    1
 36399 ;; Hardware stack levels required when called:   10
 36400 ;; This function calls:
 36401 ;;		_RADIO_RegisterWrite
 36402 ;;		___lldiv
 36403 ;;		___llmod
 36404 ;; This function is called by:
 36405 ;;		_RADIO_Init
 36406 ;;		_RADIO_WriteConfiguration
 36407 ;;		_RADIO_FHSSChangeChannel
 36408 ;; This function uses a non-reentrant model
 36409 ;;
 36410                           
 36411                           	psect	text220
 36412  007090                     __ptext220:
 36413                           	opt callstack 0
 36414  007090                     _RADIO_WriteFrequency:
 36415                           	opt callstack 15
 36416                           
 36417                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;;radio_driver_SX1276.c: 272: num = fr
      +                          equency / 15625;
 36418                           
 36419                           ;incstack = 0
 36420  007090  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 36421  007094  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 36422  007098  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 36423  00709C  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 36424  0070A0  0E09               	movlw	9
 36425  0070A2  0100               	movlb	0	; () banked
 36426  0070A4  6F64               	movwf	___lldiv@divisor& (0+255),b
 36427  0070A6  0E3D               	movlw	61
 36428  0070A8  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36429  0070AA  0E00               	movlw	0
 36430  0070AC  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36431  0070AE  0E00               	movlw	0
 36432  0070B0  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36433  0070B2  EC6D  F042         	call	___lldiv	;wreg free
 36434  0070B6  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 36435  0070BA  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 36436  0070BE  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 36437  0070C2  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 36438                           
 36439                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 36440  0070C6  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 36441  0070CA  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 36442  0070CE  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 36443  0070D2  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 36444  0070D6  0E09               	movlw	9
 36445  0070D8  0100               	movlb	0	; () banked
 36446  0070DA  6F64               	movwf	___llmod@divisor& (0+255),b
 36447  0070DC  0E3D               	movlw	61
 36448  0070DE  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 36449  0070E0  0E00               	movlw	0
 36450  0070E2  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 36451  0070E4  0E00               	movlw	0
 36452  0070E6  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 36453  0070E8  ECC9  F046         	call	___llmod	;wreg free
 36454  0070EC  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 36455  0070F0  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 36456  0070F4  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 36457  0070F8  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 36458                           
 36459                           ;radio_driver_SX1276.c: 277: num <<= (8);
 36460  0070FC  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 36461  007100  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 36462  007104  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 36463  007108  0100               	movlb	0	; () banked
 36464  00710A  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 36465                           
 36466                           ; BSR set to: 0
 36467                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 36468  00710C  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 36469  007110  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 36470  007114  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 36471  007118  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 36472                           
 36473                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 36474  00711A  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 36475  00711E  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 36476  007122  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 36477  007126  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 36478  00712A  0E09               	movlw	9
 36479  00712C  6F64               	movwf	___lldiv@divisor& (0+255),b
 36480  00712E  0E3D               	movlw	61
 36481  007130  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36482  007132  0E00               	movlw	0
 36483  007134  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36484  007136  0E00               	movlw	0
 36485  007138  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36486  00713A  EC6D  F042         	call	___lldiv	;wreg free
 36487  00713E  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 36488  007142  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 36489  007146  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 36490  00714A  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 36491                           
 36492                           ;radio_driver_SX1276.c: 283: num += num_mod;
 36493  00714E  0100               	movlb	0	; () banked
 36494  007150  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 36495  007152  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 36496  007154  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 36497  007156  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 36498  007158  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 36499  00715A  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 36500  00715C  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 36501  00715E  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 36502                           
 36503                           ; BSR set to: 0
 36504                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 36505  007160  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 36506  007164  0E06               	movlw	6
 36507  007166  EC6B  F051         	call	_RADIO_RegisterWrite
 36508                           
 36509                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 36510  00716A  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 36511  00716E  0E07               	movlw	7
 36512  007170  EC6B  F051         	call	_RADIO_RegisterWrite
 36513                           
 36514                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 36515  007174  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 36516  007178  0E08               	movlw	8
 36517  00717A  EC6B  F051         	call	_RADIO_RegisterWrite
 36518  00717E  0012               	return		;funcret
 36519  007180                     __end_of_RADIO_WriteFrequency:
 36520                           	opt callstack 0
 36521                           
 36522 ;; *************** function ___llmod *****************
 36523 ;; Defined at:
 36524 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 36525 ;; Parameters:    Size  Location     Type
 36526 ;;  dividend        4    0[BANK0 ] unsigned long 
 36527 ;;  divisor         4    4[BANK0 ] unsigned long 
 36528 ;; Auto vars:     Size  Location     Type
 36529 ;;  counter         1    8[BANK0 ] unsigned char 
 36530 ;; Return value:  Size  Location     Type
 36531 ;;                  4    0[BANK0 ] unsigned long 
 36532 ;; Registers used:
 36533 ;;		wreg, status,2, status,0
 36534 ;; Tracked objects:
 36535 ;;		On entry : 0/0
 36536 ;;		On exit  : 0/0
 36537 ;;		Unchanged: 0/0
 36538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36539 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36540 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36542 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36543 ;;Total ram usage:        9 bytes
 36544 ;; Hardware stack levels used:    1
 36545 ;; Hardware stack levels required when called:    7
 36546 ;; This function calls:
 36547 ;;		Nothing
 36548 ;; This function is called by:
 36549 ;;		_RADIO_WriteFrequency
 36550 ;; This function uses a non-reentrant model
 36551 ;;
 36552                           
 36553                           	psect	text221
 36554  008D92                     __ptext221:
 36555                           	opt callstack 0
 36556  008D92                     ___llmod:
 36557                           	opt callstack 17
 36558                           
 36559                           ;incstack = 0
 36560  008D92  0100               	movlb	0	; () banked
 36561  008D94  5164               	movf	___llmod@divisor& (0+255),w,b
 36562  008D96  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 36563  008D98  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 36564  008D9A  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 36565  008D9C  B4D8               	btfsc	status,2,c
 36566  008D9E  D024               	goto	l3931
 36567                           
 36568                           ; BSR set to: 0
 36569  008DA0  0E01               	movlw	1
 36570  008DA2  6F68               	movwf	___llmod@counter& (0+255),b
 36571  008DA4  D006               	goto	l18010
 36572  008DA6                     l18008:
 36573                           
 36574                           ; BSR set to: 0
 36575  008DA6  90D8               	bcf	status,0,c
 36576  008DA8  3764               	rlcf	___llmod@divisor& (0+255),f,b
 36577  008DAA  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 36578  008DAC  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 36579  008DAE  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 36580  008DB0  2B68               	incf	___llmod@counter& (0+255),f,b
 36581  008DB2                     l18010:
 36582                           
 36583                           ; BSR set to: 0
 36584  008DB2  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 36585  008DB4  D7F8               	goto	l18008
 36586  008DB6                     u18860:
 36587                           
 36588                           ; BSR set to: 0
 36589  008DB6  5164               	movf	___llmod@divisor& (0+255),w,b
 36590  008DB8  5D60               	subwf	___llmod@dividend& (0+255),w,b
 36591  008DBA  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36592  008DBC  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 36593  008DBE  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36594  008DC0  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 36595  008DC2  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36596  008DC4  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 36597  008DC6  A0D8               	btfss	status,0,c
 36598  008DC8  D008               	goto	l18016
 36599                           
 36600                           ; BSR set to: 0
 36601  008DCA  5164               	movf	___llmod@divisor& (0+255),w,b
 36602  008DCC  5F60               	subwf	___llmod@dividend& (0+255),f,b
 36603  008DCE  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36604  008DD0  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 36605  008DD2  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36606  008DD4  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 36607  008DD6  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36608  008DD8  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 36609  008DDA                     l18016:
 36610                           
 36611                           ; BSR set to: 0
 36612  008DDA  90D8               	bcf	status,0,c
 36613  008DDC  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 36614  008DDE  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 36615  008DE0  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 36616  008DE2  3364               	rrcf	___llmod@divisor& (0+255),f,b
 36617                           
 36618                           ; BSR set to: 0
 36619  008DE4  2F68               	decfsz	___llmod@counter& (0+255),f,b
 36620  008DE6  D7E7               	goto	u18860
 36621  008DE8                     l3931:
 36622                           
 36623                           ; BSR set to: 0
 36624  008DE8  C060  F060         	movff	___llmod@dividend,?___llmod
 36625  008DEC  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 36626  008DF0  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 36627  008DF4  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 36628                           
 36629                           ; BSR set to: 0
 36630  008DF8  0012               	return		;funcret
 36631  008DFA                     __end_of___llmod:
 36632                           	opt callstack 0
 36633                           
 36634 ;; *************** function _RADIO_RegisterWrite *****************
 36635 ;; Defined at:
 36636 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36637 ;; Parameters:    Size  Location     Type
 36638 ;;  reg             1    wreg     unsigned char 
 36639 ;;  value           1    2[BANK0 ] unsigned char 
 36640 ;; Auto vars:     Size  Location     Type
 36641 ;;  reg             1    3[BANK0 ] unsigned char 
 36642 ;; Return value:  Size  Location     Type
 36643 ;;                  1    wreg      void 
 36644 ;; Registers used:
 36645 ;;		wreg, status,2, status,0, cstack
 36646 ;; Tracked objects:
 36647 ;;		On entry : 0/0
 36648 ;;		On exit  : 0/0
 36649 ;;		Unchanged: 0/0
 36650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36651 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36652 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36655 ;;Total ram usage:        2 bytes
 36656 ;; Hardware stack levels used:    1
 36657 ;; Hardware stack levels required when called:    9
 36658 ;; This function calls:
 36659 ;;		_HALSPICSAssert
 36660 ;;		_HALSPICSDeassert
 36661 ;;		_HALSPISend
 36662 ;; This function is called by:
 36663 ;;		_RADIO_WriteMode
 36664 ;;		_RADIO_WriteFrequency
 36665 ;;		_RADIO_WriteFSKFrequencyDeviation
 36666 ;;		_RADIO_WriteFSKBitRate
 36667 ;;		_RADIO_WritePower
 36668 ;;		_RADIO_Init
 36669 ;;		_RADIO_WriteConfiguration
 36670 ;;		_RADIO_Transmit
 36671 ;;		_RADIO_ReceiveStart
 36672 ;;		_RADIO_RxDone
 36673 ;;		_RADIO_RxTimeout
 36674 ;;		_RADIO_TxDone
 36675 ;;		_RADIO_UnhandledInterrupt
 36676 ;;		_RADIO_FHSSChangeChannel
 36677 ;;		_RADIO_ReadRandom
 36678 ;;		_RADIO_TransmitCW
 36679 ;; This function uses a non-reentrant model
 36680 ;;
 36681                           
 36682                           	psect	text222
 36683  00A2D6                     __ptext222:
 36684                           	opt callstack 0
 36685  00A2D6                     _RADIO_RegisterWrite:
 36686                           	opt callstack 16
 36687                           
 36688                           ; BSR set to: 0
 36689                           ;incstack = 0
 36690                           ;RADIO_RegisterWrite@reg stored from wreg
 36691  00A2D6  0100               	movlb	0	; () banked
 36692  00A2D8  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 36693                           
 36694                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 36695  00A2DA  EC09  F054         	call	_HALSPICSAssert	;wreg free
 36696                           
 36697                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 36698  00A2DE  0100               	movlb	0	; () banked
 36699  00A2E0  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 36700  00A2E2  0980               	iorlw	128
 36701  00A2E4  EC56  F053         	call	_HALSPISend
 36702                           
 36703                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 36704  00A2E8  0100               	movlb	0	; () banked
 36705  00A2EA  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 36706  00A2EC  EC56  F053         	call	_HALSPISend
 36707                           
 36708                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 36709  00A2F0  EC07  F054         	call	_HALSPICSDeassert	;wreg free
 36710  00A2F4  0012               	return		;funcret
 36711  00A2F6                     __end_of_RADIO_RegisterWrite:
 36712                           	opt callstack 0
 36713                           
 36714 ;; *************** function _HALSPISend *****************
 36715 ;; Defined at:
 36716 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36717 ;; Parameters:    Size  Location     Type
 36718 ;;  data            1    wreg     unsigned char 
 36719 ;; Auto vars:     Size  Location     Type
 36720 ;;  data            1    1[BANK0 ] unsigned char 
 36721 ;; Return value:  Size  Location     Type
 36722 ;;                  1    wreg      unsigned char 
 36723 ;; Registers used:
 36724 ;;		wreg, status,2, cstack
 36725 ;; Tracked objects:
 36726 ;;		On entry : 0/0
 36727 ;;		On exit  : 0/0
 36728 ;;		Unchanged: 0/0
 36729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36733 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36734 ;;Total ram usage:        1 bytes
 36735 ;; Hardware stack levels used:    1
 36736 ;; Hardware stack levels required when called:    8
 36737 ;; This function calls:
 36738 ;;		_SPI2_Exchange8bit
 36739 ;; This function is called by:
 36740 ;;		_RADIO_RegisterWrite
 36741 ;;		_RADIO_RegisterRead
 36742 ;;		_RADIO_Transmit
 36743 ;;		_RADIO_RxDone
 36744 ;;		_RADIO_FSKPayloadReady
 36745 ;; This function uses a non-reentrant model
 36746 ;;
 36747                           
 36748                           	psect	text223
 36749  00A6AC                     __ptext223:
 36750                           	opt callstack 0
 36751  00A6AC                     _HALSPISend:
 36752                           	opt callstack 16
 36753                           
 36754                           ;incstack = 0
 36755                           ;HALSPISend@data stored from wreg
 36756  00A6AC  0100               	movlb	0	; () banked
 36757  00A6AE  6F61               	movwf	HALSPISend@data& (0+255),b
 36758                           
 36759                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 36760  00A6B0  0100               	movlb	0	; () banked
 36761  00A6B2  5161               	movf	HALSPISend@data& (0+255),w,b
 36762  00A6B4  ECFA  F052         	call	_SPI2_Exchange8bit
 36763  00A6B8  0012               	return		;funcret
 36764  00A6BA                     __end_of_HALSPISend:
 36765                           	opt callstack 0
 36766                           
 36767 ;; *************** function _SPI2_Exchange8bit *****************
 36768 ;; Defined at:
 36769 ;;		line 79 in file "mcc_generated_files/spi2.c"
 36770 ;; Parameters:    Size  Location     Type
 36771 ;;  data            1    wreg     unsigned char 
 36772 ;; Auto vars:     Size  Location     Type
 36773 ;;  data            1    0[BANK0 ] unsigned char 
 36774 ;; Return value:  Size  Location     Type
 36775 ;;                  1    wreg      unsigned char 
 36776 ;; Registers used:
 36777 ;;		wreg, status,2
 36778 ;; Tracked objects:
 36779 ;;		On entry : 0/0
 36780 ;;		On exit  : 0/0
 36781 ;;		Unchanged: 0/0
 36782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36784 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36786 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36787 ;;Total ram usage:        1 bytes
 36788 ;; Hardware stack levels used:    1
 36789 ;; Hardware stack levels required when called:    7
 36790 ;; This function calls:
 36791 ;;		Nothing
 36792 ;; This function is called by:
 36793 ;;		_HALSPISend
 36794 ;;		_SPI2_Exchange8bitBuffer
 36795 ;; This function uses a non-reentrant model
 36796 ;;
 36797                           
 36798                           	psect	text224
 36799  00A5F4                     __ptext224:
 36800                           	opt callstack 0
 36801  00A5F4                     _SPI2_Exchange8bit:
 36802                           	opt callstack 16
 36803                           
 36804                           ;incstack = 0
 36805                           ;SPI2_Exchange8bit@data stored from wreg
 36806  00A5F4  0100               	movlb	0	; () banked
 36807  00A5F6  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 36808                           
 36809                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 36810  00A5F8  9E6C               	bcf	3948,7,c	;volatile
 36811                           
 36812                           ;spi2.c: 84: SSP2BUF = data;
 36813  00A5FA  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 36814  00A5FE                     l2198:
 36815  00A5FE  A06D               	btfss	3949,0,c	;volatile
 36816  00A600  D7FE               	goto	l2198
 36817                           
 36818                           ;spi2.c: 88: };spi2.c: 90: return (SSP2BUF);
 36819  00A602  506F               	movf	3951,w,c	;volatile
 36820  00A604  0012               	return		;funcret
 36821  00A606                     __end_of_SPI2_Exchange8bit:
 36822                           	opt callstack 0
 36823                           
 36824 ;; *************** function _HALSPICSDeassert *****************
 36825 ;; Defined at:
 36826 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36827 ;; Parameters:    Size  Location     Type
 36828 ;;		None
 36829 ;; Auto vars:     Size  Location     Type
 36830 ;;		None
 36831 ;; Return value:  Size  Location     Type
 36832 ;;                  1    wreg      void 
 36833 ;; Registers used:
 36834 ;;		None
 36835 ;; Tracked objects:
 36836 ;;		On entry : 0/0
 36837 ;;		On exit  : 0/0
 36838 ;;		Unchanged: 0/0
 36839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36844 ;;Total ram usage:        0 bytes
 36845 ;; Hardware stack levels used:    1
 36846 ;; Hardware stack levels required when called:    7
 36847 ;; This function calls:
 36848 ;;		Nothing
 36849 ;; This function is called by:
 36850 ;;		_RADIO_RegisterWrite
 36851 ;;		_RADIO_RegisterRead
 36852 ;;		_RADIO_Transmit
 36853 ;;		_RADIO_RxDone
 36854 ;;		_RADIO_FSKPayloadReady
 36855 ;; This function uses a non-reentrant model
 36856 ;;
 36857                           
 36858                           	psect	text225
 36859  00A80E                     __ptext225:
 36860                           	opt callstack 0
 36861  00A80E                     _HALSPICSDeassert:
 36862                           	opt callstack 17
 36863                           
 36864                           ;incstack = 0
 36865                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 36866  00A80E  868C               	bsf	3980,3,c	;volatile
 36867  00A810  0012               	return		;funcret
 36868  00A812                     __end_of_HALSPICSDeassert:
 36869                           	opt callstack 0
 36870                           
 36871 ;; *************** function _HALSPICSAssert *****************
 36872 ;; Defined at:
 36873 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36874 ;; Parameters:    Size  Location     Type
 36875 ;;		None
 36876 ;; Auto vars:     Size  Location     Type
 36877 ;;		None
 36878 ;; Return value:  Size  Location     Type
 36879 ;;                  1    wreg      void 
 36880 ;; Registers used:
 36881 ;;		None
 36882 ;; Tracked objects:
 36883 ;;		On entry : 0/0
 36884 ;;		On exit  : 0/0
 36885 ;;		Unchanged: 0/0
 36886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36891 ;;Total ram usage:        0 bytes
 36892 ;; Hardware stack levels used:    1
 36893 ;; Hardware stack levels required when called:    7
 36894 ;; This function calls:
 36895 ;;		Nothing
 36896 ;; This function is called by:
 36897 ;;		_RADIO_RegisterWrite
 36898 ;;		_RADIO_RegisterRead
 36899 ;;		_RADIO_Transmit
 36900 ;;		_RADIO_RxDone
 36901 ;;		_RADIO_FSKPayloadReady
 36902 ;; This function uses a non-reentrant model
 36903 ;;
 36904                           
 36905                           	psect	text226
 36906  00A812                     __ptext226:
 36907                           	opt callstack 0
 36908  00A812                     _HALSPICSAssert:
 36909                           	opt callstack 17
 36910                           
 36911                           ;incstack = 0
 36912                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 36913  00A812  968C               	bcf	3980,3,c	;volatile
 36914  00A814  0012               	return		;funcret
 36915  00A816                     __end_of_HALSPICSAssert:
 36916                           	opt callstack 0
 36917                           
 36918 ;; *************** function _RADIO_Reset *****************
 36919 ;; Defined at:
 36920 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36921 ;; Parameters:    Size  Location     Type
 36922 ;;		None
 36923 ;; Auto vars:     Size  Location     Type
 36924 ;;		None
 36925 ;; Return value:  Size  Location     Type
 36926 ;;                  1    wreg      void 
 36927 ;; Registers used:
 36928 ;;		wreg, status,2, status,0, cstack
 36929 ;; Tracked objects:
 36930 ;;		On entry : 0/0
 36931 ;;		On exit  : 0/0
 36932 ;;		Unchanged: 0/0
 36933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36938 ;;Total ram usage:        0 bytes
 36939 ;; Hardware stack levels used:    1
 36940 ;; Hardware stack levels required when called:    8
 36941 ;; This function calls:
 36942 ;;		_HALResetPinMakeInput
 36943 ;;		_HALResetPinMakeOutput
 36944 ;;		_HALResetPinOutputValue
 36945 ;;		_SystemBlockingWaitMs
 36946 ;; This function is called by:
 36947 ;;		_RADIO_Init
 36948 ;; This function uses a non-reentrant model
 36949 ;;
 36950                           
 36951                           	psect	text227
 36952  0097D0                     __ptext227:
 36953                           	opt callstack 0
 36954  0097D0                     _RADIO_Reset:
 36955                           	opt callstack 20
 36956                           
 36957                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 36958                           
 36959                           ;incstack = 0
 36960  0097D0  EC0B  F054         	call	_HALResetPinMakeOutput	;wreg free
 36961                           
 36962                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 36963  0097D4  0E00               	movlw	0
 36964  0097D6  EC85  F052         	call	_HALResetPinOutputValue
 36965                           
 36966                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 36967  0097DA  0E01               	movlw	1
 36968  0097DC  0100               	movlb	0	; () banked
 36969  0097DE  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36970  0097E0  0E00               	movlw	0
 36971  0097E2  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36972  0097E4  0E00               	movlw	0
 36973  0097E6  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36974  0097E8  0E00               	movlw	0
 36975  0097EA  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36976  0097EC  ECCE  F04E         	call	_SystemBlockingWaitMs	;wreg free
 36977                           
 36978                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 36979  0097F0  EC0D  F054         	call	_HALResetPinMakeInput	;wreg free
 36980                           
 36981                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 36982  0097F4  0E0A               	movlw	10
 36983  0097F6  0100               	movlb	0	; () banked
 36984  0097F8  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36985  0097FA  0E00               	movlw	0
 36986  0097FC  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36987  0097FE  0E00               	movlw	0
 36988  009800  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36989  009802  0E00               	movlw	0
 36990  009804  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36991  009806  ECCE  F04E         	call	_SystemBlockingWaitMs	;wreg free
 36992                           
 36993                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 36994  00980A  0E01               	movlw	1
 36995  00980C  EC85  F052         	call	_HALResetPinOutputValue
 36996                           
 36997                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 36998  009810  EC0B  F054         	call	_HALResetPinMakeOutput	;wreg free
 36999  009814  0012               	return		;funcret
 37000  009816                     __end_of_RADIO_Reset:
 37001                           	opt callstack 0
 37002                           
 37003 ;; *************** function _SystemBlockingWaitMs *****************
 37004 ;; Defined at:
 37005 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37006 ;; Parameters:    Size  Location     Type
 37007 ;;  ms              4    0[BANK0 ] unsigned long 
 37008 ;; Auto vars:     Size  Location     Type
 37009 ;;		None
 37010 ;; Return value:  Size  Location     Type
 37011 ;;                  1    wreg      void 
 37012 ;; Registers used:
 37013 ;;		wreg, status,2, status,0
 37014 ;; Tracked objects:
 37015 ;;		On entry : 0/0
 37016 ;;		On exit  : 0/0
 37017 ;;		Unchanged: 0/0
 37018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37019 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37021 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37022 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37023 ;;Total ram usage:        5 bytes
 37024 ;; Hardware stack levels used:    1
 37025 ;; Hardware stack levels required when called:    7
 37026 ;; This function calls:
 37027 ;;		Nothing
 37028 ;; This function is called by:
 37029 ;;		_RADIO_WriteMode
 37030 ;;		_RADIO_Reset
 37031 ;;		_RADIO_ReadRandom
 37032 ;;		_RADIO_StopCW
 37033 ;; This function uses a non-reentrant model
 37034 ;;
 37035                           
 37036                           	psect	text228
 37037  009D9C                     __ptext228:
 37038                           	opt callstack 0
 37039  009D9C                     _SystemBlockingWaitMs:
 37040                           	opt callstack 18
 37041                           
 37042                           ;sw_timer.c: 147: while (ms > 0)
 37043                           
 37044                           ;incstack = 0
 37045  009D9C  D00F               	goto	l17864
 37046  009D9E                     l17860:
 37047                           
 37048                           ; BSR set to: 0
 37049                           ;sw_timer.c: 148: {;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 37050  009D9E  0E06               	movlw	6
 37051  009DA0  0100               	movlb	0	; () banked
 37052  009DA2  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 37053  009DA4  0E30               	movlw	48
 37054  009DA6                     u25457:
 37055  009DA6  2EE8               	decfsz	wreg,f,c
 37056  009DA8  D7FE               	bra	u25457
 37057  009DAA  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 37058  009DAC  D7FC               	bra	u25457
 37059  009DAE  F000               	nop	
 37060                           
 37061                           ;sw_timer.c: 150: ms--;
 37062  009DB0  0100               	movlb	0	; () banked
 37063  009DB2  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 37064  009DB4  0E00               	movlw	0
 37065  009DB6  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 37066  009DB8  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 37067  009DBA  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 37068  009DBC                     l17864:
 37069  009DBC  0100               	movlb	0	; () banked
 37070  009DBE  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 37071  009DC0  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 37072  009DC2  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 37073  009DC4  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 37074  009DC6  B4D8               	btfsc	status,2,c
 37075  009DC8  0012               	return	
 37076  009DCA  D7E9               	goto	l17860
 37077  009DCC                     __end_of_SystemBlockingWaitMs:
 37078                           	opt callstack 0
 37079                           
 37080 ;; *************** function _HALResetPinOutputValue *****************
 37081 ;; Defined at:
 37082 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37083 ;; Parameters:    Size  Location     Type
 37084 ;;  value           1    wreg     unsigned char 
 37085 ;; Auto vars:     Size  Location     Type
 37086 ;;  value           1    0[BANK0 ] unsigned char 
 37087 ;; Return value:  Size  Location     Type
 37088 ;;                  1    wreg      void 
 37089 ;; Registers used:
 37090 ;;		wreg, status,2, status,0
 37091 ;; Tracked objects:
 37092 ;;		On entry : 0/0
 37093 ;;		On exit  : 0/0
 37094 ;;		Unchanged: 0/0
 37095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37099 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37100 ;;Total ram usage:        1 bytes
 37101 ;; Hardware stack levels used:    1
 37102 ;; Hardware stack levels required when called:    7
 37103 ;; This function calls:
 37104 ;;		Nothing
 37105 ;; This function is called by:
 37106 ;;		_RADIO_Reset
 37107 ;; This function uses a non-reentrant model
 37108 ;;
 37109                           
 37110                           	psect	text229
 37111  00A50A                     __ptext229:
 37112                           	opt callstack 0
 37113  00A50A                     _HALResetPinOutputValue:
 37114                           	opt callstack 20
 37115                           
 37116                           ; BSR set to: 0
 37117                           ;incstack = 0
 37118                           ;HALResetPinOutputValue@value stored from wreg
 37119  00A50A  0100               	movlb	0	; () banked
 37120  00A50C  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 37121                           
 37122                           ;radio_driver_hal.c: 57: if (value == 0)
 37123  00A50E  0100               	movlb	0	; () banked
 37124  00A510  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 37125  00A512  A4D8               	btfss	status,2,c
 37126  00A514  D002               	goto	l14678
 37127                           
 37128                           ; BSR set to: 0
 37129                           
 37130                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 37131  00A516  948B               	bcf	3979,2,c	;volatile
 37132  00A518  0012               	return	
 37133  00A51A                     l14678:
 37134                           
 37135                           ; BSR set to: 0
 37136                           ;radio_driver_hal.c: 59: else if (value == 1)
 37137  00A51A  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 37138  00A51C  A4D8               	btfss	status,2,c
 37139  00A51E  0012               	return	
 37140                           
 37141                           ; BSR set to: 0
 37142                           
 37143                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 37144  00A520  848B               	bsf	3979,2,c	;volatile
 37145                           
 37146                           ; BSR set to: 0
 37147  00A522  0012               	return		;funcret
 37148  00A524                     __end_of_HALResetPinOutputValue:
 37149                           	opt callstack 0
 37150                           
 37151 ;; *************** function _HALResetPinMakeOutput *****************
 37152 ;; Defined at:
 37153 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37154 ;; Parameters:    Size  Location     Type
 37155 ;;		None
 37156 ;; Auto vars:     Size  Location     Type
 37157 ;;		None
 37158 ;; Return value:  Size  Location     Type
 37159 ;;                  1    wreg      void 
 37160 ;; Registers used:
 37161 ;;		None
 37162 ;; Tracked objects:
 37163 ;;		On entry : 0/0
 37164 ;;		On exit  : 0/0
 37165 ;;		Unchanged: 0/0
 37166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37171 ;;Total ram usage:        0 bytes
 37172 ;; Hardware stack levels used:    1
 37173 ;; Hardware stack levels required when called:    7
 37174 ;; This function calls:
 37175 ;;		Nothing
 37176 ;; This function is called by:
 37177 ;;		_RADIO_Reset
 37178 ;; This function uses a non-reentrant model
 37179 ;;
 37180                           
 37181                           	psect	text230
 37182  00A816                     __ptext230:
 37183                           	opt callstack 0
 37184  00A816                     _HALResetPinMakeOutput:
 37185                           	opt callstack 20
 37186                           
 37187                           ; BSR set to: 0
 37188                           ;incstack = 0
 37189                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 37190  00A816  9494               	bcf	3988,2,c	;volatile
 37191  00A818  0012               	return		;funcret
 37192  00A81A                     __end_of_HALResetPinMakeOutput:
 37193                           	opt callstack 0
 37194                           
 37195 ;; *************** function _HALResetPinMakeInput *****************
 37196 ;; Defined at:
 37197 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37198 ;; Parameters:    Size  Location     Type
 37199 ;;		None
 37200 ;; Auto vars:     Size  Location     Type
 37201 ;;		None
 37202 ;; Return value:  Size  Location     Type
 37203 ;;                  1    wreg      void 
 37204 ;; Registers used:
 37205 ;;		None
 37206 ;; Tracked objects:
 37207 ;;		On entry : 0/0
 37208 ;;		On exit  : 0/0
 37209 ;;		Unchanged: 0/0
 37210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37215 ;;Total ram usage:        0 bytes
 37216 ;; Hardware stack levels used:    1
 37217 ;; Hardware stack levels required when called:    7
 37218 ;; This function calls:
 37219 ;;		Nothing
 37220 ;; This function is called by:
 37221 ;;		_RADIO_Reset
 37222 ;; This function uses a non-reentrant model
 37223 ;;
 37224                           
 37225                           	psect	text231
 37226  00A81A                     __ptext231:
 37227                           	opt callstack 0
 37228  00A81A                     _HALResetPinMakeInput:
 37229                           	opt callstack 20
 37230                           
 37231                           ;incstack = 0
 37232                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 37233  00A81A  8494               	bsf	3988,2,c	;volatile
 37234  00A81C  0012               	return		;funcret
 37235  00A81E                     __end_of_HALResetPinMakeInput:
 37236                           	opt callstack 0
 37237                           
 37238 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 37239 ;; Defined at:
 37240 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37241 ;; Parameters:    Size  Location     Type
 37242 ;;  period          2   62[BANK0 ] unsigned int 
 37243 ;; Auto vars:     Size  Location     Type
 37244 ;;  iCtr            1   72[BANK0 ] unsigned char 
 37245 ;; Return value:  Size  Location     Type
 37246 ;;                  1    wreg      void 
 37247 ;; Registers used:
 37248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37249 ;; Tracked objects:
 37250 ;;		On entry : 0/0
 37251 ;;		On exit  : 0/0
 37252 ;;		Unchanged: 0/0
 37253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37254 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37255 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37256 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37257 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37258 ;;Total ram usage:       11 bytes
 37259 ;; Hardware stack levels used:    1
 37260 ;; Hardware stack levels required when called:   11
 37261 ;; This function calls:
 37262 ;;		_SwTimerSetTimeout
 37263 ;;		_SwTimerStart
 37264 ;;		_SwTimerStop
 37265 ;;		___lldiv
 37266 ;;		___lmul
 37267 ;; This function is called by:
 37268 ;;		_LORAWAN_Reset
 37269 ;; This function uses a non-reentrant model
 37270 ;;
 37271                           
 37272                           	psect	text232
 37273  00526E                     __ptext232:
 37274                           	opt callstack 0
 37275  00526E                     _LORAWAN_LinkCheckConfigure:
 37276                           	opt callstack 18
 37277                           
 37278                           ;lorawan.c: 757: uint8_t iCtr;;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL
      +                          ;
 37279                           
 37280                           ;incstack = 0
 37281  00526E  C09E  F092         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 37282  005272  C09F  F093         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 37283  005276  0100               	movlb	0	; () banked
 37284  005278  6B94               	clrf	(___lmul@multiplier+2)& (0+255),b
 37285  00527A  6B95               	clrf	(___lmul@multiplier+3)& (0+255),b
 37286  00527C  0EE8               	movlw	232
 37287  00527E  6F96               	movwf	___lmul@multiplicand& (0+255),b
 37288  005280  0E03               	movlw	3
 37289  005282  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 37290  005284  0E00               	movlw	0
 37291  005286  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 37292  005288  0E00               	movlw	0
 37293  00528A  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 37294  00528C  ECAD  F048         	call	___lmul	;wreg free
 37295  005290  C092  F2D1         	movff	?___lmul,_loRa+204
 37296  005294  C093  F2D2         	movff	?___lmul+1,_loRa+205
 37297  005298  C094  F2D3         	movff	?___lmul+2,_loRa+206
 37298  00529C  C095  F2D4         	movff	?___lmul+3,_loRa+207
 37299                           
 37300                           ;lorawan.c: 761: if (period == 0)
 37301  0052A0  0100               	movlb	0	; () banked
 37302  0052A2  519E               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 37303  0052A4  119F               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 37304  0052A6  A4D8               	btfss	status,2,c
 37305  0052A8  D02B               	goto	l1786
 37306                           
 37307                           ; BSR set to: 0
 37308                           ;lorawan.c: 762: {;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 37309  0052AA  0102               	movlb	2	; () banked
 37310  0052AC  51EC               	movf	(_loRa+231)& (0+255),w,b
 37311  0052AE  EC7B  F051         	call	_SwTimerStop
 37312                           
 37313                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 37314  0052B2  0102               	movlb	2	; () banked
 37315  0052B4  9508               	bcf	(_loRa+3)& (0+255),2,b
 37316                           
 37317                           ; BSR set to: 2
 37318                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 37319  0052B6  0E00               	movlw	0
 37320  0052B8  0100               	movlb	0	; () banked
 37321  0052BA  6FA8               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 37322  0052BC  D01A               	goto	l21450
 37323  0052BE                     l21442:
 37324                           
 37325                           ; BSR set to: 0
 37326                           ;lorawan.c: 766: {;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_C
      +                          ID)
 37327  0052BE  51A8               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37328  0052C0  0D02               	mullw	2
 37329  0052C2  0EAD               	movlw	low (_loRa+168)
 37330  0052C4  24F3               	addwf	prodl,w,c
 37331  0052C6  6ED9               	movwf	fsr2l,c
 37332  0052C8  0E02               	movlw	high (_loRa+168)
 37333  0052CA  20F4               	addwfc	prodh,w,c
 37334  0052CC  6EDA               	movwf	fsr2h,c
 37335  0052CE  0E02               	movlw	2
 37336  0052D0  18DE               	xorwf	postinc2,w,c
 37337  0052D2  A4D8               	btfss	status,2,c
 37338  0052D4  D00C               	goto	l21448
 37339                           
 37340                           ; BSR set to: 0
 37341                           ;lorawan.c: 768: {;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 37342  0052D6  51A8               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37343  0052D8  0D02               	mullw	2
 37344  0052DA  0EAD               	movlw	low (_loRa+168)
 37345  0052DC  24F3               	addwf	prodl,w,c
 37346  0052DE  6ED9               	movwf	fsr2l,c
 37347  0052E0  0E02               	movlw	high (_loRa+168)
 37348  0052E2  20F4               	addwfc	prodh,w,c
 37349  0052E4  6EDA               	movwf	fsr2h,c
 37350  0052E6  0EFF               	movlw	255
 37351  0052E8  6EDF               	movwf	indf2,c
 37352                           
 37353                           ; BSR set to: 0
 37354                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 37355  0052EA  0102               	movlb	2	; () banked
 37356  0052EC  07AC               	decf	(_loRa+167)& (0+255),f,b
 37357  0052EE                     l21448:
 37358  0052EE  0100               	movlb	0	; () banked
 37359  0052F0  2BA8               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 37360  0052F2                     l21450:
 37361                           
 37362                           ; BSR set to: 0
 37363  0052F2  0102               	movlb	2	; () banked
 37364  0052F4  51AC               	movf	(_loRa+167)& (0+255),w,b
 37365  0052F6  0100               	movlb	0	; () banked
 37366  0052F8  5DA8               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37367  0052FA  B0D8               	btfsc	status,0,c
 37368  0052FC  0012               	return	
 37369  0052FE  D7DF               	goto	l21442
 37370  005300                     l1786:
 37371                           
 37372                           ; BSR set to: 0
 37373                           ;lorawan.c: 776: else;lorawan.c: 777: {;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 37374  005300  0102               	movlb	2	; () banked
 37375  005302  8508               	bsf	(_loRa+3)& (0+255),2,b
 37376                           
 37377                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 37378  005304  A907               	btfss	(_loRa+2)& (0+255),4,b
 37379  005306  0012               	return	
 37380                           
 37381                           ; BSR set to: 2
 37382                           ;lorawan.c: 782: {;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.perio
      +                          dForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125U
      +                          L ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 37383  005308  51D4               	movf	(_loRa+207)& (0+255),w,b
 37384  00530A  E107               	bnz	u24370
 37385  00530C  29D1               	incf	(_loRa+204)& (0+255),w,b
 37386  00530E  0EFF               	movlw	255
 37387  005310  59D2               	subwfb	(_loRa+205)& (0+255),w,b
 37388  005312  0E0F               	movlw	15
 37389  005314  59D3               	subwfb	(_loRa+206)& (0+255),w,b
 37390  005316  A0D8               	btfss	status,0,c
 37391  005318  D01D               	goto	l21456
 37392  00531A                     u24370:
 37393                           
 37394                           ; BSR set to: 2
 37395  00531A  C2D1  F060         	movff	_loRa+204,___lldiv@dividend
 37396  00531E  C2D2  F061         	movff	_loRa+205,___lldiv@dividend+1
 37397  005322  C2D3  F062         	movff	_loRa+206,___lldiv@dividend+2
 37398  005326  C2D4  F063         	movff	_loRa+207,___lldiv@dividend+3
 37399  00532A  0E7D               	movlw	125
 37400  00532C  0100               	movlb	0	; () banked
 37401  00532E  6F64               	movwf	___lldiv@divisor& (0+255),b
 37402  005330  0E00               	movlw	0
 37403  005332  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37404  005334  0E00               	movlw	0
 37405  005336  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37406  005338  0E00               	movlw	0
 37407  00533A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37408  00533C  EC6D  F042         	call	___lldiv	;wreg free
 37409  005340  0E0C               	movlw	12
 37410  005342                     u24385:
 37411  005342  90D8               	bcf	status,0,c
 37412  005344  0100               	movlb	0	; () banked
 37413  005346  3760               	rlcf	?___lldiv& (0+255),f,b
 37414  005348  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 37415  00534A  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 37416  00534C  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 37417  00534E  2EE8               	decfsz	wreg,f,c
 37418  005350  D7F8               	goto	u24385
 37419  005352  D023               	goto	L37
 37420  005354                     l21456:
 37421                           
 37422                           ; BSR set to: 2
 37423  005354  C2D1  F0A0         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 37424  005358  C2D2  F0A1         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 37425  00535C  C2D3  F0A2         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 37426  005360  C2D4  F0A3         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 37427  005364  0E0C               	movlw	12
 37428  005366                     u24395:
 37429  005366  90D8               	bcf	status,0,c
 37430  005368  0100               	movlb	0	; () banked
 37431  00536A  37A0               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 37432  00536C  37A1               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 37433  00536E  37A2               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 37434  005370  37A3               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 37435  005372  2EE8               	decfsz	wreg,f,c
 37436  005374  D7F8               	goto	u24395
 37437  005376  C0A0  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 37438  00537A  C0A1  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 37439  00537E  C0A2  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 37440  005382  C0A3  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 37441  005386  0E7D               	movlw	125
 37442  005388  6F64               	movwf	___lldiv@divisor& (0+255),b
 37443  00538A  0E00               	movlw	0
 37444  00538C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37445  00538E  0E00               	movlw	0
 37446  005390  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37447  005392  0E00               	movlw	0
 37448  005394  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37449  005396  EC6D  F042         	call	___lldiv	;wreg free
 37450  00539A                     L37:
 37451  00539A  C060  F0A4         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2499
 37452  00539E  C061  F0A5         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2499+1
 37453  0053A2  C062  F0A6         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2499+2
 37454  0053A6  C063  F0A7         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2499+3
 37455  0053AA  C0A4  F06D         	movff	_LORAWAN_LinkCheckConfigure$2499,SwTimerSetTimeout@timeout
 37456  0053AE  C0A5  F06E         	movff	_LORAWAN_LinkCheckConfigure$2499+1,SwTimerSetTimeout@timeout+1
 37457  0053B2  C0A6  F06F         	movff	_LORAWAN_LinkCheckConfigure$2499+2,SwTimerSetTimeout@timeout+2
 37458  0053B6  C0A7  F070         	movff	_LORAWAN_LinkCheckConfigure$2499+3,SwTimerSetTimeout@timeout+3
 37459  0053BA  0102               	movlb	2	; () banked
 37460  0053BC  51EC               	movf	(_loRa+231)& (0+255),w,b
 37461  0053BE  EC2D  F04C         	call	_SwTimerSetTimeout
 37462                           
 37463                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 37464  0053C2  0102               	movlb	2	; () banked
 37465  0053C4  51EC               	movf	(_loRa+231)& (0+255),w,b
 37466  0053C6  EC4A  F040         	call	_SwTimerStart
 37467  0053CA  0012               	return		;funcret
 37468  0053CC                     __end_of_LORAWAN_LinkCheckConfigure:
 37469                           	opt callstack 0
 37470                           
 37471 ;; *************** function ___lmul *****************
 37472 ;; Defined at:
 37473 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 37474 ;; Parameters:    Size  Location     Type
 37475 ;;  multiplier      4   50[BANK0 ] unsigned long 
 37476 ;;  multiplicand    4   54[BANK0 ] unsigned long 
 37477 ;; Auto vars:     Size  Location     Type
 37478 ;;  product         4   58[BANK0 ] unsigned long 
 37479 ;; Return value:  Size  Location     Type
 37480 ;;                  4   50[BANK0 ] unsigned long 
 37481 ;; Registers used:
 37482 ;;		wreg, status,2, status,0
 37483 ;; Tracked objects:
 37484 ;;		On entry : 0/0
 37485 ;;		On exit  : 0/0
 37486 ;;		Unchanged: 0/0
 37487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37488 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37489 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37491 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37492 ;;Total ram usage:       12 bytes
 37493 ;; Hardware stack levels used:    1
 37494 ;; Hardware stack levels required when called:    7
 37495 ;; This function calls:
 37496 ;;		Nothing
 37497 ;; This function is called by:
 37498 ;;		_RADIO_WriteConfiguration
 37499 ;;		_RADIO_TxDone
 37500 ;;		_RADIO_FSKPacketSent
 37501 ;;		_LORAWAN_TxDone
 37502 ;;		_ExecuteNewChannel
 37503 ;;		_ExecuteRxParamSetupReq
 37504 ;;		_UpdateCfList
 37505 ;;		_LORAWAN_LinkCheckConfigure
 37506 ;;		_rand
 37507 ;;		_LORAWAN_Pause
 37508 ;; This function uses a non-reentrant model
 37509 ;;
 37510                           
 37511                           	psect	text233
 37512  00915A                     __ptext233:
 37513                           	opt callstack 0
 37514  00915A                     ___lmul:
 37515                           	opt callstack 16
 37516                           
 37517                           ;incstack = 0
 37518  00915A  0E00               	movlw	0
 37519  00915C  0100               	movlb	0	; () banked
 37520  00915E  6F9A               	movwf	___lmul@product& (0+255),b
 37521  009160  0E00               	movlw	0
 37522  009162  6F9B               	movwf	(___lmul@product+1)& (0+255),b
 37523  009164  0E00               	movlw	0
 37524  009166  6F9C               	movwf	(___lmul@product+2)& (0+255),b
 37525  009168  0E00               	movlw	0
 37526  00916A  6F9D               	movwf	(___lmul@product+3)& (0+255),b
 37527  00916C                     l17974:
 37528                           
 37529                           ; BSR set to: 0
 37530  00916C  A192               	btfss	___lmul@multiplier& (0+255),0,b
 37531  00916E  D008               	goto	l17978
 37532                           
 37533                           ; BSR set to: 0
 37534  009170  5196               	movf	___lmul@multiplicand& (0+255),w,b
 37535  009172  279A               	addwf	___lmul@product& (0+255),f,b
 37536  009174  5197               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 37537  009176  239B               	addwfc	(___lmul@product+1)& (0+255),f,b
 37538  009178  5198               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 37539  00917A  239C               	addwfc	(___lmul@product+2)& (0+255),f,b
 37540  00917C  5199               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 37541  00917E  239D               	addwfc	(___lmul@product+3)& (0+255),f,b
 37542  009180                     l17978:
 37543                           
 37544                           ; BSR set to: 0
 37545  009180  90D8               	bcf	status,0,c
 37546  009182  3796               	rlcf	___lmul@multiplicand& (0+255),f,b
 37547  009184  3797               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 37548  009186  3798               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 37549  009188  3799               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 37550                           
 37551                           ; BSR set to: 0
 37552  00918A  90D8               	bcf	status,0,c
 37553  00918C  3395               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 37554  00918E  3394               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 37555  009190  3393               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 37556  009192  3392               	rrcf	___lmul@multiplier& (0+255),f,b
 37557  009194  5192               	movf	___lmul@multiplier& (0+255),w,b
 37558  009196  1193               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 37559  009198  1194               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 37560  00919A  1195               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 37561  00919C  A4D8               	btfss	status,2,c
 37562  00919E  D7E6               	goto	l17974
 37563                           
 37564                           ; BSR set to: 0
 37565  0091A0  C09A  F092         	movff	___lmul@product,?___lmul
 37566  0091A4  C09B  F093         	movff	___lmul@product+1,?___lmul+1
 37567  0091A8  C09C  F094         	movff	___lmul@product+2,?___lmul+2
 37568  0091AC  C09D  F095         	movff	___lmul@product+3,?___lmul+3
 37569                           
 37570                           ; BSR set to: 0
 37571  0091B0  0012               	return		;funcret
 37572  0091B2                     __end_of___lmul:
 37573                           	opt callstack 0
 37574                           
 37575 ;; *************** function ___lldiv *****************
 37576 ;; Defined at:
 37577 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 37578 ;; Parameters:    Size  Location     Type
 37579 ;;  dividend        4    0[BANK0 ] unsigned long 
 37580 ;;  divisor         4    4[BANK0 ] unsigned long 
 37581 ;; Auto vars:     Size  Location     Type
 37582 ;;  quotient        4    8[BANK0 ] unsigned long 
 37583 ;;  counter         1   12[BANK0 ] unsigned char 
 37584 ;; Return value:  Size  Location     Type
 37585 ;;                  4    0[BANK0 ] unsigned long 
 37586 ;; Registers used:
 37587 ;;		wreg, status,2, status,0
 37588 ;; Tracked objects:
 37589 ;;		On entry : 0/0
 37590 ;;		On exit  : 0/0
 37591 ;;		Unchanged: 0/0
 37592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37593 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37594 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37596 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37597 ;;Total ram usage:       13 bytes
 37598 ;; Hardware stack levels used:    1
 37599 ;; Hardware stack levels required when called:    7
 37600 ;; This function calls:
 37601 ;;		Nothing
 37602 ;; This function is called by:
 37603 ;;		_RADIO_WriteFrequency
 37604 ;;		_RADIO_WriteFSKFrequencyDeviation
 37605 ;;		_RADIO_WriteFSKBitRate
 37606 ;;		_RADIO_Transmit
 37607 ;;		_RADIO_ReceiveStart
 37608 ;;		_LORAWAN_TxDone
 37609 ;;		_LORAWAN_RxTimeout
 37610 ;;		_StartReTxTimer
 37611 ;;		_DutyCycleCallback
 37612 ;;		_LORAWAN_LinkCheckConfigure
 37613 ;;		_LORAWAN_LinkCheckCallback
 37614 ;;		_UpdateRetransmissionAckTimeoutState
 37615 ;;		_UpdateJoinSuccessState
 37616 ;; This function uses a non-reentrant model
 37617 ;;
 37618                           
 37619                           	psect	text234
 37620  0084DA                     __ptext234:
 37621                           	opt callstack 0
 37622  0084DA                     ___lldiv:
 37623                           	opt callstack 19
 37624                           
 37625                           ; BSR set to: 0
 37626                           ;incstack = 0
 37627  0084DA  0E00               	movlw	0
 37628  0084DC  0100               	movlb	0	; () banked
 37629  0084DE  6F68               	movwf	___lldiv@quotient& (0+255),b
 37630  0084E0  0E00               	movlw	0
 37631  0084E2  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 37632  0084E4  0E00               	movlw	0
 37633  0084E6  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 37634  0084E8  0E00               	movlw	0
 37635  0084EA  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 37636                           
 37637                           ; BSR set to: 0
 37638  0084EC  5164               	movf	___lldiv@divisor& (0+255),w,b
 37639  0084EE  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 37640  0084F0  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 37641  0084F2  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 37642  0084F4  B4D8               	btfsc	status,2,c
 37643  0084F6  D02A               	goto	l3550
 37644                           
 37645                           ; BSR set to: 0
 37646  0084F8  0E01               	movlw	1
 37647  0084FA  6F6C               	movwf	___lldiv@counter& (0+255),b
 37648  0084FC  D006               	goto	l17990
 37649  0084FE                     l17988:
 37650                           
 37651                           ; BSR set to: 0
 37652  0084FE  90D8               	bcf	status,0,c
 37653  008500  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 37654  008502  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 37655  008504  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 37656  008506  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 37657  008508  2B6C               	incf	___lldiv@counter& (0+255),f,b
 37658  00850A                     l17990:
 37659                           
 37660                           ; BSR set to: 0
 37661  00850A  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 37662  00850C  D7F8               	goto	l17988
 37663  00850E                     u18830:
 37664                           
 37665                           ; BSR set to: 0
 37666  00850E  90D8               	bcf	status,0,c
 37667  008510  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 37668  008512  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 37669  008514  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 37670  008516  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 37671                           
 37672                           ; BSR set to: 0
 37673  008518  5164               	movf	___lldiv@divisor& (0+255),w,b
 37674  00851A  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 37675  00851C  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37676  00851E  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 37677  008520  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37678  008522  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 37679  008524  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37680  008526  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 37681  008528  A0D8               	btfss	status,0,c
 37682  00852A  D009               	goto	l18000
 37683                           
 37684                           ; BSR set to: 0
 37685  00852C  5164               	movf	___lldiv@divisor& (0+255),w,b
 37686  00852E  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 37687  008530  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37688  008532  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 37689  008534  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37690  008536  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 37691  008538  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37692  00853A  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 37693                           
 37694                           ; BSR set to: 0
 37695  00853C  8168               	bsf	___lldiv@quotient& (0+255),0,b
 37696  00853E                     l18000:
 37697                           
 37698                           ; BSR set to: 0
 37699  00853E  90D8               	bcf	status,0,c
 37700  008540  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 37701  008542  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 37702  008544  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 37703  008546  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 37704                           
 37705                           ; BSR set to: 0
 37706  008548  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 37707  00854A  D7E1               	goto	u18830
 37708  00854C                     l3550:
 37709                           
 37710                           ; BSR set to: 0
 37711  00854C  C068  F060         	movff	___lldiv@quotient,?___lldiv
 37712  008550  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 37713  008554  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 37714  008558  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 37715                           
 37716                           ; BSR set to: 0
 37717  00855C  0012               	return		;funcret
 37718  00855E                     __end_of___lldiv:
 37719                           	opt callstack 0
 37720                           
 37721 ;; *************** function _SwTimerStop *****************
 37722 ;; Defined at:
 37723 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37724 ;; Parameters:    Size  Location     Type
 37725 ;;  timerId         1    wreg     unsigned char 
 37726 ;; Auto vars:     Size  Location     Type
 37727 ;;  timerId         1    0[BANK0 ] unsigned char 
 37728 ;; Return value:  Size  Location     Type
 37729 ;;                  1    wreg      void 
 37730 ;; Registers used:
 37731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37732 ;; Tracked objects:
 37733 ;;		On entry : 0/0
 37734 ;;		On exit  : 0/0
 37735 ;;		Unchanged: 0/0
 37736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37740 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37741 ;;Total ram usage:        1 bytes
 37742 ;; Hardware stack levels used:    1
 37743 ;; Hardware stack levels required when called:    7
 37744 ;; This function calls:
 37745 ;;		Nothing
 37746 ;; This function is called by:
 37747 ;;		_RADIO_Init
 37748 ;;		_RADIO_Transmit
 37749 ;;		_RADIO_RxDone
 37750 ;;		_RADIO_FSKPayloadReady
 37751 ;;		_RADIO_RxTimeout
 37752 ;;		_RADIO_TxDone
 37753 ;;		_RADIO_FSKPacketSent
 37754 ;;		_RADIO_RxFSKTimeout
 37755 ;;		_LORAWAN_TxDone
 37756 ;;		_StopAllSoftwareTimers
 37757 ;;		_LORAWAN_LinkCheckConfigure
 37758 ;;		_LORAWAN_RxDone
 37759 ;; This function uses a non-reentrant model
 37760 ;;
 37761                           
 37762                           	psect	text235
 37763  00A2F6                     __ptext235:
 37764                           	opt callstack 0
 37765  00A2F6                     _SwTimerStop:
 37766                           	opt callstack 19
 37767                           
 37768                           ; BSR set to: 0
 37769                           ;incstack = 0
 37770                           ;SwTimerStop@timerId stored from wreg
 37771  00A2F6  0100               	movlb	0	; () banked
 37772  00A2F8  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 37773                           
 37774                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 37775  00A2FA  9EF2               	bcf	4082,7,c	;volatile
 37776                           
 37777                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 37778  00A2FC  0100               	movlb	0	; () banked
 37779  00A2FE  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 37780  00A300  0D08               	mullw	8
 37781  00A302  0E04               	movlw	low (_swTimers+4)
 37782  00A304  24F3               	addwf	prodl,w,c
 37783  00A306  6ED9               	movwf	fsr2l,c
 37784  00A308  0E03               	movlw	high (_swTimers+4)
 37785  00A30A  20F4               	addwfc	prodh,w,c
 37786  00A30C  6EDA               	movwf	fsr2h,c
 37787  00A30E  0E00               	movlw	0
 37788  00A310  6EDF               	movwf	indf2,c
 37789                           
 37790                           ; BSR set to: 0
 37791                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 37792  00A312  8EF2               	bsf	4082,7,c	;volatile
 37793                           
 37794                           ; BSR set to: 0
 37795  00A314  0012               	return		;funcret
 37796  00A316                     __end_of_SwTimerStop:
 37797                           	opt callstack 0
 37798                           
 37799 ;; *************** function _SwTimerStart *****************
 37800 ;; Defined at:
 37801 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37802 ;; Parameters:    Size  Location     Type
 37803 ;;  timerId         1    wreg     unsigned char 
 37804 ;; Auto vars:     Size  Location     Type
 37805 ;;  timerId         1   49[BANK0 ] unsigned char 
 37806 ;;  ticksRemaini    4   45[BANK0 ] unsigned long 
 37807 ;; Return value:  Size  Location     Type
 37808 ;;                  1    wreg      void 
 37809 ;; Registers used:
 37810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37811 ;; Tracked objects:
 37812 ;;		On entry : 0/0
 37813 ;;		On exit  : 0/0
 37814 ;;		Unchanged: 0/0
 37815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37817 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37819 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37820 ;;Total ram usage:        9 bytes
 37821 ;; Hardware stack levels used:    1
 37822 ;; Hardware stack levels required when called:   10
 37823 ;; This function calls:
 37824 ;;		_SwTimersInterrupt
 37825 ;;		_TMR_OverrideRemaining
 37826 ;; This function is called by:
 37827 ;;		_RADIO_Transmit
 37828 ;;		_RADIO_ReceiveStart
 37829 ;;		_LORAWAN_TxDone
 37830 ;;		_LORAWAN_RxTimeout
 37831 ;;		_StartReTxTimer
 37832 ;;		_DutyCycleCallback
 37833 ;;		_LORAWAN_Join
 37834 ;;		_LORAWAN_LinkCheckConfigure
 37835 ;;		_LORAWAN_LinkCheckCallback
 37836 ;;		_UpdateRetransmissionAckTimeoutState
 37837 ;;		_UpdateJoinSuccessState
 37838 ;; This function uses a non-reentrant model
 37839 ;;
 37840                           
 37841                           	psect	text236
 37842  008094                     __ptext236:
 37843                           	opt callstack 0
 37844  008094                     _SwTimerStart:
 37845                           	opt callstack 16
 37846                           
 37847                           ; BSR set to: 0
 37848                           ;incstack = 0
 37849                           ;SwTimerStart@timerId stored from wreg
 37850  008094  0100               	movlb	0	; () banked
 37851  008096  6F91               	movwf	SwTimerStart@timerId& (0+255),b
 37852                           
 37853                           ;sw_timer.c: 220: uint32_t ticksRemaining;;sw_timer.c: 222: (INTCONbits.GIE = 0);
 37854  008098  9EF2               	bcf	4082,7,c	;volatile
 37855                           
 37856                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 37857  00809A  ECDC  F034         	call	_SwTimersInterrupt	;wreg free
 37858  00809E  C078  F08D         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 37859  0080A2  C079  F08E         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 37860  0080A6  C07A  F08F         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 37861  0080AA  C07B  F090         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 37862                           
 37863                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 37864  0080AE  0100               	movlb	0	; () banked
 37865  0080B0  5191               	movf	SwTimerStart@timerId& (0+255),w,b
 37866  0080B2  0D08               	mullw	8
 37867  0080B4  0E00               	movlw	low _swTimers
 37868  0080B6  24F3               	addwf	prodl,w,c
 37869  0080B8  6ED9               	movwf	fsr2l,c
 37870  0080BA  0E03               	movlw	high _swTimers
 37871  0080BC  20F4               	addwfc	prodh,w,c
 37872  0080BE  6EDA               	movwf	fsr2h,c
 37873  0080C0  518D               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 37874  0080C2  5CDE               	subwf	postinc2,w,c
 37875  0080C4  518E               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 37876  0080C6  58DE               	subwfb	postinc2,w,c
 37877  0080C8  518F               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 37878  0080CA  58DE               	subwfb	postinc2,w,c
 37879  0080CC  5190               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 37880  0080CE  58DE               	subwfb	postinc2,w,c
 37881  0080D0  B0D8               	btfsc	status,0,c
 37882  0080D2  D010               	goto	l18376
 37883                           
 37884                           ; BSR set to: 0
 37885                           ;sw_timer.c: 225: {;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 37886  0080D4  5191               	movf	SwTimerStart@timerId& (0+255),w,b
 37887  0080D6  0D08               	mullw	8
 37888  0080D8  0E00               	movlw	low _swTimers
 37889  0080DA  24F3               	addwf	prodl,w,c
 37890  0080DC  6ED9               	movwf	fsr2l,c
 37891  0080DE  0E03               	movlw	high _swTimers
 37892  0080E0  20F4               	addwfc	prodh,w,c
 37893  0080E2  6EDA               	movwf	fsr2h,c
 37894  0080E4  CFDE F08D          	movff	postinc2,SwTimerStart@ticksRemaining
 37895  0080E8  CFDE F08E          	movff	postinc2,SwTimerStart@ticksRemaining+1
 37896  0080EC  CFDE F08F          	movff	postinc2,SwTimerStart@ticksRemaining+2
 37897  0080F0  CFDE F090          	movff	postinc2,SwTimerStart@ticksRemaining+3
 37898  0080F4                     l18376:
 37899                           
 37900                           ; BSR set to: 0
 37901                           ;sw_timer.c: 227: };sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 37902  0080F4  C08D  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 37903  0080F8  C08E  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 37904  0080FC  C08F  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 37905  008100  C090  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 37906  008104  ECF1  F042         	call	_TMR_OverrideRemaining	;wreg free
 37907                           
 37908                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 37909  008108  0100               	movlb	0	; () banked
 37910  00810A  5191               	movf	SwTimerStart@timerId& (0+255),w,b
 37911  00810C  0D08               	mullw	8
 37912  00810E  0E04               	movlw	low (_swTimers+4)
 37913  008110  24F3               	addwf	prodl,w,c
 37914  008112  6ED9               	movwf	fsr2l,c
 37915  008114  0E03               	movlw	high (_swTimers+4)
 37916  008116  20F4               	addwfc	prodh,w,c
 37917  008118  6EDA               	movwf	fsr2h,c
 37918  00811A  0E01               	movlw	1
 37919  00811C  6EDF               	movwf	indf2,c
 37920                           
 37921                           ; BSR set to: 0
 37922                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 37923  00811E  8EF2               	bsf	4082,7,c	;volatile
 37924                           
 37925                           ; BSR set to: 0
 37926  008120  0012               	return		;funcret
 37927  008122                     __end_of_SwTimerStart:
 37928                           	opt callstack 0
 37929                           
 37930 ;; *************** function _TMR_OverrideRemaining *****************
 37931 ;; Defined at:
 37932 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37933 ;; Parameters:    Size  Location     Type
 37934 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 37935 ;; Auto vars:     Size  Location     Type
 37936 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 37937 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 37938 ;; Return value:  Size  Location     Type
 37939 ;;                  1    wreg      void 
 37940 ;; Registers used:
 37941 ;;		wreg, status,2, status,0, cstack
 37942 ;; Tracked objects:
 37943 ;;		On entry : 0/0
 37944 ;;		On exit  : 0/0
 37945 ;;		Unchanged: 0/0
 37946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37947 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37948 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37949 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37950 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37951 ;;Total ram usage:       10 bytes
 37952 ;; Hardware stack levels used:    1
 37953 ;; Hardware stack levels required when called:    9
 37954 ;; This function calls:
 37955 ;;		_TMR_SwapTimer
 37956 ;; This function is called by:
 37957 ;;		_SwTimerStart
 37958 ;; This function uses a non-reentrant model
 37959 ;;
 37960                           
 37961                           	psect	text237
 37962  0085E2                     __ptext237:
 37963                           	opt callstack 0
 37964  0085E2                     _TMR_OverrideRemaining:
 37965                           	opt callstack 16
 37966                           
 37967                           ;sw_timer.c: 67: uint16_t tmrVal;;sw_timer.c: 68: uint16_t oldReloadVal;;sw_timer.c: 71:
      +                           if (ticksToScheduledInterrupt > 10)
 37968                           
 37969                           ; BSR set to: 0
 37970                           ;incstack = 0
 37971  0085E2  5055               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37972  0085E4  1054               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37973  0085E6  1053               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37974  0085E8  E104               	bnz	u18920
 37975  0085EA  0E0B               	movlw	11
 37976  0085EC  5C52               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 37977  0085EE  A0D8               	btfss	status,0,c
 37978  0085F0  0012               	return	
 37979  0085F2                     u18920:
 37980                           
 37981                           ;sw_timer.c: 72: {;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 37982  0085F2  5052               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 37983  0085F4  0100               	movlb	0	; () banked
 37984  0085F6  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 37985  0085F8  5053               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37986  0085FA  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 37987  0085FC  5054               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37988  0085FE  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 37989  008600  5055               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37990  008602  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 37991  008604  B0D8               	btfsc	status,0,c
 37992  008606  0012               	return	
 37993                           
 37994                           ; BSR set to: 0
 37995                           ;sw_timer.c: 74: {;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 37996  008608  C06A  F052         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 37997  00860C  C06B  F053         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 37998  008610  C06C  F054         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 37999  008614  C06D  F055         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 38000                           
 38001                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 38002  008618  C03E  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 38003  00861C  C03F  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 38004                           
 38005                           ; BSR set to: 0
 38006                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 38007  008620  516A               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 38008  008622  0800               	sublw	0
 38009  008624  6E3E               	movwf	_reloadVal,c	;volatile
 38010  008626  516B               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 38011  008628  A0D8               	btfss	status,0,c
 38012  00862A  2AE8               	incf	wreg,f,c
 38013  00862C  0800               	sublw	0
 38014  00862E  6E3F               	movwf	_reloadVal+1,c	;volatile
 38015                           
 38016                           ; BSR set to: 0
 38017                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 38018  008630  C03E  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 38019  008634  C03F  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 38020  008638  EC70  F04C         	call	_TMR_SwapTimer	;wreg free
 38021  00863C  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 38022  008640  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 38023                           
 38024                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 38025  008644  0100               	movlb	0	; () banked
 38026  008646  5172               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 38027  008648  5D70               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 38028  00864A  6F6E               	movwf	??_TMR_OverrideRemaining& (0+255),b
 38029  00864C  5173               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 38030  00864E  5971               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 38031  008650  6F6F               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 38032  008652  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 38033  008654  2636               	addwf	_ticksAdded,f,c	;volatile
 38034  008656  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 38035  008658  2237               	addwfc	_ticksAdded+1,f,c	;volatile
 38036  00865A  0E00               	movlw	0
 38037  00865C  2238               	addwfc	_ticksAdded+2,f,c	;volatile
 38038  00865E  0E00               	movlw	0
 38039  008660  2239               	addwfc	_ticksAdded+3,f,c	;volatile
 38040  008662  0012               	return		;funcret
 38041  008664                     __end_of_TMR_OverrideRemaining:
 38042                           	opt callstack 0
 38043                           
 38044 ;; *************** function _TMR_SwapTimer *****************
 38045 ;; Defined at:
 38046 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38047 ;; Parameters:    Size  Location     Type
 38048 ;;  timerVal        2    8[BANK0 ] unsigned int 
 38049 ;; Auto vars:     Size  Location     Type
 38050 ;;		None
 38051 ;; Return value:  Size  Location     Type
 38052 ;;                  2    8[BANK0 ] unsigned int 
 38053 ;; Registers used:
 38054 ;;		wreg, status,2, status,0, cstack
 38055 ;; Tracked objects:
 38056 ;;		On entry : 0/0
 38057 ;;		On exit  : 0/0
 38058 ;;		Unchanged: 0/0
 38059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38063 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38064 ;;Total ram usage:        2 bytes
 38065 ;; Hardware stack levels used:    1
 38066 ;; Hardware stack levels required when called:    8
 38067 ;; This function calls:
 38068 ;;		_TMR1_ReadTimer
 38069 ;;		_TMR1_WriteTimer
 38070 ;; This function is called by:
 38071 ;;		_TMR_OverrideRemaining
 38072 ;; This function uses a non-reentrant model
 38073 ;;
 38074                           
 38075                           	psect	text238
 38076  0098E0                     __ptext238:
 38077                           	opt callstack 0
 38078  0098E0                     _TMR_SwapTimer:
 38079                           	opt callstack 16
 38080                           
 38081                           ;sw_timer.c: 114: static uint16_t oldVal;;sw_timer.c: 115: static uint16_t retVal;;sw_ti
      +                          mer.c: 117: oldVal = TMR1_ReadTimer();
 38082                           
 38083                           ;incstack = 0
 38084  0098E0  EC2A  F051         	call	_TMR1_ReadTimer	;wreg free
 38085  0098E4  C060  F03A         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38086  0098E8  C061  F03B         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38087  0098EC                     l17826:
 38088  0098EC  EC2A  F051         	call	_TMR1_ReadTimer	;wreg free
 38089  0098F0  503A               	movf	TMR_SwapTimer@oldVal,w,c
 38090  0098F2  0100               	movlb	0	; () banked
 38091  0098F4  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 38092  0098F6  E104               	bnz	u18680
 38093  0098F8  503B               	movf	TMR_SwapTimer@oldVal+1,w,c
 38094  0098FA  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 38095  0098FC  B4D8               	btfsc	status,2,c
 38096  0098FE  D7F6               	goto	l17826
 38097  009900                     u18680:
 38098                           
 38099                           ; BSR set to: 0
 38100                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38101  009900  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 38102  009904  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 38103  009908  EC8B  F051         	call	_TMR1_WriteTimer	;wreg free
 38104                           
 38105                           ;sw_timer.c: 128: oldVal++;
 38106  00990C  4A3A               	infsnz	TMR_SwapTimer@oldVal,f,c
 38107  00990E  2A3B               	incf	TMR_SwapTimer@oldVal+1,f,c
 38108                           
 38109                           ;sw_timer.c: 130: retVal = oldVal;
 38110  009910  C03A  F11E         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38111  009914  C03B  F11F         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38112                           
 38113                           ;sw_timer.c: 132: return retVal;
 38114  009918  C11E  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 38115  00991C  C11F  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 38116  009920  0012               	return		;funcret
 38117  009922                     __end_of_TMR_SwapTimer:
 38118                           	opt callstack 0
 38119                           
 38120 ;; *************** function _TMR1_WriteTimer *****************
 38121 ;; Defined at:
 38122 ;;		line 124 in file "mcc_generated_files/tmr1.c"
 38123 ;; Parameters:    Size  Location     Type
 38124 ;;  timerVal        2    0[BANK0 ] unsigned int 
 38125 ;; Auto vars:     Size  Location     Type
 38126 ;;		None
 38127 ;; Return value:  Size  Location     Type
 38128 ;;                  1    wreg      void 
 38129 ;; Registers used:
 38130 ;;		wreg, status,2
 38131 ;; Tracked objects:
 38132 ;;		On entry : 0/0
 38133 ;;		On exit  : 0/0
 38134 ;;		Unchanged: 0/0
 38135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38136 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38139 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38140 ;;Total ram usage:        2 bytes
 38141 ;; Hardware stack levels used:    1
 38142 ;; Hardware stack levels required when called:    7
 38143 ;; This function calls:
 38144 ;;		Nothing
 38145 ;; This function is called by:
 38146 ;;		_TMR_SwapTimer
 38147 ;;		_TMR1_Reload
 38148 ;; This function uses a non-reentrant model
 38149 ;;
 38150                           
 38151                           	psect	text239
 38152  00A316                     __ptext239:
 38153                           	opt callstack 0
 38154  00A316                     _TMR1_WriteTimer:
 38155                           	opt callstack 16
 38156                           
 38157                           ;tmr1.c: 126: if (T1CONbits.T1SYNC == 1)
 38158                           
 38159                           ;incstack = 0
 38160  00A316  A4CD               	btfss	4045,2,c	;volatile
 38161  00A318  D008               	goto	l17742
 38162                           
 38163                           ;tmr1.c: 127: {;tmr1.c: 129: T1CONbits.TMR1ON = 0;
 38164  00A31A  90CD               	bcf	4045,0,c	;volatile
 38165                           
 38166                           ;tmr1.c: 132: TMR1H = (timerVal >> 8);
 38167  00A31C  0100               	movlb	0	; () banked
 38168  00A31E  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38169  00A320  6ECF               	movwf	4047,c	;volatile
 38170                           
 38171                           ; BSR set to: 0
 38172                           ;tmr1.c: 133: TMR1L = (uint8_t) timerVal;
 38173  00A322  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38174                           
 38175                           ; BSR set to: 0
 38176                           ;tmr1.c: 136: T1CONbits.TMR1ON =1;
 38177  00A326  80CD               	bsf	4045,0,c	;volatile
 38178                           
 38179                           ;tmr1.c: 137: }
 38180  00A328  0012               	return	
 38181  00A32A                     l17742:
 38182                           
 38183                           ;tmr1.c: 138: else;tmr1.c: 139: {;tmr1.c: 141: TMR1H = (timerVal >> 8);
 38184  00A32A  0100               	movlb	0	; () banked
 38185  00A32C  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38186  00A32E  6ECF               	movwf	4047,c	;volatile
 38187                           
 38188                           ; BSR set to: 0
 38189                           ;tmr1.c: 142: TMR1L = (uint8_t) timerVal;
 38190  00A330  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38191                           
 38192                           ; BSR set to: 0
 38193  00A334  0012               	return		;funcret
 38194  00A336                     __end_of_TMR1_WriteTimer:
 38195                           	opt callstack 0
 38196                           
 38197 ;; *************** function _SwTimersInterrupt *****************
 38198 ;; Defined at:
 38199 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38200 ;; Parameters:    Size  Location     Type
 38201 ;;		None
 38202 ;; Auto vars:     Size  Location     Type
 38203 ;;  ticksToNextT    4   36[BANK0 ] unsigned long 
 38204 ;;  timeElapsed     4   32[BANK0 ] unsigned long 
 38205 ;;  i               1   40[BANK0 ] unsigned char 
 38206 ;; Return value:  Size  Location     Type
 38207 ;;                  4   24[BANK0 ] unsigned long 
 38208 ;; Registers used:
 38209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38210 ;; Tracked objects:
 38211 ;;		On entry : 0/0
 38212 ;;		On exit  : 0/0
 38213 ;;		Unchanged: 0/0
 38214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38215 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38216 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38217 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38218 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38219 ;;Total ram usage:       17 bytes
 38220 ;; Hardware stack levels used:    1
 38221 ;; Hardware stack levels required when called:    9
 38222 ;; This function calls:
 38223 ;;		_TMR_GetDeltaTime
 38224 ;; This function is called by:
 38225 ;;		_SwTimerReadValue
 38226 ;;		_SwTimerStart
 38227 ;;		_SwTimersCanSleep
 38228 ;; This function uses a non-reentrant model
 38229 ;;
 38230                           
 38231                           	psect	text240
 38232  0069B8                     __ptext240:
 38233                           	opt callstack 0
 38234  0069B8                     _SwTimersInterrupt:
 38235                           	opt callstack 16
 38236                           
 38237                           ;sw_timer.c: 289: uint8_t i;;sw_timer.c: 290: uint32_t timeElapsed;;sw_timer.c: 291: uin
      +                          t32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38238                           
 38239                           ; BSR set to: 0
 38240                           ;incstack = 0
 38241  0069B8  0100               	movlb	0	; () banked
 38242  0069BA  6984               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 38243  0069BC  6985               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 38244  0069BE  6986               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 38245  0069C0  6987               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 38246                           
 38247                           ; BSR set to: 0
 38248                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38249  0069C2  ECB3  F030         	call	_TMR_GetDeltaTime	;wreg free
 38250  0069C6  C068  F080         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 38251  0069CA  C069  F081         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 38252  0069CE  C06A  F082         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 38253  0069D2  C06B  F083         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 38254                           
 38255                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38256  0069D6  0E00               	movlw	0
 38257  0069D8  0100               	movlb	0	; () banked
 38258  0069DA  6F88               	movwf	SwTimersInterrupt@i& (0+255),b
 38259  0069DC  D05D               	goto	l18070
 38260  0069DE                     l18058:
 38261                           
 38262                           ; BSR set to: 0
 38263                           ;sw_timer.c: 298: {;sw_timer.c: 301: if (swTimers[i].running == 1)
 38264  0069DE  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38265  0069E0  0D08               	mullw	8
 38266  0069E2  0E04               	movlw	low (_swTimers+4)
 38267  0069E4  24F3               	addwf	prodl,w,c
 38268  0069E6  6ED9               	movwf	fsr2l,c
 38269  0069E8  0E03               	movlw	high (_swTimers+4)
 38270  0069EA  20F4               	addwfc	prodh,w,c
 38271  0069EC  6EDA               	movwf	fsr2h,c
 38272  0069EE  04DE               	decf	postinc2,w,c
 38273  0069F0  A4D8               	btfss	status,2,c
 38274  0069F2  D051               	goto	l18068
 38275                           
 38276                           ; BSR set to: 0
 38277                           ;sw_timer.c: 302: {;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38278  0069F4  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38279  0069F6  0D08               	mullw	8
 38280  0069F8  0E00               	movlw	low _swTimers
 38281  0069FA  24F3               	addwf	prodl,w,c
 38282  0069FC  6ED9               	movwf	fsr2l,c
 38283  0069FE  0E03               	movlw	high _swTimers
 38284  006A00  20F4               	addwfc	prodh,w,c
 38285  006A02  6EDA               	movwf	fsr2h,c
 38286  006A04  50DE               	movf	postinc2,w,c
 38287  006A06  5D80               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38288  006A08  50DE               	movf	postinc2,w,c
 38289  006A0A  5981               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38290  006A0C  50DE               	movf	postinc2,w,c
 38291  006A0E  5982               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38292  006A10  50DE               	movf	postinc2,w,c
 38293  006A12  5983               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38294  006A14  A0D8               	btfss	status,0,c
 38295  006A16  D00D               	goto	l18064
 38296                           
 38297                           ; BSR set to: 0
 38298                           ;sw_timer.c: 304: {;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38299  006A18  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38300  006A1A  0D08               	mullw	8
 38301  006A1C  0E00               	movlw	low _swTimers
 38302  006A1E  24F3               	addwf	prodl,w,c
 38303  006A20  6ED9               	movwf	fsr2l,c
 38304  006A22  0E03               	movlw	high _swTimers
 38305  006A24  20F4               	addwfc	prodh,w,c
 38306  006A26  6EDA               	movwf	fsr2h,c
 38307  006A28  6ADE               	clrf	postinc2,c
 38308  006A2A  6ADE               	clrf	postinc2,c
 38309  006A2C  6ADE               	clrf	postinc2,c
 38310  006A2E  6ADD               	clrf	postdec2,c
 38311                           
 38312                           ;sw_timer.c: 306: }
 38313  006A30  D032               	goto	l18068
 38314  006A32                     l18064:
 38315                           
 38316                           ; BSR set to: 0
 38317                           ;sw_timer.c: 307: else;sw_timer.c: 308: {;sw_timer.c: 309: swTimers[i].ticksRemaining -=
      +                           timeElapsed;
 38318  006A32  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38319  006A34  0D08               	mullw	8
 38320  006A36  0E00               	movlw	low _swTimers
 38321  006A38  24F3               	addwf	prodl,w,c
 38322  006A3A  6ED9               	movwf	fsr2l,c
 38323  006A3C  0E03               	movlw	high _swTimers
 38324  006A3E  20F4               	addwfc	prodh,w,c
 38325  006A40  6EDA               	movwf	fsr2h,c
 38326  006A42  5180               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38327  006A44  5EDE               	subwf	postinc2,f,c
 38328  006A46  5181               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38329  006A48  5ADE               	subwfb	postinc2,f,c
 38330  006A4A  5182               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38331  006A4C  5ADE               	subwfb	postinc2,f,c
 38332  006A4E  5183               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38333  006A50  5ADE               	subwfb	postinc2,f,c
 38334                           
 38335                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38336  006A52  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38337  006A54  0D08               	mullw	8
 38338  006A56  0E00               	movlw	low _swTimers
 38339  006A58  24F3               	addwf	prodl,w,c
 38340  006A5A  6ED9               	movwf	fsr2l,c
 38341  006A5C  0E03               	movlw	high _swTimers
 38342  006A5E  20F4               	addwfc	prodh,w,c
 38343  006A60  6EDA               	movwf	fsr2h,c
 38344  006A62  5184               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 38345  006A64  5CDE               	subwf	postinc2,w,c
 38346  006A66  5185               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 38347  006A68  58DE               	subwfb	postinc2,w,c
 38348  006A6A  5186               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 38349  006A6C  58DE               	subwfb	postinc2,w,c
 38350  006A6E  5187               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 38351  006A70  58DE               	subwfb	postinc2,w,c
 38352  006A72  B0D8               	btfsc	status,0,c
 38353  006A74  D010               	goto	l18068
 38354                           
 38355                           ; BSR set to: 0
 38356                           ;sw_timer.c: 313: {;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38357  006A76  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38358  006A78  0D08               	mullw	8
 38359  006A7A  0E00               	movlw	low _swTimers
 38360  006A7C  24F3               	addwf	prodl,w,c
 38361  006A7E  6ED9               	movwf	fsr2l,c
 38362  006A80  0E03               	movlw	high _swTimers
 38363  006A82  20F4               	addwfc	prodh,w,c
 38364  006A84  6EDA               	movwf	fsr2h,c
 38365  006A86  CFDE F084          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 38366  006A8A  CFDE F085          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 38367  006A8E  CFDE F086          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 38368  006A92  CFDE F087          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 38369  006A96                     l18068:
 38370                           
 38371                           ; BSR set to: 0
 38372  006A96  2B88               	incf	SwTimersInterrupt@i& (0+255),f,b
 38373  006A98                     l18070:
 38374                           
 38375                           ; BSR set to: 0
 38376  006A98  0101               	movlb	1	; () banked
 38377  006A9A  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38378  006A9C  0100               	movlb	0	; () banked
 38379  006A9E  5D88               	subwf	SwTimersInterrupt@i& (0+255),w,b
 38380  006AA0  A0D8               	btfss	status,0,c
 38381  006AA2  D79D               	goto	l18058
 38382                           
 38383                           ; BSR set to: 0
 38384                           ;sw_timer.c: 315: };sw_timer.c: 316: };sw_timer.c: 317: };sw_timer.c: 318: };sw_timer.c:
      +                           320: return ticksToNextTimerEvent;
 38385  006AA4  C084  F078         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 38386  006AA8  C085  F079         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 38387  006AAC  C086  F07A         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 38388  006AB0  C087  F07B         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 38389                           
 38390                           ; BSR set to: 0
 38391  006AB4  0012               	return		;funcret
 38392  006AB6                     __end_of_SwTimersInterrupt:
 38393                           	opt callstack 0
 38394                           
 38395 ;; *************** function _TMR_GetDeltaTime *****************
 38396 ;; Defined at:
 38397 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38398 ;; Parameters:    Size  Location     Type
 38399 ;;		None
 38400 ;; Auto vars:     Size  Location     Type
 38401 ;;		None
 38402 ;; Return value:  Size  Location     Type
 38403 ;;                  4    8[BANK0 ] unsigned long 
 38404 ;; Registers used:
 38405 ;;		wreg, status,2, status,0, cstack
 38406 ;; Tracked objects:
 38407 ;;		On entry : 0/0
 38408 ;;		On exit  : 0/0
 38409 ;;		Unchanged: 0/0
 38410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38413 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38414 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38415 ;;Total ram usage:       16 bytes
 38416 ;; Hardware stack levels used:    1
 38417 ;; Hardware stack levels required when called:    8
 38418 ;; This function calls:
 38419 ;;		_TMR1_ReadTimer
 38420 ;; This function is called by:
 38421 ;;		_SwTimersInterrupt
 38422 ;; This function uses a non-reentrant model
 38423 ;;
 38424                           
 38425                           	psect	text241
 38426  006166                     __ptext241:
 38427                           	opt callstack 0
 38428  006166                     _TMR_GetDeltaTime:
 38429                           	opt callstack 16
 38430                           
 38431                           ;sw_timer.c: 90: static uint32_t retVal;;sw_timer.c: 91: static uint16_t tmrVal;;sw_time
      +                          r.c: 93: tmrVal = TMR1_ReadTimer();
 38432                           
 38433                           ; BSR set to: 0
 38434                           ;incstack = 0
 38435  006166  EC2A  F051         	call	_TMR1_ReadTimer	;wreg free
 38436  00616A  C060  F03C         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38437  00616E  C061  F03D         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38438                           
 38439                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38440  006172  0444               	decf	_timerOverflow,w,c	;volatile
 38441  006174  A4D8               	btfss	status,2,c
 38442  006176  D04C               	goto	l17852
 38443                           
 38444                           ;sw_timer.c: 96: {;sw_timer.c: 97: timerOverflow = 0;
 38445  006178  0E00               	movlw	0
 38446  00617A  6E44               	movwf	_timerOverflow,c	;volatile
 38447                           
 38448                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38449  00617C  503E               	movf	_reloadVal,w,c	;volatile
 38450  00617E  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38451  006180  0100               	movlb	0	; () banked
 38452  006182  6F6C               	movwf	??_TMR_GetDeltaTime& (0+255),b
 38453  006184  503F               	movf	_reloadVal+1,w,c	;volatile
 38454  006186  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38455  006188  6F6D               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 38456  00618A  6B6E               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 38457  00618C  A0D8               	btfss	status,0,c
 38458  00618E  076E               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38459  006190  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38460  006192  6F6F               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 38461  006194  5032               	movf	_ticksAccounted,w,c	;volatile
 38462  006196  5D6C               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 38463  006198  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 38464  00619A  5033               	movf	_ticksAccounted+1,w,c	;volatile
 38465  00619C  596D               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38466  00619E  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 38467  0061A0  5034               	movf	_ticksAccounted+2,w,c	;volatile
 38468  0061A2  596E               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38469  0061A4  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38470  0061A6  5035               	movf	_ticksAccounted+3,w,c	;volatile
 38471  0061A8  596F               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38472  0061AA  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38473  0061AC  5036               	movf	_ticksAdded,w,c	;volatile
 38474  0061AE  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38475  0061B0  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 38476  0061B2  5037               	movf	_ticksAdded+1,w,c	;volatile
 38477  0061B4  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38478  0061B6  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 38479  0061B8  5038               	movf	_ticksAdded+2,w,c	;volatile
 38480  0061BA  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38481  0061BC  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 38482  0061BE  5039               	movf	_ticksAdded+3,w,c	;volatile
 38483  0061C0  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38484  0061C2  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 38485  0061C4  0E00               	movlw	0
 38486  0061C6  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 38487  0061C8  0101               	movlb	1	; () banked
 38488  0061CA  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38489  0061CC  0E00               	movlw	0
 38490  0061CE  0100               	movlb	0	; () banked
 38491  0061D0  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 38492  0061D2  0101               	movlb	1	; () banked
 38493  0061D4  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38494  0061D6  0E01               	movlw	1
 38495  0061D8  0100               	movlb	0	; () banked
 38496  0061DA  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 38497  0061DC  0101               	movlb	1	; () banked
 38498  0061DE  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38499  0061E0  0E00               	movlw	0
 38500  0061E2  0100               	movlb	0	; () banked
 38501  0061E4  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 38502  0061E6  0101               	movlb	1	; () banked
 38503  0061E8  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38504                           
 38505                           ; BSR set to: 1
 38506                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38507  0061EA  C03C  F032         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38508  0061EE  C03D  F033         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38509  0061F2  6A34               	clrf	_ticksAccounted+2,c	;volatile
 38510  0061F4  6A35               	clrf	_ticksAccounted+3,c	;volatile
 38511                           
 38512                           ; BSR set to: 1
 38513                           ;sw_timer.c: 100: ticksAdded = 0;
 38514  0061F6  0E00               	movlw	0
 38515  0061F8  6E36               	movwf	_ticksAdded,c	;volatile
 38516  0061FA  0E00               	movlw	0
 38517  0061FC  6E37               	movwf	_ticksAdded+1,c	;volatile
 38518  0061FE  0E00               	movlw	0
 38519  006200  6E38               	movwf	_ticksAdded+2,c	;volatile
 38520  006202  0E00               	movlw	0
 38521  006204  6E39               	movwf	_ticksAdded+3,c	;volatile
 38522                           
 38523                           ; BSR set to: 1
 38524                           ;sw_timer.c: 101: reloadVal = 0;
 38525  006206  0E00               	movlw	0
 38526  006208  6E3F               	movwf	_reloadVal+1,c	;volatile
 38527  00620A  0E00               	movlw	0
 38528  00620C  6E3E               	movwf	_reloadVal,c	;volatile
 38529                           
 38530                           ;sw_timer.c: 102: }
 38531  00620E  D030               	goto	l17854
 38532  006210                     l17852:
 38533                           
 38534                           ;sw_timer.c: 103: else;sw_timer.c: 104: {;sw_timer.c: 105: retVal = tmrVal - reloadVal -
      +                           ticksAccounted + ticksAdded;
 38535  006210  503E               	movf	_reloadVal,w,c	;volatile
 38536  006212  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38537  006214  0100               	movlb	0	; () banked
 38538  006216  6F6C               	movwf	??_TMR_GetDeltaTime& (0+255),b
 38539  006218  503F               	movf	_reloadVal+1,w,c	;volatile
 38540  00621A  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38541  00621C  6F6D               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 38542  00621E  6B6E               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 38543  006220  6B6F               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 38544  006222  5032               	movf	_ticksAccounted,w,c	;volatile
 38545  006224  5D6C               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 38546  006226  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 38547  006228  5033               	movf	_ticksAccounted+1,w,c	;volatile
 38548  00622A  596D               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38549  00622C  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 38550  00622E  5034               	movf	_ticksAccounted+2,w,c	;volatile
 38551  006230  596E               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38552  006232  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38553  006234  5035               	movf	_ticksAccounted+3,w,c	;volatile
 38554  006236  596F               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38555  006238  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38556  00623A  5036               	movf	_ticksAdded,w,c	;volatile
 38557  00623C  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38558  00623E  0101               	movlb	1	; () banked
 38559  006240  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38560  006242  5037               	movf	_ticksAdded+1,w,c	;volatile
 38561  006244  0100               	movlb	0	; () banked
 38562  006246  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38563  006248  0101               	movlb	1	; () banked
 38564  00624A  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38565  00624C  5038               	movf	_ticksAdded+2,w,c	;volatile
 38566  00624E  0100               	movlb	0	; () banked
 38567  006250  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38568  006252  0101               	movlb	1	; () banked
 38569  006254  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38570  006256  5039               	movf	_ticksAdded+3,w,c	;volatile
 38571  006258  0100               	movlb	0	; () banked
 38572  00625A  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38573  00625C  0101               	movlb	1	; () banked
 38574  00625E  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38575                           
 38576                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38577  006260  5112               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 38578  006262  2632               	addwf	_ticksAccounted,f,c	;volatile
 38579  006264  5113               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 38580  006266  2233               	addwfc	_ticksAccounted+1,f,c	;volatile
 38581  006268  5114               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 38582  00626A  2234               	addwfc	_ticksAccounted+2,f,c	;volatile
 38583  00626C  5115               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 38584  00626E  2235               	addwfc	_ticksAccounted+3,f,c	;volatile
 38585  006270                     l17854:
 38586                           
 38587                           ; BSR set to: 1
 38588                           ;sw_timer.c: 107: };sw_timer.c: 109: return retVal;
 38589  006270  C112  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 38590  006274  C113  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 38591  006278  C114  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 38592  00627C  C115  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 38593                           
 38594                           ; BSR set to: 1
 38595  006280  0012               	return		;funcret
 38596  006282                     __end_of_TMR_GetDeltaTime:
 38597                           	opt callstack 0
 38598                           
 38599 ;; *************** function _TMR1_ReadTimer *****************
 38600 ;; Defined at:
 38601 ;;		line 108 in file "mcc_generated_files/tmr1.c"
 38602 ;; Parameters:    Size  Location     Type
 38603 ;;		None
 38604 ;; Auto vars:     Size  Location     Type
 38605 ;;  readVal         2    4[BANK0 ] unsigned int 
 38606 ;;  readValLow      1    7[BANK0 ] unsigned char 
 38607 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 38608 ;; Return value:  Size  Location     Type
 38609 ;;                  2    0[BANK0 ] unsigned int 
 38610 ;; Registers used:
 38611 ;;		wreg, status,2
 38612 ;; Tracked objects:
 38613 ;;		On entry : 0/0
 38614 ;;		On exit  : 0/0
 38615 ;;		Unchanged: 0/0
 38616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38618 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38619 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38620 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38621 ;;Total ram usage:        8 bytes
 38622 ;; Hardware stack levels used:    1
 38623 ;; Hardware stack levels required when called:    7
 38624 ;; This function calls:
 38625 ;;		Nothing
 38626 ;; This function is called by:
 38627 ;;		_TMR_GetDeltaTime
 38628 ;;		_TMR_SwapTimer
 38629 ;; This function uses a non-reentrant model
 38630 ;;
 38631                           
 38632                           	psect	text242
 38633  00A254                     __ptext242:
 38634                           	opt callstack 0
 38635  00A254                     _TMR1_ReadTimer:
 38636                           	opt callstack 16
 38637                           
 38638                           ;tmr1.c: 110: uint16_t readVal;;tmr1.c: 111: uint8_t readValHigh;;tmr1.c: 112: uint8_t r
      +                          eadValLow;;tmr1.c: 114: T1CONbits.T1RD16 = 1;
 38639                           
 38640                           ; BSR set to: 1
 38641                           ;incstack = 0
 38642  00A254  82CD               	bsf	4045,1,c	;volatile
 38643                           
 38644                           ;tmr1.c: 116: readValLow = TMR1L;
 38645  00A256  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 38646                           
 38647                           ;tmr1.c: 117: readValHigh = TMR1H;
 38648  00A25A  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 38649                           
 38650                           ;tmr1.c: 119: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 38651  00A25E  0100               	movlb	0	; () banked
 38652  00A260  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 38653  00A262  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 38654  00A264  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 38655  00A266  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 38656  00A268  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 38657                           
 38658                           ; BSR set to: 0
 38659                           ;tmr1.c: 121: return readVal;
 38660  00A26C  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 38661  00A270  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 38662                           
 38663                           ; BSR set to: 0
 38664  00A274  0012               	return		;funcret
 38665  00A276                     __end_of_TMR1_ReadTimer:
 38666                           	opt callstack 0
 38667                           
 38668 ;; *************** function _SwTimerSetTimeout *****************
 38669 ;; Defined at:
 38670 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38671 ;; Parameters:    Size  Location     Type
 38672 ;;  timerId         1    wreg     unsigned char 
 38673 ;;  timeout         4   13[BANK0 ] unsigned long 
 38674 ;; Auto vars:     Size  Location     Type
 38675 ;;  timerId         1   21[BANK0 ] unsigned char 
 38676 ;; Return value:  Size  Location     Type
 38677 ;;                  1    wreg      void 
 38678 ;; Registers used:
 38679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38680 ;; Tracked objects:
 38681 ;;		On entry : 0/0
 38682 ;;		On exit  : 0/0
 38683 ;;		Unchanged: 0/0
 38684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38685 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38687 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38688 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38689 ;;Total ram usage:        9 bytes
 38690 ;; Hardware stack levels used:    1
 38691 ;; Hardware stack levels required when called:    7
 38692 ;; This function calls:
 38693 ;;		Nothing
 38694 ;; This function is called by:
 38695 ;;		_RADIO_Transmit
 38696 ;;		_RADIO_ReceiveStart
 38697 ;;		_LORAWAN_TxDone
 38698 ;;		_LORAWAN_RxTimeout
 38699 ;;		_StartReTxTimer
 38700 ;;		_DutyCycleCallback
 38701 ;;		_LORAWAN_Join
 38702 ;;		_LORAWAN_LinkCheckConfigure
 38703 ;;		_LORAWAN_LinkCheckCallback
 38704 ;;		_UpdateRetransmissionAckTimeoutState
 38705 ;;		_UpdateJoinSuccessState
 38706 ;; This function uses a non-reentrant model
 38707 ;;
 38708                           
 38709                           	psect	text243
 38710  00985A                     __ptext243:
 38711                           	opt callstack 0
 38712  00985A                     _SwTimerSetTimeout:
 38713                           	opt callstack 19
 38714                           
 38715                           ; BSR set to: 0
 38716                           ;incstack = 0
 38717                           ;SwTimerSetTimeout@timerId stored from wreg
 38718  00985A  0100               	movlb	0	; () banked
 38719  00985C  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 38720                           
 38721                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 38722  00985E  9EF2               	bcf	4082,7,c	;volatile
 38723                           
 38724                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 38725  009860  0EE0               	movlw	224
 38726  009862  0100               	movlb	0	; () banked
 38727  009864  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 38728  009866  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 38729  009868  0EFF               	movlw	255
 38730  00986A  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 38731  00986C  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 38732  00986E  0EFF               	movlw	255
 38733  009870  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 38734  009872  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 38735  009874  0EFF               	movlw	255
 38736  009876  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 38737  009878  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 38738  00987A  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 38739  00987C  0D08               	mullw	8
 38740  00987E  0E00               	movlw	low _swTimers
 38741  009880  24F3               	addwf	prodl,w,c
 38742  009882  6ED9               	movwf	fsr2l,c
 38743  009884  0E03               	movlw	high _swTimers
 38744  009886  20F4               	addwfc	prodh,w,c
 38745  009888  6EDA               	movwf	fsr2h,c
 38746  00988A  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 38747  00988E  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 38748  009892  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 38749  009896  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 38750                           
 38751                           ; BSR set to: 0
 38752                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 38753  00989A  8EF2               	bsf	4082,7,c	;volatile
 38754                           
 38755                           ; BSR set to: 0
 38756  00989C  0012               	return		;funcret
 38757  00989E                     __end_of_SwTimerSetTimeout:
 38758                           	opt callstack 0
 38759                           
 38760 ;; *************** function _InitDefault868Channels *****************
 38761 ;; Defined at:
 38762 ;;		line 980 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38763 ;; Parameters:    Size  Location     Type
 38764 ;;		None
 38765 ;; Auto vars:     Size  Location     Type
 38766 ;;  i               1   11[BANK0 ] unsigned char 
 38767 ;; Return value:  Size  Location     Type
 38768 ;;                  1    wreg      void 
 38769 ;; Registers used:
 38770 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38771 ;; Tracked objects:
 38772 ;;		On entry : 0/0
 38773 ;;		On exit  : 0/0
 38774 ;;		Unchanged: 0/0
 38775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38777 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38779 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38780 ;;Total ram usage:        1 bytes
 38781 ;; Hardware stack levels used:    1
 38782 ;; Hardware stack levels required when called:    8
 38783 ;; This function calls:
 38784 ;;		_memcpy
 38785 ;;		_memset
 38786 ;; This function is called by:
 38787 ;;		_LORAWAN_Reset
 38788 ;; This function uses a non-reentrant model
 38789 ;;
 38790                           
 38791                           	psect	text244
 38792  00893C                     __ptext244:
 38793                           	opt callstack 0
 38794  00893C                     _InitDefault868Channels:
 38795                           	opt callstack 21
 38796                           
 38797                           ;lorawan_eu.c: 982: uint8_t i;;lorawan_eu.c: 984: memset (Channels, 0, sizeof(Channels) 
      +                          );
 38798                           
 38799                           ; BSR set to: 0
 38800                           ;incstack = 0
 38801  00893C  0E14               	movlw	low _Channels
 38802  00893E  0100               	movlb	0	; () banked
 38803  008940  6F60               	movwf	memset@p1& (0+255),b
 38804  008942  0E04               	movlw	high _Channels
 38805  008944  6F61               	movwf	(memset@p1+1)& (0+255),b
 38806  008946  0E00               	movlw	0
 38807  008948  6F63               	movwf	(memset@c+1)& (0+255),b
 38808  00894A  0E00               	movlw	0
 38809  00894C  6F62               	movwf	memset@c& (0+255),b
 38810  00894E  0E00               	movlw	0
 38811  008950  6F65               	movwf	(memset@n+1)& (0+255),b
 38812  008952  0EE0               	movlw	224
 38813  008954  6F64               	movwf	memset@n& (0+255),b
 38814  008956  EC70  F04F         	call	_memset	;wreg free
 38815                           
 38816                           ;lorawan_eu.c: 985: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 38817  00895A  0E14               	movlw	low _Channels
 38818  00895C  0100               	movlb	0	; () banked
 38819  00895E  6F60               	movwf	memcpy@d1& (0+255),b
 38820  008960  0E04               	movlw	high _Channels
 38821  008962  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38822  008964  0E48               	movlw	low _DefaultChannels868
 38823  008966  6F62               	movwf	memcpy@s1& (0+255),b
 38824  008968  0EFF               	movlw	high _DefaultChannels868
 38825  00896A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38826  00896C  0E00               	movlw	0
 38827  00896E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38828  008970  0E38               	movlw	56
 38829  008972  6F64               	movwf	memcpy@n& (0+255),b
 38830  008974  ECC3  F047         	call	_memcpy	;wreg free
 38831                           
 38832                           ;lorawan_eu.c: 986: for (i = 3; i < 16; i++)
 38833  008978  0E03               	movlw	3
 38834  00897A  0100               	movlb	0	; () banked
 38835  00897C  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 38836  00897E                     l21410:
 38837                           
 38838                           ; BSR set to: 0
 38839                           ;lorawan_eu.c: 987: {;lorawan_eu.c: 990: Channels[i].dutyCycle = (65535U);
 38840  00897E  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 38841  008980  0D0E               	mullw	14
 38842  008982  0E1A               	movlw	low (_Channels+6)
 38843  008984  24F3               	addwf	prodl,w,c
 38844  008986  6ED9               	movwf	fsr2l,c
 38845  008988  0E04               	movlw	high (_Channels+6)
 38846  00898A  20F4               	addwfc	prodh,w,c
 38847  00898C  6EDA               	movwf	fsr2h,c
 38848  00898E  0EFF               	movlw	255
 38849  008990  6EDE               	movwf	postinc2,c
 38850  008992  0EFF               	movlw	255
 38851  008994  6EDD               	movwf	postdec2,c
 38852                           
 38853                           ;lorawan_eu.c: 991: Channels[i].dataRange.value = (255);
 38854  008996  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 38855  008998  0D0E               	mullw	14
 38856  00899A  0E19               	movlw	low (_Channels+5)
 38857  00899C  24F3               	addwf	prodl,w,c
 38858  00899E  6ED9               	movwf	fsr2l,c
 38859  0089A0  0E04               	movlw	high (_Channels+5)
 38860  0089A2  20F4               	addwfc	prodh,w,c
 38861  0089A4  6EDA               	movwf	fsr2h,c
 38862  0089A6  0EFF               	movlw	255
 38863  0089A8  6EDF               	movwf	indf2,c
 38864                           
 38865                           ; BSR set to: 0
 38866  0089AA  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 38867                           
 38868                           ; BSR set to: 0
 38869  0089AC  0E0F               	movlw	15
 38870  0089AE  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 38871  0089B0  D7E6               	goto	l21410
 38872  0089B2  0012               	return	
 38873  0089B4                     __end_of_InitDefault868Channels:
 38874                           	opt callstack 0
 38875                           
 38876 ;; *************** function _InitDefault433Channels *****************
 38877 ;; Defined at:
 38878 ;;		line 995 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38879 ;; Parameters:    Size  Location     Type
 38880 ;;		None
 38881 ;; Auto vars:     Size  Location     Type
 38882 ;;  i               1   11[BANK0 ] unsigned char 
 38883 ;; Return value:  Size  Location     Type
 38884 ;;                  1    wreg      void 
 38885 ;; Registers used:
 38886 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38887 ;; Tracked objects:
 38888 ;;		On entry : 0/0
 38889 ;;		On exit  : 0/0
 38890 ;;		Unchanged: 0/0
 38891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38896 ;;Total ram usage:        1 bytes
 38897 ;; Hardware stack levels used:    1
 38898 ;; Hardware stack levels required when called:    8
 38899 ;; This function calls:
 38900 ;;		_memcpy
 38901 ;;		_memset
 38902 ;; This function is called by:
 38903 ;;		_LORAWAN_Reset
 38904 ;; This function uses a non-reentrant model
 38905 ;;
 38906                           
 38907                           	psect	text245
 38908  0089B4                     __ptext245:
 38909                           	opt callstack 0
 38910  0089B4                     _InitDefault433Channels:
 38911                           	opt callstack 21
 38912                           
 38913                           ;lorawan_eu.c: 997: uint8_t i;;lorawan_eu.c: 999: memset (Channels, 0, sizeof(Channels) 
      +                          );
 38914                           
 38915                           ; BSR set to: 0
 38916                           ;incstack = 0
 38917  0089B4  0E14               	movlw	low _Channels
 38918  0089B6  0100               	movlb	0	; () banked
 38919  0089B8  6F60               	movwf	memset@p1& (0+255),b
 38920  0089BA  0E04               	movlw	high _Channels
 38921  0089BC  6F61               	movwf	(memset@p1+1)& (0+255),b
 38922  0089BE  0E00               	movlw	0
 38923  0089C0  6F63               	movwf	(memset@c+1)& (0+255),b
 38924  0089C2  0E00               	movlw	0
 38925  0089C4  6F62               	movwf	memset@c& (0+255),b
 38926  0089C6  0E00               	movlw	0
 38927  0089C8  6F65               	movwf	(memset@n+1)& (0+255),b
 38928  0089CA  0EE0               	movlw	224
 38929  0089CC  6F64               	movwf	memset@n& (0+255),b
 38930  0089CE  EC70  F04F         	call	_memset	;wreg free
 38931                           
 38932                           ;lorawan_eu.c: 1000: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 38933  0089D2  0E14               	movlw	low _Channels
 38934  0089D4  0100               	movlb	0	; () banked
 38935  0089D6  6F60               	movwf	memcpy@d1& (0+255),b
 38936  0089D8  0E04               	movlw	high _Channels
 38937  0089DA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38938  0089DC  0E80               	movlw	low _DefaultChannels433
 38939  0089DE  6F62               	movwf	memcpy@s1& (0+255),b
 38940  0089E0  0EFF               	movlw	high _DefaultChannels433
 38941  0089E2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38942  0089E4  0E00               	movlw	0
 38943  0089E6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38944  0089E8  0E2A               	movlw	42
 38945  0089EA  6F64               	movwf	memcpy@n& (0+255),b
 38946  0089EC  ECC3  F047         	call	_memcpy	;wreg free
 38947                           
 38948                           ;lorawan_eu.c: 1001: for (i = 3; i < 16; i++)
 38949  0089F0  0E03               	movlw	3
 38950  0089F2  0100               	movlb	0	; () banked
 38951  0089F4  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 38952  0089F6                     l21426:
 38953                           
 38954                           ; BSR set to: 0
 38955                           ;lorawan_eu.c: 1002: {;lorawan_eu.c: 1005: Channels[i].dutyCycle = (65535U);
 38956  0089F6  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 38957  0089F8  0D0E               	mullw	14
 38958  0089FA  0E1A               	movlw	low (_Channels+6)
 38959  0089FC  24F3               	addwf	prodl,w,c
 38960  0089FE  6ED9               	movwf	fsr2l,c
 38961  008A00  0E04               	movlw	high (_Channels+6)
 38962  008A02  20F4               	addwfc	prodh,w,c
 38963  008A04  6EDA               	movwf	fsr2h,c
 38964  008A06  0EFF               	movlw	255
 38965  008A08  6EDE               	movwf	postinc2,c
 38966  008A0A  0EFF               	movlw	255
 38967  008A0C  6EDD               	movwf	postdec2,c
 38968                           
 38969                           ;lorawan_eu.c: 1006: Channels[i].dataRange.value = (255);
 38970  008A0E  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 38971  008A10  0D0E               	mullw	14
 38972  008A12  0E19               	movlw	low (_Channels+5)
 38973  008A14  24F3               	addwf	prodl,w,c
 38974  008A16  6ED9               	movwf	fsr2l,c
 38975  008A18  0E04               	movlw	high (_Channels+5)
 38976  008A1A  20F4               	addwfc	prodh,w,c
 38977  008A1C  6EDA               	movwf	fsr2h,c
 38978  008A1E  0EFF               	movlw	255
 38979  008A20  6EDF               	movwf	indf2,c
 38980                           
 38981                           ; BSR set to: 0
 38982  008A22  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 38983                           
 38984                           ; BSR set to: 0
 38985  008A24  0E0F               	movlw	15
 38986  008A26  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 38987  008A28  D7E6               	goto	l21426
 38988  008A2A  0012               	return	
 38989  008A2C                     __end_of_InitDefault433Channels:
 38990                           	opt callstack 0
 38991                           
 38992 ;; *************** function _memset *****************
 38993 ;; Defined at:
 38994 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
 38995 ;; Parameters:    Size  Location     Type
 38996 ;;  p1              2    0[BANK0 ] PTR void 
 38997 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 38998 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 38999 ;;  c               2    2[BANK0 ] int 
 39000 ;;  n               2    4[BANK0 ] unsigned int 
 39001 ;; Auto vars:     Size  Location     Type
 39002 ;;  p               2    6[BANK0 ] PTR unsigned char 
 39003 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 39004 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 39005 ;; Return value:  Size  Location     Type
 39006 ;;                  2    0[BANK0 ] PTR void 
 39007 ;; Registers used:
 39008 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39009 ;; Tracked objects:
 39010 ;;		On entry : 0/0
 39011 ;;		On exit  : 0/0
 39012 ;;		Unchanged: 0/0
 39013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39014 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39015 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39017 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39018 ;;Total ram usage:        8 bytes
 39019 ;; Hardware stack levels used:    1
 39020 ;; Hardware stack levels required when called:    7
 39021 ;; This function calls:
 39022 ;;		Nothing
 39023 ;; This function is called by:
 39024 ;;		_AESCmac
 39025 ;;		_GenerateSubkey
 39026 ;;		_LORAWAN_Reset
 39027 ;;		_InitDefault868Channels
 39028 ;;		_InitDefault433Channels
 39029 ;;		_AssemblePacket
 39030 ;;		_PrepareJoinRequestFrame
 39031 ;;		_PrepareSessionKeys
 39032 ;;		_AssembleEncryptionBlock
 39033 ;; This function uses a non-reentrant model
 39034 ;;
 39035                           
 39036                           	psect	text246
 39037  009EE0                     __ptext246:
 39038                           	opt callstack 0
 39039  009EE0                     _memset:
 39040                           	opt callstack 19
 39041                           
 39042                           ; BSR set to: 0
 39043                           ;incstack = 0
 39044  009EE0  C060  F066         	movff	memset@p1,memset@p
 39045  009EE4  C061  F067         	movff	memset@p1+1,memset@p+1
 39046  009EE8  D008               	goto	l18026
 39047  009EEA                     l18022:
 39048                           
 39049                           ; BSR set to: 0
 39050  009EEA  C066  FFD9         	movff	memset@p,fsr2l
 39051  009EEE  C067  FFDA         	movff	memset@p+1,fsr2h
 39052  009EF2  C062  FFDF         	movff	memset@c,indf2
 39053                           
 39054                           ; BSR set to: 0
 39055  009EF6  4B66               	infsnz	memset@p& (0+255),f,b
 39056  009EF8  2B67               	incf	(memset@p+1)& (0+255),f,b
 39057  009EFA                     l18026:
 39058  009EFA  0100               	movlb	0	; () banked
 39059  009EFC  0764               	decf	memset@n& (0+255),f,b
 39060  009EFE  A0D8               	btfss	status,0,c
 39061  009F00  0765               	decf	(memset@n+1)& (0+255),f,b
 39062  009F02  2964               	incf	memset@n& (0+255),w,b
 39063  009F04  E1F2               	bnz	l18022
 39064  009F06  2965               	incf	(memset@n+1)& (0+255),w,b
 39065  009F08  B4D8               	btfsc	status,2,c
 39066  009F0A  0012               	return	
 39067  009F0C  D7EE               	goto	l18022
 39068  009F0E                     __end_of_memset:
 39069                           	opt callstack 0
 39070                           
 39071 ;; *************** function _memcpy *****************
 39072 ;; Defined at:
 39073 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memcpy.c"
 39074 ;; Parameters:    Size  Location     Type
 39075 ;;  d1              2    0[BANK0 ] PTR void 
 39076 ;;		 -> sensorsString(40), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 39077 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESEncodeLoRa@useKey(16), 
 39078 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 39079 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 39080 ;;  s1              2    2[BANK0 ] PTR const void 
 39081 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), clearString(40), sensorsString(40), 
 39082 ;;		 -> deviceEui(8), appEui(8), appKey(16), AssembleEncryptionBlock@frameCounter(4), 
 39083 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), 
 39084 ;;		 -> LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessio
      +nKey(16), loRa.activationParameters.networkSessionKey(16), 
 39085 ;;		 -> loRa.activationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), loRa.activationParamete
      +rs.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), 
 39086 ;;		 -> loRa.activationParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), FskSyncWo
      +rdBuff(3), UpdateCfList@joinAccept(2), 
 39087 ;;		 -> loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), 
 39088 ;;		 -> loRa(245), DefaultChannels433(42), DefaultChannels868(56), RadioConfiguration.syncWord(8), 
 39089 ;;		 -> RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 39090 ;;  n               2    4[BANK0 ] unsigned int 
 39091 ;; Auto vars:     Size  Location     Type
 39092 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 39093 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), clearString(40), sensorsString(40), 
 39094 ;;		 -> deviceEui(8), appEui(8), appKey(16), AssembleEncryptionBlock@frameCounter(4), 
 39095 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), 
 39096 ;;		 -> LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessio
      +nKey(16), loRa.activationParameters.networkSessionKey(16), 
 39097 ;;		 -> loRa.activationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), loRa.activationParamete
      +rs.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), 
 39098 ;;		 -> loRa.activationParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), FskSyncWo
      +rdBuff(3), UpdateCfList@joinAccept(2), 
 39099 ;;		 -> loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), 
 39100 ;;		 -> loRa(245), DefaultChannels433(42), DefaultChannels868(56), RadioConfiguration.syncWord(8), 
 39101 ;;		 -> RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 39102 ;;  d               2    7[BANK0 ] PTR unsigned char 
 39103 ;;		 -> sensorsString(40), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 39104 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESEncodeLoRa@useKey(16), 
 39105 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 39106 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 39107 ;;  tmp             1    6[BANK0 ] unsigned char 
 39108 ;; Return value:  Size  Location     Type
 39109 ;;                  2    0[BANK0 ] PTR void 
 39110 ;; Registers used:
 39111 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 39112 ;; Tracked objects:
 39113 ;;		On entry : 0/0
 39114 ;;		On exit  : 0/0
 39115 ;;		Unchanged: 0/0
 39116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39117 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39118 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39120 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39121 ;;Total ram usage:       11 bytes
 39122 ;; Hardware stack levels used:    1
 39123 ;; Hardware stack levels required when called:    7
 39124 ;; This function calls:
 39125 ;;		Nothing
 39126 ;; This function is called by:
 39127 ;;		_AESCmac
 39128 ;;		_RADIO_SetFSKSyncWord
 39129 ;;		_UpdateCfList
 39130 ;;		_InitDefault868Channels
 39131 ;;		_InitDefault433Channels
 39132 ;;		_AESEncodeLoRa
 39133 ;;		_LORAWAN_SetDeviceEui
 39134 ;;		_LORAWAN_SetApplicationEui
 39135 ;;		_LORAWAN_SetApplicationKey
 39136 ;;		_LORAWAN_RxDone
 39137 ;;		_AssemblePacket
 39138 ;;		_PrepareJoinRequestFrame
 39139 ;;		_PrepareSessionKeys
 39140 ;;		_AssembleEncryptionBlock
 39141 ;;		_ExtractMic
 39142 ;;		_ComputeMic
 39143 ;;		_acuadoriApp
 39144 ;;		_RADIO_GetData
 39145 ;;		_RADIO_GetFSKSyncWord
 39146 ;;		_LORAWAN_SetMcastNetworkSessionKey
 39147 ;;		_LORAWAN_SetMcastApplicationSessionKey
 39148 ;;		_LORAWAN_GetMcastApplicationSessionKey
 39149 ;;		_LORAWAN_GetMcastNetworkSessionKey
 39150 ;;		_LORAWAN_GetDeviceEui
 39151 ;;		_LORAWAN_GetApplicationEui
 39152 ;;		_LORAWAN_SetNetworkSessionKey
 39153 ;;		_LORAWAN_GetNetworkSessionKey
 39154 ;;		_LORAWAN_SetApplicationSessionKey
 39155 ;;		_LORAWAN_GetApplicationSessionKey
 39156 ;;		_LORAWAN_GetApplicationKey
 39157 ;; This function uses a non-reentrant model
 39158 ;;
 39159                           
 39160                           	psect	text247
 39161  008F86                     __ptext247:
 39162                           	opt callstack 0
 39163  008F86                     _memcpy:
 39164                           	opt callstack 16
 39165                           
 39166                           ; BSR set to: 0
 39167                           ;incstack = 0
 39168  008F86  C062  F069         	movff	memcpy@s1,memcpy@s
 39169  008F8A  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 39170  008F8E  C060  F067         	movff	memcpy@d1,memcpy@d
 39171  008F92  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 39172  008F96  D01D               	goto	l17818
 39173  008F98                     l17810:
 39174                           
 39175                           ; BSR set to: 0
 39176  008F98  C069  FFF6         	movff	memcpy@s,tblptrl
 39177  008F9C  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 39178  008FA0  0E00               	movlw	low (__mediumconst shr (0+16))
 39179  008FA2  6EF8               	movwf	tblptru,c
 39180  008FA4  0E0F               	movlw	(high __ramtop+-1)
 39181  008FA6  64F7               	cpfsgt	tblptrh,c
 39182  008FA8  D003               	bra	u18657
 39183  008FAA  0008               	tblrd		*
 39184  008FAC  50F5               	movf	tablat,w,c
 39185  008FAE  D005               	bra	u18650
 39186  008FB0                     u18657:
 39187  008FB0  CFF6 FFE9          	movff	tblptrl,fsr0l
 39188  008FB4  CFF7 FFEA          	movff	tblptrh,fsr0h
 39189  008FB8  50EF               	movf	indf0,w,c
 39190  008FBA                     u18650:
 39191  008FBA  0100               	movlb	0	; () banked
 39192  008FBC  6F66               	movwf	memcpy@tmp& (0+255),b
 39193                           
 39194                           ; BSR set to: 0
 39195  008FBE  4B69               	infsnz	memcpy@s& (0+255),f,b
 39196  008FC0  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 39197                           
 39198                           ; BSR set to: 0
 39199  008FC2  C067  FFD9         	movff	memcpy@d,fsr2l
 39200  008FC6  C068  FFDA         	movff	memcpy@d+1,fsr2h
 39201  008FCA  C066  FFDF         	movff	memcpy@tmp,indf2
 39202                           
 39203                           ; BSR set to: 0
 39204  008FCE  4B67               	infsnz	memcpy@d& (0+255),f,b
 39205  008FD0  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 39206  008FD2                     l17818:
 39207  008FD2  0100               	movlb	0	; () banked
 39208  008FD4  0764               	decf	memcpy@n& (0+255),f,b
 39209  008FD6  A0D8               	btfss	status,0,c
 39210  008FD8  0765               	decf	(memcpy@n+1)& (0+255),f,b
 39211  008FDA  2964               	incf	memcpy@n& (0+255),w,b
 39212  008FDC  E1DD               	bnz	l17810
 39213  008FDE  2965               	incf	(memcpy@n+1)& (0+255),w,b
 39214  008FE0  B4D8               	btfsc	status,2,c
 39215  008FE2  0012               	return	
 39216  008FE4  D7D9               	goto	l17810
 39217  008FE6                     __end_of_memcpy:
 39218                           	opt callstack 0
 39219                           
 39220 ;; *************** function _CreateAllSoftwareTimers *****************
 39221 ;; Defined at:
 39222 ;;		line 938 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39223 ;; Parameters:    Size  Location     Type
 39224 ;;		None
 39225 ;; Auto vars:     Size  Location     Type
 39226 ;;		None
 39227 ;; Return value:  Size  Location     Type
 39228 ;;                  1    wreg      void 
 39229 ;; Registers used:
 39230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39231 ;; Tracked objects:
 39232 ;;		On entry : 0/0
 39233 ;;		On exit  : 0/0
 39234 ;;		Unchanged: 0/0
 39235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39240 ;;Total ram usage:        0 bytes
 39241 ;; Hardware stack levels used:    1
 39242 ;; Hardware stack levels required when called:    8
 39243 ;; This function calls:
 39244 ;;		_SwTimerCreate
 39245 ;; This function is called by:
 39246 ;;		_LORAWAN_Init
 39247 ;; This function uses a non-reentrant model
 39248 ;;
 39249                           
 39250                           	psect	text248
 39251  0093FC                     __ptext248:
 39252                           	opt callstack 0
 39253  0093FC                     _CreateAllSoftwareTimers:
 39254                           	opt callstack 21
 39255                           
 39256                           ;lorawan_eu.c: 940: loRa.joinAccept1TimerId = SwTimerCreate();
 39257                           
 39258                           ; BSR set to: 0
 39259                           ;incstack = 0
 39260  0093FC  EC16  F045         	call	_SwTimerCreate	;wreg free
 39261  009400  0102               	movlb	2	; () banked
 39262  009402  6FE7               	movwf	(_loRa+226)& (0+255),b
 39263                           
 39264                           ;lorawan_eu.c: 941: loRa.joinAccept2TimerId = SwTimerCreate();
 39265  009404  EC16  F045         	call	_SwTimerCreate	;wreg free
 39266  009408  0102               	movlb	2	; () banked
 39267  00940A  6FE8               	movwf	(_loRa+227)& (0+255),b
 39268                           
 39269                           ;lorawan_eu.c: 942: loRa.receiveWindow1TimerId = SwTimerCreate();
 39270  00940C  EC16  F045         	call	_SwTimerCreate	;wreg free
 39271  009410  0102               	movlb	2	; () banked
 39272  009412  6FE9               	movwf	(_loRa+228)& (0+255),b
 39273                           
 39274                           ;lorawan_eu.c: 943: loRa.receiveWindow2TimerId = SwTimerCreate();
 39275  009414  EC16  F045         	call	_SwTimerCreate	;wreg free
 39276  009418  0102               	movlb	2	; () banked
 39277  00941A  6FEA               	movwf	(_loRa+229)& (0+255),b
 39278                           
 39279                           ;lorawan_eu.c: 944: loRa.linkCheckTimerId = SwTimerCreate();
 39280  00941C  EC16  F045         	call	_SwTimerCreate	;wreg free
 39281  009420  0102               	movlb	2	; () banked
 39282  009422  6FEC               	movwf	(_loRa+231)& (0+255),b
 39283                           
 39284                           ;lorawan_eu.c: 945: loRa.ackTimeoutTimerId = SwTimerCreate();
 39285  009424  EC16  F045         	call	_SwTimerCreate	;wreg free
 39286  009428  0102               	movlb	2	; () banked
 39287  00942A  6FED               	movwf	(_loRa+232)& (0+255),b
 39288                           
 39289                           ;lorawan_eu.c: 946: loRa.automaticReplyTimerId = SwTimerCreate();
 39290  00942C  EC16  F045         	call	_SwTimerCreate	;wreg free
 39291  009430  0102               	movlb	2	; () banked
 39292  009432  6FEB               	movwf	(_loRa+230)& (0+255),b
 39293                           
 39294                           ;lorawan_eu.c: 947: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 39295  009434  EC16  F045         	call	_SwTimerCreate	;wreg free
 39296  009438  0102               	movlb	2	; () banked
 39297  00943A  6FEF               	movwf	(_loRa+234)& (0+255),b
 39298                           
 39299                           ;lorawan_eu.c: 948: loRa.abpJoinTimerId = SwTimerCreate();
 39300  00943C  EC16  F045         	call	_SwTimerCreate	;wreg free
 39301  009440  0102               	movlb	2	; () banked
 39302  009442  6FF8               	movwf	(_loRa+243)& (0+255),b
 39303                           
 39304                           ;lorawan_eu.c: 949: loRa.dutyCycleTimerId = SwTimerCreate();
 39305  009444  EC16  F045         	call	_SwTimerCreate	;wreg free
 39306  009448  0102               	movlb	2	; () banked
 39307  00944A  6FEE               	movwf	(_loRa+233)& (0+255),b
 39308                           
 39309                           ; BSR set to: 2
 39310  00944C  0012               	return		;funcret
 39311  00944E                     __end_of_CreateAllSoftwareTimers:
 39312                           	opt callstack 0
 39313                           
 39314 ;; *************** function _SwTimerCreate *****************
 39315 ;; Defined at:
 39316 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39317 ;; Parameters:    Size  Location     Type
 39318 ;;		None
 39319 ;; Auto vars:     Size  Location     Type
 39320 ;;  retVal          1    0[BANK0 ] unsigned char 
 39321 ;; Return value:  Size  Location     Type
 39322 ;;                  1    wreg      unsigned char 
 39323 ;; Registers used:
 39324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39325 ;; Tracked objects:
 39326 ;;		On entry : 0/0
 39327 ;;		On exit  : 0/0
 39328 ;;		Unchanged: 0/0
 39329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39331 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39333 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39334 ;;Total ram usage:        1 bytes
 39335 ;; Hardware stack levels used:    1
 39336 ;; Hardware stack levels required when called:    7
 39337 ;; This function calls:
 39338 ;;		Nothing
 39339 ;; This function is called by:
 39340 ;;		_RADIO_Init
 39341 ;;		_CreateAllSoftwareTimers
 39342 ;; This function uses a non-reentrant model
 39343 ;;
 39344                           
 39345                           	psect	text249
 39346  008A2C                     __ptext249:
 39347                           	opt callstack 0
 39348  008A2C                     _SwTimerCreate:
 39349                           	opt callstack 21
 39350                           
 39351                           ;sw_timer.c: 156: uint8_t retVal;;sw_timer.c: 157: if (allocatedTimers < 20)
 39352                           
 39353                           ; BSR set to: 2
 39354                           ;incstack = 0
 39355  008A2C  0E14               	movlw	20
 39356  008A2E  0101               	movlb	1	; () banked
 39357  008A30  6128               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 39358  008A32  D034               	goto	l242
 39359                           
 39360                           ; BSR set to: 1
 39361                           ;sw_timer.c: 158: {;sw_timer.c: 159: (INTCONbits.GIE = 0);
 39362  008A34  9EF2               	bcf	4082,7,c	;volatile
 39363                           
 39364                           ;sw_timer.c: 160: retVal = allocatedTimers;
 39365  008A36  C128  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 39366                           
 39367                           ; BSR set to: 1
 39368                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 39369  008A3A  0100               	movlb	0	; () banked
 39370  008A3C  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39371  008A3E  0D08               	mullw	8
 39372  008A40  0E04               	movlw	low (_swTimers+4)
 39373  008A42  24F3               	addwf	prodl,w,c
 39374  008A44  6ED9               	movwf	fsr2l,c
 39375  008A46  0E03               	movlw	high (_swTimers+4)
 39376  008A48  20F4               	addwfc	prodh,w,c
 39377  008A4A  6EDA               	movwf	fsr2h,c
 39378  008A4C  0E00               	movlw	0
 39379  008A4E  6EDF               	movwf	indf2,c
 39380                           
 39381                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 39382  008A50  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39383  008A52  0D08               	mullw	8
 39384  008A54  0E00               	movlw	low _swTimers
 39385  008A56  24F3               	addwf	prodl,w,c
 39386  008A58  6ED9               	movwf	fsr2l,c
 39387  008A5A  0E03               	movlw	high _swTimers
 39388  008A5C  20F4               	addwfc	prodh,w,c
 39389  008A5E  6EDA               	movwf	fsr2h,c
 39390  008A60  6ADE               	clrf	postinc2,c
 39391  008A62  6ADE               	clrf	postinc2,c
 39392  008A64  6ADE               	clrf	postinc2,c
 39393  008A66  6ADD               	clrf	postdec2,c
 39394                           
 39395                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 39396  008A68  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39397  008A6A  0D08               	mullw	8
 39398  008A6C  0E05               	movlw	low (_swTimers+5)
 39399  008A6E  24F3               	addwf	prodl,w,c
 39400  008A70  6ED9               	movwf	fsr2l,c
 39401  008A72  0E03               	movlw	high (_swTimers+5)
 39402  008A74  20F4               	addwfc	prodh,w,c
 39403  008A76  6EDA               	movwf	fsr2h,c
 39404  008A78  0E00               	movlw	0
 39405  008A7A  6EDF               	movwf	indf2,c
 39406                           
 39407                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 39408  008A7C  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39409  008A7E  0D08               	mullw	8
 39410  008A80  0E06               	movlw	low (_swTimers+6)
 39411  008A82  24F3               	addwf	prodl,w,c
 39412  008A84  6ED9               	movwf	fsr2l,c
 39413  008A86  0E03               	movlw	high (_swTimers+6)
 39414  008A88  20F4               	addwfc	prodh,w,c
 39415  008A8A  6EDA               	movwf	fsr2h,c
 39416  008A8C  0E00               	movlw	0
 39417  008A8E  6EDE               	movwf	postinc2,c
 39418  008A90  0E00               	movlw	0
 39419  008A92  6EDD               	movwf	postdec2,c
 39420                           
 39421                           ; BSR set to: 0
 39422                           ;sw_timer.c: 165: allocatedTimers++;
 39423  008A94  0101               	movlb	1	; () banked
 39424  008A96  2B28               	incf	_allocatedTimers& (0+255),f,b	;volatile
 39425                           
 39426                           ; BSR set to: 1
 39427                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 39428  008A98  8EF2               	bsf	4082,7,c	;volatile
 39429                           
 39430                           ;sw_timer.c: 167: }
 39431  008A9A  D001               	goto	l15322
 39432  008A9C                     l242:
 39433  008A9C  D7FF               	goto	l242
 39434  008A9E                     l15322:
 39435                           
 39436                           ; BSR set to: 1
 39437                           ;sw_timer.c: 175: };sw_timer.c: 176: };sw_timer.c: 177: return retVal;
 39438  008A9E  0100               	movlb	0	; () banked
 39439  008AA0  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39440                           
 39441                           ; BSR set to: 0
 39442  008AA2  0012               	return		;funcret
 39443  008AA4                     __end_of_SwTimerCreate:
 39444                           	opt callstack 0
 39445                           
 39446 ;; *************** function _GPIOInit *****************
 39447 ;; Defined at:
 39448 ;;		line 319 in file "rn2483APP.c"
 39449 ;; Parameters:    Size  Location     Type
 39450 ;;		None
 39451 ;; Auto vars:     Size  Location     Type
 39452 ;;		None
 39453 ;; Return value:  Size  Location     Type
 39454 ;;                  1    wreg      void 
 39455 ;; Registers used:
 39456 ;;		wreg, status,2, status,0, cstack
 39457 ;; Tracked objects:
 39458 ;;		On entry : 0/0
 39459 ;;		On exit  : 0/0
 39460 ;;		Unchanged: 0/0
 39461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39466 ;;Total ram usage:        0 bytes
 39467 ;; Hardware stack levels used:    1
 39468 ;; Hardware stack levels required when called:    8
 39469 ;; This function calls:
 39470 ;;		_GPIOAnalogMode
 39471 ;;		_GPIODigitalWrite
 39472 ;;		_GPIOSet
 39473 ;; This function is called by:
 39474 ;;		_main
 39475 ;; This function uses a non-reentrant model
 39476 ;;
 39477                           
 39478                           	psect	text250
 39479  005CC6                     __ptext250:
 39480                           	opt callstack 0
 39481  005CC6                     _GPIOInit:
 39482                           	opt callstack 22
 39483                           
 39484                           ;rn2483APP.c: 332: GPIOSet(0x00, 0);
 39485                           
 39486                           ; BSR set to: 0
 39487                           ;incstack = 0
 39488  005CC6  0E00               	movlw	0
 39489  005CC8  0100               	movlb	0	; () banked
 39490  005CCA  6F60               	movwf	GPIOSet@mode& (0+255),b
 39491  005CCC  0E00               	movlw	0
 39492  005CCE  EC57  F036         	call	_GPIOSet
 39493                           
 39494                           ;rn2483APP.c: 333: GPIOSet(0x01, 1);
 39495  005CD2  0E01               	movlw	1
 39496  005CD4  0100               	movlb	0	; () banked
 39497  005CD6  6F60               	movwf	GPIOSet@mode& (0+255),b
 39498  005CD8  0E01               	movlw	1
 39499  005CDA  EC57  F036         	call	_GPIOSet
 39500                           
 39501                           ;rn2483APP.c: 334: GPIOSet(0x02, 1);
 39502  005CDE  0E01               	movlw	1
 39503  005CE0  0100               	movlb	0	; () banked
 39504  005CE2  6F60               	movwf	GPIOSet@mode& (0+255),b
 39505  005CE4  0E02               	movlw	2
 39506  005CE6  EC57  F036         	call	_GPIOSet
 39507                           
 39508                           ;rn2483APP.c: 335: GPIOSet(0x03, 1);
 39509  005CEA  0E01               	movlw	1
 39510  005CEC  0100               	movlb	0	; () banked
 39511  005CEE  6F60               	movwf	GPIOSet@mode& (0+255),b
 39512  005CF0  0E03               	movlw	3
 39513  005CF2  EC57  F036         	call	_GPIOSet
 39514                           
 39515                           ;rn2483APP.c: 336: GPIOSet(0xFF, 0);
 39516  005CF6  0E00               	movlw	0
 39517  005CF8  0100               	movlb	0	; () banked
 39518  005CFA  6F60               	movwf	GPIOSet@mode& (0+255),b
 39519  005CFC  0EFF               	movlw	255
 39520  005CFE  EC57  F036         	call	_GPIOSet
 39521                           
 39522                           ;rn2483APP.c: 337: GPIOSet(0x04, 0);
 39523  005D02  0E00               	movlw	0
 39524  005D04  0100               	movlb	0	; () banked
 39525  005D06  6F60               	movwf	GPIOSet@mode& (0+255),b
 39526  005D08  0E04               	movlw	4
 39527  005D0A  EC57  F036         	call	_GPIOSet
 39528                           
 39529                           ;rn2483APP.c: 338: GPIOSet(0x05, 0);
 39530  005D0E  0E00               	movlw	0
 39531  005D10  0100               	movlb	0	; () banked
 39532  005D12  6F60               	movwf	GPIOSet@mode& (0+255),b
 39533  005D14  0E05               	movlw	5
 39534  005D16  EC57  F036         	call	_GPIOSet
 39535                           
 39536                           ;rn2483APP.c: 339: GPIOSet(0x06, 0);
 39537  005D1A  0E00               	movlw	0
 39538  005D1C  0100               	movlb	0	; () banked
 39539  005D1E  6F60               	movwf	GPIOSet@mode& (0+255),b
 39540  005D20  0E06               	movlw	6
 39541  005D22  EC57  F036         	call	_GPIOSet
 39542                           
 39543                           ;rn2483APP.c: 340: GPIOSet(0x16, 0);
 39544  005D26  0E00               	movlw	0
 39545  005D28  0100               	movlb	0	; () banked
 39546  005D2A  6F60               	movwf	GPIOSet@mode& (0+255),b
 39547  005D2C  0E16               	movlw	22
 39548  005D2E  EC57  F036         	call	_GPIOSet
 39549                           
 39550                           ;rn2483APP.c: 341: GPIOSet(0x11, 0);
 39551  005D32  0E00               	movlw	0
 39552  005D34  0100               	movlb	0	; () banked
 39553  005D36  6F60               	movwf	GPIOSet@mode& (0+255),b
 39554  005D38  0E11               	movlw	17
 39555  005D3A  EC57  F036         	call	_GPIOSet
 39556                           
 39557                           ;rn2483APP.c: 342: GPIOSet(0x19, 0);
 39558  005D3E  0E00               	movlw	0
 39559  005D40  0100               	movlb	0	; () banked
 39560  005D42  6F60               	movwf	GPIOSet@mode& (0+255),b
 39561  005D44  0E19               	movlw	25
 39562  005D46  EC57  F036         	call	_GPIOSet
 39563                           
 39564                           ;rn2483APP.c: 345: GPIOAnalogMode(0x00, 0);
 39565  005D4A  0E00               	movlw	0
 39566  005D4C  0100               	movlb	0	; () banked
 39567  005D4E  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39568  005D50  0E00               	movlw	0
 39569  005D52  EC41  F031         	call	_GPIOAnalogMode
 39570                           
 39571                           ;rn2483APP.c: 346: GPIOAnalogMode(0x01, 1);
 39572  005D56  0E01               	movlw	1
 39573  005D58  0100               	movlb	0	; () banked
 39574  005D5A  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39575  005D5C  0E01               	movlw	1
 39576  005D5E  EC41  F031         	call	_GPIOAnalogMode
 39577                           
 39578                           ;rn2483APP.c: 347: GPIOAnalogMode(0x02, 1);
 39579  005D62  0E01               	movlw	1
 39580  005D64  0100               	movlb	0	; () banked
 39581  005D66  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39582  005D68  0E02               	movlw	2
 39583  005D6A  EC41  F031         	call	_GPIOAnalogMode
 39584                           
 39585                           ;rn2483APP.c: 348: GPIOAnalogMode(0x03, 1);
 39586  005D6E  0E01               	movlw	1
 39587  005D70  0100               	movlb	0	; () banked
 39588  005D72  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39589  005D74  0E03               	movlw	3
 39590  005D76  EC41  F031         	call	_GPIOAnalogMode
 39591                           
 39592                           ;rn2483APP.c: 349: GPIOAnalogMode(0xFF, 0);
 39593  005D7A  0E00               	movlw	0
 39594  005D7C  0100               	movlb	0	; () banked
 39595  005D7E  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39596  005D80  0EFF               	movlw	255
 39597  005D82  EC41  F031         	call	_GPIOAnalogMode
 39598                           
 39599                           ;rn2483APP.c: 350: GPIOAnalogMode(0x04, 0);
 39600  005D86  0E00               	movlw	0
 39601  005D88  0100               	movlb	0	; () banked
 39602  005D8A  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39603  005D8C  0E04               	movlw	4
 39604  005D8E  EC41  F031         	call	_GPIOAnalogMode
 39605                           
 39606                           ;rn2483APP.c: 351: GPIOAnalogMode(0x05, 0);
 39607  005D92  0E00               	movlw	0
 39608  005D94  0100               	movlb	0	; () banked
 39609  005D96  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39610  005D98  0E05               	movlw	5
 39611  005D9A  EC41  F031         	call	_GPIOAnalogMode
 39612                           
 39613                           ;rn2483APP.c: 352: GPIOAnalogMode(0x06, 0);
 39614  005D9E  0E00               	movlw	0
 39615  005DA0  0100               	movlb	0	; () banked
 39616  005DA2  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39617  005DA4  0E06               	movlw	6
 39618  005DA6  EC41  F031         	call	_GPIOAnalogMode
 39619                           
 39620                           ;rn2483APP.c: 353: GPIOAnalogMode(0x16, 0);
 39621  005DAA  0E00               	movlw	0
 39622  005DAC  0100               	movlb	0	; () banked
 39623  005DAE  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39624  005DB0  0E16               	movlw	22
 39625  005DB2  EC41  F031         	call	_GPIOAnalogMode
 39626                           
 39627                           ;rn2483APP.c: 354: GPIOAnalogMode(0x11, 0);
 39628  005DB6  0E00               	movlw	0
 39629  005DB8  0100               	movlb	0	; () banked
 39630  005DBA  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39631  005DBC  0E11               	movlw	17
 39632  005DBE  EC41  F031         	call	_GPIOAnalogMode
 39633                           
 39634                           ;rn2483APP.c: 355: GPIOAnalogMode(0x19, 0);
 39635  005DC2  0E00               	movlw	0
 39636  005DC4  0100               	movlb	0	; () banked
 39637  005DC6  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39638  005DC8  0E19               	movlw	25
 39639  005DCA  EC41  F031         	call	_GPIOAnalogMode
 39640                           
 39641                           ;rn2483APP.c: 357: GPIODigitalWrite(0x00, 0);
 39642  005DCE  0E00               	movlw	0
 39643  005DD0  0100               	movlb	0	; () banked
 39644  005DD2  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39645  005DD4  0E00               	movlw	0
 39646  005DD6  ECD5  F036         	call	_GPIODigitalWrite
 39647                           
 39648                           ;rn2483APP.c: 358: GPIODigitalWrite(0xFF, 0);
 39649  005DDA  0E00               	movlw	0
 39650  005DDC  0100               	movlb	0	; () banked
 39651  005DDE  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39652  005DE0  0EFF               	movlw	255
 39653  005DE2  ECD5  F036         	call	_GPIODigitalWrite
 39654                           
 39655                           ;rn2483APP.c: 359: GPIODigitalWrite(0x04, 0);
 39656  005DE6  0E00               	movlw	0
 39657  005DE8  0100               	movlb	0	; () banked
 39658  005DEA  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39659  005DEC  0E04               	movlw	4
 39660  005DEE  ECD5  F036         	call	_GPIODigitalWrite
 39661                           
 39662                           ;rn2483APP.c: 360: GPIODigitalWrite(0x16, 1);
 39663  005DF2  0E01               	movlw	1
 39664  005DF4  0100               	movlb	0	; () banked
 39665  005DF6  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39666  005DF8  0E16               	movlw	22
 39667  005DFA  ECD5  F036         	call	_GPIODigitalWrite
 39668  005DFE  0012               	return		;funcret
 39669  005E00                     __end_of_GPIOInit:
 39670                           	opt callstack 0
 39671                           
 39672 ;; *************** function _GPIOSet *****************
 39673 ;; Defined at:
 39674 ;;		line 85 in file "rn2483APP.c"
 39675 ;; Parameters:    Size  Location     Type
 39676 ;;  GPIO            1    wreg     unsigned char 
 39677 ;;  mode            1    0[BANK0 ] unsigned char 
 39678 ;; Auto vars:     Size  Location     Type
 39679 ;;  GPIO            1    1[BANK0 ] unsigned char 
 39680 ;; Return value:  Size  Location     Type
 39681 ;;                  1    wreg      void 
 39682 ;; Registers used:
 39683 ;;		wreg, status,2, status,0
 39684 ;; Tracked objects:
 39685 ;;		On entry : 0/0
 39686 ;;		On exit  : 0/0
 39687 ;;		Unchanged: 0/0
 39688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39689 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39690 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39692 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39693 ;;Total ram usage:        2 bytes
 39694 ;; Hardware stack levels used:    1
 39695 ;; Hardware stack levels required when called:    7
 39696 ;; This function calls:
 39697 ;;		Nothing
 39698 ;; This function is called by:
 39699 ;;		_GPIOInit
 39700 ;; This function uses a non-reentrant model
 39701 ;;
 39702                           
 39703                           	psect	text251
 39704  006CAE                     __ptext251:
 39705                           	opt callstack 0
 39706  006CAE                     _GPIOSet:
 39707                           	opt callstack 22
 39708                           
 39709                           ;incstack = 0
 39710                           ;GPIOSet@GPIO stored from wreg
 39711  006CAE  0100               	movlb	0	; () banked
 39712  006CB0  6F61               	movwf	GPIOSet@GPIO& (0+255),b
 39713                           
 39714                           ;rn2483APP.c: 87: switch(GPIO){
 39715  006CB2  D054               	goto	l16712
 39716  006CB4                     l16638:
 39717                           
 39718                           ; BSR set to: 0
 39719                           ;rn2483APP.c: 89: mode? TRISA |= (0x1) : TRISA &= ~(0x1);
 39720  006CB4  5160               	movf	GPIOSet@mode& (0+255),w,b
 39721  006CB6  B4D8               	btfsc	status,2,c
 39722  006CB8  D002               	goto	l16642
 39723                           
 39724                           ; BSR set to: 0
 39725  006CBA  8092               	bsf	3986,0,c	;volatile
 39726  006CBC  0012               	return	
 39727  006CBE                     l16642:
 39728                           
 39729                           ; BSR set to: 0
 39730  006CBE  9092               	bcf	3986,0,c	;volatile
 39731  006CC0  0012               	return	
 39732  006CC2                     l16644:
 39733                           
 39734                           ; BSR set to: 0
 39735                           ;rn2483APP.c: 92: mode? TRISA |= (0x2) : TRISA &= ~(0x2);
 39736  006CC2  5160               	movf	GPIOSet@mode& (0+255),w,b
 39737  006CC4  B4D8               	btfsc	status,2,c
 39738  006CC6  D002               	goto	l16648
 39739                           
 39740                           ; BSR set to: 0
 39741  006CC8  8292               	bsf	3986,1,c	;volatile
 39742  006CCA  0012               	return	
 39743  006CCC                     l16648:
 39744                           
 39745                           ; BSR set to: 0
 39746  006CCC  9292               	bcf	3986,1,c	;volatile
 39747  006CCE  0012               	return	
 39748  006CD0                     l16650:
 39749                           
 39750                           ; BSR set to: 0
 39751                           ;rn2483APP.c: 95: mode? TRISA |= (0x4) : TRISA &= ~(0x4);
 39752  006CD0  5160               	movf	GPIOSet@mode& (0+255),w,b
 39753  006CD2  B4D8               	btfsc	status,2,c
 39754  006CD4  D002               	goto	l16654
 39755                           
 39756                           ; BSR set to: 0
 39757  006CD6  8492               	bsf	3986,2,c	;volatile
 39758  006CD8  0012               	return	
 39759  006CDA                     l16654:
 39760                           
 39761                           ; BSR set to: 0
 39762  006CDA  9492               	bcf	3986,2,c	;volatile
 39763  006CDC  0012               	return	
 39764  006CDE                     l16656:
 39765                           
 39766                           ; BSR set to: 0
 39767                           ;rn2483APP.c: 98: mode? TRISA |= (0x8) : TRISA &= ~(0x8);
 39768  006CDE  5160               	movf	GPIOSet@mode& (0+255),w,b
 39769  006CE0  B4D8               	btfsc	status,2,c
 39770  006CE2  D002               	goto	l16660
 39771                           
 39772                           ; BSR set to: 0
 39773  006CE4  8692               	bsf	3986,3,c	;volatile
 39774  006CE6  0012               	return	
 39775  006CE8                     l16660:
 39776                           
 39777                           ; BSR set to: 0
 39778  006CE8  9692               	bcf	3986,3,c	;volatile
 39779  006CEA  0012               	return	
 39780  006CEC                     l16662:
 39781                           
 39782                           ; BSR set to: 0
 39783                           ;rn2483APP.c: 101: mode? TRISA |= (0x10) : TRISA &= ~(0x10);
 39784  006CEC  5160               	movf	GPIOSet@mode& (0+255),w,b
 39785  006CEE  B4D8               	btfsc	status,2,c
 39786  006CF0  D002               	goto	l16666
 39787                           
 39788                           ; BSR set to: 0
 39789  006CF2  8892               	bsf	3986,4,c	;volatile
 39790  006CF4  0012               	return	
 39791  006CF6                     l16666:
 39792                           
 39793                           ; BSR set to: 0
 39794  006CF6  9892               	bcf	3986,4,c	;volatile
 39795  006CF8  0012               	return	
 39796  006CFA                     l16668:
 39797                           
 39798                           ; BSR set to: 0
 39799                           ;rn2483APP.c: 104: mode? TRISA |= (0x20) : TRISA &= ~(0x20);
 39800  006CFA  5160               	movf	GPIOSet@mode& (0+255),w,b
 39801  006CFC  B4D8               	btfsc	status,2,c
 39802  006CFE  D002               	goto	l16672
 39803                           
 39804                           ; BSR set to: 0
 39805  006D00  8A92               	bsf	3986,5,c	;volatile
 39806  006D02  0012               	return	
 39807  006D04                     l16672:
 39808                           
 39809                           ; BSR set to: 0
 39810  006D04  9A92               	bcf	3986,5,c	;volatile
 39811  006D06  0012               	return	
 39812  006D08                     l16674:
 39813                           
 39814                           ; BSR set to: 0
 39815                           ;rn2483APP.c: 107: mode? TRISE |= (0x1) : TRISE &= ~(0x1);
 39816  006D08  5160               	movf	GPIOSet@mode& (0+255),w,b
 39817  006D0A  B4D8               	btfsc	status,2,c
 39818  006D0C  D002               	goto	l16678
 39819                           
 39820                           ; BSR set to: 0
 39821  006D0E  8096               	bsf	3990,0,c	;volatile
 39822  006D10  0012               	return	
 39823  006D12                     l16678:
 39824                           
 39825                           ; BSR set to: 0
 39826  006D12  9096               	bcf	3990,0,c	;volatile
 39827  006D14  0012               	return	
 39828  006D16                     l16680:
 39829                           
 39830                           ; BSR set to: 0
 39831                           ;rn2483APP.c: 110: mode? TRISE |= (0x2) : TRISE &= ~(0x2);
 39832  006D16  5160               	movf	GPIOSet@mode& (0+255),w,b
 39833  006D18  B4D8               	btfsc	status,2,c
 39834  006D1A  D002               	goto	l16684
 39835                           
 39836                           ; BSR set to: 0
 39837  006D1C  8296               	bsf	3990,1,c	;volatile
 39838  006D1E  0012               	return	
 39839  006D20                     l16684:
 39840                           
 39841                           ; BSR set to: 0
 39842  006D20  9296               	bcf	3990,1,c	;volatile
 39843  006D22  0012               	return	
 39844  006D24                     l16686:
 39845                           
 39846                           ; BSR set to: 0
 39847                           ;rn2483APP.c: 113: mode? TRISD |= (0x4) : TRISD &= ~(0x4);
 39848  006D24  5160               	movf	GPIOSet@mode& (0+255),w,b
 39849  006D26  B4D8               	btfsc	status,2,c
 39850  006D28  D002               	goto	l16690
 39851                           
 39852                           ; BSR set to: 0
 39853  006D2A  8495               	bsf	3989,2,c	;volatile
 39854  006D2C  0012               	return	
 39855  006D2E                     l16690:
 39856                           
 39857                           ; BSR set to: 0
 39858  006D2E  9495               	bcf	3989,2,c	;volatile
 39859  006D30  0012               	return	
 39860  006D32                     l16692:
 39861                           
 39862                           ; BSR set to: 0
 39863                           ;rn2483APP.c: 116: mode? TRISE |= (0x4) : TRISE &= ~(0x4);
 39864  006D32  5160               	movf	GPIOSet@mode& (0+255),w,b
 39865  006D34  B4D8               	btfsc	status,2,c
 39866  006D36  D002               	goto	l16696
 39867                           
 39868                           ; BSR set to: 0
 39869  006D38  8496               	bsf	3990,2,c	;volatile
 39870  006D3A  0012               	return	
 39871  006D3C                     l16696:
 39872                           
 39873                           ; BSR set to: 0
 39874  006D3C  9496               	bcf	3990,2,c	;volatile
 39875  006D3E  0012               	return	
 39876  006D40                     l16698:
 39877                           
 39878                           ; BSR set to: 0
 39879                           ;rn2483APP.c: 119: mode? TRISC |= (0x20) : TRISC &= ~(0x20);
 39880  006D40  5160               	movf	GPIOSet@mode& (0+255),w,b
 39881  006D42  B4D8               	btfsc	status,2,c
 39882  006D44  D002               	goto	l16702
 39883                           
 39884                           ; BSR set to: 0
 39885  006D46  8A94               	bsf	3988,5,c	;volatile
 39886  006D48  0012               	return	
 39887  006D4A                     l16702:
 39888                           
 39889                           ; BSR set to: 0
 39890  006D4A  9A94               	bcf	3988,5,c	;volatile
 39891  006D4C  0012               	return	
 39892  006D4E                     l16704:
 39893                           
 39894                           ; BSR set to: 0
 39895                           ;rn2483APP.c: 122: mode? TRISD |= (0x20) : TRISD &= ~(0x20);
 39896  006D4E  5160               	movf	GPIOSet@mode& (0+255),w,b
 39897  006D50  B4D8               	btfsc	status,2,c
 39898  006D52  D002               	goto	l16708
 39899                           
 39900                           ; BSR set to: 0
 39901  006D54  8A95               	bsf	3989,5,c	;volatile
 39902  006D56  0012               	return	
 39903  006D58                     l16708:
 39904                           
 39905                           ; BSR set to: 0
 39906  006D58  9A95               	bcf	3989,5,c	;volatile
 39907  006D5A  0012               	return	
 39908  006D5C                     l16712:
 39909  006D5C  0100               	movlb	0	; () banked
 39910  006D5E  5161               	movf	GPIOSet@GPIO& (0+255),w,b
 39911                           
 39912                           ; Switch size 1, requested type "simple"
 39913                           ; Number of cases is 12, Range of values is 0 to 255
 39914                           ; switch strategies available:
 39915                           ; Name         Instructions Cycles
 39916                           ; simple_byte           37    19 (average)
 39917                           ;	Chosen strategy is simple_byte
 39918  006D60  0A00               	xorlw	0	; case 0
 39919  006D62  B4D8               	btfsc	status,2,c
 39920  006D64  D7A7               	goto	l16638
 39921  006D66  0A01               	xorlw	1	; case 1
 39922  006D68  B4D8               	btfsc	status,2,c
 39923  006D6A  D7AB               	goto	l16644
 39924  006D6C  0A03               	xorlw	3	; case 2
 39925  006D6E  B4D8               	btfsc	status,2,c
 39926  006D70  D7AF               	goto	l16650
 39927  006D72  0A01               	xorlw	1	; case 3
 39928  006D74  B4D8               	btfsc	status,2,c
 39929  006D76  D7B3               	goto	l16656
 39930  006D78  0A07               	xorlw	7	; case 4
 39931  006D7A  B4D8               	btfsc	status,2,c
 39932  006D7C  D7BE               	goto	l16668
 39933  006D7E  0A01               	xorlw	1	; case 5
 39934  006D80  B4D8               	btfsc	status,2,c
 39935  006D82  D7C2               	goto	l16674
 39936  006D84  0A03               	xorlw	3	; case 6
 39937  006D86  B4D8               	btfsc	status,2,c
 39938  006D88  D7C6               	goto	l16680
 39939  006D8A  0A01               	xorlw	1	; case 7
 39940  006D8C  B4D8               	btfsc	status,2,c
 39941  006D8E  D7D1               	goto	l16692
 39942  006D90  0A16               	xorlw	22	; case 17
 39943  006D92  B4D8               	btfsc	status,2,c
 39944  006D94  D7D5               	goto	l16698
 39945  006D96  0A07               	xorlw	7	; case 22
 39946  006D98  B4D8               	btfsc	status,2,c
 39947  006D9A  D7C4               	goto	l16686
 39948  006D9C  0A0F               	xorlw	15	; case 25
 39949  006D9E  B4D8               	btfsc	status,2,c
 39950  006DA0  D7D6               	goto	l16704
 39951  006DA2  0AE6               	xorlw	230	; case 255
 39952  006DA4  A4D8               	btfss	status,2,c
 39953  006DA6  0012               	return	
 39954  006DA8  D7A1               	goto	l16662
 39955  006DAA                     __end_of_GPIOSet:
 39956                           	opt callstack 0
 39957                           
 39958 ;; *************** function _GPIODigitalWrite *****************
 39959 ;; Defined at:
 39960 ;;		line 132 in file "rn2483APP.c"
 39961 ;; Parameters:    Size  Location     Type
 39962 ;;  GPIO            1    wreg     unsigned char 
 39963 ;;  digOut          1    0[BANK0 ] unsigned char 
 39964 ;; Auto vars:     Size  Location     Type
 39965 ;;  GPIO            1    1[BANK0 ] unsigned char 
 39966 ;; Return value:  Size  Location     Type
 39967 ;;                  1    wreg      void 
 39968 ;; Registers used:
 39969 ;;		wreg, status,2, status,0
 39970 ;; Tracked objects:
 39971 ;;		On entry : 0/0
 39972 ;;		On exit  : 0/0
 39973 ;;		Unchanged: 0/0
 39974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39975 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39976 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39979 ;;Total ram usage:        2 bytes
 39980 ;; Hardware stack levels used:    1
 39981 ;; Hardware stack levels required when called:    7
 39982 ;; This function calls:
 39983 ;;		Nothing
 39984 ;; This function is called by:
 39985 ;;		_RxJoinResponse
 39986 ;;		_main
 39987 ;;		_GPIOInit
 39988 ;;		_acuadoriApp
 39989 ;;		_lightSensAcquisition
 39990 ;;		_setSDA
 39991 ;;		_resetSDA
 39992 ;;		_setSCL
 39993 ;;		_resetSCL
 39994 ;; This function uses a non-reentrant model
 39995 ;;
 39996                           
 39997                           	psect	text252
 39998  006DAA                     __ptext252:
 39999                           	opt callstack 0
 40000  006DAA                     _GPIODigitalWrite:
 40001                           	opt callstack 17
 40002                           
 40003                           ; BSR set to: 0
 40004                           ;incstack = 0
 40005                           ;GPIODigitalWrite@GPIO stored from wreg
 40006  006DAA  0100               	movlb	0	; () banked
 40007  006DAC  6F61               	movwf	GPIODigitalWrite@GPIO& (0+255),b
 40008                           
 40009                           ;rn2483APP.c: 133: switch(GPIO){
 40010  006DAE  D054               	goto	l19368
 40011  006DB0                     l19294:
 40012                           
 40013                           ; BSR set to: 0
 40014                           ;rn2483APP.c: 135: digOut? LATA |= 0x1 : LATA &= ~0x1;
 40015  006DB0  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40016  006DB2  B4D8               	btfsc	status,2,c
 40017  006DB4  D002               	goto	l19298
 40018                           
 40019                           ; BSR set to: 0
 40020  006DB6  8089               	bsf	3977,0,c	;volatile
 40021  006DB8  0012               	return	
 40022  006DBA                     l19298:
 40023                           
 40024                           ; BSR set to: 0
 40025  006DBA  9089               	bcf	3977,0,c	;volatile
 40026  006DBC  0012               	return	
 40027  006DBE                     l19300:
 40028                           
 40029                           ; BSR set to: 0
 40030                           ;rn2483APP.c: 138: digOut? LATA |= 0x2 : LATA &= ~0x2;
 40031  006DBE  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40032  006DC0  B4D8               	btfsc	status,2,c
 40033  006DC2  D002               	goto	l19304
 40034                           
 40035                           ; BSR set to: 0
 40036  006DC4  8289               	bsf	3977,1,c	;volatile
 40037  006DC6  0012               	return	
 40038  006DC8                     l19304:
 40039                           
 40040                           ; BSR set to: 0
 40041  006DC8  9289               	bcf	3977,1,c	;volatile
 40042  006DCA  0012               	return	
 40043  006DCC                     l19306:
 40044                           
 40045                           ; BSR set to: 0
 40046                           ;rn2483APP.c: 141: digOut? LATA |= 0x4 : LATA &= ~0x4;
 40047  006DCC  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40048  006DCE  B4D8               	btfsc	status,2,c
 40049  006DD0  D002               	goto	l19310
 40050                           
 40051                           ; BSR set to: 0
 40052  006DD2  8489               	bsf	3977,2,c	;volatile
 40053  006DD4  0012               	return	
 40054  006DD6                     l19310:
 40055                           
 40056                           ; BSR set to: 0
 40057  006DD6  9489               	bcf	3977,2,c	;volatile
 40058  006DD8  0012               	return	
 40059  006DDA                     l19312:
 40060                           
 40061                           ; BSR set to: 0
 40062                           ;rn2483APP.c: 144: digOut? LATA |= 0x8 : LATA &= ~0x8;
 40063  006DDA  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40064  006DDC  B4D8               	btfsc	status,2,c
 40065  006DDE  D002               	goto	l19316
 40066                           
 40067                           ; BSR set to: 0
 40068  006DE0  8689               	bsf	3977,3,c	;volatile
 40069  006DE2  0012               	return	
 40070  006DE4                     l19316:
 40071                           
 40072                           ; BSR set to: 0
 40073  006DE4  9689               	bcf	3977,3,c	;volatile
 40074  006DE6  0012               	return	
 40075  006DE8                     l19318:
 40076                           
 40077                           ; BSR set to: 0
 40078                           ;rn2483APP.c: 147: digOut? LATA |= 0x10 : LATA &= ~0x10;
 40079  006DE8  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40080  006DEA  B4D8               	btfsc	status,2,c
 40081  006DEC  D002               	goto	l19322
 40082                           
 40083                           ; BSR set to: 0
 40084  006DEE  8889               	bsf	3977,4,c	;volatile
 40085  006DF0  0012               	return	
 40086  006DF2                     l19322:
 40087                           
 40088                           ; BSR set to: 0
 40089  006DF2  9889               	bcf	3977,4,c	;volatile
 40090  006DF4  0012               	return	
 40091  006DF6                     l19324:
 40092                           
 40093                           ; BSR set to: 0
 40094                           ;rn2483APP.c: 150: digOut? LATA |= 0x20 : LATA &= ~0x20;
 40095  006DF6  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40096  006DF8  B4D8               	btfsc	status,2,c
 40097  006DFA  D002               	goto	l19328
 40098                           
 40099                           ; BSR set to: 0
 40100  006DFC  8A89               	bsf	3977,5,c	;volatile
 40101  006DFE  0012               	return	
 40102  006E00                     l19328:
 40103                           
 40104                           ; BSR set to: 0
 40105  006E00  9A89               	bcf	3977,5,c	;volatile
 40106  006E02  0012               	return	
 40107  006E04                     l19330:
 40108                           
 40109                           ; BSR set to: 0
 40110                           ;rn2483APP.c: 153: digOut? LATE |= 0x1 : LATE &= ~0x1;
 40111  006E04  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40112  006E06  B4D8               	btfsc	status,2,c
 40113  006E08  D002               	goto	l19334
 40114                           
 40115                           ; BSR set to: 0
 40116  006E0A  808D               	bsf	3981,0,c	;volatile
 40117  006E0C  0012               	return	
 40118  006E0E                     l19334:
 40119                           
 40120                           ; BSR set to: 0
 40121  006E0E  908D               	bcf	3981,0,c	;volatile
 40122  006E10  0012               	return	
 40123  006E12                     l19336:
 40124                           
 40125                           ; BSR set to: 0
 40126                           ;rn2483APP.c: 156: digOut? LATE |= 0x2 : LATE &= ~0x2;
 40127  006E12  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40128  006E14  B4D8               	btfsc	status,2,c
 40129  006E16  D002               	goto	l19340
 40130                           
 40131                           ; BSR set to: 0
 40132  006E18  828D               	bsf	3981,1,c	;volatile
 40133  006E1A  0012               	return	
 40134  006E1C                     l19340:
 40135                           
 40136                           ; BSR set to: 0
 40137  006E1C  928D               	bcf	3981,1,c	;volatile
 40138  006E1E  0012               	return	
 40139  006E20                     l19342:
 40140                           
 40141                           ; BSR set to: 0
 40142                           ;rn2483APP.c: 159: digOut? LATD |= 0x4 : LATD &= ~0x4;
 40143  006E20  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40144  006E22  B4D8               	btfsc	status,2,c
 40145  006E24  D002               	goto	l19346
 40146                           
 40147                           ; BSR set to: 0
 40148  006E26  848C               	bsf	3980,2,c	;volatile
 40149  006E28  0012               	return	
 40150  006E2A                     l19346:
 40151                           
 40152                           ; BSR set to: 0
 40153  006E2A  948C               	bcf	3980,2,c	;volatile
 40154  006E2C  0012               	return	
 40155  006E2E                     l19348:
 40156                           
 40157                           ; BSR set to: 0
 40158                           ;rn2483APP.c: 162: digOut? LATE |= 0x4 : LATE &= ~0x4;
 40159  006E2E  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40160  006E30  B4D8               	btfsc	status,2,c
 40161  006E32  D002               	goto	l19352
 40162                           
 40163                           ; BSR set to: 0
 40164  006E34  848D               	bsf	3981,2,c	;volatile
 40165  006E36  0012               	return	
 40166  006E38                     l19352:
 40167                           
 40168                           ; BSR set to: 0
 40169  006E38  948D               	bcf	3981,2,c	;volatile
 40170  006E3A  0012               	return	
 40171  006E3C                     l19354:
 40172                           
 40173                           ; BSR set to: 0
 40174                           ;rn2483APP.c: 165: digOut? LATC |= 0x20 : LATC &= ~0x20;
 40175  006E3C  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40176  006E3E  B4D8               	btfsc	status,2,c
 40177  006E40  D002               	goto	l19358
 40178                           
 40179                           ; BSR set to: 0
 40180  006E42  8A8B               	bsf	3979,5,c	;volatile
 40181  006E44  0012               	return	
 40182  006E46                     l19358:
 40183                           
 40184                           ; BSR set to: 0
 40185  006E46  9A8B               	bcf	3979,5,c	;volatile
 40186  006E48  0012               	return	
 40187  006E4A                     l19360:
 40188                           
 40189                           ; BSR set to: 0
 40190                           ;rn2483APP.c: 168: digOut? LATD |= 0x20 : LATD &= ~0x20;
 40191  006E4A  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40192  006E4C  B4D8               	btfsc	status,2,c
 40193  006E4E  D002               	goto	l19364
 40194                           
 40195                           ; BSR set to: 0
 40196  006E50  8A8C               	bsf	3980,5,c	;volatile
 40197  006E52  0012               	return	
 40198  006E54                     l19364:
 40199                           
 40200                           ; BSR set to: 0
 40201  006E54  9A8C               	bcf	3980,5,c	;volatile
 40202  006E56  0012               	return	
 40203  006E58                     l19368:
 40204  006E58  0100               	movlb	0	; () banked
 40205  006E5A  5161               	movf	GPIODigitalWrite@GPIO& (0+255),w,b
 40206                           
 40207                           ; Switch size 1, requested type "simple"
 40208                           ; Number of cases is 12, Range of values is 0 to 255
 40209                           ; switch strategies available:
 40210                           ; Name         Instructions Cycles
 40211                           ; simple_byte           37    19 (average)
 40212                           ;	Chosen strategy is simple_byte
 40213  006E5C  0A00               	xorlw	0	; case 0
 40214  006E5E  B4D8               	btfsc	status,2,c
 40215  006E60  D7A7               	goto	l19294
 40216  006E62  0A01               	xorlw	1	; case 1
 40217  006E64  B4D8               	btfsc	status,2,c
 40218  006E66  D7AB               	goto	l19300
 40219  006E68  0A03               	xorlw	3	; case 2
 40220  006E6A  B4D8               	btfsc	status,2,c
 40221  006E6C  D7AF               	goto	l19306
 40222  006E6E  0A01               	xorlw	1	; case 3
 40223  006E70  B4D8               	btfsc	status,2,c
 40224  006E72  D7B3               	goto	l19312
 40225  006E74  0A07               	xorlw	7	; case 4
 40226  006E76  B4D8               	btfsc	status,2,c
 40227  006E78  D7BE               	goto	l19324
 40228  006E7A  0A01               	xorlw	1	; case 5
 40229  006E7C  B4D8               	btfsc	status,2,c
 40230  006E7E  D7C2               	goto	l19330
 40231  006E80  0A03               	xorlw	3	; case 6
 40232  006E82  B4D8               	btfsc	status,2,c
 40233  006E84  D7C6               	goto	l19336
 40234  006E86  0A01               	xorlw	1	; case 7
 40235  006E88  B4D8               	btfsc	status,2,c
 40236  006E8A  D7D1               	goto	l19348
 40237  006E8C  0A16               	xorlw	22	; case 17
 40238  006E8E  B4D8               	btfsc	status,2,c
 40239  006E90  D7D5               	goto	l19354
 40240  006E92  0A07               	xorlw	7	; case 22
 40241  006E94  B4D8               	btfsc	status,2,c
 40242  006E96  D7C4               	goto	l19342
 40243  006E98  0A0F               	xorlw	15	; case 25
 40244  006E9A  B4D8               	btfsc	status,2,c
 40245  006E9C  D7D6               	goto	l19360
 40246  006E9E  0AE6               	xorlw	230	; case 255
 40247  006EA0  A4D8               	btfss	status,2,c
 40248  006EA2  0012               	return	
 40249  006EA4  D7A1               	goto	l19318
 40250  006EA6                     __end_of_GPIODigitalWrite:
 40251                           	opt callstack 0
 40252                           
 40253 ;; *************** function _GPIOAnalogMode *****************
 40254 ;; Defined at:
 40255 ;;		line 41 in file "rn2483APP.c"
 40256 ;; Parameters:    Size  Location     Type
 40257 ;;  GPIO            1    wreg     unsigned char 
 40258 ;;  mode            1    0[BANK0 ] unsigned char 
 40259 ;; Auto vars:     Size  Location     Type
 40260 ;;  GPIO            1    1[BANK0 ] unsigned char 
 40261 ;; Return value:  Size  Location     Type
 40262 ;;                  1    wreg      void 
 40263 ;; Registers used:
 40264 ;;		wreg, status,2, status,0
 40265 ;; Tracked objects:
 40266 ;;		On entry : 0/0
 40267 ;;		On exit  : 0/0
 40268 ;;		Unchanged: 0/0
 40269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40270 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40273 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40274 ;;Total ram usage:        2 bytes
 40275 ;; Hardware stack levels used:    1
 40276 ;; Hardware stack levels required when called:    7
 40277 ;; This function calls:
 40278 ;;		Nothing
 40279 ;; This function is called by:
 40280 ;;		_GPIOInit
 40281 ;; This function uses a non-reentrant model
 40282 ;;
 40283                           
 40284                           	psect	text253
 40285  006282                     __ptext253:
 40286                           	opt callstack 0
 40287  006282                     _GPIOAnalogMode:
 40288                           	opt callstack 22
 40289                           
 40290                           ; BSR set to: 0
 40291                           ;incstack = 0
 40292                           ;GPIOAnalogMode@GPIO stored from wreg
 40293  006282  0100               	movlb	0	; () banked
 40294  006284  6F61               	movwf	GPIOAnalogMode@GPIO& (0+255),b
 40295                           
 40296                           ;rn2483APP.c: 43: switch(GPIO){
 40297  006286  D063               	goto	l16634
 40298  006288                     l16566:
 40299                           
 40300                           ; BSR set to: 0
 40301                           ;rn2483APP.c: 45: mode? ANSELA |= 0x1 : ANSELA &= ~(0x1);
 40302  006288  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40303  00628A  B4D8               	btfsc	status,2,c
 40304  00628C  D003               	goto	l16570
 40305                           
 40306                           ; BSR set to: 0
 40307  00628E  010F               	movlb	15	; () banked
 40308  006290  8138               	bsf	56,0,b	;volatile
 40309  006292  0012               	return	
 40310  006294                     l16570:
 40311                           
 40312                           ; BSR set to: 0
 40313  006294  010F               	movlb	15	; () banked
 40314  006296  9138               	bcf	56,0,b	;volatile
 40315  006298  0012               	return	
 40316  00629A                     l16572:
 40317                           
 40318                           ; BSR set to: 0
 40319                           ;rn2483APP.c: 48: mode? ANSELA |= 0x2 : ANSELA &= ~(0x2);
 40320  00629A  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40321  00629C  B4D8               	btfsc	status,2,c
 40322  00629E  D003               	goto	l16576
 40323                           
 40324                           ; BSR set to: 0
 40325  0062A0  010F               	movlb	15	; () banked
 40326  0062A2  8338               	bsf	56,1,b	;volatile
 40327  0062A4  0012               	return	
 40328  0062A6                     l16576:
 40329                           
 40330                           ; BSR set to: 0
 40331  0062A6  010F               	movlb	15	; () banked
 40332  0062A8  9338               	bcf	56,1,b	;volatile
 40333  0062AA  0012               	return	
 40334  0062AC                     l16578:
 40335                           
 40336                           ; BSR set to: 0
 40337                           ;rn2483APP.c: 51: mode? ANSELA |= 0x4 : ANSELA &= ~(0x4);
 40338  0062AC  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40339  0062AE  B4D8               	btfsc	status,2,c
 40340  0062B0  D003               	goto	l16582
 40341                           
 40342                           ; BSR set to: 0
 40343  0062B2  010F               	movlb	15	; () banked
 40344  0062B4  8538               	bsf	56,2,b	;volatile
 40345  0062B6  0012               	return	
 40346  0062B8                     l16582:
 40347                           
 40348                           ; BSR set to: 0
 40349  0062B8  010F               	movlb	15	; () banked
 40350  0062BA  9538               	bcf	56,2,b	;volatile
 40351  0062BC  0012               	return	
 40352  0062BE                     l16584:
 40353                           
 40354                           ; BSR set to: 0
 40355                           ;rn2483APP.c: 54: mode? ANSELA |= 0x8 : ANSELA &= ~(0x8);
 40356  0062BE  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40357  0062C0  B4D8               	btfsc	status,2,c
 40358  0062C2  D003               	goto	l16588
 40359                           
 40360                           ; BSR set to: 0
 40361  0062C4  010F               	movlb	15	; () banked
 40362  0062C6  8738               	bsf	56,3,b	;volatile
 40363  0062C8  0012               	return	
 40364  0062CA                     l16588:
 40365                           
 40366                           ; BSR set to: 0
 40367  0062CA  010F               	movlb	15	; () banked
 40368  0062CC  9738               	bcf	56,3,b	;volatile
 40369  0062CE  0012               	return	
 40370  0062D0                     l16590:
 40371                           
 40372                           ; BSR set to: 0
 40373                           ;rn2483APP.c: 57: mode? ANSELA |= 0x20 : ANSELA &= ~(0x20);
 40374  0062D0  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40375  0062D2  B4D8               	btfsc	status,2,c
 40376  0062D4  D003               	goto	l16594
 40377                           
 40378                           ; BSR set to: 0
 40379  0062D6  010F               	movlb	15	; () banked
 40380  0062D8  8B38               	bsf	56,5,b	;volatile
 40381  0062DA  0012               	return	
 40382  0062DC                     l16594:
 40383                           
 40384                           ; BSR set to: 0
 40385  0062DC  010F               	movlb	15	; () banked
 40386  0062DE  9B38               	bcf	56,5,b	;volatile
 40387  0062E0  0012               	return	
 40388  0062E2                     l16596:
 40389                           
 40390                           ; BSR set to: 0
 40391                           ;rn2483APP.c: 60: mode? ANSELE |= 0x1 : ANSELE &= ~(0x1);
 40392  0062E2  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40393  0062E4  B4D8               	btfsc	status,2,c
 40394  0062E6  D003               	goto	l16600
 40395                           
 40396                           ; BSR set to: 0
 40397  0062E8  010F               	movlb	15	; () banked
 40398  0062EA  813C               	bsf	60,0,b	;volatile
 40399  0062EC  0012               	return	
 40400  0062EE                     l16600:
 40401                           
 40402                           ; BSR set to: 0
 40403  0062EE  010F               	movlb	15	; () banked
 40404  0062F0  913C               	bcf	60,0,b	;volatile
 40405  0062F2  0012               	return	
 40406  0062F4                     l16602:
 40407                           
 40408                           ; BSR set to: 0
 40409                           ;rn2483APP.c: 63: mode? ANSELE |= 0x2 : ANSELE &= ~(0x2);
 40410  0062F4  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40411  0062F6  B4D8               	btfsc	status,2,c
 40412  0062F8  D003               	goto	l16606
 40413                           
 40414                           ; BSR set to: 0
 40415  0062FA  010F               	movlb	15	; () banked
 40416  0062FC  833C               	bsf	60,1,b	;volatile
 40417  0062FE  0012               	return	
 40418  006300                     l16606:
 40419                           
 40420                           ; BSR set to: 0
 40421  006300  010F               	movlb	15	; () banked
 40422  006302  933C               	bcf	60,1,b	;volatile
 40423  006304  0012               	return	
 40424  006306                     l16608:
 40425                           
 40426                           ; BSR set to: 0
 40427                           ;rn2483APP.c: 66: mode? ANSELD |= 0x4 : ANSELD &= ~(0x4);
 40428  006306  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40429  006308  B4D8               	btfsc	status,2,c
 40430  00630A  D003               	goto	l16612
 40431                           
 40432                           ; BSR set to: 0
 40433  00630C  010F               	movlb	15	; () banked
 40434  00630E  853B               	bsf	59,2,b	;volatile
 40435  006310  0012               	return	
 40436  006312                     l16612:
 40437                           
 40438                           ; BSR set to: 0
 40439  006312  010F               	movlb	15	; () banked
 40440  006314  953B               	bcf	59,2,b	;volatile
 40441  006316  0012               	return	
 40442  006318                     l16614:
 40443                           
 40444                           ; BSR set to: 0
 40445                           ;rn2483APP.c: 69: mode? ANSELE |= 0x4 : ANSELE &= ~(0x4);
 40446  006318  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40447  00631A  B4D8               	btfsc	status,2,c
 40448  00631C  D003               	goto	l16618
 40449                           
 40450                           ; BSR set to: 0
 40451  00631E  010F               	movlb	15	; () banked
 40452  006320  853C               	bsf	60,2,b	;volatile
 40453  006322  0012               	return	
 40454  006324                     l16618:
 40455                           
 40456                           ; BSR set to: 0
 40457  006324  010F               	movlb	15	; () banked
 40458  006326  953C               	bcf	60,2,b	;volatile
 40459  006328  0012               	return	
 40460  00632A                     l16620:
 40461                           
 40462                           ; BSR set to: 0
 40463                           ;rn2483APP.c: 72: mode? ANSELC |= 0x20 : ANSELC &= ~(0x20);
 40464  00632A  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40465  00632C  B4D8               	btfsc	status,2,c
 40466  00632E  D003               	goto	l16624
 40467                           
 40468                           ; BSR set to: 0
 40469  006330  010F               	movlb	15	; () banked
 40470  006332  8B3A               	bsf	58,5,b	;volatile
 40471  006334  0012               	return	
 40472  006336                     l16624:
 40473                           
 40474                           ; BSR set to: 0
 40475  006336  010F               	movlb	15	; () banked
 40476  006338  9B3A               	bcf	58,5,b	;volatile
 40477  00633A  0012               	return	
 40478  00633C                     l16626:
 40479                           
 40480                           ; BSR set to: 0
 40481                           ;rn2483APP.c: 75: mode? ANSELD |= 0x20 : ANSELD &= ~(0x20);
 40482  00633C  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40483  00633E  B4D8               	btfsc	status,2,c
 40484  006340  D003               	goto	l16630
 40485                           
 40486                           ; BSR set to: 0
 40487  006342  010F               	movlb	15	; () banked
 40488  006344  8B3B               	bsf	59,5,b	;volatile
 40489  006346  0012               	return	
 40490  006348                     l16630:
 40491                           
 40492                           ; BSR set to: 0
 40493  006348  010F               	movlb	15	; () banked
 40494  00634A  9B3B               	bcf	59,5,b	;volatile
 40495  00634C  0012               	return	
 40496  00634E                     l16634:
 40497  00634E  0100               	movlb	0	; () banked
 40498  006350  5161               	movf	GPIOAnalogMode@GPIO& (0+255),w,b
 40499                           
 40500                           ; Switch size 1, requested type "simple"
 40501                           ; Number of cases is 11, Range of values is 0 to 25
 40502                           ; switch strategies available:
 40503                           ; Name         Instructions Cycles
 40504                           ; simple_byte           34    18 (average)
 40505                           ;	Chosen strategy is simple_byte
 40506  006352  0A00               	xorlw	0	; case 0
 40507  006354  B4D8               	btfsc	status,2,c
 40508  006356  D798               	goto	l16566
 40509  006358  0A01               	xorlw	1	; case 1
 40510  00635A  B4D8               	btfsc	status,2,c
 40511  00635C  D79E               	goto	l16572
 40512  00635E  0A03               	xorlw	3	; case 2
 40513  006360  B4D8               	btfsc	status,2,c
 40514  006362  D7A4               	goto	l16578
 40515  006364  0A01               	xorlw	1	; case 3
 40516  006366  B4D8               	btfsc	status,2,c
 40517  006368  D7AA               	goto	l16584
 40518  00636A  0A07               	xorlw	7	; case 4
 40519  00636C  B4D8               	btfsc	status,2,c
 40520  00636E  D7B0               	goto	l16590
 40521  006370  0A01               	xorlw	1	; case 5
 40522  006372  B4D8               	btfsc	status,2,c
 40523  006374  D7B6               	goto	l16596
 40524  006376  0A03               	xorlw	3	; case 6
 40525  006378  B4D8               	btfsc	status,2,c
 40526  00637A  D7BC               	goto	l16602
 40527  00637C  0A01               	xorlw	1	; case 7
 40528  00637E  B4D8               	btfsc	status,2,c
 40529  006380  D7CB               	goto	l16614
 40530  006382  0A16               	xorlw	22	; case 17
 40531  006384  B4D8               	btfsc	status,2,c
 40532  006386  D7D1               	goto	l16620
 40533  006388  0A07               	xorlw	7	; case 22
 40534  00638A  B4D8               	btfsc	status,2,c
 40535  00638C  D7BC               	goto	l16608
 40536  00638E  0A0F               	xorlw	15	; case 25
 40537  006390  A4D8               	btfss	status,2,c
 40538  006392  0012               	return	
 40539  006394  D7D3               	goto	l16626
 40540  006396                     __end_of_GPIOAnalogMode:
 40541                           	opt callstack 0
 40542                           
 40543 ;; *************** function _INTERRUPT_InterruptManager *****************
 40544 ;; Defined at:
 40545 ;;		line 63 in file "mcc_generated_files/interrupt_manager.c"
 40546 ;; Parameters:    Size  Location     Type
 40547 ;;		None
 40548 ;; Auto vars:     Size  Location     Type
 40549 ;;		None
 40550 ;; Return value:  Size  Location     Type
 40551 ;;                  1    wreg      void 
 40552 ;; Registers used:
 40553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40554 ;; Tracked objects:
 40555 ;;		On entry : 0/0
 40556 ;;		On exit  : 0/0
 40557 ;;		Unchanged: 0/0
 40558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40561 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40562 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40563 ;;Total ram usage:        8 bytes
 40564 ;; Hardware stack levels used:    1
 40565 ;; Hardware stack levels required when called:    6
 40566 ;; This function calls:
 40567 ;;		_ADC_ISR
 40568 ;;		_INT1_ISR
 40569 ;;		_INT2_ISR
 40570 ;;		_PIN_MANAGER_IOC
 40571 ;;		_TMR1_ISR
 40572 ;;		_TMR3_ISR
 40573 ;;		_TMR5_ISR
 40574 ;; This function is called by:
 40575 ;;		Interrupt level 2
 40576 ;; This function uses a non-reentrant model
 40577 ;;
 40578                           
 40579                           	psect	intcode
 40580  000008                     __pintcode:
 40581                           	opt callstack 0
 40582  000008                     _INTERRUPT_InterruptManager:
 40583                           	opt callstack 10
 40584                           
 40585                           ;incstack = 0
 40586  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 40587  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 40588  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 40589  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 40590  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 40591  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 40592  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 40593  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 40594  000028  EE1A  F0F8         	lfsr	1,___inthi_sp
 40595                           
 40596                           ;interrupt_manager.c: 66: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 40597  00002C  B6F0               	btfsc	4080,3,c	;volatile
 40598  00002E  A0F0               	btfss	4080,0,c	;volatile
 40599  000030  D003               	goto	i2l2308
 40600                           
 40601                           ;interrupt_manager.c: 67: {;interrupt_manager.c: 68: INT1_ISR();
 40602  000032  ECE9  F053         	call	_INT1_ISR	;wreg free
 40603                           
 40604                           ;interrupt_manager.c: 69: }
 40605  000036  D025               	goto	i2l2318
 40606  000038                     i2l2308:
 40607                           
 40608                           ;interrupt_manager.c: 70: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 40609  000038  B8F0               	btfsc	4080,4,c	;volatile
 40610  00003A  A2F0               	btfss	4080,1,c	;volatile
 40611  00003C  D003               	goto	i2l2310
 40612                           
 40613                           ;interrupt_manager.c: 71: {;interrupt_manager.c: 72: INT2_ISR();
 40614  00003E  ECE5  F053         	call	_INT2_ISR	;wreg free
 40615                           
 40616                           ;interrupt_manager.c: 73: }
 40617  000042  D01F               	goto	i2l2318
 40618  000044                     i2l2310:
 40619                           
 40620                           ;interrupt_manager.c: 74: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 40621  000044  B6F2               	btfsc	4082,3,c	;volatile
 40622  000046  A0F2               	btfss	4082,0,c	;volatile
 40623  000048  D003               	goto	i2l2312
 40624                           
 40625                           ;interrupt_manager.c: 75: {;interrupt_manager.c: 76: PIN_MANAGER_IOC();
 40626  00004A  ECD8  F053         	call	_PIN_MANAGER_IOC	;wreg free
 40627                           
 40628                           ;interrupt_manager.c: 77: }
 40629  00004E  D019               	goto	i2l2318
 40630  000050                     i2l2312:
 40631                           
 40632                           ;interrupt_manager.c: 78: else if(INTCONbits.PEIE == 1)
 40633  000050  ACF2               	btfss	4082,6,c	;volatile
 40634  000052  D017               	goto	i2l2318
 40635                           
 40636                           ;interrupt_manager.c: 79: {;interrupt_manager.c: 80: if(PIE1bits.ADIE == 1 && PIR1bits.A
      +                          DIF == 1)
 40637  000054  BC9D               	btfsc	3997,6,c	;volatile
 40638  000056  AC9E               	btfss	3998,6,c	;volatile
 40639  000058  D003               	goto	i2l2315
 40640                           
 40641                           ;interrupt_manager.c: 81: {;interrupt_manager.c: 82: ADC_ISR();
 40642  00005A  EC15  F054         	call	_ADC_ISR	;wreg free
 40643                           
 40644                           ;interrupt_manager.c: 83: }
 40645  00005E  D011               	goto	i2l2318
 40646  000060                     i2l2315:
 40647                           
 40648                           ;interrupt_manager.c: 84: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 40649  000060  B27D               	btfsc	3965,1,c	;volatile
 40650  000062  A27E               	btfss	3966,1,c	;volatile
 40651  000064  D003               	goto	i2l2317
 40652                           
 40653                           ;interrupt_manager.c: 85: {;interrupt_manager.c: 86: TMR5_ISR();
 40654  000066  EC87  F04F         	call	_TMR5_ISR	;wreg free
 40655                           
 40656                           ;interrupt_manager.c: 87: }
 40657  00006A  D00B               	goto	i2l2318
 40658  00006C                     i2l2317:
 40659                           
 40660                           ;interrupt_manager.c: 88: else if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 40661  00006C  B2A0               	btfsc	4000,1,c	;volatile
 40662  00006E  A2A1               	btfss	4001,1,c	;volatile
 40663  000070  D003               	goto	i2l2319
 40664                           
 40665                           ;interrupt_manager.c: 89: {;interrupt_manager.c: 90: TMR3_ISR();
 40666  000072  EC9E  F04F         	call	_TMR3_ISR	;wreg free
 40667                           
 40668                           ;interrupt_manager.c: 91: }
 40669  000076  D005               	goto	i2l2318
 40670  000078                     i2l2319:
 40671                           
 40672                           ;interrupt_manager.c: 92: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 40673  000078  B09D               	btfsc	3997,0,c	;volatile
 40674  00007A  A09E               	btfss	3998,0,c	;volatile
 40675  00007C  D002               	goto	i2l2318
 40676                           
 40677                           ;interrupt_manager.c: 93: {;interrupt_manager.c: 94: TMR1_ISR();
 40678  00007E  ECCC  F052         	call	_TMR1_ISR	;wreg free
 40679  000082                     i2l2318:
 40680  000082  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 40681  000086  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 40682  00008A  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 40683  00008E  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 40684  000092  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 40685  000096  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 40686  00009A  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 40687  00009E  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 40688  0000A2  0011               	retfie		f
 40689  0000A4                     __end_of_INTERRUPT_InterruptManager:
 40690                           	opt callstack 0
 40691                           
 40692 ;; *************** function _TMR5_ISR *****************
 40693 ;; Defined at:
 40694 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 40695 ;; Parameters:    Size  Location     Type
 40696 ;;		None
 40697 ;; Auto vars:     Size  Location     Type
 40698 ;;		None
 40699 ;; Return value:  Size  Location     Type
 40700 ;;                  1    wreg      void 
 40701 ;; Registers used:
 40702 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 40703 ;; Tracked objects:
 40704 ;;		On entry : 0/0
 40705 ;;		On exit  : 0/0
 40706 ;;		Unchanged: 0/0
 40707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40712 ;;Total ram usage:        0 bytes
 40713 ;; Hardware stack levels used:    1
 40714 ;; Hardware stack levels required when called:    3
 40715 ;; This function calls:
 40716 ;;		Absolute function
 40717 ;;		_TMR5_InterruptTicker
 40718 ;;		_TMR5_WriteTimer
 40719 ;; This function is called by:
 40720 ;;		_INTERRUPT_InterruptManager
 40721 ;; This function uses a non-reentrant model
 40722 ;;
 40723                           
 40724                           	psect	text255
 40725  009F0E                     __ptext255:
 40726                           	opt callstack 0
 40727  009F0E                     _TMR5_ISR:
 40728                           	opt callstack 12
 40729                           
 40730                           ;tmr5.c: 169: PIR5bits.TMR5IF = 0;
 40731                           
 40732                           ;incstack = 0
 40733  009F0E  927E               	bcf	3966,1,c	;volatile
 40734                           
 40735                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 40736  009F10  C1DF  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 40737  009F14  C1E0  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 40738  009F18  ECFA  F051         	call	_TMR5_WriteTimer	;wreg free
 40739                           
 40740                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 40741  009F1C  0101               	movlb	1	; () banked
 40742  009F1E  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 40743  009F20  11DE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 40744  009F22  B4D8               	btfsc	status,2,c
 40745  009F24  0012               	return	
 40746                           
 40747                           ; BSR set to: 1
 40748                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 40749  009F26  D801               	call	i2u1750_48
 40750  009F28  0012               	return	
 40751  009F2A                     i2u1750_48:
 40752  009F2A  0005               	push	
 40753  009F2C  6EFA               	movwf	pclath,c
 40754  009F2E  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 40755  009F30  6EFD               	movwf	tosl,c
 40756  009F32  51DE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 40757  009F34  6EFE               	movwf	tosh,c
 40758  009F36  6AFF               	clrf	tosu,c
 40759  009F38  50FA               	movf	pclath,w,c
 40760  009F3A  0012               	return		;indir
 40761  009F3C                     __end_of_TMR5_ISR:
 40762                           	opt callstack 0
 40763                           
 40764 ;; *************** function _TMR5_WriteTimer *****************
 40765 ;; Defined at:
 40766 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 40767 ;; Parameters:    Size  Location     Type
 40768 ;;  timerVal        2    0[COMRAM] unsigned int 
 40769 ;; Auto vars:     Size  Location     Type
 40770 ;;		None
 40771 ;; Return value:  Size  Location     Type
 40772 ;;                  1    wreg      void 
 40773 ;; Registers used:
 40774 ;;		wreg, status,2
 40775 ;; Tracked objects:
 40776 ;;		On entry : 0/0
 40777 ;;		On exit  : 0/0
 40778 ;;		Unchanged: 0/0
 40779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40783 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40784 ;;Total ram usage:        2 bytes
 40785 ;; Hardware stack levels used:    1
 40786 ;; This function calls:
 40787 ;;		Nothing
 40788 ;; This function is called by:
 40789 ;;		_TMR5_ISR
 40790 ;;		_TMR5_Reload
 40791 ;; This function uses a non-reentrant model
 40792 ;;
 40793                           
 40794                           	psect	text256
 40795  00A3F4                     __ptext256:
 40796                           	opt callstack 0
 40797  00A3F4                     _TMR5_WriteTimer:
 40798                           	opt callstack 14
 40799                           
 40800                           ;tmr5.c: 130: if (T5CONbits.T5SYNC == 1)
 40801                           
 40802                           ;incstack = 0
 40803  00A3F4  010F               	movlb	15	; () banked
 40804  00A3F6  A54E               	btfss	78,2,b	;volatile
 40805  00A3F8  D007               	goto	i2l16558
 40806                           
 40807                           ; BSR set to: 15
 40808                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 40809  00A3FA  914E               	bcf	78,0,b	;volatile
 40810                           
 40811                           ; BSR set to: 15
 40812                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 40813  00A3FC  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40814  00A3FE  6F50               	movwf	80,b	;volatile
 40815                           
 40816                           ; BSR set to: 15
 40817                           ;tmr5.c: 137: TMR5L = (uint8_t) timerVal;
 40818  00A400  C001  FF4F         	movff	TMR5_WriteTimer@timerVal,3919	;volatile
 40819                           
 40820                           ; BSR set to: 15
 40821                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 40822  00A404  814E               	bsf	78,0,b	;volatile
 40823                           
 40824                           ;tmr5.c: 141: }
 40825  00A406  0012               	return	
 40826  00A408                     i2l16558:
 40827                           
 40828                           ; BSR set to: 15
 40829                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 40830  00A408  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40831  00A40A  6F50               	movwf	80,b	;volatile
 40832                           
 40833                           ; BSR set to: 15
 40834                           ;tmr5.c: 146: TMR5L = (uint8_t) timerVal;
 40835  00A40C  C001  FF4F         	movff	TMR5_WriteTimer@timerVal,3919	;volatile
 40836                           
 40837                           ; BSR set to: 15
 40838  00A410  0012               	return		;funcret
 40839  00A412                     __end_of_TMR5_WriteTimer:
 40840                           	opt callstack 0
 40841                           
 40842 ;; *************** function _TMR5_InterruptTicker *****************
 40843 ;; Defined at:
 40844 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 40845 ;; Parameters:    Size  Location     Type
 40846 ;;		None
 40847 ;; Auto vars:     Size  Location     Type
 40848 ;;		None
 40849 ;; Return value:  Size  Location     Type
 40850 ;;                  1    wreg      void 
 40851 ;; Registers used:
 40852 ;;		wreg, status,2, status,0, cstack
 40853 ;; Tracked objects:
 40854 ;;		On entry : 0/0
 40855 ;;		On exit  : 0/0
 40856 ;;		Unchanged: 0/0
 40857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40862 ;;Total ram usage:        0 bytes
 40863 ;; Hardware stack levels used:    1
 40864 ;; Hardware stack levels required when called:    2
 40865 ;; This function calls:
 40866 ;;		_timerHandler16
 40867 ;;		_timerTick16
 40868 ;; This function is called by:
 40869 ;;		_TMR5_Initialize
 40870 ;;		_TMR5_ISR
 40871 ;; This function uses a non-reentrant model
 40872 ;;
 40873                           
 40874                           	psect	text257
 40875  00A7A6                     __ptext257:
 40876                           	opt callstack 0
 40877  00A7A6                     _TMR5_InterruptTicker:
 40878                           	opt callstack 12
 40879                           
 40880                           ;tmr5.c: 184: timerTick16();
 40881                           
 40882                           ; BSR set to: 15
 40883                           ;incstack = 0
 40884  00A7A6  EC69  F053         	call	_timerTick16	;wreg free
 40885                           
 40886                           ;tmr5.c: 185: timerHandler16();
 40887  00A7AA  ECED  F03A         	call	_timerHandler16	;wreg free
 40888  00A7AE  0012               	return		;funcret
 40889  00A7B0                     __end_of_TMR5_InterruptTicker:
 40890                           	opt callstack 0
 40891                           
 40892 ;; *************** function _timerTick16 *****************
 40893 ;; Defined at:
 40894 ;;		line 21 in file "tmrAPP.c"
 40895 ;; Parameters:    Size  Location     Type
 40896 ;;		None
 40897 ;; Auto vars:     Size  Location     Type
 40898 ;;		None
 40899 ;; Return value:  Size  Location     Type
 40900 ;;                  1    wreg      void 
 40901 ;; Registers used:
 40902 ;;		wreg, status,2, status,0
 40903 ;; Tracked objects:
 40904 ;;		On entry : 0/0
 40905 ;;		On exit  : 0/0
 40906 ;;		Unchanged: 0/0
 40907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40912 ;;Total ram usage:        0 bytes
 40913 ;; Hardware stack levels used:    1
 40914 ;; This function calls:
 40915 ;;		Nothing
 40916 ;; This function is called by:
 40917 ;;		_TMR5_InterruptTicker
 40918 ;; This function uses a non-reentrant model
 40919 ;;
 40920                           
 40921                           	psect	text258
 40922  00A6D2                     __ptext258:
 40923                           	opt callstack 0
 40924  00A6D2                     _timerTick16:
 40925                           	opt callstack 13
 40926                           
 40927                           ;tmrAPP.c: 22: sCounter += 16;
 40928                           
 40929                           ;incstack = 0
 40930  00A6D2  0E10               	movlw	16
 40931  00A6D4  0101               	movlb	1	; () banked
 40932  00A6D6  271A               	addwf	_sCounter& (0+255),f,b
 40933  00A6D8  0E00               	movlw	0
 40934  00A6DA  231B               	addwfc	(_sCounter+1)& (0+255),f,b
 40935                           
 40936                           ; BSR set to: 1
 40937  00A6DC  0012               	return		;funcret
 40938  00A6DE                     __end_of_timerTick16:
 40939                           	opt callstack 0
 40940                           
 40941 ;; *************** function _timerHandler16 *****************
 40942 ;; Defined at:
 40943 ;;		line 46 in file "tmrAPP.c"
 40944 ;; Parameters:    Size  Location     Type
 40945 ;;		None
 40946 ;; Auto vars:     Size  Location     Type
 40947 ;;		None
 40948 ;; Return value:  Size  Location     Type
 40949 ;;                  1    wreg      void 
 40950 ;; Registers used:
 40951 ;;		wreg, status,2, status,0, cstack
 40952 ;; Tracked objects:
 40953 ;;		On entry : 0/0
 40954 ;;		On exit  : 0/0
 40955 ;;		Unchanged: 0/0
 40956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40961 ;;Total ram usage:        0 bytes
 40962 ;; Hardware stack levels used:    1
 40963 ;; Hardware stack levels required when called:    1
 40964 ;; This function calls:
 40965 ;;		___lbmod
 40966 ;;		i2___awdiv
 40967 ;; This function is called by:
 40968 ;;		_TMR5_InterruptTicker
 40969 ;; This function uses a non-reentrant model
 40970 ;;
 40971                           
 40972                           	psect	text259
 40973  0075DA                     __ptext259:
 40974                           	opt callstack 0
 40975  0075DA                     _timerHandler16:
 40976                           	opt callstack 12
 40977                           
 40978                           ;tmrAPP.c: 47: timer.sec += sCounter;
 40979                           
 40980                           ; BSR set to: 1
 40981                           ;incstack = 0
 40982  0075DA  0101               	movlb	1	; () banked
 40983  0075DC  511A               	movf	_sCounter& (0+255),w,b
 40984  0075DE  2702               	addwf	(_timer+2)& (0+255),f,b
 40985                           
 40986                           ; BSR set to: 1
 40987                           ;tmrAPP.c: 48: sCounter = 0;
 40988  0075E0  0E00               	movlw	0
 40989  0075E2  6F1B               	movwf	(_sCounter+1)& (0+255),b
 40990  0075E4  0E00               	movlw	0
 40991  0075E6  6F1A               	movwf	_sCounter& (0+255),b
 40992                           
 40993                           ; BSR set to: 1
 40994                           ;tmrAPP.c: 54: if (timer.sec/60){
 40995  0075E8  C102  F001         	movff	_timer+2,i2___awdiv@dividend
 40996  0075EC  6A02               	clrf	i2___awdiv@dividend+1,c
 40997  0075EE  0E00               	movlw	0
 40998  0075F0  6E04               	movwf	i2___awdiv@divisor+1,c
 40999  0075F2  0E3C               	movlw	60
 41000  0075F4  6E03               	movwf	i2___awdiv@divisor,c
 41001  0075F6  ECAF  F042         	call	i2___awdiv	;wreg free
 41002  0075FA  5001               	movf	?i2___awdiv,w,c
 41003  0075FC  1002               	iorwf	?i2___awdiv+1,w,c
 41004  0075FE  B4D8               	btfsc	status,2,c
 41005  007600  D013               	goto	i2l3198
 41006                           
 41007                           ;tmrAPP.c: 55: timer.min += timer.sec/60;
 41008  007602  C102  F001         	movff	_timer+2,i2___awdiv@dividend
 41009  007606  6A02               	clrf	i2___awdiv@dividend+1,c
 41010  007608  0E00               	movlw	0
 41011  00760A  6E04               	movwf	i2___awdiv@divisor+1,c
 41012  00760C  0E3C               	movlw	60
 41013  00760E  6E03               	movwf	i2___awdiv@divisor,c
 41014  007610  ECAF  F042         	call	i2___awdiv	;wreg free
 41015  007614  5001               	movf	?i2___awdiv,w,c
 41016  007616  0101               	movlb	1	; () banked
 41017  007618  2703               	addwf	(_timer+3)& (0+255),f,b
 41018                           
 41019                           ;tmrAPP.c: 56: timer.sec %= 60;
 41020  00761A  0E3C               	movlw	60
 41021  00761C  6E01               	movwf	___lbmod@divisor,c
 41022  00761E  5102               	movf	(_timer+2)& (0+255),w,b
 41023  007620  EC36  F050         	call	___lbmod
 41024  007624  0101               	movlb	1	; () banked
 41025  007626  6F02               	movwf	(_timer+2)& (0+255),b
 41026  007628                     i2l3198:
 41027                           
 41028                           ;tmrAPP.c: 57: };tmrAPP.c: 58: if (timer.min/60){
 41029  007628  C103  F001         	movff	_timer+3,i2___awdiv@dividend
 41030  00762C  6A02               	clrf	i2___awdiv@dividend+1,c
 41031  00762E  0E00               	movlw	0
 41032  007630  6E04               	movwf	i2___awdiv@divisor+1,c
 41033  007632  0E3C               	movlw	60
 41034  007634  6E03               	movwf	i2___awdiv@divisor,c
 41035  007636  ECAF  F042         	call	i2___awdiv	;wreg free
 41036  00763A  5001               	movf	?i2___awdiv,w,c
 41037  00763C  1002               	iorwf	?i2___awdiv+1,w,c
 41038  00763E  B4D8               	btfsc	status,2,c
 41039  007640  D013               	goto	i2l3199
 41040                           
 41041                           ;tmrAPP.c: 59: timer.hour += timer.min/60;
 41042  007642  C103  F001         	movff	_timer+3,i2___awdiv@dividend
 41043  007646  6A02               	clrf	i2___awdiv@dividend+1,c
 41044  007648  0E00               	movlw	0
 41045  00764A  6E04               	movwf	i2___awdiv@divisor+1,c
 41046  00764C  0E3C               	movlw	60
 41047  00764E  6E03               	movwf	i2___awdiv@divisor,c
 41048  007650  ECAF  F042         	call	i2___awdiv	;wreg free
 41049  007654  5001               	movf	?i2___awdiv,w,c
 41050  007656  0101               	movlb	1	; () banked
 41051  007658  2704               	addwf	(_timer+4)& (0+255),f,b
 41052                           
 41053                           ;tmrAPP.c: 60: timer.min %= 60;
 41054  00765A  0E3C               	movlw	60
 41055  00765C  6E01               	movwf	___lbmod@divisor,c
 41056  00765E  5103               	movf	(_timer+3)& (0+255),w,b
 41057  007660  EC36  F050         	call	___lbmod
 41058  007664  0101               	movlb	1	; () banked
 41059  007666  6F03               	movwf	(_timer+3)& (0+255),b
 41060  007668                     i2l3199:
 41061                           
 41062                           ;tmrAPP.c: 61: };tmrAPP.c: 62: if(timer.hour/24){
 41063  007668  C104  F001         	movff	_timer+4,i2___awdiv@dividend
 41064  00766C  6A02               	clrf	i2___awdiv@dividend+1,c
 41065  00766E  0E00               	movlw	0
 41066  007670  6E04               	movwf	i2___awdiv@divisor+1,c
 41067  007672  0E18               	movlw	24
 41068  007674  6E03               	movwf	i2___awdiv@divisor,c
 41069  007676  ECAF  F042         	call	i2___awdiv	;wreg free
 41070  00767A  5001               	movf	?i2___awdiv,w,c
 41071  00767C  1002               	iorwf	?i2___awdiv+1,w,c
 41072  00767E  B4D8               	btfsc	status,2,c
 41073  007680  0012               	return	
 41074                           
 41075                           ;tmrAPP.c: 63: timer.day += timer.hour/24;
 41076  007682  C104  F001         	movff	_timer+4,i2___awdiv@dividend
 41077  007686  6A02               	clrf	i2___awdiv@dividend+1,c
 41078  007688  0E00               	movlw	0
 41079  00768A  6E04               	movwf	i2___awdiv@divisor+1,c
 41080  00768C  0E18               	movlw	24
 41081  00768E  6E03               	movwf	i2___awdiv@divisor,c
 41082  007690  ECAF  F042         	call	i2___awdiv	;wreg free
 41083  007694  5001               	movf	?i2___awdiv,w,c
 41084  007696  0101               	movlb	1	; () banked
 41085  007698  2705               	addwf	(_timer+5)& (0+255),f,b
 41086                           
 41087                           ;tmrAPP.c: 64: timer.hour %= 24;
 41088  00769A  0E18               	movlw	24
 41089  00769C  6E01               	movwf	___lbmod@divisor,c
 41090  00769E  5104               	movf	(_timer+4)& (0+255),w,b
 41091  0076A0  EC36  F050         	call	___lbmod
 41092  0076A4  0101               	movlb	1	; () banked
 41093  0076A6  6F04               	movwf	(_timer+4)& (0+255),b
 41094  0076A8  0012               	return		;funcret
 41095  0076AA                     __end_of_timerHandler16:
 41096                           	opt callstack 0
 41097                           
 41098 ;; *************** function i2___awdiv *****************
 41099 ;; Defined at:
 41100 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 41101 ;; Parameters:    Size  Location     Type
 41102 ;;  dividend        2    0[COMRAM] int 
 41103 ;;  divisor         2    2[COMRAM] int 
 41104 ;; Auto vars:     Size  Location     Type
 41105 ;;  __awdiv         2    6[COMRAM] int 
 41106 ;;  __awdiv         1    5[COMRAM] unsigned char 
 41107 ;;  __awdiv         1    4[COMRAM] unsigned char 
 41108 ;; Return value:  Size  Location     Type
 41109 ;;                  2    0[COMRAM] int 
 41110 ;; Registers used:
 41111 ;;		wreg, status,2, status,0
 41112 ;; Tracked objects:
 41113 ;;		On entry : 0/0
 41114 ;;		On exit  : 0/0
 41115 ;;		Unchanged: 0/0
 41116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41117 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41118 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41120 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41121 ;;Total ram usage:        8 bytes
 41122 ;; Hardware stack levels used:    1
 41123 ;; This function calls:
 41124 ;;		Nothing
 41125 ;; This function is called by:
 41126 ;;		_timerHandler16
 41127 ;; This function uses a non-reentrant model
 41128 ;;
 41129                           
 41130                           	psect	text260
 41131  00855E                     __ptext260:
 41132                           	opt callstack 0
 41133  00855E                     i2___awdiv:
 41134                           	opt callstack 12
 41135                           
 41136                           ;incstack = 0
 41137  00855E  0E00               	movlw	0
 41138  008560  6E06               	movwf	i2___awdiv@sign,c
 41139  008562  AE04               	btfss	i2___awdiv@divisor+1,7,c
 41140  008564  D006               	goto	i2l15780
 41141  008566  6C03               	negf	i2___awdiv@divisor,c
 41142  008568  1E04               	comf	i2___awdiv@divisor+1,f,c
 41143  00856A  B0D8               	btfsc	status,0,c
 41144  00856C  2A04               	incf	i2___awdiv@divisor+1,f,c
 41145  00856E  0E01               	movlw	1
 41146  008570  6E06               	movwf	i2___awdiv@sign,c
 41147  008572                     i2l15780:
 41148  008572  AE02               	btfss	i2___awdiv@dividend+1,7,c
 41149  008574  D006               	goto	i2l15786
 41150  008576  6C01               	negf	i2___awdiv@dividend,c
 41151  008578  1E02               	comf	i2___awdiv@dividend+1,f,c
 41152  00857A  B0D8               	btfsc	status,0,c
 41153  00857C  2A02               	incf	i2___awdiv@dividend+1,f,c
 41154  00857E  0E01               	movlw	1
 41155  008580  1A06               	xorwf	i2___awdiv@sign,f,c
 41156  008582                     i2l15786:
 41157  008582  0E00               	movlw	0
 41158  008584  6E08               	movwf	i2___awdiv@quotient+1,c
 41159  008586  0E00               	movlw	0
 41160  008588  6E07               	movwf	i2___awdiv@quotient,c
 41161  00858A  5003               	movf	i2___awdiv@divisor,w,c
 41162  00858C  1004               	iorwf	i2___awdiv@divisor+1,w,c
 41163  00858E  B4D8               	btfsc	status,2,c
 41164  008590  D01C               	goto	i2l15808
 41165  008592  0E01               	movlw	1
 41166  008594  6E05               	movwf	i2___awdiv@counter,c
 41167  008596  D004               	goto	i2l15794
 41168  008598                     i2l15792:
 41169  008598  90D8               	bcf	status,0,c
 41170  00859A  3603               	rlcf	i2___awdiv@divisor,f,c
 41171  00859C  3604               	rlcf	i2___awdiv@divisor+1,f,c
 41172  00859E  2A05               	incf	i2___awdiv@counter,f,c
 41173  0085A0                     i2l15794:
 41174  0085A0  AE04               	btfss	i2___awdiv@divisor+1,7,c
 41175  0085A2  D7FA               	goto	i2l15792
 41176  0085A4                     i2u1632_40:
 41177  0085A4  90D8               	bcf	status,0,c
 41178  0085A6  3607               	rlcf	i2___awdiv@quotient,f,c
 41179  0085A8  3608               	rlcf	i2___awdiv@quotient+1,f,c
 41180  0085AA  5003               	movf	i2___awdiv@divisor,w,c
 41181  0085AC  5C01               	subwf	i2___awdiv@dividend,w,c
 41182  0085AE  5004               	movf	i2___awdiv@divisor+1,w,c
 41183  0085B0  5802               	subwfb	i2___awdiv@dividend+1,w,c
 41184  0085B2  A0D8               	btfss	status,0,c
 41185  0085B4  D005               	goto	i2l15804
 41186  0085B6  5003               	movf	i2___awdiv@divisor,w,c
 41187  0085B8  5E01               	subwf	i2___awdiv@dividend,f,c
 41188  0085BA  5004               	movf	i2___awdiv@divisor+1,w,c
 41189  0085BC  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 41190  0085BE  8007               	bsf	i2___awdiv@quotient,0,c
 41191  0085C0                     i2l15804:
 41192  0085C0  90D8               	bcf	status,0,c
 41193  0085C2  3204               	rrcf	i2___awdiv@divisor+1,f,c
 41194  0085C4  3203               	rrcf	i2___awdiv@divisor,f,c
 41195  0085C6  2E05               	decfsz	i2___awdiv@counter,f,c
 41196  0085C8  D7ED               	goto	i2u1632_40
 41197  0085CA                     i2l15808:
 41198  0085CA  5006               	movf	i2___awdiv@sign,w,c
 41199  0085CC  B4D8               	btfsc	status,2,c
 41200  0085CE  D004               	goto	i2l15812
 41201  0085D0  6C07               	negf	i2___awdiv@quotient,c
 41202  0085D2  1E08               	comf	i2___awdiv@quotient+1,f,c
 41203  0085D4  B0D8               	btfsc	status,0,c
 41204  0085D6  2A08               	incf	i2___awdiv@quotient+1,f,c
 41205  0085D8                     i2l15812:
 41206  0085D8  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 41207  0085DC  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 41208  0085E0  0012               	return		;funcret
 41209  0085E2                     __end_ofi2___awdiv:
 41210                           	opt callstack 0
 41211                           
 41212 ;; *************** function ___lbmod *****************
 41213 ;; Defined at:
 41214 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c"
 41215 ;; Parameters:    Size  Location     Type
 41216 ;;  dividend        1    wreg     unsigned char 
 41217 ;;  divisor         1    0[COMRAM] unsigned char 
 41218 ;; Auto vars:     Size  Location     Type
 41219 ;;  dividend        1    1[COMRAM] unsigned char 
 41220 ;;  rem             1    3[COMRAM] unsigned char 
 41221 ;;  counter         1    2[COMRAM] unsigned char 
 41222 ;; Return value:  Size  Location     Type
 41223 ;;                  1    wreg      unsigned char 
 41224 ;; Registers used:
 41225 ;;		wreg, status,2, status,0
 41226 ;; Tracked objects:
 41227 ;;		On entry : 0/0
 41228 ;;		On exit  : 0/0
 41229 ;;		Unchanged: 0/0
 41230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41231 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41232 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41234 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41235 ;;Total ram usage:        4 bytes
 41236 ;; Hardware stack levels used:    1
 41237 ;; This function calls:
 41238 ;;		Nothing
 41239 ;; This function is called by:
 41240 ;;		_timerHandler16
 41241 ;;		_timerHandler
 41242 ;; This function uses a non-reentrant model
 41243 ;;
 41244                           
 41245                           	psect	text261
 41246  00A06C                     __ptext261:
 41247                           	opt callstack 0
 41248  00A06C                     ___lbmod:
 41249                           	opt callstack 12
 41250                           
 41251                           ;incstack = 0
 41252                           ;___lbmod@dividend stored from wreg
 41253  00A06C  6E02               	movwf	___lbmod@dividend,c
 41254  00A06E  0E08               	movlw	8
 41255  00A070  6E03               	movwf	___lbmod@counter,c
 41256  00A072  0E00               	movlw	0
 41257  00A074  6E04               	movwf	___lbmod@rem,c
 41258  00A076                     i2l15724:
 41259  00A076  90D8               	bcf	status,0,c
 41260  00A078  3402               	rlcf	___lbmod@dividend,w,c
 41261  00A07A  3404               	rlcf	___lbmod@rem,w,c
 41262  00A07C  6E04               	movwf	___lbmod@rem,c
 41263  00A07E  90D8               	bcf	status,0,c
 41264  00A080  3602               	rlcf	___lbmod@dividend,f,c
 41265  00A082  5001               	movf	___lbmod@divisor,w,c
 41266  00A084  5C04               	subwf	___lbmod@rem,w,c
 41267  00A086  A0D8               	btfss	status,0,c
 41268  00A088  D002               	goto	i2l15732
 41269  00A08A  5001               	movf	___lbmod@divisor,w,c
 41270  00A08C  5E04               	subwf	___lbmod@rem,f,c
 41271  00A08E                     i2l15732:
 41272  00A08E  2E03               	decfsz	___lbmod@counter,f,c
 41273  00A090  D7F2               	goto	i2l15724
 41274  00A092  5004               	movf	___lbmod@rem,w,c
 41275  00A094  0012               	return		;funcret
 41276  00A096                     __end_of___lbmod:
 41277                           	opt callstack 0
 41278                           
 41279 ;; *************** function _TMR3_ISR *****************
 41280 ;; Defined at:
 41281 ;;		line 160 in file "mcc_generated_files/tmr3.c"
 41282 ;; Parameters:    Size  Location     Type
 41283 ;;		None
 41284 ;; Auto vars:     Size  Location     Type
 41285 ;;		None
 41286 ;; Return value:  Size  Location     Type
 41287 ;;                  1    wreg      void 
 41288 ;; Registers used:
 41289 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41290 ;; Tracked objects:
 41291 ;;		On entry : 0/0
 41292 ;;		On exit  : 0/0
 41293 ;;		Unchanged: 0/0
 41294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41299 ;;Total ram usage:        0 bytes
 41300 ;; Hardware stack levels used:    1
 41301 ;; Hardware stack levels required when called:    1
 41302 ;; This function calls:
 41303 ;;		Absolute function
 41304 ;;		_TMR3ISRClock
 41305 ;;		_TMR3_WriteTimer
 41306 ;; This function is called by:
 41307 ;;		_INTERRUPT_InterruptManager
 41308 ;; This function uses a non-reentrant model
 41309 ;;
 41310                           
 41311                           	psect	text262
 41312  009F3C                     __ptext262:
 41313                           	opt callstack 0
 41314  009F3C                     _TMR3_ISR:
 41315                           	opt callstack 14
 41316                           
 41317                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 41318                           
 41319                           ;incstack = 0
 41320  009F3C  92A1               	bcf	4001,1,c	;volatile
 41321                           
 41322                           ;tmr3.c: 165: TMR3_WriteTimer(timer3ReloadVal);
 41323  009F3E  C1E3  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 41324  009F42  C1E4  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 41325  009F46  EC4F  F052         	call	_TMR3_WriteTimer	;wreg free
 41326                           
 41327                           ;tmr3.c: 167: if(TMR3_InterruptHandler)
 41328  009F4A  0101               	movlb	1	; () banked
 41329  009F4C  51E1               	movf	_TMR3_InterruptHandler& (0+255),w,b
 41330  009F4E  11E2               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 41331  009F50  B4D8               	btfsc	status,2,c
 41332  009F52  0012               	return	
 41333                           
 41334                           ; BSR set to: 1
 41335                           ;tmr3.c: 168: {;tmr3.c: 169: TMR3_InterruptHandler();
 41336  009F54  D801               	call	i2u1752_48
 41337  009F56  0012               	return	
 41338  009F58                     i2u1752_48:
 41339  009F58  0005               	push	
 41340  009F5A  6EFA               	movwf	pclath,c
 41341  009F5C  51E1               	movf	_TMR3_InterruptHandler& (0+255),w,b
 41342  009F5E  6EFD               	movwf	tosl,c
 41343  009F60  51E2               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 41344  009F62  6EFE               	movwf	tosh,c
 41345  009F64  6AFF               	clrf	tosu,c
 41346  009F66  50FA               	movf	pclath,w,c
 41347  009F68  0012               	return		;indir
 41348  009F6A                     __end_of_TMR3_ISR:
 41349                           	opt callstack 0
 41350                           
 41351 ;; *************** function _TMR3_WriteTimer *****************
 41352 ;; Defined at:
 41353 ;;		line 123 in file "mcc_generated_files/tmr3.c"
 41354 ;; Parameters:    Size  Location     Type
 41355 ;;  timerVal        2    0[COMRAM] unsigned int 
 41356 ;; Auto vars:     Size  Location     Type
 41357 ;;		None
 41358 ;; Return value:  Size  Location     Type
 41359 ;;                  1    wreg      void 
 41360 ;; Registers used:
 41361 ;;		wreg, status,2
 41362 ;; Tracked objects:
 41363 ;;		On entry : 0/0
 41364 ;;		On exit  : 0/0
 41365 ;;		Unchanged: 0/0
 41366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41371 ;;Total ram usage:        2 bytes
 41372 ;; Hardware stack levels used:    1
 41373 ;; This function calls:
 41374 ;;		Nothing
 41375 ;; This function is called by:
 41376 ;;		_TMR3_ISR
 41377 ;;		_TMR3_Reload
 41378 ;; This function uses a non-reentrant model
 41379 ;;
 41380                           
 41381                           	psect	text263
 41382  00A49E                     __ptext263:
 41383                           	opt callstack 0
 41384  00A49E                     _TMR3_WriteTimer:
 41385                           	opt callstack 14
 41386                           
 41387                           ;tmr3.c: 125: if (T3CONbits.nT3SYNC == 1)
 41388                           
 41389                           ;incstack = 0
 41390  00A49E  A4B1               	btfss	4017,2,c	;volatile
 41391  00A4A0  D007               	goto	i2l16542
 41392                           
 41393                           ;tmr3.c: 126: {;tmr3.c: 128: T3CONbits.TMR3ON = 0;
 41394  00A4A2  90B1               	bcf	4017,0,c	;volatile
 41395                           
 41396                           ;tmr3.c: 131: TMR3H = (timerVal >> 8);
 41397  00A4A4  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 41398  00A4A6  6EB3               	movwf	4019,c	;volatile
 41399                           
 41400                           ;tmr3.c: 132: TMR3L = (uint8_t) timerVal;
 41401  00A4A8  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 41402                           
 41403                           ;tmr3.c: 135: T3CONbits.TMR3ON =1;
 41404  00A4AC  80B1               	bsf	4017,0,c	;volatile
 41405                           
 41406                           ;tmr3.c: 136: }
 41407  00A4AE  0012               	return	
 41408  00A4B0                     i2l16542:
 41409                           
 41410                           ;tmr3.c: 137: else;tmr3.c: 138: {;tmr3.c: 140: TMR3H = (timerVal >> 8);
 41411  00A4B0  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 41412  00A4B2  6EB3               	movwf	4019,c	;volatile
 41413                           
 41414                           ;tmr3.c: 141: TMR3L = (uint8_t) timerVal;
 41415  00A4B4  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 41416  00A4B8  0012               	return		;funcret
 41417  00A4BA                     __end_of_TMR3_WriteTimer:
 41418                           	opt callstack 0
 41419                           
 41420 ;; *************** function _TMR3ISRClock *****************
 41421 ;; Defined at:
 41422 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 41423 ;; Parameters:    Size  Location     Type
 41424 ;;		None
 41425 ;; Auto vars:     Size  Location     Type
 41426 ;;		None
 41427 ;; Return value:  Size  Location     Type
 41428 ;;                  1    wreg      void 
 41429 ;; Registers used:
 41430 ;;		wreg, status,2, status,0
 41431 ;; Tracked objects:
 41432 ;;		On entry : 0/0
 41433 ;;		On exit  : 0/0
 41434 ;;		Unchanged: 0/0
 41435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41440 ;;Total ram usage:        0 bytes
 41441 ;; Hardware stack levels used:    1
 41442 ;; This function calls:
 41443 ;;		Nothing
 41444 ;; This function is called by:
 41445 ;;		_TMR3_Initialize
 41446 ;;		_TMR3_ISR
 41447 ;; This function uses a non-reentrant model
 41448 ;;
 41449                           
 41450                           	psect	text264
 41451  00A7F8                     __ptext264:
 41452                           	opt callstack 0
 41453  00A7F8                     _TMR3ISRClock:
 41454                           	opt callstack 14
 41455                           
 41456                           ;tmr3.c: 180: LATE ^= 0x1;
 41457                           
 41458                           ;incstack = 0
 41459  00A7F8  0E01               	movlw	1
 41460  00A7FA  1A8D               	xorwf	3981,f,c	;volatile
 41461  00A7FC  0012               	return		;funcret
 41462  00A7FE                     __end_of_TMR3ISRClock:
 41463                           	opt callstack 0
 41464                           
 41465 ;; *************** function _TMR1_ISR *****************
 41466 ;; Defined at:
 41467 ;;		line 161 in file "mcc_generated_files/tmr1.c"
 41468 ;; Parameters:    Size  Location     Type
 41469 ;;		None
 41470 ;; Auto vars:     Size  Location     Type
 41471 ;;		None
 41472 ;; Return value:  Size  Location     Type
 41473 ;;                  1    wreg      void 
 41474 ;; Registers used:
 41475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 41476 ;; Tracked objects:
 41477 ;;		On entry : 0/0
 41478 ;;		On exit  : 0/0
 41479 ;;		Unchanged: 0/0
 41480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41485 ;;Total ram usage:        0 bytes
 41486 ;; Hardware stack levels used:    1
 41487 ;; Hardware stack levels required when called:    5
 41488 ;; This function calls:
 41489 ;;		_TMR1_CallBack
 41490 ;;		i2_TMR1_WriteTimer
 41491 ;; This function is called by:
 41492 ;;		_INTERRUPT_InterruptManager
 41493 ;; This function uses a non-reentrant model
 41494 ;;
 41495                           
 41496                           	psect	text265
 41497  00A598                     __ptext265:
 41498                           	opt callstack 0
 41499  00A598                     _TMR1_ISR:
 41500                           	opt callstack 10
 41501                           
 41502                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
 41503                           
 41504                           ;incstack = 0
 41505  00A598  909E               	bcf	3998,0,c	;volatile
 41506                           
 41507                           ;tmr1.c: 166: TMR1_WriteTimer(timer1ReloadVal);
 41508  00A59A  C1E7  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 41509  00A59E  C1E8  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 41510  00A5A2  EC5D  F052         	call	i2_TMR1_WriteTimer	;wreg free
 41511                           
 41512                           ;tmr1.c: 170: TMR1_CallBack();
 41513  00A5A6  EC9B  F051         	call	_TMR1_CallBack	;wreg free
 41514  00A5AA  0012               	return		;funcret
 41515  00A5AC                     __end_of_TMR1_ISR:
 41516                           	opt callstack 0
 41517                           
 41518 ;; *************** function _TMR1_CallBack *****************
 41519 ;; Defined at:
 41520 ;;		line 173 in file "mcc_generated_files/tmr1.c"
 41521 ;; Parameters:    Size  Location     Type
 41522 ;;		None
 41523 ;; Auto vars:     Size  Location     Type
 41524 ;;		None
 41525 ;; Return value:  Size  Location     Type
 41526 ;;                  1    wreg      void 
 41527 ;; Registers used:
 41528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 41529 ;; Tracked objects:
 41530 ;;		On entry : 0/0
 41531 ;;		On exit  : 0/0
 41532 ;;		Unchanged: 0/0
 41533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41538 ;;Total ram usage:        0 bytes
 41539 ;; Hardware stack levels used:    1
 41540 ;; Hardware stack levels required when called:    4
 41541 ;; This function calls:
 41542 ;;		Absolute function
 41543 ;;		_TMR1_DefaultInterruptHandler
 41544 ;;		_TMR_ISR_lora
 41545 ;; This function is called by:
 41546 ;;		_TMR1_ISR
 41547 ;; This function uses a non-reentrant model
 41548 ;;
 41549                           
 41550                           	psect	text266
 41551  00A336                     __ptext266:
 41552                           	opt callstack 0
 41553  00A336                     _TMR1_CallBack:
 41554                           	opt callstack 10
 41555                           
 41556                           ;tmr1.c: 176: if(TMR1_InterruptHandler)
 41557                           
 41558                           ;incstack = 0
 41559  00A336  0101               	movlb	1	; () banked
 41560  00A338  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 41561  00A33A  11E6               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 41562  00A33C  B4D8               	btfsc	status,2,c
 41563  00A33E  0012               	return	
 41564                           
 41565                           ; BSR set to: 1
 41566                           ;tmr1.c: 177: {;tmr1.c: 178: TMR1_InterruptHandler();
 41567  00A340  D801               	call	i2u1696_48
 41568  00A342  0012               	return	
 41569  00A344                     i2u1696_48:
 41570  00A344  0005               	push	
 41571  00A346  6EFA               	movwf	pclath,c
 41572  00A348  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 41573  00A34A  6EFD               	movwf	tosl,c
 41574  00A34C  51E6               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 41575  00A34E  6EFE               	movwf	tosh,c
 41576  00A350  6AFF               	clrf	tosu,c
 41577  00A352  50FA               	movf	pclath,w,c
 41578  00A354  0012               	return		;indir
 41579  00A356                     __end_of_TMR1_CallBack:
 41580                           	opt callstack 0
 41581                           
 41582 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 41583 ;; Defined at:
 41584 ;;		line 186 in file "mcc_generated_files/tmr1.c"
 41585 ;; Parameters:    Size  Location     Type
 41586 ;;		None
 41587 ;; Auto vars:     Size  Location     Type
 41588 ;;		None
 41589 ;; Return value:  Size  Location     Type
 41590 ;;                  1    wreg      void 
 41591 ;; Registers used:
 41592 ;;		None
 41593 ;; Tracked objects:
 41594 ;;		On entry : 0/0
 41595 ;;		On exit  : 0/0
 41596 ;;		Unchanged: 0/0
 41597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41602 ;;Total ram usage:        0 bytes
 41603 ;; Hardware stack levels used:    1
 41604 ;; This function calls:
 41605 ;;		Nothing
 41606 ;; This function is called by:
 41607 ;;		_TMR1_Initialize
 41608 ;;		_TMR1_CallBack
 41609 ;; This function uses a non-reentrant model
 41610 ;;
 41611                           
 41612                           	psect	text267
 41613  00A836                     __ptext267:
 41614                           	opt callstack 0
 41615  00A836                     _TMR1_DefaultInterruptHandler:
 41616                           	opt callstack 13
 41617                           
 41618                           ;incstack = 0
 41619  00A836  0012               	return		;funcret
 41620  00A838                     __end_of_TMR1_DefaultInterruptHandler:
 41621                           	opt callstack 0
 41622                           
 41623 ;; *************** function _TMR_ISR_lora *****************
 41624 ;; Defined at:
 41625 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 41626 ;; Parameters:    Size  Location     Type
 41627 ;;		None
 41628 ;; Auto vars:     Size  Location     Type
 41629 ;;		None
 41630 ;; Return value:  Size  Location     Type
 41631 ;;                  1    wreg      void 
 41632 ;; Registers used:
 41633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41634 ;; Tracked objects:
 41635 ;;		On entry : 0/0
 41636 ;;		On exit  : 0/0
 41637 ;;		Unchanged: 0/0
 41638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41643 ;;Total ram usage:        0 bytes
 41644 ;; Hardware stack levels used:    1
 41645 ;; Hardware stack levels required when called:    3
 41646 ;; This function calls:
 41647 ;;		i2_SwTimersInterrupt
 41648 ;;		i2_TMR_SwapTimer
 41649 ;; This function is called by:
 41650 ;;		_TMR_ISR_Lora_Init
 41651 ;;		_TMR1_CallBack
 41652 ;; This function uses a non-reentrant model
 41653 ;;
 41654                           
 41655                           	psect	text268
 41656  0091B2                     __ptext268:
 41657                           	opt callstack 0
 41658  0091B2                     _TMR_ISR_lora:
 41659                           	opt callstack 10
 41660                           
 41661                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 41662                           
 41663                           ;incstack = 0
 41664  0091B2  0E01               	movlw	1
 41665  0091B4  6E44               	movwf	_timerOverflow,c	;volatile
 41666                           
 41667                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 41668  0091B6  EC53  F037         	call	i2_SwTimersInterrupt	;wreg free
 41669  0091BA  C019  F052         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 41670  0091BE  C01A  F053         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 41671  0091C2  C01B  F054         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 41672  0091C6  C01C  F055         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 41673                           
 41674                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 41675  0091CA  5055               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 41676  0091CC  E11C               	bnz	i2l1343
 41677  0091CE  0E00               	movlw	0
 41678  0091D0  5C52               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 41679  0091D2  0E00               	movlw	0
 41680  0091D4  5853               	subwfb	_ticksToScheduledInterrupt+1,w,c	;volatile
 41681  0091D6  0E01               	movlw	1
 41682  0091D8  5854               	subwfb	_ticksToScheduledInterrupt+2,w,c	;volatile
 41683  0091DA  B0D8               	btfsc	status,0,c
 41684  0091DC  0012               	return	
 41685                           
 41686                           ;tmr_lora_addons.c: 66: {;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticks
      +                          ToScheduledInterrupt;
 41687  0091DE  5052               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 41688  0091E0  0800               	sublw	0
 41689  0091E2  6E3E               	movwf	_reloadVal,c	;volatile
 41690  0091E4  5053               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 41691  0091E6  A0D8               	btfss	status,0,c
 41692  0091E8  2AE8               	incf	wreg,f,c
 41693  0091EA  0800               	sublw	0
 41694  0091EC  6E3F               	movwf	_reloadVal+1,c	;volatile
 41695                           
 41696                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 41697  0091EE  C03E  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 41698  0091F2  C03F  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 41699  0091F6  ECD1  F04C         	call	i2_TMR_SwapTimer	;wreg free
 41700  0091FA  C009  F036         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 41701  0091FE  C00A  F037         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 41702  009202  6A38               	clrf	_ticksAdded+2,c	;volatile
 41703  009204  6A39               	clrf	_ticksAdded+3,c	;volatile
 41704  009206                     i2l1343:
 41705  009206  0012               	return		;funcret
 41706  009208                     __end_of_TMR_ISR_lora:
 41707                           	opt callstack 0
 41708                           
 41709 ;; *************** function i2_TMR_SwapTimer *****************
 41710 ;; Defined at:
 41711 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41712 ;; Parameters:    Size  Location     Type
 41713 ;;  timerVal        2    8[COMRAM] unsigned int 
 41714 ;; Auto vars:     Size  Location     Type
 41715 ;;		None
 41716 ;; Return value:  Size  Location     Type
 41717 ;;                  2    8[COMRAM] unsigned int 
 41718 ;; Registers used:
 41719 ;;		wreg, status,2, status,0, cstack
 41720 ;; Tracked objects:
 41721 ;;		On entry : 0/0
 41722 ;;		On exit  : 0/0
 41723 ;;		Unchanged: 0/0
 41724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41729 ;;Total ram usage:        2 bytes
 41730 ;; Hardware stack levels used:    1
 41731 ;; Hardware stack levels required when called:    1
 41732 ;; This function calls:
 41733 ;;		i2_TMR1_ReadTimer
 41734 ;;		i2_TMR1_WriteTimer
 41735 ;; This function is called by:
 41736 ;;		_TMR_ISR_lora
 41737 ;; This function uses a non-reentrant model
 41738 ;;
 41739                           
 41740                           	psect	text269
 41741  0099A2                     __ptext269:
 41742                           	opt callstack 0
 41743  0099A2                     i2_TMR_SwapTimer:
 41744                           	opt callstack 11
 41745                           
 41746                           ;sw_timer.c: 114: static uint16_t oldVal;;sw_timer.c: 115: static uint16_t retVal;;sw_ti
      +                          mer.c: 117: oldVal = TMR1_ReadTimer();
 41747                           
 41748                           ;incstack = 0
 41749  0099A2  ECAB  F051         	call	i2_TMR1_ReadTimer	;wreg free
 41750  0099A6  C001  F03A         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 41751  0099AA  C002  F03B         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 41752  0099AE                     i2l15740:
 41753  0099AE  ECAB  F051         	call	i2_TMR1_ReadTimer	;wreg free
 41754  0099B2  503A               	movf	TMR_SwapTimer@oldVal,w,c
 41755  0099B4  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 41756  0099B6  E104               	bnz	i2u1624_40
 41757  0099B8  503B               	movf	TMR_SwapTimer@oldVal+1,w,c
 41758  0099BA  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 41759  0099BC  B4D8               	btfsc	status,2,c
 41760  0099BE  D7F7               	goto	i2l15740
 41761  0099C0                     i2u1624_40:
 41762                           
 41763                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 41764  0099C0  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 41765  0099C4  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 41766  0099C8  EC5D  F052         	call	i2_TMR1_WriteTimer	;wreg free
 41767                           
 41768                           ;sw_timer.c: 128: oldVal++;
 41769  0099CC  4A3A               	infsnz	TMR_SwapTimer@oldVal,f,c
 41770  0099CE  2A3B               	incf	TMR_SwapTimer@oldVal+1,f,c
 41771                           
 41772                           ;sw_timer.c: 130: retVal = oldVal;
 41773  0099D0  C03A  F11E         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 41774  0099D4  C03B  F11F         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 41775                           
 41776                           ;sw_timer.c: 132: return retVal;
 41777  0099D8  C11E  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 41778  0099DC  C11F  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 41779  0099E0  0012               	return		;funcret
 41780  0099E2                     __end_ofi2_TMR_SwapTimer:
 41781                           	opt callstack 0
 41782                           
 41783 ;; *************** function i2_TMR1_WriteTimer *****************
 41784 ;; Defined at:
 41785 ;;		line 124 in file "mcc_generated_files/tmr1.c"
 41786 ;; Parameters:    Size  Location     Type
 41787 ;;  timerVal        2    0[COMRAM] unsigned int 
 41788 ;; Auto vars:     Size  Location     Type
 41789 ;;		None
 41790 ;; Return value:  Size  Location     Type
 41791 ;;                  1    wreg      void 
 41792 ;; Registers used:
 41793 ;;		wreg, status,2
 41794 ;; Tracked objects:
 41795 ;;		On entry : 0/0
 41796 ;;		On exit  : 0/0
 41797 ;;		Unchanged: 0/0
 41798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41802 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41803 ;;Total ram usage:        2 bytes
 41804 ;; Hardware stack levels used:    1
 41805 ;; This function calls:
 41806 ;;		Nothing
 41807 ;; This function is called by:
 41808 ;;		_TMR1_ISR
 41809 ;;		i2_TMR_SwapTimer
 41810 ;; This function uses a non-reentrant model
 41811 ;;
 41812                           
 41813                           	psect	text270
 41814  00A4BA                     __ptext270:
 41815                           	opt callstack 0
 41816  00A4BA                     i2_TMR1_WriteTimer:
 41817                           	opt callstack 14
 41818                           
 41819                           ;tmr1.c: 126: if (T1CONbits.T1SYNC == 1)
 41820                           
 41821                           ;incstack = 0
 41822  00A4BA  A4CD               	btfss	4045,2,c	;volatile
 41823  00A4BC  D007               	goto	i2l15294
 41824                           
 41825                           ;tmr1.c: 127: {;tmr1.c: 129: T1CONbits.TMR1ON = 0;
 41826  00A4BE  90CD               	bcf	4045,0,c	;volatile
 41827                           
 41828                           ;tmr1.c: 132: TMR1H = (timerVal >> 8);
 41829  00A4C0  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 41830  00A4C2  6ECF               	movwf	4047,c	;volatile
 41831                           
 41832                           ;tmr1.c: 133: TMR1L = (uint8_t) timerVal;
 41833  00A4C4  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 41834                           
 41835                           ;tmr1.c: 136: T1CONbits.TMR1ON =1;
 41836  00A4C8  80CD               	bsf	4045,0,c	;volatile
 41837                           
 41838                           ;tmr1.c: 137: }
 41839  00A4CA  0012               	return	
 41840  00A4CC                     i2l15294:
 41841                           
 41842                           ;tmr1.c: 138: else;tmr1.c: 139: {;tmr1.c: 141: TMR1H = (timerVal >> 8);
 41843  00A4CC  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 41844  00A4CE  6ECF               	movwf	4047,c	;volatile
 41845                           
 41846                           ;tmr1.c: 142: TMR1L = (uint8_t) timerVal;
 41847  00A4D0  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 41848  00A4D4  0012               	return		;funcret
 41849  00A4D6                     __end_ofi2_TMR1_WriteTimer:
 41850                           	opt callstack 0
 41851                           
 41852 ;; *************** function i2_SwTimersInterrupt *****************
 41853 ;; Defined at:
 41854 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41855 ;; Parameters:    Size  Location     Type
 41856 ;;		None
 41857 ;; Auto vars:     Size  Location     Type
 41858 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 41859 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 41860 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 41861 ;; Return value:  Size  Location     Type
 41862 ;;                  4   24[COMRAM] unsigned long 
 41863 ;; Registers used:
 41864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41865 ;; Tracked objects:
 41866 ;;		On entry : 0/0
 41867 ;;		On exit  : 0/0
 41868 ;;		Unchanged: 0/0
 41869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41871 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41872 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41873 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41874 ;;Total ram usage:       17 bytes
 41875 ;; Hardware stack levels used:    1
 41876 ;; Hardware stack levels required when called:    2
 41877 ;; This function calls:
 41878 ;;		i2_TMR_GetDeltaTime
 41879 ;; This function is called by:
 41880 ;;		_TMR_ISR_lora
 41881 ;; This function uses a non-reentrant model
 41882 ;;
 41883                           
 41884                           	psect	text271
 41885  006EA6                     __ptext271:
 41886                           	opt callstack 0
 41887  006EA6                     i2_SwTimersInterrupt:
 41888                           	opt callstack 10
 41889                           
 41890                           ;sw_timer.c: 289: uint8_t i;;sw_timer.c: 290: uint32_t timeElapsed;;sw_timer.c: 291: uin
      +                          t32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 41891                           
 41892                           ;incstack = 0
 41893  006EA6  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 41894  006EA8  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 41895  006EAA  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 41896  006EAC  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 41897                           
 41898                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 41899  006EAE  EC5C  F034         	call	i2_TMR_GetDeltaTime	;wreg free
 41900  006EB2  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 41901  006EB6  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 41902  006EBA  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 41903  006EBE  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 41904                           
 41905                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 41906  006EC2  0E00               	movlw	0
 41907  006EC4  6E29               	movwf	i2SwTimersInterrupt@i,c
 41908  006EC6  D05D               	goto	i2l15770
 41909  006EC8                     i2l15758:
 41910                           
 41911                           ; BSR set to: 1
 41912                           ;sw_timer.c: 298: {;sw_timer.c: 301: if (swTimers[i].running == 1)
 41913  006EC8  5029               	movf	i2SwTimersInterrupt@i,w,c
 41914  006ECA  0D08               	mullw	8
 41915  006ECC  0E04               	movlw	low (_swTimers+4)
 41916  006ECE  24F3               	addwf	prodl,w,c
 41917  006ED0  6ED9               	movwf	fsr2l,c
 41918  006ED2  0E03               	movlw	high (_swTimers+4)
 41919  006ED4  20F4               	addwfc	prodh,w,c
 41920  006ED6  6EDA               	movwf	fsr2h,c
 41921  006ED8  04DE               	decf	postinc2,w,c
 41922  006EDA  A4D8               	btfss	status,2,c
 41923  006EDC  D051               	goto	i2l15768
 41924                           
 41925                           ; BSR set to: 1
 41926                           ;sw_timer.c: 302: {;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 41927  006EDE  5029               	movf	i2SwTimersInterrupt@i,w,c
 41928  006EE0  0D08               	mullw	8
 41929  006EE2  0E00               	movlw	low _swTimers
 41930  006EE4  24F3               	addwf	prodl,w,c
 41931  006EE6  6ED9               	movwf	fsr2l,c
 41932  006EE8  0E03               	movlw	high _swTimers
 41933  006EEA  20F4               	addwfc	prodh,w,c
 41934  006EEC  6EDA               	movwf	fsr2h,c
 41935  006EEE  50DE               	movf	postinc2,w,c
 41936  006EF0  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 41937  006EF2  50DE               	movf	postinc2,w,c
 41938  006EF4  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 41939  006EF6  50DE               	movf	postinc2,w,c
 41940  006EF8  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 41941  006EFA  50DE               	movf	postinc2,w,c
 41942  006EFC  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 41943  006EFE  A0D8               	btfss	status,0,c
 41944  006F00  D00D               	goto	i2l15764
 41945                           
 41946                           ; BSR set to: 1
 41947                           ;sw_timer.c: 304: {;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 41948  006F02  5029               	movf	i2SwTimersInterrupt@i,w,c
 41949  006F04  0D08               	mullw	8
 41950  006F06  0E00               	movlw	low _swTimers
 41951  006F08  24F3               	addwf	prodl,w,c
 41952  006F0A  6ED9               	movwf	fsr2l,c
 41953  006F0C  0E03               	movlw	high _swTimers
 41954  006F0E  20F4               	addwfc	prodh,w,c
 41955  006F10  6EDA               	movwf	fsr2h,c
 41956  006F12  6ADE               	clrf	postinc2,c
 41957  006F14  6ADE               	clrf	postinc2,c
 41958  006F16  6ADE               	clrf	postinc2,c
 41959  006F18  6ADD               	clrf	postdec2,c
 41960                           
 41961                           ;sw_timer.c: 306: }
 41962  006F1A  D032               	goto	i2l15768
 41963  006F1C                     i2l15764:
 41964                           
 41965                           ; BSR set to: 1
 41966                           ;sw_timer.c: 307: else;sw_timer.c: 308: {;sw_timer.c: 309: swTimers[i].ticksRemaining -=
      +                           timeElapsed;
 41967  006F1C  5029               	movf	i2SwTimersInterrupt@i,w,c
 41968  006F1E  0D08               	mullw	8
 41969  006F20  0E00               	movlw	low _swTimers
 41970  006F22  24F3               	addwf	prodl,w,c
 41971  006F24  6ED9               	movwf	fsr2l,c
 41972  006F26  0E03               	movlw	high _swTimers
 41973  006F28  20F4               	addwfc	prodh,w,c
 41974  006F2A  6EDA               	movwf	fsr2h,c
 41975  006F2C  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 41976  006F2E  5EDE               	subwf	postinc2,f,c
 41977  006F30  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 41978  006F32  5ADE               	subwfb	postinc2,f,c
 41979  006F34  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 41980  006F36  5ADE               	subwfb	postinc2,f,c
 41981  006F38  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 41982  006F3A  5ADE               	subwfb	postinc2,f,c
 41983                           
 41984                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 41985  006F3C  5029               	movf	i2SwTimersInterrupt@i,w,c
 41986  006F3E  0D08               	mullw	8
 41987  006F40  0E00               	movlw	low _swTimers
 41988  006F42  24F3               	addwf	prodl,w,c
 41989  006F44  6ED9               	movwf	fsr2l,c
 41990  006F46  0E03               	movlw	high _swTimers
 41991  006F48  20F4               	addwfc	prodh,w,c
 41992  006F4A  6EDA               	movwf	fsr2h,c
 41993  006F4C  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 41994  006F4E  5CDE               	subwf	postinc2,w,c
 41995  006F50  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 41996  006F52  58DE               	subwfb	postinc2,w,c
 41997  006F54  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 41998  006F56  58DE               	subwfb	postinc2,w,c
 41999  006F58  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 42000  006F5A  58DE               	subwfb	postinc2,w,c
 42001  006F5C  B0D8               	btfsc	status,0,c
 42002  006F5E  D010               	goto	i2l15768
 42003                           
 42004                           ; BSR set to: 1
 42005                           ;sw_timer.c: 313: {;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 42006  006F60  5029               	movf	i2SwTimersInterrupt@i,w,c
 42007  006F62  0D08               	mullw	8
 42008  006F64  0E00               	movlw	low _swTimers
 42009  006F66  24F3               	addwf	prodl,w,c
 42010  006F68  6ED9               	movwf	fsr2l,c
 42011  006F6A  0E03               	movlw	high _swTimers
 42012  006F6C  20F4               	addwfc	prodh,w,c
 42013  006F6E  6EDA               	movwf	fsr2h,c
 42014  006F70  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 42015  006F74  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 42016  006F78  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 42017  006F7C  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 42018  006F80                     i2l15768:
 42019                           
 42020                           ; BSR set to: 1
 42021  006F80  2A29               	incf	i2SwTimersInterrupt@i,f,c
 42022  006F82                     i2l15770:
 42023  006F82  0101               	movlb	1	; () banked
 42024  006F84  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
 42025  006F86  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 42026  006F88  A0D8               	btfss	status,0,c
 42027  006F8A  D79E               	goto	i2l15758
 42028                           
 42029                           ; BSR set to: 1
 42030                           ;sw_timer.c: 315: };sw_timer.c: 316: };sw_timer.c: 317: };sw_timer.c: 318: };sw_timer.c:
      +                           320: return ticksToNextTimerEvent;
 42031  006F8C  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 42032  006F90  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 42033  006F94  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 42034  006F98  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 42035                           
 42036                           ; BSR set to: 1
 42037  006F9C  0012               	return		;funcret
 42038  006F9E                     __end_ofi2_SwTimersInterrupt:
 42039                           	opt callstack 0
 42040                           
 42041 ;; *************** function i2_TMR_GetDeltaTime *****************
 42042 ;; Defined at:
 42043 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42044 ;; Parameters:    Size  Location     Type
 42045 ;;		None
 42046 ;; Auto vars:     Size  Location     Type
 42047 ;;		None
 42048 ;; Return value:  Size  Location     Type
 42049 ;;                  4    8[COMRAM] unsigned long 
 42050 ;; Registers used:
 42051 ;;		wreg, status,2, status,0, cstack
 42052 ;; Tracked objects:
 42053 ;;		On entry : 0/0
 42054 ;;		On exit  : 0/0
 42055 ;;		Unchanged: 0/0
 42056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42057 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42059 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42060 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42061 ;;Total ram usage:       16 bytes
 42062 ;; Hardware stack levels used:    1
 42063 ;; Hardware stack levels required when called:    1
 42064 ;; This function calls:
 42065 ;;		i2_TMR1_ReadTimer
 42066 ;; This function is called by:
 42067 ;;		i2_SwTimersInterrupt
 42068 ;; This function uses a non-reentrant model
 42069 ;;
 42070                           
 42071                           	psect	text272
 42072  0068B8                     __ptext272:
 42073                           	opt callstack 0
 42074  0068B8                     i2_TMR_GetDeltaTime:
 42075                           	opt callstack 10
 42076                           
 42077                           ;sw_timer.c: 90: static uint32_t retVal;;sw_timer.c: 91: static uint16_t tmrVal;;sw_time
      +                          r.c: 93: tmrVal = TMR1_ReadTimer();
 42078                           
 42079                           ; BSR set to: 1
 42080                           ;incstack = 0
 42081  0068B8  ECAB  F051         	call	i2_TMR1_ReadTimer	;wreg free
 42082  0068BC  C001  F03C         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 42083  0068C0  C002  F03D         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 42084                           
 42085                           ;sw_timer.c: 95: if (timerOverflow == 1)
 42086  0068C4  0444               	decf	_timerOverflow,w,c	;volatile
 42087  0068C6  A4D8               	btfss	status,2,c
 42088  0068C8  D045               	goto	i2l15278
 42089                           
 42090                           ;sw_timer.c: 96: {;sw_timer.c: 97: timerOverflow = 0;
 42091  0068CA  0E00               	movlw	0
 42092  0068CC  6E44               	movwf	_timerOverflow,c	;volatile
 42093                           
 42094                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 42095  0068CE  503E               	movf	_reloadVal,w,c	;volatile
 42096  0068D0  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 42097  0068D2  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 42098  0068D4  503F               	movf	_reloadVal+1,w,c	;volatile
 42099  0068D6  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 42100  0068D8  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 42101  0068DA  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 42102  0068DC  A0D8               	btfss	status,0,c
 42103  0068DE  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 42104  0068E0  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 42105  0068E2  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 42106  0068E4  5032               	movf	_ticksAccounted,w,c	;volatile
 42107  0068E6  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 42108  0068E8  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 42109  0068EA  5033               	movf	_ticksAccounted+1,w,c	;volatile
 42110  0068EC  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 42111  0068EE  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 42112  0068F0  5034               	movf	_ticksAccounted+2,w,c	;volatile
 42113  0068F2  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 42114  0068F4  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 42115  0068F6  5035               	movf	_ticksAccounted+3,w,c	;volatile
 42116  0068F8  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 42117  0068FA  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 42118  0068FC  5036               	movf	_ticksAdded,w,c	;volatile
 42119  0068FE  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 42120  006900  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 42121  006902  5037               	movf	_ticksAdded+1,w,c	;volatile
 42122  006904  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 42123  006906  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 42124  006908  5038               	movf	_ticksAdded+2,w,c	;volatile
 42125  00690A  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 42126  00690C  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 42127  00690E  5039               	movf	_ticksAdded+3,w,c	;volatile
 42128  006910  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 42129  006912  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 42130  006914  0E00               	movlw	0
 42131  006916  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 42132  006918  0101               	movlb	1	; () banked
 42133  00691A  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 42134  00691C  0E00               	movlw	0
 42135  00691E  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 42136  006920  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 42137  006922  0E01               	movlw	1
 42138  006924  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 42139  006926  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 42140  006928  0E00               	movlw	0
 42141  00692A  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 42142  00692C  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 42143                           
 42144                           ; BSR set to: 1
 42145                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 42146  00692E  C03C  F032         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 42147  006932  C03D  F033         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 42148  006936  6A34               	clrf	_ticksAccounted+2,c	;volatile
 42149  006938  6A35               	clrf	_ticksAccounted+3,c	;volatile
 42150                           
 42151                           ; BSR set to: 1
 42152                           ;sw_timer.c: 100: ticksAdded = 0;
 42153  00693A  0E00               	movlw	0
 42154  00693C  6E36               	movwf	_ticksAdded,c	;volatile
 42155  00693E  0E00               	movlw	0
 42156  006940  6E37               	movwf	_ticksAdded+1,c	;volatile
 42157  006942  0E00               	movlw	0
 42158  006944  6E38               	movwf	_ticksAdded+2,c	;volatile
 42159  006946  0E00               	movlw	0
 42160  006948  6E39               	movwf	_ticksAdded+3,c	;volatile
 42161                           
 42162                           ; BSR set to: 1
 42163                           ;sw_timer.c: 101: reloadVal = 0;
 42164  00694A  0E00               	movlw	0
 42165  00694C  6E3F               	movwf	_reloadVal+1,c	;volatile
 42166  00694E  0E00               	movlw	0
 42167  006950  6E3E               	movwf	_reloadVal,c	;volatile
 42168                           
 42169                           ;sw_timer.c: 102: }
 42170  006952  D029               	goto	i2l15280
 42171  006954                     i2l15278:
 42172                           
 42173                           ;sw_timer.c: 103: else;sw_timer.c: 104: {;sw_timer.c: 105: retVal = tmrVal - reloadVal -
      +                           ticksAccounted + ticksAdded;
 42174  006954  503E               	movf	_reloadVal,w,c	;volatile
 42175  006956  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 42176  006958  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 42177  00695A  503F               	movf	_reloadVal+1,w,c	;volatile
 42178  00695C  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 42179  00695E  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 42180  006960  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 42181  006962  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 42182  006964  5032               	movf	_ticksAccounted,w,c	;volatile
 42183  006966  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 42184  006968  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 42185  00696A  5033               	movf	_ticksAccounted+1,w,c	;volatile
 42186  00696C  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 42187  00696E  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 42188  006970  5034               	movf	_ticksAccounted+2,w,c	;volatile
 42189  006972  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 42190  006974  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 42191  006976  5035               	movf	_ticksAccounted+3,w,c	;volatile
 42192  006978  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 42193  00697A  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 42194  00697C  5036               	movf	_ticksAdded,w,c	;volatile
 42195  00697E  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 42196  006980  0101               	movlb	1	; () banked
 42197  006982  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 42198  006984  5037               	movf	_ticksAdded+1,w,c	;volatile
 42199  006986  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 42200  006988  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 42201  00698A  5038               	movf	_ticksAdded+2,w,c	;volatile
 42202  00698C  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 42203  00698E  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 42204  006990  5039               	movf	_ticksAdded+3,w,c	;volatile
 42205  006992  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 42206  006994  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 42207                           
 42208                           ;sw_timer.c: 106: ticksAccounted += retVal;
 42209  006996  5112               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 42210  006998  2632               	addwf	_ticksAccounted,f,c	;volatile
 42211  00699A  5113               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 42212  00699C  2233               	addwfc	_ticksAccounted+1,f,c	;volatile
 42213  00699E  5114               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 42214  0069A0  2234               	addwfc	_ticksAccounted+2,f,c	;volatile
 42215  0069A2  5115               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 42216  0069A4  2235               	addwfc	_ticksAccounted+3,f,c	;volatile
 42217  0069A6                     i2l15280:
 42218                           
 42219                           ; BSR set to: 1
 42220                           ;sw_timer.c: 107: };sw_timer.c: 109: return retVal;
 42221  0069A6  C112  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 42222  0069AA  C113  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 42223  0069AE  C114  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 42224  0069B2  C115  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 42225                           
 42226                           ; BSR set to: 1
 42227  0069B6  0012               	return		;funcret
 42228  0069B8                     __end_ofi2_TMR_GetDeltaTime:
 42229                           	opt callstack 0
 42230                           
 42231 ;; *************** function i2_TMR1_ReadTimer *****************
 42232 ;; Defined at:
 42233 ;;		line 108 in file "mcc_generated_files/tmr1.c"
 42234 ;; Parameters:    Size  Location     Type
 42235 ;;		None
 42236 ;; Auto vars:     Size  Location     Type
 42237 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 42238 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 42239 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 42240 ;; Return value:  Size  Location     Type
 42241 ;;                  2    0[COMRAM] unsigned int 
 42242 ;; Registers used:
 42243 ;;		wreg, status,2
 42244 ;; Tracked objects:
 42245 ;;		On entry : 0/0
 42246 ;;		On exit  : 0/0
 42247 ;;		Unchanged: 0/0
 42248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42250 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42252 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42253 ;;Total ram usage:        8 bytes
 42254 ;; Hardware stack levels used:    1
 42255 ;; This function calls:
 42256 ;;		Nothing
 42257 ;; This function is called by:
 42258 ;;		i2_TMR_GetDeltaTime
 42259 ;;		i2_TMR_SwapTimer
 42260 ;; This function uses a non-reentrant model
 42261 ;;
 42262                           
 42263                           	psect	text273
 42264  00A356                     __ptext273:
 42265                           	opt callstack 0
 42266  00A356                     i2_TMR1_ReadTimer:
 42267                           	opt callstack 11
 42268                           
 42269                           ;tmr1.c: 110: uint16_t readVal;;tmr1.c: 111: uint8_t readValHigh;;tmr1.c: 112: uint8_t r
      +                          eadValLow;;tmr1.c: 114: T1CONbits.T1RD16 = 1;
 42270                           
 42271                           ; BSR set to: 1
 42272                           ;incstack = 0
 42273  00A356  82CD               	bsf	4045,1,c	;volatile
 42274                           
 42275                           ;tmr1.c: 116: readValLow = TMR1L;
 42276  00A358  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 42277                           
 42278                           ;tmr1.c: 117: readValHigh = TMR1H;
 42279  00A35C  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 42280                           
 42281                           ;tmr1.c: 119: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 42282  00A360  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 42283  00A362  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 42284  00A364  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 42285  00A366  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 42286  00A368  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 42287                           
 42288                           ;tmr1.c: 121: return readVal;
 42289  00A36C  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 42290  00A370  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 42291  00A374  0012               	return		;funcret
 42292  00A376                     __end_ofi2_TMR1_ReadTimer:
 42293                           	opt callstack 0
 42294                           
 42295 ;; *************** function _PIN_MANAGER_IOC *****************
 42296 ;; Defined at:
 42297 ;;		line 111 in file "mcc_generated_files/pin_manager.c"
 42298 ;; Parameters:    Size  Location     Type
 42299 ;;		None
 42300 ;; Auto vars:     Size  Location     Type
 42301 ;;		None
 42302 ;; Return value:  Size  Location     Type
 42303 ;;                  1    wreg      void 
 42304 ;; Registers used:
 42305 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42306 ;; Tracked objects:
 42307 ;;		On entry : 0/0
 42308 ;;		On exit  : 0/0
 42309 ;;		Unchanged: 0/0
 42310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42315 ;;Total ram usage:        0 bytes
 42316 ;; Hardware stack levels used:    1
 42317 ;; Hardware stack levels required when called:    2
 42318 ;; This function calls:
 42319 ;;		_IOCB4_ISR
 42320 ;; This function is called by:
 42321 ;;		_INTERRUPT_InterruptManager
 42322 ;; This function uses a non-reentrant model
 42323 ;;
 42324                           
 42325                           	psect	text274
 42326  00A7B0                     __ptext274:
 42327                           	opt callstack 0
 42328  00A7B0                     _PIN_MANAGER_IOC:
 42329                           	opt callstack 13
 42330                           
 42331                           ;pin_manager.c: 114: if(IOCBbits.IOCB4 == 1)
 42332                           
 42333                           ;incstack = 0
 42334  00A7B0  B862               	btfsc	3938,4,c	;volatile
 42335                           
 42336                           ;pin_manager.c: 115: {;pin_manager.c: 116: IOCB4_ISR();
 42337  00A7B2  ECBB  F051         	call	_IOCB4_ISR	;wreg free
 42338                           
 42339                           ;pin_manager.c: 117: };pin_manager.c: 119: INTCONbits.RBIF = 0;
 42340  00A7B6  90F2               	bcf	4082,0,c	;volatile
 42341  00A7B8  0012               	return		;funcret
 42342  00A7BA                     __end_of_PIN_MANAGER_IOC:
 42343                           	opt callstack 0
 42344                           
 42345 ;; *************** function _IOCB4_ISR *****************
 42346 ;; Defined at:
 42347 ;;		line 125 in file "mcc_generated_files/pin_manager.c"
 42348 ;; Parameters:    Size  Location     Type
 42349 ;;		None
 42350 ;; Auto vars:     Size  Location     Type
 42351 ;;		None
 42352 ;; Return value:  Size  Location     Type
 42353 ;;                  1    wreg      void 
 42354 ;; Registers used:
 42355 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42356 ;; Tracked objects:
 42357 ;;		On entry : 0/0
 42358 ;;		On exit  : 0/0
 42359 ;;		Unchanged: 0/0
 42360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42365 ;;Total ram usage:        0 bytes
 42366 ;; Hardware stack levels used:    1
 42367 ;; Hardware stack levels required when called:    1
 42368 ;; This function calls:
 42369 ;;		Absolute function
 42370 ;;		_DIO2_ISR_Lora
 42371 ;;		_IOCB4_DefaultInterruptHandler
 42372 ;; This function is called by:
 42373 ;;		_PIN_MANAGER_IOC
 42374 ;; This function uses a non-reentrant model
 42375 ;;
 42376                           
 42377                           	psect	text275
 42378  00A376                     __ptext275:
 42379                           	opt callstack 0
 42380  00A376                     _IOCB4_ISR:
 42381                           	opt callstack 13
 42382                           
 42383                           ;pin_manager.c: 130: if(IOCB4_InterruptHandler)
 42384                           
 42385                           ;incstack = 0
 42386  00A376  0101               	movlb	1	; () banked
 42387  00A378  51E9               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 42388  00A37A  11EA               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 42389  00A37C  B4D8               	btfsc	status,2,c
 42390  00A37E  0012               	return	
 42391                           
 42392                           ; BSR set to: 1
 42393                           ;pin_manager.c: 131: {;pin_manager.c: 132: IOCB4_InterruptHandler();
 42394  00A380  D801               	call	i2u1694_48
 42395  00A382  0012               	return	
 42396  00A384                     i2u1694_48:
 42397  00A384  0005               	push	
 42398  00A386  6EFA               	movwf	pclath,c
 42399  00A388  51E9               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 42400  00A38A  6EFD               	movwf	tosl,c
 42401  00A38C  51EA               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 42402  00A38E  6EFE               	movwf	tosh,c
 42403  00A390  6AFF               	clrf	tosu,c
 42404  00A392  50FA               	movf	pclath,w,c
 42405  00A394  0012               	return		;indir
 42406  00A396                     __end_of_IOCB4_ISR:
 42407                           	opt callstack 0
 42408                           
 42409 ;; *************** function _DIO2_ISR_Lora *****************
 42410 ;; Defined at:
 42411 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42412 ;; Parameters:    Size  Location     Type
 42413 ;;		None
 42414 ;; Auto vars:     Size  Location     Type
 42415 ;;		None
 42416 ;; Return value:  Size  Location     Type
 42417 ;;                  1    wreg      void 
 42418 ;; Registers used:
 42419 ;;		status,2, status,0
 42420 ;; Tracked objects:
 42421 ;;		On entry : 0/0
 42422 ;;		On exit  : 0/0
 42423 ;;		Unchanged: 0/0
 42424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42429 ;;Total ram usage:        0 bytes
 42430 ;; Hardware stack levels used:    1
 42431 ;; This function calls:
 42432 ;;		Nothing
 42433 ;; This function is called by:
 42434 ;;		_DIO2_ISR_Lora_Init
 42435 ;;		_IOCB4_ISR
 42436 ;; This function uses a non-reentrant model
 42437 ;;
 42438                           
 42439                           	psect	text276
 42440  00A81E                     __ptext276:
 42441                           	opt callstack 0
 42442  00A81E                     _DIO2_ISR_Lora:
 42443                           	opt callstack 13
 42444                           
 42445                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 42446                           
 42447                           ;incstack = 0
 42448  00A81E  8445               	bsf	_dioStatus,2,c	;volatile
 42449  00A820  0012               	return		;funcret
 42450  00A822                     __end_of_DIO2_ISR_Lora:
 42451                           	opt callstack 0
 42452                           
 42453 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 42454 ;; Defined at:
 42455 ;;		line 146 in file "mcc_generated_files/pin_manager.c"
 42456 ;; Parameters:    Size  Location     Type
 42457 ;;		None
 42458 ;; Auto vars:     Size  Location     Type
 42459 ;;		None
 42460 ;; Return value:  Size  Location     Type
 42461 ;;                  1    wreg      void 
 42462 ;; Registers used:
 42463 ;;		None
 42464 ;; Tracked objects:
 42465 ;;		On entry : 0/0
 42466 ;;		On exit  : 0/0
 42467 ;;		Unchanged: 0/0
 42468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42473 ;;Total ram usage:        0 bytes
 42474 ;; Hardware stack levels used:    1
 42475 ;; This function calls:
 42476 ;;		Nothing
 42477 ;; This function is called by:
 42478 ;;		_PIN_MANAGER_Initialize
 42479 ;;		_IOCB4_ISR
 42480 ;; This function uses a non-reentrant model
 42481 ;;
 42482                           
 42483                           	psect	text277
 42484  00A838                     __ptext277:
 42485                           	opt callstack 0
 42486  00A838                     _IOCB4_DefaultInterruptHandler:
 42487                           	opt callstack 13
 42488                           
 42489                           ;incstack = 0
 42490  00A838  0012               	return		;funcret
 42491  00A83A                     __end_of_IOCB4_DefaultInterruptHandler:
 42492                           	opt callstack 0
 42493                           
 42494 ;; *************** function _INT2_ISR *****************
 42495 ;; Defined at:
 42496 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 42497 ;; Parameters:    Size  Location     Type
 42498 ;;		None
 42499 ;; Auto vars:     Size  Location     Type
 42500 ;;		None
 42501 ;; Return value:  Size  Location     Type
 42502 ;;                  1    wreg      void 
 42503 ;; Registers used:
 42504 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42505 ;; Tracked objects:
 42506 ;;		On entry : 0/0
 42507 ;;		On exit  : 0/0
 42508 ;;		Unchanged: 0/0
 42509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42514 ;;Total ram usage:        0 bytes
 42515 ;; Hardware stack levels used:    1
 42516 ;; Hardware stack levels required when called:    2
 42517 ;; This function calls:
 42518 ;;		_INT2_CallBack
 42519 ;; This function is called by:
 42520 ;;		_INTERRUPT_InterruptManager
 42521 ;; This function uses a non-reentrant model
 42522 ;;
 42523                           
 42524                           	psect	text278
 42525  00A7CA                     __ptext278:
 42526                           	opt callstack 0
 42527  00A7CA                     _INT2_ISR:
 42528                           	opt callstack 13
 42529                           
 42530                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 42531                           
 42532                           ;incstack = 0
 42533  00A7CA  92F0               	bcf	4080,1,c	;volatile
 42534                           
 42535                           ;ext_int.c: 64: INT2_CallBack();
 42536  00A7CC  ECCB  F051         	call	_INT2_CallBack	;wreg free
 42537  00A7D0  0012               	return		;funcret
 42538  00A7D2                     __end_of_INT2_ISR:
 42539                           	opt callstack 0
 42540                           
 42541 ;; *************** function _INT2_CallBack *****************
 42542 ;; Defined at:
 42543 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 42544 ;; Parameters:    Size  Location     Type
 42545 ;;		None
 42546 ;; Auto vars:     Size  Location     Type
 42547 ;;		None
 42548 ;; Return value:  Size  Location     Type
 42549 ;;                  1    wreg      void 
 42550 ;; Registers used:
 42551 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42552 ;; Tracked objects:
 42553 ;;		On entry : 0/0
 42554 ;;		On exit  : 0/0
 42555 ;;		Unchanged: 0/0
 42556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42561 ;;Total ram usage:        0 bytes
 42562 ;; Hardware stack levels used:    1
 42563 ;; Hardware stack levels required when called:    1
 42564 ;; This function calls:
 42565 ;;		Absolute function
 42566 ;;		_DIO1_ISR_Lora
 42567 ;;		_INT2_DefaultInterruptHandler
 42568 ;; This function is called by:
 42569 ;;		_INT2_ISR
 42570 ;; This function uses a non-reentrant model
 42571 ;;
 42572                           
 42573                           	psect	text279
 42574  00A396                     __ptext279:
 42575                           	opt callstack 0
 42576  00A396                     _INT2_CallBack:
 42577                           	opt callstack 13
 42578                           
 42579                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 42580                           
 42581                           ;incstack = 0
 42582  00A396  0101               	movlb	1	; () banked
 42583  00A398  51EB               	movf	_INT2_InterruptHandler& (0+255),w,b
 42584  00A39A  11EC               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 42585  00A39C  B4D8               	btfsc	status,2,c
 42586  00A39E  0012               	return	
 42587                           
 42588                           ; BSR set to: 1
 42589                           ;ext_int.c: 72: {;ext_int.c: 73: INT2_InterruptHandler();
 42590  00A3A0  D801               	call	i2u1692_48
 42591  00A3A2  0012               	return	
 42592  00A3A4                     i2u1692_48:
 42593  00A3A4  0005               	push	
 42594  00A3A6  6EFA               	movwf	pclath,c
 42595  00A3A8  51EB               	movf	_INT2_InterruptHandler& (0+255),w,b
 42596  00A3AA  6EFD               	movwf	tosl,c
 42597  00A3AC  51EC               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 42598  00A3AE  6EFE               	movwf	tosh,c
 42599  00A3B0  6AFF               	clrf	tosu,c
 42600  00A3B2  50FA               	movf	pclath,w,c
 42601  00A3B4  0012               	return		;indir
 42602  00A3B6                     __end_of_INT2_CallBack:
 42603                           	opt callstack 0
 42604                           
 42605 ;; *************** function _DIO1_ISR_Lora *****************
 42606 ;; Defined at:
 42607 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42608 ;; Parameters:    Size  Location     Type
 42609 ;;		None
 42610 ;; Auto vars:     Size  Location     Type
 42611 ;;		None
 42612 ;; Return value:  Size  Location     Type
 42613 ;;                  1    wreg      void 
 42614 ;; Registers used:
 42615 ;;		status,2, status,0
 42616 ;; Tracked objects:
 42617 ;;		On entry : 0/0
 42618 ;;		On exit  : 0/0
 42619 ;;		Unchanged: 0/0
 42620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42625 ;;Total ram usage:        0 bytes
 42626 ;; Hardware stack levels used:    1
 42627 ;; This function calls:
 42628 ;;		Nothing
 42629 ;; This function is called by:
 42630 ;;		_DIO1_ISR_Lora_Init
 42631 ;;		_INT2_CallBack
 42632 ;; This function uses a non-reentrant model
 42633 ;;
 42634                           
 42635                           	psect	text280
 42636  00A822                     __ptext280:
 42637                           	opt callstack 0
 42638  00A822                     _DIO1_ISR_Lora:
 42639                           	opt callstack 13
 42640                           
 42641                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 42642                           
 42643                           ;incstack = 0
 42644  00A822  8245               	bsf	_dioStatus,1,c	;volatile
 42645  00A824  0012               	return		;funcret
 42646  00A826                     __end_of_DIO1_ISR_Lora:
 42647                           	opt callstack 0
 42648                           
 42649 ;; *************** function _INT2_DefaultInterruptHandler *****************
 42650 ;; Defined at:
 42651 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 42652 ;; Parameters:    Size  Location     Type
 42653 ;;		None
 42654 ;; Auto vars:     Size  Location     Type
 42655 ;;		None
 42656 ;; Return value:  Size  Location     Type
 42657 ;;                  1    wreg      void 
 42658 ;; Registers used:
 42659 ;;		None
 42660 ;; Tracked objects:
 42661 ;;		On entry : 0/0
 42662 ;;		On exit  : 0/0
 42663 ;;		Unchanged: 0/0
 42664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42669 ;;Total ram usage:        0 bytes
 42670 ;; Hardware stack levels used:    1
 42671 ;; This function calls:
 42672 ;;		Nothing
 42673 ;; This function is called by:
 42674 ;;		_EXT_INT_Initialize
 42675 ;;		_INT2_CallBack
 42676 ;; This function uses a non-reentrant model
 42677 ;;
 42678                           
 42679                           	psect	text281
 42680  00A83A                     __ptext281:
 42681                           	opt callstack 0
 42682  00A83A                     _INT2_DefaultInterruptHandler:
 42683                           	opt callstack 13
 42684                           
 42685                           ;incstack = 0
 42686  00A83A  0012               	return		;funcret
 42687  00A83C                     __end_of_INT2_DefaultInterruptHandler:
 42688                           	opt callstack 0
 42689                           
 42690 ;; *************** function _INT1_ISR *****************
 42691 ;; Defined at:
 42692 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 42693 ;; Parameters:    Size  Location     Type
 42694 ;;		None
 42695 ;; Auto vars:     Size  Location     Type
 42696 ;;		None
 42697 ;; Return value:  Size  Location     Type
 42698 ;;                  1    wreg      void 
 42699 ;; Registers used:
 42700 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42701 ;; Tracked objects:
 42702 ;;		On entry : 0/0
 42703 ;;		On exit  : 0/0
 42704 ;;		Unchanged: 0/0
 42705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42710 ;;Total ram usage:        0 bytes
 42711 ;; Hardware stack levels used:    1
 42712 ;; Hardware stack levels required when called:    2
 42713 ;; This function calls:
 42714 ;;		_INT1_CallBack
 42715 ;; This function is called by:
 42716 ;;		_INTERRUPT_InterruptManager
 42717 ;; This function uses a non-reentrant model
 42718 ;;
 42719                           
 42720                           	psect	text282
 42721  00A7D2                     __ptext282:
 42722                           	opt callstack 0
 42723  00A7D2                     _INT1_ISR:
 42724                           	opt callstack 13
 42725                           
 42726                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 42727                           
 42728                           ;incstack = 0
 42729  00A7D2  90F0               	bcf	4080,0,c	;volatile
 42730                           
 42731                           ;ext_int.c: 38: INT1_CallBack();
 42732  00A7D4  ECDB  F051         	call	_INT1_CallBack	;wreg free
 42733  00A7D8  0012               	return		;funcret
 42734  00A7DA                     __end_of_INT1_ISR:
 42735                           	opt callstack 0
 42736                           
 42737 ;; *************** function _INT1_CallBack *****************
 42738 ;; Defined at:
 42739 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 42740 ;; Parameters:    Size  Location     Type
 42741 ;;		None
 42742 ;; Auto vars:     Size  Location     Type
 42743 ;;		None
 42744 ;; Return value:  Size  Location     Type
 42745 ;;                  1    wreg      void 
 42746 ;; Registers used:
 42747 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42748 ;; Tracked objects:
 42749 ;;		On entry : 0/0
 42750 ;;		On exit  : 0/0
 42751 ;;		Unchanged: 0/0
 42752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42757 ;;Total ram usage:        0 bytes
 42758 ;; Hardware stack levels used:    1
 42759 ;; Hardware stack levels required when called:    1
 42760 ;; This function calls:
 42761 ;;		Absolute function
 42762 ;;		_DIO0_ISR_Lora
 42763 ;;		_INT1_DefaultInterruptHandler
 42764 ;; This function is called by:
 42765 ;;		_INT1_ISR
 42766 ;; This function uses a non-reentrant model
 42767 ;;
 42768                           
 42769                           	psect	text283
 42770  00A3B6                     __ptext283:
 42771                           	opt callstack 0
 42772  00A3B6                     _INT1_CallBack:
 42773                           	opt callstack 13
 42774                           
 42775                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 42776                           
 42777                           ;incstack = 0
 42778  00A3B6  0101               	movlb	1	; () banked
 42779  00A3B8  51ED               	movf	_INT1_InterruptHandler& (0+255),w,b
 42780  00A3BA  11EE               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 42781  00A3BC  B4D8               	btfsc	status,2,c
 42782  00A3BE  0012               	return	
 42783                           
 42784                           ; BSR set to: 1
 42785                           ;ext_int.c: 46: {;ext_int.c: 47: INT1_InterruptHandler();
 42786  00A3C0  D801               	call	i2u1690_48
 42787  00A3C2  0012               	return	
 42788  00A3C4                     i2u1690_48:
 42789  00A3C4  0005               	push	
 42790  00A3C6  6EFA               	movwf	pclath,c
 42791  00A3C8  51ED               	movf	_INT1_InterruptHandler& (0+255),w,b
 42792  00A3CA  6EFD               	movwf	tosl,c
 42793  00A3CC  51EE               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 42794  00A3CE  6EFE               	movwf	tosh,c
 42795  00A3D0  6AFF               	clrf	tosu,c
 42796  00A3D2  50FA               	movf	pclath,w,c
 42797  00A3D4  0012               	return		;indir
 42798  00A3D6                     __end_of_INT1_CallBack:
 42799                           	opt callstack 0
 42800                           
 42801 ;; *************** function _DIO0_ISR_Lora *****************
 42802 ;; Defined at:
 42803 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42804 ;; Parameters:    Size  Location     Type
 42805 ;;		None
 42806 ;; Auto vars:     Size  Location     Type
 42807 ;;		None
 42808 ;; Return value:  Size  Location     Type
 42809 ;;                  1    wreg      void 
 42810 ;; Registers used:
 42811 ;;		status,2, status,0
 42812 ;; Tracked objects:
 42813 ;;		On entry : 0/0
 42814 ;;		On exit  : 0/0
 42815 ;;		Unchanged: 0/0
 42816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42821 ;;Total ram usage:        0 bytes
 42822 ;; Hardware stack levels used:    1
 42823 ;; This function calls:
 42824 ;;		Nothing
 42825 ;; This function is called by:
 42826 ;;		_DIO0_ISR_Lora_Init
 42827 ;;		_INT1_CallBack
 42828 ;; This function uses a non-reentrant model
 42829 ;;
 42830                           
 42831                           	psect	text284
 42832  00A826                     __ptext284:
 42833                           	opt callstack 0
 42834  00A826                     _DIO0_ISR_Lora:
 42835                           	opt callstack 13
 42836                           
 42837                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 42838                           
 42839                           ;incstack = 0
 42840  00A826  8045               	bsf	_dioStatus,0,c	;volatile
 42841  00A828  0012               	return		;funcret
 42842  00A82A                     __end_of_DIO0_ISR_Lora:
 42843                           	opt callstack 0
 42844                           
 42845 ;; *************** function _INT1_DefaultInterruptHandler *****************
 42846 ;; Defined at:
 42847 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 42848 ;; Parameters:    Size  Location     Type
 42849 ;;		None
 42850 ;; Auto vars:     Size  Location     Type
 42851 ;;		None
 42852 ;; Return value:  Size  Location     Type
 42853 ;;                  1    wreg      void 
 42854 ;; Registers used:
 42855 ;;		None
 42856 ;; Tracked objects:
 42857 ;;		On entry : 0/0
 42858 ;;		On exit  : 0/0
 42859 ;;		Unchanged: 0/0
 42860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42865 ;;Total ram usage:        0 bytes
 42866 ;; Hardware stack levels used:    1
 42867 ;; This function calls:
 42868 ;;		Nothing
 42869 ;; This function is called by:
 42870 ;;		_EXT_INT_Initialize
 42871 ;;		_INT1_CallBack
 42872 ;; This function uses a non-reentrant model
 42873 ;;
 42874                           
 42875                           	psect	text285
 42876  00A83C                     __ptext285:
 42877                           	opt callstack 0
 42878  00A83C                     _INT1_DefaultInterruptHandler:
 42879                           	opt callstack 13
 42880                           
 42881                           ;incstack = 0
 42882  00A83C  0012               	return		;funcret
 42883  00A83E                     __end_of_INT1_DefaultInterruptHandler:
 42884                           	opt callstack 0
 42885                           
 42886 ;; *************** function _ADC_ISR *****************
 42887 ;; Defined at:
 42888 ;;		line 136 in file "mcc_generated_files/adc.c"
 42889 ;; Parameters:    Size  Location     Type
 42890 ;;		None
 42891 ;; Auto vars:     Size  Location     Type
 42892 ;;		None
 42893 ;; Return value:  Size  Location     Type
 42894 ;;                  1    wreg      void 
 42895 ;; Registers used:
 42896 ;;		None
 42897 ;; Tracked objects:
 42898 ;;		On entry : 0/0
 42899 ;;		On exit  : 0/0
 42900 ;;		Unchanged: 0/0
 42901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42906 ;;Total ram usage:        0 bytes
 42907 ;; Hardware stack levels used:    1
 42908 ;; This function calls:
 42909 ;;		Nothing
 42910 ;; This function is called by:
 42911 ;;		_INTERRUPT_InterruptManager
 42912 ;; This function uses a non-reentrant model
 42913 ;;
 42914                           
 42915                           	psect	text286
 42916  00A82A                     __ptext286:
 42917                           	opt callstack 0
 42918  00A82A                     _ADC_ISR:
 42919                           	opt callstack 15
 42920                           
 42921                           ;adc.c: 139: PIR1bits.ADIF = 0;
 42922                           
 42923                           ;incstack = 0
 42924  00A82A  9C9E               	bcf	3998,6,c	;volatile
 42925  00A82C  0012               	return		;funcret
 42926  00A82E                     __end_of_ADC_ISR:
 42927                           	opt callstack 0
 42928                           
 42929                           	psect	text287
 42930  000000                     __ptext287:
 42931                           	opt callstack 0
 42932                           
 42933                           	psect	rparam
 42934  0000                     
 42935                           	psect	temp
 42936  000046                     btemp:
 42937                           	opt callstack 0
 42938  000046                     	ds	12
 42939  0000                     wtemp0	set	btemp
 42940  0000                     wtemp1	set	btemp+2
 42941  0000                     wtemp2	set	btemp+4
 42942  0000                     wtemp3	set	btemp+6
 42943  0000                     wtemp4	set	btemp+8
 42944  0000                     wtemp5	set	btemp+10
 42945  0000                     wtemp8	set	btemp+1
 42946  0000                     ttemp0	set	btemp
 42947  0000                     ttemp1	set	btemp+3
 42948  0000                     ttemp2	set	btemp+6
 42949  0000                     ttemp3	set	btemp+9
 42950  0000                     ttemp5	set	btemp+1
 42951  0000                     ttemp6	set	btemp+4
 42952  0000                     ttemp7	set	btemp+8
 42953  0000                     ltemp0	set	btemp
 42954  0000                     ltemp1	set	btemp+4
 42955  0000                     ltemp2	set	btemp+8
 42956  0000                     lltemp0	set	btemp
 42957                           tosu	equ	0xFFF
 42958                           tosh	equ	0xFFE
 42959                           tosl	equ	0xFFD
 42960                           stkptr	equ	0xFFC
 42961                           pclatu	equ	0xFFB
 42962                           pclath	equ	0xFFA
 42963                           pcl	equ	0xFF9
 42964                           tblptru	equ	0xFF8
 42965                           tblptrh	equ	0xFF7
 42966                           tblptrl	equ	0xFF6
 42967                           tablat	equ	0xFF5
 42968                           prodh	equ	0xFF4
 42969                           prodl	equ	0xFF3
 42970                           indf0	equ	0xFEF
 42971                           postinc0	equ	0xFEE
 42972                           postdec0	equ	0xFED
 42973                           preinc0	equ	0xFEC
 42974                           plusw0	equ	0xFEB
 42975                           fsr0h	equ	0xFEA
 42976                           fsr0l	equ	0xFE9
 42977                           wreg	equ	0xFE8
 42978                           indf1	equ	0xFE7
 42979                           postinc1	equ	0xFE6
 42980                           postdec1	equ	0xFE5
 42981                           preinc1	equ	0xFE4
 42982                           plusw1	equ	0xFE3
 42983                           fsr1h	equ	0xFE2
 42984                           fsr1l	equ	0xFE1
 42985                           bsr	equ	0xFE0
 42986                           indf2	equ	0xFDF
 42987                           postinc2	equ	0xFDE
 42988                           postdec2	equ	0xFDD
 42989                           preinc2	equ	0xFDC
 42990                           plusw2	equ	0xFDB
 42991                           fsr2h	equ	0xFDA
 42992                           fsr2l	equ	0xFD9
 42993                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    494
    Data        56
    BSS         1820
    Persistent  24
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      73
    BANK0           160    156     156
    BANK1           256    105     251
    BANK2           256      0     256
    BANK3           256      0     248
    BANK4           256      0     244
    BANK5           256      0      40
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1243$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 36
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), log@coeff(CODE[36]), 

    strncat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), stringValue(BANK1[5]), 
		 -> STR_1(CODE[2]), 

    strncat@to	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK0[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK0[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), clearString(BANK5[40]), sensorsString(BANK3[40]), 
		 -> deviceEui(BANK3[8]), appEui(BANK3[8]), appKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), 
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), 
		 -> loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[56]), RadioConfiguration.syncWord(BANK1[8]), 
		 -> RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), clearString(BANK5[40]), sensorsString(BANK3[40]), 
		 -> deviceEui(BANK3[8]), appEui(BANK3[8]), appKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), 
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), 
		 -> loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[56]), RadioConfiguration.syncWord(BANK1[8]), 
		 -> RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    pointAddition@element	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), 

    adaptString@string	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    acquisitionData@string	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    uint16ToString@output	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_InterruptTicker(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_InterruptTicker(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3ISRClock(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3ISRClock(), Absolute function(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationKey@applicationKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appKey(BANK3[16]), 

    LORAWAN_SetApplicationEui@applicationEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> appEui(BANK3[8]), 

    LORAWAN_SetDeviceEui@deviceEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> deviceEui(BANK3[8]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1243$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1243$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S574$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S574$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S348$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK0[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _timerHandler16->i2___awdiv
    _TMR3_ISR->_TMR3_WriteTimer
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _isJoined->_LORAWAN_GetStatus
    _acuadoriApp->_sendValue
    _tempSensAcquisition->_tempConversion
    _tempConversion->___fldiv
    _log->_eval_poly
    _frexp->___fleq
    _eval_poly->___flmul
    ___flmul->___fladd
    ___flsub->___fladd
    ___fladd->_frexp
    ___fldiv->___flmul
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _SetJoinFailState->_RxJoinResponse
    _RxJoinResponse->_GPIODigitalWrite
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _lightSensAcquisition->_acquisitionData
    _leafSensAcquisition->_acquisitionData
    _acquisitionData->_uint16ToString
    _GPIOAverageRead->_GPIOAnalogRead
    _GPIOAnalogRead->_ADC_GetConversion
    _impedenceAcquisition->_uint16ToString
    _uint16ToString->___lwmod
    _sinGenStart->_i2c_sendData
    _i2c_stop->_i2c_usdelay
    _setSDA->_GPIODigitalWrite
    _resetSDA->_GPIODigitalWrite
    _i2c_sendData->_i2c_sdaWrite
    _averageMeasure->___ltdiv
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _LORAWAN_SetDeviceEui->_memcpy
    _LORAWAN_SetApplicationKey->_memcpy
    _LORAWAN_SetApplicationEui->_memcpy
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate
    _GPIOInit->_GPIOAnalogMode
    _GPIOInit->_GPIODigitalWrite
    _GPIOInit->_GPIOSet

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 13352095
                   _GPIODigitalWrite
                           _GPIOInit
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                      _LORAWAN_Reset
          _LORAWAN_SetApplicationEui
          _LORAWAN_SetApplicationKey
               _LORAWAN_SetDeviceEui
                  _SYSTEM_Initialize
                    _TMR5_StartTimer
                        _acuadoriApp
                           _isJoined
                    _rn2483_GoToIdle
          _rn2483_IdleInitialization
                         _timerReset
 ---------------------------------------------------------------------------------
 (1) _rn2483_IdleInitialization                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rn2483_GoToIdle                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _isJoined                                             5     5      0      69
                                              8 BANK0      5     5      0
                  _LORAWAN_GetStatus
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetStatus                                    8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _acuadoriApp                                          0     0      0 6588519
                   _GPIODigitalWrite
           _LORAWAN_GetUplinkCounter
           _LORAWAN_SetUplinkCounter
               _impedenceAcquisition
                _leafSensAcquisition
               _lightSensAcquisition
                             _memcpy
                    _rn2483_delaysec
                          _sendValue
                            _strncat
                _tempSensAcquisition
 ---------------------------------------------------------------------------------
 (2) _tempSensAcquisition                                  4     4      0   42005
                                            100 BANK0      4     4      0
                    _GPIOAverageRead
                        _adaptString
                      _pointAddition
                     _tempConversion
                     _uint16ToString
 ---------------------------------------------------------------------------------
 (3) _tempConversion                                      16    14      2   35797
                                             86 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  6     2      4   19667
                                             77 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                8     2      6    1458
                                             12 BANK0      8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     902
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8    8609
                                             61 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3988
                                             36 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     666
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     484
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4729
                                             36 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3714
                                             20 BANK0     16     8      8
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2139
                                             61 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _pointAddition                                        5     3      2     245
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _strncat                                              8     2      6    4437
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _sendValue                                            6     6      0 6496212
                                            154 BANK0      2     2      0
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
                   _SwClearAllTimers
                         _timerReset
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SwClearAllTimers                                     1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_Mainloop                                     0     0      0 6162831
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (4) _SwTimersExecute                                      5     5      0 2389091
                                            123 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (5) _UnconfirmedTransmissionCallback                      1     0      1  157694
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (5) _RADIO_WatchdogTimeout                                1     0      1  698856
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (5) _RADIO_RxFSKTimeout                                   2     1      1  513559
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158759
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (6) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_LinkCheckCallback                            6     5      1    9521
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _DutyCycleCallback                                   11    10      1    9964
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _AutomaticReplyCallback                               1     0      1  333177
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (5) _AckRetransmissionCallback                            2     1      1  167837
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO5                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO4                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO3                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO2                                           3     3      0   36563
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO1                                           2     2      0  559782
                                             99 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (5) _RADIO_RxTimeout                                      0     0      0  523191
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO0                                           4     4      0 3147481
                                            150 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (5) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_TxDone                                         8     8      0  217540
                                            119 BANK0      8     8      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_RxDone                                         2     2      0 1112421
                                            148 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (6) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (5) _RADIO_FSKPayloadReady                                2     2      0 1599491
                                            148 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_RxTimeout                                    9     9      0  497449
                                             90 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) _LORAWAN_ReceiveWindow2Callback                       1     0      1  327152
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_RxDone                                      28    25      3 1085771
                                            123 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _UpdateRetransmissionAckTimeoutState                  4     4      0    9382
                                             50 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateJoinSuccessState                               5     4      1   12349
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UpdateCfList                                        13    11      2   24213
                                             62 BANK0     13    11      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _StartReTxTimer                                       9     9      0    9673
                                             50 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) _SetReceptionNotOkState                               0     0      0  168427
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (7) _SetJoinFailState                                     0     0      0    2930
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (6) _RxJoinResponse                                       1     1      0    2930
                                              2 BANK0      1     1      0
                   _GPIODigitalWrite
 ---------------------------------------------------------------------------------
 (7) _MacExecuteCommands                                   8     5      3   26978
                                             70 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (8) _ExecuteRxTimingSetup                                 3     1      2     843
                                              7 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveDelays                                  1     1      0     640
                                              6 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     578
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) _ExecuteRxParamSetupReq                               7     5      2    7473
                                             62 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (9) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (8) _ExecuteNewChannel                                    8     6      2   13695
                                             62 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (9) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (9) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (9) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (9) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (8) _LORAWAN_SetChannelIdStatus                           3     2      1    2697
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (9) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (8) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (8) _ExecuteLinkAdr                                       9     7      2    3388
                                             15 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (9) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (9) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (10) _EnableChannels1                                     8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (9) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (8) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (8) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_Send                                         7     3      4  333177
                                            116 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (4) _AssemblePacket                                      12     7      5  162586
                                            104 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _IncludeMacCommandsResponse                          14     9      5    2532
                                              0 BANK0     14     9      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (6) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) _EncryptFRMPayload                                   22     8     14   49183
                                             50 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2729
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _AssembleEncryptionBlock                              9     2      7   20386
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (7) _ExtractMic                                          10     6      4   15005
                                             11 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _ComputeSessionKeys                                   2     0      2   39998
                                             50 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (8) _PrepareSessionKeys                                   7     1      6   18825
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (7) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_FSKPacketSent                                  9     9      0  207908
                                            119 BANK0      9     9      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_TxDone                                      36    34      2  185492
                                             83 BANK0     36    34      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _SwTimerReadValue                                     9     5      4     523
                                             41 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (7) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LORAWAN_EnterContinuousReceive                       0     0      0  163576
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (6) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (8) _RADIO_ReceiveStart                                  10     8      2  126952
                                             73 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (8) _ConfigureRadioRx                                     5     1      4   15858
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_GetDioStatus                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _lightSensAcquisition                                 0     0      0    9578
                   _GPIODigitalWrite
                    _acquisitionData
                        _adaptString
                    _rn2483_delaysec
 ---------------------------------------------------------------------------------
 (2) _rn2483_delaysec                                      5     3      2     514
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _leafSensAcquisition                                  0     0      0    6165
                    _acquisitionData
                        _adaptString
 ---------------------------------------------------------------------------------
 (3) _acquisitionData                                      3     1      2    5139
                                             75 BANK0      3     1      2
                    _GPIOAverageRead
                     _uint16ToString
 ---------------------------------------------------------------------------------
 (3) _GPIOAverageRead                                     11     9      2     723
                                             13 BANK0     11     9      2
                     _GPIOAnalogRead
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (4) _GPIOAnalogRead                                       5     3      2      90
                                              8 BANK0      5     3      2
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (5) _ADC_GetConversion                                    8     6      2      45
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _impedenceAcquisition                                 0     0      0   12350
                        _adaptString
                     _averageMeasure
                        _sinGenStart
                     _uint16ToString
 ---------------------------------------------------------------------------------
 (3) _uint16ToString                                       6     2      4    4146
                                             69 BANK0      6     2      4
                    _GPIOAverageRead (ARG)
                            ___lwdiv
                            ___lwmod
                     _averageMeasure (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1230
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _sinGenStart                                          8     8      0    6545
                                              6 BANK0      8     8      0
                    _TMR3_StartTimer
                     _TMR3_StopTimer
                    _TMR5_StartTimer
                     _TMR5_StopTimer
                       _i2c_sendData
                           _i2c_stop
                        _i2c_waitACK
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0    5955
                    _GPIODigitalRead
                        _i2c_usdelay
                           _resetSDA
                             _setSDA
 ---------------------------------------------------------------------------------
 (5) _setSDA                                               0     0      0    2899
                   _GPIODigitalWrite
 ---------------------------------------------------------------------------------
 (5) _resetSDA                                             0     0      0    2899
                   _GPIODigitalWrite
 ---------------------------------------------------------------------------------
 (5) _i2c_usdelay                                          4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _GPIODigitalRead                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_sendData                                         2     0      2     225
                                              4 BANK0      2     0      2
                       _i2c_sdaWrite
 ---------------------------------------------------------------------------------
 (5) _i2c_sdaWrite                                         4     4      0      90
                                              0 BANK0      4     4      0
                        _i2c_waitACK
 ---------------------------------------------------------------------------------
 (4) _i2c_waitACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _averageMeasure                                      12    10      2     633
                                             10 BANK0     12    10      2
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (4) ___ltdiv                                             10     4      6     518
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) _adaptString                                          8     5      3    1026
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_SetUplinkCounter                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetUplinkCounter                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2155
                     _ADC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     111
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     111
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     333
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceEui                                 2     0      2   14518
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationKey                            2     0      2   14518
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationEui                            2     0      2   14518
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  268262
                                            122 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SelectChannelForTransmission                         3     3      0   24764
                                             83 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (5) _SearchAvailableChannel                              12     9      3    8848
                                             71 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadioTx                                     6     2      4   15718
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadio                                       5     1      4   15422
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetFSKSyncWord                                 3     1      2   14479
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_Transmit                                      17    14      3  128079
                                             73 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteConfiguration                            11     9      2   91386
                                             62 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _RADIO_WritePower                                     3     3      0   10383
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  111735
                                            113 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _Random                                               2     0      2    7639
                                             69 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (7) _rand                                                 2     0      2    5712
                                             62 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    1688
                                             64 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (7) _ComputeMic                                           9     4      5   85583
                                            104 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESCmac                                            116   109      7   70547
                                             90 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _GenerateSubkey                                      40    34      6   27424
                                             50 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (7) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _AESEncodeLoRa                                       20    16      4   20942
                                             30 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _AESEncode                                           24    20      4    4744
                                              7 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (8) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (8) _EncKeySchedule                                       7     5      2    1164
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  176994
                                             74 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Reset                                        1     1      0  101405
                                             73 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (2) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46235
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteMode                                      7     5      2   15915
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (6) _RADIO_RegisterRead                                   2     2      0     130
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFrequency                                12     8      4   16640
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     440
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (7) _HALSPISend                                           1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (8) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (6) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_LinkCheckConfigure                          11     9      2   15427
                                             62 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    5712
                                             50 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    5857
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (5) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _SwTimerStart                                         9     9      0    1591
                                             41 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (6) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (7) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _SwTimersInterrupt                                   17    13      4     458
                                             24 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (7) _TMR_GetDeltaTime                                    16    12      4     102
                                              8 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (5) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _InitDefault868Channels                               1     1      0   17947
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _InitDefault433Channels                               1     1      0   17947
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6   14248
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GPIOInit                                             0     0      0    5407
                     _GPIOAnalogMode
                   _GPIODigitalWrite
                            _GPIOSet
 ---------------------------------------------------------------------------------
 (2) _GPIOSet                                              2     1      1    1265
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _GPIODigitalWrite                                     2     1      1    2899
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _GPIOAnalogMode                                       2     1      1    1243
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          8     8      0    2550
                                             41 COMRAM     8     8      0
                            _ADC_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR5_ISR                                            0     0      0    1571
                   Absolute function *
               _TMR5_InterruptTicker *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR5_WriteTimer                                     2     0      2     266
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR5_InterruptTicker                                0     0      0    1305
                     _timerHandler16
                        _timerTick16
 ---------------------------------------------------------------------------------
 (18) _timerTick16                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _timerHandler16                                      0     0      0    1305
                            ___lbmod
                          i2___awdiv
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     612
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (19) ___lbmod                                             4     3      1     693
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (16) _TMR3_ISR                                            0     0      0     266
                   Absolute function *
                       _TMR3ISRClock *
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR3_WriteTimer                                     2     0      2     266
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR3ISRClock                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (18) _TMR_ISR_lora                                        0     0      0     573
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (20) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (20) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (17) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (17) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (16) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIODigitalWrite
   _GPIOInit
     _GPIOAnalogMode
     _GPIODigitalWrite
     _GPIOSet
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
               _GPIODigitalWrite
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
               _GPIODigitalWrite
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
               _GPIODigitalWrite
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
               _GPIODigitalWrite
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
               _GPIODigitalWrite
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
               _GPIODigitalWrite
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
               _GPIODigitalWrite
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
               _GPIODigitalWrite
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
           _GPIODigitalWrite
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Reset
     _InitDefault433Channels
       _memcpy
       _memset
     _InitDefault868Channels
       _memcpy
       _memset
     _LORAWAN_LinkCheckConfigure
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
       ___lmul
         _SwTimerReadValue (ARG)
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_SetLoRaSyncWord
     _StopAllSoftwareTimers
       _SwTimerStop
     _UpdateMinMaxChDataRate
     _memset
   _LORAWAN_SetApplicationEui
     _memcpy
   _LORAWAN_SetApplicationKey
     _memcpy
   _LORAWAN_SetDeviceEui
     _memcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR5_StartTimer
   _acuadoriApp
     _GPIODigitalWrite
     _LORAWAN_GetUplinkCounter
     _LORAWAN_SetUplinkCounter
     _impedenceAcquisition
       _adaptString
       _averageMeasure
         ___ltdiv
       _sinGenStart
         _TMR3_StartTimer
         _TMR3_StopTimer
         _TMR5_StartTimer
         _TMR5_StopTimer
         _i2c_sendData
           _i2c_sdaWrite
             _i2c_waitACK
         _i2c_stop
           _GPIODigitalRead
           _i2c_usdelay
           _resetSDA
             _GPIODigitalWrite
           _setSDA
             _GPIODigitalWrite
         _i2c_waitACK
       _uint16ToString
         _GPIOAverageRead (ARG)
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         ___lwdiv (ARG)
         ___lwmod (ARG)
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _averageMeasure (ARG)
           ___ltdiv
     _leafSensAcquisition
       _acquisitionData
         _GPIOAverageRead
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         _uint16ToString
           _GPIOAverageRead (ARG)
             _GPIOAnalogRead
               _ADC_GetConversion
             ___ltdiv
           ___lwdiv (ARG)
           ___lwmod (ARG)
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _averageMeasure (ARG)
             ___ltdiv
       _adaptString
     _lightSensAcquisition
       _GPIODigitalWrite
       _acquisitionData
         _GPIOAverageRead
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         _uint16ToString
           _GPIOAverageRead (ARG)
             _GPIOAnalogRead
               _ADC_GetConversion
             ___ltdiv
           ___lwdiv (ARG)
           ___lwmod (ARG)
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _averageMeasure (ARG)
             ___ltdiv
       _adaptString
       _rn2483_delaysec
     _memcpy
     _rn2483_delaysec
     _sendValue
       _LORAWAN_Mainloop
         _INTERRUPT_GetDioStatus
         _RADIO_DIO0
           _RADIO_FSKPacketSent
             _LORAWAN_TxDone
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_GetStatus
               _RxData *
               _SwTimerIsRunning *
               _SwTimerReadValue *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop *
               ___lldiv *
               ___lmul *
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerReadValue
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
             _SwTimerStop
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_FSKPayloadReady
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _LORAWAN_RxDone
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CheckFlags
               _CheckMcastFlags
               _ComputeMic
                 _AESCmac
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _GenerateSubkey
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _FillSubKey
                     _memset
                   _memcpy
                   _memset
                 _memcpy
               _ComputeSessionKeys
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _PrepareSessionKeys
                   _memcpy
                   _memset
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _ExtractMic
                 _memcpy
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _LORAWAN_Send
                 _AssemblePacket
                   _AESCmac
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _GenerateSubkey
                       _AESEncodeLoRa
                         _AESEncode
                           _EncKeySchedule
                           _EncodeShiftRow
                         _memcpy
                       _FillSubKey
                       _memset
                     _memcpy
                     _memset
                   _AssembleEncryptionBlock
                     _memcpy
                     _memset
                   _CountfOptsLength
                   _EncryptFRMPayload
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _AssembleEncryptionBlock
                       _memcpy
                       _memset
                     ___awdiv
                   _FindSmallestDataRate
                   _IncludeMacCommandsResponse
                     _RADIO_GetPacketSnr
                   _memcpy
                   _memset
                 _LORAWAN_GetMaxPayloadSize
                   _CountfOptsLength
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_Transmit
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   _SwTimerStop
                   ___lldiv
                 _SelectChannelForTransmission
                   _ConfigureRadioTx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                     _RADIO_SetOutputPower
                   _SearchAvailableChannel
                     _Random
                       ___lwmod
                         _rand (ARG)
                           ___lmul
                             _SwTimerReadValue (ARG)
                               _SwTimersInterrupt
                                 _TMR_GetDeltaTime
                                   _TMR1_ReadTimer
                       _rand
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
               _MacExecuteCommands
                 _ExecuteDevStatus
                 _ExecuteDutyCycle
                 _ExecuteLinkAdr
                   _EnableChannels
                     _EnableChannels1
                       _UpdateChannelIdStatus
                   _UpdateCurrentDataRate
                   _UpdateTxPower
                   _ValidateChannelMask
                   _ValidateChannelMaskCntl
                   _ValidateDataRate
                   _ValidateTxPower
                 _ExecuteLinkCheck
                 _ExecuteNewChannel
                   _LORAWAN_SetChannelIdStatus
                     _UpdateChannelIdStatus
                     _ValidateChannelId
                   _UpdateChannelIdStatus
                   _UpdateDataRange
                   _UpdateDutyCycle
                   _UpdateFrequency
                   _ValidateChannelId
                   _ValidateDataRange
                     _ValidateDataRate
                   _ValidateFrequency
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxParamSetupReq
                   _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                   _ValidateFrequency
                   _ValidateRxOffset
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxTimingSetup
                   _UpdateReceiveDelays
                     ___wmul
               _RADIO_GetStatus
               _RADIO_ReleaseData
               _RxData *
               _SearchAvailableChannel *
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
                   _GPIODigitalWrite
               _SetReceptionNotOkState *
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RxData *
               _StartReTxTimer *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _SwTimerStop *
               _UpdateCfList *
                 _LORAWAN_SetChannelIdStatus
                   _UpdateChannelIdStatus
                   _ValidateChannelId
                 _ValidateFrequency
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                 _memcpy
               _UpdateDLSettings *
               _UpdateJoinSuccessState *
                 _RxJoinResponse *
                   _GPIODigitalWrite
                 _SwTimerSetTimeout *
                   ___lldiv (ARG)
                 _SwTimerStart *
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv *
               _UpdateReceiveDelays *
                 ___wmul
               _UpdateRetransmissionAckTimeoutState *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _memcpy *
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
                   _GPIODigitalWrite
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RxDone
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _LORAWAN_RxDone
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CheckFlags
               _CheckMcastFlags
               _ComputeMic
                 _AESCmac
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _GenerateSubkey
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _FillSubKey
                     _memset
                   _memcpy
                   _memset
                 _memcpy
               _ComputeSessionKeys
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _PrepareSessionKeys
                   _memcpy
                   _memset
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _ExtractMic
                 _memcpy
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _LORAWAN_Send
                 _AssemblePacket
                   _AESCmac
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _GenerateSubkey
                       _AESEncodeLoRa
                         _AESEncode
                           _EncKeySchedule
                           _EncodeShiftRow
                         _memcpy
                       _FillSubKey
                       _memset
                     _memcpy
                     _memset
                   _AssembleEncryptionBlock
                     _memcpy
                     _memset
                   _CountfOptsLength
                   _EncryptFRMPayload
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _AssembleEncryptionBlock
                       _memcpy
                       _memset
                     ___awdiv
                   _FindSmallestDataRate
                   _IncludeMacCommandsResponse
                     _RADIO_GetPacketSnr
                   _memcpy
                   _memset
                 _LORAWAN_GetMaxPayloadSize
                   _CountfOptsLength
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_Transmit
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   _SwTimerStop
                   ___lldiv
                 _SelectChannelForTransmission
                   _ConfigureRadioTx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                     _RADIO_SetOutputPower
                   _SearchAvailableChannel
                     _Random
                       ___lwmod
                         _rand (ARG)
                           ___lmul
                             _SwTimerReadValue (ARG)
                               _SwTimersInterrupt
                                 _TMR_GetDeltaTime
                                   _TMR1_ReadTimer
                       _rand
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
               _MacExecuteCommands
                 _ExecuteDevStatus
                 _ExecuteDutyCycle
                 _ExecuteLinkAdr
                   _EnableChannels
                     _EnableChannels1
                       _UpdateChannelIdStatus
                   _UpdateCurrentDataRate
                   _UpdateTxPower
                   _ValidateChannelMask
                   _ValidateChannelMaskCntl
                   _ValidateDataRate
                   _ValidateTxPower
                 _ExecuteLinkCheck
                 _ExecuteNewChannel
                   _LORAWAN_SetChannelIdStatus
                     _UpdateChannelIdStatus
                     _ValidateChannelId
                   _UpdateChannelIdStatus
                   _UpdateDataRange
                   _UpdateDutyCycle
                   _UpdateFrequency
                   _ValidateChannelId
                   _ValidateDataRange
                     _ValidateDataRate
                   _ValidateFrequency
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxParamSetupReq
                   _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                   _ValidateFrequency
                   _ValidateRxOffset
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxTimingSetup
                   _UpdateReceiveDelays
                     ___wmul
               _RADIO_GetStatus
               _RADIO_ReleaseData
               _RxData *
               _SearchAvailableChannel *
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
                   _GPIODigitalWrite
               _SetReceptionNotOkState *
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RxData *
               _StartReTxTimer *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _SwTimerStop *
               _UpdateCfList *
                 _LORAWAN_SetChannelIdStatus
                   _UpdateChannelIdStatus
                   _ValidateChannelId
                 _ValidateFrequency
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                 _memcpy
               _UpdateDLSettings *
               _UpdateJoinSuccessState *
                 _RxJoinResponse *
                   _GPIODigitalWrite
                 _SwTimerSetTimeout *
                   ___lldiv (ARG)
                 _SwTimerStart *
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv *
               _UpdateReceiveDelays *
                 ___wmul
               _UpdateRetransmissionAckTimeoutState *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _memcpy *
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
             ___abdiv
           _RADIO_TxDone
             _LORAWAN_TxDone
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_GetStatus
               _RxData *
               _SwTimerIsRunning *
               _SwTimerReadValue *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop *
               ___lldiv *
               ___lmul *
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerReadValue
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
             _SwTimerStop
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO1
           _RADIO_FHSSChangeChannel
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RxTimeout
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
                   _GPIODigitalWrite
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO2
           _RADIO_FHSSChangeChannel
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO3
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO4
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO5
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _SwTimersExecute
           Absolute function(Fake) *
           _AckRetransmissionCallback *
             _FindSmallestDataRate
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForConfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
             _UpdateRetransmissionAckTimeoutState *
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
           _AutomaticReplyCallback *
             _LORAWAN_Send
               _AssemblePacket
                 _AESCmac
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _GenerateSubkey
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _FillSubKey
                     _memset
                   _memcpy
                   _memset
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 _CountfOptsLength
                 _EncryptFRMPayload
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _AssembleEncryptionBlock
                     _memcpy
                     _memset
                   ___awdiv
                 _FindSmallestDataRate
                 _IncludeMacCommandsResponse
                   _RADIO_GetPacketSnr
                 _memcpy
                 _memset
               _LORAWAN_GetMaxPayloadSize
                 _CountfOptsLength
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _SelectChannelForTransmission
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
           _DutyCycleCallback *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _LORAWAN_LinkCheckCallback *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _LORAWAN_ReceiveWindow1Callback *
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _GetRx1Freq
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
           _LORAWAN_ReceiveWindow2Callback *
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_RxFSKTimeout *
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
                   _GPIODigitalWrite
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
           _RADIO_WatchdogTimeout *
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
                   _GPIODigitalWrite
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _LORAWAN_TxDone
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_GetStatus
               _RxData *
               _SwTimerIsRunning *
               _SwTimerReadValue *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop *
               ___lldiv *
               ___lmul *
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _UnconfirmedTransmissionCallback *
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForUnconfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _UpdateJoinSuccessState *
             _RxJoinResponse *
               _GPIODigitalWrite
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
       _LORAWAN_Send
         _AssemblePacket
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CountfOptsLength
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _FindSmallestDataRate
           _IncludeMacCommandsResponse
             _RADIO_GetPacketSnr
           _memcpy
           _memset
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _SelectChannelForTransmission
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _SwClearAllTimers
       _timerReset
     _strncat
     _tempSensAcquisition
       _GPIOAverageRead
         _GPIOAnalogRead
           _ADC_GetConversion
         ___ltdiv
       _adaptString
       _pointAddition
       _tempConversion
         ___fladd
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___fldiv
           ___fladd (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___flmul (ARG)
             ___fladd (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub
           ___fladd
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
         ___fltol
         ___xxtofl
         _log
           ___fladd
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___fleq
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl
           _eval_poly
             ___fladd
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
           _frexp
             ___fleq
       _uint16ToString
         _GPIOAverageRead (ARG)
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         ___lwdiv (ARG)
         ___lwmod (ARG)
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _averageMeasure (ARG)
           ___ltdiv
   _isJoined
     _LORAWAN_GetStatus
   _rn2483_GoToIdle
   _rn2483_IdleInitialization
   _timerReset

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3ISRClock *
     _TMR3_WriteTimer *
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_InterruptTicker *
       _timerHandler16
         ___lbmod
         i2___awdiv
       _timerTick16
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     3AE      37       24.2%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      28      16       15.6%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      F4      14       95.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F8      11       96.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      9C       5       97.5%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      49       1       88.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4F4      12        0.0%
DATA                 0      0     8A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Sep 26 10:26:46 2019

                                  ??_LORAWAN_TxDone 00B5                          __end_of_DIO3_ISR_Lora_Init A836  
                                ?_LORAWAN_RxTimeout 0001                                        ___fldiv@aexp 00B5  
                                      ___fldiv@bexp 00B4                    __end_of_TMR5_SetInterruptHandler A706  
                                      ___fldiv@sign 00AD                    __size_of_RADIO_FHSSChangeChannel 003C  
                                    HALSPISend@data 0061                                         _pulseSignal 01F3  
                   __end_of_ValidateChannelMaskCntl A2B6                                        ___awdiv@sign 0065  
                   __size_of_UpdateJoinSuccessState 013E                                 ___wmul@multiplicand 0062  
                __size_of_IOCB4_SetInterruptHandler 000A                                        _TMR_ISR_lora 91B2  
                                    _GPIOAnalogRead A3D6                                      _GPIOAnalogMode 6282  
                             __end_of_AESEncodeLoRa 9B7E                                   ??_TMR5_WriteTimer 0003  
                                       ?_RADIO_DIO0 0001                                         ?_RADIO_DIO1 0001  
                                       ?_RADIO_DIO2 0001                                         ?_RADIO_DIO3 0001  
                                       ?_RADIO_DIO4 0001                                         ?_RADIO_DIO5 0001  
                            ??_lightSensAcquisition 00AE                          ?_IOCB4_SetInterruptHandler 0060  
                          __size_of_acquisitionData 0022                                        __CFG_CP0$OFF 000000  
                         _rn2483_IdleInitialization A7BA                                        __CFG_CP1$OFF 000000  
                                      __CFG_CP2$OFF 000000                                        __CFG_CP3$OFF 000000  
                                       __CFG_LVP$ON 000000                                 ??_LORAWAN_RxTimeout 00BA  
                                               l242 8A9C                                                 l610 9AC8  
                                               l484 16D4                                         ?_RADIO_Init 0079  
                                               l478 14C0                                                 l497 17B6  
                                               l691 972E                                                 l694 9740  
                                               l688 9A94                                     ??_UpdateTxPower 0060  
                                      __CFG_CPB$OFF 000000                                        __CFG_CPD$OFF 000000  
              __end_of_SelectChannelForTransmission 8D2A               __size_of_SelectChannelForTransmission 0068  
                      _SelectChannelForTransmission 8CC2                              _ExecuteRxParamSetupReq 53CC  
                                _RADIO_Transmit$781 00B4                                    ??_timerHandler16 0009  
                                _DIO2_ISR_Lora_Init A626                                  __size_of_AESEncode 0300  
            __end_of_EUSART2_SetFramingErrorHandler A74C             __size_of_EUSART2_SetFramingErrorHandler 000A  
                    _EUSART2_SetFramingErrorHandler A742                                 _tempSensAcquisition 8FE6  
                                   _timer1ReloadVal 01E7                                     ?_EncKeySchedule 0060  
                                               _log 4C90                                     __end_of_ADC_ISR A82E  
                                               _low 0121                               _RADIO_SetLoRaSyncWord A79C  
                                               prod 000FF3                                                 tosl 000FFD  
                                               wreg 000FE8                                          _TXSTA2bits 000F72  
                                   __end_of_AESCmac 1EB6                             __end_of_SwTimersExecute 79C2  
                            SystemBlockingWaitMs@ms 0060                             LORAWAN_Join@bufferIndex 00DA  
                                      ___flmul@aexp 0095                                        ___flmul@bexp 0096  
                          __size_of_RADIO_GetStatus 0006                               ?_SystemBlockingWaitMs 0060  
                              ??i2_TMR_GetDeltaTime 000D                                        ___flmul@sign 0090  
                                      ___flmul@temp 009B                                        ___flmul@prod 0097  
                          ??_SearchAvailableChannel 00AA                        __end_of_FindSmallestDataRate 7A84  
               __end_of_RADIO_SetFrequencyHopPeriod A792                         _RADIO_SetFrequencyHopPeriod A788  
                                        _CheckFlags 9044                               ??_leafSensAcquisition 00AE  
                            ?_TMR_OverrideRemaining 006A                                       _INT1_CallBack A3B6  
                          ?_AssembleEncryptionBlock 006B                                 ?_DIO2_ISR_Lora_Init 0001  
                                 ??_UpdateFrequency 0064                           __size_of_SwClearAllTimers 0030  
                                   __end_of_GPIOSet 6DAA                                        ___fltol@exp1 0069  
                                __size_of_IOCB4_ISR 0020                                                l1101 A014  
                                              l1040 0E92                                                l1109 9246  
                                              l1117 49E8                                                l1222 642A  
                                              l2024 1854                                                l1128 4636  
                                              l1072 31F4                                                l1049 1114  
                                              l1233 60EC                                                l1241 A538  
                                              l1145 54B6                                                l1154 6876  
                                              l2034 193C                                                l1067 31EA  
                                              l1315 31A4                                                l1164 68B4  
                                              l2028 192E                                                l2029 1928  
                                              l1262 A1A4                                                l1511 7E8A  
                                              l1256 9786                                                l1097 A550  
                                              l1249 8B7E                                                l4002 92FA  
                                              l1282 9632                                     _timer3ReloadVal 01E3  
                                              l4012 9850                                                l2076 27EA  
                                              l1268 A2B2                                                l1527 6FAC  
                                              l4040 2CDE                                                l3321 5B9E  
                                              l1529 6FB4                                                l1297 8C22  
                                              l4041 2CBC                                                l1810 74F4  
                                              l4106 3C2C                                                l1539 7080  
                                              l4107 3C28                                                l1805 7C28  
                                              l4125 1F38                                                l2198 A5FE  
                                              l4142 21D6                                                l4134 2150  
             RADIO_WriteConfiguration@symbolTimeout 009E                                                l1807 7CAC  
                                              l4135 214C                                                l2528 9278  
                                              l1912 0122                                                l4056 2DB0  
                                              l4065 2E16                                                l3506 A1B4  
                                              l3346 5C2E                                                l1834 5100  
                                              l4066 2E12                                                l1819 7504  
                                              l3348 5C54                                                l4173 588A  
                                              l3550 854C                                                l4166 580C  
                                              l3375 8EB8                                                l4095 3BBE  
                                              l1856 6042                                                l1786 5300  
                                              l3490 A4E6                                                l3487 A4D8  
                                              l1888 77DC                                                l3931 8DE8  
                                              ?_log 00AD                                                l3982 8BD4  
                                              l3977 8BE0                                                STR_1 FFF5  
                                              STR_2 FFF7                                                STR_3 FFFD  
                                              STR_4 FFFB                                                STR_5 FFF9  
                                  _RADIO_WritePower 7180                                                STR_6 FFFD  
                                              STR_7 FFFB                                                STR_8 FFF9  
                      ??_LORAWAN_SetChannelIdStatus 0065                             _PrepareJoinRequestFrame 567A  
                                              _LATA 000F89                                                _LATB 000F8A  
                                              _LATC 000F8B                                                _LATD 000F8C  
                                              _LATE 000F8D                                        ?_RADIO_Reset 0001  
                        __size_of_RADIO_ReceiveStop 0020                                                _TMR1 000FCE  
                                              _TMR3 000FB2                                                _TMR5 000F4F  
                                 ??_UpdateDutyCycle 0062                                                _WPUB 000F61  
                            ??_LORAWAN_PlatformInit 0062                                       _INT2_CallBack A396  
                 __end_of_LORAWAN_SetApplicationEui 9EE0                   __end_of_LORAWAN_SetApplicationKey 9EB2  
                                              _nACK 0120                            ??_InitDefault433Channels 006B  
                          ExecuteNewChannel@drRange 00A0                                  _PrepareSessionKeys 7FFC  
                                              _flag 0041                                                _clip 0123  
                                              _high 0122                                                _loRa 0205  
                                              _main 66B4                                                _rand 90FE  
                              __size_of_adaptString 0078                      __end_of_UpdateMinMaxChDataRate 783E  
                                              fsr0h 000FEA                                                fsr1h 000FE2  
                                              indf0 000FEF                                                fsr2h 000FDA  
                                              fsr0l 000FE9                                                indf2 000FDF  
                                              fsr1l 000FE1                                                fsr2l 000FD9  
                           __size_of_RADIO_Transmit 0224                                                btemp 0046  
                                     __CFG_BORV$190 000000                      __size_of_StopAllSoftwareTimers 0052  
                                     ComputeMic@mic 00CD                                       ComputeMic@key 00C8  
                                              log@x 00AD                           __end_of_LORAWAN_RxTimeout 34AE  
                         __size_of_ConfigureRadioRx 002A                           __size_of_ConfigureRadioTx 004C  
                 __size_of_INT2_SetInterruptHandler 000A                       __end_of_StopAllSoftwareTimers 93FC  
                              ?_tempSensAcquisition 0001                                       ?_i2c_sdaWrite 0001  
                         ?_INT2_SetInterruptHandler 0060                                                prodh 000FF4  
                                              prodl 000FF3                                                start 00A4  
                                   _timer5ReloadVal 01DF                                       __CFG_IESO$OFF 000000  
                          __end_of_CountfOptsLength 7774                                     ___fldiv@new_exp 00AE  
                                     ?_i2c_sendData 0064                                     _TMR3_Initialize 9FC2  
                                     ??_i2c_waitACK 0060                               ExecuteLinkAdr@txPower 0074  
                               __size_of_HALSPISend 000E                                     _GPIODigitalRead 7A84  
                        ??_TMR1_SetInterruptHandler 0062                          EnableChannels1@channelMask 0064  
                                  ??_AssemblePacket 00CD                              ?_HALResetPinMakeOutput 0001  
                               ?_PrepareSessionKeys 006B                              __size_of_TMR_SwapTimer 0042  
                        __end_of_RADIO_GetPacketSnr A7E0                                        ___param_bank 000000  
                                        _GetRx1Freq A5AC                                         _stringValue 016F  
                        __size_of_RADIO_ReleaseData 0006                                ??_DIO2_ISR_Lora_Init 0062  
                                     ??_i2c_usdelay 0062                              __end_of_GPIOAnalogRead A3F4  
                            __end_of_GPIOAnalogMode 6396                     __end_of_CreateAllSoftwareTimers 944E  
            SearchAvailableChannel@transmissionType 00A7                     __size_of_HALResetPinOutputValue 001A  
                                             ??_log 00B1                               MacExecuteCommands@ptr 00AC  
                             _RADIO_WriteFSKBitRate 8D2A                            __size_of_SystemTimerInit 0008  
                                  __end_of_INT1_ISR A7DA                                    __end_of_INT2_ISR A7D2  
                                  __end_of_GPIOInit 5E00                      __size_of_OSCILLATOR_Initialize 000E  
                            ExecuteLinkAdr@dataRate 0077                       __end_of_OSCILLATOR_Initialize A6AC  
                __size_of_LORAWAN_LinkCheckCallback 016C                                               l20000 6FFC  
                                             l20008 7010                                               l20200 44BE  
                                             l20018 7024                                               l20202 44FA  
                                             l20108 8718                                               l20300 02F2  
                                             l20060 5AC4                                               l20126 8754  
                                             l21102 4FB4                                               l20160 9070  
                                             l20208 451A                                               l20146 86C8  
                                             l20234 011E                                               l20066 5B60  
                                   __end_of___abdiv 8E60                                               l20164 9086  
                                             l20156 905A                                               l20180 4428  
                                             l20172 434C                                               l20500 0854  
                                             l20332 046E                                               l20316 03F6  
                                             l20404 05F6                                               l20252 01B4  
                                             l20228 00E2                                               l21124 5064  
                                             l21108 4FD2                                               l21212 790A  
                                             l20190 4496                                               l20182 443E  
                                             l20510 08B8                                               l20342 04B6  
                                             l20334 0486                                               l21118 5006  
                                             l21046 2F9C                                               l21038 2EE0  
                                             l20192 44AC                                               l20184 4454  
                                             l20176 43FC                                               l20408 0624  
                                             l20416 0630                                               l20352 04C2  
                                             l20256 01C6                                               l21048 2FB6  
                                             l21056 3052                                               l21224 79AE  
                                             l21410 897E                                               l20186 446A  
                                             l20178 4410                                               l21154 5FCC  
                                             l21226 79B2                                               l21500 5B96  
                                             l20188 4480                                               l20532 0A18  
                                             l20508 08AA                                               l20436 0736  
                                             l20372 0500                                               l20364 04D6  
                                             l21244 81DA                                               l21252 81EE  
                                             l21084 7C2A                                               l21164 5FFC  
                                             l21068 3100                                               l21350 9D2E  
                                             l21510 5BAA                                               l20526 0988  
                                             l20294 02E2                                               l20614 0B6C  
                                             l20278 0270                                               l20702 347A  
                                             l21262 821E                                               l21254 81FE  
                                             l21246 81E0                                               l21158 5FD2  
                                             l21174 603E                                               l15032 7A8A  
                                             l21520 5BDE                                               l20624 0BB0  
                                             l20464 07CC                                               l20368 04F0  
                                             l21264 8226                                               l21248 81E6  
                                             l21184 8888                                               l21426 89F6  
                                             l21442 52BE                                               l21450 52F2  
                                             l15130 90B0                                               l15050 7AA2  
                                             l15106 7AF4                                               l15122 A1BE  
                                             l21346 9D10                                               l20474 0824  
                                             l20466 07E4                                               l20618 0B72  
                                             l20810 8E0E                                               l21258 8210  
                                             l21274 95AE                                               l21282 95C2  
                                             l21354 9CB4                                               l14410 2CCA  
                                             l15210 5872                                               l22330 6756  
                                             l15140 90E6                                               l15044 7A98  
                                             l20740 0FC8                                               l20580 0ADE  
                                             l20484 082A                                               l20388 05AE  
                                             l20652 3274                                               l20636 31D8  
                                             l21268 822E                                               l21276 95B4  
                                             l21292 947A                                               l14412 2CCE  
                                             l14332 2BC8                                               l15204 583A  
                                             l22332 675C                                               l22316 6724  
                                             l15062 7AB4                                               l15038 7A90  
                                             l21534 5BFA                                               l21518 5BDC  
                                             l16030 996C                                               l20750 1040  
                                             l20726 0D7E                                               l20582 0AE4  
                                             l20670 32F2                                               l20822 8E28  
                                             l21278 95BA                                               l21286 95D2  
                                             l21294 9480                                               l21358 9CCE  
                                             l14510 2E8A                                               l15206 5840  
                                             l21456 5354                                               l21448 52EE  
                                             l21384 4BCA                                               l15080 7ACC  
                                             l15056 7AAC                                               l16024 9964  
                                             l20760 10FC                                               l20744 103A  
                                             l20584 0AEA                                               l20496 0844  
                                             l20904 7DA6                                               l20816 8E18  
                                             l14512 2E8C                                               l14360 2C14  
                                             l14336 2BCC                                               l15216 58B0  
                                             l15208 584C                                               l15322 8A9E  
                                             l21394 4C14                                               l21386 4BE0  
                                             l16042 88D4                                               l15138 90E4  
                                             l15074 7AC4                                               l20578 0AD8  
                                             l20690 33C4                                               l20658 32AC  
                                             l20834 8E4E                                               l20826 8E2E  
                                             l21298 9488                                               l14506 2E82  
                                             l14434 2D24                                               l14426 2D02  
                                             l15234 58FC                                               l15218 58BC  
                                             l14610 2116                                               l16052 8920  
                                             l15156 8BA0                                               l15092 7AE0  
                                             l15068 7ABE                                               l16036 9996  
                                             l20780 11E2                                               l20692 33C8  
                                             l20676 32F8                                               l20932 7E18  
                                             l20924 7DFE                                               l20908 7DC4  
                                             l14436 2D28                                               l14444 2D3A  
                                             l14356 2C10                                               l14604 20F8  
                                             l15260 6B00                                               l22348 67A6  
                                             l21670 4840                                               l21742 56FA  
                                             l16062 8936                                               l16054 8922  
                                             l15158 8BAA                                               l15086 7AD6  
                                             l20678 3300                                               l20838 8E56  
                                             l14462 2DD4                                               l14454 2DA0  
                                             l14630 2194                                               l14534 1EE4  
                                             l15262 6B96                                               l15246 7D04  
                                             l18000 853E                                               l21728 56B8  
                                             l16048 88F2                                               l15176 92C8  
                                             l20768 117A                                               l20792 126E  
                                             l20696 3442                                               l20928 7E02  
                                             l20872 72F6                                               l14472 2DEA  
                                             l14368 2C34                                               l14552 1F24  
                                             l14536 1EE8                                               l18010 8DB2  
                                             l21826 8F3C                                               l15098 7AEA  
                                             l15178 92D0                                               l20786 1256  
                                             l20882 7328                                               l15610 3B96  
                                             l15602 3B6E                                               l14634 21B2  
                                             l14562 1F56                                               l14554 1F28  
                                             l14538 1EF8                                               l21588 7EFC  
                                             l21828 8F40                                               l15188 92F0  
                                             l20796 12A2                                               l20980 652E  
                                             l20884 732C                                               l20868 72D8  
                                             l15700 7BAC                                               l14660 818C  
                                             l15524 4CFC                                               l16172 2B6C  
                                             l18022 9EEA                                               l18102 6C1E  
                                             l20958 663A                                               l15622 3BD4  
                                             l15550 3A7C                                               l14478 2DF4  
                                             l14398 2C70                                               l15710 7BC4  
                                             l15198 581C                                               l14646 21F4  
                                             l15518 4CB4                                               l16174 2B7C  
                                             l16166 2B0C                                               l16600 62EE  
                                             l18016 8DDA                                               l18008 8DA6  
                                             l18120 6C60                                               l18200 71FA  
                                             l15480 87EC                                               l20992 9CF4  
                                             l16184 96BC                                               l15616 3BBC  
                                             l15712 7BD0                                               l15704 7BBC  
                                             l14664 81AA                                               l14656 8158  
                                             l16168 2B34                                               l16602 62F4  
                                             l18026 9EFA                                               l18122 6C6A  
                                             l18106 6C30                                               l18034 9364  
                                             l15570 3ABC                                               l15546 3A78  
                                             l14498 2E5C                                               l16620 632A  
                                             l16612 6312                                               l18204 7208  
                                             l19100 7A40                                               l21796 8E6C  
                                             l15652 3C94                                               l15628 3BF2  
                                             l16630 6348                                               l16614 6318  
                                             l16606 6300                                               l16702 6D4A  
                                             l18070 6A98                                               l14678 A51A  
                                             l18134 6C98                                               l18118 6C5C  
                                             l18038 93A0                                               l18222 7242  
                                             l16198 82D8                                               l15662 3CCA  
                                             l15566 3AB8                                               l15718 7BEC  
                                             l16624 6336                                               l16608 6306  
                                             l16704 6D4E                                               l16712 6D5C  
                                             l18064 6A32                                               l18208 7216  
                                             l16720 8460                                               l15664 3CCC  
                                             l15656 3CBE                                               l15648 3C70  
                                             l15592 3B1E                                               l15584 3B06  
                                             l16626 633C                                               l16618 6324  
                                             l16570 6294                                               l16634 634E  
                                             l16650 6CD0                                               l16642 6CBE  
                                             l18058 69DE                                               l15914 7786  
                                             l18330 5E66                                               l18314 9846  
                                             l18306 9826                                               l18402 142A  
                                             l19026 67D6                                               l16722 8466  
                                             l15578 3AF0                                               l16572 629A  
                                             l19300 6DBE                                               l16708 6D58  
                                             l16660 6CE8                                               l16644 6CC2  
                                             l18068 6A96                                               l15924 782C  
                                             l18308 982E                                               l18228 724A  
                                             l18180 71AA                                               l18404 1442  
                                             l19028 67DC                                               l19044 687A  
                                             l19052 6896                                               l19108 7A62  
                                             l19116 7A7E                                               l19212 2650  
                                             l16724 8476                                               l15684 7B62  
                                             l16590 62D0                                               l16582 62B8  
                                             l16566 6288                                               l19310 6DD6  
                                             l16662 6CEC                                               l16654 6CDA  
                                             l16638 6CB4                                               l18086 6BE8  
                                             l18078 6BCE                                               l15926 7830  
                                             l18406 145C                                               l18262 9D7C  
                                             l19142 4E88                                               l19134 4E4A  
                                             l18270 6090                                               l19126 98D0  
                                             l16726 8486                                               l16584 62BE  
                                             l16576 62A6                                               l19312 6DDA  
                                             l19304 6DC8                                               l16680 6D16  
                                             l16672 6D04                                               l16656 6CDE  
                                             l16648 6CCC                                               l18176 719C  
                                             l18408 146E                                               l19160 4F46  
                                             l19152 4EF2                                               l19232 26F4  
                                             l19216 267A                                               l19208 2626  
                                             l18272 6096                                               l18600 8C0C  
                                             l16594 62DC                                               l16578 62AC  
                                             l19330 6E04                                               l19322 6DF2  
                                             l19306 6DCC                                               l16690 6D2E  
                                             l16674 6D08                                               l16666 6CF6  
                                             l17810 8F98                                               l18098 6C12  
                                             l18338 5E84                                               l18194 71DC  
                                             l18514 16BC                                               l18506 1686  
                                             l18426 14BC                                               l19410 3FB4  
                                             l19058 68B0                                               l19170 76B6  
                                             l19090 79DE                                               l19218 2680  
                                             l18282 613C                                               l18610 8C3C  
                                             l18602 8C16                                               l16596 62E2  
                                             l16588 62CA                                               l19340 6E1C  
                                             l19324 6DF6                                               l19316 6DE4  
                                             l16692 6D32                                               l16684 6D20  
                                             l16668 6CFA                                               l17900 353E  
                                             l18356 5EF2                                               l18348 5ED4  
                                             l18196 71EA                                               l18532 176A  
                                             l18508 1692                                               l18516 16E2  
                                             l19412 3FCC                                               l19180 7770  
                                             l19252 275C                                               l19228 26CA  
                                             l18284 6140                                               l19342 6E20  
                                             l19334 6E0E                                               l19318 6DE8  
                                             l16686 6D24                                               l16678 6D12  
                                             l17742 A32A                                               l17910 360E  
                                             l18542 17AA                                               l19422 3FF0  
                                             l19166 4F8C                                               l19238 270E  
                                             l19190 2550                                               l19510 9252  
                                             l18614 8C4E                                               l19360 6E4A  
                                             l19352 6E38                                               l19336 6E12  
                                             l19328 6E00                                               l16696 6D3C  
                                             l18376 80F4                                               l17920 365C  
                                             l18712 1BE6                                               l18720 1C60  
                                             l18536 1786                                               l18528 1758  
                                             l18456 153C                                               l18464 155C  
                                             l18392 138E                                               l19416 3FDE  
                                             l19176 7762                                               l18632 7572  
                                             l19088 79D8                                               l19256 2774  
                                             l18608 8C32                                               l19600 4614  
                                             l19354 6E3C                                               l19346 6E2A  
                                             l16698 6D40                                               l17818 8FD2  
                                             l17826 98EC                                               l17922 3666  
                                             l17914 3630                                               l18706 1BB8  
                                             l18394 13B6                                               l19450 40A6  
                                             l19426 4006                                               l18802 3CE6  
                                             l19178 7764                                               l18634 757C  
                                             l19098 7A3E                                               l19274 27F2  
                                             l19266 27BE                                               l19364 6E54  
                                             l19348 6E2E                                               l17852 6210  
                                             l17860 9D9E                                               l17780 38BE  
                                             l17940 377C                                               l17916 363A  
                                             l17908 3604                                               l18732 1CB8  
                                             l18396 13DE                                               l18820 3D7A  
                                             l18812 3D14                                               l19284 2816  
                                             l19620 4722                                               l19612 46B4  
                                             l19358 6E46                                               l19294 6DB0  
                                             l17854 6270                                               l17782 38C8  
                                             l18718 1C26                                               l18398 1416  
                                             l19390 3F48                                               l19382 3F2E  
                                             l18590 7FEC                                               l18814 3D20  
                                             l18638 759E                                               l18670 8386  
                                             l19286 2852                                               l19198 25DC  
                                             l19542 49C6                                               l19534 4990  
                                             l19614 46C0                                               l19622 4726  
                                             l19368 6E58                                               l17864 9DBC  
                                             l17872 34BC                                               l18736 1CD6  
                                             l18728 1C8E                                               l19456 411C  
                                             l19376 3F16                                               l18832 3DB6  
                                             l18808 3CFE                                               l18672 838E  
                                             l18664 8370                                               l19288 2854  
                                             l18904 63D4                                               l19298 6DBA  
                                             l18738 1CE6                                               l18498 163C  
                                             l18850 3EF8                                               l18818 3D4E  
                                             l18690 83C6                                               l18682 83AE  
                                             l18658 8360                                               l19722 18E4  
                                             l19562 4A6E                                               l18914 647A  
                                             l19618 4716                                               l19642 546E  
                                             l17884 34E8                                               l18764 1D5C  
                                             l18748 1CF2                                               l18844 3E82  
                                             l18828 3D9C                                               l18596 8BFE  
                                             l18916 647E                                               l19660 551E  
                                             l17990 850A                                               l17974 916C  
                                             l18782 1E42                                               l18758 1D56  
                                             l18774 1E02                                               l19494 8D24  
                                             l18838 3E28                                               l18686 83B8  
                                             l19718 18E0                                               l19566 4A86  
                                             l18870 8B54                                               l19646 5492  
                                     ___fltol@sign1 0068                                               l19672 94C8  
                                             l19568 4ABC                                               l17978 9180  
                                             l19762 19D0                                               l19746 195A  
                                             l19674 94E8                                               l17988 84FE  
                                             l19780 1ABA                                               l19748 196C  
                                             l19692 184C                                               l19836 9C10  
                                             l19924 4320                                               l19908 413E  
                                             l19774 1A52                                               l18990 9654  
                                             l19942 5538                                               l19926 432C  
                                             l19934 A476                                               l19954 55FC  
                                             l19890 74FC                                               l19882 74DE  
                                             l19956 5600                                               l19886 74EC  
                                             l19992 6FE2                                               l19986 6FCE  
                                             l19978 6FBC                                     __end_of___fladd 2EA8  
                                             ?_main 0001                                     __end_of___fldiv 3CD4  
                                             ?_rand 009E                                     __end_of___awdiv 83D0  
                                        _FillSubKey 9358                                     __end_of___lbmod A096  
                                   __end_of___flmul 220A                                     __end_of___flsub 96B6  
                                   __end_of___fltol 7BFE                   __end_of_IOCB4_SetInterruptHandler A724  
                                     ?_RADIO_SetCRC 0001                                     __end_of___lldiv 855E  
                                   RADIO_Transmit@i 00B9                                               u21010 406C  
                                             u20130 8B4E                                               u20300 A010  
                                   ___awdiv@divisor 0062                                               u20070 3E48  
                                             u20055 3DD6                                               _T1CON 000FCD  
                                   __end_of___llmod 8DFA                                               u21025 4094  
                                             u21035 40B8                                               u20180 9780  
                                             u20085 3E70                                               u20430 6874  
                                             u20350 9650                                               u22030 8680  
                                             u20095 3E94                                               u21240 4600  
                                             u20450 6888                                               u20530 7A4C  
                                             u20290 A008                                               u22210 0192  
                                             u21068 87BE                                   ??_EnableChannels1 0069  
                                             u20470 689C                                               u21094 9236  
                                             u22150 453A                                               u22310 02E2  
                                             u14230 2C92                                               u14055 929C  
                                             u21095 9230                                               u20800 2860  
                                             u20720 2668                                               u22320 03F4  
                                             u22240 01AE                                               u14240 2CA2  
                                             _LATC2 007C5A                                               _T3CON 000FB1  
                                             u23210 0F80                                               u20650 7724  
                                             u20570 7A76                                               u24010 5FC6  
                                             u14410 2DF8                                               u14250 2CA4  
                              RxJoinResponse@status 0062                                               _LATD3 007C63  
                                             u23220 0F9E                                               u20660 7770  
                                             u22068 86B0                                               u23108 3466  
                                             u22069 86C4                                               u23230 0FFC  
                                             u21470 1952                                               u22350 0452  
                                             u22270 028C                                               u14430 2E0C  
                                             u23320 11AA                                               u22440 0540  
                                             u23128 349A                   __end_of_AckRetransmissionCallback 6048  
                                             u14280 2CE6                                               u14600 1F44  
            SearchAvailableChannel@randomNumberCopy 00AE                                               u23225 0F94  
                                             u20770 274A                                               u20690 25DA  
                                             u21618 9FAE                                               u16130 3C7E  
                                             u16210 7BD6                                               u14610 20BA  
                                             u23235 0FF0                                               u23155 0C46  
                                             u22291 02CA                                               u15500 90F4  
                                             u21900 5A7C                                               u16140 3CA2  
                                             u14700 21C0                                               u23165 0CC6  
                                             u23085 33E4                                               u21830 700C  
                                             u22630 08EC                                               u22470 0620  
                                             u23430 8E3C                                               u24118 88AC  
                                             u24038 5FF6                                               u23335 11D0  
                                             u23175 0DB2                                               u24119 88C0  
                                             u14615 20B0                                               u15440 90B6  
                                             u22800 0B36                                               u22368 0468  
                                             u16160 7B50                                               _T5CON 000F4E  
                                             u23345 11F4                                               u23185 0E32  
                                             u21745 5624                                               u15530 8BAE  
                                             u15450 90BA                                               u22730 0AA4  
                                             u22490 0730                                               u16090 3C22  
                                             u14490 2E68                                               u16170 7B80  
                                             u14650 2146                                     __end_of___ltdiv 8BEE  
                                             u21915 5AB4                                               u23620 64EC  
                                             u22548 07B2                                               u22468 05E2  
                                             u23540 7DF8                                               u21588 74CA  
                                             u14740 81A6                                               u22549 07C6  
                                             u21925 5AD6                                               u23630 6504  
                                             u22590 083E                                               u24078 602A  
                                             u24158 799A                                               u24175 81BC  
                                             u24159 79AC                                               u16175 7B76  
                                             u24520 5BE8                                               u24504 5BCA  
                                             u15560 92D4                                               u23640 656C  
                                             u17240 84BA                                               u15640 58C6  
                                             u24505 5BC6                                               u24370 531A  
                                             u15490 90F0                                               u15474 90D0  
                                             u24530 5BEC                                               u23378 128E  
                                             u21970 8714                                               u23490 72B0  
                                             u23570 65F8                                               u17250 84C2  
                                             u14690 21A2                                               u15475 90CC  
                                             u23635 64F8                                               u19100 6C8C  
                                             u23580 6610                                               u21948 5B6E  
                                             u25340 6740                                               u23645 6560  
                                             u21885 8AC2                                               u21949 5B82  
                                             u23805 311A                                               u24470 5BB0  
                                             u23398 12C2                                               u23590 6678  
                                             u23910 501C                                      __CFG_DEBUG$OFF 000000  
                                             u17247 84B0                                               u24560 5C48  
                                             u24480 5BB4                                               u22768 0B12  
                                             u24385 5342                                               u22769 0B26  
                                             u23585 6604                                               u19210 8262  
                                             u22858 0B9C                                               u22698 0A7E  
                                             u15690 7D2C                                               u24395 5366  
                                             u22699 0A92                                               u22955 3220  
                                             u23595 666C                                               u22868 0BC4  
                                             u23780 30AA                                               u24660 8E80  
                                             u23925 5054                                               u19230 828A  
                                             u16830 8318                                               u24590 5CC4  
                                             u23870 4FE0                                               u25447 9974  
                                             u23935 5076                                               u19400 5EAC  
                                             u25457 9DA6                                               u24585 5C78  
                                             u19250 82B0                                               u22978 3298  
                                             u15698 7D30                                     __end_of___lwdiv 9304  
                                             u23795 30F0                                               u18710 34E4  
                                             u19510 14B6                                               u19360 9832  
                                             u18650 8FBA                                               u18900 939E  
                                             u19540 150E                                               u19460 1456  
                                             u19381 5E0A                                               u18830 850E  
                                             u18670 A6CE                                               u18680 9900  
                                             u18920 85F2                                               u19720 A1A0  
                                             u18657 8FB0                                               u19465 144C  
                                             u18770 376A                                               u19490 14A6  
                                             u18860 8DB6                                               u19565 1576  
                                             u19830 8392                                               u18890 939C  
                                             u19950 1D30                                               u19880 1BCA  
                                             u19865 1B9A                                     __end_of___lwmod 985A  
                                             u19890 1BCC                                         GPIOSet@GPIO 0061  
                                     ?_RADIO_RxDone 0001                                     ___awdiv@counter 0064  
                       __size_of_RADIO_ReceiveStart 0230                 __size_of_LORAWAN_SetChannelIdStatus 003E  
                              __size_of_acuadoriApp 0332                                       ?_RADIO_TxDone 0001  
                                             _TMR1H 000FCF                                               _TMR1L 000FCE  
                                             _TMR3H 000FB3                                               _TMR3L 000FB2  
                                             _TMR5H 000F50                                               _TMR5L 000F4F  
                                             _PORTA 000F80                                               _PORTC 000F82  
                                             _PORTD 000F83                                               _PORTE 000F84  
                                             _TRISA 000F92                                               _TRISB 000F93  
                                             _TRISC 000F94                                               _TRISD 000F95  
                                             _TRISE 000F96                                  __end_ofsin@coeff_a FFE2  
                                __end_ofsin@coeff_b FFF2                            __size_of_RADIO_RxTimeout 002E  
                                     __CFG_WRT0$OFF 000000                                       __CFG_WRT1$OFF 000000  
                     ?_SelectChannelForTransmission 0001                                       __CFG_WRT2$OFF 000000  
                 __size_of_TMR3_SetInterruptHandler 000A                                 ___lmul@multiplicand 0096  
                                     __CFG_WRT3$OFF 000000                                      _RxJoinResponse 9BE6  
                           ?_SetReceptionNotOkState 0001                           ?_TMR3_SetInterruptHandler 0060  
                                    __CFG_EBTR0$OFF 000000                                      __CFG_FCMEN$OFF 000000  
                                    __CFG_EBTR1$OFF 000000                                         GPIOSet@mode 0060  
                                    __CFG_EBTR2$OFF 000000                                      __CFG_EBTR3$OFF 000000  
                              ??_PrepareSessionKeys 0071                                    __end_of_TMR1_ISR A5AC  
                         FindSmallestDataRate@found 0061                                       __CFG_WRTB$OFF 000000  
                                  __end_of_TMR3_ISR 9F6A                                       __CFG_WRTC$OFF 000000  
                                     __CFG_WRTD$OFF 000000                                    __end_of_TMR5_ISR 9F3C  
                                    ?_INT1_CallBack 0001                              LORAWAN_RxTimeout@minim 00BE  
                       __size_of_RADIO_SetBandwidth 000A                                      __CFG_EBTRB$OFF 000000  
                    __size_of_RADIO_WatchdogTimeout 0046                                               __rcon 0042  
                           __end_of_PIN_MANAGER_IOC A7BA                        ??_IncludeMacCommandsResponse 0065  
                     __end_of_RADIO_WatchdogTimeout 9744  RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                    ??_INT1_DefaultInterruptHandler 0001                           __size_of_ValidateDataRate 0018  
                                             _frexp 7CB6                                               _errno 0116  
                                             _randx 01EF                                               _upCnt 0106  
                    LORAWAN_RxDone@frmPayloadLength 00F1                       ValidateChannelMaskCntl@result 0060  
                                __CFG_MCLRE$EXTMCLR 000000                                               _value 010A  
                                             _timer 0100                                               _srand A656  
                                  UpdateDataRange@i 0063                            LORAWAN_RxDone@joinAccept 00EF  
                            _UpdateJoinSuccessState 5A4E                                      ?_INT2_CallBack 0001  
                          _INT1_SetInterruptHandler A72E                                          _ComputeMic 8EC2  
                           __end_of_TMR1_Initialize 9E56                              UpdateCfList@joinAccept 009E  
                                             pclath 000FFA                                               tablat 000FF5  
                                             ltemp0 0046                             RADIO_WriteFrequency@num 0075  
                                             ltemp1 004A                                               ltemp2 004E  
                    __size_of_UpdateCurrentDataRate 000A                      __size_of_UpdateChannelIdStatus 011E  
                        PrepareSessionKeys@appNonce 006D                                     _GPIOAverageRead 87D2  
                            UpdateChannelIdStatus@i 0063                       __end_of_UpdateCurrentDataRate A6F2  
                      __size_of_RADIO_FSKPacketSent 010C                       __end_of_UpdateChannelIdStatus 6166  
                             adaptString@deleteElem 0066                                               plusw0 000FEB  
                                             plusw1 000FE3                                               plusw2 000FDB  
                                             ttemp0 0046                                               ttemp1 0049  
                                             ttemp2 004C                                               ttemp3 004F  
                                             ttemp5 0047                                               ttemp6 004A  
                                             ttemp7 004E                            UpdateFrequency@channelId 0064  
                                             status 000FD8                                               wtemp0 0046  
                                             wtemp1 0048                                               wtemp2 004A  
                                             wtemp3 004C                                               wtemp4 004E  
                                             wtemp5 0050                                               wtemp8 0047  
                                    ??_i2c_sdaWrite 0060                                  _MacExecuteCommands 433C  
                             ??_tempSensAcquisition 00C4                                      __CFG_HFOFST$ON 000000  
                          UpdateCfList@channelIndex 00A9                                 __size_of_RADIO_DIO0 008A  
                                GPIOAnalogRead@GPIO 006C                                 __size_of_RADIO_DIO1 004C  
                               __size_of_RADIO_DIO2 0050                                 __size_of_RADIO_DIO3 001C  
                               __size_of_RADIO_DIO4 001C                                 __size_of_RADIO_DIO5 001C  
                                   __end_of_strncat 84DA                  PrepareJoinRequestFrame@bufferIndex 00D9  
                                   _TMR1_WriteTimer A316                   TMR_OverrideRemaining@oldReloadVal 0072  
                               LORAWAN_RxDone@fPort 00E0                                      ??_i2c_sendData 0066  
                                GPIOAnalogMode@GPIO 0061                                  __size_ofi2___awdiv 0084  
                        __size_of_LORAWAN_GetStatus 0030                            __size_of_RADIO_WriteMode 00FC  
                                 __end_of_AESEncode 37AE                                      __CFG_PBADEN$ON 000000  
                               __size_of_RADIO_Init 01CA                    __end_of_RADIO_WriteConfiguration 17D0  
                           ADC_GetConversion@result 0065                            __size_of_rn2483_GoToIdle 0016  
                   ??_IOCB4_DefaultInterruptHandler 0001                                     _TMR5_Initialize 9C4A  
                      __size_of_RADIO_SetIQInverted 000A                           __size_ofi2_TMR1_ReadTimer 0020  
                         RADIO_WriteMode@dioMapping 0068                                  GPIOAnalogMode@mode 0060  
                                   __initialization 783E                                    _GPIODigitalWrite 6DAA  
                                       log@exponent 00B1                        __size_ofi2_SwTimersInterrupt 00F8  
                                      _stringLength 01FA                                    LORAWAN_Send@port 00D4  
                       __size_of_DIO1_ISR_Lora_Init 0010                                 ?_MacExecuteCommands 00A6  
                                 _SPI2_Exchange8bit A5F4                                        __end_of_main 67B6  
                        AssembleEncryptionBlock@dir 0072                                        __end_of_rand 915A  
                                 ?_TMR_GetDeltaTime 0068                                       AESCmac@padded 01A4  
                          __end_of_RADIO_ReadRandom 7F62                                    _SetJoinFailState 9F96  
                                  i2c_sendData@data 0064                             RADIO_WriteMode@blocking 0066  
                                   ?_GPIOAnalogRead 0068                                     ?_GPIOAnalogMode 0060  
                              _UpdateJoinInProgress A4F0                                _ExecuteRxTimingSetup A0BE  
                                 __end_of_IOCB4_ISR A396                           __size_of_UpdateDLSettings 001C  
                                  __end_of_i2c_stop 9D3C                                  ?_SPI2_Exchange8bit 0001  
                         __size_of_ValidateRxOffset 0018                            _LORAWAN_SetUplinkCounter A5D0  
                                         ??_ADC_ISR 0001                         ?_INTERRUPT_InterruptManager 0001  
                                ??_TMR_GetDeltaTime 006C                                       AESCmac@output 00BC  
                        i2TMR1_ReadTimer@readValLow 0008                                 __end_of_i2c_waitACK A4F0  
                                      ?_sinGenStart 0001                        __end_of_RADIO_SetOutputPower A760  
                     __size_of_impedenceAcquisition 0036                                           ??_AESCmac 00C1  
                                    ??_RADIO_SetCRC 0060                              MacExecuteCommands@done 00AB  
                           InitDefault868Channels@i 006B                                              ??_main 00FC  
                                            ??_rand 00A0                                      ??_RADIO_RxDone 00F4  
                          _TMR5_SetInterruptHandler A6FC                                      ??_RADIO_TxDone 00D7  
                         GPIOAverageRead@finalValue 0075                                     _TMR3_StartTimer A806  
                                     isJoined@value 0068                                       __activetblptr 000003  
                            ?_RADIO_SetLoRaSyncWord 0001                              __end_of_RxJoinResponse 9C18  
                             _TMR3_InterruptHandler 01E1                   __end_of_LORAWAN_LinkCheckCallback 510A  
                               __end_of_i2c_usdelay A1CC                      __end_of_SetReceptionNotOkState 86DE  
                       __end_of_UpdateReceiveDelays 98E0                             LORAWAN_GetStatus@status 0064  
                       _EUSART2_DefaultErrorHandler 000000                     __end_of_AssembleEncryptionBlock 75DA  
                          __size_of_SPI2_Initialize 000E                                           ??_GPIOSet 0061  
                            ??_SystemBlockingWaitMs 0064                                    ??_StartReTxTimer 0092  
                               ??_SPI2_Exchange8bit 0060                    CountfOptsLength@macCommandLength 0066  
                                EncodeShiftRow@temp 0062                            ??_InitDefault868Channels 006B  
                       __size_of_RADIO_RegisterRead 0028                                   ?_HALSPICSDeassert 0001  
                                  ?_SwTimersExecute 0001                                       _TMR_SwapTimer 98E0  
                                    _EnableChannels A482                           ??_PrepareJoinRequestFrame 00D1  
                                 ??_acquisitionData 00AD                                      _HALSPICSAssert A812  
                              ??_MacExecuteCommands 00A9                                         ?_CheckFlags 0060  
                           LORAWAN_TxDone@timeOnAir 00B3                                          _ExtractMic 94EE  
                        __end_of_EUSART2_Initialize 97D0                     __size_of_SearchAvailableChannel 0102  
                                            _ADCON0 000FC2                                              _ADCON1 000FC1  
                                            _ADCON2 000FC0                                              ?_frexp 006C  
                           __size_of_tempConversion 032C                                  ??_HALSPICSDeassert 0060  
                            _HALResetPinOutputValue A50A                                    ___llmod@dividend 0060  
                                            _ADRESH 000FC4                                              _ADRESL 000FC3  
                                  ___awdiv@dividend 0060                                              ?_srand 0072  
            __end_of_LORAWAN_ReceiveWindow1Callback 7CB6             __size_of_LORAWAN_ReceiveWindow1Callback 00B8  
                    _LORAWAN_ReceiveWindow1Callback 7BFE                                              _ANSELA 000F38  
                                            _ANSELB 000F39                                              _ANSELC 000F3A  
                                            _ANSELD 000F3B                                              _ANSELE 000F3C  
                                   _ValidateTxPower 9FEE                                              _T1GCON 000FCC  
                                            _T3GCON 000FB4                                              _T5GCON 000F4D  
                           SwTimerReadValue@timerId 0091                             TMR1_WriteTimer@timerVal 0060  
                                    _ExecuteLinkAdr 48FC                             __end_of_TMR3_Initialize 9FEE  
                                            i2l2310 0044                                              i2l1343 9206  
                                            i2l2312 0050              __end_of_LORAWAN_ReceiveWindow2Callback 7508  
           __size_of_LORAWAN_ReceiveWindow2Callback 00D8                      _LORAWAN_ReceiveWindow2Callback 7430  
                                            i2l2315 0060                                              i2l2308 0038  
                                            i2l2317 006C                                              i2l2318 0082  
                                            i2l2319 0078                                      __CFG_WDTEN$OFF 000000  
                                            i2l3198 7628                                              i2l3199 7668  
                     __size_of_RADIO_SetFSKSyncWord 0030                                              _RCREG2 000F74  
                           __end_of_GPIODigitalRead 7B42                                              _RCSTA2 000F71  
                                            _OSCCON 000FD3                                   ??_RADIO_GetStatus 0060  
                                            _SPBRG2 000F75                    __size_of_ValidateChannelMaskCntl 0020  
                                            _WDTCON 000FD1                     __size_of_InitDefault433Channels 0078  
                                            _TRISC2 007CA2                                       ?_LORAWAN_Init 00AA  
                                     ?_LORAWAN_Join 0001                    AssembleEncryptionBlock@firstByte 0070  
                                     ?_LORAWAN_Send 00D4                     __size_of_AutomaticReplyCallback 0026  
                                            _TXREG2 000F73                                    __end_of___xxtofl 590E  
                        __size_of_LORAWAN_RxTimeout 0300                                              _TXSTA2 000F72  
                                 ?_ExecuteDevStatus 0060                          __end_of_DIO0_ISR_Lora_Init A656  
                          __size_ofi2_TMR_SwapTimer 0040                                   ExecuteLinkAdr@ptr 006F  
                                   _TMR3_WriteTimer A49E                       __size_of_RADIO_WriteFrequency 00F0  
                                            _STable FE07                         RADIO_WriteFrequency@num_mod 0071  
                               LORAWAN_TxDone@delta 00C6                         __size_of_ComputeSessionKeys 0086  
                                         AESCmac@k1 0184                                           AESCmac@k2 0174  
                         __end_of_SPI2_Exchange8bit A606                            __size_of_rn2483_delaysec 0040  
                               LORAWAN_TxDone@found 00C5                                     _CheckMcastFlags 86DE  
                               LORAWAN_TxDone@minim 00D2                                  ??_ExecuteDevStatus 0062  
                                            _Random A232                                      __CFG_XINST$OFF 000000  
                                            _RxData A82E                                 LORAWAN_TxDone@ticks 00CE  
                SearchAvailableChannel@randomNumber 00B1                __end_of_TMR1_DefaultInterruptHandler A838  
             __size_of_TMR1_DefaultInterruptHandler 0002                        _TMR1_DefaultInterruptHandler A836  
                                       ?_GetRx1Freq 0060                       ValidateDataRange@dataRangeNew 0063  
                                  __end_of_isJoined A296                             _RADIO_FHSSChangeChannel 9A9A  
                                            ___fleq 8122                                           ??___abdiv 0061  
                                            ___lmul 915A                              ?_RADIO_WriteFSKBitRate 006D  
                                         ??___fladd 007C                               ?_UpdateJoinInProgress 0001  
                                            ___wmul A0E6                         ?_LORAWAN_LinkCheckConfigure 009E  
                             ?_ExecuteRxTimingSetup 0067                                           ??___fldiv 00A5  
                                         ??___awdiv 0064                                      __CFG_STVREN$ON 000000  
                                         ??___lbmod 0002                                           ??___flmul 008C  
                              _FindSmallestDataRate 79C2                                           ??___flsub 008C  
                                         ??___fltol 0064                                              _appEui 03C8  
                                         ??___lldiv 0068                                              _appKey 03E0  
                                         ??___llmod 0068                                           ??___ltdiv 0066  
                                         ??___lwdiv 0064                                           ??___lwmod 00A4  
                RADIO_SetChannelFrequency@frequency 0060                                     StartReTxTimer@i 009A  
                         ExecuteRxParamSetupReq@ptr 009E                              __size_of_LORAWAN_Reset 01CC  
                                            _memcpy 8F86                                              _joined 0125  
                                            _memset 9EE0                                              _setSDA A674  
                                            clear_0 78A6                                              clear_1 78B8  
                                            clear_2 78C4                                              clear_3 78D0  
                                            clear_4 78DC                                              clear_5 78E8  
                                            clear_6 78F4                             SwTimerIsRunning@timerId 0060  
                                  ___awdiv@quotient 0066                             __size_of_uint16ToString 0140  
                       _EUSART2_FramingErrorHandler 02FE                                              _result 0118  
                       __size_of_DIO5_ISR_Lora_Init 0002                                         ?_FillSubKey 0060  
                                            _string 0200                                   ?_SwTimerIsRunning 0001  
                                    i2___awdiv@sign 0006                                   ?_ExecuteLinkCheck 0060  
                                   _TMR5_StartTimer A7F2                                    __end_of_resetSDA A690  
                                   ?_RxJoinResponse 0001                             __size_of_EncodeShiftRow 0164  
                            __end_of_EnableChannels A49E                          ??_RADIO_UnhandledInterrupt 0064  
                                      ??_HALSPISend 0061                __end_of_INT2_DefaultInterruptHandler A83C  
             __size_of_INT2_DefaultInterruptHandler 0002                        _INT2_DefaultInterruptHandler A83A  
                                      ?_timerTick16 0001                                        __pdataCOMRAM 0052  
                                       RxData@pData 0060                              __end_of_HALSPICSAssert A816  
                 __size_of_RADIO_SetSpreadingFactor 000A                                   __end_ofi2___awdiv 85E2  
                      __size_of_ValidateChannelMask 004A                                       ??_SwTimerStop 0060  
                                   ??_INT1_CallBack 0001                                   ??_SystemTimerInit 0060  
                                            lltemp0 0046                           ?_RADIO_SetSpreadingFactor 0001  
                                 ?_SwTimerReadValue 0089                                  ??_SwTimerIsRunning 0060  
                                    ?_TMR_SwapTimer 0068                                   ?_ExecuteDutyCycle 0060  
                                ??_ExecuteLinkCheck 0062                                        __mediumconst FE06  
                                            tblptrh 000FF7                                              tblptrl 000FF6  
                                            tblptru 000FF8                             __end_of_GPIOAverageRead 884C  
                                            srand@x 0072                                        i2c_usdelay@i 0062  
                          ADC_GetConversion@channel 0067                                     ??_INT2_CallBack 0001  
                                ??_SwTimerReadValue 008D                                     _UpdateDataRange 6396  
                            __end_of_ExecuteLinkAdr 4AC6                                  ??_ExecuteDutyCycle 0062  
          TMR5_SetInterruptHandler@InterruptHandler 0060            TMR3_SetInterruptHandler@InterruptHandler 0060  
          TMR1_SetInterruptHandler@InterruptHandler 0060           IOCB4_SetInterruptHandler@InterruptHandler 0060  
          INT2_SetInterruptHandler@InterruptHandler 0060            INT1_SetInterruptHandler@InterruptHandler 0060  
                __size_of_rn2483_IdleInitialization 0008                  __end_of_LORAWAN_SetChannelIdStatus 9A5E  
                        _LORAWAN_SetChannelIdStatus 9A20                                    ?_PIN_MANAGER_IOC 0001  
                                  _SwClearAllTimers 9CAC                                       AESEncode@aux1 007B  
                                     AESEncode@aux2 007A                                       AESEncode@aux3 007C  
                           __end_of_TMR1_WriteTimer A336                               __end_of_SwTimerCreate 8AA4  
                                         ??_strncat 0066                                    ??_averageMeasure 006C  
                    ??_SelectChannelForTransmission 00B3                                         ?_ComputeMic 00C8  
                     __size_of_INTERRUPT_Initialize 0004                               __end_of_TMR1_CallBack A356  
                       ??_LORAWAN_SetApplicationEui 006D                         ??_LORAWAN_SetApplicationKey 006D  
                         ExecuteDutyCycle@maxDCycle 0065                                   ??_RADIO_RxTimeout 00C3  
                                  ?_TMR1_Initialize 0001                             __end_of_TMR5_Initialize 9C7C  
                                      ___xxtofl@arg 006A                         UpdateFrequency@frequencyNew 0060  
                                      ___xxtofl@exp 0069                                   _SYSTEM_Initialize 9DFA  
                                      ___xxtofl@val 0060                                          ___fleq@ff1 0060  
                                        ___fleq@ff2 0064                    __size_of_CreateAllSoftwareTimers 0052  
                                  __end_oflog@coeff FFCE                             __size_of_GenerateSubkey 012A  
                                    ??_LORAWAN_Init 00AE                                      ??_LORAWAN_Join 00DA  
                                   ___lbmod@divisor 0001                                      ??_LORAWAN_Send 00D8  
                    __size_of_RADIO_FSKPayloadReady 00B2                                          __accesstop 0060  
                           __end_of__initialization 78FA                                   tempConversion@val 00BC  
                     __end_of_RADIO_FSKPayloadReady 7E1E                                     ___lbmod@counter 0003  
                                    _RADIO_Transmit 3F04                                           ?_INT1_ISR 0001  
                                         ?_INT2_ISR 0001                                           ?_GPIOInit 0001  
                              LORAWAN_RxDone@buffer 01DA                              RADIO_ReadRandom@retVal 006F  
                                  _ConfigureRadioRx A018                                __size_of_RADIO_Reset 0046  
                                  _ConfigureRadioTx 95D8                                 ExecuteDevStatus@ptr 0060  
                  ??_UpdateReceiveWindow2Parameters 0065                     ?_UpdateReceiveWindow2Parameters 0060  
                 __size_of_LORAWAN_GetUplinkCounter 0012                                  ?_SYSTEM_Initialize 0001  
                              LORAWAN_RxDone@packet 00E9                                      _maxPayloadSize FF17  
                         ?_LORAWAN_GetUplinkCounter 0060                       RADIO_SetLoRaSyncWord@syncWord 0060  
                                      eval_poly@res 00A9                                       ___rparam_used 000001  
                                        ___fltol@f1 0060                                     _TMR5_WriteTimer A3F4  
                        ValidateChannelId@channelId 0062                           ExecuteLinkAdr@channelMask 0072  
                                       _i2c_waitACK A4D6                                  __end_of_HALSPISend A6BA  
                                    __pcstackCOMRAM 0001                                          ___inthi_sp 0AF8  
                            _SearchAvailableChannel 67B6                             ValidateChannelId@result 0061  
                             ?_FindSmallestDataRate 0001                                        __pidataBANK1 A6BA  
                                      __pidataBANK3 A096                                 ??_SYSTEM_Initialize 0062  
                           __end_of_TMR3_StartTimer A80A                          __end_of_DIO4_ISR_Lora_Init A834  
                                         ?_TMR1_ISR 0001                                 __size_of_CheckFlags 005E  
                     ?_TMR1_DefaultInterruptHandler 0001                                           ?_TMR3_ISR 0001  
                                         ?_TMR5_ISR 0001                            _RADIO_WriteConfiguration 12D6  
                                       _i2c_usdelay A1A8                                       __end_of_frexp 7D6C  
                                 ??_RADIO_WriteMode 0067                                     _spreadingFactor FF35  
                         __size_of_LORAWAN_Mainloop 003E                                    ??_EncKeySchedule 0062  
             __end_of_IOCB4_DefaultInterruptHandler A83A              __size_of_IOCB4_DefaultInterruptHandler 0002  
                     _IOCB4_DefaultInterruptHandler A838                            __end_of_RADIO_WritePower 726E  
                           ?_ExecuteRxParamSetupReq 009E                                       __end_of_srand A666  
                                 ??_rn2483_GoToIdle 0060                                   SwClearAllTimers@i 0060  
                                 LORAWAN_RxDone@hdr 00F2                                        ??_RADIO_DIO0 00F6  
                                      ??_RADIO_DIO1 00C3                                        ??_RADIO_DIO2 007A  
                                      ??_RADIO_DIO3 0065                                        ??_RADIO_DIO4 0065  
                                      ??_RADIO_DIO5 0065                              _InitDefault433Channels 89B4  
                                   _UpdateFrequency 9AD6                              _AutomaticReplyCallback A15E  
                     __size_of_TMR5_InterruptTicker 000A                         ??_IOCB4_SetInterruptHandler 0062  
                                           I2C@flag 0040                            ??_INTERRUPT_GetDioStatus 0060  
                                      ??_RADIO_Init 007F                               __end_of_pointAddition 96FE  
                         SwTimerSetCallback@timerId 0063                          LORAWAN_RxDone@channelIndex 00E1  
                    AssembleEncryptionBlock@blockId 006F                         __size_of_EXT_INT_Initialize 002A  
                              __end_of_i2c_sdaWrite 90FE                                     _UpdateDutyCycle 9B7E  
                                   ?_EnableChannels 006C                             ??_TMR_OverrideRemaining 006E  
                           __end_of_ValidateTxPower A018                                     ?_HALSPICSAssert 0001  
                          ?_EUSART2_SetErrorHandler 0060                                  _DIO3_ISR_Lora_Init A834  
                              __end_of_i2c_sendData 9D6C                        __end_of_HALResetPinMakeInput A81E  
                           __size_of_TMR1_ReadTimer 0022                    __end_of_INT2_SetInterruptHandler A72E  
                                  RADIO_DIO0@opMode 00F9                         RADIO_RegisterRead@readValue 0063  
                __end_of_IncludeMacCommandsResponse 286E                          _IncludeMacCommandsResponse 253C  
                     ?_INT2_DefaultInterruptHandler 0001                     __size_of_InitDefault868Channels 0078  
                          UpdateCfList@bufferLength 00A4                               LORAWAN_Send@confirmed 00D9  
                                       ?_ExtractMic 006B                                     ?_ExecuteLinkAdr 006F  
                                  _ValidateDataRate A53C                     LORAWAN_GetMaxPayloadSize@result 006A  
                                           ??_frexp 0072                                 __size_of_GetRx1Freq 0012  
                         __end_of_SYSTEM_Initialize 9E28                                      isJoined@joined 006C  
                __size_of_RADIO_SetChannelFrequency 008A                                             ??_srand 0074  
                           __end_of_TMR3_WriteTimer A4BA                              __end_of_RADIO_Transmit 4128  
                                 ??_SPI2_Initialize 0060                                 ?_DIO3_ISR_Lora_Init 0001  
                                     _LORAWAN_Reset 4730                          ?_RADIO_SetChannelFrequency 0060  
                                        __pbssBANK1 0100                                          __pbssBANK2 0200  
                                        __pbssBANK3 0300                                          __pbssBANK4 0400  
                                        __pbssBANK5 0500                                    RxData@dataLength 0062  
                               __end_of_SwTimerStop A316                   __end_of_rn2483_IdleInitialization A7C2  
                        ?_SetCallbackSoftwareTimers 0001                             __end_of_CheckMcastFlags 8758  
                                __size_of_eval_poly 00FC                                    ?_TMR3_Initialize 0001  
                                   __CFG_PLLCFG$OFF 000000                              __end_of_maxPayloadSize FF1F  
                                  ?_GPIODigitalRead 0001                                           ?_i2c_stop 0001  
                                        ??_INT1_ISR 0001                                          ??_INT2_ISR 0001  
                                        ??_GPIOInit 0062                                  SwTimersInterrupt@i 0088  
                  ??_EUSART2_SetFramingErrorHandler 0062                     ?_EUSART2_SetFramingErrorHandler 0060  
                              _RADIO_SetOutputPower A756                                __end_of_RADIO_SetCRC A774  
                            _RADIO_ReceiveStart$784 00AF                              __size_of_DIO0_ISR_Lora 0004  
                           ??_HALResetPinMakeOutput 0060                                __end_of_RADIO_RxDone 7352  
                        __end_of_RADIO_RxFSKTimeout 9A9A                                   adaptString@length 0062  
                              __end_of_RADIO_TxDone 66B4                                 __size_of_FillSubKey 0052  
                                __end_of_RADIO_DIO0 8238                                  __end_of_RADIO_DIO1 95D8  
                                __end_of_RADIO_DIO2 949E                                  __end_of_RADIO_DIO3 A466  
                                __end_of_RADIO_DIO4 A44A                                  __end_of_RADIO_DIO5 A42E  
                         ??_RADIO_FHSSChangeChannel 0079                         __size_of_SwTimerSetCallback 0034  
                     __size_of_LORAWAN_SetDeviceEui 002E                           RADIO_SetOutputPower@power 0060  
                        __size_of_SPI2_Exchange8bit 0012                                  __end_of_RADIO_Init 4C90  
                   ?_LORAWAN_EnterContinuousReceive 0001                    ??_LORAWAN_EnterContinuousReceive 00B3  
                                           ?_Random 00A5                                   ?_CountfOptsLength 0001  
                            __size_of_DIO1_ISR_Lora 0004                                             ?_RxData 0060  
                                  i2_TMR1_ReadTimer A356                                  __CFG_CCP2MX$PORTC1 000000  
                                 adaptString@string 0060                                      FillSubKey@size 0064  
                                   _EnableChannels1 8BEE                            __size_of_HALDIO5PinValue 000C  
                      __size_of_RADIO_RegisterWrite 0020                              ??_UpdateJoinInProgress 0060  
                  __size_of_AssembleEncryptionBlock 00D2                              ??_ExecuteRxTimingSetup 0069  
                                  FillSubKey@source 0060        SelectChannelForTransmission@transmissionType 00B3  
                                           ?___fleq 0060                                             ?___lmul 0092  
            AssembleEncryptionBlock@multicastStatus 0071                      __end_of_ExecuteRxParamSetupReq 5528  
                  __end_of_TMR3_SetInterruptHandler A710                                  ??_CountfOptsLength 0060  
                                           ?___wmul 0060                              __size_of_DIO2_ISR_Lora 0004  
                                EncryptFRMPayload@i 00A6                                  EncryptFRMPayload@j 00A7  
                                EncryptFRMPayload@k 00A5                                          ??_TMR1_ISR 002A  
                           __end_of_TMR5_StartTimer A7F8                                          ??_TMR3_ISR 0003  
                                __CFG_CCP3MX$PORTB5 000000                                   ??i2_TMR_SwapTimer 000B  
                                        ??_TMR5_ISR 0009                                  __size_of_sendValue 0062  
                         _LORAWAN_SetApplicationEui 9EB2                                ??_DIO3_ISR_Lora_Init 0060  
                         _LORAWAN_SetApplicationKey 9E84                                    _UpdateDLSettings A466  
                                  _ValidateRxOffset A524                                             ?_memcpy 0060  
                                           _ADC_ISR A82A                                   ??_rn2483_delaysec 0062  
                                           ?_memset 0060                                             ?_setSDA 0001  
                                    ___lmul@product 009A                                   _TMR_ISR_Lora_Init A616  
                            RADIO_RegisterWrite@reg 0063                                 __size_of_ComputeMic 0062  
                            RADIO_Transmit@regValue 00B8                        __size_of_RADIO_SetModulation 000A  
                               _RADIO_FSKPacketSent 64A4                                             _AESCmac 1B5A  
                            ComputeMic@bufferLength 00CC                                 GPIODigitalRead@GPIO 0060  
                                     ?_TMR3ISRClock 0001                                   sinGenStart@i_5310 0068  
                           __size_of_ADC_Initialize 0018                             __end_of_UpdateDataRange 64A4  
                       __end_of_leafSensAcquisition A136                                     ??_TMR_SwapTimer 006A  
                          RADIO_WriteFSKBitRate@num 0071                                  ?_TMR_ISR_Lora_Init 0001  
                        ??_INT1_SetInterruptHandler 0062                       __size_of_lightSensAcquisition 004E  
                              __size_of_sinGenStart 013A                                             i2l15280 69A6  
                                           i2l15278 6954                                             i2l15294 A4CC  
                                           i2l15740 99AE                                             i2l15732 A08E  
                                           i2l15724 A076                                             i2l15812 85D8  
                                           i2l15804 85C0                                             i2l16542 A4B0  
                                           i2l15808 85CA                                             i2l15770 6F82  
                                           i2l15764 6F1C                                             i2l15780 8572  
                                           i2l15758 6EC8                                             i2l16558 A408  
                                           i2l15768 6F80                                             i2l15792 8598  
                                           i2l15794 85A0                                             i2l15786 8582  
                                           _GPIOSet 6CAE                                EncryptFRMPayload@dir 0095  
                                _RADIO_GetPacketSnr A7DA                                EncryptFRMPayload@key 009A  
                                         ?___xxtofl 0060                               __end_of_UpdateTxPower A6E8  
                               _RADIO_SetIQInverted A760                                             _OSCCON2 000FD2  
                           __size_of_ConfigureRadio 009A                                    ?_GPIOAverageRead 006D  
                                           _OSCTUNE 000F9B                            __end_of_GPIODigitalWrite 6EA6  
                       __size_ofi2_TMR_GetDeltaTime 0100                                             _SPBRGH2 000F76  
                               i2_SwTimersInterrupt 6EA6                                             _SSP2ADD 000F6E  
                                sendValue@firstSend 00FA                                             _SSP2BUF 000F6F  
                                    _tempConversion 286E                                 ??_TMR_ISR_Lora_Init 0062  
                                 __end_of_bandwidth FF35              UpdateReceiveWindow2Parameters@dataRate 0064  
                                     i2c_sdaWrite@i 0063                            __end_of_SetJoinFailState 9FC2  
                                    ?_LORAWAN_Reset 0001                        RADIO_WriteMode@newModulation 0065  
                                         ?_isJoined 0001                                       ??_adaptString 0063  
                           tempSensAcquisition@temp 00C6                              ValidateDataRate@result 0061  
                                  ?_TMR1_WriteTimer 0060                                 ?_RADIO_GetPacketSnr 0001  
                           __end_of_TMR5_WriteTimer A412                                     ___abdiv@divisor 0060  
                                   ?_RADIO_Transmit 00A9                             _ValidateChannelMaskCntl A296  
                                   ___abdiv@counter 0063                                 StartReTxTimer@minim 0096  
                        AssemblePacket@bufferLength 00CB                        PrepareSessionKeys@sessionKey 006B  
                  LORAWAN_SetDeviceEui@deviceEuiNew 006B                                ?_RADIO_FSKPacketSent 0001  
                             TMR_SwapTimer@timerVal 0068                                    ?_TMR5_Initialize 0001  
                 __end_of_RADIO_SetChannelFrequency 82C2                         PrepareJoinRequestFrame@iCtr 00D8  
                         _IOCB4_SetInterruptHandler A71A                   __end_of_SetCallbackSoftwareTimers 7430  
                             ?_RADIO_SetOutputPower 0001                                          ??_i2c_stop 0064  
                         _AckRetransmissionCallback 5F2A                         PrepareJoinRequestFrame@mhdr 00D7  
                            __size_of_AESEncodeLoRa 0036                                  _EncKeySchedule$521 0065  
                           __size_of_TMR3_StopTimer 0004                       __size_of_LORAWAN_PlatformInit 0022  
                        ??_LORAWAN_SetUplinkCounter 0064                                      _ticksAccounted 0032  
                                     ?_SwTimerStart 0001                                          AESCmac@key 00BA  
                                        AESCmac@ptr 01D4                                    ??_GPIOAnalogRead 006A  
                                  ??_GPIOAnalogMode 0061                             __end_of_spreadingFactor FF3C  
                                   __CFG_PWRTEN$OFF 000000                       UpdateCurrentDataRate@valueNew 0060  
                                           __Hparam 0000                                ?_RADIO_SetIQInverted 0001  
                                         ?_resetSDA 0001                          PrepareJoinRequestFrame@mic 00D3  
                            _InitDefault868Channels 893C                            RADIO_RegisterWrite@value 0062  
                                           __Lparam 0000                              ??_FindSmallestDataRate 0060  
                          LORAWAN_Send@bufferLength 00D7                               _StopAllSoftwareTimers 93AA  
                                   __size_of_Random 0022                                     __size_of_RxData 0002  
                        ??_TMR5_SetInterruptHandler 0062                                ?i2_SwTimersInterrupt 0019  
                           __end_of_UpdateFrequency 9B12                                 AssemblePacket@fCtrl 00D1  
                                           ___abdiv 8DFA                                          AESEncode@i 007D  
                                         _AESEncode 34AE                                     __size_of___fleq 008C  
                            ValidateRxOffset@result 0061                                             ___fladd 2B9A  
                         __end_of_TMR_ISR_Lora_Init A626                                             ___fldiv 3A4A  
                                           ___awdiv 834A                                     __size_of___lmul 0058  
                                           ___lbmod A06C                                             ___flmul 1EB6  
                       __size_of_DIO2_ISR_Lora_Init 0010                                    ?_TMR3_StartTimer 0001  
                                           ___flsub 966E                                             ___fltol 7B42  
                           __end_of_UpdateDutyCycle 9BB2                                             ___lldiv 84DA  
                               __size_of_ExtractMic 0050                                     __size_of___wmul 0028  
                              ??_RADIO_GetPacketSnr 0060                                             ___llmod 8D92  
                                           ___ltdiv 8B82                                             ___lwdiv 92B0  
                                 ?_RADIO_ReadRandom 006C                                             ___lwmod 9816  
                         SwTimerIsRunning@isRunning 0061                             ??_RADIO_SetLoRaSyncWord 0060  
                                           _address 01F7                                     _acquisitionData A1EE  
                                    _uint16ToString 590E                                       ??_acuadoriApp 00FC  
                              ValidateChannelMask@i 0064                                             __pcinit 783E  
                __size_of_LORAWAN_GetMaxPayloadSize 0050                     __end_of_EUSART2_SetErrorHandler A756  
                                   __size_of_memcpy 0060                          __end_of_RADIO_ReceiveStart 3F04  
                                    ??_TMR3ISRClock 0001                                   __end_of_eval_poly 6BB2  
                             RADIO_Init@radioBuffer 0079                                     __size_of_memset 002E  
                                   __size_of_setSDA 000E                                             __ramtop 1000  
                          TMR1_ReadTimer@readValLow 0067                    EncryptFRMPayload@multicastStatus 009F  
                                ??_RADIO_ReadRandom 006E                          ?_LORAWAN_GetMaxPayloadSize 0001  
     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060                                             __ptext0 66B4  
                                           __ptext1 A7BA                                             __ptext2 A56C  
                                           __ptext3 A276                                             __ptext4 9C7C  
                                           __ptext5 220A                                             __ptext6 8FE6  
                                           __ptext7 286E                                             __ptext8 4C90  
                                           __ptext9 7CB6                                __end_of_LORAWAN_Init 8F86  
                              __end_of_LORAWAN_Join 7EC2                                __end_of_LORAWAN_Send 7090  
                                     _DIO0_ISR_Lora A826                      ??_TMR1_DefaultInterruptHandler 0001  
                   RADIO_SetFSKSyncWord@syncWordLen 006D                             __size_of_TMR5_StopTimer 0006  
                                    _EncodeShiftRow 510A                                           _IOCB4_ISR A376  
                        ExecuteNewChannel@frequency 00A1                           TMR1_ReadTimer@readValHigh 0066  
                   __size_of_INTERRUPT_GetDioStatus 0012                                           _T1CONbits 000FCD  
                SelectChannelForTransmission@result 00B4                  _EUSART2_DefaultOverrunErrorHandler 000000  
                           __size_of_LORAWAN_RxDone 0B2C                               _OSCILLATOR_Initialize A69E  
                    __end_of_UpdateJoinSuccessState 5B8C                             __size_of_LORAWAN_TxDone 06FE  
                                      __size_of_log 0192                          __end_of_RADIO_SetBandwidth A79C  
                                   _RADIO_GetStatus A7E0                                          ??___xxtofl 0064  
                                         _T3CONbits 000FB1                                    ?_ValidateTxPower 0001  
                           ?_HALResetPinOutputValue 0001                              __end_of_tempConversion 2B9A  
                      __end_of_macEndDevCmdReplyLen FF2E                   __size_of_TMR1_SetInterruptHandler 000A  
                                     _DIO1_ISR_Lora A822                                         _SwTimerStop A2F6  
                          ??_PIN_MANAGER_Initialize 0062                           ?_TMR1_SetInterruptHandler 0060  
                       IncludeMacCommandsResponse@i 006C                                           _T5CONbits 000F4E  
                                     ?_UpdateCfList 009E                                   _ExecuteNewChannel 4544  
                       __size_of_PrepareSessionKeys 0098                                        ??_CheckFlags 0062  
                     RADIO_SetModulation@modulation 0060                                __size_of_timerTick16 000C  
                           UpdateDLSettings@dlRx2Dr 0061                           __size_of_TMR_GetDeltaTime 011C  
                            GPIODigitalWrite@digOut 0060                                       _DIO2_ISR_Lora A81E  
                       __end_of_tempSensAcquisition 9044                          __size_of_SYSTEM_Initialize 002E  
                                ?_ExecuteNewChannel 009E                                          ??_isJoined 0068  
                                           _strncat 8456                          RADIO_WriteMode@currentMode 0069  
                                  ComputeMic@buffer 00CA                                end_of_initialization 78FA  
                           _CreateAllSoftwareTimers 93FC                                    ?_TMR3_WriteTimer 0001  
                                 __end_of_sendValue 8EC2                                 SwTimerCreate@retVal 0060  
                          _INT2_SetInterruptHandler A724                               ??_RADIO_FSKPacketSent 00D7  
                      __end_of_impedenceAcquisition 9B48                                      _GenerateSubkey 5E00  
                                      adaptString@i 0067                               _RADIO_WatchdogTimeout 96FE  
                    ??_INT2_DefaultInterruptHandler 0001                                          _modulation FF07  
                           __size_of_timerHandler16 00D0                                    ?_CheckMcastFlags 0060  
                            ExtractMic@bufferLength 006D                                             memcpy@d 0067  
                                           memcpy@n 0064                                             memcpy@s 0069  
                           __end_of_EnableChannels1 8C58                                             memset@c 0062  
                                           memset@n 0064                                             memset@p 0066  
                         _LORAWAN_LinkCheckCallback 4F9E                                      ??_SwTimerStart 0089  
                               ??_ExecuteNewChannel 00A0                                           i2u1624_40 99C0  
                                         i2u1632_40 85A4                               _UpdateCurrentDataRate A6E8  
                             _UpdateChannelIdStatus 6048                                           i2u1750_48 9F2A  
                                         i2u1752_48 9F58                                           i2u1690_48 A3C4  
                           ??_RADIO_WriteFSKBitRate 0071                               ??_RADIO_SetIQInverted 0060  
                                         i2u1692_48 A3A4                                 __end_of_adaptString 893C  
                        __end_of_DIO1_ISR_Lora_Init A646                                           i2u1694_48 A384  
                                         i2u1696_48 A344                                     ___lldiv@divisor 0064  
                               _ValidateChannelMask 9624                                    ___ltdiv@dividend 0060  
                                        _ticksAdded 0036                         HALResetPinOutputValue@value 0060  
                          EncodeShiftRow@stateTable 0060                                uint16ToString@output 00A7  
                         __size_of_HALSPICSDeassert 0004                            ValidateDataRate@dataRate 0060  
                                        ??_resetSDA 0062                                     ___lldiv@counter 006C  
                               acquisitionData@GPIO 00AD                                  _EUSART2_Initialize 978A  
                       TMR_OverrideRemaining@tmrVal 0070                               ??i2_SwTimersInterrupt 001D  
                          ExecuteLinkAdr@redundancy 0075                                   GenerateSubkey@key 0092  
                              _HALResetPinMakeInput A81A                                        ??_GetRx1Freq 0064  
        LORAWAN_SetApplicationKey@applicationKeyNew 006B                       UpdateDLSettings@dlRx1DrOffset 0060  
                        LORAWAN_Init@RxJoinResponse 00AC                          LORAWAN_RxDone@bufferLength 01DC  
                  __end_of_RADIO_SetSpreadingFactor A77E                  AssembleEncryptionBlock@bufferIndex 0073  
                                      RxData@status 0063                                             postdec1 000FE5  
                                           postdec2 000FDD                              __end_of_uint16ToString 5A4E  
                                        ?_AESEncode 0067                                     _SystemTimerInit A7C2  
                                           postinc0 000FEE                                             postinc1 000FE6  
                                           postinc2 000FDE                            __end_of_SwClearAllTimers 9CDC  
                                  ?_TMR5_StartTimer 0001                                   _stringValueLength 01F9  
                                     _AESEncode$516 0073                                       _AESEncode$517 0075  
                                     _AESEncode$518 0077                                    ??_RxJoinResponse 0062  
                                  _LORAWAN_Mainloop 99E2                        __end_of_RADIO_SetFSKSyncWord 9D9C  
                             __size_of_i2c_sdaWrite 005C                                  LORAWAN_Join@result 00DB  
                                __end_of_CheckFlags 90A2                           ValidateTxPower@txPowerNew 0061  
                               ?_EUSART2_Initialize 0001                                      AESEncode@block 0067  
                 SearchAvailableChannel@maxChannels 00B0                              __end_of_EncodeShiftRow 526E  
                             __size_of_i2c_sendData 0030                                          _timerReset 9F6A  
                                _DIO0_ISR_Lora_Init A646                                   ??_HALDIO5PinValue 0060  
                                    ?_DIO0_ISR_Lora 0001                               _INT1_InterruptHandler 01ED  
                                         _PORTBbits 000F81                                        ??_FillSubKey 0065  
                      SwTimersInterrupt@timeElapsed 0080                                       _AESEncodeLoRa 9B48  
                         __size_of_ExecuteDevStatus 000A                            _TMR3_SetInterruptHandler A706  
                      __end_of_RADIO_WriteFrequency 7180                          __end_of_RADIO_RegisterRead A15E  
                 __end_of_LORAWAN_GetMaxPayloadSize 94EE                      __end_of_HALResetPinOutputValue A524  
                                        ?_IOCB4_ISR 0001                                    ?_UpdateDataRange 0060  
                          __end_of_ConfigureRadioRx A042                            __end_of_ConfigureRadioTx 9624  
                                   _RADIO_RxTimeout 9DCC                      UpdateChannelIdStatus@channelId 0062  
                             _TMR5_InterruptHandler 01DD                           __end_of_ExecuteNewChannel 4730  
                                  EnableChannels1@i 006B                             __size_of_AssemblePacket 038A  
                                    ?_DIO1_ISR_Lora 0001                                         ___fladd@grs 0083  
                              ?_ValidateChannelMask 0060                                   _SwTimerSetTimeout 985A  
                                    _TMR1_ReadTimer A254                                      ??_UpdateCfList 00A0  
                                  ___lbmod@dividend 0002                                          _txPower433 FF3C  
                                   ?_tempConversion 00B6                                          _txPower868 FF42  
                                     ___xxtofl@sign 0068                    __end_of_LORAWAN_GetUplinkCounter A5F4  
                               ?_DIO0_ISR_Lora_Init 0001                                 __end_of_acuadoriApp 253C  
                                   ??_LORAWAN_Reset 00A9                                      ?_DIO2_ISR_Lora 0001  
                                  ___ltdiv@quotient 0066                       __size_of_SystemBlockingWaitMs 0030  
                         ??_ValidateChannelMaskCntl 0060                                  tempConversion@temp 00C0  
                                ?_SwTimerSetTimeout 006D                                         ___fldiv@grs 00B0  
                                       ___fldiv@rem 00A9                         __size_of_MacExecuteCommands 0208  
                              ExecuteNewChannel@ptr 009E                            ??_UpdateMinMaxChDataRate 0060  
                            __end_of_GenerateSubkey 5F2A                                       RADIO_RxDone@i 00F5  
                                         i2___awdiv 855E                               __size_of_RADIO_SetCRC 000A  
                           AssemblePacket@macCmdIdx 00D2                         ?_LORAWAN_SetChannelIdStatus 0064  
                                    _localDioStatus 0127                                  __end_of_GetRx1Freq A5BE  
                             __size_of_RADIO_RxDone 00E4                                        ??_ComputeMic 00CD  
                      __size_of_UpdateReceiveDelays 0042                               __size_of_RADIO_TxDone 0104  
                                  ?_TMR5_WriteTimer 0001                              ??_RADIO_SetOutputPower 0060  
                              ??_EUSART2_Initialize 0062                     EncryptFRMPayload@macBufferIndex 009C  
                           TMR5_WriteTimer@timerVal 0001                                         ___lbmod@rem 0004  
                           UpdateMinMaxChDataRate@i 0061                             LORAWAN_Reset@ismBandNew 00A9  
                                       ___flmul@grs 0091                           __size_of_SwTimerIsRunning 0022  
                        __end_of_ComputeSessionKeys 8456                                 ??_SwTimerSetTimeout 0071  
                          __size_of_SwTimersExecute 00C2                           __size_of_ExecuteLinkCheck 0032  
                            _INTERRUPT_GetDioStatus A5BE                                     _RADIO_WriteMode 6BB2  
                        ??_RADIO_WriteConfiguration 00A0                                GPIOAnalogRead@result 006A  
                             SPI2_Exchange8bit@data 0060                                     _rn2483_GoToIdle A56C  
                                i2___awdiv@dividend 0001                             ?_SearchAvailableChannel 00A7  
                         __size_of_SwTimerReadValue 0040                                        _i2c_sdaWrite 90A2  
                       RADIO_FSKPacketSent@irqFlags 00DF                           __size_of_ExecuteDutyCycle 0054  
                            ?_StopAllSoftwareTimers 0001                             AssemblePacket@confirmed 00CF  
                                __end_of_FillSubKey 93AA                             _AssembleEncryptionBlock 7508  
                                 __size_of_INT1_ISR 0008                                   __size_of_INT2_ISR 0008  
                           __end_of_acquisitionData A210                                   __size_of_GPIOInit 013A  
                              ??_DIO0_ISR_Lora_Init 0062                                        _i2c_sendData 9D3C  
                             ?_HALResetPinMakeInput 0001                                        ?_i2c_waitACK 0001  
                                    __end_of_STable FF07                                 AESEncodeLoRa@useKey 0082  
                        SwTimerSetCallback@callback 0060                                    ?_UpdateFrequency 0060  
                            rn2483_delaysec@counter 0063                                  LORAWAN_Send@buffer 00D5  
                                    __end_of_Random A254                                      __end_of_RxData A830  
                           ?_InitDefault433Channels 0001                                     ?_uint16ToString 00A5  
                        __size_of_TMR_ISR_Lora_Init 0010                            __end_of_ValidateDataRate A554  
                      __end_of_INTERRUPT_Initialize A80E                                        ?_i2c_usdelay 0060  
                    EnableChannels1@channelMaskCntl 0066                      EnableChannels1@channelIndexMax 0068  
                    EnableChannels1@channelIndexMin 0067                                     averageMeasure@i 0074  
               LORAWAN_SetChannelIdStatus@channelId 0066                                    ?_UpdateDutyCycle 0060  
                                    __end_of___fleq 81AE                          __end_of_DIO5_ISR_Lora_Init A832  
                           __end_of_RADIO_GetStatus A7E6                                      __end_of___lmul 91B2  
                                LORAWAN_Send@result 00DA                                    ??_EnableChannels 006F  
                         i2TMR1_WriteTimer@timerVal 0001                                      __end_of___wmul A10E  
                                     ?_TMR_ISR_lora 0001                                    ??_HALSPICSAssert 0060  
               TMR_OverrideRemaining@ticksRemaining 006A                                   ?_RADIO_WritePower 0001  
                                     __pidataCOMRAM A7FE                                     ?_EncodeShiftRow 0060  
                                    ?_AESEncodeLoRa 007E                                   __size_of_TMR1_ISR 0014  
                                 __size_of_TMR3_ISR 002E                                      _ADC_Initialize A554  
                                 __size_of_TMR5_ISR 002E                                  __end_of_ComputeMic 8F24  
                                         Random@max 00A5                                      __end_of_memcpy 8FE6  
                            ?_OSCILLATOR_Initialize 0001                           __end_of_SwTimerSetTimeout 989E  
                            __end_of_TMR1_ReadTimer A276                                      __end_of_memset 9F0E  
                                    __end_of_setSDA A682                                     _SPI2_Initialize A690  
                          ?_PrepareJoinRequestFrame 0001                                  ??_RADIO_WritePower 0064  
                                      _RADIO_SetCRC A76A                               ??_ValidateChannelMask 0062  
                                  ??_ExecuteLinkAdr 0071                               UpdateCfList@frequency 00A5  
                                      _RADIO_RxDone 726E                                        _RADIO_TxDone 65B0  
                               start_initialization 783E                                      _ConfigureRadio 7F62  
                                        eval_poly@d 00A1                                  LORAWAN_RxDone@mhdr 00E2  
                                        eval_poly@n 00A3                                          eval_poly@x 009D  
                                i2___awdiv@quotient 0007                                  LORAWAN_RxDone@temp 00E8  
                                _DIO4_ISR_Lora_Init A832                            __end_ofi2_TMR1_ReadTimer A376  
                    __size_of_TMR_OverrideRemaining 0082                                 _RADIO_RegisterWrite A2D6  
                                      AESCmac@mLast 0194                           ??_CreateAllSoftwareTimers 0061  
                   __size_of_PIN_MANAGER_Initialize 0054                       __end_of_TMR_OverrideRemaining 8664  
                       ?_IncludeMacCommandsResponse 0060                               __end_of_INT1_CallBack A3D6  
                                       __end_of_log 4E22                                        ??_ExtractMic 006F  
              EncryptFRMPayload@bufferToBeEncrypted 009D                                        AESCmac@input 00BE  
                                   ?_GenerateSubkey 0092                        ?_RADIO_SetFrequencyHopPeriod 0060  
                                        ?i2___awdiv 0001                                     LORAWAN_TxDone@i 00D6  
                                    pointAddition@d 0064                               LORAWAN_Init@RxPayload 00AA  
               AssembleEncryptionBlock@frameCounter 006B                             i2TMR_SwapTimer@timerVal 0009  
                             __end_of_INT2_CallBack A3B6                                       ??_RADIO_Reset 0065  
                          __end_of_UpdateDLSettings A482                          SwTimerStart@ticksRemaining 008D  
                                       _adaptString 88C4                              RADIO_WriteMode@newMode 006A  
                          __end_of_ValidateRxOffset A53C                                     adaptString@flag 0065  
                       ??_RADIO_SetChannelFrequency 0064                        __end_of_TMR5_InterruptTicker A7B0  
                       ??_SetCallbackSoftwareTimers 0064                                 ?_DIO4_ISR_Lora_Init 0001  
                                        frexp@value 006C                                 _RADIO_SetModulation A77E  
                     ExecuteNewChannel@channelIndex 00A5                      __end_of_SearchAvailableChannel 68B8  
                                  ?_EnableChannels1 0064                                     i2_TMR_SwapTimer 99A2  
                           __size_of_StartReTxTimer 0152                                __end_of_TMR3ISRClock A7FE  
                                    _TMR3_StopTimer A802                              ?_UpdateCurrentDataRate 0001  
                            ?_UpdateChannelIdStatus 0060                                     ___llmod@divisor 0064  
                        MacExecuteCommands@fOptsLen 00A8                             _RADIO_FSKPacketSent$800 00DB  
                           __end_of_SystemTimerInit A7CA                    __size_of_EUSART2_SetErrorHandler 000A  
                    UpdateChannelIdStatus@statusNew 0060                   __size_of_RADIO_UnhandledInterrupt 0030  
                                   ___llmod@counter 0068                                     _rn2483_delaysec 9962  
                               TMR_SwapTimer@oldVal 003A                           ?_RADIO_UnhandledInterrupt 0001  
                          __size_of_PIN_MANAGER_IOC 000A                                 TMR_SwapTimer@retVal 011E  
                             _RADIO_FSKPayloadReady 7D6C                                   __size_of_i2c_stop 0030  
            __end_of_EUSART2_SetOverrunErrorHandler A742             __size_of_EUSART2_SetOverrunErrorHandler 000A  
                    _EUSART2_SetOverrunErrorHandler A738                      __size_of_HALResetPinMakeOutput 0004  
                     __end_of_HALResetPinMakeOutput A81A                                            ??_Random 00A7  
                                          ??_RxData 0064                                            AESCmac@i 01D9  
                                          AESCmac@j 01D8                                            AESCmac@n 01D7  
                                          AESCmac@x 01C4                                            AESCmac@y 01B4  
                        SwTimerReadValue@ticksCount 008D                                ?_RADIO_RegisterWrite 0062  
                    __end_of_InitDefault433Channels 8A2C                      __end_of_AutomaticReplyCallback A184  
                               RADIO_Init@frequency 007B                            __size_of_TMR1_Initialize 002E  
                              _macEndDevCmdReplyLen FF27                                            ??___fleq 0068  
                                          ??___lmul 009A                                         ??_AESEncode 006B  
                 RADIO_WriteConfiguration@tempValue 00A4                               __size_of_LORAWAN_Init 0062  
                __size_of_AckRetransmissionCallback 011E                               __size_of_LORAWAN_Join 00A4  
                                          ??___wmul 0064                               __size_of_LORAWAN_Send 00F2  
                           __end_of_RADIO_RxTimeout 9DFA                            MacExecuteCommands@buffer 00A6  
                          ??_SetReceptionNotOkState 00B3                              __end_of_ADC_Initialize A56C  
                                    ??_TMR_ISR_lora 002A                                     ??_DIO0_ISR_Lora 0001  
                                       __pdataBANK1 01EF                                         __pdataBANK3 03D0  
                                 _ValidateDataRange 9744                                  __end_of_ExtractMic 953E  
          i2SwTimersInterrupt@ticksToNextTimerEvent 0025              SwTimersInterrupt@ticksToNextTimerEvent 0084  
                                          ??_memcpy 0066                                            ?_ADC_ISR 0001  
                            __size_of_SwTimerCreate 0078                                            ??_memset 0066  
                                          ??_setSDA 0062                                ??_DIO4_ISR_Lora_Init 0060  
                                       ?_timerReset 0001                          __end_of_EXT_INT_Initialize A06C  
                                 _ValidateChannelId A184                                ?_RADIO_SetModulation 0001  
                                       _acuadoriApp 220A                            _RADIO_SetSpreadingFactor A774  
                                _RADIO_RxFSKTimeout 9A5E                                            ?_AESCmac 00BA  
                              _impedenceAcquisition 9B12                              __size_of_TMR1_CallBack 0020  
                                   ??_DIO1_ISR_Lora 0001                                  ?_ValidateDataRange 0001  
                                    _TMR5_StopTimer A7EC                            ValidateRxOffset@rxOffset 0060  
                                      AESEncode@aux 0079                                        AESEncode@key 0069  
                            TMR_GetDeltaTime@retVal 0112                                     ?_TMR1_ReadTimer 0060  
                                       ??_IOCB4_ISR 0001                              __end_of_ConfigureRadio 7FFC  
                                    _LORAWAN_RxDone 00AC                                           ___fladd@a 0078  
                                         ___fladd@b 0074                                  ?_ValidateChannelId 0060  
                            TMR_GetDeltaTime@tmrVal 003C                                      _LORAWAN_TxDone 0BD8  
                                  GPIOAverageRead@i 0073                        __end_of_LORAWAN_SetDeviceEui 9E84  
                        __size_of_ExecuteNewChannel 01EC          LORAWAN_GetMaxPayloadSize@macCommandsLength 0069  
                              __end_of_SwTimerStart 8122                                           ___fldiv@a 00A1  
                                         ___fldiv@b 009D              __end_of_LORAWAN_EnterContinuousReceive 87D2  
           __size_of_LORAWAN_EnterContinuousReceive 007A                      _LORAWAN_EnterContinuousReceive 8758  
                                       __pbssBIGRAM 0528                                            ?_GPIOSet 0060  
                                   ??_DIO2_ISR_Lora 0001                           __size_of_CountfOptsLength 00CA  
                                 CountfOptsLength@i 0067                                           ___flmul@a 0088  
                                         ___flmul@b 0084                                         __pbssCOMRAM 0032  
                        __end_of_DefaultChannels433 FFAA                                           ___flsub@a 0088  
                                         ___flsub@b 0084                          __end_of_DefaultChannels868 FF80  
                                  ??_RADIO_Transmit 00AC                                  LORAWAN_RxTimeout@i 00C2  
                                     __pcstackBANK0 0060                                       __pcstackBANK1 0174  
                               ??_ValidateDataRange 0062                                    _TMR_GetDeltaTime 6166  
                                 __size_of___xxtofl 0144                       EnableChannels@channelMaskCntl 006E  
                           __end_of_RADIO_WriteMode 6CAE                                   ?_GPIODigitalWrite 0060  
           __end_of_UnconfirmedTransmissionCallback 88C4            __size_of_UnconfirmedTransmissionCallback 0078  
                   _UnconfirmedTransmissionCallback 884C                             SearchAvailableChannel@i 00B2  
                               ??_ValidateChannelId 0061                               RADIO_RegisterRead@reg 0062  
                           __end_of_rn2483_GoToIdle A582                     __size_of_UpdateMinMaxChDataRate 00CA  
               LORAWAN_SetChannelIdStatus@statusNew 0064                                           _aesBuffer 015F  
                           INTERRUPT_GetDioStatus@a 0060                              __end_of_TMR3_StopTimer A806  
                                 ?_SetJoinFailState 0001                                 SwTimerStart@timerId 0091  
                          _LORAWAN_GetUplinkCounter A5E2                                      _timerHandler16 75DA  
                                ??_GPIODigitalWrite 0061                                           _capValues 0528  
                     ??_RADIO_SetFrequencyHopPeriod 0062                                _RADIO_SetFSKSyncWord 9D6C  
                       RADIO_SetBandwidth@bandwidth 0060                          __end_of_SwTimerSetCallback 9BE6  
 __end_of_ResetParametersForUnconfirmedTransmission A616  __size_of_ResetParametersForUnconfirmedTransmission 0010  
        ?_ResetParametersForUnconfirmedTransmission 0001         ??_ResetParametersForUnconfirmedTransmission 0060  
         _ResetParametersForUnconfirmedTransmission A606                                   __size_of_isJoined 0020  
                         ??_AssembleEncryptionBlock 0072                               _INT2_InterruptHandler 01EB  
                        ?_rn2483_IdleInitialization 0001                                           _bandwidth FF2E  
                                ??_SetJoinFailState 0063                                          sin@coeff_a FFCE  
                                        sin@coeff_b FFE2                             ?_InitDefault868Channels 0001  
                      __end_of_lightSensAcquisition 958C                                        _LORAWAN_Init 8F24  
                                      _LORAWAN_Join 7E1E                                        _LORAWAN_Send 6F9E  
                            RADIO_FSKPayloadReady@i 00F5                                   _ValidateFrequency 8B16  
                                         __pnvBANK1 01DD                                           __pnvBANK2 02FA  
                            ??_HALResetPinMakeInput 0060                                _RADIO_WriteFrequency 7090  
                            __size_of_pointAddition 0048                                     FillSubKey@carry 0066  
                                  _HALSPICSDeassert A80E                                 __end_of_RADIO_Reset 9816  
                             ??_RADIO_RegisterWrite 0063                                         _clearString 0500  
                                  ?_acquisitionData 00AB                                    ___lwdiv@dividend 0060  
                            _PIN_MANAGER_Initialize 9304                                       FillSubKey@key 0062  
                                ?_ValidateFrequency 0060                                __end_of_UpdateCfList 433C  
               RADIO_WriteFSKFrequencyDeviation@num 0071                                        sinGenStart@d 006A  
                                      sinGenStart@i 006C                                        sinGenStart@t 006D  
                         EnableChannels@channelMask 006C                            __size_of_TMR3_Initialize 002C  
                                         _macBuffer 06B8                             __size_of_averageMeasure 0088  
                                         _dioStatus 0045                           __end_of_ValidateDataRange 978A  
                     RADIO_FSKPayloadReady@irqFlags 00F4                                   _SwTimersInterrupt 69B8  
                                 ??_SwTimersExecute 00DB                                           __pintcode 0008  
                          __size_of_GPIODigitalRead 00BE                                            ?___abdiv 0060  
                  __end_of_TMR1_SetInterruptHandler A71A                                       __pmediumconst FE06  
                           RADIO_Transmit@bufferLen 00AB                             __end_of_SPI2_Initialize A69E  
                                          ?___fladd 0074                                           _deviceEui 03F0  
                                 __size_of_resetSDA 000E                                            ?___fldiv 009D  
                                          ?___awdiv 0060                                           __ptext100 9044  
                                         __ptext101 64A4                                           __ptext110 A7E6  
                                         __ptext102 0BD8                           __end_of_ValidateChannelId A1A8  
                                         __ptext111 A2B6                                           __ptext103 9922  
                                         __ptext200 1B5A                                           __ptext120 A3D6  
                                         __ptext112 3CD4                                           __ptext104 A1CC  
                                         __ptext201 5E00                                           __ptext121 925C  
                                         __ptext113 A018                                           __ptext105 A7E0  
                                         __ptext210 7EC2                                           __ptext202 9358  
                                         __ptext130 7A84                                           __ptext122 9B12  
                                         __ptext114 A5BE                                           __ptext106 8758  
                                         __ptext211 4730                                           __ptext203 9B48  
                                         __ptext131 9D3C                                           __ptext123 590E  
                                         __ptext115 953E                                           __ptext107 A82E  
                                         __ptext220 7090                                           __ptext212 7774  
                                         __ptext204 34AE                                           __ptext140 88C4  
                                         __ptext132 90A2                                           __ptext124 92B0  
                                         __ptext116 9962                                           __ptext108 A606  
                                         __ptext221 8D92                                           __ptext213 93AA  
                                         __ptext205 510A                                           __ptext141 A5D0  
                                         __ptext133 A4D6                                           __ptext125 5B8C  
                                         __ptext117 A10E                                           __ptext109 A666  
                                         __ptext230 A816                                           __ptext222 A2D6  
                                         __ptext214 A79C                                           __ptext206 37AE  
                                         __ptext150 9304                                           __ptext142 A5E2  
                                         __ptext134 A7EC                                           __ptext126 9D0C  
                                         __ptext118 A1EE                                           __ptext231 A81A  
                                         __ptext223 A6AC                                           __ptext215 4AC6  
                                         __ptext207 8F24                                           __ptext151 A69E  
                                         __ptext143 9DFA                                           __ptext135 A7F2  
                                         __ptext127 A674                                           __ptext119 87D2  
                                         __ptext240 69B8                                           __ptext232 526E  
                                         __ptext224 A5F4                                           __ptext216 9BB2  
                                         __ptext208 A656                                           __ptext160 A71A  
                                         __ptext152 A210                                           __ptext144 9C4A  
                                         __ptext136 A802                                           __ptext128 A682  
                                         __ptext241 6166                                           __ptext233 915A  
                                         __ptext225 A80E                                           __ptext217 6BB2  
                                         __ptext209 7352                                           __ptext161 A636  
                                         __ptext153 A616                                           __ptext145 A6FC  
                                         __ptext137 A806                                           __ptext129 A1A8  
                                         __ptext250 5CC6                                           __ptext242 A254  
                                         __ptext234 84DA                                           __ptext226 A812  
                                         __ptext218 A136                                           __ptext170 A74C  
                                         __ptext162 A646                                           __ptext154 A710  
                                         __ptext146 9FC2                                           __ptext138 82C2  
                                         __ptext251 6CAE                                           __ptext243 985A  
                                         __ptext235 A2F6                                           __ptext227 97D0  
                                         __ptext219 A6C6                                           __ptext171 A554  
                                         __ptext163 A80A                                           __ptext155 A7C2  
                                         __ptext147 A706                                           __ptext139 8B82  
                                         __ptext260 855E                                           __ptext252 6DAA  
                                         __ptext244 893C                                           __ptext236 8094  
                                         __ptext228 9D9C                                           __ptext180 A756  
                                         __ptext172 9E56                                           __ptext164 A042  
                                         __ptext156 A830                                           __ptext148 9E28  
                                         __ptext261 A06C                                           __ptext253 6282  
                                         __ptext245 89B4                                           __ptext237 85E2  
                                         __ptext229 A50A                                           __ptext181 A760  
                                         __ptext173 9E84                                           __ptext165 A724  
                                         __ptext157 A832                                           __ptext149 A690  
                                         __ptext270 A4BA                                           __ptext262 9F3C  
                                         __ptext246 9EE0                                           __ptext238 98E0  
                                         __ptext190 3F04                                           __ptext182 A76A  
                                         __ptext174 9EB2                                           __ptext166 A72E  
                                         __ptext158 A834                                           __ptext271 6EA6  
                                         __ptext263 A49E                                           __ptext255 9F0E  
                                         __ptext247 8F86                                           __ptext239 A316  
                                         __ptext191 12D6                                           __ptext183 7F62  
                                         __ptext175 7E1E                                           __ptext167 978A  
                                         __ptext159 A626                                           __ptext280 A822  
                                         __ptext272 68B8                                           __ptext264 A7F8  
                                         __ptext256 A3F4                                           __ptext248 93FC  
                                         __ptext192 7180                                           __ptext184 A774  
                                         __ptext176 A4F0                                           __ptext168 A738  
                                         __ptext281 A83A                                           __ptext273 A356  
                                         __ptext265 A598                                           __ptext257 A7A6  
                                         __ptext249 8A2C                                           __ptext193 8C58  
                                         __ptext185 A77E                                           __ptext177 8CC2  
                                         __ptext169 A742                                           __ptext282 A7D2  
                                         __ptext274 A7B0                                           __ptext266 A336  
                                         __ptext258 A6D2                                           __ptext194 8D2A  
                                         __ptext186 A788                                           __ptext178 67B6  
                                         __ptext283 A3B6                                           __ptext275 A376  
                                         __ptext267 A836                                           __ptext259 75DA  
                                         __ptext195 567A                                           __ptext187 9D6C  
                                         __ptext179 95D8                                           __ptext284 A826  
                                         __ptext276 A81E                                           __ptext268 91B2  
                                         __ptext196 A232                                           __ptext188 8238  
                                         __ptext285 A83C                                           __ptext277 A838  
                                         __ptext269 99A2                                           __ptext197 90FE  
                                         __ptext189 A792                                           __ptext286 A82A  
                                         __ptext278 A7CA                                           __ptext198 9816  
                                         __ptext287 0000                                           __ptext279 A396  
                                         __ptext199 8EC2                                            ?___lbmod 0001  
                                          ?___flmul 0084                                            ?___flsub 0084  
                                          ?___fltol 0060                                   _EncryptFRMPayload 4E22  
                                          ?___lldiv 0060                        RADIO_FSKPacketSent@timeOnAir 00D7  
                     __size_of_UpdateJoinInProgress 001A                                            ?___llmod 0060  
                     __size_of_ExecuteRxTimingSetup 0028                                     ??_AESEncodeLoRa 0082  
          SelectChannelForTransmission@channelIndex 00B5                                            ?___ltdiv 0060  
                   __end_of_PrepareJoinRequestFrame 57CA                                            ?___lwdiv 0060  
                                          ?___lwmod 00A0                                     ?_ADC_Initialize 0001  
                                ?_SwTimersInterrupt 0078                           _RADIO_SetChannelFrequency 8238  
                            __end_of_TMR5_StopTimer A7F2                         __size_of_DIO3_ISR_Lora_Init 0002  
             IncludeMacCommandsResponse@bufferIndex 006D                           _SetCallbackSoftwareTimers 7352  
                                ConfigureRadio@freq 006E                                     sendValue@status 00FB  
                             ??_RADIO_SetModulation 0060                                    ?_RADIO_GetStatus 0001  
                                     ??_sinGenStart 0066                              __end_of_LORAWAN_RxDone 0BD8  
                             ?_impedenceAcquisition 0001                                 ??_ValidateFrequency 0064  
                            __end_of_LORAWAN_TxDone 12D6                                  ?_EncryptFRMPayload 0092  
                      ??_INTERRUPT_InterruptManager 002A                                 averageMeasure@value 0071  
                                  __CFG_PRICLKEN$ON 000000                        __end_of_LORAWAN_PlatformInit A232  
                    __size_of_RADIO_SetLoRaSyncWord 000A                                    _ExecuteDevStatus A6F2  
                     __end_of_RADIO_SetLoRaSyncWord A7A6              IncludeMacCommandsResponse@pBufferIndex 0062  
                        __size_of_SwTimerSetTimeout 0044                         ??_LORAWAN_GetMaxPayloadSize 0068  
                    LORAWAN_LinkCheckConfigure@iCtr 00A8                    ExecuteRxParamSetupReq@dlSettings 00A4  
                                    _AssemblePacket 17D0                                     ?_ConfigureRadio 006E  
                         AssemblePacket@bufferIndex 00D3                         LORAWAN_SetUplinkCounter@ctr 0060  
                        ??_INT2_SetInterruptHandler 0062                                            _BAUDCON2 000F70  
                        __end_ofi2_TMR_GetDeltaTime 69B8                                 ??_SwTimersInterrupt 007C  
                              RADIO_DIO0@dioMapping 00F8                                           _firstSend 0124  
                                 _DutyCycleCallback 2EA8                                           _eval_poly 6AB6  
                           InitDefault433Channels@i 006B                               __end_of_TMR_SwapTimer 9922  
                                      ?_SwTimerStop 0001                                           _msCounter 011C  
                               ??_EncryptFRMPayload 00A0                             __end_ofi2_TMR_SwapTimer 99E2  
                           __size_of_EncKeySchedule 029C                              __end_of_timerHandler16 76AA  
                                AssemblePacket@mhdr 00D0                                    ___lwdiv@quotient 0064  
                                       strncat@from 0062                                  AssemblePacket@port 00C8  
                                       ??i2___awdiv 0005                           __size_of_RADIO_ReadRandom 00A0  
                                       strncat@size 0064                        __size_of_leafSensAcquisition 0028  
                          ConfigureRadioRx@dataRate 0077                                      __size_of_frexp 00B6  
                           __end_of_rn2483_delaysec 99A2                                  _RADIO_ReceiveStart 3CD4  
                                          ?_strncat 0060                                      __size_of_srand 0010  
                          __end_of_LORAWAN_Mainloop 9A20                               ?_RADIO_SetFSKSyncWord 006B  
                              _INTERRUPT_Initialize A80A                                     ?_TMR3_StopTimer 0001  
                                     _SwTimerCreate 8A2C                      __end_of_InitDefault868Channels 89B4  
               IncludeMacCommandsResponse@macBuffer 0060                            ?_RADIO_FHSSChangeChannel 0001  
                     ValidateFrequency@frequencyNew 0060                                       _TMR1_CallBack A336  
                         __end_of_ValidateFrequency 8B82                                    _SwTimerIsRunning A1CC  
                                  _ExecuteLinkCheck 9C18                                 __size_of_timerReset 002C  
                              i2SwTimersInterrupt@i 0029                                            _INT1_ISR A7D2  
                                          _INT2_ISR A7CA                                   EncKeySchedule@key 0060  
                                    ___wmul@product 0064                                            _IOCBbits 000F62  
                                _RADIO_SetBandwidth A792                                            _GPIOInit 5CC6  
           EUSART2_SetErrorHandler@interruptHandler 0060                            __size_of_GPIOAverageRead 007A  
                            ?_RADIO_FSKPayloadReady 0001                   __size_of_INT1_SetInterruptHandler 000A  
                              __end_of_rxWindowSize FF27                               ?_RADIO_WriteFrequency 006D  
                                         _sendValue 8E60                           ?_INT1_SetInterruptHandler 0060  
                                  ?_SystemTimerInit 0001                                           _reloadVal 003E  
                               ?_RADIO_ReceiveStart 00A9                                            _IPR1bits 000F9F  
                                          _IPR2bits 000FA2                                    _SwTimerReadValue 9922  
                                          _PIE1bits 000F9D                                            _PIE2bits 000FA0  
                                          _IPR5bits 000F7F                                    _ExecuteDutyCycle 9208  
                                          _PIE5bits 000F7D                                     _HALDIO5PinValue A6C6  
                              RADIO_DIO1@dioMapping 00C4                           __end_of_SwTimersInterrupt 6AB6  
                                         _sinSignal 0400                                 uint16ToString@value 00A5  
                          __size_of_TMR1_WriteTimer 0020                 __size_of_INTERRUPT_InterruptManager 009C  
                        __end_of_DIO2_ISR_Lora_Init A636                                     ___ltdiv@divisor 0063  
                                          _PIR1bits 000F9E                                    GenerateSubkey@k1 0094  
                                  GenerateSubkey@k2 0096                                            _PIR2bits 000FA1  
                                          _PIR3bits 000FA4                                ConfigureRadioRx@freq 0073  
                        ??_TMR3_SetInterruptHandler 0062                           __end_of_EncryptFRMPayload 4F9E  
                                          _PIR5bits 000F7E                      __size_of_RADIO_WriteFSKBitRate 0068  
                          UpdateReceiveDelays@delay 0066                           LORAWAN_RxDone@bufferIndex 00E7  
                                   ___ltdiv@counter 0069                              __size_of_UpdateTxPower 000A  
                     __end_of_RADIO_WriteFSKBitRate 8D92                                ConfigureRadioTx@freq 0073  
                       UpdateDataRange@dataRangeNew 0060                            __size_of_TMR5_Initialize 0032  
                                          _RCONbits 000FD0                                 ?_RADIO_SetBandwidth 0001  
                SearchAvailableChannel@channelIndex 00A8                                           _rxPayload 010E  
                                  __CFG_WDTPS$32768 000000                              _UpdateMinMaxChDataRate 7774  
                     EncryptFRMPayload@bufferLength 0094                             ValidateDataRange@result 0062  
                                          _SSP2CON1 000F6C                         UpdateDutyCycle@dutyCycleNew 0060  
        ValidateChannelId@allowedForDefaultChannels 0060                       __size_of_FindSmallestDataRate 00C2  
                                          _TMR1_ISR A598                            ConfigureRadioTx@dataRate 0077  
                                          _TMR3_ISR 9F3C                __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                          _TMR5_ISR 9F0E                                __size_of_i2c_waitACK 001A  
                             ValidateTxPower@result 0060                                    ?_RADIO_RxTimeout 0001  
               __size_of_IncludeMacCommandsResponse 0332                                            _SSP2STAT 000F6D  
                      ??_LORAWAN_LinkCheckConfigure 00A0                                   ??_PIN_MANAGER_IOC 0001  
                                 ?_SwClearAllTimers 0001                         __size_of_RADIO_GetPacketSnr 0006  
                               _UpdateReceiveDelays 989E                     __size_of_SetReceptionNotOkState 007A  
                                   ?_TMR5_StopTimer 0001                              __end_of_AssemblePacket 1B5A  
                                   ?_LORAWAN_RxDone 01DA                                    ??_tempConversion 00B8  
                                   ?_LORAWAN_TxDone 00B3                                __size_of_i2c_usdelay 0024  
                                 ??_TMR1_Initialize 0062                                    __size_of_ADC_ISR 0004  
                          tempSensAcquisition@value 00C4                                  ??_SwClearAllTimers 0060  
                                        _ADCON0bits 000FC2                                _TMR5_InterruptTicker A7A6  
                                  ___abdiv@dividend 0066                                  _DIO1_ISR_Lora_Init A636  
                         __end_of_DutyCycleCallback 31AE                                   ___wmul@multiplier 0060  
                                  __size_of_AESCmac 035C                   __size_of_LORAWAN_SetUplinkCounter 0012  
                              ??_RADIO_ReceiveStart 00AB                             ValidateFrequency@result 0064  
                         ?_LORAWAN_SetUplinkCounter 0060                                       ??_timerTick16 0001  
                        __end_of_PrepareSessionKeys 8094                                       _pointAddition 96B6  
                                 ?_ConfigureRadioRx 0073                                   ?_ConfigureRadioTx 0073  
                          __size_of_TMR3_StartTimer 0004                                          ?_eval_poly 009D  
                              RADIO_DIO2@dioMapping 007C                                  AESEncodeLoRa@block 007E  
                                          _Channels 0414                                   i2___awdiv@divisor 0003  
                       __end_of_RADIO_FSKPacketSent 65B0                   __size_of_TMR5_SetInterruptHandler 000A  
                                  __size_of_GPIOSet 00FC                                 __end_of_sinGenStart 5CC6  
                                 i2___awdiv@counter 0005                           ?_TMR5_SetInterruptHandler 0060  
           RADIO_SetSpreadingFactor@spreadingFactor 0060                                  ??_ConfigureRadioRx 0077  
                                ??_ConfigureRadioTx 0077                                ??_RADIO_SetBandwidth 0060  
                             rn2483_delaysec@length 0060                                 ?_DIO1_ISR_Lora_Init 0001  
                     RADIO_SetIQInverted@iqInverted 0060                                     ?_timerHandler16 0001  
                             __size_of_TMR3ISRClock 0006                                    ?_RADIO_WriteMode 0065  
                         LORAWAN_RxDone@computedMic 00EB                                   ___lmul@multiplier 0092  
                                       _INTCON2bits 000FF1                                         _INTCON3bits 000FF0  
                                    ?_SwTimerCreate 0001                                           copy_data0 7852  
                                         copy_data1 7872                                           copy_data2 7892  
                             ?_INTERRUPT_Initialize 0001                             ?_INTERRUPT_GetDioStatus 0001  
                              ?_UpdateReceiveDelays 0001                                    ?_rn2483_GoToIdle 0001  
                       __end_of_RADIO_SetIQInverted A76A                                      ?_TMR1_CallBack 0001  
                              __end_of_TMR_ISR_lora 9208                                         _RADIO_Reset 97D0  
                               ExecuteLinkCheck@ptr 0060                      i2SwTimersInterrupt@timeElapsed 0021  
                                _RADIO_RegisterRead A136                            __size_of_ValidateTxPower 002A  
                           ??_StopAllSoftwareTimers 0061                                      _StartReTxTimer 5528  
                       __end_ofi2_SwTimersInterrupt 6F9E                           _LORAWAN_GetMaxPayloadSize 949E  
                           _EUSART2_SetErrorHandler A74C                          LORAWAN_RxDone@extractedMic 00E3  
                                       AESCmac@flag 01D6                       EncryptFRMPayload@frameCounter 0096  
                                          _i2c_stop 9D0C                                  CheckMcastFlags@hdr 0060  
                                       AESCmac@size 00C0                         _EUSART2_OverrunErrorHandler 02FC  
                          SwTimerSetTimeout@timerId 0075                            SwTimerSetTimeout@timeout 006D  
                             RADIO_WriteMode@opMode 006B                            ??_ExecuteRxParamSetupReq 00A0  
                                        ?_sendValue 0001                 __size_of_LORAWAN_LinkCheckConfigure 015E  
                                         frexp@eptr 0070                                    ??_uint16ToString 00A9  
                      __size_of_tempSensAcquisition 005E                                    ___abdiv@quotient 0065  
           UpdateReceiveWindow2Parameters@frequency 0060                                _LORAWAN_SetDeviceEui 9E56  
                                          __Hrparam 0000                                 ?_RADIO_RegisterRead 0001  
                          __size_of_TMR3_WriteTimer 001C                        __end_of_SystemBlockingWaitMs 9DCC  
            ValidateChannelMaskCntl@channelMaskCntl 0061                                   i2_TMR1_WriteTimer A4BA  
                                         memcpy@tmp 0066          LORAWAN_SetApplicationEui@applicationEuiNew 006B  
                                          __Lrparam 0000                                    ??_EncodeShiftRow 0062  
                              ??_DIO1_ISR_Lora_Init 0062                                   _ADC_GetConversion 925C  
                          __size_of_CheckMcastFlags 007A                                  __CFG_BOREN$SBORDIS 000000  
                             TMR1_ReadTimer@readVal 0064                          __size_of_ValidateDataRange 0046  
                         _ticksToScheduledInterrupt 0052                                   __CFG_P2BMX$PORTD2 000000  
                      ValidateDataRange@dataRateMax 0064                        ValidateDataRange@dataRateMin 0065  
                        __size_of_ValidateChannelId 0024                                    ?_SPI2_Initialize 0001  
                                ?i2_TMR1_WriteTimer 0001                                    __size_of___abdiv 0066  
                           ??_OSCILLATOR_Initialize 0060                              ??_impedenceAcquisition 00AB  
                                ?_ADC_GetConversion 0060                                   ?_ValidateDataRate 0001  
                                  __size_of___fladd 030E                                    __size_of___fldiv 028A  
                                  __size_of___awdiv 0086                                  _ComputeSessionKeys 83D0  
                             __size_of_SwTimerStart 008E                                    __size_of___lbmod 002A  
                                  __size_of___flmul 0354                                    __size_of___flsub 0048  
                                  __size_of___fltol 00BC                                    __size_of___lldiv 0084  
                                  __size_of___llmod 0068                                    __size_of___ltdiv 006C  
                                  __size_of___lwdiv 0054                                    __size_of___lwmod 0044  
                                   ?_AssemblePacket 00C8                                AssemblePacket@buffer 00C9  
                                  SwTimersExecute@i 00DF                               ?_TMR5_InterruptTicker 0001  
                                ??_ValidateDataRate 0060                             __size_of_GPIOAnalogRead 001E  
                           __size_of_GPIOAnalogMode 0114                                   ??_TMR3_Initialize 0062  
                          _TMR1_SetInterruptHandler A710                              _IOCB4_InterruptHandler 01E9  
                                 ??_GPIODigitalRead 0060                                        _TMR3ISRClock A7F8  
                                    ?_pointAddition 0060                                         _radioBuffer 07C7  
                               ??i2_TMR1_WriteTimer 0003     __end_of_ResetParametersForConfirmedTransmission A674  
  __size_of_ResetParametersForConfirmedTransmission 000E            ?_ResetParametersForConfirmedTransmission 0001  
         ??_ResetParametersForConfirmedTransmission 0060             _ResetParametersForConfirmedTransmission A666  
                             _TMR1_InterruptHandler 01E5                                    ??_GenerateSubkey 0098  
                               ??_ADC_GetConversion 0062                                _lightSensAcquisition 953E  
                                  _CountfOptsLength 76AA                                          _HALSPISend A6AC  
                               ?_ComputeSessionKeys 0092                                      _rxWindowOffset FF0F  
                RADIO_UnhandledInterrupt@modulation 0064                                            ___xxtofl 57CA  
                        __end_of_MacExecuteCommands 4544                            __size_of_TMR5_StartTimer 0006  
                              ??_RADIO_RegisterRead 0062                                _EUSART2_ErrorHandler 02FA  
                  __end_of_RADIO_UnhandledInterrupt 9D0C                                       _UpdateTxPower A6DE  
                                   ___lwdiv@divisor 0062                                RADIO_Transmit@buffer 00A9  
                   __end_of_RADIO_FHSSChangeChannel 9AD6                                            _sCounter 011A  
                                   _allocatedTimers 0128                      ?_IOCB4_DefaultInterruptHandler 0001  
                                   ___lwdiv@counter 0066                      __end_of_INTERRUPT_GetDioStatus A5D0  
                                 ?i2_TMR1_ReadTimer 0001                                  _DIO5_ISR_Lora_Init A830  
                                          __ptext10 8122                                            __ptext11 6AB6  
                                          __ptext20 8E60                                            __ptext12 1EB6  
                                          __ptext21 9F6A                                            __ptext13 57CA  
                                        _T1GCONbits 000FCC                                            __ptext30 7BFE  
                                          __ptext22 9CAC                                            __ptext14 7B42  
                                          __ptext31 7430                                            __ptext23 99E2  
                                          __ptext15 966E                                            __ptext40 958C  
                                          __ptext32 96FE                                            __ptext24 7900  
                                          __ptext16 2B9A                                            __ptext41 9DCC  
                                          __ptext33 9A5E                                            __ptext25 2EA8  
                                          __ptext17 3A4A                                            __ptext50 00AC  
                                          __ptext42 9A9A                                            __ptext34 884C  
                                          __ptext26 5A4E                                            __ptext18 96B6  
                                          __ptext51 8AA4                                            __ptext43 81AE  
                                          __ptext35 A5AC                                            __ptext27 A15E  
                                          __ptext19 8456                                            __ptext60 989E  
                                          __ptext52 A466                                            __ptext44 9CDC  
                                          __ptext36 A412                                            __ptext28 5F2A  
                                          __ptext61 A0E6                                            __ptext53 4128  
                                          __ptext45 65B0                                            __ptext37 A42E  
                                          __ptext29 4F9E                                            __ptext70 6396  
                                          __ptext62 53CC                                            __ptext54 5528  
                                          __ptext46 726E                                            __ptext38 A44A  
                                  ?i2_TMR_SwapTimer 0009                                            __ptext71 9A20  
                                          __ptext63 A524                                            __ptext55 8664  
                                          __ptext47 8DFA                                            __ptext39 944E  
                                          __ptext80 A6E8                                            __ptext72 A184  
                                          __ptext64 A582                                            __ptext56 9F96  
                                          __ptext48 7D6C                                            __ptext81 A482  
                                          __ptext73 9C18                                            __ptext65 4544  
                                          __ptext57 9BE6                                            __ptext49 31AE  
                                          __ptext90 A7DA                                            __ptext82 8BEE  
                                          __ptext74 48FC                                            __ptext66 8B16  
                                          __ptext58 433C                                            __ptext91 79C2  
                                          __ptext83 6048                                            __ptext75 9FEE  
                                          __ptext67 9744                                            __ptext59 A0BE  
                                          __ptext92 4E22                                            __ptext84 9208  
                                          __ptext76 A53C                                            __ptext68 9AD6  
                                          __ptext93 834A                                            __ptext85 A6F2  
                                          __ptext77 A296                                            __ptext69 9B7E  
                                          __ptext94 7508                                            __ptext86 6F9E  
                                          __ptext78 9624                                            __ptext95 76AA  
                                          __ptext87 949E                                            __ptext79 A6DE  
                                          __ptext96 94EE                                            __ptext88 17D0  
                                          __ptext97 83D0                                            __ptext89 253C  
                                          __ptext98 7FFC                                            __ptext99 86DE  
                               _tempConversion$6793 00B8                             ExecuteRxTimingSetup@ptr 0067  
                            ??_RADIO_SetFSKSyncWord 006D                               ??_UpdateReceiveDelays 0066  
                             __end_of_LORAWAN_Reset 48FC                              __end_of_StartReTxTimer 567A  
                           ??_UpdateCurrentDataRate 0060                                            _isJoined A276  
                           ??_UpdateChannelIdStatus 0061                                       _sensorsString 03A0  
                          __size_of_UpdateDataRange 010E                              _SetReceptionNotOkState 8664  
                               __end_of_timerTick16 A6DE                                        _SSP2CON1bits 000F6C  
                                  ?_rn2483_delaysec 0060                                 GenerateSubkey@F5972 03D0  
                                      ?_adaptString 0060                                  ??i2_TMR1_ReadTimer 0003  
                         __size_of_RADIO_WritePower 00EE                             __end_of_HALDIO5PinValue A6D2  
                                        _T3GCONbits 000FB4                                    __size_of_strncat 0084  
                           TMR3_WriteTimer@timerVal 0001                                   ?_UpdateDLSettings 0060  
                       __size_of_EUSART2_Initialize 0046                              ConfigureRadio@dataRate 0072  
                                 ?_ValidateRxOffset 0001                          __size_of_ValidateFrequency 006C  
                  __size_of_PrepareJoinRequestFrame 0150                                       CheckFlags@hdr 0060  
                            ??_RADIO_WriteFrequency 0071                                pointAddition@element 0060  
                              GPIODigitalWrite@GPIO 0061                               __size_of_UpdateCfList 0214  
                               ?_DIO5_ISR_Lora_Init 0001                       __size_of_RADIO_SetOutputPower 000A  
                                     __size_of_main 0102                                       __size_of_rand 005C  
                                        _T5GCONbits 000F4D                                   _RADIO_ReceiveStop A2B6  
                                ??_UpdateDLSettings 0061                  _EUSART2_DefaultFramingErrorHandler 000000  
                              _LORAWAN_PlatformInit A210                                     _FskSyncWordBuff FFF2  
                                ??_ValidateRxOffset 0060                           __end_ofi2_TMR1_WriteTimer A4D6  
         IncludeMacCommandsResponse@bIncludeInFopts 0064                                ??_ComputeSessionKeys 0094  
                             ?_LORAWAN_SetDeviceEui 006B                           __end_of_ADC_GetConversion 92B0  
                                     _timerOverflow 0044                                        _SwTimerStart 8094  
                        __size_of_SwTimersInterrupt 00FE                                  ?_RADIO_ReceiveStop 0001  
                        ??_RADIO_SetSpreadingFactor 0060                                            _resetSDA A682  
                             RADIO_TxDone@timeOnAir 00D7                      ValidateChannelMask@channelMask 0060  
                          __size_of_TMR5_WriteTimer 001E                                      _averageMeasure 82C2  
                       __size_of_DIO0_ISR_Lora_Init 0010                          __size_of_EncryptFRMPayload 017C  
                                   GenerateSubkey@i 00B9                                     GenerateSubkey@l 00A9  
    EUSART2_SetOverrunErrorHandler@interruptHandler 0060                             PrepareSessionKeys@index 0071  
                          __end_of_TMR_GetDeltaTime 6282                                  SwTimerStop@timerId 0060  
                                          _swTimers 0300                                   ??_GPIOAverageRead 006F  
                                  ??_TMR1_ReadTimer 0062                                RADIO_RxDone@irqFlags 00F4  
                       __end_of_ValidateChannelMask 966E                                       UpdateCfList@i 00AA  
                __end_of_INTERRUPT_InterruptManager 00A4                          _INTERRUPT_InterruptManager 0008  
                               ??_RADIO_ReceiveStop 006C                         PrepareSessionKeys@networkId 006F  
                                 _RADIO_ReleaseData A7E6                                        ??_timerReset 0060  
                                 ??_TMR1_WriteTimer 0062                                     i2c_usdelay@time 0060  
                                      ?_acuadoriApp 0001                                         _sinGenStart 5B8C  
                                        _RADIO_DIO0 81AE                                          _RADIO_DIO1 958C  
                                        _RADIO_DIO2 944E                                          _RADIO_DIO3 A44A  
                                        _RADIO_DIO4 A42E                                          _RADIO_DIO5 A412  
                                      _SSP2STATbits 000F6D                                ??_DIO5_ISR_Lora_Init 0060  
              __end_of_INT1_DefaultInterruptHandler A83E               __size_of_INT1_DefaultInterruptHandler 0002  
                      _INT1_DefaultInterruptHandler A83C                   __size_of_RADIO_WriteConfiguration 04FA  
                            __end_of_rxWindowOffset FF17                         i2TMR1_ReadTimer@readValHigh 0007  
                                 ??_TMR5_Initialize 0062                          __size_of_DutyCycleCallback 0306  
                           EncryptFRMPayload@buffer 0092                                  ?_RADIO_ReleaseData 0001  
                         ?_RADIO_WriteConfiguration 009E                                            log@coeff FFAA  
                                __end_of_modulation FF0F                                          _RADIO_Init 4AC6  
                             ?_lightSensAcquisition 0001                     ExecuteRxParamSetupReq@frequency 00A0  
                  ??_EUSART2_SetOverrunErrorHandler 0062                     ?_EUSART2_SetOverrunErrorHandler 0060  
                          __size_of_UpdateFrequency 003C                            ?_ValidateChannelMaskCntl 0001  
                        ??_LORAWAN_GetUplinkCounter 0064                                       __roundCounter 0043  
                                        _INTCONbits 000FF2                             ConfigureRadioTx@txPower 0078  
                                       ??_eval_poly 00A5                               acquisitionData@string 00AB  
                          __end_of_HALSPICSDeassert A812                            __size_of_UpdateDutyCycle 0034  
                                    ?_UpdateTxPower 0001                                            memcpy@d1 0060  
                                          memcpy@s1 0062                                      _EncKeySchedule 37AE  
                __size_of_SetCallbackSoftwareTimers 00DE                             __size_of_RxJoinResponse 0032  
                                   ??_SwTimerCreate 0060                                 ExecuteDutyCycle@ptr 0060  
                                      _UpdateCfList 4128                                 ??_RADIO_ReleaseData 0060  
                            ??_INTERRUPT_Initialize 0060                                            memset@p1 0060  
                                   ??_TMR1_CallBack 002A                                __size_of_SwTimerStop 0020  
                                  _RADIO_ReadRandom 7EC2                           ??_EUSART2_SetErrorHandler 0062  
                                _EXT_INT_Initialize A042                                     ?_StartReTxTimer 0001  
                             _TMR_OverrideRemaining 85E2                                   ??_TMR3_StartTimer 0060  
                                          intlevel2 0000                      RADIO_ReceiveStart@rxWindowSize 00A9  
                         __end_of_RADIO_ReceiveStop A2D6                                     _SwTimersExecute 7900  
               SwTimerSetCallback@callbackParameter 0062                                         FillSubKey@i 0067  
                               _sensorsStringLength 01F8                       RADIO_WriteFrequency@frequency 006D  
                                  ___lwmod@dividend 00A0                               ?_LORAWAN_PlatformInit 0001  
                                  ___lldiv@dividend 0060                            __end_of_ExecuteDevStatus A6FC  
                           ?_PIN_MANAGER_Initialize 0001                         ??_rn2483_IdleInitialization 0060  
                                _DefaultChannels433 FF80                                  __end_of_timerReset 9F96  
                                _DefaultChannels868 FF48                                         ??_sendValue 00FA  
                               ?_EXT_INT_Initialize 0001                                        ___abdiv@sign 0064  
                          UpdateDutyCycle@channelId 0062                              __end_of_averageMeasure 834A  
                                        _RCSTA2bits 000F71                              GenerateSubkey@const_Rb 0099  
                   __size_of_ExecuteRxParamSetupReq 015C                                           strncat@cp 0066  
                                         strncat@to 0060                                    ??_ADC_Initialize 0060  
                         UpdateJoinInProgress@state 0060                                   ??_ValidateTxPower 0060  
                               _LORAWAN_TxDone$1673 00BD                                 _LORAWAN_TxDone$1674 00C1  
                                 _LORAWAN_GetStatus 9C7C                           __size_of_GPIODigitalWrite 00FC  
                               _LORAWAN_TxDone$6790 00CA                  __end_of_LORAWAN_LinkCheckConfigure 53CC  
                         __end_of_RADIO_ReleaseData A7EC                          _LORAWAN_LinkCheckConfigure 526E  
                                __end_of_txPower433 FF42                            __size_of_EnableChannels1 006A  
                                __end_of_txPower868 FF48                               _HALResetPinMakeOutput A816  
                          ??_HALResetPinOutputValue 0060                              __size_of_INT1_CallBack 0020  
                         RADIO_WriteConfiguration@i 00A3                                 _leafSensAcquisition A10E  
                         ExecuteRxTimingSetup@delay 0069                                    AESEncodeLoRa@key 0080  
                         __size_of_SetJoinFailState 002C                    LORAWAN_LinkCheckConfigure@period 009E  
                                  ??_ConfigureRadio 0072      EUSART2_SetFramingErrorHandler@interruptHandler 0060  
                                ?_LORAWAN_GetStatus 0060                                  _SwTimerSetCallback 9BB2  
       __end_of_UpdateRetransmissionAckTimeoutState 8B16        __size_of_UpdateRetransmissionAckTimeoutState 0072  
              ?_UpdateRetransmissionAckTimeoutState 0001               ??_UpdateRetransmissionAckTimeoutState 0092  
               _UpdateRetransmissionAckTimeoutState 8AA4                              ??_TMR5_InterruptTicker 0009  
                                 RADIO_ReadRandom@i 0071                        SearchAvailableChannel@result 00AF  
                             RADIO_WritePower@paDac 0065                                   ??_TMR3_WriteTimer 0003  
                                   ??_pointAddition 0062                              __size_of_INT2_CallBack 0020  
                       __size_of_DIO4_ISR_Lora_Init 0002                               __end_of_DIO0_ISR_Lora A82A  
                          __end_of_SwTimerIsRunning A1EE                                   ??_CheckMcastFlags 0062  
                          __end_of_ExecuteLinkCheck 9C4A                               RADIO_WritePower@power 0066  
                                  _RADIO_TxDone$796 00DB                            ?_CreateAllSoftwareTimers 0001  
                  RADIO_WriteMode@currentModulation 0067                                ??_EXT_INT_Initialize 0062  
                      RADIO_SetFSKSyncWord@syncWord 006B                                        _rxWindowSize FF1F  
                               ??_LORAWAN_GetStatus 0064                              __end_of_EncKeySchedule 3A4A  
                     ?_INT1_DefaultInterruptHandler 0001                               __end_of_DIO1_ISR_Lora A826  
                               ?_SwTimerSetCallback 0060                            __end_of_SwTimerReadValue 9962  
                                  ___lldiv@quotient 0068                                         ?_HALSPISend 0001  
                          __end_of_ExecuteDutyCycle 925C                                     ___lwmod@divisor 00A2  
                                       _timerTick16 A6D2              __end_of_UpdateReceiveWindow2Parameters A598  
           __size_of_UpdateReceiveWindow2Parameters 0016                      _UpdateReceiveWindow2Parameters A582  
                           UpdateTxPower@txPowerNew 0060                                     ___lwmod@counter 00A4  
                   _LORAWAN_LinkCheckConfigure$2499 00A4                                    ??_TMR3_StopTimer 0060  
                  __end_of_INT1_SetInterruptHandler A738                        FindSmallestDataRate@dataRate 0063  
                     LORAWAN_Join@activationTypeNew 00DC                               __size_of_TMR_ISR_lora 0056  
                                 __CFG_T3CMX$PORTC0 000000                               __end_of_DIO2_ISR_Lora A822  
                              _SystemBlockingWaitMs 9D9C                               FindSmallestDataRate@i 0062  
                ComputeSessionKeys@joinAcceptBuffer 0092                             __size_of_EnableChannels 001C  
                      __end_of_UpdateJoinInProgress A50A                        __end_of_ExecuteRxTimingSetup A0E6  
                           __size_of_HALSPICSAssert 0004                                ?_leafSensAcquisition 0001  
                           __end_of_FskSyncWordBuff FFF5                  __size_of_LORAWAN_SetApplicationEui 002E  
          __end_of_RADIO_WriteFSKFrequencyDeviation 8CC2           __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                ??_RADIO_WriteFSKFrequencyDeviation 0071                   ?_RADIO_WriteFSKFrequencyDeviation 006D  
                  _RADIO_WriteFSKFrequencyDeviation 8C58                  __size_of_LORAWAN_SetApplicationKey 002E  
                                     ___fladd@signs 0080                                    ExtractMic@buffer 006B  
                        ?_LORAWAN_SetApplicationEui 006B                             ??_RADIO_FSKPayloadReady 00F4  
                          UpdateDataRange@channelId 0062                          ?_LORAWAN_SetApplicationKey 006B  
                                 ??_TMR5_StartTimer 0060                            _RADIO_UnhandledInterrupt 9CDC  
                                  ?_HALDIO5PinValue 0001                      __end_of_PIN_MANAGER_Initialize 9358  
                                 ?_LORAWAN_Mainloop 0001                         __end_of_RADIO_RegisterWrite A2F6  
                           __size_of_ExecuteLinkAdr 01CA                                  _eusart2RxLastError 0126  
                      RADIO_WriteFSKBitRate@bitRate 006D                                        ___fladd@aexp 0081  
                                      ___fladd@bexp 0082                                  i2_TMR_GetDeltaTime 68B8  
                               GPIOAverageRead@GPIO 0072                                     RADIO_SetCRC@crc 0060  
                                 __CFG_FOSC$INTIO67 000000                              tempConversion@adcValue 00B6  
                            ??_LORAWAN_SetDeviceEui 006D                                     _PIN_MANAGER_IOC A7B0  
                               RADIO_WritePower@ocp 0064                                  ??_LORAWAN_Mainloop 00FA  
                                  i2c_sdaWrite@data 0062                          __size_ofi2_TMR1_WriteTimer 001C  
                              ??_SwTimerSetCallback 0063                                     ?_averageMeasure 006A  
                         __end_of_LORAWAN_GetStatus 9CAC                          __size_of_ADC_GetConversion 0054  
                                 ??_UpdateDataRange 0061                             ?_UpdateMinMaxChDataRate 0001  
                                   _TMR1_Initialize 9E28                    RADIO_WriteConfiguration@regValue 00A8  
                           i2TMR1_ReadTimer@readVal 0005                                  _RadioConfiguration 0129  
                                     ExtractMic@mic 0071                                   _LORAWAN_RxTimeout 31AE  
                                  ??_TMR5_StopTimer 0060                         __end_of_RADIO_SetModulation A788  
                  __end_of_LORAWAN_SetUplinkCounter A5E2                       __size_of_HALResetPinMakeInput 0004  
                       __size_of_RADIO_RxFSKTimeout 003C                                    ??_LORAWAN_RxDone 00DB  
                               ?i2_TMR_GetDeltaTime 0009  
