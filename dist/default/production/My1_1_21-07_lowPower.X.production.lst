

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul 28 09:33:51 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1,group=2
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1,group=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1,group=2
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1,group=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1
   257                           	psect	text232,global,reloc=2,class=CODE,delta=1
   258                           	psect	text233,global,reloc=2,class=CODE,delta=1,group=1
   259                           	psect	text234,global,reloc=2,class=CODE,delta=1,group=1
   260                           	psect	text235,global,reloc=2,class=CODE,delta=1
   261                           	psect	text236,global,reloc=2,class=CODE,delta=1
   262                           	psect	text237,global,reloc=2,class=CODE,delta=1
   263                           	psect	text238,global,reloc=2,class=CODE,delta=1
   264                           	psect	text239,global,reloc=2,class=CODE,delta=1
   265                           	psect	text240,global,reloc=2,class=CODE,delta=1
   266                           	psect	text241,global,reloc=2,class=CODE,delta=1
   267                           	psect	text242,global,reloc=2,class=CODE,delta=1
   268                           	psect	text243,global,reloc=2,class=CODE,delta=1
   269                           	psect	text244,global,reloc=2,class=CODE,delta=1
   270                           	psect	text245,global,reloc=2,class=CODE,delta=1
   271                           	psect	text246,global,reloc=2,class=CODE,delta=1,group=2
   272                           	psect	text247,global,reloc=2,class=CODE,delta=1,group=2
   273                           	psect	text248,global,reloc=2,class=CODE,delta=1
   274                           	psect	text249,global,reloc=2,class=CODE,delta=1
   275                           	psect	text250,global,reloc=2,class=CODE,delta=1
   276                           	psect	text251,global,reloc=2,class=CODE,delta=1
   277                           	psect	text252,global,reloc=2,class=CODE,delta=1
   278                           	psect	text253,global,reloc=2,class=CODE,delta=1
   279                           	psect	text254,global,reloc=2,class=CODE,delta=1
   280                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   281                           	psect	text256,global,reloc=2,class=CODE,delta=1
   282                           	psect	text257,global,reloc=2,class=CODE,delta=1
   283                           	psect	text258,global,reloc=2,class=CODE,delta=1
   284                           	psect	text259,global,reloc=2,class=CODE,delta=1
   285                           	psect	text260,global,reloc=2,class=CODE,delta=1
   286                           	psect	text261,global,reloc=2,class=CODE,delta=1
   287                           	psect	text262,global,reloc=2,class=CODE,delta=1
   288                           	psect	text263,global,reloc=2,class=CODE,delta=1
   289                           	psect	text264,global,reloc=2,class=CODE,delta=1,group=1
   290                           	psect	text265,global,reloc=2,class=CODE,delta=1
   291                           	psect	text266,global,reloc=2,class=CODE,delta=1
   292                           	psect	text267,global,reloc=2,class=CODE,delta=1
   293                           	psect	text268,global,reloc=2,class=CODE,delta=1
   294                           	psect	text269,global,reloc=2,class=CODE,delta=1
   295                           	psect	text270,global,reloc=2,class=CODE,delta=1
   296                           	psect	text271,global,reloc=2,class=CODE,delta=1
   297                           	psect	text272,global,reloc=2,class=CODE,delta=1
   298                           	psect	text273,global,reloc=2,class=CODE,delta=1
   299                           	psect	text274,global,reloc=2,class=CODE,delta=1
   300                           	psect	text275,global,reloc=2,class=CODE,delta=1
   301                           	psect	text276,global,reloc=2,class=CODE,delta=1
   302                           	psect	text277,global,reloc=2,class=CODE,delta=1
   303                           	psect	text278,global,reloc=2,class=CODE,delta=1
   304                           	psect	text279,global,reloc=2,class=CODE,delta=1
   305                           	psect	text280,global,reloc=2,class=CODE,delta=1
   306                           	psect	text281,global,reloc=2,class=CODE,delta=1
   307                           	psect	text282,global,reloc=2,class=CODE,delta=1
   308                           	psect	text283,global,reloc=2,class=CODE,delta=1
   309                           	psect	text284,global,reloc=2,class=CODE,delta=1
   310                           	psect	text285,global,reloc=2,class=CODE,delta=1
   311                           	psect	text286,global,reloc=2,class=CODE,delta=1
   312                           	psect	text287,global,reloc=2,class=CODE,delta=1
   313                           	psect	text288,global,reloc=2,class=CODE,delta=1
   314                           	psect	text289,global,reloc=2,class=CODE,delta=1
   315                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   316                           	psect	text290,global,reloc=2,class=CODE,delta=1
   317                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   318                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   319  0000                     
   320                           ; Version 2.05
   321                           ; Generated 20/12/2018 GMT
   322                           ; 
   323                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   324                           ; All rights reserved.
   325                           ; 
   326                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   327                           ; 
   328                           ; Redistribution and use in source and binary forms, with or without modification, are
   329                           ; permitted provided that the following conditions are met:
   330                           ; 
   331                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   332                           ;        conditions and the following disclaimer.
   333                           ; 
   334                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   335                           ;        of conditions and the following disclaimer in the documentation and/or other
   336                           ;        materials provided with the distribution.
   337                           ; 
   338                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   339                           ;        software without specific prior written permission.
   340                           ; 
   341                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   342                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   343                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   344                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   345                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   346                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   347                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   348                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   349                           ; 
   350                           ; 
   351                           ; Code-generator required, PIC18LF46K22 Definitions
   352                           ; 
   353                           ; SFR Addresses
   354  0000                     
   355 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
   356  0000                     
   357 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
   358  0000                     
   359 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
   360  0000                     
   361 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   362 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   363 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   364 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   365 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   366 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   367 ;;_LORAWAN_LinkCheckCallback$2513	offset	0
   368 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   369 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   370 ;;_DutyCycleCallback$1859	offset	0
   371 ;;DutyCycleCallback@minim	offset	4
   372 ;;DutyCycleCallback@i	offset	8
   373 ;;DutyCycleCallback@found	offset	9
   374 ;;DutyCycleCallback@param	offset=-1 (param)
   375 ;;AutomaticReplyCallback@param	offset=-1 (param)
   376 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   377 ;;AckRetransmissionCallback@param	offset=-1 (param)
   378 ;;_param	offset=-1 (param)
   379 ;;_UpdateJoinSuccessState$2530	offset	0
   380 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   381                           
   382                           	psect	idataCOMRAM
   383  00A8C4                     __pidataCOMRAM:
   384                           	opt callstack 0
   385                           
   386                           ;initializer for _ticksToScheduledInterrupt
   387  00A8C4  FFFF               	dw	65535
   388  00A8C6  FFFF               	dw	65535
   389                           
   390                           	psect	idataBANK1
   391  00A784                     __pidataBANK1:
   392                           	opt callstack 0
   393                           
   394                           ;initializer for _randx
   395  00A784  0001               	dw	1
   396  00A786  0000               	dw	0
   397                           
   398                           ;initializer for _pulseSignal
   399  00A788  0222               	dw	546
   400  00A78A  0208               	dw	520
   401                           
   402                           ;initializer for _address
   403  00A78C  90                 	db	144
   404                           
   405                           ;initializer for _sensorsStringLength
   406  00A78D  0A                 	db	10
   407                           
   408                           ;initializer for _stringValueLength
   409  00A78E  05                 	db	5
   410                           
   411                           ;initializer for _stringLength
   412  00A78F  05                 	db	5
   413                           
   414                           	psect	idataBANK3
   415  00A14A                     __pidataBANK3:
   416                           	opt callstack 0
   417                           
   418                           ;initializer for GenerateSubkey@F5972
   419  00A14A  00                 	db	0
   420  00A14B  00                 	db	0
   421  00A14C  00                 	db	0
   422  00A14D  00                 	db	0
   423  00A14E  00                 	db	0
   424  00A14F  00                 	db	0
   425  00A150  00                 	db	0
   426  00A151  00                 	db	0
   427  00A152  00                 	db	0
   428  00A153  00                 	db	0
   429  00A154  00                 	db	0
   430  00A155  00                 	db	0
   431  00A156  00                 	db	0
   432  00A157  00                 	db	0
   433  00A158  00                 	db	0
   434  00A159  87                 	db	135
   435                           
   436                           ;initializer for _appKey
   437  00A15A  4D                 	db	77
   438  00A15B  49                 	db	73
   439  00A15C  B5                 	db	181
   440  00A15D  62                 	db	98
   441  00A15E  1C                 	db	28
   442  00A15F  5F                 	db	95
   443  00A160  F5                 	db	245
   444  00A161  24                 	db	36
   445  00A162  78                 	db	120
   446  00A163  BE                 	db	190
   447  00A164  95                 	db	149
   448  00A165  9E                 	db	158
   449  00A166  86                 	db	134
   450  00A167  D3                 	db	211
   451  00A168  02                 	db	2
   452  00A169  8E                 	db	142
   453                           
   454                           ;initializer for _deviceEui
   455  00A16A  C6                 	db	198
   456  00A16B  51                 	db	81
   457  00A16C  F7                 	db	247
   458  00A16D  3A                 	db	58
   459  00A16E  E7                 	db	231
   460  00A16F  A8                 	db	168
   461  00A170  6F                 	db	111
   462  00A171  A4                 	db	164
   463                           
   464                           	psect	mediumconst
   465  00FE06                     __pmediumconst:
   466                           	opt callstack 0
   467  00FE06  00                 	db	0
   468  00FE07                     _STable:
   469                           	opt callstack 0
   470  00FE07  63                 	db	99
   471  00FE08  7C                 	db	124
   472  00FE09  77                 	db	119
   473  00FE0A  7B                 	db	123
   474  00FE0B  F2                 	db	242
   475  00FE0C  6B                 	db	107
   476  00FE0D  6F                 	db	111
   477  00FE0E  C5                 	db	197
   478  00FE0F  30                 	db	48
   479  00FE10  01                 	db	1
   480  00FE11  67                 	db	103
   481  00FE12  2B                 	db	43
   482  00FE13  FE                 	db	254
   483  00FE14  D7                 	db	215
   484  00FE15  AB                 	db	171
   485  00FE16  76                 	db	118
   486  00FE17  CA                 	db	202
   487  00FE18  82                 	db	130
   488  00FE19  C9                 	db	201
   489  00FE1A  7D                 	db	125
   490  00FE1B  FA                 	db	250
   491  00FE1C  59                 	db	89
   492  00FE1D  47                 	db	71
   493  00FE1E  F0                 	db	240
   494  00FE1F  AD                 	db	173
   495  00FE20  D4                 	db	212
   496  00FE21  A2                 	db	162
   497  00FE22  AF                 	db	175
   498  00FE23  9C                 	db	156
   499  00FE24  A4                 	db	164
   500  00FE25  72                 	db	114
   501  00FE26  C0                 	db	192
   502  00FE27  B7                 	db	183
   503  00FE28  FD                 	db	253
   504  00FE29  93                 	db	147
   505  00FE2A  26                 	db	38
   506  00FE2B  36                 	db	54
   507  00FE2C  3F                 	db	63
   508  00FE2D  F7                 	db	247
   509  00FE2E  CC                 	db	204
   510  00FE2F  34                 	db	52
   511  00FE30  A5                 	db	165
   512  00FE31  E5                 	db	229
   513  00FE32  F1                 	db	241
   514  00FE33  71                 	db	113
   515  00FE34  D8                 	db	216
   516  00FE35  31                 	db	49
   517  00FE36  15                 	db	21
   518  00FE37  04                 	db	4
   519  00FE38  C7                 	db	199
   520  00FE39  23                 	db	35
   521  00FE3A  C3                 	db	195
   522  00FE3B  18                 	db	24
   523  00FE3C  96                 	db	150
   524  00FE3D  05                 	db	5
   525  00FE3E  9A                 	db	154
   526  00FE3F  07                 	db	7
   527  00FE40  12                 	db	18
   528  00FE41  80                 	db	128
   529  00FE42  E2                 	db	226
   530  00FE43  EB                 	db	235
   531  00FE44  27                 	db	39
   532  00FE45  B2                 	db	178
   533  00FE46  75                 	db	117
   534  00FE47  09                 	db	9
   535  00FE48  83                 	db	131
   536  00FE49  2C                 	db	44
   537  00FE4A  1A                 	db	26
   538  00FE4B  1B                 	db	27
   539  00FE4C  6E                 	db	110
   540  00FE4D  5A                 	db	90
   541  00FE4E  A0                 	db	160
   542  00FE4F  52                 	db	82
   543  00FE50  3B                 	db	59
   544  00FE51  D6                 	db	214
   545  00FE52  B3                 	db	179
   546  00FE53  29                 	db	41
   547  00FE54  E3                 	db	227
   548  00FE55  2F                 	db	47
   549  00FE56  84                 	db	132
   550  00FE57  53                 	db	83
   551  00FE58  D1                 	db	209
   552  00FE59  00                 	db	0
   553  00FE5A  ED                 	db	237
   554  00FE5B  20                 	db	32
   555  00FE5C  FC                 	db	252
   556  00FE5D  B1                 	db	177
   557  00FE5E  5B                 	db	91
   558  00FE5F  6A                 	db	106
   559  00FE60  CB                 	db	203
   560  00FE61  BE                 	db	190
   561  00FE62  39                 	db	57
   562  00FE63  4A                 	db	74
   563  00FE64  4C                 	db	76
   564  00FE65  58                 	db	88
   565  00FE66  CF                 	db	207
   566  00FE67  D0                 	db	208
   567  00FE68  EF                 	db	239
   568  00FE69  AA                 	db	170
   569  00FE6A  FB                 	db	251
   570  00FE6B  43                 	db	67
   571  00FE6C  4D                 	db	77
   572  00FE6D  33                 	db	51
   573  00FE6E  85                 	db	133
   574  00FE6F  45                 	db	69
   575  00FE70  F9                 	db	249
   576  00FE71  02                 	db	2
   577  00FE72  7F                 	db	127
   578  00FE73  50                 	db	80
   579  00FE74  3C                 	db	60
   580  00FE75  9F                 	db	159
   581  00FE76  A8                 	db	168
   582  00FE77  51                 	db	81
   583  00FE78  A3                 	db	163
   584  00FE79  40                 	db	64
   585  00FE7A  8F                 	db	143
   586  00FE7B  92                 	db	146
   587  00FE7C  9D                 	db	157
   588  00FE7D  38                 	db	56
   589  00FE7E  F5                 	db	245
   590  00FE7F  BC                 	db	188
   591  00FE80  B6                 	db	182
   592  00FE81  DA                 	db	218
   593  00FE82  21                 	db	33
   594  00FE83  10                 	db	16
   595  00FE84  FF                 	db	255
   596  00FE85  F3                 	db	243
   597  00FE86  D2                 	db	210
   598  00FE87  CD                 	db	205
   599  00FE88  0C                 	db	12
   600  00FE89  13                 	db	19
   601  00FE8A  EC                 	db	236
   602  00FE8B  5F                 	db	95
   603  00FE8C  97                 	db	151
   604  00FE8D  44                 	db	68
   605  00FE8E  17                 	db	23
   606  00FE8F  C4                 	db	196
   607  00FE90  A7                 	db	167
   608  00FE91  7E                 	db	126
   609  00FE92  3D                 	db	61
   610  00FE93  64                 	db	100
   611  00FE94  5D                 	db	93
   612  00FE95  19                 	db	25
   613  00FE96  73                 	db	115
   614  00FE97  60                 	db	96
   615  00FE98  81                 	db	129
   616  00FE99  4F                 	db	79
   617  00FE9A  DC                 	db	220
   618  00FE9B  22                 	db	34
   619  00FE9C  2A                 	db	42
   620  00FE9D  90                 	db	144
   621  00FE9E  88                 	db	136
   622  00FE9F  46                 	db	70
   623  00FEA0  EE                 	db	238
   624  00FEA1  B8                 	db	184
   625  00FEA2  14                 	db	20
   626  00FEA3  DE                 	db	222
   627  00FEA4  5E                 	db	94
   628  00FEA5  0B                 	db	11
   629  00FEA6  DB                 	db	219
   630  00FEA7  E0                 	db	224
   631  00FEA8  32                 	db	50
   632  00FEA9  3A                 	db	58
   633  00FEAA  0A                 	db	10
   634  00FEAB  49                 	db	73
   635  00FEAC  06                 	db	6
   636  00FEAD  24                 	db	36
   637  00FEAE  5C                 	db	92
   638  00FEAF  C2                 	db	194
   639  00FEB0  D3                 	db	211
   640  00FEB1  AC                 	db	172
   641  00FEB2  62                 	db	98
   642  00FEB3  91                 	db	145
   643  00FEB4  95                 	db	149
   644  00FEB5  E4                 	db	228
   645  00FEB6  79                 	db	121
   646  00FEB7  E7                 	db	231
   647  00FEB8  C8                 	db	200
   648  00FEB9  37                 	db	55
   649  00FEBA  6D                 	db	109
   650  00FEBB  8D                 	db	141
   651  00FEBC  D5                 	db	213
   652  00FEBD  4E                 	db	78
   653  00FEBE  A9                 	db	169
   654  00FEBF  6C                 	db	108
   655  00FEC0  56                 	db	86
   656  00FEC1  F4                 	db	244
   657  00FEC2  EA                 	db	234
   658  00FEC3  65                 	db	101
   659  00FEC4  7A                 	db	122
   660  00FEC5  AE                 	db	174
   661  00FEC6  08                 	db	8
   662  00FEC7  BA                 	db	186
   663  00FEC8  78                 	db	120
   664  00FEC9  25                 	db	37
   665  00FECA  2E                 	db	46
   666  00FECB  1C                 	db	28
   667  00FECC  A6                 	db	166
   668  00FECD  B4                 	db	180
   669  00FECE  C6                 	db	198
   670  00FECF  E8                 	db	232
   671  00FED0  DD                 	db	221
   672  00FED1  74                 	db	116
   673  00FED2  1F                 	db	31
   674  00FED3  4B                 	db	75
   675  00FED4  BD                 	db	189
   676  00FED5  8B                 	db	139
   677  00FED6  8A                 	db	138
   678  00FED7  70                 	db	112
   679  00FED8  3E                 	db	62
   680  00FED9  B5                 	db	181
   681  00FEDA  66                 	db	102
   682  00FEDB  48                 	db	72
   683  00FEDC  03                 	db	3
   684  00FEDD  F6                 	db	246
   685  00FEDE  0E                 	db	14
   686  00FEDF  61                 	db	97
   687  00FEE0  35                 	db	53
   688  00FEE1  57                 	db	87
   689  00FEE2  B9                 	db	185
   690  00FEE3  86                 	db	134
   691  00FEE4  C1                 	db	193
   692  00FEE5  1D                 	db	29
   693  00FEE6  9E                 	db	158
   694  00FEE7  E1                 	db	225
   695  00FEE8  F8                 	db	248
   696  00FEE9  98                 	db	152
   697  00FEEA  11                 	db	17
   698  00FEEB  69                 	db	105
   699  00FEEC  D9                 	db	217
   700  00FEED  8E                 	db	142
   701  00FEEE  94                 	db	148
   702  00FEEF  9B                 	db	155
   703  00FEF0  1E                 	db	30
   704  00FEF1  87                 	db	135
   705  00FEF2  E9                 	db	233
   706  00FEF3  CE                 	db	206
   707  00FEF4  55                 	db	85
   708  00FEF5  28                 	db	40
   709  00FEF6  DF                 	db	223
   710  00FEF7  8C                 	db	140
   711  00FEF8  A1                 	db	161
   712  00FEF9  89                 	db	137
   713  00FEFA  0D                 	db	13
   714  00FEFB  BF                 	db	191
   715  00FEFC  E6                 	db	230
   716  00FEFD  42                 	db	66
   717  00FEFE  68                 	db	104
   718  00FEFF  41                 	db	65
   719  00FF00  99                 	db	153
   720  00FF01  2D                 	db	45
   721  00FF02  0F                 	db	15
   722  00FF03  B0                 	db	176
   723  00FF04  54                 	db	84
   724  00FF05  BB                 	db	187
   725  00FF06  16                 	db	22
   726  00FF07                     __end_of_STable:
   727                           	opt callstack 0
   728  00FF07                     _modulation:
   729                           	opt callstack 0
   730  00FF07  01                 	db	1
   731  00FF08  01                 	db	1
   732  00FF09  01                 	db	1
   733  00FF0A  01                 	db	1
   734  00FF0B  01                 	db	1
   735  00FF0C  01                 	db	1
   736  00FF0D  01                 	db	1
   737  00FF0E  00                 	db	0
   738  00FF0F                     __end_of_modulation:
   739                           	opt callstack 0
   740  00FF0F                     _rxWindowOffset:
   741                           	opt callstack 0
   742  00FF0F  DF                 	db	223
   743  00FF10  CE                 	db	206
   744  00FF11  C6                 	db	198
   745  00FF12  C2                 	db	194
   746  00FF13  BE                 	db	190
   747  00FF14  BC                 	db	188
   748  00FF15  F1                 	db	241
   749  00FF16  FE                 	db	254
   750  00FF17                     __end_of_rxWindowOffset:
   751                           	opt callstack 0
   752  00FF17                     _maxPayloadSize:
   753                           	opt callstack 0
   754  00FF17  33                 	db	51
   755  00FF18  33                 	db	51
   756  00FF19  33                 	db	51
   757  00FF1A  73                 	db	115
   758  00FF1B  F2                 	db	242
   759  00FF1C  F2                 	db	242
   760  00FF1D  F2                 	db	242
   761  00FF1E  38                 	db	56
   762  00FF1F                     __end_of_maxPayloadSize:
   763                           	opt callstack 0
   764  00FF1F                     _rxWindowSize:
   765                           	opt callstack 0
   766  00FF1F  08                 	db	8
   767  00FF20  0A                 	db	10
   768  00FF21  0E                 	db	14
   769  00FF22  1A                 	db	26
   770  00FF23  31                 	db	49
   771  00FF24  58                 	db	88
   772  00FF25  3C                 	db	60
   773  00FF26  08                 	db	8
   774  00FF27                     __end_of_rxWindowSize:
   775                           	opt callstack 0
   776  00FF27                     _macEndDevCmdReplyLen:
   777                           	opt callstack 0
   778  00FF27  01                 	db	1
   779  00FF28  02                 	db	2
   780  00FF29  01                 	db	1
   781  00FF2A  02                 	db	2
   782  00FF2B  03                 	db	3
   783  00FF2C  02                 	db	2
   784  00FF2D  01                 	db	1
   785  00FF2E                     __end_of_macEndDevCmdReplyLen:
   786                           	opt callstack 0
   787  00FF2E                     _bandwidth:
   788                           	opt callstack 0
   789  00FF2E  07                 	db	7
   790  00FF2F  07                 	db	7
   791  00FF30  07                 	db	7
   792  00FF31  07                 	db	7
   793  00FF32  07                 	db	7
   794  00FF33  07                 	db	7
   795  00FF34  08                 	db	8
   796  00FF35                     __end_of_bandwidth:
   797                           	opt callstack 0
   798  00FF35                     _spreadingFactor:
   799                           	opt callstack 0
   800  00FF35  0C                 	db	12
   801  00FF36  0B                 	db	11
   802  00FF37  0A                 	db	10
   803  00FF38  09                 	db	9
   804  00FF39  08                 	db	8
   805  00FF3A  07                 	db	7
   806  00FF3B  07                 	db	7
   807  00FF3C                     __end_of_spreadingFactor:
   808                           	opt callstack 0
   809  00FF3C  0A                 	db	10
   810  00FF3D  07                 	db	7
   811  00FF3E  04                 	db	4
   812  00FF3F  01                 	db	1
   813  00FF40  FE                 	db	254
   814  00FF41  FB                 	db	251
   815  00FF42                     __end_of_txPower433:
   816                           	opt callstack 0
   817  00FF42                     _txPower868:
   818                           	opt callstack 0
   819  00FF42  14                 	db	20
   820  00FF43  0E                 	db	14
   821  00FF44  0B                 	db	11
   822  00FF45  08                 	db	8
   823  00FF46  05                 	db	5
   824  00FF47  02                 	db	2
   825  00FF48                     __end_of_txPower868:
   826                           	opt callstack 0
   827  00FF48                     _DefaultChannels868:
   828                           	opt callstack 0
   829  00FF48  4220               	dw	16928
   830  00FF4A  33C4               	dw	13252
   831  00FF4C  01                 	db	1
   832  00FF4D  50                 	db	80
   833  00FF4E  0063               	dw	99
   834  00FF50  0000               	dw	0
   835  00FF52  0000               	dw	0
   836  00FF54  01                 	db	1
   837  00FF55  FF                 	db	255
   838  00FF56  34E0               	dw	13536
   839  00FF58  33C1               	dw	13249
   840  00FF5A  01                 	db	1
   841  00FF5B  50                 	db	80
   842  00FF5C  0063               	dw	99
   843  00FF5E  0000               	dw	0
   844  00FF60  0000               	dw	0
   845  00FF62  01                 	db	1
   846  00FF63  FF                 	db	255
   847  00FF64  27A0               	dw	10144
   848  00FF66  33BE               	dw	13246
   849  00FF68  01                 	db	1
   850  00FF69  50                 	db	80
   851  00FF6A  0063               	dw	99
   852  00FF6C  0000               	dw	0
   853  00FF6E  0000               	dw	0
   854  00FF70  01                 	db	1
   855  00FF71  FF                 	db	255
   856  00FF72  E608               	dw	58888
   857  00FF74  33D3               	dw	13267
   858  00FF76  01                 	db	1
   859  00FF77  50                 	db	80
   860  00FF78  0063               	dw	99
   861  00FF7A  0000               	dw	0
   862  00FF7C  0000               	dw	0
   863  00FF7E  01                 	db	1
   864  00FF7F  FF                 	db	255
   865  00FF80                     __end_of_DefaultChannels868:
   866                           	opt callstack 0
   867  00FF80                     _DefaultChannels433:
   868                           	opt callstack 0
   869  00FF80  B9D8               	dw	47576
   870  00FF82  19D1               	dw	6609
   871  00FF84  01                 	db	1
   872  00FF85  50                 	db	80
   873  00FF86  012E               	dw	302
   874  00FF88  0000               	dw	0
   875  00FF8A  0000               	dw	0
   876  00FF8C  01                 	db	1
   877  00FF8D  FF                 	db	255
   878  00FF8E  C718               	dw	50968
   879  00FF90  19D4               	dw	6612
   880  00FF92  01                 	db	1
   881  00FF93  50                 	db	80
   882  00FF94  012E               	dw	302
   883  00FF96  0000               	dw	0
   884  00FF98  0000               	dw	0
   885  00FF9A  01                 	db	1
   886  00FF9B  FF                 	db	255
   887  00FF9C  D458               	dw	54360
   888  00FF9E  19D7               	dw	6615
   889  00FFA0  01                 	db	1
   890  00FFA1  50                 	db	80
   891  00FFA2  012E               	dw	302
   892  00FFA4  0000               	dw	0
   893  00FFA6  0000               	dw	0
   894  00FFA8  01                 	db	1
   895  00FFA9  FF                 	db	255
   896  00FFAA                     __end_of_DefaultChannels433:
   897                           	opt callstack 0
   898  00FFAA                     log@coeff:
   899                           	opt callstack 0
   900  00FFAA  0000               	dw	0
   901  00FFAC  0000               	dw	0
   902  00FFAE  FFC4               	dw	65476
   903  00FFB0  3F7F               	dw	16255
   904  00FFB2  EF80               	dw	61312
   905  00FFB4  BEFF               	dw	48895
   906  00FFB6  E190               	dw	57744
   907  00FFB8  3EA9               	dw	16041
   908  00FFBA  82EC               	dw	33516
   909  00FFBC  BE76               	dw	48758
   910  00FFBE  AD82               	dw	44418
   911  00FFC0  3E2B               	dw	15915
   912  00FFC2  3C0E               	dw	15374
   913  00FFC4  BDC3               	dw	48579
   914  00FFC6  D187               	dw	53639
   915  00FFC8  3D13               	dw	15635
   916  00FFCA  7841               	dw	30785
   917  00FFCC  BBD3               	dw	48083
   918  00FFCE                     __end_oflog@coeff:
   919                           	opt callstack 0
   920  00FFCE                     sin@coeff_a:
   921                           	opt callstack 0
   922  00FFCE  F3EC               	dw	62444
   923  00FFD0  484A               	dw	18506
   924  00FFD2  9535               	dw	38197
   925  00FFD4  C795               	dw	51093
   926  00FFD6  C117               	dw	49431
   927  00FFD8  45DC               	dw	17884
   928  00FFDA  DBFD               	dw	56317
   929  00FFDC  C36D               	dw	50029
   930  00FFDE  B372               	dw	45938
   931  00FFE0  4033               	dw	16435
   932  00FFE2                     __end_ofsin@coeff_a:
   933                           	opt callstack 0
   934  00FFE2                     sin@coeff_b:
   935                           	opt callstack 0
   936  00FFE2  342B               	dw	13355
   937  00FFE4  4801               	dw	18433
   938  00FFE6  9D7F               	dw	40319
   939  00FFE8  45B0               	dw	17840
   940  00FFEA  FFE7               	dw	65511
   941  00FFEC  42D9               	dw	17113
   942  00FFEE  0000               	dw	0
   943  00FFF0  3F80               	dw	16256
   944  00FFF2                     __end_ofsin@coeff_b:
   945                           	opt callstack 0
   946  00FFF2                     _FskSyncWordBuff:
   947                           	opt callstack 0
   948  00FFF2  C1                 	db	193
   949  00FFF3  94                 	db	148
   950  00FFF4  C1                 	db	193
   951  00FFF5                     __end_of_FskSyncWordBuff:
   952                           	opt callstack 0
   953  00FFF5                     STR_1:
   954  00FFF5  41                 	db	65	;'A'
   955  00FFF6  00                 	db	0
   956  00FFF7                     STR_2:
   957  00FFF7  42                 	db	66	;'B'
   958  00FFF8  00                 	db	0
   959  00FFF9                     STR_5:
   960  00FFF9  43                 	db	67	;'C'
   961  00FFFA  00                 	db	0
   962  00FFFB                     STR_4:
   963  00FFFB  4C                 	db	76	;'L'
   964  00FFFC  00                 	db	0
   965  00FFFD                     STR_3:
   966  00FFFD  54                 	db	84	;'T'
   967  00FFFE  00                 	db	0
   968                           
   969                           ; #config settings
   970  00FFFF  00                 	db	0	; dummy byte at the end
   971  0000                     
   972                           	psect	nvBANK1
   973  0001DD                     __pnvBANK1:
   974                           	opt callstack 0
   975  0001DD                     _TMR5_InterruptHandler:
   976                           	opt callstack 0
   977  0001DD                     	ds	2
   978  0001DF                     _timer5ReloadVal:
   979                           	opt callstack 0
   980  0001DF                     	ds	2
   981  0001E1                     _TMR3_InterruptHandler:
   982                           	opt callstack 0
   983  0001E1                     	ds	2
   984  0001E3                     _timer3ReloadVal:
   985                           	opt callstack 0
   986  0001E3                     	ds	2
   987  0001E5                     _TMR1_InterruptHandler:
   988                           	opt callstack 0
   989  0001E5                     	ds	2
   990  0001E7                     _timer1ReloadVal:
   991                           	opt callstack 0
   992  0001E7                     	ds	2
   993  0001E9                     _IOCB4_InterruptHandler:
   994                           	opt callstack 0
   995  0001E9                     	ds	2
   996  0001EB                     _INT2_InterruptHandler:
   997                           	opt callstack 0
   998  0001EB                     	ds	2
   999  0001ED                     _INT1_InterruptHandler:
  1000                           	opt callstack 0
  1001  0001ED                     	ds	2
  1002                           
  1003                           	psect	nvBANK2
  1004  0002FA                     __pnvBANK2:
  1005                           	opt callstack 0
  1006  0002FA                     _EUSART2_ErrorHandler:
  1007                           	opt callstack 0
  1008  0002FA                     	ds	2
  1009  0002FC                     _EUSART2_OverrunErrorHandler:
  1010                           	opt callstack 0
  1011  0002FC                     	ds	2
  1012  0002FE                     _EUSART2_FramingErrorHandler:
  1013                           	opt callstack 0
  1014  0002FE                     	ds	2
  1015  0000                     _TMR5	set	3919
  1016  0000                     _PMD2bits	set	3901
  1017  0000                     _PMD0bits	set	3903
  1018  0000                     _T5GCONbits	set	3917
  1019  0000                     _T5CONbits	set	3918
  1020  0000                     _T5CON	set	3918
  1021  0000                     _TMR5L	set	3919
  1022  0000                     _TMR5H	set	3920
  1023  0000                     _T5GCON	set	3917
  1024  0000                     _ANSELA	set	3896
  1025  0000                     _ANSELE	set	3900
  1026  0000                     _ANSELB	set	3897
  1027  0000                     _ANSELC	set	3898
  1028  0000                     _ANSELD	set	3899
  1029  0000                     _TMR3	set	4018
  1030  0000                     _TMR1	set	4046
  1031  0000                     _WDTCON	set	4049
  1032  0000                     _PORTC	set	3970
  1033  0000                     _PORTD	set	3971
  1034  0000                     _PORTE	set	3972
  1035  0000                     _PORTA	set	3968
  1036  0000                     _IPR5bits	set	3967
  1037  0000                     _T3GCONbits	set	4020
  1038  0000                     _T3CONbits	set	4017
  1039  0000                     _T3CON	set	4017
  1040  0000                     _IPR2bits	set	4002
  1041  0000                     _TMR3L	set	4018
  1042  0000                     _TMR3H	set	4019
  1043  0000                     _T3GCON	set	4020
  1044  0000                     _OSCCONbits	set	4051
  1045  0000                     _TXREG2	set	3955
  1046  0000                     _RCREG2	set	3956
  1047  0000                     _RCSTA2bits	set	3953
  1048  0000                     _TXSTA2bits	set	3954
  1049  0000                     _PIR3bits	set	4004
  1050  0000                     _SPBRGH2	set	3958
  1051  0000                     _SPBRG2	set	3957
  1052  0000                     _TXSTA2	set	3954
  1053  0000                     _RCSTA2	set	3953
  1054  0000                     _BAUDCON2	set	3952
  1055  0000                     _ADCON0bits	set	4034
  1056  0000                     _ADRESH	set	4036
  1057  0000                     _ADRESL	set	4035
  1058  0000                     _ADCON2	set	4032
  1059  0000                     _ADCON1	set	4033
  1060  0000                     _ADCON0	set	4034
  1061  0000                     _T1GCONbits	set	4044
  1062  0000                     _T1CONbits	set	4045
  1063  0000                     _T1CON	set	4045
  1064  0000                     _IPR1bits	set	3999
  1065  0000                     _TMR1L	set	4046
  1066  0000                     _TMR1H	set	4047
  1067  0000                     _T1GCON	set	4044
  1068  0000                     _IOCBbits	set	3938
  1069  0000                     _WPUB	set	3937
  1070  0000                     _TRISD	set	3989
  1071  0000                     _TRISC	set	3988
  1072  0000                     _TRISB	set	3987
  1073  0000                     _TRISA	set	3986
  1074  0000                     _TRISE	set	3990
  1075  0000                     _LATC	set	3979
  1076  0000                     _LATB	set	3978
  1077  0000                     _LATA	set	3977
  1078  0000                     _LATD	set	3980
  1079  0000                     _LATE	set	3981
  1080  0000                     _OSCTUNE	set	3995
  1081  0000                     _OSCCON2	set	4050
  1082  0000                     _OSCCON	set	4051
  1083  0000                     _PIR2bits	set	4001
  1084  0000                     _PIE2bits	set	4000
  1085  0000                     _PIR5bits	set	3966
  1086  0000                     _PIE5bits	set	3965
  1087  0000                     _PIR1bits	set	3998
  1088  0000                     _PIE1bits	set	3997
  1089  0000                     _RCONbits	set	4048
  1090  0000                     _INTCON2bits	set	4081
  1091  0000                     _INTCON3bits	set	4080
  1092  0000                     _SSP2STATbits	set	3949
  1093  0000                     _SSP2BUF	set	3951
  1094  0000                     _SSP2CON1bits	set	3948
  1095  0000                     _SSP2ADD	set	3950
  1096  0000                     _SSP2CON1	set	3948
  1097  0000                     _SSP2STAT	set	3949
  1098  0000                     _PORTBbits	set	3969
  1099  0000                     _INTCONbits	set	4082
  1100  0000                     _LATD3	set	31843
  1101  0000                     _LATC2	set	31834
  1102  0000                     _TRISC2	set	31906
  1103                           
  1104                           	psect	cinit
  1105  0077F4                     __pcinit:
  1106                           	opt callstack 0
  1107  0077F4                     start_initialization:
  1108                           	opt callstack 0
  1109  0077F4                     __initialization:
  1110                           	opt callstack 0
  1111                           
  1112                           ; Initialize objects allocated to BANK3 (40 bytes)
  1113                           ; load TBLPTR registers with __pidataBANK3
  1114  0077F4  0E4A               	movlw	low __pidataBANK3
  1115  0077F6  6EF6               	movwf	tblptrl,c
  1116  0077F8  0EA1               	movlw	high __pidataBANK3
  1117  0077FA  6EF7               	movwf	tblptrh,c
  1118  0077FC  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1119  0077FE  6EF8               	movwf	tblptru,c
  1120  007800  EE03  F0D0         	lfsr	0,__pdataBANK3
  1121  007804  EE20 F028          	lfsr	2,40
  1122  007808                     copy_data0:
  1123  007808  0009               	tblrd		*+
  1124  00780A  CFF5 FFEE          	movff	tablat,postinc0
  1125  00780E  50DD               	movf	postdec2,w,c
  1126  007810  50D9               	movf	fsr2l,w,c
  1127  007812  E1FA               	bnz	copy_data0
  1128                           
  1129                           ; Initialize objects allocated to BANK1 (12 bytes)
  1130                           ; load TBLPTR registers with __pidataBANK1
  1131  007814  0E84               	movlw	low __pidataBANK1
  1132  007816  6EF6               	movwf	tblptrl,c
  1133  007818  0EA7               	movlw	high __pidataBANK1
  1134  00781A  6EF7               	movwf	tblptrh,c
  1135  00781C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1136  00781E  6EF8               	movwf	tblptru,c
  1137  007820  EE01  F0EF         	lfsr	0,__pdataBANK1
  1138  007824  EE20 F00C          	lfsr	2,12
  1139  007828                     copy_data1:
  1140  007828  0009               	tblrd		*+
  1141  00782A  CFF5 FFEE          	movff	tablat,postinc0
  1142  00782E  50DD               	movf	postdec2,w,c
  1143  007830  50D9               	movf	fsr2l,w,c
  1144  007832  E1FA               	bnz	copy_data1
  1145                           
  1146                           ; Initialize objects allocated to COMRAM (4 bytes)
  1147                           ; load TBLPTR registers with __pidataCOMRAM
  1148  007834  0EC4               	movlw	low __pidataCOMRAM
  1149  007836  6EF6               	movwf	tblptrl,c
  1150  007838  0EA8               	movlw	high __pidataCOMRAM
  1151  00783A  6EF7               	movwf	tblptrh,c
  1152  00783C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1153  00783E  6EF8               	movwf	tblptru,c
  1154  007840  EE00  F052         	lfsr	0,__pdataCOMRAM
  1155  007844  EE20 F004          	lfsr	2,4
  1156  007848                     copy_data2:
  1157  007848  0009               	tblrd		*+
  1158  00784A  CFF5 FFEE          	movff	tablat,postinc0
  1159  00784E  50DD               	movf	postdec2,w,c
  1160  007850  50D9               	movf	fsr2l,w,c
  1161  007852  E1FA               	bnz	copy_data2
  1162                           
  1163                           ; Clear objects allocated to BIGRAM (942 bytes)
  1164  007854  EE05  F028         	lfsr	0,__pbssBIGRAM
  1165  007858  EE23 F0AE          	lfsr	2,942
  1166  00785C                     clear_0:
  1167  00785C  6AEE               	clrf	postinc0,c
  1168  00785E  50DD               	movf	postdec2,w,c
  1169  007860  50D9               	movf	fsr2l,w,c
  1170  007862  E1FC               	bnz	clear_0
  1171  007864  50DA               	movf	fsr2h,w,c
  1172  007866  E1FA               	bnz	clear_0
  1173                           
  1174                           ; Clear objects allocated to BANK5 (40 bytes)
  1175  007868  EE05  F000         	lfsr	0,__pbssBANK5
  1176  00786C  0E28               	movlw	40
  1177  00786E                     clear_1:
  1178  00786E  6AEE               	clrf	postinc0,c
  1179  007870  06E8               	decf	wreg,f,c
  1180  007872  E1FD               	bnz	clear_1
  1181                           
  1182                           ; Clear objects allocated to BANK4 (244 bytes)
  1183  007874  EE04  F000         	lfsr	0,__pbssBANK4
  1184  007878  0EF4               	movlw	244
  1185  00787A                     clear_2:
  1186  00787A  6AEE               	clrf	postinc0,c
  1187  00787C  06E8               	decf	wreg,f,c
  1188  00787E  E1FD               	bnz	clear_2
  1189                           
  1190                           ; Clear objects allocated to BANK3 (208 bytes)
  1191  007880  EE03  F000         	lfsr	0,__pbssBANK3
  1192  007884  0ED0               	movlw	208
  1193  007886                     clear_3:
  1194  007886  6AEE               	clrf	postinc0,c
  1195  007888  06E8               	decf	wreg,f,c
  1196  00788A  E1FD               	bnz	clear_3
  1197                           
  1198                           ; Clear objects allocated to BANK2 (250 bytes)
  1199  00788C  EE02  F000         	lfsr	0,__pbssBANK2
  1200  007890  0EFA               	movlw	250
  1201  007892                     clear_4:
  1202  007892  6AEE               	clrf	postinc0,c
  1203  007894  06E8               	decf	wreg,f,c
  1204  007896  E1FD               	bnz	clear_4
  1205                           
  1206                           ; Clear objects allocated to BANK1 (116 bytes)
  1207  007898  EE01  F000         	lfsr	0,__pbssBANK1
  1208  00789C  0E74               	movlw	116
  1209  00789E                     clear_5:
  1210  00789E  6AEE               	clrf	postinc0,c
  1211  0078A0  06E8               	decf	wreg,f,c
  1212  0078A2  E1FD               	bnz	clear_5
  1213                           
  1214                           ; Clear objects allocated to COMRAM (20 bytes)
  1215  0078A4  EE00  F032         	lfsr	0,__pbssCOMRAM
  1216  0078A8  0E14               	movlw	20
  1217  0078AA                     clear_6:
  1218  0078AA  6AEE               	clrf	postinc0,c
  1219  0078AC  06E8               	decf	wreg,f,c
  1220  0078AE  E1FD               	bnz	clear_6
  1221  0078B0                     end_of_initialization:
  1222                           	opt callstack 0
  1223  0078B0                     __end_of__initialization:
  1224                           	opt callstack 0
  1225  0078B0  0100               	movlb	0
  1226  0078B2  EF18  F02A         	goto	_main	;jump to C main() function
  1227                           
  1228                           	psect	bssCOMRAM
  1229  000032                     __pbssCOMRAM:
  1230                           	opt callstack 0
  1231  000032                     _ticksAccounted:
  1232                           	opt callstack 0
  1233  000032                     	ds	4
  1234  000036                     _ticksAdded:
  1235                           	opt callstack 0
  1236  000036                     	ds	4
  1237  00003A                     TMR_SwapTimer@oldVal:
  1238                           	opt callstack 0
  1239  00003A                     	ds	2
  1240  00003C                     TMR_GetDeltaTime@tmrVal:
  1241                           	opt callstack 0
  1242  00003C                     	ds	2
  1243  00003E                     _reloadVal:
  1244                           	opt callstack 0
  1245  00003E                     	ds	2
  1246  000040                     I2C@flag:
  1247                           	opt callstack 0
  1248  000040                     	ds	1
  1249  000041                     _flag:
  1250                           	opt callstack 0
  1251  000041                     	ds	1
  1252  000042                     __rcon:
  1253                           	opt callstack 0
  1254  000042                     	ds	1
  1255  000043                     __roundCounter:
  1256                           	opt callstack 0
  1257  000043                     	ds	1
  1258  000044                     _timerOverflow:
  1259                           	opt callstack 0
  1260  000044                     	ds	1
  1261  000045                     _dioStatus:
  1262                           	opt callstack 0
  1263  000045                     	ds	1
  1264                           
  1265                           	psect	dataCOMRAM
  1266  000052                     __pdataCOMRAM:
  1267                           	opt callstack 0
  1268  000052                     _ticksToScheduledInterrupt:
  1269                           	opt callstack 0
  1270  000052                     	ds	4
  1271                           
  1272                           	psect	bssBANK1
  1273  000100                     __pbssBANK1:
  1274                           	opt callstack 0
  1275  000100                     _timer:
  1276                           	opt callstack 0
  1277  000100                     	ds	6
  1278  000106                     _upCnt:
  1279                           	opt callstack 0
  1280  000106                     	ds	4
  1281  00010A                     _value:
  1282                           	opt callstack 0
  1283  00010A                     	ds	4
  1284  00010E                     _rxPayload:
  1285                           	opt callstack 0
  1286  00010E                     	ds	4
  1287  000112                     TMR_GetDeltaTime@retVal:
  1288                           	opt callstack 0
  1289  000112                     	ds	4
  1290  000116                     _errno:
  1291                           	opt callstack 0
  1292  000116                     	ds	2
  1293  000118                     _result:
  1294                           	opt callstack 0
  1295  000118                     	ds	2
  1296  00011A                     _sCounter:
  1297                           	opt callstack 0
  1298  00011A                     	ds	2
  1299  00011C                     _msCounter:
  1300                           	opt callstack 0
  1301  00011C                     	ds	2
  1302  00011E                     TMR_SwapTimer@retVal:
  1303                           	opt callstack 0
  1304  00011E                     	ds	2
  1305  000120                     _nACK:
  1306                           	opt callstack 0
  1307  000120                     	ds	1
  1308  000121                     _low:
  1309                           	opt callstack 0
  1310  000121                     	ds	1
  1311  000122                     _high:
  1312                           	opt callstack 0
  1313  000122                     	ds	1
  1314  000123                     _clip:
  1315                           	opt callstack 0
  1316  000123                     	ds	1
  1317  000124                     _firstSend:
  1318                           	opt callstack 0
  1319  000124                     	ds	1
  1320  000125                     _joined:
  1321                           	opt callstack 0
  1322  000125                     	ds	1
  1323  000126                     _eusart2RxLastError:
  1324                           	opt callstack 0
  1325  000126                     	ds	1
  1326  000127                     _localDioStatus:
  1327                           	opt callstack 0
  1328  000127                     	ds	1
  1329  000128                     _allocatedTimers:
  1330                           	opt callstack 0
  1331  000128                     	ds	1
  1332  000129                     _RadioConfiguration:
  1333                           	opt callstack 0
  1334  000129                     	ds	54
  1335  00015F                     _aesBuffer:
  1336                           	opt callstack 0
  1337  00015F                     	ds	16
  1338  00016F                     _stringValue:
  1339                           	opt callstack 0
  1340  00016F                     	ds	5
  1341                           
  1342                           	psect	dataBANK1
  1343  0001EF                     __pdataBANK1:
  1344                           	opt callstack 0
  1345  0001EF                     _randx:
  1346                           	opt callstack 0
  1347  0001EF                     	ds	4
  1348  0001F3                     _pulseSignal:
  1349                           	opt callstack 0
  1350  0001F3                     	ds	4
  1351  0001F7                     _address:
  1352                           	opt callstack 0
  1353  0001F7                     	ds	1
  1354  0001F8                     _sensorsStringLength:
  1355                           	opt callstack 0
  1356  0001F8                     	ds	1
  1357  0001F9                     _stringValueLength:
  1358                           	opt callstack 0
  1359  0001F9                     	ds	1
  1360  0001FA                     _stringLength:
  1361                           	opt callstack 0
  1362  0001FA                     	ds	1
  1363                           
  1364                           	psect	bssBANK2
  1365  000200                     __pbssBANK2:
  1366                           	opt callstack 0
  1367  000200                     _string:
  1368                           	opt callstack 0
  1369  000200                     	ds	5
  1370  000205                     _loRa:
  1371                           	opt callstack 0
  1372  000205                     	ds	245
  1373                           
  1374                           	psect	bssBANK3
  1375  000300                     __pbssBANK3:
  1376                           	opt callstack 0
  1377  000300                     _swTimers:
  1378                           	opt callstack 0
  1379  000300                     	ds	160
  1380  0003A0                     _sensorsString:
  1381                           	opt callstack 0
  1382  0003A0                     	ds	40
  1383  0003C8                     _appEui:
  1384                           	opt callstack 0
  1385  0003C8                     	ds	8
  1386                           
  1387                           	psect	dataBANK3
  1388  0003D0                     __pdataBANK3:
  1389                           	opt callstack 0
  1390  0003D0                     GenerateSubkey@F5972:
  1391                           	opt callstack 0
  1392  0003D0                     	ds	16
  1393  0003E0                     _appKey:
  1394                           	opt callstack 0
  1395  0003E0                     	ds	16
  1396  0003F0                     _deviceEui:
  1397                           	opt callstack 0
  1398  0003F0                     	ds	8
  1399                           
  1400                           	psect	bssBANK4
  1401  000400                     __pbssBANK4:
  1402                           	opt callstack 0
  1403  000400                     _sinSignal:
  1404                           	opt callstack 0
  1405  000400                     	ds	20
  1406  000414                     _Channels:
  1407                           	opt callstack 0
  1408  000414                     	ds	224
  1409                           
  1410                           	psect	bssBANK5
  1411  000500                     __pbssBANK5:
  1412                           	opt callstack 0
  1413  000500                     _clearString:
  1414                           	opt callstack 0
  1415  000500                     	ds	40
  1416                           
  1417                           	psect	bssBIGRAM
  1418  000528                     __pbssBIGRAM:
  1419                           	opt callstack 0
  1420  000528                     _capValues:
  1421                           	opt callstack 0
  1422  000528                     	ds	400
  1423  0006B8                     _macBuffer:
  1424                           	opt callstack 0
  1425  0006B8                     	ds	271
  1426  0007C7                     _radioBuffer:
  1427                           	opt callstack 0
  1428  0007C7                     	ds	271
  1429                           
  1430                           	psect	cstackBANK1
  1431  000174                     __pcstackBANK1:
  1432                           	opt callstack 0
  1433  000174                     AESCmac@k2:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 16 bytes @ 0x0
  1437  000174                     	ds	16
  1438  000184                     AESCmac@k1:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 16 bytes @ 0x10
  1442  000184                     	ds	16
  1443  000194                     AESCmac@mLast:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 16 bytes @ 0x20
  1447  000194                     	ds	16
  1448  0001A4                     AESCmac@padded:
  1449                           	opt callstack 0
  1450                           
  1451                           ; 16 bytes @ 0x30
  1452  0001A4                     	ds	16
  1453  0001B4                     AESCmac@y:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 16 bytes @ 0x40
  1457  0001B4                     	ds	16
  1458  0001C4                     AESCmac@x:
  1459                           	opt callstack 0
  1460                           
  1461                           ; 16 bytes @ 0x50
  1462  0001C4                     	ds	16
  1463  0001D4                     AESCmac@ptr:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 2 bytes @ 0x60
  1467  0001D4                     	ds	2
  1468  0001D6                     AESCmac@flag:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x62
  1472  0001D6                     	ds	1
  1473  0001D7                     AESCmac@n:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x63
  1477  0001D7                     	ds	1
  1478  0001D8                     AESCmac@j:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x64
  1482  0001D8                     	ds	1
  1483  0001D9                     AESCmac@i:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 1 bytes @ 0x65
  1487  0001D9                     	ds	1
  1488  0001DA                     LORAWAN_RxDone@buffer:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 2 bytes @ 0x66
  1492  0001DA                     	ds	2
  1493  0001DC                     LORAWAN_RxDone@bufferLength:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 1 bytes @ 0x68
  1497  0001DC                     	ds	1
  1498                           
  1499                           	psect	cstackBANK0
  1500  000060                     __pcstackBANK0:
  1501                           	opt callstack 0
  1502  000060                     ??_UpdateMinMaxChDataRate:
  1503  000060                     ??_FindSmallestDataRate:
  1504  000060                     ??_CountfOptsLength:
  1505  000060                     ??_i2c_sdaWrite:
  1506  000060                     ?_TMR1_ReadTimer:
  1507                           	opt callstack 0
  1508  000060                     ?_ExecuteDutyCycle:
  1509                           	opt callstack 0
  1510  000060                     ?_ExecuteDevStatus:
  1511                           	opt callstack 0
  1512  000060                     ?_ExecuteLinkCheck:
  1513                           	opt callstack 0
  1514  000060                     ?_ADC_GetConversion:
  1515                           	opt callstack 0
  1516  000060                     ?___wmul:
  1517                           	opt callstack 0
  1518  000060                     ?___awdiv:
  1519                           	opt callstack 0
  1520  000060                     ?___lwdiv:
  1521                           	opt callstack 0
  1522  000060                     ?___ltdiv:
  1523                           	opt callstack 0
  1524  000060                     ?_GetRx1Freq:
  1525                           	opt callstack 0
  1526  000060                     ?_LORAWAN_GetUplinkCounter:
  1527                           	opt callstack 0
  1528  000060                     ?_LORAWAN_GetStatus:
  1529                           	opt callstack 0
  1530  000060                     ?___lldiv:
  1531                           	opt callstack 0
  1532  000060                     ?___fltol:
  1533                           	opt callstack 0
  1534  000060                     ?___llmod:
  1535                           	opt callstack 0
  1536  000060                     ?___xxtofl:
  1537                           	opt callstack 0
  1538  000060                     INTERRUPT_GetDioStatus@a:
  1539                           	opt callstack 0
  1540  000060                     HALResetPinOutputValue@value:
  1541                           	opt callstack 0
  1542  000060                     SwTimerCreate@retVal:
  1543                           	opt callstack 0
  1544  000060                     SwTimerIsRunning@timerId:
  1545                           	opt callstack 0
  1546  000060                     SwTimerStop@timerId:
  1547                           	opt callstack 0
  1548  000060                     SwClearAllTimers@i:
  1549                           	opt callstack 0
  1550  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1551                           	opt callstack 0
  1552  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1553                           	opt callstack 0
  1554  000060                     RADIO_SetOutputPower@power:
  1555                           	opt callstack 0
  1556  000060                     RADIO_SetCRC@crc:
  1557                           	opt callstack 0
  1558  000060                     RADIO_SetIQInverted@iqInverted:
  1559                           	opt callstack 0
  1560  000060                     RADIO_SetBandwidth@bandwidth:
  1561                           	opt callstack 0
  1562  000060                     RADIO_SetModulation@modulation:
  1563                           	opt callstack 0
  1564  000060                     ValidateDataRate@dataRate:
  1565                           	opt callstack 0
  1566  000060                     ValidateTxPower@result:
  1567                           	opt callstack 0
  1568  000060                     UpdateDLSettings@dlRx1DrOffset:
  1569                           	opt callstack 0
  1570  000060                     UpdateDataRange@dataRangeNew:
  1571                           	opt callstack 0
  1572  000060                     UpdateChannelIdStatus@statusNew:
  1573                           	opt callstack 0
  1574  000060                     ValidateRxOffset@rxOffset:
  1575                           	opt callstack 0
  1576  000060                     ValidateChannelId@allowedForDefaultChannels:
  1577                           	opt callstack 0
  1578  000060                     ValidateChannelMaskCntl@result:
  1579                           	opt callstack 0
  1580  000060                     UpdateCurrentDataRate@valueNew:
  1581                           	opt callstack 0
  1582  000060                     UpdateTxPower@txPowerNew:
  1583                           	opt callstack 0
  1584  000060                     UpdateJoinInProgress@state:
  1585                           	opt callstack 0
  1586  000060                     SPI2_Exchange8bit@data:
  1587                           	opt callstack 0
  1588  000060                     RxJoinResponse@status:
  1589                           	opt callstack 0
  1590  000060                     GPIOAnalogMode@mode:
  1591                           	opt callstack 0
  1592  000060                     GPIOSet@mode:
  1593                           	opt callstack 0
  1594  000060                     GPIODigitalWrite@digOut:
  1595                           	opt callstack 0
  1596  000060                     GPIODigitalRead@GPIO:
  1597                           	opt callstack 0
  1598  000060                     GPIODigitalToogle@GPIO:
  1599                           	opt callstack 0
  1600  000060                     ___abdiv@divisor:
  1601                           	opt callstack 0
  1602  000060                     FillSubKey@source:
  1603                           	opt callstack 0
  1604  000060                     SwTimerSetCallback@callback:
  1605                           	opt callstack 0
  1606  000060                     EncKeySchedule@key:
  1607                           	opt callstack 0
  1608  000060                     EncodeShiftRow@stateTable:
  1609                           	opt callstack 0
  1610  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1611                           	opt callstack 0
  1612  000060                     ExecuteDutyCycle@ptr:
  1613                           	opt callstack 0
  1614  000060                     ExecuteDevStatus@ptr:
  1615                           	opt callstack 0
  1616  000060                     UpdateDutyCycle@dutyCycleNew:
  1617                           	opt callstack 0
  1618  000060                     ValidateChannelMask@channelMask:
  1619                           	opt callstack 0
  1620  000060                     ExecuteLinkCheck@ptr:
  1621                           	opt callstack 0
  1622  000060                     IncludeMacCommandsResponse@macBuffer:
  1623                           	opt callstack 0
  1624  000060                     CheckFlags@hdr:
  1625                           	opt callstack 0
  1626  000060                     CheckMcastFlags@hdr:
  1627                           	opt callstack 0
  1628  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1629                           	opt callstack 0
  1630  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1631                           	opt callstack 0
  1632  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1633                           	opt callstack 0
  1634  000060                     TMR1_WriteTimer@timerVal:
  1635                           	opt callstack 0
  1636  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1637                           	opt callstack 0
  1638  000060                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1639                           	opt callstack 0
  1640  000060                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1641                           	opt callstack 0
  1642  000060                     EUSART2_SetErrorHandler@interruptHandler:
  1643                           	opt callstack 0
  1644  000060                     RxData@pData:
  1645                           	opt callstack 0
  1646  000060                     TMR3_SetInterruptHandler@InterruptHandler:
  1647                           	opt callstack 0
  1648  000060                     TMR5_SetInterruptHandler@InterruptHandler:
  1649                           	opt callstack 0
  1650  000060                     rn2483_delaysec@length:
  1651                           	opt callstack 0
  1652  000060                     adaptString@string:
  1653                           	opt callstack 0
  1654  000060                     pointAddition@element:
  1655                           	opt callstack 0
  1656  000060                     i2c_usdelay@time:
  1657                           	opt callstack 0
  1658  000060                     ___wmul@multiplier:
  1659                           	opt callstack 0
  1660  000060                     ___awdiv@dividend:
  1661                           	opt callstack 0
  1662  000060                     ___lwdiv@dividend:
  1663                           	opt callstack 0
  1664  000060                     memcpy@d1:
  1665                           	opt callstack 0
  1666  000060                     memset@p1:
  1667                           	opt callstack 0
  1668  000060                     strncat@to:
  1669                           	opt callstack 0
  1670  000060                     ___ltdiv@dividend:
  1671                           	opt callstack 0
  1672  000060                     SystemBlockingWaitMs@ms:
  1673                           	opt callstack 0
  1674  000060                     RADIO_SetChannelFrequency@frequency:
  1675                           	opt callstack 0
  1676  000060                     ValidateFrequency@frequencyNew:
  1677                           	opt callstack 0
  1678  000060                     UpdateFrequency@frequencyNew:
  1679                           	opt callstack 0
  1680  000060                     LORAWAN_SetUplinkCounter@ctr:
  1681                           	opt callstack 0
  1682  000060                     UpdateReceiveWindow2Parameters@frequency:
  1683                           	opt callstack 0
  1684  000060                     ___lldiv@dividend:
  1685                           	opt callstack 0
  1686  000060                     ___fleq@ff1:
  1687                           	opt callstack 0
  1688  000060                     ___fltol@f1:
  1689                           	opt callstack 0
  1690  000060                     ___llmod@dividend:
  1691                           	opt callstack 0
  1692  000060                     ___xxtofl@val:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 4 bytes @ 0x0
  1696  000060                     	ds	1
  1697  000061                     ??_UpdateDataRange:
  1698  000061                     ??_UpdateChannelIdStatus:
  1699  000061                     ??___abdiv:
  1700  000061                     HALSPISend@data:
  1701                           	opt callstack 0
  1702  000061                     SwTimerIsRunning@isRunning:
  1703                           	opt callstack 0
  1704  000061                     ValidateDataRate@result:
  1705                           	opt callstack 0
  1706  000061                     ValidateTxPower@txPowerNew:
  1707                           	opt callstack 0
  1708  000061                     UpdateDLSettings@dlRx2Dr:
  1709                           	opt callstack 0
  1710  000061                     ValidateRxOffset@result:
  1711                           	opt callstack 0
  1712  000061                     ValidateChannelId@result:
  1713                           	opt callstack 0
  1714  000061                     ValidateChannelMaskCntl@channelMaskCntl:
  1715                           	opt callstack 0
  1716  000061                     UpdateMinMaxChDataRate@i:
  1717                           	opt callstack 0
  1718  000061                     FindSmallestDataRate@found:
  1719                           	opt callstack 0
  1720  000061                     GPIOAnalogMode@GPIO:
  1721                           	opt callstack 0
  1722  000061                     GPIOSet@GPIO:
  1723                           	opt callstack 0
  1724  000061                     GPIODigitalWrite@GPIO:
  1725                           	opt callstack 0
  1726                           
  1727                           ; 1 bytes @ 0x1
  1728  000061                     	ds	1
  1729  000062                     ??_TMR1_ReadTimer:
  1730  000062                     ??_EncKeySchedule:
  1731  000062                     ??_ValidateChannelMask:
  1732  000062                     ??_ExecuteDutyCycle:
  1733  000062                     ??_pointAddition:
  1734  000062                     ??_ADC_GetConversion:
  1735  000062                     ??_rn2483_delaysec:
  1736  000062                     SwTimerSetCallback@callbackParameter:
  1737                           	opt callstack 0
  1738  000062                     EncodeShiftRow@temp:
  1739                           	opt callstack 0
  1740  000062                     RADIO_RegisterWrite@value:
  1741                           	opt callstack 0
  1742  000062                     RADIO_RegisterRead@reg:
  1743                           	opt callstack 0
  1744  000062                     UpdateDataRange@channelId:
  1745                           	opt callstack 0
  1746  000062                     UpdateChannelIdStatus@channelId:
  1747                           	opt callstack 0
  1748  000062                     ValidateDataRange@result:
  1749                           	opt callstack 0
  1750  000062                     ValidateChannelId@channelId:
  1751                           	opt callstack 0
  1752  000062                     UpdateDutyCycle@channelId:
  1753                           	opt callstack 0
  1754  000062                     FindSmallestDataRate@i:
  1755                           	opt callstack 0
  1756  000062                     RxData@dataLength:
  1757                           	opt callstack 0
  1758  000062                     adaptString@length:
  1759                           	opt callstack 0
  1760  000062                     i2c_sdaWrite@data:
  1761                           	opt callstack 0
  1762  000062                     FillSubKey@key:
  1763                           	opt callstack 0
  1764  000062                     IncludeMacCommandsResponse@pBufferIndex:
  1765                           	opt callstack 0
  1766  000062                     i2c_usdelay@i:
  1767                           	opt callstack 0
  1768  000062                     ___wmul@multiplicand:
  1769                           	opt callstack 0
  1770  000062                     ___awdiv@divisor:
  1771                           	opt callstack 0
  1772  000062                     ___lwdiv@divisor:
  1773                           	opt callstack 0
  1774  000062                     memcpy@s1:
  1775                           	opt callstack 0
  1776  000062                     memset@c:
  1777                           	opt callstack 0
  1778  000062                     strncat@from:
  1779                           	opt callstack 0
  1780                           
  1781                           ; 2 bytes @ 0x2
  1782  000062                     	ds	1
  1783  000063                     ??_adaptString:
  1784  000063                     SwTimerSetCallback@timerId:
  1785                           	opt callstack 0
  1786  000063                     RADIO_RegisterWrite@reg:
  1787                           	opt callstack 0
  1788  000063                     RADIO_RegisterRead@readValue:
  1789                           	opt callstack 0
  1790  000063                     UpdateDataRange@i:
  1791                           	opt callstack 0
  1792  000063                     UpdateChannelIdStatus@i:
  1793                           	opt callstack 0
  1794  000063                     ValidateDataRange@dataRangeNew:
  1795                           	opt callstack 0
  1796  000063                     FindSmallestDataRate@dataRate:
  1797                           	opt callstack 0
  1798  000063                     RxData@status:
  1799                           	opt callstack 0
  1800  000063                     i2c_sdaWrite@i:
  1801                           	opt callstack 0
  1802  000063                     ___abdiv@counter:
  1803                           	opt callstack 0
  1804  000063                     rn2483_delaysec@counter:
  1805                           	opt callstack 0
  1806  000063                     ___ltdiv@divisor:
  1807                           	opt callstack 0
  1808                           
  1809                           ; 3 bytes @ 0x3
  1810  000063                     	ds	1
  1811  000064                     ??_SystemBlockingWaitMs:
  1812  000064                     ??___fltol:
  1813  000064                     ??___xxtofl:
  1814  000064                     FillSubKey@size:
  1815                           	opt callstack 0
  1816  000064                     RADIO_WritePower@ocp:
  1817                           	opt callstack 0
  1818  000064                     RADIO_UnhandledInterrupt@modulation:
  1819                           	opt callstack 0
  1820  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  1821                           	opt callstack 0
  1822  000064                     ValidateFrequency@result:
  1823                           	opt callstack 0
  1824  000064                     ValidateDataRange@dataRateMax:
  1825                           	opt callstack 0
  1826  000064                     UpdateFrequency@channelId:
  1827                           	opt callstack 0
  1828  000064                     ValidateChannelMask@i:
  1829                           	opt callstack 0
  1830  000064                     UpdateReceiveWindow2Parameters@dataRate:
  1831                           	opt callstack 0
  1832  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  1833                           	opt callstack 0
  1834  000064                     pointAddition@d:
  1835                           	opt callstack 0
  1836  000064                     ___abdiv@sign:
  1837                           	opt callstack 0
  1838  000064                     ___awdiv@counter:
  1839                           	opt callstack 0
  1840  000064                     EnableChannels1@channelMask:
  1841                           	opt callstack 0
  1842  000064                     TMR1_ReadTimer@readVal:
  1843                           	opt callstack 0
  1844  000064                     i2c_sendData@data:
  1845                           	opt callstack 0
  1846  000064                     ___wmul@product:
  1847                           	opt callstack 0
  1848  000064                     ___lwdiv@quotient:
  1849                           	opt callstack 0
  1850  000064                     memcpy@n:
  1851                           	opt callstack 0
  1852  000064                     memset@n:
  1853                           	opt callstack 0
  1854  000064                     strncat@size:
  1855                           	opt callstack 0
  1856  000064                     LORAWAN_GetStatus@status:
  1857                           	opt callstack 0
  1858  000064                     ___lldiv@divisor:
  1859                           	opt callstack 0
  1860  000064                     ___fleq@ff2:
  1861                           	opt callstack 0
  1862  000064                     ___llmod@divisor:
  1863                           	opt callstack 0
  1864                           
  1865                           ; 4 bytes @ 0x4
  1866  000064                     	ds	1
  1867  000065                     ??_FillSubKey:
  1868  000065                     ??_IncludeMacCommandsResponse:
  1869  000065                     ??_RADIO_DIO3:
  1870  000065                     ??_RADIO_DIO4:
  1871  000065                     ??_RADIO_DIO5:
  1872  000065                     RADIO_WriteMode@newModulation:
  1873                           	opt callstack 0
  1874  000065                     RADIO_WritePower@paDac:
  1875                           	opt callstack 0
  1876  000065                     ExecuteDutyCycle@maxDCycle:
  1877                           	opt callstack 0
  1878  000065                     ValidateDataRange@dataRateMin:
  1879                           	opt callstack 0
  1880  000065                     adaptString@flag:
  1881                           	opt callstack 0
  1882  000065                     ___abdiv@quotient:
  1883                           	opt callstack 0
  1884  000065                     ___awdiv@sign:
  1885                           	opt callstack 0
  1886  000065                     _EncKeySchedule$521:
  1887                           	opt callstack 0
  1888  000065                     ADC_GetConversion@result:
  1889                           	opt callstack 0
  1890                           
  1891                           ; 2 bytes @ 0x5
  1892  000065                     	ds	1
  1893  000066                     ??_sinGenStart:
  1894  000066                     FillSubKey@carry:
  1895                           	opt callstack 0
  1896  000066                     RADIO_WriteMode@blocking:
  1897                           	opt callstack 0
  1898  000066                     RADIO_WritePower@power:
  1899                           	opt callstack 0
  1900  000066                     LORAWAN_SetChannelIdStatus@channelId:
  1901                           	opt callstack 0
  1902  000066                     EnableChannels1@channelMaskCntl:
  1903                           	opt callstack 0
  1904  000066                     UpdateReceiveDelays@delay:
  1905                           	opt callstack 0
  1906  000066                     CountfOptsLength@macCommandLength:
  1907                           	opt callstack 0
  1908  000066                     TMR1_ReadTimer@readValHigh:
  1909                           	opt callstack 0
  1910  000066                     adaptString@deleteElem:
  1911                           	opt callstack 0
  1912  000066                     ___abdiv@dividend:
  1913                           	opt callstack 0
  1914  000066                     ___lwdiv@counter:
  1915                           	opt callstack 0
  1916  000066                     memcpy@tmp:
  1917                           	opt callstack 0
  1918  000066                     ___awdiv@quotient:
  1919                           	opt callstack 0
  1920  000066                     memset@p:
  1921                           	opt callstack 0
  1922  000066                     strncat@cp:
  1923                           	opt callstack 0
  1924  000066                     ___ltdiv@quotient:
  1925                           	opt callstack 0
  1926                           
  1927                           ; 3 bytes @ 0x6
  1928  000066                     	ds	1
  1929  000067                     ?_ExecuteRxTimingSetup:
  1930                           	opt callstack 0
  1931  000067                     FillSubKey@i:
  1932                           	opt callstack 0
  1933  000067                     RADIO_WriteMode@currentModulation:
  1934                           	opt callstack 0
  1935  000067                     EnableChannels1@channelIndexMin:
  1936                           	opt callstack 0
  1937  000067                     CountfOptsLength@i:
  1938                           	opt callstack 0
  1939  000067                     TMR1_ReadTimer@readValLow:
  1940                           	opt callstack 0
  1941  000067                     ADC_GetConversion@channel:
  1942                           	opt callstack 0
  1943  000067                     adaptString@i:
  1944                           	opt callstack 0
  1945  000067                     AESEncode@block:
  1946                           	opt callstack 0
  1947  000067                     ExecuteRxTimingSetup@ptr:
  1948                           	opt callstack 0
  1949  000067                     memcpy@d:
  1950                           	opt callstack 0
  1951                           
  1952                           ; 2 bytes @ 0x7
  1953  000067                     	ds	1
  1954  000068                     ??_LORAWAN_GetMaxPayloadSize:
  1955  000068                     ??___fleq:
  1956  000068                     ?_TMR_SwapTimer:
  1957                           	opt callstack 0
  1958  000068                     ?_GPIOAnalogRead:
  1959                           	opt callstack 0
  1960  000068                     ?_TMR_GetDeltaTime:
  1961                           	opt callstack 0
  1962  000068                     RADIO_WriteMode@dioMapping:
  1963                           	opt callstack 0
  1964  000068                     EnableChannels1@channelIndexMax:
  1965                           	opt callstack 0
  1966  000068                     ___fltol@sign1:
  1967                           	opt callstack 0
  1968  000068                     ___llmod@counter:
  1969                           	opt callstack 0
  1970  000068                     ___xxtofl@sign:
  1971                           	opt callstack 0
  1972  000068                     TMR_SwapTimer@timerVal:
  1973                           	opt callstack 0
  1974  000068                     sinGenStart@i_5414:
  1975                           	opt callstack 0
  1976  000068                     isJoined@value:
  1977                           	opt callstack 0
  1978  000068                     ___lldiv@quotient:
  1979                           	opt callstack 0
  1980                           
  1981                           ; 4 bytes @ 0x8
  1982  000068                     	ds	1
  1983  000069                     ??_EnableChannels1:
  1984  000069                     RADIO_WriteMode@currentMode:
  1985                           	opt callstack 0
  1986  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1987                           	opt callstack 0
  1988  000069                     ExecuteRxTimingSetup@delay:
  1989                           	opt callstack 0
  1990  000069                     ___fltol@exp1:
  1991                           	opt callstack 0
  1992  000069                     ___ltdiv@counter:
  1993                           	opt callstack 0
  1994  000069                     ___xxtofl@exp:
  1995                           	opt callstack 0
  1996  000069                     AESEncode@key:
  1997                           	opt callstack 0
  1998  000069                     memcpy@s:
  1999                           	opt callstack 0
  2000                           
  2001                           ; 2 bytes @ 0x9
  2002  000069                     	ds	1
  2003  00006A                     ?_averageMeasure:
  2004                           	opt callstack 0
  2005  00006A                     RADIO_WriteMode@newMode:
  2006                           	opt callstack 0
  2007  00006A                     LORAWAN_GetMaxPayloadSize@result:
  2008                           	opt callstack 0
  2009  00006A                     GPIOAnalogRead@result:
  2010                           	opt callstack 0
  2011  00006A                     sinGenStart@d:
  2012                           	opt callstack 0
  2013  00006A                     TMR_OverrideRemaining@ticksRemaining:
  2014                           	opt callstack 0
  2015  00006A                     ___xxtofl@arg:
  2016                           	opt callstack 0
  2017                           
  2018                           ; 4 bytes @ 0xA
  2019  00006A                     	ds	1
  2020  00006B                     ??_AESEncode:
  2021  00006B                     ?_ExtractMic:
  2022                           	opt callstack 0
  2023  00006B                     RADIO_WriteMode@opMode:
  2024                           	opt callstack 0
  2025  00006B                     InitDefault868Channels@i:
  2026                           	opt callstack 0
  2027  00006B                     InitDefault433Channels@i:
  2028                           	opt callstack 0
  2029  00006B                     EnableChannels1@i:
  2030                           	opt callstack 0
  2031  00006B                     RADIO_SetFSKSyncWord@syncWord:
  2032                           	opt callstack 0
  2033  00006B                     LORAWAN_SetDeviceEui@deviceEuiNew:
  2034                           	opt callstack 0
  2035  00006B                     LORAWAN_SetApplicationEui@applicationEuiNew:
  2036                           	opt callstack 0
  2037  00006B                     LORAWAN_SetApplicationKey@applicationKeyNew:
  2038                           	opt callstack 0
  2039  00006B                     PrepareSessionKeys@sessionKey:
  2040                           	opt callstack 0
  2041  00006B                     ExtractMic@buffer:
  2042                           	opt callstack 0
  2043  00006B                     AssembleEncryptionBlock@frameCounter:
  2044                           	opt callstack 0
  2045                           
  2046                           ; 4 bytes @ 0xB
  2047  00006B                     	ds	1
  2048  00006C                     ??_averageMeasure:
  2049  00006C                     ??_TMR_GetDeltaTime:
  2050  00006C                     ?_RADIO_ReadRandom:
  2051                           	opt callstack 0
  2052  00006C                     ?_frexp:
  2053                           	opt callstack 0
  2054  00006C                     IncludeMacCommandsResponse@i:
  2055                           	opt callstack 0
  2056  00006C                     GPIOAnalogRead@GPIO:
  2057                           	opt callstack 0
  2058  00006C                     isJoined@joined:
  2059                           	opt callstack 0
  2060  00006C                     sinGenStart@i:
  2061                           	opt callstack 0
  2062  00006C                     ___lldiv@counter:
  2063                           	opt callstack 0
  2064  00006C                     EnableChannels@channelMask:
  2065                           	opt callstack 0
  2066  00006C                     frexp@value:
  2067                           	opt callstack 0
  2068                           
  2069                           ; 4 bytes @ 0xC
  2070  00006C                     	ds	1
  2071  00006D                     ?_GPIOAverageRead:
  2072                           	opt callstack 0
  2073  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  2074                           	opt callstack 0
  2075  00006D                     IncludeMacCommandsResponse@bufferIndex:
  2076                           	opt callstack 0
  2077  00006D                     ExtractMic@bufferLength:
  2078                           	opt callstack 0
  2079  00006D                     sinGenStart@t:
  2080                           	opt callstack 0
  2081  00006D                     PrepareSessionKeys@appNonce:
  2082                           	opt callstack 0
  2083  00006D                     SwTimerSetTimeout@timeout:
  2084                           	opt callstack 0
  2085  00006D                     RADIO_WriteFrequency@frequency:
  2086                           	opt callstack 0
  2087  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  2088                           	opt callstack 0
  2089  00006D                     RADIO_WriteFSKBitRate@bitRate:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 4 bytes @ 0xD
  2093  00006D                     	ds	1
  2094  00006E                     ??_TMR_OverrideRemaining:
  2095  00006E                     ??_RADIO_ReadRandom:
  2096  00006E                     EnableChannels@channelMaskCntl:
  2097                           	opt callstack 0
  2098  00006E                     ConfigureRadio@freq:
  2099                           	opt callstack 0
  2100                           
  2101                           ; 4 bytes @ 0xE
  2102  00006E                     	ds	1
  2103  00006F                     ??_ExtractMic:
  2104  00006F                     ??_GPIOAverageRead:
  2105  00006F                     ?_ExecuteLinkAdr:
  2106                           	opt callstack 0
  2107  00006F                     AssembleEncryptionBlock@blockId:
  2108                           	opt callstack 0
  2109  00006F                     RADIO_ReadRandom@retVal:
  2110                           	opt callstack 0
  2111  00006F                     ExecuteLinkAdr@ptr:
  2112                           	opt callstack 0
  2113  00006F                     PrepareSessionKeys@networkId:
  2114                           	opt callstack 0
  2115                           
  2116                           ; 2 bytes @ 0xF
  2117  00006F                     	ds	1
  2118  000070                     AssembleEncryptionBlock@firstByte:
  2119                           	opt callstack 0
  2120  000070                     TMR_OverrideRemaining@tmrVal:
  2121                           	opt callstack 0
  2122  000070                     frexp@eptr:
  2123                           	opt callstack 0
  2124                           
  2125                           ; 2 bytes @ 0x10
  2126  000070                     	ds	1
  2127  000071                     ??_ExecuteLinkAdr:
  2128  000071                     ??_SwTimerSetTimeout:
  2129  000071                     RADIO_ReadRandom@i:
  2130                           	opt callstack 0
  2131  000071                     PrepareSessionKeys@index:
  2132                           	opt callstack 0
  2133  000071                     AssembleEncryptionBlock@multicastStatus:
  2134                           	opt callstack 0
  2135  000071                     averageMeasure@value:
  2136                           	opt callstack 0
  2137  000071                     RADIO_WriteFrequency@num_mod:
  2138                           	opt callstack 0
  2139  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  2140                           	opt callstack 0
  2141  000071                     RADIO_WriteFSKBitRate@num:
  2142                           	opt callstack 0
  2143  000071                     ExtractMic@mic:
  2144                           	opt callstack 0
  2145                           
  2146                           ; 4 bytes @ 0x11
  2147  000071                     	ds	1
  2148  000072                     ??_frexp:
  2149  000072                     ConfigureRadio@dataRate:
  2150                           	opt callstack 0
  2151  000072                     AssembleEncryptionBlock@dir:
  2152                           	opt callstack 0
  2153  000072                     GPIOAverageRead@GPIO:
  2154                           	opt callstack 0
  2155  000072                     TMR_OverrideRemaining@oldReloadVal:
  2156                           	opt callstack 0
  2157  000072                     ExecuteLinkAdr@channelMask:
  2158                           	opt callstack 0
  2159  000072                     srand@x:
  2160                           	opt callstack 0
  2161                           
  2162                           ; 2 bytes @ 0x12
  2163  000072                     	ds	1
  2164  000073                     AssembleEncryptionBlock@bufferIndex:
  2165                           	opt callstack 0
  2166  000073                     _AESEncode$516:
  2167                           	opt callstack 0
  2168  000073                     GPIOAverageRead@i:
  2169                           	opt callstack 0
  2170  000073                     ConfigureRadioTx@freq:
  2171                           	opt callstack 0
  2172  000073                     ConfigureRadioRx@freq:
  2173                           	opt callstack 0
  2174                           
  2175                           ; 4 bytes @ 0x13
  2176  000073                     	ds	1
  2177  000074                     ?___fladd:
  2178                           	opt callstack 0
  2179  000074                     ExecuteLinkAdr@txPower:
  2180                           	opt callstack 0
  2181  000074                     averageMeasure@i:
  2182                           	opt callstack 0
  2183  000074                     ___fladd@b:
  2184                           	opt callstack 0
  2185                           
  2186                           ; 4 bytes @ 0x14
  2187  000074                     	ds	1
  2188  000075                     SwTimerSetTimeout@timerId:
  2189                           	opt callstack 0
  2190  000075                     _AESEncode$517:
  2191                           	opt callstack 0
  2192  000075                     ExecuteLinkAdr@redundancy:
  2193                           	opt callstack 0
  2194  000075                     GPIOAverageRead@finalValue:
  2195                           	opt callstack 0
  2196  000075                     RADIO_WriteFrequency@num:
  2197                           	opt callstack 0
  2198                           
  2199                           ; 4 bytes @ 0x15
  2200  000075                     	ds	2
  2201  000077                     ExecuteLinkAdr@dataRate:
  2202                           	opt callstack 0
  2203  000077                     ConfigureRadioTx@dataRate:
  2204                           	opt callstack 0
  2205  000077                     ConfigureRadioRx@dataRate:
  2206                           	opt callstack 0
  2207  000077                     _AESEncode$518:
  2208                           	opt callstack 0
  2209                           
  2210                           ; 2 bytes @ 0x17
  2211  000077                     	ds	1
  2212  000078                     ?_SwTimersInterrupt:
  2213                           	opt callstack 0
  2214  000078                     ConfigureRadioTx@txPower:
  2215                           	opt callstack 0
  2216  000078                     ___fladd@a:
  2217                           	opt callstack 0
  2218                           
  2219                           ; 4 bytes @ 0x18
  2220  000078                     	ds	1
  2221  000079                     AESEncode@aux:
  2222                           	opt callstack 0
  2223  000079                     RADIO_Init@radioBuffer:
  2224                           	opt callstack 0
  2225                           
  2226                           ; 2 bytes @ 0x19
  2227  000079                     	ds	1
  2228  00007A                     ??_RADIO_DIO2:
  2229  00007A                     AESEncode@aux2:
  2230                           	opt callstack 0
  2231                           
  2232                           ; 1 bytes @ 0x1A
  2233  00007A                     	ds	1
  2234  00007B                     AESEncode@aux1:
  2235                           	opt callstack 0
  2236  00007B                     RADIO_Init@frequency:
  2237                           	opt callstack 0
  2238                           
  2239                           ; 4 bytes @ 0x1B
  2240  00007B                     	ds	1
  2241  00007C                     ??___fladd:
  2242  00007C                     AESEncode@aux3:
  2243                           	opt callstack 0
  2244  00007C                     RADIO_DIO2@dioMapping:
  2245                           	opt callstack 0
  2246                           
  2247                           ; 1 bytes @ 0x1C
  2248  00007C                     	ds	1
  2249  00007D                     AESEncode@i:
  2250                           	opt callstack 0
  2251                           
  2252                           ; 1 bytes @ 0x1D
  2253  00007D                     	ds	1
  2254  00007E                     AESEncodeLoRa@block:
  2255                           	opt callstack 0
  2256                           
  2257                           ; 2 bytes @ 0x1E
  2258  00007E                     	ds	1
  2259  00007F                     ??_RADIO_Init:
  2260                           
  2261                           ; 1 bytes @ 0x1F
  2262  00007F                     	ds	1
  2263  000080                     ___fladd@signs:
  2264                           	opt callstack 0
  2265  000080                     AESEncodeLoRa@key:
  2266                           	opt callstack 0
  2267  000080                     SwTimersInterrupt@timeElapsed:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 4 bytes @ 0x20
  2271  000080                     	ds	1
  2272  000081                     ___fladd@aexp:
  2273                           	opt callstack 0
  2274                           
  2275                           ; 1 bytes @ 0x21
  2276  000081                     	ds	1
  2277  000082                     ___fladd@bexp:
  2278                           	opt callstack 0
  2279  000082                     AESEncodeLoRa@useKey:
  2280                           	opt callstack 0
  2281                           
  2282                           ; 16 bytes @ 0x22
  2283  000082                     	ds	1
  2284  000083                     ___fladd@grs:
  2285                           	opt callstack 0
  2286                           
  2287                           ; 1 bytes @ 0x23
  2288  000083                     	ds	1
  2289  000084                     ?___flmul:
  2290                           	opt callstack 0
  2291  000084                     ?___flsub:
  2292                           	opt callstack 0
  2293  000084                     SwTimersInterrupt@ticksToNextTimerEvent:
  2294                           	opt callstack 0
  2295  000084                     ___flsub@b:
  2296                           	opt callstack 0
  2297  000084                     ___flmul@b:
  2298                           	opt callstack 0
  2299                           
  2300                           ; 4 bytes @ 0x24
  2301  000084                     	ds	4
  2302  000088                     SwTimersInterrupt@i:
  2303                           	opt callstack 0
  2304  000088                     ___flsub@a:
  2305                           	opt callstack 0
  2306  000088                     ___flmul@a:
  2307                           	opt callstack 0
  2308                           
  2309                           ; 4 bytes @ 0x28
  2310  000088                     	ds	1
  2311  000089                     ?_SwTimerReadValue:
  2312                           	opt callstack 0
  2313                           
  2314                           ; 4 bytes @ 0x29
  2315  000089                     	ds	3
  2316  00008C                     ??___flmul:
  2317  00008C                     
  2318                           ; 1 bytes @ 0x2C
  2319  00008C                     	ds	1
  2320  00008D                     SwTimerReadValue@ticksCount:
  2321                           	opt callstack 0
  2322  00008D                     SwTimerStart@ticksRemaining:
  2323                           	opt callstack 0
  2324                           
  2325                           ; 4 bytes @ 0x2D
  2326  00008D                     	ds	3
  2327  000090                     ___flmul@sign:
  2328                           	opt callstack 0
  2329                           
  2330                           ; 1 bytes @ 0x30
  2331  000090                     	ds	1
  2332  000091                     SwTimerReadValue@timerId:
  2333                           	opt callstack 0
  2334  000091                     SwTimerStart@timerId:
  2335                           	opt callstack 0
  2336  000091                     ___flmul@grs:
  2337                           	opt callstack 0
  2338                           
  2339                           ; 4 bytes @ 0x31
  2340  000091                     	ds	1
  2341  000092                     ??_UpdateRetransmissionAckTimeoutState:
  2342  000092                     ??_StartReTxTimer:
  2343  000092                     ?___lmul:
  2344                           	opt callstack 0
  2345  000092                     GenerateSubkey@key:
  2346                           	opt callstack 0
  2347  000092                     ComputeSessionKeys@joinAcceptBuffer:
  2348                           	opt callstack 0
  2349  000092                     EncryptFRMPayload@buffer:
  2350                           	opt callstack 0
  2351  000092                     ___lmul@multiplier:
  2352                           	opt callstack 0
  2353                           
  2354                           ; 4 bytes @ 0x32
  2355  000092                     	ds	2
  2356  000094                     EncryptFRMPayload@bufferLength:
  2357                           	opt callstack 0
  2358  000094                     GenerateSubkey@k1:
  2359                           	opt callstack 0
  2360                           
  2361                           ; 2 bytes @ 0x34
  2362  000094                     	ds	1
  2363  000095                     EncryptFRMPayload@dir:
  2364                           	opt callstack 0
  2365  000095                     ___flmul@aexp:
  2366                           	opt callstack 0
  2367                           
  2368                           ; 1 bytes @ 0x35
  2369  000095                     	ds	1
  2370  000096                     ___flmul@bexp:
  2371                           	opt callstack 0
  2372  000096                     GenerateSubkey@k2:
  2373                           	opt callstack 0
  2374  000096                     StartReTxTimer@minim:
  2375                           	opt callstack 0
  2376  000096                     EncryptFRMPayload@frameCounter:
  2377                           	opt callstack 0
  2378  000096                     ___lmul@multiplicand:
  2379                           	opt callstack 0
  2380                           
  2381                           ; 4 bytes @ 0x36
  2382  000096                     	ds	1
  2383  000097                     ___flmul@prod:
  2384                           	opt callstack 0
  2385                           
  2386                           ; 4 bytes @ 0x37
  2387  000097                     	ds	1
  2388  000098                     ??_GenerateSubkey:
  2389                           
  2390                           ; 1 bytes @ 0x38
  2391  000098                     	ds	1
  2392  000099                     GenerateSubkey@const_Rb:
  2393                           	opt callstack 0
  2394                           
  2395                           ; 16 bytes @ 0x39
  2396  000099                     	ds	1
  2397  00009A                     StartReTxTimer@i:
  2398                           	opt callstack 0
  2399  00009A                     EncryptFRMPayload@key:
  2400                           	opt callstack 0
  2401  00009A                     ___lmul@product:
  2402                           	opt callstack 0
  2403                           
  2404                           ; 4 bytes @ 0x3A
  2405  00009A                     	ds	1
  2406  00009B                     ___flmul@temp:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 2 bytes @ 0x3B
  2410  00009B                     	ds	1
  2411  00009C                     EncryptFRMPayload@macBufferIndex:
  2412                           	opt callstack 0
  2413                           
  2414                           ; 1 bytes @ 0x3C
  2415  00009C                     	ds	1
  2416  00009D                     ?___fldiv:
  2417                           	opt callstack 0
  2418  00009D                     ?_eval_poly:
  2419                           	opt callstack 0
  2420  00009D                     EncryptFRMPayload@bufferToBeEncrypted:
  2421                           	opt callstack 0
  2422  00009D                     ___fldiv@b:
  2423                           	opt callstack 0
  2424  00009D                     eval_poly@x:
  2425                           	opt callstack 0
  2426                           
  2427                           ; 4 bytes @ 0x3D
  2428  00009D                     	ds	1
  2429  00009E                     ?_ExecuteNewChannel:
  2430                           	opt callstack 0
  2431  00009E                     ?_ExecuteRxParamSetupReq:
  2432                           	opt callstack 0
  2433  00009E                     ?_rand:
  2434                           	opt callstack 0
  2435  00009E                     RADIO_WriteConfiguration@symbolTimeout:
  2436                           	opt callstack 0
  2437  00009E                     ExecuteNewChannel@ptr:
  2438                           	opt callstack 0
  2439  00009E                     ExecuteRxParamSetupReq@ptr:
  2440                           	opt callstack 0
  2441  00009E                     UpdateCfList@joinAccept:
  2442                           	opt callstack 0
  2443  00009E                     LORAWAN_LinkCheckConfigure@period:
  2444                           	opt callstack 0
  2445                           
  2446                           ; 2 bytes @ 0x3E
  2447  00009E                     	ds	1
  2448  00009F                     EncryptFRMPayload@multicastStatus:
  2449                           	opt callstack 0
  2450                           
  2451                           ; 1 bytes @ 0x3F
  2452  00009F                     	ds	1
  2453  0000A0                     ??_LORAWAN_LinkCheckConfigure:
  2454  0000A0                     ??_EncryptFRMPayload:
  2455  0000A0                     ??_RADIO_WriteConfiguration:
  2456  0000A0                     ??_UpdateCfList:
  2457  0000A0                     ?___lwmod:
  2458                           	opt callstack 0
  2459  0000A0                     ExecuteNewChannel@drRange:
  2460                           	opt callstack 0
  2461  0000A0                     ___lwmod@dividend:
  2462                           	opt callstack 0
  2463  0000A0                     ExecuteRxParamSetupReq@frequency:
  2464                           	opt callstack 0
  2465                           
  2466                           ; 4 bytes @ 0x40
  2467  0000A0                     	ds	1
  2468  0000A1                     eval_poly@d:
  2469                           	opt callstack 0
  2470  0000A1                     ExecuteNewChannel@frequency:
  2471                           	opt callstack 0
  2472  0000A1                     ___fldiv@a:
  2473                           	opt callstack 0
  2474                           
  2475                           ; 4 bytes @ 0x41
  2476  0000A1                     	ds	1
  2477  0000A2                     ___lwmod@divisor:
  2478                           	opt callstack 0
  2479                           
  2480                           ; 2 bytes @ 0x42
  2481  0000A2                     	ds	1
  2482  0000A3                     RADIO_WriteConfiguration@i:
  2483                           	opt callstack 0
  2484  0000A3                     eval_poly@n:
  2485                           	opt callstack 0
  2486                           
  2487                           ; 2 bytes @ 0x43
  2488  0000A3                     	ds	1
  2489  0000A4                     ExecuteRxParamSetupReq@dlSettings:
  2490                           	opt callstack 0
  2491  0000A4                     UpdateCfList@bufferLength:
  2492                           	opt callstack 0
  2493  0000A4                     ___lwmod@counter:
  2494                           	opt callstack 0
  2495  0000A4                     RADIO_WriteConfiguration@tempValue:
  2496                           	opt callstack 0
  2497  0000A4                     _LORAWAN_LinkCheckConfigure$2499:
  2498                           	opt callstack 0
  2499                           
  2500                           ; 4 bytes @ 0x44
  2501  0000A4                     	ds	1
  2502  0000A5                     ??___fldiv:
  2503  0000A5                     ??_eval_poly:
  2504  0000A5                     ?_Random:
  2505                           	opt callstack 0
  2506  0000A5                     ExecuteNewChannel@channelIndex:
  2507                           	opt callstack 0
  2508  0000A5                     EncryptFRMPayload@k:
  2509                           	opt callstack 0
  2510  0000A5                     Random@max:
  2511                           	opt callstack 0
  2512  0000A5                     uint16ToString@value:
  2513                           	opt callstack 0
  2514  0000A5                     UpdateCfList@frequency:
  2515                           	opt callstack 0
  2516                           
  2517                           ; 4 bytes @ 0x45
  2518  0000A5                     	ds	1
  2519  0000A6                     ?_MacExecuteCommands:
  2520                           	opt callstack 0
  2521  0000A6                     EncryptFRMPayload@i:
  2522                           	opt callstack 0
  2523  0000A6                     MacExecuteCommands@buffer:
  2524                           	opt callstack 0
  2525                           
  2526                           ; 2 bytes @ 0x46
  2527  0000A6                     	ds	1
  2528  0000A7                     SearchAvailableChannel@transmissionType:
  2529                           	opt callstack 0
  2530  0000A7                     EncryptFRMPayload@j:
  2531                           	opt callstack 0
  2532  0000A7                     uint16ToString@output:
  2533                           	opt callstack 0
  2534                           
  2535                           ; 2 bytes @ 0x47
  2536  0000A7                     	ds	1
  2537  0000A8                     RADIO_WriteConfiguration@regValue:
  2538                           	opt callstack 0
  2539  0000A8                     LORAWAN_LinkCheckConfigure@iCtr:
  2540                           	opt callstack 0
  2541  0000A8                     MacExecuteCommands@fOptsLen:
  2542                           	opt callstack 0
  2543  0000A8                     SearchAvailableChannel@channelIndex:
  2544                           	opt callstack 0
  2545                           
  2546                           ; 2 bytes @ 0x48
  2547  0000A8                     	ds	1
  2548  0000A9                     ??_MacExecuteCommands:
  2549  0000A9                     ?_RADIO_Transmit:
  2550                           	opt callstack 0
  2551  0000A9                     ?_RADIO_ReceiveStart:
  2552                           	opt callstack 0
  2553  0000A9                     LORAWAN_Reset@ismBandNew:
  2554                           	opt callstack 0
  2555  0000A9                     UpdateCfList@channelIndex:
  2556                           	opt callstack 0
  2557  0000A9                     RADIO_Transmit@buffer:
  2558                           	opt callstack 0
  2559  0000A9                     RADIO_ReceiveStart@rxWindowSize:
  2560                           	opt callstack 0
  2561  0000A9                     ___fldiv@rem:
  2562                           	opt callstack 0
  2563  0000A9                     eval_poly@res:
  2564                           	opt callstack 0
  2565  0000A9                     GenerateSubkey@l:
  2566                           	opt callstack 0
  2567                           
  2568                           ; 16 bytes @ 0x49
  2569  0000A9                     	ds	1
  2570  0000AA                     ??_SearchAvailableChannel:
  2571  0000AA                     UpdateCfList@i:
  2572                           	opt callstack 0
  2573  0000AA                     LORAWAN_Init@RxPayload:
  2574                           	opt callstack 0
  2575                           
  2576                           ; 2 bytes @ 0x4A
  2577  0000AA                     	ds	1
  2578  0000AB                     ??_RADIO_ReceiveStart:
  2579  0000AB                     RADIO_Transmit@bufferLen:
  2580                           	opt callstack 0
  2581  0000AB                     MacExecuteCommands@done:
  2582                           	opt callstack 0
  2583  0000AB                     acquisitionData@string:
  2584                           	opt callstack 0
  2585                           
  2586                           ; 2 bytes @ 0x4B
  2587  0000AB                     	ds	1
  2588  0000AC                     ??_RADIO_Transmit:
  2589  0000AC                     LORAWAN_Init@RxJoinResponse:
  2590                           	opt callstack 0
  2591  0000AC                     MacExecuteCommands@ptr:
  2592                           	opt callstack 0
  2593                           
  2594                           ; 2 bytes @ 0x4C
  2595  0000AC                     	ds	1
  2596  0000AD                     ?_log:
  2597                           	opt callstack 0
  2598  0000AD                     acquisitionData@GPIO:
  2599                           	opt callstack 0
  2600  0000AD                     ___fldiv@sign:
  2601                           	opt callstack 0
  2602  0000AD                     log@x:
  2603                           	opt callstack 0
  2604                           
  2605                           ; 4 bytes @ 0x4D
  2606  0000AD                     	ds	1
  2607  0000AE                     SearchAvailableChannel@randomNumberCopy:
  2608                           	opt callstack 0
  2609  0000AE                     ___fldiv@new_exp:
  2610                           	opt callstack 0
  2611                           
  2612                           ; 2 bytes @ 0x4E
  2613  0000AE                     	ds	1
  2614  0000AF                     SearchAvailableChannel@result:
  2615                           	opt callstack 0
  2616  0000AF                     _RADIO_ReceiveStart$784:
  2617                           	opt callstack 0
  2618                           
  2619                           ; 4 bytes @ 0x4F
  2620  0000AF                     	ds	1
  2621  0000B0                     SearchAvailableChannel@maxChannels:
  2622                           	opt callstack 0
  2623  0000B0                     ___fldiv@grs:
  2624                           	opt callstack 0
  2625                           
  2626                           ; 4 bytes @ 0x50
  2627  0000B0                     	ds	1
  2628  0000B1                     SearchAvailableChannel@randomNumber:
  2629                           	opt callstack 0
  2630  0000B1                     log@exponent:
  2631                           	opt callstack 0
  2632                           
  2633                           ; 2 bytes @ 0x51
  2634  0000B1                     	ds	1
  2635  0000B2                     SearchAvailableChannel@i:
  2636                           	opt callstack 0
  2637                           
  2638                           ; 1 bytes @ 0x52
  2639  0000B2                     	ds	1
  2640  0000B3                     SelectChannelForTransmission@transmissionType:
  2641                           	opt callstack 0
  2642  0000B3                     LORAWAN_TxDone@timeOnAir:
  2643                           	opt callstack 0
  2644                           
  2645                           ; 2 bytes @ 0x53
  2646  0000B3                     	ds	1
  2647  0000B4                     SelectChannelForTransmission@result:
  2648                           	opt callstack 0
  2649  0000B4                     ___fldiv@bexp:
  2650                           	opt callstack 0
  2651  0000B4                     _RADIO_Transmit$781:
  2652                           	opt callstack 0
  2653                           
  2654                           ; 4 bytes @ 0x54
  2655  0000B4                     	ds	1
  2656  0000B5                     ??_LORAWAN_TxDone:
  2657  0000B5                     SelectChannelForTransmission@channelIndex:
  2658                           	opt callstack 0
  2659  0000B5                     ___fldiv@aexp:
  2660                           	opt callstack 0
  2661                           
  2662                           ; 1 bytes @ 0x55
  2663  0000B5                     	ds	1
  2664  0000B6                     ?_tempConversion:
  2665                           	opt callstack 0
  2666  0000B6                     tempConversion@adcValue:
  2667                           	opt callstack 0
  2668                           
  2669                           ; 2 bytes @ 0x56
  2670  0000B6                     	ds	2
  2671  0000B8                     RADIO_Transmit@regValue:
  2672                           	opt callstack 0
  2673  0000B8                     _tempConversion$6898:
  2674                           	opt callstack 0
  2675                           
  2676                           ; 4 bytes @ 0x58
  2677  0000B8                     	ds	1
  2678  0000B9                     GenerateSubkey@i:
  2679                           	opt callstack 0
  2680  0000B9                     RADIO_Transmit@i:
  2681                           	opt callstack 0
  2682                           
  2683                           ; 1 bytes @ 0x59
  2684  0000B9                     	ds	1
  2685  0000BA                     ??_LORAWAN_RxTimeout:
  2686  0000BA                     AESCmac@key:
  2687                           	opt callstack 0
  2688                           
  2689                           ; 2 bytes @ 0x5A
  2690  0000BA                     	ds	2
  2691  0000BC                     AESCmac@output:
  2692                           	opt callstack 0
  2693  0000BC                     tempConversion@val:
  2694                           	opt callstack 0
  2695                           
  2696                           ; 4 bytes @ 0x5C
  2697  0000BC                     	ds	1
  2698  0000BD                     _LORAWAN_TxDone$1673:
  2699                           	opt callstack 0
  2700                           
  2701                           ; 4 bytes @ 0x5D
  2702  0000BD                     	ds	1
  2703  0000BE                     AESCmac@input:
  2704                           	opt callstack 0
  2705  0000BE                     LORAWAN_RxTimeout@minim:
  2706                           	opt callstack 0
  2707                           
  2708                           ; 4 bytes @ 0x5E
  2709  0000BE                     	ds	2
  2710  0000C0                     AESCmac@size:
  2711                           	opt callstack 0
  2712  0000C0                     tempConversion@temp:
  2713                           	opt callstack 0
  2714                           
  2715                           ; 4 bytes @ 0x60
  2716  0000C0                     	ds	1
  2717  0000C1                     ??_AESCmac:
  2718  0000C1                     _LORAWAN_TxDone$1674:
  2719                           	opt callstack 0
  2720                           
  2721                           ; 4 bytes @ 0x61
  2722  0000C1                     	ds	1
  2723  0000C2                     LORAWAN_RxTimeout@i:
  2724                           	opt callstack 0
  2725                           
  2726                           ; 1 bytes @ 0x62
  2727  0000C2                     	ds	1
  2728  0000C3                     ??_RADIO_DIO1:
  2729                           
  2730                           ; 1 bytes @ 0x63
  2731  0000C3                     	ds	1
  2732  0000C4                     RADIO_DIO1@dioMapping:
  2733                           	opt callstack 0
  2734  0000C4                     tempSensAcquisition@value:
  2735                           	opt callstack 0
  2736                           
  2737                           ; 2 bytes @ 0x64
  2738  0000C4                     	ds	1
  2739  0000C5                     LORAWAN_TxDone@found:
  2740                           	opt callstack 0
  2741                           
  2742                           ; 1 bytes @ 0x65
  2743  0000C5                     	ds	1
  2744  0000C6                     tempSensAcquisition@temp:
  2745                           	opt callstack 0
  2746  0000C6                     LORAWAN_TxDone@delta:
  2747                           	opt callstack 0
  2748                           
  2749                           ; 4 bytes @ 0x66
  2750  0000C6                     	ds	2
  2751  0000C8                     ?_ComputeMic:
  2752                           	opt callstack 0
  2753  0000C8                     AssemblePacket@port:
  2754                           	opt callstack 0
  2755  0000C8                     ComputeMic@key:
  2756                           	opt callstack 0
  2757                           
  2758                           ; 2 bytes @ 0x68
  2759  0000C8                     	ds	1
  2760  0000C9                     AssemblePacket@buffer:
  2761                           	opt callstack 0
  2762                           
  2763                           ; 2 bytes @ 0x69
  2764  0000C9                     	ds	1
  2765  0000CA                     ComputeMic@buffer:
  2766                           	opt callstack 0
  2767  0000CA                     _LORAWAN_TxDone$6895:
  2768                           	opt callstack 0
  2769                           
  2770                           ; 4 bytes @ 0x6A
  2771  0000CA                     	ds	1
  2772  0000CB                     AssemblePacket@bufferLength:
  2773                           	opt callstack 0
  2774                           
  2775                           ; 2 bytes @ 0x6B
  2776  0000CB                     	ds	1
  2777  0000CC                     ComputeMic@bufferLength:
  2778                           	opt callstack 0
  2779                           
  2780                           ; 1 bytes @ 0x6C
  2781  0000CC                     	ds	1
  2782  0000CD                     ??_AssemblePacket:
  2783  0000CD                     ComputeMic@mic:
  2784                           	opt callstack 0
  2785                           
  2786                           ; 4 bytes @ 0x6D
  2787  0000CD                     	ds	1
  2788  0000CE                     LORAWAN_TxDone@ticks:
  2789                           	opt callstack 0
  2790                           
  2791                           ; 4 bytes @ 0x6E
  2792  0000CE                     	ds	1
  2793  0000CF                     AssemblePacket@confirmed:
  2794                           	opt callstack 0
  2795                           
  2796                           ; 1 bytes @ 0x6F
  2797  0000CF                     	ds	1
  2798  0000D0                     AssemblePacket@mhdr:
  2799                           	opt callstack 0
  2800                           
  2801                           ; 1 bytes @ 0x70
  2802  0000D0                     	ds	1
  2803  0000D1                     ??_PrepareJoinRequestFrame:
  2804  0000D1                     AssemblePacket@fCtrl:
  2805                           	opt callstack 0
  2806                           
  2807                           ; 1 bytes @ 0x71
  2808  0000D1                     	ds	1
  2809  0000D2                     AssemblePacket@macCmdIdx:
  2810                           	opt callstack 0
  2811  0000D2                     LORAWAN_TxDone@minim:
  2812                           	opt callstack 0
  2813                           
  2814                           ; 4 bytes @ 0x72
  2815  0000D2                     	ds	1
  2816  0000D3                     AssemblePacket@bufferIndex:
  2817                           	opt callstack 0
  2818  0000D3                     PrepareJoinRequestFrame@mic:
  2819                           	opt callstack 0
  2820                           
  2821                           ; 4 bytes @ 0x73
  2822  0000D3                     	ds	1
  2823  0000D4                     LORAWAN_Send@port:
  2824                           	opt callstack 0
  2825                           
  2826                           ; 1 bytes @ 0x74
  2827  0000D4                     	ds	1
  2828  0000D5                     LORAWAN_Send@buffer:
  2829                           	opt callstack 0
  2830                           
  2831                           ; 2 bytes @ 0x75
  2832  0000D5                     	ds	1
  2833  0000D6                     LORAWAN_TxDone@i:
  2834                           	opt callstack 0
  2835                           
  2836                           ; 1 bytes @ 0x76
  2837  0000D6                     	ds	1
  2838  0000D7                     LORAWAN_Send@bufferLength:
  2839                           	opt callstack 0
  2840  0000D7                     PrepareJoinRequestFrame@mhdr:
  2841                           	opt callstack 0
  2842  0000D7                     RADIO_TxDone@timeOnAir:
  2843                           	opt callstack 0
  2844  0000D7                     RADIO_FSKPacketSent@timeOnAir:
  2845                           	opt callstack 0
  2846                           
  2847                           ; 4 bytes @ 0x77
  2848  0000D7                     	ds	1
  2849  0000D8                     ??_LORAWAN_Send:
  2850  0000D8                     PrepareJoinRequestFrame@iCtr:
  2851                           	opt callstack 0
  2852                           
  2853                           ; 1 bytes @ 0x78
  2854  0000D8                     	ds	1
  2855  0000D9                     LORAWAN_Send@confirmed:
  2856                           	opt callstack 0
  2857  0000D9                     PrepareJoinRequestFrame@bufferIndex:
  2858                           	opt callstack 0
  2859                           
  2860                           ; 1 bytes @ 0x79
  2861  0000D9                     	ds	1
  2862  0000DA                     LORAWAN_Join@bufferIndex:
  2863                           	opt callstack 0
  2864  0000DA                     LORAWAN_Send@result:
  2865                           	opt callstack 0
  2866                           
  2867                           ; 1 bytes @ 0x7A
  2868  0000DA                     	ds	1
  2869  0000DB                     ??_LORAWAN_RxDone:
  2870  0000DB                     ??_SwTimersExecute:
  2871  0000DB                     LORAWAN_Join@result:
  2872                           	opt callstack 0
  2873  0000DB                     _RADIO_TxDone$796:
  2874                           	opt callstack 0
  2875  0000DB                     _RADIO_FSKPacketSent$800:
  2876                           	opt callstack 0
  2877                           
  2878                           ; 4 bytes @ 0x7B
  2879  0000DB                     	ds	1
  2880  0000DC                     LORAWAN_Join@activationTypeNew:
  2881                           	opt callstack 0
  2882                           
  2883                           ; 1 bytes @ 0x7C
  2884  0000DC                     	ds	3
  2885  0000DF                     SwTimersExecute@i:
  2886                           	opt callstack 0
  2887  0000DF                     RADIO_FSKPacketSent@irqFlags:
  2888                           	opt callstack 0
  2889                           
  2890                           ; 1 bytes @ 0x7F
  2891  0000DF                     	ds	1
  2892  0000E0                     LORAWAN_RxDone@fPort:
  2893                           	opt callstack 0
  2894                           
  2895                           ; 1 bytes @ 0x80
  2896  0000E0                     	ds	1
  2897  0000E1                     LORAWAN_RxDone@channelIndex:
  2898                           	opt callstack 0
  2899                           
  2900                           ; 1 bytes @ 0x81
  2901  0000E1                     	ds	1
  2902  0000E2                     LORAWAN_RxDone@mhdr:
  2903                           	opt callstack 0
  2904                           
  2905                           ; 1 bytes @ 0x82
  2906  0000E2                     	ds	1
  2907  0000E3                     LORAWAN_RxDone@extractedMic:
  2908                           	opt callstack 0
  2909                           
  2910                           ; 4 bytes @ 0x83
  2911  0000E3                     	ds	4
  2912  0000E7                     LORAWAN_RxDone@bufferIndex:
  2913                           	opt callstack 0
  2914                           
  2915                           ; 1 bytes @ 0x87
  2916  0000E7                     	ds	1
  2917  0000E8                     LORAWAN_RxDone@temp:
  2918                           	opt callstack 0
  2919                           
  2920                           ; 1 bytes @ 0x88
  2921  0000E8                     	ds	1
  2922  0000E9                     LORAWAN_RxDone@packet:
  2923                           	opt callstack 0
  2924                           
  2925                           ; 2 bytes @ 0x89
  2926  0000E9                     	ds	2
  2927  0000EB                     LORAWAN_RxDone@computedMic:
  2928                           	opt callstack 0
  2929                           
  2930                           ; 4 bytes @ 0x8B
  2931  0000EB                     	ds	4
  2932  0000EF                     LORAWAN_RxDone@joinAccept:
  2933                           	opt callstack 0
  2934                           
  2935                           ; 2 bytes @ 0x8F
  2936  0000EF                     	ds	2
  2937  0000F1                     LORAWAN_RxDone@frmPayloadLength:
  2938                           	opt callstack 0
  2939                           
  2940                           ; 1 bytes @ 0x91
  2941  0000F1                     	ds	1
  2942  0000F2                     LORAWAN_RxDone@hdr:
  2943                           	opt callstack 0
  2944                           
  2945                           ; 2 bytes @ 0x92
  2946  0000F2                     	ds	2
  2947  0000F4                     RADIO_RxDone@irqFlags:
  2948                           	opt callstack 0
  2949  0000F4                     RADIO_FSKPayloadReady@irqFlags:
  2950                           	opt callstack 0
  2951                           
  2952                           ; 1 bytes @ 0x94
  2953  0000F4                     	ds	1
  2954  0000F5                     RADIO_RxDone@i:
  2955                           	opt callstack 0
  2956  0000F5                     RADIO_FSKPayloadReady@i:
  2957                           	opt callstack 0
  2958                           
  2959                           ; 1 bytes @ 0x95
  2960  0000F5                     	ds	1
  2961  0000F6                     ??_RADIO_DIO0:
  2962                           
  2963                           ; 1 bytes @ 0x96
  2964  0000F6                     	ds	2
  2965  0000F8                     RADIO_DIO0@dioMapping:
  2966                           	opt callstack 0
  2967                           
  2968                           ; 1 bytes @ 0x98
  2969  0000F8                     	ds	1
  2970  0000F9                     RADIO_DIO0@opMode:
  2971                           	opt callstack 0
  2972                           
  2973                           ; 1 bytes @ 0x99
  2974  0000F9                     	ds	1
  2975  0000FA                     sendValue@firstSend:
  2976                           	opt callstack 0
  2977                           
  2978                           ; 1 bytes @ 0x9A
  2979  0000FA                     	ds	1
  2980  0000FB                     sendValue@status:
  2981                           	opt callstack 0
  2982                           
  2983                           ; 1 bytes @ 0x9B
  2984  0000FB                     	ds	1
  2985  0000FC                     
  2986                           ; 1 bytes @ 0x9C
  2987                           
  2988                           	psect	cstackCOMRAM
  2989  000001                     __pcstackCOMRAM:
  2990                           	opt callstack 0
  2991  000001                     ?i2_TMR1_ReadTimer:
  2992                           	opt callstack 0
  2993  000001                     ?i2___awdiv:
  2994                           	opt callstack 0
  2995  000001                     ?i2___lwdiv:
  2996                           	opt callstack 0
  2997  000001                     ?i2___lwmod:
  2998                           	opt callstack 0
  2999  000001                     ___lbmod@divisor:
  3000                           	opt callstack 0
  3001  000001                     TMR3_WriteTimer@timerVal:
  3002                           	opt callstack 0
  3003  000001                     TMR5_WriteTimer@timerVal:
  3004                           	opt callstack 0
  3005  000001                     i2TMR1_WriteTimer@timerVal:
  3006                           	opt callstack 0
  3007  000001                     i2___awdiv@dividend:
  3008                           	opt callstack 0
  3009  000001                     i2___lwdiv@dividend:
  3010                           	opt callstack 0
  3011  000001                     i2___lwmod@dividend:
  3012                           	opt callstack 0
  3013                           
  3014                           ; 2 bytes @ 0x0
  3015  000001                     	ds	1
  3016  000002                     ___lbmod@dividend:
  3017                           	opt callstack 0
  3018                           
  3019                           ; 1 bytes @ 0x1
  3020  000002                     	ds	1
  3021  000003                     ??i2_TMR1_ReadTimer:
  3022  000003                     ___lbmod@counter:
  3023                           	opt callstack 0
  3024  000003                     i2___awdiv@divisor:
  3025                           	opt callstack 0
  3026  000003                     i2___lwdiv@divisor:
  3027                           	opt callstack 0
  3028  000003                     i2___lwmod@divisor:
  3029                           	opt callstack 0
  3030                           
  3031                           ; 2 bytes @ 0x2
  3032  000003                     	ds	1
  3033  000004                     ___lbmod@rem:
  3034                           	opt callstack 0
  3035                           
  3036                           ; 1 bytes @ 0x3
  3037  000004                     	ds	1
  3038  000005                     i2___awdiv@counter:
  3039                           	opt callstack 0
  3040  000005                     i2___lwmod@counter:
  3041                           	opt callstack 0
  3042  000005                     i2TMR1_ReadTimer@readVal:
  3043                           	opt callstack 0
  3044  000005                     i2___lwdiv@quotient:
  3045                           	opt callstack 0
  3046                           
  3047                           ; 2 bytes @ 0x4
  3048  000005                     	ds	1
  3049  000006                     i2___awdiv@sign:
  3050                           	opt callstack 0
  3051                           
  3052                           ; 1 bytes @ 0x5
  3053  000006                     	ds	1
  3054  000007                     i2TMR1_ReadTimer@readValHigh:
  3055                           	opt callstack 0
  3056  000007                     i2___lwdiv@counter:
  3057                           	opt callstack 0
  3058  000007                     i2___awdiv@quotient:
  3059                           	opt callstack 0
  3060                           
  3061                           ; 2 bytes @ 0x6
  3062  000007                     	ds	1
  3063  000008                     i2TMR1_ReadTimer@readValLow:
  3064                           	opt callstack 0
  3065                           
  3066                           ; 1 bytes @ 0x7
  3067  000008                     	ds	1
  3068  000009                     ?i2_TMR_SwapTimer:
  3069                           	opt callstack 0
  3070  000009                     ?i2_TMR_GetDeltaTime:
  3071                           	opt callstack 0
  3072  000009                     i2TMR_SwapTimer@timerVal:
  3073                           	opt callstack 0
  3074                           
  3075                           ; 2 bytes @ 0x8
  3076  000009                     	ds	2
  3077  00000B                     
  3078                           ; 1 bytes @ 0xA
  3079  00000B                     	ds	2
  3080  00000D                     ??i2_TMR_GetDeltaTime:
  3081                           
  3082                           ; 1 bytes @ 0xC
  3083  00000D                     	ds	12
  3084  000019                     ?i2_SwTimersInterrupt:
  3085                           	opt callstack 0
  3086                           
  3087                           ; 4 bytes @ 0x18
  3088  000019                     	ds	4
  3089  00001D                     
  3090                           ; 1 bytes @ 0x1C
  3091  00001D                     	ds	4
  3092  000021                     i2SwTimersInterrupt@timeElapsed:
  3093                           	opt callstack 0
  3094                           
  3095                           ; 4 bytes @ 0x20
  3096  000021                     	ds	4
  3097  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  3098                           	opt callstack 0
  3099                           
  3100                           ; 4 bytes @ 0x24
  3101  000025                     	ds	4
  3102  000029                     i2SwTimersInterrupt@i:
  3103                           	opt callstack 0
  3104                           
  3105                           ; 1 bytes @ 0x28
  3106  000029                     	ds	1
  3107  00002A                     ??_INTERRUPT_InterruptManager:
  3108                           
  3109                           ; 1 bytes @ 0x29
  3110  00002A                     	ds	8
  3111                           
  3112 ;;
  3113 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3114 ;;
  3115 ;; *************** function _main *****************
  3116 ;; Defined at:
  3117 ;;		line 91 in file "main.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;Total ram usage:        0 bytes
  3136 ;; Hardware stack levels required when called:   21
  3137 ;; This function calls:
  3138 ;;		_GPIODigitalToogle
  3139 ;;		_GPIODigitalWrite
  3140 ;;		_GPIOInit
  3141 ;;		_GPIOSet
  3142 ;;		_LORAWAN_Init
  3143 ;;		_LORAWAN_Join
  3144 ;;		_LORAWAN_Mainloop
  3145 ;;		_LORAWAN_Reset
  3146 ;;		_LORAWAN_SetApplicationEui
  3147 ;;		_LORAWAN_SetApplicationKey
  3148 ;;		_LORAWAN_SetDeviceEui
  3149 ;;		_SYSTEM_Initialize
  3150 ;;		_TMR5_StartTimer
  3151 ;;		_acuadoriApp
  3152 ;;		_disableClockPeripherals
  3153 ;;		_enableClockPeripherals
  3154 ;;		_isJoined
  3155 ;;		_timerReset
  3156 ;; This function is called by:
  3157 ;;		Startup code after reset
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text0
  3162  005430                     __ptext0:
  3163                           	opt callstack 0
  3164  005430                     _main:
  3165                           	opt callstack 10
  3166                           
  3167                           ;main.c: 93: SYSTEM_Initialize();
  3168                           
  3169                           ;incstack = 0
  3170  005430  EC57  F04F         	call	_SYSTEM_Initialize	;wreg free
  3171                           
  3172                           ;main.c: 94: GPIOInit();
  3173  005434  EC94  F02E         	call	_GPIOInit	;wreg free
  3174                           
  3175                           ;main.c: 95: GPIODigitalWrite(0x19, 1);
  3176  005438  0E01               	movlw	1
  3177  00543A  0100               	movlb	0	; () banked
  3178  00543C  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3179  00543E  0E19               	movlw	25
  3180  005440  EC18  F037         	call	_GPIODigitalWrite
  3181                           
  3182                           ;main.c: 110: (INTCONbits.GIE = 1);
  3183  005444  8EF2               	bsf	4082,7,c	;volatile
  3184                           
  3185                           ;main.c: 112: (INTCONbits.PEIE = 1);
  3186  005446  8CF2               	bsf	4082,6,c	;volatile
  3187                           
  3188                           ;main.c: 118: LORAWAN_Init(RxData, RxJoinResponse);
  3189  005448  0EF4               	movlw	low _RxData
  3190  00544A  0100               	movlb	0	; () banked
  3191  00544C  6FAA               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  3192  00544E  0EA8               	movlw	high _RxData
  3193  005450  6FAB               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  3194  005452  0E36               	movlw	low _RxJoinResponse
  3195  005454  6FAC               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  3196  005456  0EA5               	movlw	high _RxJoinResponse
  3197  005458  6FAD               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  3198  00545A  ECBB  F047         	call	_LORAWAN_Init	;wreg free
  3199                           
  3200                           ;main.c: 127: LORAWAN_SetApplicationKey(appKey);
  3201  00545E  0EE0               	movlw	low _appKey
  3202  005460  0100               	movlb	0	; () banked
  3203  005462  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  3204  005464  0E03               	movlw	high _appKey
  3205  005466  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  3206  005468  EC9C  F04F         	call	_LORAWAN_SetApplicationKey	;wreg free
  3207                           
  3208                           ;main.c: 128: LORAWAN_SetApplicationEui(appEui);
  3209  00546C  0EC8               	movlw	low _appEui
  3210  00546E  0100               	movlb	0	; () banked
  3211  005470  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  3212  005472  0E03               	movlw	high _appEui
  3213  005474  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  3214  005476  ECB3  F04F         	call	_LORAWAN_SetApplicationEui	;wreg free
  3215                           
  3216                           ;main.c: 129: LORAWAN_SetDeviceEui(deviceEui);
  3217  00547A  0EF0               	movlw	low _deviceEui
  3218  00547C  0100               	movlb	0	; () banked
  3219  00547E  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  3220  005480  0E03               	movlw	high _deviceEui
  3221  005482  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  3222  005484  EC85  F04F         	call	_LORAWAN_SetDeviceEui	;wreg free
  3223                           
  3224                           ;main.c: 132: LORAWAN_Join(OTAA);
  3225  005488  0E00               	movlw	0
  3226  00548A  ECEA  F03E         	call	_LORAWAN_Join
  3227                           
  3228                           ;main.c: 137: OSCCONbits.IDLEN = 1;
  3229  00548E  8ED3               	bsf	4051,7,c	;volatile
  3230                           
  3231                           ;main.c: 142: TMR5_StartTimer();
  3232  005490  EC5C  F054         	call	_TMR5_StartTimer	;wreg free
  3233                           
  3234                           ;main.c: 143: timerReset();
  3235  005494  EC0F  F050         	call	_timerReset	;wreg free
  3236                           
  3237                           ;main.c: 146: firstSend = 1;
  3238  005498  0E01               	movlw	1
  3239  00549A  0101               	movlb	1	; () banked
  3240  00549C  6F24               	movwf	_firstSend& (0+255),b
  3241  00549E                     l22218:
  3242                           
  3243                           ;main.c: 170: LORAWAN_Mainloop();
  3244  00549E  EC64  F04D         	call	_LORAWAN_Mainloop	;wreg free
  3245                           
  3246                           ;main.c: 173: if (isJoined() && (timer.hour >= 1 || firstSend)){
  3247  0054A2  EC95  F051         	call	_isJoined	;wreg free
  3248  0054A6  0900               	iorlw	0
  3249  0054A8  B4D8               	btfsc	status,2,c
  3250  0054AA  D043               	goto	l22250
  3251  0054AC  0101               	movlb	1	; () banked
  3252  0054AE  5104               	movf	(_timer+4)& (0+255),w,b
  3253  0054B0  A4D8               	btfss	status,2,c
  3254  0054B2  D003               	goto	u25160
  3255                           
  3256                           ; BSR set to: 1
  3257  0054B4  5124               	movf	_firstSend& (0+255),w,b
  3258  0054B6  B4D8               	btfsc	status,2,c
  3259  0054B8  D03C               	goto	l22250
  3260  0054BA                     u25160:
  3261                           
  3262                           ; BSR set to: 1
  3263                           ;main.c: 174: GPIODigitalWrite(0x11, 0);
  3264  0054BA  0E00               	movlw	0
  3265  0054BC  0100               	movlb	0	; () banked
  3266  0054BE  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3267  0054C0  0E11               	movlw	17
  3268  0054C2  EC18  F037         	call	_GPIODigitalWrite
  3269                           
  3270                           ;main.c: 175: GPIODigitalWrite(0x19, 0);
  3271  0054C6  0E00               	movlw	0
  3272  0054C8  0100               	movlb	0	; () banked
  3273  0054CA  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3274  0054CC  0E19               	movlw	25
  3275  0054CE  EC18  F037         	call	_GPIODigitalWrite
  3276                           
  3277                           ;main.c: 177: firstSend = 0;
  3278  0054D2  0E00               	movlw	0
  3279  0054D4  0101               	movlb	1	; () banked
  3280  0054D6  6F24               	movwf	_firstSend& (0+255),b
  3281                           
  3282                           ; BSR set to: 1
  3283                           ;main.c: 178: enableClockPeripherals();
  3284  0054D8  EC60  F053         	call	_enableClockPeripherals	;wreg free
  3285                           
  3286                           ;main.c: 179: acuadoriApp();
  3287  0054DC  ECD1  F01C         	call	_acuadoriApp	;wreg free
  3288                           
  3289                           ;main.c: 180: disableClockPeripherals();
  3290  0054E0  EC3C  F054         	call	_disableClockPeripherals	;wreg free
  3291                           
  3292                           ;main.c: 181: GPIOSet(0x01, 0);
  3293  0054E4  0E00               	movlw	0
  3294  0054E6  0100               	movlb	0	; () banked
  3295  0054E8  6F60               	movwf	GPIOSet@mode& (0+255),b
  3296  0054EA  0E01               	movlw	1
  3297  0054EC  EC9A  F036         	call	_GPIOSet
  3298                           
  3299                           ;main.c: 182: GPIOSet(0x02, 0);
  3300  0054F0  0E00               	movlw	0
  3301  0054F2  0100               	movlb	0	; () banked
  3302  0054F4  6F60               	movwf	GPIOSet@mode& (0+255),b
  3303  0054F6  0E02               	movlw	2
  3304  0054F8  EC9A  F036         	call	_GPIOSet
  3305                           
  3306                           ;main.c: 183: GPIOSet(0x03, 0);
  3307  0054FC  0E00               	movlw	0
  3308  0054FE  0100               	movlb	0	; () banked
  3309  005500  6F60               	movwf	GPIOSet@mode& (0+255),b
  3310  005502  0E03               	movlw	3
  3311  005504  EC9A  F036         	call	_GPIOSet
  3312                           
  3313                           ;main.c: 184: GPIODigitalWrite(0x01, 0);
  3314  005508  0E00               	movlw	0
  3315  00550A  0100               	movlb	0	; () banked
  3316  00550C  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3317  00550E  0E01               	movlw	1
  3318  005510  EC18  F037         	call	_GPIODigitalWrite
  3319                           
  3320                           ;main.c: 185: GPIODigitalWrite(0x02, 0);
  3321  005514  0E00               	movlw	0
  3322  005516  0100               	movlb	0	; () banked
  3323  005518  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3324  00551A  0E02               	movlw	2
  3325  00551C  EC18  F037         	call	_GPIODigitalWrite
  3326                           
  3327                           ;main.c: 186: GPIODigitalWrite(0x03, 0);
  3328  005520  0E00               	movlw	0
  3329  005522  0100               	movlb	0	; () banked
  3330  005524  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3331  005526  0E03               	movlw	3
  3332  005528  EC18  F037         	call	_GPIODigitalWrite
  3333  00552C                     l22248:
  3334                           
  3335                           ;main.c: 187: timerReset();
  3336  00552C  EC0F  F050         	call	_timerReset	;wreg free
  3337                           
  3338                           ;main.c: 188: }
  3339  005530  D028               	goto	l2704
  3340  005532                     l22250:
  3341                           
  3342                           ;main.c: 190: else if (timer.sec >= 16 && !isJoined()){
  3343  005532  0E0F               	movlw	15
  3344  005534  0101               	movlb	1	; () banked
  3345  005536  6502               	cpfsgt	(_timer+2)& (0+255),b
  3346  005538  D024               	goto	l2704
  3347                           
  3348                           ; BSR set to: 1
  3349  00553A  EC95  F051         	call	_isJoined	;wreg free
  3350  00553E  0900               	iorlw	0
  3351  005540  A4D8               	btfss	status,2,c
  3352  005542  D01F               	goto	l2704
  3353                           
  3354                           ;main.c: 194: LORAWAN_Reset (ISM_EU868);
  3355  005544  0E00               	movlw	0
  3356  005546  EC1C  F023         	call	_LORAWAN_Reset
  3357                           
  3358                           ;main.c: 195: LORAWAN_SetApplicationKey(appKey);
  3359  00554A  0EE0               	movlw	low _appKey
  3360  00554C  0100               	movlb	0	; () banked
  3361  00554E  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  3362  005550  0E03               	movlw	high _appKey
  3363  005552  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  3364  005554  EC9C  F04F         	call	_LORAWAN_SetApplicationKey	;wreg free
  3365                           
  3366                           ;main.c: 196: LORAWAN_SetApplicationEui(appEui);
  3367  005558  0EC8               	movlw	low _appEui
  3368  00555A  0100               	movlb	0	; () banked
  3369  00555C  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  3370  00555E  0E03               	movlw	high _appEui
  3371  005560  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  3372  005562  ECB3  F04F         	call	_LORAWAN_SetApplicationEui	;wreg free
  3373                           
  3374                           ;main.c: 197: LORAWAN_SetDeviceEui(deviceEui);
  3375  005566  0EF0               	movlw	low _deviceEui
  3376  005568  0100               	movlb	0	; () banked
  3377  00556A  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  3378  00556C  0E03               	movlw	high _deviceEui
  3379  00556E  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  3380  005570  EC85  F04F         	call	_LORAWAN_SetDeviceEui	;wreg free
  3381                           
  3382                           ;main.c: 198: LORAWAN_Join(OTAA);
  3383  005574  0E00               	movlw	0
  3384  005576  ECEA  F03E         	call	_LORAWAN_Join
  3385                           
  3386                           ;main.c: 199: GPIODigitalToogle(0x11);
  3387  00557A  0E11               	movlw	17
  3388  00557C  EC8C  F03F         	call	_GPIODigitalToogle
  3389  005580  D7D5               	goto	l22248
  3390  005582                     l2704:
  3391  005582  0003               	sleep		;# 
  3392                           
  3393                           ;main.c: 204: __nop();
  3394  005584  F000               	nop	
  3395                           
  3396                           ;main.c: 205: __nop();
  3397  005586  F000               	nop	
  3398  005588  D78A               	goto	l22218
  3399  00558A                     __end_of_main:
  3400                           	opt callstack 0
  3401                           
  3402 ;; *************** function _isJoined *****************
  3403 ;; Defined at:
  3404 ;;		line 396 in file "rn2483APP.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  value           4    8[BANK0 ] unsigned long 
  3409 ;;  joined          1   12[BANK0 ] unsigned char 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      unsigned char 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;Total ram usage:        5 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    8
  3426 ;; This function calls:
  3427 ;;		_LORAWAN_GetStatus
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a non-reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text1
  3434  00A32A                     __ptext1:
  3435                           	opt callstack 0
  3436  00A32A                     _isJoined:
  3437                           	opt callstack 22
  3438                           
  3439                           ;rn2483APP.c: 397: uint32_t value;;rn2483APP.c: 398: uint8_t joined;;rn2483APP.c: 399: v
      +                          alue = LORAWAN_GetStatus();
  3440                           
  3441                           ;incstack = 0
  3442  00A32A  EC98  F04E         	call	_LORAWAN_GetStatus	;wreg free
  3443  00A32E  C060  F068         	movff	?_LORAWAN_GetStatus,isJoined@value
  3444  00A332  C061  F069         	movff	?_LORAWAN_GetStatus+1,isJoined@value+1
  3445  00A336  C062  F06A         	movff	?_LORAWAN_GetStatus+2,isJoined@value+2
  3446  00A33A  C063  F06B         	movff	?_LORAWAN_GetStatus+3,isJoined@value+3
  3447                           
  3448                           ;rn2483APP.c: 400: joined = value & 0x10;
  3449  00A33E  0100               	movlb	0	; () banked
  3450  00A340  5168               	movf	isJoined@value& (0+255),w,b
  3451  00A342  0B10               	andlw	16
  3452  00A344  6F6C               	movwf	isJoined@joined& (0+255),b
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;rn2483APP.c: 401: return joined;
  3456  00A346  516C               	movf	isJoined@joined& (0+255),w,b
  3457                           
  3458                           ; BSR set to: 0
  3459  00A348  0012               	return		;funcret
  3460  00A34A                     __end_of_isJoined:
  3461                           	opt callstack 0
  3462                           
  3463 ;; *************** function _LORAWAN_GetStatus *****************
  3464 ;; Defined at:
  3465 ;;		line 658 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  status          4    4[BANK0 ] unsigned long 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  4    0[BANK0 ] unsigned long 
  3472 ;; Registers used:
  3473 ;;		None
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3479 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;Total ram usage:        8 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    7
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_isJoined
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text2
  3494  009D30                     __ptext2:
  3495                           	opt callstack 0
  3496  009D30                     _LORAWAN_GetStatus:
  3497                           	opt callstack 22
  3498                           
  3499                           ;lorawan.c: 660: uint32_t status = loRa.macStatus.value;
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;incstack = 0
  3503  009D30  C207  F064         	movff	_loRa+2,LORAWAN_GetStatus@status
  3504  009D34  C208  F065         	movff	_loRa+3,LORAWAN_GetStatus@status+1
  3505  009D38  C209  F066         	movff	_loRa+4,LORAWAN_GetStatus@status+2
  3506  009D3C  C20A  F067         	movff	_loRa+5,LORAWAN_GetStatus@status+3
  3507                           
  3508                           ;lorawan.c: 662: loRa.macStatus.channelsModified = 0;
  3509  009D40  0102               	movlb	2	; () banked
  3510  009D42  9708               	bcf	(_loRa+3)& (0+255),3,b
  3511                           
  3512                           ;lorawan.c: 663: loRa.macStatus.txPowerModified = 0;
  3513  009D44  9908               	bcf	(_loRa+3)& (0+255),4,b
  3514                           
  3515                           ;lorawan.c: 664: loRa.macStatus.nbRepModified = 0;
  3516  009D46  9B08               	bcf	(_loRa+3)& (0+255),5,b
  3517                           
  3518                           ;lorawan.c: 665: loRa.macStatus.prescalerModified = 0;
  3519  009D48  9D08               	bcf	(_loRa+3)& (0+255),6,b
  3520                           
  3521                           ;lorawan.c: 666: loRa.macStatus.secondReceiveWindowModified = 0;
  3522  009D4A  9F08               	bcf	(_loRa+3)& (0+255),7,b
  3523                           
  3524                           ;lorawan.c: 667: loRa.macStatus.rxTimingSetup = 0;
  3525  009D4C  9109               	bcf	(_loRa+4)& (0+255),0,b
  3526                           
  3527                           ;lorawan.c: 669: return status;
  3528  009D4E  C064  F060         	movff	LORAWAN_GetStatus@status,?_LORAWAN_GetStatus
  3529  009D52  C065  F061         	movff	LORAWAN_GetStatus@status+1,?_LORAWAN_GetStatus+1
  3530  009D56  C066  F062         	movff	LORAWAN_GetStatus@status+2,?_LORAWAN_GetStatus+2
  3531  009D5A  C067  F063         	movff	LORAWAN_GetStatus@status+3,?_LORAWAN_GetStatus+3
  3532                           
  3533                           ; BSR set to: 2
  3534  009D5E  0012               	return		;funcret
  3535  009D60                     __end_of_LORAWAN_GetStatus:
  3536                           	opt callstack 0
  3537                           
  3538 ;; *************** function _enableClockPeripherals *****************
  3539 ;; Defined at:
  3540 ;;		line 16 in file "rn2483APP.c"
  3541 ;; Parameters:    Size  Location     Type
  3542 ;;		None
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;		None
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;Total ram usage:        0 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    9
  3561 ;; This function calls:
  3562 ;;		_ADC_Initialize
  3563 ;;		_TMR3_Initialize
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text3
  3570  00A6C0                     __ptext3:
  3571                           	opt callstack 0
  3572  00A6C0                     _enableClockPeripherals:
  3573                           	opt callstack 21
  3574                           
  3575                           ;rn2483APP.c: 17: PMD0bits.TMR3MD = 0;
  3576                           
  3577                           ; BSR set to: 2
  3578                           ;incstack = 0
  3579  00A6C0  010F               	movlb	15	; () banked
  3580  00A6C2  953F               	bcf	63,2,b	;volatile
  3581                           
  3582                           ;rn2483APP.c: 18: PMD2bits.ADCMD = 0;
  3583  00A6C4  913D               	bcf	61,0,b	;volatile
  3584                           
  3585                           ; BSR set to: 15
  3586                           ;rn2483APP.c: 19: TMR3_Initialize();
  3587  00A6C6  EC3B  F050         	call	_TMR3_Initialize	;wreg free
  3588                           
  3589                           ;rn2483APP.c: 20: ADC_Initialize();
  3590  00A6CA  EC12  F053         	call	_ADC_Initialize	;wreg free
  3591  00A6CE  0012               	return		;funcret
  3592  00A6D0                     __end_of_enableClockPeripherals:
  3593                           	opt callstack 0
  3594                           
  3595 ;; *************** function _disableClockPeripherals *****************
  3596 ;; Defined at:
  3597 ;;		line 24 in file "rn2483APP.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;		None
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  1    wreg      void 
  3604 ;; Registers used:
  3605 ;;		None
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;Total ram usage:        0 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    7
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text4
  3626  00A878                     __ptext4:
  3627                           	opt callstack 0
  3628  00A878                     _disableClockPeripherals:
  3629                           	opt callstack 23
  3630                           
  3631                           ;rn2483APP.c: 25: PMD0bits.TMR3MD = 1;
  3632                           
  3633                           ;incstack = 0
  3634  00A878  010F               	movlb	15	; () banked
  3635  00A87A  853F               	bsf	63,2,b	;volatile
  3636                           
  3637                           ;rn2483APP.c: 26: PMD2bits.ADCMD = 1;
  3638  00A87C  813D               	bsf	61,0,b	;volatile
  3639                           
  3640                           ; BSR set to: 15
  3641  00A87E  0012               	return		;funcret
  3642  00A880                     __end_of_disableClockPeripherals:
  3643                           	opt callstack 0
  3644                           
  3645 ;; *************** function _acuadoriApp *****************
  3646 ;; Defined at:
  3647 ;;		line 34 in file "acuadori.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;		None
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;		None
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;Total ram usage:        0 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:   20
  3668 ;; This function calls:
  3669 ;;		_GPIODigitalWrite
  3670 ;;		_LORAWAN_GetUplinkCounter
  3671 ;;		_LORAWAN_SetUplinkCounter
  3672 ;;		_impedenceAcquisition
  3673 ;;		_leafSensAcquisition
  3674 ;;		_lightSensAcquisition
  3675 ;;		_memcpy
  3676 ;;		_rn2483_delaysec
  3677 ;;		_sendValue
  3678 ;;		_strncat
  3679 ;;		_tempSensAcquisition
  3680 ;; This function is called by:
  3681 ;;		_main
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text5
  3686  0039A2                     __ptext5:
  3687                           	opt callstack 0
  3688  0039A2                     _acuadoriApp:
  3689                           	opt callstack 10
  3690                           
  3691                           ;acuadori.c: 36: memcpy(sensorsString, clearString, 10);
  3692                           
  3693                           ; BSR set to: 15
  3694                           ;incstack = 0
  3695  0039A2  0EA0               	movlw	low _sensorsString
  3696  0039A4  0100               	movlb	0	; () banked
  3697  0039A6  6F60               	movwf	memcpy@d1& (0+255),b
  3698  0039A8  0E03               	movlw	high _sensorsString
  3699  0039AA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3700  0039AC  0E00               	movlw	low _clearString
  3701  0039AE  6F62               	movwf	memcpy@s1& (0+255),b
  3702  0039B0  0E05               	movlw	high _clearString
  3703  0039B2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  3704  0039B4  0E00               	movlw	0
  3705  0039B6  6F65               	movwf	(memcpy@n+1)& (0+255),b
  3706  0039B8  0E0A               	movlw	10
  3707  0039BA  6F64               	movwf	memcpy@n& (0+255),b
  3708  0039BC  ECEC  F047         	call	_memcpy	;wreg free
  3709                           
  3710                           ;acuadori.c: 37: sensorsStringLength = 0;
  3711  0039C0  0E00               	movlw	0
  3712  0039C2  0101               	movlb	1	; () banked
  3713  0039C4  6FF8               	movwf	_sensorsStringLength& (0+255),b
  3714                           
  3715                           ; BSR set to: 1
  3716                           ;acuadori.c: 40: GPIODigitalWrite(0x16, 0);
  3717  0039C6  0E00               	movlw	0
  3718  0039C8  0100               	movlb	0	; () banked
  3719  0039CA  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3720  0039CC  0E16               	movlw	22
  3721  0039CE  EC18  F037         	call	_GPIODigitalWrite
  3722                           
  3723                           ;acuadori.c: 43: GPIODigitalWrite(0x04, 0);
  3724  0039D2  0E00               	movlw	0
  3725  0039D4  0100               	movlb	0	; () banked
  3726  0039D6  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3727  0039D8  0E04               	movlw	4
  3728  0039DA  EC18  F037         	call	_GPIODigitalWrite
  3729                           
  3730                           ;acuadori.c: 44: GPIODigitalWrite(0x00, 0);
  3731  0039DE  0E00               	movlw	0
  3732  0039E0  0100               	movlb	0	; () banked
  3733  0039E2  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3734  0039E4  0E00               	movlw	0
  3735  0039E6  EC18  F037         	call	_GPIODigitalWrite
  3736                           
  3737                           ;acuadori.c: 45: rn2483_delaysec(1);
  3738  0039EA  0E00               	movlw	0
  3739  0039EC  0100               	movlb	0	; () banked
  3740  0039EE  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3741  0039F0  0E01               	movlw	1
  3742  0039F2  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3743  0039F4  EC24  F04D         	call	_rn2483_delaysec	;wreg free
  3744                           
  3745                           ;acuadori.c: 46: leafSensAcquisition();
  3746  0039F8  ECE1  F050         	call	_leafSensAcquisition	;wreg free
  3747                           
  3748                           ;acuadori.c: 47: strncat(sensorsString, "A", 1);
  3749  0039FC  0EA0               	movlw	low _sensorsString
  3750  0039FE  0100               	movlb	0	; () banked
  3751  003A00  6F60               	movwf	strncat@to& (0+255),b
  3752  003A02  0E03               	movlw	high _sensorsString
  3753  003A04  6F61               	movwf	(strncat@to+1)& (0+255),b
  3754  003A06  0EF5               	movlw	low STR_1
  3755  003A08  6F62               	movwf	strncat@from& (0+255),b
  3756  003A0A  0EFF               	movlw	high STR_1
  3757  003A0C  6F63               	movwf	(strncat@from+1)& (0+255),b
  3758  003A0E  0E00               	movlw	0
  3759  003A10  6F65               	movwf	(strncat@size+1)& (0+255),b
  3760  003A12  0E01               	movlw	1
  3761  003A14  6F64               	movwf	strncat@size& (0+255),b
  3762  003A16  EC54  F042         	call	_strncat	;wreg free
  3763                           
  3764                           ;acuadori.c: 48: strncat(sensorsString, stringValue, stringValueLength);
  3765  003A1A  0EA0               	movlw	low _sensorsString
  3766  003A1C  0100               	movlb	0	; () banked
  3767  003A1E  6F60               	movwf	strncat@to& (0+255),b
  3768  003A20  0E03               	movlw	high _sensorsString
  3769  003A22  6F61               	movwf	(strncat@to+1)& (0+255),b
  3770  003A24  0E6F               	movlw	low _stringValue
  3771  003A26  6F62               	movwf	strncat@from& (0+255),b
  3772  003A28  0E01               	movlw	high _stringValue
  3773  003A2A  6F63               	movwf	(strncat@from+1)& (0+255),b
  3774  003A2C  C1F9  F064         	movff	_stringValueLength,strncat@size
  3775  003A30  6B65               	clrf	(strncat@size+1)& (0+255),b
  3776  003A32  EC54  F042         	call	_strncat	;wreg free
  3777                           
  3778                           ;acuadori.c: 49: sensorsStringLength += 1 + stringValueLength;
  3779  003A36  0101               	movlb	1	; () banked
  3780  003A38  29F9               	incf	_stringValueLength& (0+255),w,b
  3781  003A3A  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3782                           
  3783                           ; BSR set to: 1
  3784                           ;acuadori.c: 52: GPIODigitalWrite(0x04, 0);
  3785  003A3C  0E00               	movlw	0
  3786  003A3E  0100               	movlb	0	; () banked
  3787  003A40  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3788  003A42  0E04               	movlw	4
  3789  003A44  EC18  F037         	call	_GPIODigitalWrite
  3790                           
  3791                           ;acuadori.c: 53: GPIODigitalWrite(0x00, 1);
  3792  003A48  0E01               	movlw	1
  3793  003A4A  0100               	movlb	0	; () banked
  3794  003A4C  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3795  003A4E  0E00               	movlw	0
  3796  003A50  EC18  F037         	call	_GPIODigitalWrite
  3797                           
  3798                           ;acuadori.c: 54: rn2483_delaysec(1);
  3799  003A54  0E00               	movlw	0
  3800  003A56  0100               	movlb	0	; () banked
  3801  003A58  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3802  003A5A  0E01               	movlw	1
  3803  003A5C  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3804  003A5E  EC24  F04D         	call	_rn2483_delaysec	;wreg free
  3805                           
  3806                           ;acuadori.c: 55: leafSensAcquisition();
  3807  003A62  ECE1  F050         	call	_leafSensAcquisition	;wreg free
  3808                           
  3809                           ;acuadori.c: 56: strncat(sensorsString, "B", 1);
  3810  003A66  0EA0               	movlw	low _sensorsString
  3811  003A68  0100               	movlb	0	; () banked
  3812  003A6A  6F60               	movwf	strncat@to& (0+255),b
  3813  003A6C  0E03               	movlw	high _sensorsString
  3814  003A6E  6F61               	movwf	(strncat@to+1)& (0+255),b
  3815  003A70  0EF7               	movlw	low STR_2
  3816  003A72  6F62               	movwf	strncat@from& (0+255),b
  3817  003A74  0EFF               	movlw	high STR_2
  3818  003A76  6F63               	movwf	(strncat@from+1)& (0+255),b
  3819  003A78  0E00               	movlw	0
  3820  003A7A  6F65               	movwf	(strncat@size+1)& (0+255),b
  3821  003A7C  0E01               	movlw	1
  3822  003A7E  6F64               	movwf	strncat@size& (0+255),b
  3823  003A80  EC54  F042         	call	_strncat	;wreg free
  3824                           
  3825                           ;acuadori.c: 57: strncat(sensorsString, stringValue, stringValueLength);
  3826  003A84  0EA0               	movlw	low _sensorsString
  3827  003A86  0100               	movlb	0	; () banked
  3828  003A88  6F60               	movwf	strncat@to& (0+255),b
  3829  003A8A  0E03               	movlw	high _sensorsString
  3830  003A8C  6F61               	movwf	(strncat@to+1)& (0+255),b
  3831  003A8E  0E6F               	movlw	low _stringValue
  3832  003A90  6F62               	movwf	strncat@from& (0+255),b
  3833  003A92  0E01               	movlw	high _stringValue
  3834  003A94  6F63               	movwf	(strncat@from+1)& (0+255),b
  3835  003A96  C1F9  F064         	movff	_stringValueLength,strncat@size
  3836  003A9A  6B65               	clrf	(strncat@size+1)& (0+255),b
  3837  003A9C  EC54  F042         	call	_strncat	;wreg free
  3838                           
  3839                           ;acuadori.c: 58: sensorsStringLength += 1 + stringValueLength;
  3840  003AA0  0101               	movlb	1	; () banked
  3841  003AA2  29F9               	incf	_stringValueLength& (0+255),w,b
  3842  003AA4  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3843                           
  3844                           ; BSR set to: 1
  3845                           ;acuadori.c: 61: GPIODigitalWrite(0x04, 1);
  3846  003AA6  0E01               	movlw	1
  3847  003AA8  0100               	movlb	0	; () banked
  3848  003AAA  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3849  003AAC  0E04               	movlw	4
  3850  003AAE  EC18  F037         	call	_GPIODigitalWrite
  3851                           
  3852                           ;acuadori.c: 62: GPIODigitalWrite(0x00, 0);
  3853  003AB2  0E00               	movlw	0
  3854  003AB4  0100               	movlb	0	; () banked
  3855  003AB6  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3856  003AB8  0E00               	movlw	0
  3857  003ABA  EC18  F037         	call	_GPIODigitalWrite
  3858                           
  3859                           ;acuadori.c: 64: clip = 1;
  3860  003ABE  0E01               	movlw	1
  3861  003AC0  0101               	movlb	1	; () banked
  3862  003AC2  6F23               	movwf	_clip& (0+255),b
  3863                           
  3864                           ; BSR set to: 1
  3865                           ;acuadori.c: 66: rn2483_delaysec(10);
  3866  003AC4  0E00               	movlw	0
  3867  003AC6  0100               	movlb	0	; () banked
  3868  003AC8  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3869  003ACA  0E0A               	movlw	10
  3870  003ACC  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3871  003ACE  EC24  F04D         	call	_rn2483_delaysec	;wreg free
  3872                           
  3873                           ;acuadori.c: 67: tempSensAcquisition();
  3874  003AD2  EC1C  F048         	call	_tempSensAcquisition	;wreg free
  3875                           
  3876                           ;acuadori.c: 68: strncat(sensorsString, "T", 1);
  3877  003AD6  0EA0               	movlw	low _sensorsString
  3878  003AD8  0100               	movlb	0	; () banked
  3879  003ADA  6F60               	movwf	strncat@to& (0+255),b
  3880  003ADC  0E03               	movlw	high _sensorsString
  3881  003ADE  6F61               	movwf	(strncat@to+1)& (0+255),b
  3882  003AE0  0EFD               	movlw	low STR_3
  3883  003AE2  6F62               	movwf	strncat@from& (0+255),b
  3884  003AE4  0EFF               	movlw	high STR_3
  3885  003AE6  6F63               	movwf	(strncat@from+1)& (0+255),b
  3886  003AE8  0E00               	movlw	0
  3887  003AEA  6F65               	movwf	(strncat@size+1)& (0+255),b
  3888  003AEC  0E01               	movlw	1
  3889  003AEE  6F64               	movwf	strncat@size& (0+255),b
  3890  003AF0  EC54  F042         	call	_strncat	;wreg free
  3891                           
  3892                           ;acuadori.c: 69: strncat(sensorsString, stringValue, stringValueLength);
  3893  003AF4  0EA0               	movlw	low _sensorsString
  3894  003AF6  0100               	movlb	0	; () banked
  3895  003AF8  6F60               	movwf	strncat@to& (0+255),b
  3896  003AFA  0E03               	movlw	high _sensorsString
  3897  003AFC  6F61               	movwf	(strncat@to+1)& (0+255),b
  3898  003AFE  0E6F               	movlw	low _stringValue
  3899  003B00  6F62               	movwf	strncat@from& (0+255),b
  3900  003B02  0E01               	movlw	high _stringValue
  3901  003B04  6F63               	movwf	(strncat@from+1)& (0+255),b
  3902  003B06  C1F9  F064         	movff	_stringValueLength,strncat@size
  3903  003B0A  6B65               	clrf	(strncat@size+1)& (0+255),b
  3904  003B0C  EC54  F042         	call	_strncat	;wreg free
  3905                           
  3906                           ;acuadori.c: 70: sensorsStringLength += 1 + stringValueLength;
  3907  003B10  0101               	movlb	1	; () banked
  3908  003B12  29F9               	incf	_stringValueLength& (0+255),w,b
  3909  003B14  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;acuadori.c: 73: lightSensAcquisition();
  3913  003B16  ECF1  F04A         	call	_lightSensAcquisition	;wreg free
  3914                           
  3915                           ;acuadori.c: 74: strncat(sensorsString, "L", 1);
  3916  003B1A  0EA0               	movlw	low _sensorsString
  3917  003B1C  0100               	movlb	0	; () banked
  3918  003B1E  6F60               	movwf	strncat@to& (0+255),b
  3919  003B20  0E03               	movlw	high _sensorsString
  3920  003B22  6F61               	movwf	(strncat@to+1)& (0+255),b
  3921  003B24  0EFB               	movlw	low STR_4
  3922  003B26  6F62               	movwf	strncat@from& (0+255),b
  3923  003B28  0EFF               	movlw	high STR_4
  3924  003B2A  6F63               	movwf	(strncat@from+1)& (0+255),b
  3925  003B2C  0E00               	movlw	0
  3926  003B2E  6F65               	movwf	(strncat@size+1)& (0+255),b
  3927  003B30  0E01               	movlw	1
  3928  003B32  6F64               	movwf	strncat@size& (0+255),b
  3929  003B34  EC54  F042         	call	_strncat	;wreg free
  3930                           
  3931                           ;acuadori.c: 75: strncat(sensorsString, stringValue, stringValueLength);
  3932  003B38  0EA0               	movlw	low _sensorsString
  3933  003B3A  0100               	movlb	0	; () banked
  3934  003B3C  6F60               	movwf	strncat@to& (0+255),b
  3935  003B3E  0E03               	movlw	high _sensorsString
  3936  003B40  6F61               	movwf	(strncat@to+1)& (0+255),b
  3937  003B42  0E6F               	movlw	low _stringValue
  3938  003B44  6F62               	movwf	strncat@from& (0+255),b
  3939  003B46  0E01               	movlw	high _stringValue
  3940  003B48  6F63               	movwf	(strncat@from+1)& (0+255),b
  3941  003B4A  C1F9  F064         	movff	_stringValueLength,strncat@size
  3942  003B4E  6B65               	clrf	(strncat@size+1)& (0+255),b
  3943  003B50  EC54  F042         	call	_strncat	;wreg free
  3944                           
  3945                           ;acuadori.c: 76: sensorsStringLength += 1 + stringValueLength;
  3946  003B54  0101               	movlb	1	; () banked
  3947  003B56  29F9               	incf	_stringValueLength& (0+255),w,b
  3948  003B58  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3949                           
  3950                           ;acuadori.c: 79: impedenceAcquisition();
  3951  003B5A  ECFC  F04D         	call	_impedenceAcquisition	;wreg free
  3952                           
  3953                           ;acuadori.c: 81: strncat(sensorsString, "C", 1);
  3954  003B5E  0EA0               	movlw	low _sensorsString
  3955  003B60  0100               	movlb	0	; () banked
  3956  003B62  6F60               	movwf	strncat@to& (0+255),b
  3957  003B64  0E03               	movlw	high _sensorsString
  3958  003B66  6F61               	movwf	(strncat@to+1)& (0+255),b
  3959  003B68  0EF9               	movlw	low STR_5
  3960  003B6A  6F62               	movwf	strncat@from& (0+255),b
  3961  003B6C  0EFF               	movlw	high STR_5
  3962  003B6E  6F63               	movwf	(strncat@from+1)& (0+255),b
  3963  003B70  0E00               	movlw	0
  3964  003B72  6F65               	movwf	(strncat@size+1)& (0+255),b
  3965  003B74  0E01               	movlw	1
  3966  003B76  6F64               	movwf	strncat@size& (0+255),b
  3967  003B78  EC54  F042         	call	_strncat	;wreg free
  3968                           
  3969                           ;acuadori.c: 82: strncat(sensorsString, stringValue, stringValueLength);
  3970  003B7C  0EA0               	movlw	low _sensorsString
  3971  003B7E  0100               	movlb	0	; () banked
  3972  003B80  6F60               	movwf	strncat@to& (0+255),b
  3973  003B82  0E03               	movlw	high _sensorsString
  3974  003B84  6F61               	movwf	(strncat@to+1)& (0+255),b
  3975  003B86  0E6F               	movlw	low _stringValue
  3976  003B88  6F62               	movwf	strncat@from& (0+255),b
  3977  003B8A  0E01               	movlw	high _stringValue
  3978  003B8C  6F63               	movwf	(strncat@from+1)& (0+255),b
  3979  003B8E  C1F9  F064         	movff	_stringValueLength,strncat@size
  3980  003B92  6B65               	clrf	(strncat@size+1)& (0+255),b
  3981  003B94  EC54  F042         	call	_strncat	;wreg free
  3982                           
  3983                           ;acuadori.c: 83: sensorsStringLength += 1 + stringValueLength;
  3984  003B98  0101               	movlb	1	; () banked
  3985  003B9A  29F9               	incf	_stringValueLength& (0+255),w,b
  3986  003B9C  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3987                           
  3988                           ; BSR set to: 1
  3989                           ;acuadori.c: 109: GPIODigitalWrite(0x16, 1);
  3990  003B9E  0E01               	movlw	1
  3991  003BA0  0100               	movlb	0	; () banked
  3992  003BA2  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3993  003BA4  0E16               	movlw	22
  3994  003BA6  EC18  F037         	call	_GPIODigitalWrite
  3995                           
  3996                           ;acuadori.c: 110: upCnt = LORAWAN_GetUplinkCounter();
  3997  003BAA  EC4E  F053         	call	_LORAWAN_GetUplinkCounter	;wreg free
  3998  003BAE  C060  F106         	movff	?_LORAWAN_GetUplinkCounter,_upCnt
  3999  003BB2  C061  F107         	movff	?_LORAWAN_GetUplinkCounter+1,_upCnt+1
  4000  003BB6  C062  F108         	movff	?_LORAWAN_GetUplinkCounter+2,_upCnt+2
  4001  003BBA  C063  F109         	movff	?_LORAWAN_GetUplinkCounter+3,_upCnt+3
  4002                           
  4003                           ;acuadori.c: 111: sendValue();
  4004  003BBE  EC59  F047         	call	_sendValue	;wreg free
  4005                           
  4006                           ;acuadori.c: 112: LORAWAN_SetUplinkCounter(upCnt);
  4007  003BC2  C106  F060         	movff	_upCnt,LORAWAN_SetUplinkCounter@ctr
  4008  003BC6  C107  F061         	movff	_upCnt+1,LORAWAN_SetUplinkCounter@ctr+1
  4009  003BCA  C108  F062         	movff	_upCnt+2,LORAWAN_SetUplinkCounter@ctr+2
  4010  003BCE  C109  F063         	movff	_upCnt+3,LORAWAN_SetUplinkCounter@ctr+3
  4011  003BD2  EC45  F053         	call	_LORAWAN_SetUplinkCounter	;wreg free
  4012                           
  4013                           ;acuadori.c: 113: sendValue();
  4014  003BD6  EC59  F047         	call	_sendValue	;wreg free
  4015  003BDA  0012               	return		;funcret
  4016  003BDC                     __end_of_acuadoriApp:
  4017                           	opt callstack 0
  4018                           
  4019 ;; *************** function _tempSensAcquisition *****************
  4020 ;; Defined at:
  4021 ;;		line 237 in file "acuadori.c"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;		None
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  temp            2  102[BANK0 ] unsigned int 
  4026 ;;  value           2  100[BANK0 ] unsigned int 
  4027 ;; Return value:  Size  Location     Type
  4028 ;;                  1    wreg      void 
  4029 ;; Registers used:
  4030 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4031 ;; Tracked objects:
  4032 ;;		On entry : 0/0
  4033 ;;		On exit  : 0/0
  4034 ;;		Unchanged: 0/0
  4035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4039 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4040 ;;Total ram usage:        4 bytes
  4041 ;; Hardware stack levels used:    1
  4042 ;; Hardware stack levels required when called:   11
  4043 ;; This function calls:
  4044 ;;		_GPIOAverageRead
  4045 ;;		_adaptString
  4046 ;;		_pointAddition
  4047 ;;		_tempConversion
  4048 ;;		_uint16ToString
  4049 ;; This function is called by:
  4050 ;;		_acuadoriApp
  4051 ;; This function uses a non-reentrant model
  4052 ;;
  4053                           
  4054                           	psect	text6
  4055  009038                     __ptext6:
  4056                           	opt callstack 0
  4057  009038                     _tempSensAcquisition:
  4058                           	opt callstack 18
  4059                           
  4060                           ;acuadori.c: 239: uint16_t value;;acuadori.c: 240: uint16_t temp;;acuadori.c: 242: value
      +                           = GPIOAverageRead(0x01);
  4061                           
  4062                           ;incstack = 0
  4063  009038  0E01               	movlw	1
  4064  00903A  EC12  F044         	call	_GPIOAverageRead
  4065  00903E  C06D  F0C4         	movff	?_GPIOAverageRead,tempSensAcquisition@value
  4066  009042  C06E  F0C5         	movff	?_GPIOAverageRead+1,tempSensAcquisition@value+1
  4067                           
  4068                           ;acuadori.c: 243: temp = tempConversion(value);
  4069  009046  C0C4  F0B6         	movff	tempSensAcquisition@value,tempConversion@adcValue
  4070  00904A  C0C5  F0B7         	movff	tempSensAcquisition@value+1,tempConversion@adcValue+1
  4071  00904E  EC9E  F012         	call	_tempConversion	;wreg free
  4072  009052  C0B6  F0C6         	movff	?_tempConversion,tempSensAcquisition@temp
  4073  009056  C0B7  F0C7         	movff	?_tempConversion+1,tempSensAcquisition@temp+1
  4074                           
  4075                           ;acuadori.c: 245: uint16ToString(temp, stringValue);
  4076  00905A  C0C6  F0A5         	movff	tempSensAcquisition@temp,uint16ToString@value
  4077  00905E  C0C7  F0A6         	movff	tempSensAcquisition@temp+1,uint16ToString@value+1
  4078  009062  0E6F               	movlw	low _stringValue
  4079  009064  0100               	movlb	0	; () banked
  4080  009066  6FA7               	movwf	uint16ToString@output& (0+255),b
  4081  009068  0E01               	movlw	high _stringValue
  4082  00906A  6FA8               	movwf	(uint16ToString@output+1)& (0+255),b
  4083  00906C  ECB8  F02C         	call	_uint16ToString	;wreg free
  4084                           
  4085                           ;acuadori.c: 246: pointAddition(stringValue);
  4086  009070  0E6F               	movlw	low _stringValue
  4087  009072  0100               	movlb	0	; () banked
  4088  009074  6F60               	movwf	pointAddition@element& (0+255),b
  4089  009076  0E01               	movlw	high _stringValue
  4090  009078  6F61               	movwf	(pointAddition@element+1)& (0+255),b
  4091  00907A  ECAD  F04B         	call	_pointAddition	;wreg free
  4092                           
  4093                           ;acuadori.c: 247: stringValueLength = adaptString(stringValue, 5);
  4094  00907E  0E6F               	movlw	low _stringValue
  4095  009080  0100               	movlb	0	; () banked
  4096  009082  6F60               	movwf	adaptString@string& (0+255),b
  4097  009084  0E01               	movlw	high _stringValue
  4098  009086  6F61               	movwf	(adaptString@string+1)& (0+255),b
  4099  009088  0E05               	movlw	5
  4100  00908A  6F62               	movwf	adaptString@length& (0+255),b
  4101  00908C  EC8B  F044         	call	_adaptString	;wreg free
  4102  009090  0101               	movlb	1	; () banked
  4103  009092  6FF9               	movwf	_stringValueLength& (0+255),b
  4104                           
  4105                           ; BSR set to: 1
  4106  009094  0012               	return		;funcret
  4107  009096                     __end_of_tempSensAcquisition:
  4108                           	opt callstack 0
  4109                           
  4110 ;; *************** function _tempConversion *****************
  4111 ;; Defined at:
  4112 ;;		line 254 in file "acuadori.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;  adcValue        2   86[BANK0 ] unsigned int 
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;  temp            4   96[BANK0 ] float 
  4117 ;;  val             4   92[BANK0 ] float 
  4118 ;;  rTemp           2    0        unsigned int 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  2   86[BANK0 ] unsigned int 
  4121 ;; Registers used:
  4122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;Total ram usage:       14 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:   10
  4135 ;; This function calls:
  4136 ;;		___fladd
  4137 ;;		___fldiv
  4138 ;;		___flmul
  4139 ;;		___flsub
  4140 ;;		___fltol
  4141 ;;		___xxtofl
  4142 ;;		_log
  4143 ;; This function is called by:
  4144 ;;		_tempSensAcquisition
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text7
  4149  00253C                     __ptext7:
  4150                           	opt callstack 0
  4151  00253C                     _tempConversion:
  4152                           	opt callstack 18
  4153                           
  4154                           ;acuadori.c: 255: float val;;acuadori.c: 256: uint16_t rTemp;;acuadori.c: 257: float tem
      +                          p;;acuadori.c: 258: val = 3.3 * adcValue/1023;
  4155                           
  4156                           ; BSR set to: 1
  4157                           ;incstack = 0
  4158  00253C  0E33               	movlw	51
  4159  00253E  0100               	movlb	0	; () banked
  4160  002540  6F88               	movwf	___flmul@a& (0+255),b
  4161  002542  0E33               	movlw	51
  4162  002544  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4163  002546  0E53               	movlw	83
  4164  002548  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4165  00254A  0E40               	movlw	64
  4166  00254C  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4167  00254E  C0B6  F060         	movff	tempConversion@adcValue,___xxtofl@val
  4168  002552  C0B7  F061         	movff	tempConversion@adcValue+1,___xxtofl@val+1
  4169  002556  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  4170  002558  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  4171  00255A  0E00               	movlw	0
  4172  00255C  EC16  F02C         	call	___xxtofl
  4173  002560  C060  F084         	movff	?___xxtofl,___flmul@b
  4174  002564  C061  F085         	movff	?___xxtofl+1,___flmul@b+1
  4175  002568  C062  F086         	movff	?___xxtofl+2,___flmul@b+2
  4176  00256C  C063  F087         	movff	?___xxtofl+3,___flmul@b+3
  4177  002570  EC5B  F00F         	call	___flmul	;wreg free
  4178  002574  C084  F09D         	movff	?___flmul,___fldiv@b
  4179  002578  C085  F09E         	movff	?___flmul+1,___fldiv@b+1
  4180  00257C  C086  F09F         	movff	?___flmul+2,___fldiv@b+2
  4181  002580  C087  F0A0         	movff	?___flmul+3,___fldiv@b+3
  4182  002584  0E00               	movlw	0
  4183  002586  0100               	movlb	0	; () banked
  4184  002588  6FA1               	movwf	___fldiv@a& (0+255),b
  4185  00258A  0EC0               	movlw	192
  4186  00258C  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  4187  00258E  0E7F               	movlw	127
  4188  002590  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  4189  002592  0E44               	movlw	68
  4190  002594  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  4191  002596  EC8C  F01B         	call	___fldiv	;wreg free
  4192  00259A  C09D  F0BC         	movff	?___fldiv,tempConversion@val
  4193  00259E  C09E  F0BD         	movff	?___fldiv+1,tempConversion@val+1
  4194  0025A2  C09F  F0BE         	movff	?___fldiv+2,tempConversion@val+2
  4195  0025A6  C0A0  F0BF         	movff	?___fldiv+3,tempConversion@val+3
  4196                           
  4197                           ;acuadori.c: 259: val -= 0.02;
  4198  0025AA  C0BC  F084         	movff	tempConversion@val,___flsub@b
  4199  0025AE  C0BD  F085         	movff	tempConversion@val+1,___flsub@b+1
  4200  0025B2  C0BE  F086         	movff	tempConversion@val+2,___flsub@b+2
  4201  0025B6  C0BF  F087         	movff	tempConversion@val+3,___flsub@b+3
  4202  0025BA  0E0A               	movlw	10
  4203  0025BC  0100               	movlb	0	; () banked
  4204  0025BE  6F88               	movwf	___flsub@a& (0+255),b
  4205  0025C0  0ED7               	movlw	215
  4206  0025C2  6F89               	movwf	(___flsub@a+1)& (0+255),b
  4207  0025C4  0EA3               	movlw	163
  4208  0025C6  6F8A               	movwf	(___flsub@a+2)& (0+255),b
  4209  0025C8  0E3C               	movlw	60
  4210  0025CA  6F8B               	movwf	(___flsub@a+3)& (0+255),b
  4211  0025CC  EC89  F04B         	call	___flsub	;wreg free
  4212  0025D0  C084  F0BC         	movff	?___flsub,tempConversion@val
  4213  0025D4  C085  F0BD         	movff	?___flsub+1,tempConversion@val+1
  4214  0025D8  C086  F0BE         	movff	?___flsub+2,tempConversion@val+2
  4215  0025DC  C087  F0BF         	movff	?___flsub+3,tempConversion@val+3
  4216                           
  4217                           ;acuadori.c: 260: temp = 499 * (val - 1.65) / (1.65 - 3.3);
  4218  0025E0  0E00               	movlw	0
  4219  0025E2  0100               	movlb	0	; () banked
  4220  0025E4  6F88               	movwf	___flmul@a& (0+255),b
  4221  0025E6  0E80               	movlw	128
  4222  0025E8  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4223  0025EA  0EF9               	movlw	249
  4224  0025EC  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4225  0025EE  0E43               	movlw	67
  4226  0025F0  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4227  0025F2  0E33               	movlw	51
  4228  0025F4  6F78               	movwf	___fladd@a& (0+255),b
  4229  0025F6  0E33               	movlw	51
  4230  0025F8  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4231  0025FA  0ED3               	movlw	211
  4232  0025FC  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4233  0025FE  0EBF               	movlw	191
  4234  002600  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4235  002602  C0BC  F074         	movff	tempConversion@val,___fladd@b
  4236  002606  C0BD  F075         	movff	tempConversion@val+1,___fladd@b+1
  4237  00260A  C0BE  F076         	movff	tempConversion@val+2,___fladd@b+2
  4238  00260E  C0BF  F077         	movff	tempConversion@val+3,___fladd@b+3
  4239  002612  EC34  F014         	call	___fladd	;wreg free
  4240  002616  C074  F084         	movff	?___fladd,___flmul@b
  4241  00261A  C075  F085         	movff	?___fladd+1,___flmul@b+1
  4242  00261E  C076  F086         	movff	?___fladd+2,___flmul@b+2
  4243  002622  C077  F087         	movff	?___fladd+3,___flmul@b+3
  4244  002626  EC5B  F00F         	call	___flmul	;wreg free
  4245  00262A  C084  F09D         	movff	?___flmul,___fldiv@b
  4246  00262E  C085  F09E         	movff	?___flmul+1,___fldiv@b+1
  4247  002632  C086  F09F         	movff	?___flmul+2,___fldiv@b+2
  4248  002636  C087  F0A0         	movff	?___flmul+3,___fldiv@b+3
  4249  00263A  0E33               	movlw	51
  4250  00263C  0100               	movlb	0	; () banked
  4251  00263E  6FA1               	movwf	___fldiv@a& (0+255),b
  4252  002640  0E33               	movlw	51
  4253  002642  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  4254  002644  0ED3               	movlw	211
  4255  002646  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  4256  002648  0EBF               	movlw	191
  4257  00264A  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  4258  00264C  EC8C  F01B         	call	___fldiv	;wreg free
  4259  002650  C09D  F0C0         	movff	?___fldiv,tempConversion@temp
  4260  002654  C09E  F0C1         	movff	?___fldiv+1,tempConversion@temp+1
  4261  002658  C09F  F0C2         	movff	?___fldiv+2,tempConversion@temp+2
  4262  00265C  C0A0  F0C3         	movff	?___fldiv+3,tempConversion@temp+3
  4263                           
  4264                           ;acuadori.c: 261: val = temp;
  4265  002660  C0C0  F0BC         	movff	tempConversion@temp,tempConversion@val
  4266  002664  C0C1  F0BD         	movff	tempConversion@temp+1,tempConversion@val+1
  4267  002668  C0C2  F0BE         	movff	tempConversion@temp+2,tempConversion@val+2
  4268  00266C  C0C3  F0BF         	movff	tempConversion@temp+3,tempConversion@val+3
  4269                           
  4270                           ;acuadori.c: 262: val /=100;
  4271  002670  C0BC  F09D         	movff	tempConversion@val,___fldiv@b
  4272  002674  C0BD  F09E         	movff	tempConversion@val+1,___fldiv@b+1
  4273  002678  C0BE  F09F         	movff	tempConversion@val+2,___fldiv@b+2
  4274  00267C  C0BF  F0A0         	movff	tempConversion@val+3,___fldiv@b+3
  4275  002680  0E00               	movlw	0
  4276  002682  0100               	movlb	0	; () banked
  4277  002684  6FA1               	movwf	___fldiv@a& (0+255),b
  4278  002686  0E00               	movlw	0
  4279  002688  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  4280  00268A  0EC8               	movlw	200
  4281  00268C  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  4282  00268E  0E42               	movlw	66
  4283  002690  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  4284  002692  EC8C  F01B         	call	___fldiv	;wreg free
  4285  002696  C09D  F0BC         	movff	?___fldiv,tempConversion@val
  4286  00269A  C09E  F0BD         	movff	?___fldiv+1,tempConversion@val+1
  4287  00269E  C09F  F0BE         	movff	?___fldiv+2,tempConversion@val+2
  4288  0026A2  C0A0  F0BF         	movff	?___fldiv+3,tempConversion@val+3
  4289                           
  4290                           ;acuadori.c: 263: temp = 0.074533 * log(val);
  4291  0026A6  C0BC  F0AD         	movff	tempConversion@val,log@x
  4292  0026AA  C0BD  F0AE         	movff	tempConversion@val+1,log@x+1
  4293  0026AE  C0BE  F0AF         	movff	tempConversion@val+2,log@x+2
  4294  0026B2  C0BF  F0B0         	movff	tempConversion@val+3,log@x+3
  4295  0026B6  ECCC  F025         	call	_log	;wreg free
  4296  0026BA  C0AD  F0B8         	movff	?_log,_tempConversion$6898
  4297  0026BE  C0AE  F0B9         	movff	?_log+1,_tempConversion$6898+1
  4298  0026C2  C0AF  F0BA         	movff	?_log+2,_tempConversion$6898+2
  4299  0026C6  C0B0  F0BB         	movff	?_log+3,_tempConversion$6898+3
  4300                           
  4301                           ;acuadori.c: 263: temp = 0.074533 * log(val);
  4302  0026CA  C0B8  F084         	movff	_tempConversion$6898,___flmul@b
  4303  0026CE  C0B9  F085         	movff	_tempConversion$6898+1,___flmul@b+1
  4304  0026D2  C0BA  F086         	movff	_tempConversion$6898+2,___flmul@b+2
  4305  0026D6  C0BB  F087         	movff	_tempConversion$6898+3,___flmul@b+3
  4306  0026DA  0EC2               	movlw	194
  4307  0026DC  0100               	movlb	0	; () banked
  4308  0026DE  6F88               	movwf	___flmul@a& (0+255),b
  4309  0026E0  0EA4               	movlw	164
  4310  0026E2  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4311  0026E4  0E98               	movlw	152
  4312  0026E6  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4313  0026E8  0E3D               	movlw	61
  4314  0026EA  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4315  0026EC  EC5B  F00F         	call	___flmul	;wreg free
  4316  0026F0  C084  F0C0         	movff	?___flmul,tempConversion@temp
  4317  0026F4  C085  F0C1         	movff	?___flmul+1,tempConversion@temp+1
  4318  0026F8  C086  F0C2         	movff	?___flmul+2,tempConversion@temp+2
  4319  0026FC  C087  F0C3         	movff	?___flmul+3,tempConversion@temp+3
  4320                           
  4321                           ;acuadori.c: 264: temp++;
  4322  002700  C0C0  F074         	movff	tempConversion@temp,___fladd@b
  4323  002704  C0C1  F075         	movff	tempConversion@temp+1,___fladd@b+1
  4324  002708  C0C2  F076         	movff	tempConversion@temp+2,___fladd@b+2
  4325  00270C  C0C3  F077         	movff	tempConversion@temp+3,___fladd@b+3
  4326  002710  0E00               	movlw	0
  4327  002712  0100               	movlb	0	; () banked
  4328  002714  6F78               	movwf	___fladd@a& (0+255),b
  4329  002716  0E00               	movlw	0
  4330  002718  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4331  00271A  0E80               	movlw	128
  4332  00271C  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4333  00271E  0E3F               	movlw	63
  4334  002720  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4335  002722  EC34  F014         	call	___fladd	;wreg free
  4336  002726  C074  F0C0         	movff	?___fladd,tempConversion@temp
  4337  00272A  C075  F0C1         	movff	?___fladd+1,tempConversion@temp+1
  4338  00272E  C076  F0C2         	movff	?___fladd+2,tempConversion@temp+2
  4339  002732  C077  F0C3         	movff	?___fladd+3,tempConversion@temp+3
  4340                           
  4341                           ;acuadori.c: 265: temp = 298.15 / temp;
  4342  002736  0E33               	movlw	51
  4343  002738  0100               	movlb	0	; () banked
  4344  00273A  6F9D               	movwf	___fldiv@b& (0+255),b
  4345  00273C  0E13               	movlw	19
  4346  00273E  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  4347  002740  0E95               	movlw	149
  4348  002742  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  4349  002744  0E43               	movlw	67
  4350  002746  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  4351  002748  C0C0  F0A1         	movff	tempConversion@temp,___fldiv@a
  4352  00274C  C0C1  F0A2         	movff	tempConversion@temp+1,___fldiv@a+1
  4353  002750  C0C2  F0A3         	movff	tempConversion@temp+2,___fldiv@a+2
  4354  002754  C0C3  F0A4         	movff	tempConversion@temp+3,___fldiv@a+3
  4355  002758  EC8C  F01B         	call	___fldiv	;wreg free
  4356  00275C  C09D  F0C0         	movff	?___fldiv,tempConversion@temp
  4357  002760  C09E  F0C1         	movff	?___fldiv+1,tempConversion@temp+1
  4358  002764  C09F  F0C2         	movff	?___fldiv+2,tempConversion@temp+2
  4359  002768  C0A0  F0C3         	movff	?___fldiv+3,tempConversion@temp+3
  4360                           
  4361                           ;acuadori.c: 266: temp -= 273.15;
  4362  00276C  C0C0  F084         	movff	tempConversion@temp,___flsub@b
  4363  002770  C0C1  F085         	movff	tempConversion@temp+1,___flsub@b+1
  4364  002774  C0C2  F086         	movff	tempConversion@temp+2,___flsub@b+2
  4365  002778  C0C3  F087         	movff	tempConversion@temp+3,___flsub@b+3
  4366  00277C  0E33               	movlw	51
  4367  00277E  0100               	movlb	0	; () banked
  4368  002780  6F88               	movwf	___flsub@a& (0+255),b
  4369  002782  0E93               	movlw	147
  4370  002784  6F89               	movwf	(___flsub@a+1)& (0+255),b
  4371  002786  0E88               	movlw	136
  4372  002788  6F8A               	movwf	(___flsub@a+2)& (0+255),b
  4373  00278A  0E43               	movlw	67
  4374  00278C  6F8B               	movwf	(___flsub@a+3)& (0+255),b
  4375  00278E  EC89  F04B         	call	___flsub	;wreg free
  4376  002792  C084  F0C0         	movff	?___flsub,tempConversion@temp
  4377  002796  C085  F0C1         	movff	?___flsub+1,tempConversion@temp+1
  4378  00279A  C086  F0C2         	movff	?___flsub+2,tempConversion@temp+2
  4379  00279E  C087  F0C3         	movff	?___flsub+3,tempConversion@temp+3
  4380                           
  4381                           ;acuadori.c: 267: temp *= 10;
  4382  0027A2  C0C0  F084         	movff	tempConversion@temp,___flmul@b
  4383  0027A6  C0C1  F085         	movff	tempConversion@temp+1,___flmul@b+1
  4384  0027AA  C0C2  F086         	movff	tempConversion@temp+2,___flmul@b+2
  4385  0027AE  C0C3  F087         	movff	tempConversion@temp+3,___flmul@b+3
  4386  0027B2  0E00               	movlw	0
  4387  0027B4  0100               	movlb	0	; () banked
  4388  0027B6  6F88               	movwf	___flmul@a& (0+255),b
  4389  0027B8  0E00               	movlw	0
  4390  0027BA  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4391  0027BC  0E20               	movlw	32
  4392  0027BE  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4393  0027C0  0E41               	movlw	65
  4394  0027C2  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4395  0027C4  EC5B  F00F         	call	___flmul	;wreg free
  4396  0027C8  C084  F0C0         	movff	?___flmul,tempConversion@temp
  4397  0027CC  C085  F0C1         	movff	?___flmul+1,tempConversion@temp+1
  4398  0027D0  C086  F0C2         	movff	?___flmul+2,tempConversion@temp+2
  4399  0027D4  C087  F0C3         	movff	?___flmul+3,tempConversion@temp+3
  4400                           
  4401                           ;acuadori.c: 269: switch(clip){
  4402  0027D8  D030               	goto	l16262
  4403  0027DA                     l16256:
  4404                           
  4405                           ; BSR set to: 1
  4406                           ;acuadori.c: 272: temp += 16;
  4407  0027DA  C0C0  F074         	movff	tempConversion@temp,___fladd@b
  4408  0027DE  C0C1  F075         	movff	tempConversion@temp+1,___fladd@b+1
  4409  0027E2  C0C2  F076         	movff	tempConversion@temp+2,___fladd@b+2
  4410  0027E6  C0C3  F077         	movff	tempConversion@temp+3,___fladd@b+3
  4411  0027EA  0E00               	movlw	0
  4412  0027EC  0100               	movlb	0	; () banked
  4413  0027EE  6F78               	movwf	___fladd@a& (0+255),b
  4414  0027F0  0E00               	movlw	0
  4415  0027F2  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4416  0027F4  0E80               	movlw	128
  4417  0027F6  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4418  0027F8  0E41               	movlw	65
  4419  0027FA  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4420  0027FC  EC34  F014         	call	___fladd	;wreg free
  4421  002800  D013               	goto	L1
  4422  002802                     l16258:
  4423                           
  4424                           ; BSR set to: 1
  4425                           ;acuadori.c: 283: temp += 18;
  4426  002802  C0C0  F074         	movff	tempConversion@temp,___fladd@b
  4427  002806  C0C1  F075         	movff	tempConversion@temp+1,___fladd@b+1
  4428  00280A  C0C2  F076         	movff	tempConversion@temp+2,___fladd@b+2
  4429  00280E  C0C3  F077         	movff	tempConversion@temp+3,___fladd@b+3
  4430  002812  0E00               	movlw	0
  4431  002814  0100               	movlb	0	; () banked
  4432  002816  6F78               	movwf	___fladd@a& (0+255),b
  4433  002818  0E00               	movlw	0
  4434  00281A  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4435  00281C  0E90               	movlw	144
  4436  00281E  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4437  002820  0E41               	movlw	65
  4438  002822  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4439  002824  EC34  F014         	call	___fladd	;wreg free
  4440  002828                     L1:
  4441  002828  C074  F0C0         	movff	?___fladd,tempConversion@temp
  4442  00282C  C075  F0C1         	movff	?___fladd+1,tempConversion@temp+1
  4443  002830  C076  F0C2         	movff	?___fladd+2,tempConversion@temp+2
  4444  002834  C077  F0C3         	movff	?___fladd+3,tempConversion@temp+3
  4445                           
  4446                           ;acuadori.c: 290: break;
  4447  002838  D008               	goto	l16264
  4448  00283A                     l16262:
  4449  00283A  0101               	movlb	1	; () banked
  4450  00283C  5123               	movf	_clip& (0+255),w,b
  4451                           
  4452                           ; Switch size 1, requested type "simple"
  4453                           ; Number of cases is 2, Range of values is 1 to 2
  4454                           ; switch strategies available:
  4455                           ; Name         Instructions Cycles
  4456                           ; simple_byte            7     4 (average)
  4457                           ;	Chosen strategy is simple_byte
  4458  00283E  0A01               	xorlw	1	; case 1
  4459  002840  B4D8               	btfsc	status,2,c
  4460  002842  D7CB               	goto	l16256
  4461  002844  0A03               	xorlw	3	; case 2
  4462  002846  B4D8               	btfsc	status,2,c
  4463  002848  D7DC               	goto	l16258
  4464  00284A                     l16264:
  4465                           
  4466                           ;acuadori.c: 300: return temp;
  4467  00284A  C0C0  F060         	movff	tempConversion@temp,___fltol@f1
  4468  00284E  C0C1  F061         	movff	tempConversion@temp+1,___fltol@f1+1
  4469  002852  C0C2  F062         	movff	tempConversion@temp+2,___fltol@f1+2
  4470  002856  C0C3  F063         	movff	tempConversion@temp+3,___fltol@f1+3
  4471  00285A  EC7C  F03D         	call	___fltol	;wreg free
  4472  00285E  C060  F0B6         	movff	?___fltol,?_tempConversion
  4473  002862  C061  F0B7         	movff	?___fltol+1,?_tempConversion+1
  4474  002866  0012               	return		;funcret
  4475  002868                     __end_of_tempConversion:
  4476                           	opt callstack 0
  4477                           
  4478 ;; *************** function _log *****************
  4479 ;; Defined at:
  4480 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\log.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  x               4   77[BANK0 ] unsigned int 
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;  exponent        2   81[BANK0 ] int 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  4   77[BANK0 ] int 
  4487 ;; Registers used:
  4488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4494 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;Total ram usage:        6 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; Hardware stack levels required when called:    9
  4501 ;; This function calls:
  4502 ;;		___fladd
  4503 ;;		___fleq
  4504 ;;		___flmul
  4505 ;;		___xxtofl
  4506 ;;		_eval_poly
  4507 ;;		_frexp
  4508 ;; This function is called by:
  4509 ;;		_tempConversion
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           	psect	text8
  4514  004B98                     __ptext8:
  4515                           	opt callstack 0
  4516  004B98                     _log:
  4517                           	opt callstack 18
  4518                           
  4519                           ;incstack = 0
  4520  004B98  0100               	movlb	0	; () banked
  4521  004B9A  AFB0               	btfss	(log@x+3)& (0+255),7,b
  4522  004B9C  D00F               	goto	l15568
  4523                           
  4524                           ; BSR set to: 0
  4525  004B9E  0E00               	movlw	0
  4526  004BA0  0101               	movlb	1	; () banked
  4527  004BA2  6F17               	movwf	(_errno+1)& (0+255),b
  4528  004BA4  0E21               	movlw	33
  4529  004BA6  6F16               	movwf	_errno& (0+255),b
  4530  004BA8  0E00               	movlw	0
  4531  004BAA  0100               	movlb	0	; () banked
  4532  004BAC  6FAD               	movwf	?_log& (0+255),b
  4533  004BAE  0E00               	movlw	0
  4534  004BB0  6FAE               	movwf	(?_log+1)& (0+255),b
  4535  004BB2  0E00               	movlw	0
  4536  004BB4  6FAF               	movwf	(?_log+2)& (0+255),b
  4537  004BB6  0E00               	movlw	0
  4538  004BB8  6FB0               	movwf	(?_log+3)& (0+255),b
  4539  004BBA  0012               	return	
  4540  004BBC                     l15568:
  4541                           
  4542                           ; BSR set to: 0
  4543  004BBC  C0AD  F060         	movff	log@x,___fleq@ff1
  4544  004BC0  C0AE  F061         	movff	log@x+1,___fleq@ff1+1
  4545  004BC4  C0AF  F062         	movff	log@x+2,___fleq@ff1+2
  4546  004BC8  C0B0  F063         	movff	log@x+3,___fleq@ff1+3
  4547  004BCC  0E00               	movlw	0
  4548  004BCE  6F64               	movwf	___fleq@ff2& (0+255),b
  4549  004BD0  0E00               	movlw	0
  4550  004BD2  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4551  004BD4  0E00               	movlw	0
  4552  004BD6  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4553  004BD8  0E00               	movlw	0
  4554  004BDA  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4555  004BDC  ECBA  F040         	call	___fleq	;wreg free
  4556  004BE0  0100               	movlb	0	; () banked
  4557  004BE2  A0D8               	btfss	status,0,c
  4558  004BE4  D00F               	goto	l15574
  4559                           
  4560                           ; BSR set to: 0
  4561  004BE6  0E00               	movlw	0
  4562  004BE8  0101               	movlb	1	; () banked
  4563  004BEA  6F17               	movwf	(_errno+1)& (0+255),b
  4564  004BEC  0E22               	movlw	34
  4565  004BEE  6F16               	movwf	_errno& (0+255),b
  4566  004BF0  0E00               	movlw	0
  4567  004BF2  0100               	movlb	0	; () banked
  4568  004BF4  6FAD               	movwf	?_log& (0+255),b
  4569  004BF6  0E00               	movlw	0
  4570  004BF8  6FAE               	movwf	(?_log+1)& (0+255),b
  4571  004BFA  0E00               	movlw	0
  4572  004BFC  6FAF               	movwf	(?_log+2)& (0+255),b
  4573  004BFE  0E00               	movlw	0
  4574  004C00  6FB0               	movwf	(?_log+3)& (0+255),b
  4575  004C02  0012               	return	
  4576  004C04                     l15574:
  4577                           
  4578                           ; BSR set to: 0
  4579  004C04  0E00               	movlw	0
  4580  004C06  6F88               	movwf	___flmul@a& (0+255),b
  4581  004C08  0E00               	movlw	0
  4582  004C0A  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4583  004C0C  0E00               	movlw	0
  4584  004C0E  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4585  004C10  0E40               	movlw	64
  4586  004C12  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4587  004C14  0EB1               	movlw	low log@exponent
  4588  004C16  6F70               	movwf	frexp@eptr& (0+255),b
  4589  004C18  0E00               	movlw	high log@exponent
  4590  004C1A  6F71               	movwf	(frexp@eptr+1)& (0+255),b
  4591  004C1C  C0AD  F06C         	movff	log@x,frexp@value
  4592  004C20  C0AE  F06D         	movff	log@x+1,frexp@value+1
  4593  004C24  C0AF  F06E         	movff	log@x+2,frexp@value+2
  4594  004C28  C0B0  F06F         	movff	log@x+3,frexp@value+3
  4595  004C2C  EC36  F03E         	call	_frexp	;wreg free
  4596  004C30  C06C  F084         	movff	?_frexp,___flmul@b
  4597  004C34  C06D  F085         	movff	?_frexp+1,___flmul@b+1
  4598  004C38  C06E  F086         	movff	?_frexp+2,___flmul@b+2
  4599  004C3C  C06F  F087         	movff	?_frexp+3,___flmul@b+3
  4600  004C40  EC5B  F00F         	call	___flmul	;wreg free
  4601  004C44  C084  F074         	movff	?___flmul,___fladd@b
  4602  004C48  C085  F075         	movff	?___flmul+1,___fladd@b+1
  4603  004C4C  C086  F076         	movff	?___flmul+2,___fladd@b+2
  4604  004C50  C087  F077         	movff	?___flmul+3,___fladd@b+3
  4605  004C54  0E00               	movlw	0
  4606  004C56  0100               	movlb	0	; () banked
  4607  004C58  6F78               	movwf	___fladd@a& (0+255),b
  4608  004C5A  0E00               	movlw	0
  4609  004C5C  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4610  004C5E  0E80               	movlw	128
  4611  004C60  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4612  004C62  0EBF               	movlw	191
  4613  004C64  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4614  004C66  EC34  F014         	call	___fladd	;wreg free
  4615  004C6A  C074  F0AD         	movff	?___fladd,log@x
  4616  004C6E  C075  F0AE         	movff	?___fladd+1,log@x+1
  4617  004C72  C076  F0AF         	movff	?___fladd+2,log@x+2
  4618  004C76  C077  F0B0         	movff	?___fladd+3,log@x+3
  4619  004C7A  0100               	movlb	0	; () banked
  4620  004C7C  07B1               	decf	log@exponent& (0+255),f,b
  4621  004C7E  A0D8               	btfss	status,0,c
  4622  004C80  07B2               	decf	(log@exponent+1)& (0+255),f,b
  4623                           
  4624                           ; BSR set to: 0
  4625  004C82  C0AD  F09D         	movff	log@x,eval_poly@x
  4626  004C86  C0AE  F09E         	movff	log@x+1,eval_poly@x+1
  4627  004C8A  C0AF  F09F         	movff	log@x+2,eval_poly@x+2
  4628  004C8E  C0B0  F0A0         	movff	log@x+3,eval_poly@x+3
  4629  004C92  0EAA               	movlw	low log@coeff
  4630  004C94  6FA1               	movwf	eval_poly@d& (0+255),b
  4631  004C96  0EFF               	movlw	high log@coeff
  4632  004C98  6FA2               	movwf	(eval_poly@d+1)& (0+255),b
  4633  004C9A  0E00               	movlw	0
  4634  004C9C  6FA4               	movwf	(eval_poly@n+1)& (0+255),b
  4635  004C9E  0E08               	movlw	8
  4636  004CA0  6FA3               	movwf	eval_poly@n& (0+255),b
  4637  004CA2  EC9E  F035         	call	_eval_poly	;wreg free
  4638  004CA6  C09D  F0AD         	movff	?_eval_poly,log@x
  4639  004CAA  C09E  F0AE         	movff	?_eval_poly+1,log@x+1
  4640  004CAE  C09F  F0AF         	movff	?_eval_poly+2,log@x+2
  4641  004CB2  C0A0  F0B0         	movff	?_eval_poly+3,log@x+3
  4642  004CB6  0E18               	movlw	24
  4643  004CB8  0100               	movlb	0	; () banked
  4644  004CBA  6F88               	movwf	___flmul@a& (0+255),b
  4645  004CBC  0E72               	movlw	114
  4646  004CBE  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4647  004CC0  0E31               	movlw	49
  4648  004CC2  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4649  004CC4  0E3F               	movlw	63
  4650  004CC6  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4651  004CC8  C0B1  F060         	movff	log@exponent,___xxtofl@val
  4652  004CCC  C0B2  F061         	movff	log@exponent+1,___xxtofl@val+1
  4653  004CD0  0E00               	movlw	0
  4654  004CD2  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  4655  004CD4  0EFF               	movlw	-1
  4656  004CD6  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  4657  004CD8  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  4658  004CDA  0E01               	movlw	1
  4659  004CDC  EC16  F02C         	call	___xxtofl
  4660  004CE0  C060  F084         	movff	?___xxtofl,___flmul@b
  4661  004CE4  C061  F085         	movff	?___xxtofl+1,___flmul@b+1
  4662  004CE8  C062  F086         	movff	?___xxtofl+2,___flmul@b+2
  4663  004CEC  C063  F087         	movff	?___xxtofl+3,___flmul@b+3
  4664  004CF0  EC5B  F00F         	call	___flmul	;wreg free
  4665  004CF4  C084  F074         	movff	?___flmul,___fladd@b
  4666  004CF8  C085  F075         	movff	?___flmul+1,___fladd@b+1
  4667  004CFC  C086  F076         	movff	?___flmul+2,___fladd@b+2
  4668  004D00  C087  F077         	movff	?___flmul+3,___fladd@b+3
  4669  004D04  C0AD  F078         	movff	log@x,___fladd@a
  4670  004D08  C0AE  F079         	movff	log@x+1,___fladd@a+1
  4671  004D0C  C0AF  F07A         	movff	log@x+2,___fladd@a+2
  4672  004D10  C0B0  F07B         	movff	log@x+3,___fladd@a+3
  4673  004D14  EC34  F014         	call	___fladd	;wreg free
  4674  004D18  C074  F0AD         	movff	?___fladd,?_log
  4675  004D1C  C075  F0AE         	movff	?___fladd+1,?_log+1
  4676  004D20  C076  F0AF         	movff	?___fladd+2,?_log+2
  4677  004D24  C077  F0B0         	movff	?___fladd+3,?_log+3
  4678  004D28  0012               	return		;funcret
  4679  004D2A                     __end_of_log:
  4680                           	opt callstack 0
  4681                           
  4682 ;; *************** function _frexp *****************
  4683 ;; Defined at:
  4684 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\frexp.c"
  4685 ;; Parameters:    Size  Location     Type
  4686 ;;  value           4   12[BANK0 ] int 
  4687 ;;  eptr            2   16[BANK0 ] PTR int 
  4688 ;;		 -> floor@expon(2), log@exponent(2), 
  4689 ;; Auto vars:     Size  Location     Type
  4690 ;;		None
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  4   12[BANK0 ] PTR int 
  4693 ;; Registers used:
  4694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4700 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;Total ram usage:        8 bytes
  4705 ;; Hardware stack levels used:    1
  4706 ;; Hardware stack levels required when called:    8
  4707 ;; This function calls:
  4708 ;;		___fleq
  4709 ;; This function is called by:
  4710 ;;		_log
  4711 ;;		_floor
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text9
  4716  007C6C                     __ptext9:
  4717                           	opt callstack 0
  4718  007C6C                     _frexp:
  4719                           	opt callstack 18
  4720                           
  4721                           ;incstack = 0
  4722  007C6C  C06C  F060         	movff	frexp@value,___fleq@ff1
  4723  007C70  C06D  F061         	movff	frexp@value+1,___fleq@ff1+1
  4724  007C74  C06E  F062         	movff	frexp@value+2,___fleq@ff1+2
  4725  007C78  C06F  F063         	movff	frexp@value+3,___fleq@ff1+3
  4726  007C7C  0E00               	movlw	0
  4727  007C7E  0100               	movlb	0	; () banked
  4728  007C80  6F64               	movwf	___fleq@ff2& (0+255),b
  4729  007C82  0E00               	movlw	0
  4730  007C84  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4731  007C86  0E00               	movlw	0
  4732  007C88  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4733  007C8A  0E00               	movlw	0
  4734  007C8C  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4735  007C8E  ECBA  F040         	call	___fleq	;wreg free
  4736  007C92  0100               	movlb	0	; () banked
  4737  007C94  A0D8               	btfss	status,0,c
  4738  007C96  D011               	goto	l15296
  4739                           
  4740                           ; BSR set to: 0
  4741  007C98  C070  FFD9         	movff	frexp@eptr,fsr2l
  4742  007C9C  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4743  007CA0  0E00               	movlw	0
  4744  007CA2  6EDE               	movwf	postinc2,c
  4745  007CA4  0E00               	movlw	0
  4746  007CA6  6EDD               	movwf	postdec2,c
  4747                           
  4748                           ; BSR set to: 0
  4749  007CA8  0E00               	movlw	0
  4750  007CAA  6F6C               	movwf	?_frexp& (0+255),b
  4751  007CAC  0E00               	movlw	0
  4752  007CAE  6F6D               	movwf	(?_frexp+1)& (0+255),b
  4753  007CB0  0E00               	movlw	0
  4754  007CB2  6F6E               	movwf	(?_frexp+2)& (0+255),b
  4755  007CB4  0E00               	movlw	0
  4756  007CB6  6F6F               	movwf	(?_frexp+3)& (0+255),b
  4757  007CB8  0012               	return	
  4758  007CBA                     l15296:
  4759                           
  4760                           ; BSR set to: 0
  4761  007CBA  516F               	movf	(frexp@value+3)& (0+255),w,b
  4762  007CBC  0B7F               	andlw	127
  4763  007CBE  6F72               	movwf	??_frexp& (0+255),b
  4764  007CC0  6B73               	clrf	(??_frexp+1)& (0+255),b
  4765  007CC2  90D8               	bcf	status,0,c
  4766  007CC4  3772               	rlcf	??_frexp& (0+255),f,b
  4767  007CC6  3773               	rlcf	(??_frexp+1)& (0+255),f,b
  4768  007CC8  C070  FFD9         	movff	frexp@eptr,fsr2l
  4769  007CCC  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4770  007CD0  C072  FFDE         	movff	??_frexp,postinc2
  4771  007CD4  C073  FFDD         	movff	??_frexp+1,postdec2
  4772  007CD8  AF6E               	btfss	(frexp@value+2)& (0+255),7,b
  4773  007CDA  D003               	goto	u15740
  4774  007CDC  6B72               	clrf	??_frexp& (0+255),b
  4775  007CDE  2B72               	incf	??_frexp& (0+255),f,b
  4776  007CE0  D002               	goto	u15748
  4777  007CE2                     u15740:
  4778  007CE2  0100               	movlb	0	; () banked
  4779  007CE4  6B72               	clrf	??_frexp& (0+255),b
  4780  007CE6                     u15748:
  4781  007CE6  5172               	movf	??_frexp& (0+255),w,b
  4782  007CE8  C070  FFD9         	movff	frexp@eptr,fsr2l
  4783  007CEC  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4784  007CF0  12DE               	iorwf	postinc2,f,c
  4785  007CF2  0E00               	movlw	0
  4786  007CF4  12DD               	iorwf	postdec2,f,c
  4787                           
  4788                           ; BSR set to: 0
  4789  007CF6  C070  FFD9         	movff	frexp@eptr,fsr2l
  4790  007CFA  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4791  007CFE  0E82               	movlw	130
  4792  007D00  26DE               	addwf	postinc2,f,c
  4793  007D02  0EFF               	movlw	255
  4794  007D04  22DD               	addwfc	postdec2,f,c
  4795                           
  4796                           ; BSR set to: 0
  4797  007D06  516F               	movf	(frexp@value+3)& (0+255),w,b
  4798  007D08  0B80               	andlw	-128
  4799  007D0A  093F               	iorlw	63
  4800  007D0C  6F6F               	movwf	(frexp@value+3)& (0+255),b
  4801                           
  4802                           ; BSR set to: 0
  4803  007D0E  9F6E               	bcf	(frexp@value+2)& (0+255),7,b
  4804                           
  4805                           ; BSR set to: 0
  4806  007D10  C06C  F06C         	movff	frexp@value,?_frexp
  4807  007D14  C06D  F06D         	movff	frexp@value+1,?_frexp+1
  4808  007D18  C06E  F06E         	movff	frexp@value+2,?_frexp+2
  4809  007D1C  C06F  F06F         	movff	frexp@value+3,?_frexp+3
  4810                           
  4811                           ; BSR set to: 0
  4812  007D20  0012               	return		;funcret
  4813  007D22                     __end_of_frexp:
  4814                           	opt callstack 0
  4815                           
  4816 ;; *************** function ___fleq *****************
  4817 ;; Defined at:
  4818 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  ff1             4    0[BANK0 ] PTR int 
  4821 ;;  ff2             4    4[BANK0 ] PTR int 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;		None               void
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4833 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;Total ram usage:       12 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    7
  4840 ;; This function calls:
  4841 ;;		Nothing
  4842 ;; This function is called by:
  4843 ;;		_log
  4844 ;;		_frexp
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text10
  4849  008174                     __ptext10:
  4850                           	opt callstack 0
  4851  008174                     ___fleq:
  4852                           	opt callstack 18
  4853                           
  4854                           ; BSR set to: 0
  4855                           ;incstack = 0
  4856  008174  0E00               	movlw	0
  4857  008176  0100               	movlb	0	; () banked
  4858  008178  1560               	andwf	___fleq@ff1& (0+255),w,b
  4859  00817A  6F68               	movwf	??___fleq& (0+255),b
  4860  00817C  0E00               	movlw	0
  4861  00817E  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  4862  008180  6F69               	movwf	(??___fleq+1)& (0+255),b
  4863  008182  0E80               	movlw	128
  4864  008184  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  4865  008186  6F6A               	movwf	(??___fleq+2)& (0+255),b
  4866  008188  0E7F               	movlw	127
  4867  00818A  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  4868  00818C  6F6B               	movwf	(??___fleq+3)& (0+255),b
  4869  00818E  5168               	movf	??___fleq& (0+255),w,b
  4870  008190  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  4871  008192  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  4872  008194  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  4873  008196  A4D8               	btfss	status,2,c
  4874  008198  D008               	goto	l14706
  4875                           
  4876                           ; BSR set to: 0
  4877  00819A  0E00               	movlw	0
  4878  00819C  6F60               	movwf	___fleq@ff1& (0+255),b
  4879  00819E  0E00               	movlw	0
  4880  0081A0  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  4881  0081A2  0E00               	movlw	0
  4882  0081A4  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  4883  0081A6  0E00               	movlw	0
  4884  0081A8  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  4885  0081AA                     l14706:
  4886                           
  4887                           ; BSR set to: 0
  4888  0081AA  0E00               	movlw	0
  4889  0081AC  1564               	andwf	___fleq@ff2& (0+255),w,b
  4890  0081AE  6F68               	movwf	??___fleq& (0+255),b
  4891  0081B0  0E00               	movlw	0
  4892  0081B2  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  4893  0081B4  6F69               	movwf	(??___fleq+1)& (0+255),b
  4894  0081B6  0E80               	movlw	128
  4895  0081B8  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  4896  0081BA  6F6A               	movwf	(??___fleq+2)& (0+255),b
  4897  0081BC  0E7F               	movlw	127
  4898  0081BE  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  4899  0081C0  6F6B               	movwf	(??___fleq+3)& (0+255),b
  4900  0081C2  5168               	movf	??___fleq& (0+255),w,b
  4901  0081C4  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  4902  0081C6  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  4903  0081C8  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  4904  0081CA  A4D8               	btfss	status,2,c
  4905  0081CC  D008               	goto	l14710
  4906                           
  4907                           ; BSR set to: 0
  4908  0081CE  0E00               	movlw	0
  4909  0081D0  6F64               	movwf	___fleq@ff2& (0+255),b
  4910  0081D2  0E00               	movlw	0
  4911  0081D4  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4912  0081D6  0E00               	movlw	0
  4913  0081D8  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4914  0081DA  0E00               	movlw	0
  4915  0081DC  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4916  0081DE                     l14710:
  4917                           
  4918                           ; BSR set to: 0
  4919  0081DE  5164               	movf	___fleq@ff2& (0+255),w,b
  4920  0081E0  1960               	xorwf	___fleq@ff1& (0+255),w,b
  4921  0081E2  E10A               	bnz	u14790
  4922  0081E4  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  4923  0081E6  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  4924  0081E8  E107               	bnz	u14790
  4925  0081EA  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  4926  0081EC  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  4927  0081EE  E104               	bnz	u14790
  4928  0081F0  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  4929  0081F2  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  4930  0081F4  B4D8               	btfsc	status,2,c
  4931  0081F6  D002               	goto	l14714
  4932  0081F8                     u14790:
  4933                           
  4934                           ; BSR set to: 0
  4935  0081F8  90D8               	bcf	status,0,c
  4936  0081FA  0012               	return	
  4937  0081FC                     l14714:
  4938                           
  4939                           ; BSR set to: 0
  4940  0081FC  80D8               	bsf	status,0,c
  4941                           
  4942                           ; BSR set to: 0
  4943  0081FE  0012               	return		;funcret
  4944  008200                     __end_of___fleq:
  4945                           	opt callstack 0
  4946                           
  4947 ;; *************** function _eval_poly *****************
  4948 ;; Defined at:
  4949 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\evalpoly.c"
  4950 ;; Parameters:    Size  Location     Type
  4951 ;;  x               4   61[BANK0 ] PTR int 
  4952 ;;  d               2   65[BANK0 ] PTR const 
  4953 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), log@coeff(36), 
  4954 ;;  n               2   67[BANK0 ] int 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  res             4   73[BANK0 ] int 
  4957 ;; Return value:  Size  Location     Type
  4958 ;;                  4   61[BANK0 ] int 
  4959 ;; Registers used:
  4960 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4961 ;; Tracked objects:
  4962 ;;		On entry : 0/0
  4963 ;;		On exit  : 0/0
  4964 ;;		Unchanged: 0/0
  4965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4966 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;Total ram usage:       16 bytes
  4971 ;; Hardware stack levels used:    1
  4972 ;; Hardware stack levels required when called:    8
  4973 ;; This function calls:
  4974 ;;		___fladd
  4975 ;;		___flmul
  4976 ;; This function is called by:
  4977 ;;		_log
  4978 ;;		_sin
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text11
  4983  006B3C                     __ptext11:
  4984                           	opt callstack 0
  4985  006B3C                     _eval_poly:
  4986                           	opt callstack 18
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;incstack = 0
  4990  006B3C  C0A3  F0A5         	movff	eval_poly@n,??_eval_poly
  4991  006B40  C0A4  F0A6         	movff	eval_poly@n+1,??_eval_poly+1
  4992  006B44  0100               	movlb	0	; () banked
  4993  006B46  90D8               	bcf	status,0,c
  4994  006B48  37A5               	rlcf	??_eval_poly& (0+255),f,b
  4995  006B4A  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4996  006B4C  90D8               	bcf	status,0,c
  4997  006B4E  37A5               	rlcf	??_eval_poly& (0+255),f,b
  4998  006B50  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4999  006B52  C0A1  F0A7         	movff	eval_poly@d,??_eval_poly+2
  5000  006B56  C0A2  F0A8         	movff	eval_poly@d+1,??_eval_poly+3
  5001  006B5A  51A5               	movf	??_eval_poly& (0+255),w,b
  5002  006B5C  27A7               	addwf	(??_eval_poly+2)& (0+255),f,b
  5003  006B5E  51A6               	movf	(??_eval_poly+1)& (0+255),w,b
  5004  006B60  23A8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5005  006B62  C0A7  FFF6         	movff	??_eval_poly+2,tblptrl
  5006  006B66  C0A8  FFF7         	movff	??_eval_poly+3,tblptrh
  5007  006B6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5008  006B6A  6AF8               	clrf	tblptru,c
  5009  006B6C                     	endif
  5010  006B6C                     	if	0	;tblptru may be non-zero
  5011  006B6C                     	endif
  5012  006B6C  0009               	tblrd		*+
  5013  006B6E  CFF5 F0A9          	movff	tablat,eval_poly@res
  5014  006B72  0009               	tblrd		*+
  5015  006B74  CFF5 F0AA          	movff	tablat,eval_poly@res+1
  5016  006B78  0009               	tblrd		*+
  5017  006B7A  CFF5 F0AB          	movff	tablat,eval_poly@res+2
  5018  006B7E  000A               	tblrd		*-
  5019  006B80  CFF5 F0AC          	movff	tablat,eval_poly@res+3
  5020  006B84  D04B               	goto	l15312
  5021  006B86                     l15310:
  5022                           
  5023                           ; BSR set to: 0
  5024  006B86  C0A9  F088         	movff	eval_poly@res,___flmul@a
  5025  006B8A  C0AA  F089         	movff	eval_poly@res+1,___flmul@a+1
  5026  006B8E  C0AB  F08A         	movff	eval_poly@res+2,___flmul@a+2
  5027  006B92  C0AC  F08B         	movff	eval_poly@res+3,___flmul@a+3
  5028  006B96  C09D  F084         	movff	eval_poly@x,___flmul@b
  5029  006B9A  C09E  F085         	movff	eval_poly@x+1,___flmul@b+1
  5030  006B9E  C09F  F086         	movff	eval_poly@x+2,___flmul@b+2
  5031  006BA2  C0A0  F087         	movff	eval_poly@x+3,___flmul@b+3
  5032  006BA6  EC5B  F00F         	call	___flmul	;wreg free
  5033  006BAA  C084  F074         	movff	?___flmul,___fladd@b
  5034  006BAE  C085  F075         	movff	?___flmul+1,___fladd@b+1
  5035  006BB2  C086  F076         	movff	?___flmul+2,___fladd@b+2
  5036  006BB6  C087  F077         	movff	?___flmul+3,___fladd@b+3
  5037  006BBA  0100               	movlb	0	; () banked
  5038  006BBC  07A3               	decf	eval_poly@n& (0+255),f,b
  5039  006BBE  A0D8               	btfss	status,0,c
  5040  006BC0  07A4               	decf	(eval_poly@n+1)& (0+255),f,b
  5041  006BC2  C0A3  F0A5         	movff	eval_poly@n,??_eval_poly
  5042  006BC6  C0A4  F0A6         	movff	eval_poly@n+1,??_eval_poly+1
  5043  006BCA  90D8               	bcf	status,0,c
  5044  006BCC  37A5               	rlcf	??_eval_poly& (0+255),f,b
  5045  006BCE  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5046  006BD0  90D8               	bcf	status,0,c
  5047  006BD2  37A5               	rlcf	??_eval_poly& (0+255),f,b
  5048  006BD4  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5049  006BD6  C0A1  F0A7         	movff	eval_poly@d,??_eval_poly+2
  5050  006BDA  C0A2  F0A8         	movff	eval_poly@d+1,??_eval_poly+3
  5051  006BDE  51A5               	movf	??_eval_poly& (0+255),w,b
  5052  006BE0  27A7               	addwf	(??_eval_poly+2)& (0+255),f,b
  5053  006BE2  51A6               	movf	(??_eval_poly+1)& (0+255),w,b
  5054  006BE4  23A8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5055  006BE6  C0A7  FFF6         	movff	??_eval_poly+2,tblptrl
  5056  006BEA  C0A8  FFF7         	movff	??_eval_poly+3,tblptrh
  5057  006BEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5058  006BEE  6AF8               	clrf	tblptru,c
  5059  006BF0                     	endif
  5060  006BF0                     	if	0	;tblptru may be non-zero
  5061  006BF0                     	endif
  5062  006BF0  0009               	tblrd		*+
  5063  006BF2  CFF5 F078          	movff	tablat,___fladd@a
  5064  006BF6  0009               	tblrd		*+
  5065  006BF8  CFF5 F079          	movff	tablat,___fladd@a+1
  5066  006BFC  0009               	tblrd		*+
  5067  006BFE  CFF5 F07A          	movff	tablat,___fladd@a+2
  5068  006C02  000A               	tblrd		*-
  5069  006C04  CFF5 F07B          	movff	tablat,___fladd@a+3
  5070  006C08  EC34  F014         	call	___fladd	;wreg free
  5071  006C0C  C074  F0A9         	movff	?___fladd,eval_poly@res
  5072  006C10  C075  F0AA         	movff	?___fladd+1,eval_poly@res+1
  5073  006C14  C076  F0AB         	movff	?___fladd+2,eval_poly@res+2
  5074  006C18  C077  F0AC         	movff	?___fladd+3,eval_poly@res+3
  5075  006C1C                     l15312:
  5076  006C1C  0100               	movlb	0	; () banked
  5077  006C1E  51A3               	movf	eval_poly@n& (0+255),w,b
  5078  006C20  11A4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  5079  006C22  A4D8               	btfss	status,2,c
  5080  006C24  D7B0               	goto	l15310
  5081                           
  5082                           ; BSR set to: 0
  5083  006C26  C0A9  F09D         	movff	eval_poly@res,?_eval_poly
  5084  006C2A  C0AA  F09E         	movff	eval_poly@res+1,?_eval_poly+1
  5085  006C2E  C0AB  F09F         	movff	eval_poly@res+2,?_eval_poly+2
  5086  006C32  C0AC  F0A0         	movff	eval_poly@res+3,?_eval_poly+3
  5087                           
  5088                           ; BSR set to: 0
  5089  006C36  0012               	return		;funcret
  5090  006C38                     __end_of_eval_poly:
  5091                           	opt callstack 0
  5092                           
  5093 ;; *************** function ___flmul *****************
  5094 ;; Defined at:
  5095 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  b               4   36[BANK0 ] int 
  5098 ;;  a               4   40[BANK0 ] int 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  prod            4   55[BANK0 ] struct .
  5101 ;;  grs             4   49[BANK0 ] unsigned long 
  5102 ;;  temp            2   59[BANK0 ] struct .
  5103 ;;  bexp            1   54[BANK0 ] unsigned char 
  5104 ;;  aexp            1   53[BANK0 ] unsigned char 
  5105 ;;  sign            1   48[BANK0 ] unsigned char 
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  4   36[BANK0 ] unsigned char 
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0, prodl, prodh
  5110 ;; Tracked objects:
  5111 ;;		On entry : 0/0
  5112 ;;		On exit  : 0/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5115 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;Total ram usage:       25 bytes
  5120 ;; Hardware stack levels used:    1
  5121 ;; Hardware stack levels required when called:    7
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_tempConversion
  5126 ;;		_log
  5127 ;;		_eval_poly
  5128 ;;		_sinGeneration
  5129 ;;		_sin
  5130 ;; This function uses a non-reentrant model
  5131 ;;
  5132                           
  5133                           	psect	text12
  5134  001EB6                     __ptext12:
  5135                           	opt callstack 0
  5136  001EB6                     ___flmul:
  5137                           	opt callstack 18
  5138                           
  5139                           ; BSR set to: 0
  5140                           ;incstack = 0
  5141  001EB6  0100               	movlb	0	; () banked
  5142  001EB8  5187               	movf	(___flmul@b+3)& (0+255),w,b
  5143  001EBA  0B80               	andlw	128
  5144  001EBC  6F90               	movwf	___flmul@sign& (0+255),b
  5145  001EBE  5187               	movf	(___flmul@b+3)& (0+255),w,b
  5146  001EC0  2587               	addwf	(___flmul@b+3)& (0+255),w,b
  5147  001EC2  6F96               	movwf	___flmul@bexp& (0+255),b
  5148                           
  5149                           ; BSR set to: 0
  5150  001EC4  BF86               	btfsc	(___flmul@b+2)& (0+255),7,b
  5151                           
  5152                           ; BSR set to: 0
  5153  001EC6  8196               	bsf	___flmul@bexp& (0+255),0,b
  5154                           
  5155                           ; BSR set to: 0
  5156  001EC8  5196               	movf	___flmul@bexp& (0+255),w,b
  5157  001ECA  B4D8               	btfsc	status,2,c
  5158  001ECC  D00D               	goto	l14586
  5159                           
  5160                           ; BSR set to: 0
  5161  001ECE  2996               	incf	___flmul@bexp& (0+255),w,b
  5162  001ED0  A4D8               	btfss	status,2,c
  5163  001ED2  D008               	goto	l14584
  5164                           
  5165                           ; BSR set to: 0
  5166  001ED4  0E00               	movlw	0
  5167  001ED6  6F84               	movwf	___flmul@b& (0+255),b
  5168  001ED8  0E00               	movlw	0
  5169  001EDA  6F85               	movwf	(___flmul@b+1)& (0+255),b
  5170  001EDC  0E00               	movlw	0
  5171  001EDE  6F86               	movwf	(___flmul@b+2)& (0+255),b
  5172  001EE0  0E00               	movlw	0
  5173  001EE2  6F87               	movwf	(___flmul@b+3)& (0+255),b
  5174  001EE4                     l14584:
  5175                           
  5176                           ; BSR set to: 0
  5177  001EE4  8F86               	bsf	(___flmul@b+2)& (0+255),7,b
  5178  001EE6  D008               	goto	l14588
  5179  001EE8                     l14586:
  5180                           
  5181                           ; BSR set to: 0
  5182  001EE8  0E00               	movlw	0
  5183  001EEA  6F84               	movwf	___flmul@b& (0+255),b
  5184  001EEC  0E00               	movlw	0
  5185  001EEE  6F85               	movwf	(___flmul@b+1)& (0+255),b
  5186  001EF0  0E00               	movlw	0
  5187  001EF2  6F86               	movwf	(___flmul@b+2)& (0+255),b
  5188  001EF4  0E00               	movlw	0
  5189  001EF6  6F87               	movwf	(___flmul@b+3)& (0+255),b
  5190  001EF8                     l14588:
  5191                           
  5192                           ; BSR set to: 0
  5193  001EF8  518B               	movf	(___flmul@a+3)& (0+255),w,b
  5194  001EFA  0B80               	andlw	128
  5195  001EFC  1B90               	xorwf	___flmul@sign& (0+255),f,b
  5196                           
  5197                           ; BSR set to: 0
  5198  001EFE  518B               	movf	(___flmul@a+3)& (0+255),w,b
  5199  001F00  258B               	addwf	(___flmul@a+3)& (0+255),w,b
  5200  001F02  6F95               	movwf	___flmul@aexp& (0+255),b
  5201                           
  5202                           ; BSR set to: 0
  5203  001F04  BF8A               	btfsc	(___flmul@a+2)& (0+255),7,b
  5204                           
  5205                           ; BSR set to: 0
  5206  001F06  8195               	bsf	___flmul@aexp& (0+255),0,b
  5207                           
  5208                           ; BSR set to: 0
  5209  001F08  5195               	movf	___flmul@aexp& (0+255),w,b
  5210  001F0A  B4D8               	btfsc	status,2,c
  5211  001F0C  D00D               	goto	l14604
  5212                           
  5213                           ; BSR set to: 0
  5214  001F0E  2995               	incf	___flmul@aexp& (0+255),w,b
  5215  001F10  A4D8               	btfss	status,2,c
  5216  001F12  D008               	goto	l14602
  5217                           
  5218                           ; BSR set to: 0
  5219  001F14  0E00               	movlw	0
  5220  001F16  6F88               	movwf	___flmul@a& (0+255),b
  5221  001F18  0E00               	movlw	0
  5222  001F1A  6F89               	movwf	(___flmul@a+1)& (0+255),b
  5223  001F1C  0E00               	movlw	0
  5224  001F1E  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  5225  001F20  0E00               	movlw	0
  5226  001F22  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  5227  001F24                     l14602:
  5228                           
  5229                           ; BSR set to: 0
  5230  001F24  8F8A               	bsf	(___flmul@a+2)& (0+255),7,b
  5231  001F26  D008               	goto	l4145
  5232  001F28                     l14604:
  5233                           
  5234                           ; BSR set to: 0
  5235  001F28  0E00               	movlw	0
  5236  001F2A  6F88               	movwf	___flmul@a& (0+255),b
  5237  001F2C  0E00               	movlw	0
  5238  001F2E  6F89               	movwf	(___flmul@a+1)& (0+255),b
  5239  001F30  0E00               	movlw	0
  5240  001F32  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  5241  001F34  0E00               	movlw	0
  5242  001F36  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  5243  001F38                     l4145:
  5244                           
  5245                           ; BSR set to: 0
  5246  001F38  5195               	movf	___flmul@aexp& (0+255),w,b
  5247  001F3A  B4D8               	btfsc	status,2,c
  5248  001F3C  D003               	goto	u14650
  5249                           
  5250                           ; BSR set to: 0
  5251  001F3E  5196               	movf	___flmul@bexp& (0+255),w,b
  5252  001F40  A4D8               	btfss	status,2,c
  5253  001F42  D009               	goto	l14612
  5254  001F44                     u14650:
  5255                           
  5256                           ; BSR set to: 0
  5257  001F44  0E00               	movlw	0
  5258  001F46  6F84               	movwf	?___flmul& (0+255),b
  5259  001F48  0E00               	movlw	0
  5260  001F4A  6F85               	movwf	(?___flmul+1)& (0+255),b
  5261  001F4C  0E00               	movlw	0
  5262  001F4E  6F86               	movwf	(?___flmul+2)& (0+255),b
  5263  001F50  0E00               	movlw	0
  5264  001F52  6F87               	movwf	(?___flmul+3)& (0+255),b
  5265  001F54  0012               	return	
  5266  001F56                     l14612:
  5267                           
  5268                           ; BSR set to: 0
  5269  001F56  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5270  001F58  0384               	mulwf	___flmul@b& (0+255),b
  5271  001F5A  CFF3 F09B          	movff	prodl,___flmul@temp
  5272  001F5E  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5273                           
  5274                           ; BSR set to: 0
  5275  001F62  519B               	movf	___flmul@temp& (0+255),w,b
  5276  001F64  6F91               	movwf	___flmul@grs& (0+255),b
  5277  001F66  6B92               	clrf	(___flmul@grs+1)& (0+255),b
  5278  001F68  6B93               	clrf	(___flmul@grs+2)& (0+255),b
  5279  001F6A  6B94               	clrf	(___flmul@grs+3)& (0+255),b
  5280                           
  5281                           ; BSR set to: 0
  5282  001F6C  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5283  001F6E  6F97               	movwf	___flmul@prod& (0+255),b
  5284  001F70  6B98               	clrf	(___flmul@prod+1)& (0+255),b
  5285  001F72  6B99               	clrf	(___flmul@prod+2)& (0+255),b
  5286  001F74  6B9A               	clrf	(___flmul@prod+3)& (0+255),b
  5287  001F76  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5288  001F78  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5289  001F7A  CFF3 F09B          	movff	prodl,___flmul@temp
  5290  001F7E  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5291                           
  5292                           ; BSR set to: 0
  5293  001F82  519B               	movf	___flmul@temp& (0+255),w,b
  5294  001F84  2791               	addwf	___flmul@grs& (0+255),f,b
  5295  001F86  0E00               	movlw	0
  5296  001F88  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5297  001F8A  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5298  001F8C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5299                           
  5300                           ; BSR set to: 0
  5301  001F8E  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5302  001F90  2797               	addwf	___flmul@prod& (0+255),f,b
  5303  001F92  0E00               	movlw	0
  5304  001F94  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5305  001F96  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5306  001F98  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5307  001F9A  5188               	movf	___flmul@a& (0+255),w,b
  5308  001F9C  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5309  001F9E  CFF3 F09B          	movff	prodl,___flmul@temp
  5310  001FA2  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5311                           
  5312                           ; BSR set to: 0
  5313  001FA6  519B               	movf	___flmul@temp& (0+255),w,b
  5314  001FA8  2791               	addwf	___flmul@grs& (0+255),f,b
  5315  001FAA  0E00               	movlw	0
  5316  001FAC  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5317  001FAE  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5318  001FB0  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5319                           
  5320                           ; BSR set to: 0
  5321  001FB2  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5322  001FB4  2797               	addwf	___flmul@prod& (0+255),f,b
  5323  001FB6  0E00               	movlw	0
  5324  001FB8  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5325  001FBA  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5326  001FBC  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5327                           
  5328                           ; BSR set to: 0
  5329  001FBE  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  5330  001FC2  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  5331  001FC6  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  5332  001FCA  6B91               	clrf	___flmul@grs& (0+255),b
  5333                           
  5334                           ; BSR set to: 0
  5335  001FCC  5188               	movf	___flmul@a& (0+255),w,b
  5336  001FCE  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5337  001FD0  CFF3 F09B          	movff	prodl,___flmul@temp
  5338  001FD4  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5339                           
  5340                           ; BSR set to: 0
  5341  001FD8  519B               	movf	___flmul@temp& (0+255),w,b
  5342  001FDA  2791               	addwf	___flmul@grs& (0+255),f,b
  5343  001FDC  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5344  001FDE  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5345  001FE0  0E00               	movlw	0
  5346  001FE2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5347  001FE4  0E00               	movlw	0
  5348  001FE6  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5349                           
  5350                           ; BSR set to: 0
  5351  001FE8  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5352  001FEA  0384               	mulwf	___flmul@b& (0+255),b
  5353  001FEC  CFF3 F09B          	movff	prodl,___flmul@temp
  5354  001FF0  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5355                           
  5356                           ; BSR set to: 0
  5357  001FF4  519B               	movf	___flmul@temp& (0+255),w,b
  5358  001FF6  2791               	addwf	___flmul@grs& (0+255),f,b
  5359  001FF8  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5360  001FFA  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5361  001FFC  0E00               	movlw	0
  5362  001FFE  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5363  002000  0E00               	movlw	0
  5364  002002  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5365                           
  5366                           ; BSR set to: 0
  5367  002004  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  5368  002008  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  5369  00200C  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  5370  002010  6B91               	clrf	___flmul@grs& (0+255),b
  5371  002012  5188               	movf	___flmul@a& (0+255),w,b
  5372  002014  0384               	mulwf	___flmul@b& (0+255),b
  5373  002016  CFF3 F09B          	movff	prodl,___flmul@temp
  5374  00201A  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5375                           
  5376                           ; BSR set to: 0
  5377  00201E  519B               	movf	___flmul@temp& (0+255),w,b
  5378  002020  2791               	addwf	___flmul@grs& (0+255),f,b
  5379  002022  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5380  002024  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5381  002026  0E00               	movlw	0
  5382  002028  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5383  00202A  0E00               	movlw	0
  5384  00202C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5385                           
  5386                           ; BSR set to: 0
  5387  00202E  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5388  002030  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5389  002032  CFF3 F09B          	movff	prodl,___flmul@temp
  5390  002036  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5391  00203A  519B               	movf	___flmul@temp& (0+255),w,b
  5392  00203C  2797               	addwf	___flmul@prod& (0+255),f,b
  5393  00203E  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5394  002040  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5395  002042  0E00               	movlw	0
  5396  002044  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5397  002046  0E00               	movlw	0
  5398  002048  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5399                           
  5400                           ; BSR set to: 0
  5401  00204A  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5402  00204C  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5403  00204E  CFF3 F09B          	movff	prodl,___flmul@temp
  5404  002052  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5405                           
  5406                           ; BSR set to: 0
  5407  002056  519B               	movf	___flmul@temp& (0+255),w,b
  5408  002058  2797               	addwf	___flmul@prod& (0+255),f,b
  5409  00205A  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5410  00205C  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5411  00205E  0E00               	movlw	0
  5412  002060  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5413  002062  0E00               	movlw	0
  5414  002064  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5415  002066  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5416  002068  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5417  00206A  CFF3 F09B          	movff	prodl,___flmul@temp
  5418  00206E  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5419                           
  5420                           ; BSR set to: 0
  5421  002072  519B               	movf	___flmul@temp& (0+255),w,b
  5422  002074  6F8C               	movwf	??___flmul& (0+255),b
  5423  002076  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5424  002078  6F8D               	movwf	(??___flmul+1)& (0+255),b
  5425  00207A  6B8E               	clrf	(??___flmul+2)& (0+255),b
  5426  00207C  6B8F               	clrf	(??___flmul+3)& (0+255),b
  5427  00207E  C08E  F08F         	movff	??___flmul+2,??___flmul+3
  5428  002082  C08D  F08E         	movff	??___flmul+1,??___flmul+2
  5429  002086  C08C  F08D         	movff	??___flmul,??___flmul+1
  5430  00208A  6B8C               	clrf	??___flmul& (0+255),b
  5431  00208C  518C               	movf	??___flmul& (0+255),w,b
  5432  00208E  2797               	addwf	___flmul@prod& (0+255),f,b
  5433  002090  518D               	movf	(??___flmul+1)& (0+255),w,b
  5434  002092  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5435  002094  518E               	movf	(??___flmul+2)& (0+255),w,b
  5436  002096  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5437  002098  518F               	movf	(??___flmul+3)& (0+255),w,b
  5438  00209A  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5439                           
  5440                           ; BSR set to: 0
  5441  00209C  C091  F08C         	movff	___flmul@grs,??___flmul
  5442  0020A0  C092  F08D         	movff	___flmul@grs+1,??___flmul+1
  5443  0020A4  C093  F08E         	movff	___flmul@grs+2,??___flmul+2
  5444  0020A8  C094  F08F         	movff	___flmul@grs+3,??___flmul+3
  5445  0020AC  0E19               	movlw	25
  5446  0020AE  D005               	goto	u14660
  5447  0020B0                     u14665:
  5448  0020B0  90D8               	bcf	status,0,c
  5449  0020B2  338F               	rrcf	(??___flmul+3)& (0+255),f,b
  5450  0020B4  338E               	rrcf	(??___flmul+2)& (0+255),f,b
  5451  0020B6  338D               	rrcf	(??___flmul+1)& (0+255),f,b
  5452  0020B8  338C               	rrcf	??___flmul& (0+255),f,b
  5453  0020BA                     u14660:
  5454  0020BA  2EE8               	decfsz	wreg,f,c
  5455  0020BC  D7F9               	goto	u14665
  5456  0020BE  518C               	movf	??___flmul& (0+255),w,b
  5457  0020C0  2797               	addwf	___flmul@prod& (0+255),f,b
  5458  0020C2  518D               	movf	(??___flmul+1)& (0+255),w,b
  5459  0020C4  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5460  0020C6  518E               	movf	(??___flmul+2)& (0+255),w,b
  5461  0020C8  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5462  0020CA  518F               	movf	(??___flmul+3)& (0+255),w,b
  5463  0020CC  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5464                           
  5465                           ; BSR set to: 0
  5466  0020CE  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  5467  0020D2  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  5468  0020D6  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  5469  0020DA  6B91               	clrf	___flmul@grs& (0+255),b
  5470                           
  5471                           ; BSR set to: 0
  5472  0020DC  5195               	movf	___flmul@aexp& (0+255),w,b
  5473  0020DE  C096  F08C         	movff	___flmul@bexp,??___flmul
  5474  0020E2  6B8D               	clrf	(??___flmul+1)& (0+255),b
  5475  0020E4  278C               	addwf	??___flmul& (0+255),f,b
  5476  0020E6  0E00               	movlw	0
  5477  0020E8  238D               	addwfc	(??___flmul+1)& (0+255),f,b
  5478  0020EA  0E82               	movlw	130
  5479  0020EC  258C               	addwf	??___flmul& (0+255),w,b
  5480  0020EE  6F9B               	movwf	___flmul@temp& (0+255),b
  5481  0020F0  0EFF               	movlw	255
  5482  0020F2  218D               	addwfc	(??___flmul+1)& (0+255),w,b
  5483  0020F4  6F9C               	movwf	(___flmul@temp+1)& (0+255),b
  5484  0020F6  D00F               	goto	l14660
  5485  0020F8                     l14654:
  5486                           
  5487                           ; BSR set to: 0
  5488  0020F8  90D8               	bcf	status,0,c
  5489  0020FA  3797               	rlcf	___flmul@prod& (0+255),f,b
  5490  0020FC  3798               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5491  0020FE  3799               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5492  002100  379A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5493                           
  5494                           ; BSR set to: 0
  5495  002102  BF94               	btfsc	(___flmul@grs+3)& (0+255),7,b
  5496                           
  5497                           ; BSR set to: 0
  5498  002104  8197               	bsf	___flmul@prod& (0+255),0,b
  5499                           
  5500                           ; BSR set to: 0
  5501  002106  90D8               	bcf	status,0,c
  5502  002108  3791               	rlcf	___flmul@grs& (0+255),f,b
  5503  00210A  3792               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5504  00210C  3793               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5505  00210E  3794               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5506  002110  079B               	decf	___flmul@temp& (0+255),f,b
  5507  002112  A0D8               	btfss	status,0,c
  5508  002114  079C               	decf	(___flmul@temp+1)& (0+255),f,b
  5509  002116                     l14660:
  5510                           
  5511                           ; BSR set to: 0
  5512  002116  AF99               	btfss	(___flmul@prod+2)& (0+255),7,b
  5513  002118  D7EF               	goto	l14654
  5514                           
  5515                           ; BSR set to: 0
  5516  00211A  0E00               	movlw	0
  5517  00211C  6F95               	movwf	___flmul@aexp& (0+255),b
  5518                           
  5519                           ; BSR set to: 0
  5520  00211E  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
  5521  002120  D017               	goto	l4154
  5522                           
  5523                           ; BSR set to: 0
  5524  002122  0EFF               	movlw	255
  5525  002124  1591               	andwf	___flmul@grs& (0+255),w,b
  5526  002126  6F8C               	movwf	??___flmul& (0+255),b
  5527  002128  0EFF               	movlw	255
  5528  00212A  1592               	andwf	(___flmul@grs+1)& (0+255),w,b
  5529  00212C  6F8D               	movwf	(??___flmul+1)& (0+255),b
  5530  00212E  0EFF               	movlw	255
  5531  002130  1593               	andwf	(___flmul@grs+2)& (0+255),w,b
  5532  002132  6F8E               	movwf	(??___flmul+2)& (0+255),b
  5533  002134  0E7F               	movlw	127
  5534  002136  1594               	andwf	(___flmul@grs+3)& (0+255),w,b
  5535  002138  6F8F               	movwf	(??___flmul+3)& (0+255),b
  5536  00213A  518C               	movf	??___flmul& (0+255),w,b
  5537  00213C  118D               	iorwf	(??___flmul+1)& (0+255),w,b
  5538  00213E  118E               	iorwf	(??___flmul+2)& (0+255),w,b
  5539  002140  118F               	iorwf	(??___flmul+3)& (0+255),w,b
  5540  002142  B4D8               	btfsc	status,2,c
  5541  002144  D003               	goto	l4155
  5542  002146                     u14700:
  5543                           
  5544                           ; BSR set to: 0
  5545  002146  0E01               	movlw	1
  5546  002148  6F95               	movwf	___flmul@aexp& (0+255),b
  5547  00214A  D002               	goto	l4154
  5548  00214C                     l4155:
  5549                           
  5550                           ; BSR set to: 0
  5551  00214C  B197               	btfsc	___flmul@prod& (0+255),0,b
  5552  00214E  D7FB               	goto	u14700
  5553  002150                     l4154:
  5554                           
  5555                           ; BSR set to: 0
  5556  002150  5195               	movf	___flmul@aexp& (0+255),w,b
  5557  002152  B4D8               	btfsc	status,2,c
  5558  002154  D01F               	goto	l14680
  5559                           
  5560                           ; BSR set to: 0
  5561  002156  0E01               	movlw	1
  5562  002158  2797               	addwf	___flmul@prod& (0+255),f,b
  5563  00215A  0E00               	movlw	0
  5564  00215C  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5565  00215E  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5566  002160  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5567                           
  5568                           ; BSR set to: 0
  5569  002162  A19A               	btfss	(___flmul@prod+3)& (0+255),0,b
  5570  002164  D017               	goto	l14680
  5571                           
  5572                           ; BSR set to: 0
  5573  002166  C097  F08C         	movff	___flmul@prod,??___flmul
  5574  00216A  C098  F08D         	movff	___flmul@prod+1,??___flmul+1
  5575  00216E  C099  F08E         	movff	___flmul@prod+2,??___flmul+2
  5576  002172  C09A  F08F         	movff	___flmul@prod+3,??___flmul+3
  5577  002176  358F               	rlcf	(??___flmul+3)& (0+255),w,b
  5578  002178  338F               	rrcf	(??___flmul+3)& (0+255),f,b
  5579  00217A  338E               	rrcf	(??___flmul+2)& (0+255),f,b
  5580  00217C  338D               	rrcf	(??___flmul+1)& (0+255),f,b
  5581  00217E  338C               	rrcf	??___flmul& (0+255),f,b
  5582  002180  C08C  F097         	movff	??___flmul,___flmul@prod
  5583  002184  C08D  F098         	movff	??___flmul+1,___flmul@prod+1
  5584  002188  C08E  F099         	movff	??___flmul+2,___flmul@prod+2
  5585  00218C  C08F  F09A         	movff	??___flmul+3,___flmul@prod+3
  5586                           
  5587                           ; BSR set to: 0
  5588  002190  4B9B               	infsnz	___flmul@temp& (0+255),f,b
  5589  002192  2B9C               	incf	(___flmul@temp+1)& (0+255),f,b
  5590  002194                     l14680:
  5591                           
  5592                           ; BSR set to: 0
  5593  002194  BF9C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5594  002196  D00D               	goto	l14684
  5595  002198  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5596  00219A  E103               	bnz	u14740
  5597  00219C  299B               	incf	___flmul@temp& (0+255),w,b
  5598  00219E  A0D8               	btfss	status,0,c
  5599  0021A0  D008               	goto	l14684
  5600  0021A2                     u14740:
  5601                           
  5602                           ; BSR set to: 0
  5603  0021A2  0E00               	movlw	0
  5604  0021A4  6F97               	movwf	___flmul@prod& (0+255),b
  5605  0021A6  0E00               	movlw	0
  5606  0021A8  6F98               	movwf	(___flmul@prod+1)& (0+255),b
  5607  0021AA  0E80               	movlw	128
  5608  0021AC  6F99               	movwf	(___flmul@prod+2)& (0+255),b
  5609  0021AE  0E7F               	movlw	127
  5610  0021B0  D020               	goto	L2
  5611  0021B2                     l14684:
  5612                           
  5613                           ; BSR set to: 0
  5614  0021B2  BF9C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5615  0021B4  D005               	goto	u14750
  5616  0021B6  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5617  0021B8  E10E               	bnz	l4162
  5618  0021BA  059B               	decf	___flmul@temp& (0+255),w,b
  5619  0021BC  B0D8               	btfsc	status,0,c
  5620  0021BE  D00B               	goto	l4162
  5621  0021C0                     u14750:
  5622                           
  5623                           ; BSR set to: 0
  5624  0021C0  0E00               	movlw	0
  5625  0021C2  6F97               	movwf	___flmul@prod& (0+255),b
  5626  0021C4  0E00               	movlw	0
  5627  0021C6  6F98               	movwf	(___flmul@prod+1)& (0+255),b
  5628  0021C8  0E00               	movlw	0
  5629  0021CA  6F99               	movwf	(___flmul@prod+2)& (0+255),b
  5630  0021CC  0E00               	movlw	0
  5631  0021CE  6F9A               	movwf	(___flmul@prod+3)& (0+255),b
  5632  0021D0  0E00               	movlw	0
  5633  0021D2  6F90               	movwf	___flmul@sign& (0+255),b
  5634  0021D4  D00F               	goto	l14696
  5635  0021D6                     l4162:
  5636                           
  5637                           ; BSR set to: 0
  5638  0021D6  C09B  F096         	movff	___flmul@temp,___flmul@bexp
  5639                           
  5640                           ; BSR set to: 0
  5641  0021DA  0EFF               	movlw	255
  5642  0021DC  1797               	andwf	___flmul@prod& (0+255),f,b
  5643  0021DE  0EFF               	movlw	255
  5644  0021E0  1798               	andwf	(___flmul@prod+1)& (0+255),f,b
  5645  0021E2  0E7F               	movlw	127
  5646  0021E4  1799               	andwf	(___flmul@prod+2)& (0+255),f,b
  5647  0021E6  0E00               	movlw	0
  5648  0021E8  179A               	andwf	(___flmul@prod+3)& (0+255),f,b
  5649                           
  5650                           ; BSR set to: 0
  5651  0021EA  B196               	btfsc	___flmul@bexp& (0+255),0,b
  5652                           
  5653                           ; BSR set to: 0
  5654  0021EC  8F99               	bsf	(___flmul@prod+2)& (0+255),7,b
  5655                           
  5656                           ; BSR set to: 0
  5657  0021EE  90D8               	bcf	status,0,c
  5658  0021F0  3196               	rrcf	___flmul@bexp& (0+255),w,b
  5659  0021F2                     L2:
  5660  0021F2  6F9A               	movwf	(___flmul@prod+3)& (0+255),b
  5661  0021F4                     l14696:
  5662                           
  5663                           ; BSR set to: 0
  5664  0021F4  5190               	movf	___flmul@sign& (0+255),w,b
  5665  0021F6  139A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5666                           
  5667                           ; BSR set to: 0
  5668  0021F8  C097  F084         	movff	___flmul@prod,?___flmul
  5669  0021FC  C098  F085         	movff	___flmul@prod+1,?___flmul+1
  5670  002200  C099  F086         	movff	___flmul@prod+2,?___flmul+2
  5671  002204  C09A  F087         	movff	___flmul@prod+3,?___flmul+3
  5672                           
  5673                           ; BSR set to: 0
  5674  002208  0012               	return		;funcret
  5675  00220A                     __end_of___flmul:
  5676                           	opt callstack 0
  5677                           
  5678 ;; *************** function ___xxtofl *****************
  5679 ;; Defined at:
  5680 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  5681 ;; Parameters:    Size  Location     Type
  5682 ;;  sign            1    wreg     unsigned char 
  5683 ;;  val             4    0[BANK0 ] long 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  sign            1    8[BANK0 ] unsigned char 
  5686 ;;  arg             4   10[BANK0 ] unsigned long 
  5687 ;;  exp             1    9[BANK0 ] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  4    0[BANK0 ] unsigned char 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5697 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;Total ram usage:       14 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; Hardware stack levels required when called:    7
  5704 ;; This function calls:
  5705 ;;		Nothing
  5706 ;; This function is called by:
  5707 ;;		_tempConversion
  5708 ;;		_log
  5709 ;;		_sinGeneration
  5710 ;;		_floor
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text13
  5715  00582C                     __ptext13:
  5716                           	opt callstack 0
  5717  00582C                     ___xxtofl:
  5718                           	opt callstack 19
  5719                           
  5720                           ; BSR set to: 0
  5721                           ;incstack = 0
  5722                           ;___xxtofl@sign stored from wreg
  5723  00582C  0100               	movlb	0	; () banked
  5724  00582E  6F68               	movwf	___xxtofl@sign& (0+255),b
  5725  005830  0100               	movlb	0	; () banked
  5726  005832  5168               	movf	___xxtofl@sign& (0+255),w,b
  5727  005834  A4D8               	btfss	status,2,c
  5728                           
  5729                           ; BSR set to: 0
  5730  005836  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5731  005838  D01A               	goto	l4186
  5732                           
  5733                           ; BSR set to: 0
  5734  00583A  C060  F064         	movff	___xxtofl@val,??___xxtofl
  5735  00583E  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  5736  005842  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  5737  005846  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  5738  00584A  1F64               	comf	??___xxtofl& (0+255),f,b
  5739  00584C  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  5740  00584E  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  5741  005850  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  5742  005852  2B64               	incf	??___xxtofl& (0+255),f,b
  5743  005854  0E00               	movlw	0
  5744  005856  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  5745  005858  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  5746  00585A  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  5747  00585C  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  5748  005860  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  5749  005864  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  5750  005868  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  5751  00586C  D008               	goto	l15248
  5752  00586E                     l4186:
  5753                           
  5754                           ; BSR set to: 0
  5755  00586E  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  5756  005872  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5757  005876  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5758  00587A  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5759  00587E                     l15248:
  5760                           
  5761                           ; BSR set to: 0
  5762  00587E  5160               	movf	___xxtofl@val& (0+255),w,b
  5763  005880  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  5764  005882  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  5765  005884  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  5766  005886  A4D8               	btfss	status,2,c
  5767  005888  D009               	goto	l15254
  5768                           
  5769                           ; BSR set to: 0
  5770  00588A  0E00               	movlw	0
  5771  00588C  6F60               	movwf	?___xxtofl& (0+255),b
  5772  00588E  0E00               	movlw	0
  5773  005890  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  5774  005892  0E00               	movlw	0
  5775  005894  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  5776  005896  0E00               	movlw	0
  5777  005898  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  5778  00589A  0012               	return	
  5779  00589C                     l15254:
  5780                           
  5781                           ; BSR set to: 0
  5782  00589C  0E96               	movlw	150
  5783  00589E  6F69               	movwf	___xxtofl@exp& (0+255),b
  5784  0058A0  D006               	goto	l15258
  5785  0058A2                     l15256:
  5786                           
  5787                           ; BSR set to: 0
  5788  0058A2  2B69               	incf	___xxtofl@exp& (0+255),f,b
  5789  0058A4  90D8               	bcf	status,0,c
  5790  0058A6  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5791  0058A8  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5792  0058AA  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5793  0058AC  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  5794  0058AE                     l15258:
  5795                           
  5796                           ; BSR set to: 0
  5797  0058AE  0E00               	movlw	0
  5798  0058B0  156A               	andwf	___xxtofl@arg& (0+255),w,b
  5799  0058B2  6F64               	movwf	??___xxtofl& (0+255),b
  5800  0058B4  0E00               	movlw	0
  5801  0058B6  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  5802  0058B8  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  5803  0058BA  0E00               	movlw	0
  5804  0058BC  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  5805  0058BE  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  5806  0058C0  0EFE               	movlw	254
  5807  0058C2  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  5808  0058C4  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  5809  0058C6  5164               	movf	??___xxtofl& (0+255),w,b
  5810  0058C8  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  5811  0058CA  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  5812  0058CC  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  5813  0058CE  B4D8               	btfsc	status,2,c
  5814  0058D0  D00D               	goto	l4193
  5815  0058D2  D7E7               	goto	l15256
  5816  0058D4                     l15260:
  5817                           
  5818                           ; BSR set to: 0
  5819  0058D4  2B69               	incf	___xxtofl@exp& (0+255),f,b
  5820                           
  5821                           ; BSR set to: 0
  5822  0058D6  0E01               	movlw	1
  5823  0058D8  276A               	addwf	___xxtofl@arg& (0+255),f,b
  5824  0058DA  0E00               	movlw	0
  5825  0058DC  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  5826  0058DE  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  5827  0058E0  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  5828                           
  5829                           ; BSR set to: 0
  5830  0058E2  90D8               	bcf	status,0,c
  5831  0058E4  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5832  0058E6  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5833  0058E8  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5834  0058EA  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  5835  0058EC                     l4193:
  5836                           
  5837                           ; BSR set to: 0
  5838  0058EC  0E00               	movlw	0
  5839  0058EE  156A               	andwf	___xxtofl@arg& (0+255),w,b
  5840  0058F0  6F64               	movwf	??___xxtofl& (0+255),b
  5841  0058F2  0E00               	movlw	0
  5842  0058F4  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  5843  0058F6  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  5844  0058F8  0E00               	movlw	0
  5845  0058FA  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  5846  0058FC  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  5847  0058FE  0EFF               	movlw	255
  5848  005900  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  5849  005902  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  5850  005904  5164               	movf	??___xxtofl& (0+255),w,b
  5851  005906  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  5852  005908  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  5853  00590A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  5854  00590C  B4D8               	btfsc	status,2,c
  5855  00590E  D007               	goto	l15268
  5856  005910  D7E1               	goto	l15260
  5857  005912                     l15266:
  5858                           
  5859                           ; BSR set to: 0
  5860  005912  0769               	decf	___xxtofl@exp& (0+255),f,b
  5861  005914  90D8               	bcf	status,0,c
  5862  005916  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  5863  005918  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  5864  00591A  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  5865  00591C  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  5866  00591E                     l15268:
  5867                           
  5868                           ; BSR set to: 0
  5869  00591E  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  5870  005920  D003               	goto	u15690
  5871                           
  5872                           ; BSR set to: 0
  5873  005922  0E02               	movlw	2
  5874  005924  6169               	cpfslt	___xxtofl@exp& (0+255),b
  5875  005926  D7F5               	goto	l15266
  5876  005928                     u15690:
  5877                           
  5878                           ; BSR set to: 0
  5879  005928  A169               	btfss	___xxtofl@exp& (0+255),0,b
  5880                           
  5881                           ; BSR set to: 0
  5882  00592A  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  5883                           
  5884                           ; BSR set to: 0
  5885  00592C  90D8               	bcf	status,0,c
  5886  00592E  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  5887                           
  5888                           ; BSR set to: 0
  5889  005930  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  5890  005934  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  5891  005936  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  5892  005938  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  5893  00593A  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  5894  00593E  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  5895  005940  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  5896  005942  6B64               	clrf	??___xxtofl& (0+255),b
  5897  005944  5164               	movf	??___xxtofl& (0+255),w,b
  5898  005946  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  5899  005948  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  5900  00594A  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  5901  00594C  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  5902  00594E  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  5903  005950  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  5904  005952  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  5905                           
  5906                           ; BSR set to: 0
  5907  005954  5168               	movf	___xxtofl@sign& (0+255),w,b
  5908  005956  A4D8               	btfss	status,2,c
  5909                           
  5910                           ; BSR set to: 0
  5911  005958  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5912  00595A  D001               	goto	l15284
  5913                           
  5914                           ; BSR set to: 0
  5915  00595C  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  5916  00595E                     l15284:
  5917                           
  5918                           ; BSR set to: 0
  5919  00595E  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  5920  005962  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  5921  005966  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  5922  00596A  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  5923                           
  5924                           ; BSR set to: 0
  5925  00596E  0012               	return		;funcret
  5926  005970                     __end_of___xxtofl:
  5927                           	opt callstack 0
  5928                           
  5929 ;; *************** function ___fltol *****************
  5930 ;; Defined at:
  5931 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  f1              4    0[BANK0 ] unsigned char 
  5934 ;; Auto vars:     Size  Location     Type
  5935 ;;  exp1            1    9[BANK0 ] unsigned char 
  5936 ;;  sign1           1    8[BANK0 ] unsigned char 
  5937 ;; Return value:  Size  Location     Type
  5938 ;;                  4    0[BANK0 ] long 
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5946 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5947 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5948 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5949 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;Total ram usage:       10 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    7
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_tempConversion
  5957 ;;		_sinGeneration
  5958 ;;		_floor
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text14
  5963  007AF8                     __ptext14:
  5964                           	opt callstack 0
  5965  007AF8                     ___fltol:
  5966                           	opt callstack 20
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;incstack = 0
  5970  007AF8  0100               	movlb	0	; () banked
  5971  007AFA  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5972  007AFC  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5973  007AFE  6F69               	movwf	___fltol@exp1& (0+255),b
  5974  007B00  5169               	movf	___fltol@exp1& (0+255),w,b
  5975  007B02  A4D8               	btfss	status,2,c
  5976  007B04  D009               	goto	l15734
  5977  007B06                     u16210:
  5978                           
  5979                           ; BSR set to: 0
  5980  007B06  0E00               	movlw	0
  5981  007B08  6F60               	movwf	?___fltol& (0+255),b
  5982  007B0A  0E00               	movlw	0
  5983  007B0C  6F61               	movwf	(?___fltol+1)& (0+255),b
  5984  007B0E  0E00               	movlw	0
  5985  007B10  6F62               	movwf	(?___fltol+2)& (0+255),b
  5986  007B12  0E00               	movlw	0
  5987  007B14  6F63               	movwf	(?___fltol+3)& (0+255),b
  5988  007B16  0012               	return	
  5989  007B18                     l15734:
  5990                           
  5991                           ; BSR set to: 0
  5992  007B18  C060  F064         	movff	___fltol@f1,??___fltol
  5993  007B1C  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  5994  007B20  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  5995  007B24  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  5996  007B28  0E20               	movlw	32
  5997  007B2A  D005               	goto	u16220
  5998  007B2C                     u16225:
  5999  007B2C  90D8               	bcf	status,0,c
  6000  007B2E  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  6001  007B30  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  6002  007B32  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  6003  007B34  3364               	rrcf	??___fltol& (0+255),f,b
  6004  007B36                     u16220:
  6005  007B36  2EE8               	decfsz	wreg,f,c
  6006  007B38  D7F9               	goto	u16225
  6007  007B3A  5164               	movf	??___fltol& (0+255),w,b
  6008  007B3C  6F68               	movwf	___fltol@sign1& (0+255),b
  6009                           
  6010                           ; BSR set to: 0
  6011  007B3E  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  6012                           
  6013                           ; BSR set to: 0
  6014  007B40  0EFF               	movlw	255
  6015  007B42  1760               	andwf	___fltol@f1& (0+255),f,b
  6016  007B44  0EFF               	movlw	255
  6017  007B46  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  6018  007B48  0EFF               	movlw	255
  6019  007B4A  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  6020  007B4C  0E00               	movlw	0
  6021  007B4E  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  6022                           
  6023                           ; BSR set to: 0
  6024  007B50  0E96               	movlw	150
  6025  007B52  5F69               	subwf	___fltol@exp1& (0+255),f,b
  6026                           
  6027                           ; BSR set to: 0
  6028  007B54  AF69               	btfss	___fltol@exp1& (0+255),7,b
  6029  007B56  D00D               	goto	l15754
  6030                           
  6031                           ; BSR set to: 0
  6032  007B58  5169               	movf	___fltol@exp1& (0+255),w,b
  6033  007B5A  0A80               	xorlw	128
  6034  007B5C  0F97               	addlw	151
  6035  007B5E  A0D8               	btfss	status,0,c
  6036  007B60  D7D2               	goto	u16210
  6037  007B62                     l15750:
  6038                           
  6039                           ; BSR set to: 0
  6040  007B62  90D8               	bcf	status,0,c
  6041  007B64  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6042  007B66  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6043  007B68  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6044  007B6A  3360               	rrcf	___fltol@f1& (0+255),f,b
  6045                           
  6046                           ; BSR set to: 0
  6047  007B6C  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  6048  007B6E  D7F9               	goto	l15750
  6049  007B70  D00D               	goto	u16260
  6050  007B72                     l15754:
  6051                           
  6052                           ; BSR set to: 0
  6053  007B72  0E1F               	movlw	31
  6054  007B74  6569               	cpfsgt	___fltol@exp1& (0+255),b
  6055  007B76  D007               	goto	l15762
  6056  007B78  D7C6               	goto	u16210
  6057  007B7A                     l15760:
  6058                           
  6059                           ; BSR set to: 0
  6060  007B7A  90D8               	bcf	status,0,c
  6061  007B7C  3760               	rlcf	___fltol@f1& (0+255),f,b
  6062  007B7E  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6063  007B80  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6064  007B82  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6065  007B84  0769               	decf	___fltol@exp1& (0+255),f,b
  6066  007B86                     l15762:
  6067                           
  6068                           ; BSR set to: 0
  6069  007B86  5169               	movf	___fltol@exp1& (0+255),w,b
  6070  007B88  A4D8               	btfss	status,2,c
  6071  007B8A  D7F7               	goto	l15760
  6072  007B8C                     u16260:
  6073                           
  6074                           ; BSR set to: 0
  6075  007B8C  5168               	movf	___fltol@sign1& (0+255),w,b
  6076  007B8E  B4D8               	btfsc	status,2,c
  6077  007B90  D008               	goto	l15768
  6078                           
  6079                           ; BSR set to: 0
  6080  007B92  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  6081  007B94  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  6082  007B96  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  6083  007B98  6D60               	negf	___fltol@f1& (0+255),b
  6084  007B9A  0E00               	movlw	0
  6085  007B9C  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6086  007B9E  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6087  007BA0  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6088  007BA2                     l15768:
  6089                           
  6090                           ; BSR set to: 0
  6091  007BA2  C060  F060         	movff	___fltol@f1,?___fltol
  6092  007BA6  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  6093  007BAA  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  6094  007BAE  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  6095                           
  6096                           ; BSR set to: 0
  6097  007BB2  0012               	return		;funcret
  6098  007BB4                     __end_of___fltol:
  6099                           	opt callstack 0
  6100                           
  6101 ;; *************** function ___flsub *****************
  6102 ;; Defined at:
  6103 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  b               4   36[BANK0 ] long 
  6106 ;;  a               4   40[BANK0 ] long 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;		None
  6109 ;; Return value:  Size  Location     Type
  6110 ;;                  4   36[BANK0 ] long 
  6111 ;; Registers used:
  6112 ;;		wreg, status,2, status,0, cstack
  6113 ;; Tracked objects:
  6114 ;;		On entry : 0/0
  6115 ;;		On exit  : 0/0
  6116 ;;		Unchanged: 0/0
  6117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6118 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6121 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6122 ;;Total ram usage:        8 bytes
  6123 ;; Hardware stack levels used:    1
  6124 ;; Hardware stack levels required when called:    8
  6125 ;; This function calls:
  6126 ;;		___fladd
  6127 ;; This function is called by:
  6128 ;;		_tempConversion
  6129 ;;		_sin
  6130 ;; This function uses a non-reentrant model
  6131 ;;
  6132                           
  6133                           	psect	text15
  6134  009712                     __ptext15:
  6135                           	opt callstack 0
  6136  009712                     ___flsub:
  6137                           	opt callstack 19
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;incstack = 0
  6141  009712  0E00               	movlw	0
  6142  009714  0100               	movlb	0	; () banked
  6143  009716  1B88               	xorwf	___flsub@a& (0+255),f,b
  6144  009718  0E00               	movlw	0
  6145  00971A  1B89               	xorwf	(___flsub@a+1)& (0+255),f,b
  6146  00971C  0E00               	movlw	0
  6147  00971E  1B8A               	xorwf	(___flsub@a+2)& (0+255),f,b
  6148  009720  0E80               	movlw	128
  6149  009722  1B8B               	xorwf	(___flsub@a+3)& (0+255),f,b
  6150                           
  6151                           ; BSR set to: 0
  6152  009724  C084  F074         	movff	___flsub@b,___fladd@b
  6153  009728  C085  F075         	movff	___flsub@b+1,___fladd@b+1
  6154  00972C  C086  F076         	movff	___flsub@b+2,___fladd@b+2
  6155  009730  C087  F077         	movff	___flsub@b+3,___fladd@b+3
  6156  009734  C088  F078         	movff	___flsub@a,___fladd@a
  6157  009738  C089  F079         	movff	___flsub@a+1,___fladd@a+1
  6158  00973C  C08A  F07A         	movff	___flsub@a+2,___fladd@a+2
  6159  009740  C08B  F07B         	movff	___flsub@a+3,___fladd@a+3
  6160  009744  EC34  F014         	call	___fladd	;wreg free
  6161  009748  C074  F084         	movff	?___fladd,?___flsub
  6162  00974C  C075  F085         	movff	?___fladd+1,?___flsub+1
  6163  009750  C076  F086         	movff	?___fladd+2,?___flsub+2
  6164  009754  C077  F087         	movff	?___fladd+3,?___flsub+3
  6165  009758  0012               	return		;funcret
  6166  00975A                     __end_of___flsub:
  6167                           	opt callstack 0
  6168                           
  6169 ;; *************** function ___fladd *****************
  6170 ;; Defined at:
  6171 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6172 ;; Parameters:    Size  Location     Type
  6173 ;;  b               4   20[BANK0 ] long 
  6174 ;;  a               4   24[BANK0 ] long 
  6175 ;; Auto vars:     Size  Location     Type
  6176 ;;  grs             1   35[BANK0 ] unsigned char 
  6177 ;;  bexp            1   34[BANK0 ] unsigned char 
  6178 ;;  aexp            1   33[BANK0 ] unsigned char 
  6179 ;;  signs           1   32[BANK0 ] unsigned char 
  6180 ;; Return value:  Size  Location     Type
  6181 ;;                  4   20[BANK0 ] unsigned char 
  6182 ;; Registers used:
  6183 ;;		wreg, status,2, status,0
  6184 ;; Tracked objects:
  6185 ;;		On entry : 0/0
  6186 ;;		On exit  : 0/0
  6187 ;;		Unchanged: 0/0
  6188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6189 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;Total ram usage:       16 bytes
  6194 ;; Hardware stack levels used:    1
  6195 ;; Hardware stack levels required when called:    7
  6196 ;; This function calls:
  6197 ;;		Nothing
  6198 ;; This function is called by:
  6199 ;;		_tempConversion
  6200 ;;		___flsub
  6201 ;;		_log
  6202 ;;		_eval_poly
  6203 ;;		_floor
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           	psect	text16
  6208  002868                     __ptext16:
  6209                           	opt callstack 0
  6210  002868                     ___fladd:
  6211                           	opt callstack 18
  6212                           
  6213                           ;incstack = 0
  6214  002868  0100               	movlb	0	; () banked
  6215  00286A  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6216  00286C  0B80               	andlw	128
  6217  00286E  6F80               	movwf	___fladd@signs& (0+255),b
  6218  002870  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6219  002872  2577               	addwf	(___fladd@b+3)& (0+255),w,b
  6220  002874  6F82               	movwf	___fladd@bexp& (0+255),b
  6221                           
  6222                           ; BSR set to: 0
  6223  002876  BF76               	btfsc	(___fladd@b+2)& (0+255),7,b
  6224                           
  6225                           ; BSR set to: 0
  6226  002878  8182               	bsf	___fladd@bexp& (0+255),0,b
  6227                           
  6228                           ; BSR set to: 0
  6229  00287A  5182               	movf	___fladd@bexp& (0+255),w,b
  6230  00287C  B4D8               	btfsc	status,2,c
  6231  00287E  D00D               	goto	l14386
  6232                           
  6233                           ; BSR set to: 0
  6234  002880  2982               	incf	___fladd@bexp& (0+255),w,b
  6235  002882  A4D8               	btfss	status,2,c
  6236  002884  D008               	goto	l14382
  6237                           
  6238                           ; BSR set to: 0
  6239  002886  0E00               	movlw	0
  6240  002888  6F74               	movwf	___fladd@b& (0+255),b
  6241  00288A  0E00               	movlw	0
  6242  00288C  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6243  00288E  0E00               	movlw	0
  6244  002890  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6245  002892  0E00               	movlw	0
  6246  002894  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6247  002896                     l14382:
  6248                           
  6249                           ; BSR set to: 0
  6250  002896  8F76               	bsf	(___fladd@b+2)& (0+255),7,b
  6251  002898  D006               	goto	L3
  6252  00289A                     l14386:
  6253                           
  6254                           ; BSR set to: 0
  6255  00289A  0E00               	movlw	0
  6256  00289C  6F74               	movwf	___fladd@b& (0+255),b
  6257  00289E  0E00               	movlw	0
  6258  0028A0  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6259  0028A2  0E00               	movlw	0
  6260  0028A4  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6261  0028A6                     L3:
  6262  0028A6  0E00               	movlw	0
  6263  0028A8  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6264                           
  6265                           ; BSR set to: 0
  6266  0028AA  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6267  0028AC  0B80               	andlw	128
  6268  0028AE  6F81               	movwf	___fladd@aexp& (0+255),b
  6269                           
  6270                           ; BSR set to: 0
  6271  0028B0  5180               	movf	___fladd@signs& (0+255),w,b
  6272  0028B2  1981               	xorwf	___fladd@aexp& (0+255),w,b
  6273  0028B4  A4D8               	btfss	status,2,c
  6274                           
  6275                           ; BSR set to: 0
  6276  0028B6  8D80               	bsf	___fladd@signs& (0+255),6,b
  6277                           
  6278                           ; BSR set to: 0
  6279  0028B8  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6280  0028BA  257B               	addwf	(___fladd@a+3)& (0+255),w,b
  6281  0028BC  6F81               	movwf	___fladd@aexp& (0+255),b
  6282                           
  6283                           ; BSR set to: 0
  6284  0028BE  BF7A               	btfsc	(___fladd@a+2)& (0+255),7,b
  6285                           
  6286                           ; BSR set to: 0
  6287  0028C0  8181               	bsf	___fladd@aexp& (0+255),0,b
  6288                           
  6289                           ; BSR set to: 0
  6290  0028C2  5181               	movf	___fladd@aexp& (0+255),w,b
  6291  0028C4  B4D8               	btfsc	status,2,c
  6292  0028C6  D00D               	goto	l14410
  6293                           
  6294                           ; BSR set to: 0
  6295  0028C8  2981               	incf	___fladd@aexp& (0+255),w,b
  6296  0028CA  A4D8               	btfss	status,2,c
  6297  0028CC  D008               	goto	l14406
  6298                           
  6299                           ; BSR set to: 0
  6300  0028CE  0E00               	movlw	0
  6301  0028D0  6F78               	movwf	___fladd@a& (0+255),b
  6302  0028D2  0E00               	movlw	0
  6303  0028D4  6F79               	movwf	(___fladd@a+1)& (0+255),b
  6304  0028D6  0E00               	movlw	0
  6305  0028D8  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  6306  0028DA  0E00               	movlw	0
  6307  0028DC  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  6308  0028DE                     l14406:
  6309                           
  6310                           ; BSR set to: 0
  6311  0028DE  8F7A               	bsf	(___fladd@a+2)& (0+255),7,b
  6312  0028E0  D006               	goto	L4
  6313  0028E2                     l14410:
  6314                           
  6315                           ; BSR set to: 0
  6316  0028E2  0E00               	movlw	0
  6317  0028E4  6F78               	movwf	___fladd@a& (0+255),b
  6318  0028E6  0E00               	movlw	0
  6319  0028E8  6F79               	movwf	(___fladd@a+1)& (0+255),b
  6320  0028EA  0E00               	movlw	0
  6321  0028EC  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  6322  0028EE                     L4:
  6323  0028EE  0E00               	movlw	0
  6324  0028F0  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  6325                           
  6326                           ; BSR set to: 0
  6327  0028F2  5182               	movf	___fladd@bexp& (0+255),w,b
  6328  0028F4  5D81               	subwf	___fladd@aexp& (0+255),w,b
  6329  0028F6  B0D8               	btfsc	status,0,c
  6330  0028F8  D022               	goto	l14448
  6331                           
  6332                           ; BSR set to: 0
  6333  0028FA  AD80               	btfss	___fladd@signs& (0+255),6,b
  6334  0028FC  D002               	goto	l14418
  6335                           
  6336                           ; BSR set to: 0
  6337  0028FE  0E80               	movlw	128
  6338  002900  1B80               	xorwf	___fladd@signs& (0+255),f,b
  6339  002902                     l14418:
  6340                           
  6341                           ; BSR set to: 0
  6342  002902  C082  F083         	movff	___fladd@bexp,___fladd@grs
  6343                           
  6344                           ; BSR set to: 0
  6345  002906  C081  F082         	movff	___fladd@aexp,___fladd@bexp
  6346                           
  6347                           ; BSR set to: 0
  6348  00290A  C083  F081         	movff	___fladd@grs,___fladd@aexp
  6349                           
  6350                           ; BSR set to: 0
  6351  00290E  C074  F083         	movff	___fladd@b,___fladd@grs
  6352                           
  6353                           ; BSR set to: 0
  6354  002912  C078  F074         	movff	___fladd@a,___fladd@b
  6355                           
  6356                           ; BSR set to: 0
  6357  002916  C083  F078         	movff	___fladd@grs,___fladd@a
  6358                           
  6359                           ; BSR set to: 0
  6360  00291A  C075  F083         	movff	___fladd@b+1,___fladd@grs
  6361                           
  6362                           ; BSR set to: 0
  6363  00291E  C079  F075         	movff	___fladd@a+1,___fladd@b+1
  6364                           
  6365                           ; BSR set to: 0
  6366  002922  C083  F079         	movff	___fladd@grs,___fladd@a+1
  6367                           
  6368                           ; BSR set to: 0
  6369  002926  C076  F083         	movff	___fladd@b+2,___fladd@grs
  6370                           
  6371                           ; BSR set to: 0
  6372  00292A  C07A  F076         	movff	___fladd@a+2,___fladd@b+2
  6373                           
  6374                           ; BSR set to: 0
  6375  00292E  C083  F07A         	movff	___fladd@grs,___fladd@a+2
  6376                           
  6377                           ; BSR set to: 0
  6378  002932  C077  F083         	movff	___fladd@b+3,___fladd@grs
  6379                           
  6380                           ; BSR set to: 0
  6381  002936  C07B  F077         	movff	___fladd@a+3,___fladd@b+3
  6382                           
  6383                           ; BSR set to: 0
  6384  00293A  C083  F07B         	movff	___fladd@grs,___fladd@a+3
  6385  00293E                     l14448:
  6386                           
  6387                           ; BSR set to: 0
  6388  00293E  0E00               	movlw	0
  6389  002940  6F83               	movwf	___fladd@grs& (0+255),b
  6390                           
  6391                           ; BSR set to: 0
  6392  002942  5182               	movf	___fladd@bexp& (0+255),w,b
  6393  002944  C081  F07C         	movff	___fladd@aexp,??___fladd
  6394  002948  6B7D               	clrf	(??___fladd+1)& (0+255),b
  6395  00294A  5F7C               	subwf	??___fladd& (0+255),f,b
  6396  00294C  0E00               	movlw	0
  6397  00294E  5B7D               	subwfb	(??___fladd+1)& (0+255),f,b
  6398  002950  BF7D               	btfsc	(??___fladd+1)& (0+255),7,b
  6399  002952  D02C               	goto	l4060
  6400  002954  517D               	movf	(??___fladd+1)& (0+255),w,b
  6401  002956  E104               	bnz	u14280
  6402  002958  0E1A               	movlw	26
  6403  00295A  5D7C               	subwf	??___fladd& (0+255),w,b
  6404  00295C  A0D8               	btfss	status,0,c
  6405  00295E  D026               	goto	l4060
  6406  002960                     u14280:
  6407                           
  6408                           ; BSR set to: 0
  6409  002960  5174               	movf	___fladd@b& (0+255),w,b
  6410  002962  1175               	iorwf	(___fladd@b+1)& (0+255),w,b
  6411  002964  1176               	iorwf	(___fladd@b+2)& (0+255),w,b
  6412  002966  1177               	iorwf	(___fladd@b+3)& (0+255),w,b
  6413  002968  B4D8               	btfsc	status,2,c
  6414  00296A  D002               	goto	u14290
  6415  00296C  0E01               	movlw	1
  6416  00296E  D001               	goto	u14300
  6417  002970                     u14290:
  6418  002970  0E00               	movlw	0
  6419  002972                     u14300:
  6420  002972  6F83               	movwf	___fladd@grs& (0+255),b
  6421                           
  6422                           ; BSR set to: 0
  6423  002974  0E00               	movlw	0
  6424  002976  6F74               	movwf	___fladd@b& (0+255),b
  6425  002978  0E00               	movlw	0
  6426  00297A  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6427  00297C  0E00               	movlw	0
  6428  00297E  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6429  002980  0E00               	movlw	0
  6430  002982  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6431                           
  6432                           ; BSR set to: 0
  6433  002984  C081  F082         	movff	___fladd@aexp,___fladd@bexp
  6434  002988  D015               	goto	u14330
  6435  00298A                     l4061:
  6436                           
  6437                           ; BSR set to: 0
  6438  00298A  A183               	btfss	___fladd@grs& (0+255),0,b
  6439  00298C  D005               	goto	l14460
  6440                           
  6441                           ; BSR set to: 0
  6442  00298E  90D8               	bcf	status,0,c
  6443  002990  3183               	rrcf	___fladd@grs& (0+255),w,b
  6444  002992  0901               	iorlw	1
  6445  002994  6F83               	movwf	___fladd@grs& (0+255),b
  6446  002996  D002               	goto	l14462
  6447  002998                     l14460:
  6448                           
  6449                           ; BSR set to: 0
  6450  002998  90D8               	bcf	status,0,c
  6451  00299A  3383               	rrcf	___fladd@grs& (0+255),f,b
  6452  00299C                     l14462:
  6453                           
  6454                           ; BSR set to: 0
  6455  00299C  B174               	btfsc	___fladd@b& (0+255),0,b
  6456                           
  6457                           ; BSR set to: 0
  6458  00299E  8F83               	bsf	___fladd@grs& (0+255),7,b
  6459                           
  6460                           ; BSR set to: 0
  6461  0029A0  3577               	rlcf	(___fladd@b+3)& (0+255),w,b
  6462  0029A2  3377               	rrcf	(___fladd@b+3)& (0+255),f,b
  6463  0029A4  3376               	rrcf	(___fladd@b+2)& (0+255),f,b
  6464  0029A6  3375               	rrcf	(___fladd@b+1)& (0+255),f,b
  6465  0029A8  3374               	rrcf	___fladd@b& (0+255),f,b
  6466                           
  6467                           ; BSR set to: 0
  6468  0029AA  2B82               	incf	___fladd@bexp& (0+255),f,b
  6469  0029AC                     l4060:
  6470                           
  6471                           ; BSR set to: 0
  6472  0029AC  5181               	movf	___fladd@aexp& (0+255),w,b
  6473  0029AE  5D82               	subwf	___fladd@bexp& (0+255),w,b
  6474  0029B0  A0D8               	btfss	status,0,c
  6475  0029B2  D7EB               	goto	l4061
  6476  0029B4                     u14330:
  6477                           
  6478                           ; BSR set to: 0
  6479  0029B4  BD80               	btfsc	___fladd@signs& (0+255),6,b
  6480  0029B6  D028               	goto	l14494
  6481                           
  6482                           ; BSR set to: 0
  6483  0029B8  5182               	movf	___fladd@bexp& (0+255),w,b
  6484  0029BA  A4D8               	btfss	status,2,c
  6485  0029BC  D009               	goto	l14476
  6486                           
  6487                           ; BSR set to: 0
  6488  0029BE  0E00               	movlw	0
  6489  0029C0  6F74               	movwf	?___fladd& (0+255),b
  6490  0029C2  0E00               	movlw	0
  6491  0029C4  6F75               	movwf	(?___fladd+1)& (0+255),b
  6492  0029C6  0E00               	movlw	0
  6493  0029C8  6F76               	movwf	(?___fladd+2)& (0+255),b
  6494  0029CA  0E00               	movlw	0
  6495  0029CC  6F77               	movwf	(?___fladd+3)& (0+255),b
  6496  0029CE  0012               	return	
  6497  0029D0                     l14476:
  6498                           
  6499                           ; BSR set to: 0
  6500  0029D0  5178               	movf	___fladd@a& (0+255),w,b
  6501  0029D2  2774               	addwf	___fladd@b& (0+255),f,b
  6502  0029D4  5179               	movf	(___fladd@a+1)& (0+255),w,b
  6503  0029D6  2375               	addwfc	(___fladd@b+1)& (0+255),f,b
  6504  0029D8  517A               	movf	(___fladd@a+2)& (0+255),w,b
  6505  0029DA  2376               	addwfc	(___fladd@b+2)& (0+255),f,b
  6506  0029DC  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6507  0029DE  2377               	addwfc	(___fladd@b+3)& (0+255),f,b
  6508                           
  6509                           ; BSR set to: 0
  6510  0029E0  A177               	btfss	(___fladd@b+3)& (0+255),0,b
  6511  0029E2  D071               	goto	u14460
  6512                           
  6513                           ; BSR set to: 0
  6514  0029E4  A183               	btfss	___fladd@grs& (0+255),0,b
  6515  0029E6  D005               	goto	l14484
  6516                           
  6517                           ; BSR set to: 0
  6518  0029E8  90D8               	bcf	status,0,c
  6519  0029EA  3183               	rrcf	___fladd@grs& (0+255),w,b
  6520  0029EC  0901               	iorlw	1
  6521  0029EE  6F83               	movwf	___fladd@grs& (0+255),b
  6522  0029F0  D002               	goto	l14486
  6523  0029F2                     l14484:
  6524                           
  6525                           ; BSR set to: 0
  6526  0029F2  90D8               	bcf	status,0,c
  6527  0029F4  3383               	rrcf	___fladd@grs& (0+255),f,b
  6528  0029F6                     l14486:
  6529                           
  6530                           ; BSR set to: 0
  6531  0029F6  B174               	btfsc	___fladd@b& (0+255),0,b
  6532                           
  6533                           ; BSR set to: 0
  6534  0029F8  8F83               	bsf	___fladd@grs& (0+255),7,b
  6535                           
  6536                           ; BSR set to: 0
  6537  0029FA  3577               	rlcf	(___fladd@b+3)& (0+255),w,b
  6538  0029FC  3377               	rrcf	(___fladd@b+3)& (0+255),f,b
  6539  0029FE  3376               	rrcf	(___fladd@b+2)& (0+255),f,b
  6540  002A00  3375               	rrcf	(___fladd@b+1)& (0+255),f,b
  6541  002A02  3374               	rrcf	___fladd@b& (0+255),f,b
  6542                           
  6543                           ; BSR set to: 0
  6544  002A04  2B82               	incf	___fladd@bexp& (0+255),f,b
  6545  002A06  D05F               	goto	u14460
  6546  002A08                     l14494:
  6547                           
  6548                           ; BSR set to: 0
  6549  002A08  5178               	movf	___fladd@a& (0+255),w,b
  6550  002A0A  5D74               	subwf	___fladd@b& (0+255),w,b
  6551  002A0C  5179               	movf	(___fladd@a+1)& (0+255),w,b
  6552  002A0E  5975               	subwfb	(___fladd@b+1)& (0+255),w,b
  6553  002A10  517A               	movf	(___fladd@a+2)& (0+255),w,b
  6554  002A12  5976               	subwfb	(___fladd@b+2)& (0+255),w,b
  6555  002A14  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6556  002A16  0A80               	xorlw	128
  6557  002A18  6F7C               	movwf	??___fladd& (0+255),b
  6558  002A1A  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6559  002A1C  0A80               	xorlw	128
  6560  002A1E  597C               	subwfb	??___fladd& (0+255),w,b
  6561  002A20  B0D8               	btfsc	status,0,c
  6562  002A22  D025               	goto	l14504
  6563                           
  6564                           ; BSR set to: 0
  6565  002A24  5174               	movf	___fladd@b& (0+255),w,b
  6566  002A26  5D78               	subwf	___fladd@a& (0+255),w,b
  6567  002A28  6F7C               	movwf	??___fladd& (0+255),b
  6568  002A2A  5175               	movf	(___fladd@b+1)& (0+255),w,b
  6569  002A2C  5979               	subwfb	(___fladd@a+1)& (0+255),w,b
  6570  002A2E  6F7D               	movwf	(??___fladd+1)& (0+255),b
  6571  002A30  5176               	movf	(___fladd@b+2)& (0+255),w,b
  6572  002A32  597A               	subwfb	(___fladd@a+2)& (0+255),w,b
  6573  002A34  6F7E               	movwf	(??___fladd+2)& (0+255),b
  6574  002A36  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6575  002A38  597B               	subwfb	(___fladd@a+3)& (0+255),w,b
  6576  002A3A  6F7F               	movwf	(??___fladd+3)& (0+255),b
  6577  002A3C  0EFF               	movlw	255
  6578  002A3E  257C               	addwf	??___fladd& (0+255),w,b
  6579  002A40  6F74               	movwf	___fladd@b& (0+255),b
  6580  002A42  0EFF               	movlw	255
  6581  002A44  217D               	addwfc	(??___fladd+1)& (0+255),w,b
  6582  002A46  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6583  002A48  0EFF               	movlw	255
  6584  002A4A  217E               	addwfc	(??___fladd+2)& (0+255),w,b
  6585  002A4C  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6586  002A4E  0EFF               	movlw	255
  6587  002A50  217F               	addwfc	(??___fladd+3)& (0+255),w,b
  6588  002A52  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6589  002A54  0E80               	movlw	128
  6590  002A56  1B80               	xorwf	___fladd@signs& (0+255),f,b
  6591                           
  6592                           ; BSR set to: 0
  6593  002A58  6D83               	negf	___fladd@grs& (0+255),b
  6594                           
  6595                           ; BSR set to: 0
  6596  002A5A  5183               	movf	___fladd@grs& (0+255),w,b
  6597  002A5C  A4D8               	btfss	status,2,c
  6598  002A5E  D00F               	goto	l4076
  6599                           
  6600                           ; BSR set to: 0
  6601  002A60  0E01               	movlw	1
  6602  002A62  2774               	addwf	___fladd@b& (0+255),f,b
  6603  002A64  0E00               	movlw	0
  6604  002A66  2375               	addwfc	(___fladd@b+1)& (0+255),f,b
  6605  002A68  2376               	addwfc	(___fladd@b+2)& (0+255),f,b
  6606  002A6A  2377               	addwfc	(___fladd@b+3)& (0+255),f,b
  6607  002A6C  D008               	goto	l4076
  6608  002A6E                     l14504:
  6609                           
  6610                           ; BSR set to: 0
  6611  002A6E  5178               	movf	___fladd@a& (0+255),w,b
  6612  002A70  5F74               	subwf	___fladd@b& (0+255),f,b
  6613  002A72  5179               	movf	(___fladd@a+1)& (0+255),w,b
  6614  002A74  5B75               	subwfb	(___fladd@b+1)& (0+255),f,b
  6615  002A76  517A               	movf	(___fladd@a+2)& (0+255),w,b
  6616  002A78  5B76               	subwfb	(___fladd@b+2)& (0+255),f,b
  6617  002A7A  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6618  002A7C  5B77               	subwfb	(___fladd@b+3)& (0+255),f,b
  6619  002A7E                     l4076:
  6620                           
  6621                           ; BSR set to: 0
  6622  002A7E  5174               	movf	___fladd@b& (0+255),w,b
  6623  002A80  1175               	iorwf	(___fladd@b+1)& (0+255),w,b
  6624  002A82  1176               	iorwf	(___fladd@b+2)& (0+255),w,b
  6625  002A84  1177               	iorwf	(___fladd@b+3)& (0+255),w,b
  6626  002A86  A4D8               	btfss	status,2,c
  6627  002A88  D01C               	goto	l14528
  6628                           
  6629                           ; BSR set to: 0
  6630  002A8A  5183               	movf	___fladd@grs& (0+255),w,b
  6631  002A8C  A4D8               	btfss	status,2,c
  6632  002A8E  D019               	goto	l14528
  6633                           
  6634                           ; BSR set to: 0
  6635  002A90  0E00               	movlw	0
  6636  002A92  6F74               	movwf	?___fladd& (0+255),b
  6637  002A94  0E00               	movlw	0
  6638  002A96  6F75               	movwf	(?___fladd+1)& (0+255),b
  6639  002A98  0E00               	movlw	0
  6640  002A9A  6F76               	movwf	(?___fladd+2)& (0+255),b
  6641  002A9C  0E00               	movlw	0
  6642  002A9E  6F77               	movwf	(?___fladd+3)& (0+255),b
  6643  002AA0  0012               	return	
  6644  002AA2                     l14512:
  6645                           
  6646                           ; BSR set to: 0
  6647  002AA2  90D8               	bcf	status,0,c
  6648  002AA4  3774               	rlcf	___fladd@b& (0+255),f,b
  6649  002AA6  3775               	rlcf	(___fladd@b+1)& (0+255),f,b
  6650  002AA8  3776               	rlcf	(___fladd@b+2)& (0+255),f,b
  6651  002AAA  3777               	rlcf	(___fladd@b+3)& (0+255),f,b
  6652                           
  6653                           ; BSR set to: 0
  6654  002AAC  BF83               	btfsc	___fladd@grs& (0+255),7,b
  6655                           
  6656                           ; BSR set to: 0
  6657  002AAE  8174               	bsf	___fladd@b& (0+255),0,b
  6658                           
  6659                           ; BSR set to: 0
  6660  002AB0  A183               	btfss	___fladd@grs& (0+255),0,b
  6661  002AB2  D002               	goto	l14522
  6662                           
  6663                           ; BSR set to: 0
  6664  002AB4  80D8               	bsf	status,0,c
  6665  002AB6  D001               	goto	L5
  6666  002AB8                     l14522:
  6667                           
  6668                           ; BSR set to: 0
  6669  002AB8  90D8               	bcf	status,0,c
  6670  002ABA                     L5:
  6671  002ABA  3783               	rlcf	___fladd@grs& (0+255),f,b
  6672                           
  6673                           ; BSR set to: 0
  6674  002ABC  5182               	movf	___fladd@bexp& (0+255),w,b
  6675  002ABE  A4D8               	btfss	status,2,c
  6676                           
  6677                           ; BSR set to: 0
  6678  002AC0  0782               	decf	___fladd@bexp& (0+255),f,b
  6679  002AC2                     l14528:
  6680                           
  6681                           ; BSR set to: 0
  6682  002AC2  AF76               	btfss	(___fladd@b+2)& (0+255),7,b
  6683  002AC4  D7EE               	goto	l14512
  6684  002AC6                     u14460:
  6685                           
  6686                           ; BSR set to: 0
  6687  002AC6  0E00               	movlw	0
  6688  002AC8  6F81               	movwf	___fladd@aexp& (0+255),b
  6689                           
  6690                           ; BSR set to: 0
  6691  002ACA  AF83               	btfss	___fladd@grs& (0+255),7,b
  6692  002ACC  D00B               	goto	l4085
  6693                           
  6694                           ; BSR set to: 0
  6695  002ACE  C083  F07C         	movff	___fladd@grs,??___fladd
  6696  002AD2  0E7F               	movlw	127
  6697  002AD4  177C               	andwf	??___fladd& (0+255),f,b
  6698  002AD6  B4D8               	btfsc	status,2,c
  6699  002AD8  D003               	goto	l4086
  6700  002ADA                     u14480:
  6701                           
  6702                           ; BSR set to: 0
  6703  002ADA  0E01               	movlw	1
  6704  002ADC  6F81               	movwf	___fladd@aexp& (0+255),b
  6705  002ADE  D002               	goto	l4085
  6706  002AE0                     l4086:
  6707                           
  6708                           ; BSR set to: 0
  6709  002AE0  B174               	btfsc	___fladd@b& (0+255),0,b
  6710  002AE2  D7FB               	goto	u14480
  6711  002AE4                     l4085:
  6712                           
  6713                           ; BSR set to: 0
  6714  002AE4  5181               	movf	___fladd@aexp& (0+255),w,b
  6715  002AE6  B4D8               	btfsc	status,2,c
  6716  002AE8  D020               	goto	l14548
  6717                           
  6718                           ; BSR set to: 0
  6719  002AEA  0E01               	movlw	1
  6720  002AEC  2774               	addwf	___fladd@b& (0+255),f,b
  6721  002AEE  0E00               	movlw	0
  6722  002AF0  2375               	addwfc	(___fladd@b+1)& (0+255),f,b
  6723  002AF2  2376               	addwfc	(___fladd@b+2)& (0+255),f,b
  6724  002AF4  2377               	addwfc	(___fladd@b+3)& (0+255),f,b
  6725                           
  6726                           ; BSR set to: 0
  6727  002AF6  A177               	btfss	(___fladd@b+3)& (0+255),0,b
  6728  002AF8  D018               	goto	l14548
  6729                           
  6730                           ; BSR set to: 0
  6731  002AFA  C074  F07C         	movff	___fladd@b,??___fladd
  6732  002AFE  C075  F07D         	movff	___fladd@b+1,??___fladd+1
  6733  002B02  C076  F07E         	movff	___fladd@b+2,??___fladd+2
  6734  002B06  C077  F07F         	movff	___fladd@b+3,??___fladd+3
  6735  002B0A  357F               	rlcf	(??___fladd+3)& (0+255),w,b
  6736  002B0C  337F               	rrcf	(??___fladd+3)& (0+255),f,b
  6737  002B0E  337E               	rrcf	(??___fladd+2)& (0+255),f,b
  6738  002B10  337D               	rrcf	(??___fladd+1)& (0+255),f,b
  6739  002B12  337C               	rrcf	??___fladd& (0+255),f,b
  6740  002B14  C07C  F074         	movff	??___fladd,___fladd@b
  6741  002B18  C07D  F075         	movff	??___fladd+1,___fladd@b+1
  6742  002B1C  C07E  F076         	movff	??___fladd+2,___fladd@b+2
  6743  002B20  C07F  F077         	movff	??___fladd+3,___fladd@b+3
  6744  002B24  2982               	incf	___fladd@bexp& (0+255),w,b
  6745  002B26  A4D8               	btfss	status,2,c
  6746                           
  6747                           ; BSR set to: 0
  6748  002B28  2B82               	incf	___fladd@bexp& (0+255),f,b
  6749  002B2A                     l14548:
  6750                           
  6751                           ; BSR set to: 0
  6752  002B2A  2982               	incf	___fladd@bexp& (0+255),w,b
  6753  002B2C  B4D8               	btfsc	status,2,c
  6754  002B2E  D003               	goto	u14540
  6755                           
  6756                           ; BSR set to: 0
  6757  002B30  5182               	movf	___fladd@bexp& (0+255),w,b
  6758  002B32  A4D8               	btfss	status,2,c
  6759  002B34  D00D               	goto	l14556
  6760  002B36                     u14540:
  6761                           
  6762                           ; BSR set to: 0
  6763  002B36  0E00               	movlw	0
  6764  002B38  6F74               	movwf	___fladd@b& (0+255),b
  6765  002B3A  0E00               	movlw	0
  6766  002B3C  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6767  002B3E  0E00               	movlw	0
  6768  002B40  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6769  002B42  0E00               	movlw	0
  6770  002B44  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6771  002B46  5182               	movf	___fladd@bexp& (0+255),w,b
  6772  002B48  A4D8               	btfss	status,2,c
  6773  002B4A  D002               	goto	l14556
  6774                           
  6775                           ; BSR set to: 0
  6776  002B4C  0E00               	movlw	0
  6777  002B4E  6F80               	movwf	___fladd@signs& (0+255),b
  6778  002B50                     l14556:
  6779                           
  6780                           ; BSR set to: 0
  6781  002B50  A182               	btfss	___fladd@bexp& (0+255),0,b
  6782  002B52  D002               	goto	l14560
  6783                           
  6784                           ; BSR set to: 0
  6785  002B54  8F76               	bsf	(___fladd@b+2)& (0+255),7,b
  6786  002B56  D001               	goto	l14562
  6787  002B58                     l14560:
  6788                           
  6789                           ; BSR set to: 0
  6790  002B58  9F76               	bcf	(___fladd@b+2)& (0+255),7,b
  6791  002B5A                     l14562:
  6792                           
  6793                           ; BSR set to: 0
  6794  002B5A  90D8               	bcf	status,0,c
  6795  002B5C  3182               	rrcf	___fladd@bexp& (0+255),w,b
  6796  002B5E  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6797                           
  6798                           ; BSR set to: 0
  6799  002B60  BF80               	btfsc	___fladd@signs& (0+255),7,b
  6800                           
  6801                           ; BSR set to: 0
  6802  002B62  8F77               	bsf	(___fladd@b+3)& (0+255),7,b
  6803                           
  6804                           ; BSR set to: 0
  6805  002B64  C074  F074         	movff	___fladd@b,?___fladd
  6806  002B68  C075  F075         	movff	___fladd@b+1,?___fladd+1
  6807  002B6C  C076  F076         	movff	___fladd@b+2,?___fladd+2
  6808  002B70  C077  F077         	movff	___fladd@b+3,?___fladd+3
  6809                           
  6810                           ; BSR set to: 0
  6811  002B74  0012               	return		;funcret
  6812  002B76                     __end_of___fladd:
  6813                           	opt callstack 0
  6814                           
  6815 ;; *************** function ___fldiv *****************
  6816 ;; Defined at:
  6817 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  b               4   61[BANK0 ] unsigned char 
  6820 ;;  a               4   65[BANK0 ] unsigned char 
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;  grs             4   80[BANK0 ] unsigned long 
  6823 ;;  rem             4   73[BANK0 ] unsigned long 
  6824 ;;  new_exp         2   78[BANK0 ] int 
  6825 ;;  aexp            1   85[BANK0 ] unsigned char 
  6826 ;;  bexp            1   84[BANK0 ] unsigned char 
  6827 ;;  sign            1   77[BANK0 ] unsigned char 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  4   61[BANK0 ] unsigned char 
  6830 ;; Registers used:
  6831 ;;		wreg, status,2, status,0
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6837 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;Total ram usage:       25 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    7
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		_tempConversion
  6848 ;;		_sin
  6849 ;; This function uses a non-reentrant model
  6850 ;;
  6851                           
  6852                           	psect	text17
  6853  003718                     __ptext17:
  6854                           	opt callstack 0
  6855  003718                     ___fldiv:
  6856                           	opt callstack 20
  6857                           
  6858                           ; BSR set to: 0
  6859                           ;incstack = 0
  6860  003718  0100               	movlb	0	; () banked
  6861  00371A  51A0               	movf	(___fldiv@b+3)& (0+255),w,b
  6862  00371C  0B80               	andlw	128
  6863  00371E  6FAD               	movwf	___fldiv@sign& (0+255),b
  6864  003720  51A0               	movf	(___fldiv@b+3)& (0+255),w,b
  6865  003722  25A0               	addwf	(___fldiv@b+3)& (0+255),w,b
  6866  003724  6FB4               	movwf	___fldiv@bexp& (0+255),b
  6867                           
  6868                           ; BSR set to: 0
  6869  003726  BF9F               	btfsc	(___fldiv@b+2)& (0+255),7,b
  6870                           
  6871                           ; BSR set to: 0
  6872  003728  81B4               	bsf	___fldiv@bexp& (0+255),0,b
  6873                           
  6874                           ; BSR set to: 0
  6875  00372A  51B4               	movf	___fldiv@bexp& (0+255),w,b
  6876  00372C  B4D8               	btfsc	status,2,c
  6877  00372E  D00D               	goto	l15600
  6878                           
  6879                           ; BSR set to: 0
  6880  003730  29B4               	incf	___fldiv@bexp& (0+255),w,b
  6881  003732  A4D8               	btfss	status,2,c
  6882  003734  D008               	goto	l15596
  6883                           
  6884                           ; BSR set to: 0
  6885  003736  0E00               	movlw	0
  6886  003738  6F9D               	movwf	___fldiv@b& (0+255),b
  6887  00373A  0E00               	movlw	0
  6888  00373C  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  6889  00373E  0E00               	movlw	0
  6890  003740  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  6891  003742  0E00               	movlw	0
  6892  003744  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  6893  003746                     l15596:
  6894                           
  6895                           ; BSR set to: 0
  6896  003746  8F9F               	bsf	(___fldiv@b+2)& (0+255),7,b
  6897  003748  D006               	goto	L6
  6898  00374A                     l15600:
  6899                           
  6900                           ; BSR set to: 0
  6901  00374A  0E00               	movlw	0
  6902  00374C  6F9D               	movwf	___fldiv@b& (0+255),b
  6903  00374E  0E00               	movlw	0
  6904  003750  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  6905  003752  0E00               	movlw	0
  6906  003754  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  6907  003756                     L6:
  6908  003756  0E00               	movlw	0
  6909  003758  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  6910                           
  6911                           ; BSR set to: 0
  6912  00375A  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  6913  00375C  0B80               	andlw	128
  6914  00375E  1BAD               	xorwf	___fldiv@sign& (0+255),f,b
  6915                           
  6916                           ; BSR set to: 0
  6917  003760  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  6918  003762  25A4               	addwf	(___fldiv@a+3)& (0+255),w,b
  6919  003764  6FB5               	movwf	___fldiv@aexp& (0+255),b
  6920                           
  6921                           ; BSR set to: 0
  6922  003766  BFA3               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6923                           
  6924                           ; BSR set to: 0
  6925  003768  81B5               	bsf	___fldiv@aexp& (0+255),0,b
  6926                           
  6927                           ; BSR set to: 0
  6928  00376A  51B5               	movf	___fldiv@aexp& (0+255),w,b
  6929  00376C  B4D8               	btfsc	status,2,c
  6930  00376E  D00D               	goto	l15620
  6931                           
  6932                           ; BSR set to: 0
  6933  003770  29B5               	incf	___fldiv@aexp& (0+255),w,b
  6934  003772  A4D8               	btfss	status,2,c
  6935  003774  D008               	goto	l15616
  6936                           
  6937                           ; BSR set to: 0
  6938  003776  0E00               	movlw	0
  6939  003778  6FA1               	movwf	___fldiv@a& (0+255),b
  6940  00377A  0E00               	movlw	0
  6941  00377C  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  6942  00377E  0E00               	movlw	0
  6943  003780  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  6944  003782  0E00               	movlw	0
  6945  003784  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  6946  003786                     l15616:
  6947                           
  6948                           ; BSR set to: 0
  6949  003786  8FA3               	bsf	(___fldiv@a+2)& (0+255),7,b
  6950  003788  D006               	goto	L7
  6951  00378A                     l15620:
  6952                           
  6953                           ; BSR set to: 0
  6954  00378A  0E00               	movlw	0
  6955  00378C  6FA1               	movwf	___fldiv@a& (0+255),b
  6956  00378E  0E00               	movlw	0
  6957  003790  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  6958  003792  0E00               	movlw	0
  6959  003794  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  6960  003796                     L7:
  6961  003796  0E00               	movlw	0
  6962  003798  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  6963                           
  6964                           ; BSR set to: 0
  6965  00379A  51A1               	movf	___fldiv@a& (0+255),w,b
  6966  00379C  11A2               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6967  00379E  11A3               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6968  0037A0  11A4               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6969  0037A2  A4D8               	btfss	status,2,c
  6970  0037A4  D017               	goto	l15634
  6971                           
  6972                           ; BSR set to: 0
  6973  0037A6  0E00               	movlw	0
  6974  0037A8  6F9D               	movwf	___fldiv@b& (0+255),b
  6975  0037AA  0E00               	movlw	0
  6976  0037AC  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  6977  0037AE  0E00               	movlw	0
  6978  0037B0  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  6979  0037B2  0E00               	movlw	0
  6980  0037B4  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  6981                           
  6982                           ; BSR set to: 0
  6983  0037B6  0E80               	movlw	128
  6984  0037B8  139F               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6985  0037BA  0E7F               	movlw	127
  6986  0037BC  13A0               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6987  0037BE                     l15628:
  6988                           
  6989                           ; BSR set to: 0
  6990  0037BE  51AD               	movf	___fldiv@sign& (0+255),w,b
  6991  0037C0  13A0               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6992                           
  6993                           ; BSR set to: 0
  6994  0037C2  C09D  F09D         	movff	___fldiv@b,?___fldiv
  6995  0037C6  C09E  F09E         	movff	___fldiv@b+1,?___fldiv+1
  6996  0037CA  C09F  F09F         	movff	___fldiv@b+2,?___fldiv+2
  6997  0037CE  C0A0  F0A0         	movff	___fldiv@b+3,?___fldiv+3
  6998  0037D2  0012               	return	
  6999  0037D4                     l15634:
  7000                           
  7001                           ; BSR set to: 0
  7002  0037D4  51B4               	movf	___fldiv@bexp& (0+255),w,b
  7003  0037D6  A4D8               	btfss	status,2,c
  7004  0037D8  D009               	goto	l15642
  7005                           
  7006                           ; BSR set to: 0
  7007                           
  7008                           ; BSR set to: 0
  7009  0037DA  0E00               	movlw	0
  7010  0037DC  6F9D               	movwf	?___fldiv& (0+255),b
  7011  0037DE  0E00               	movlw	0
  7012  0037E0  6F9E               	movwf	(?___fldiv+1)& (0+255),b
  7013  0037E2  0E00               	movlw	0
  7014  0037E4  6F9F               	movwf	(?___fldiv+2)& (0+255),b
  7015  0037E6  0E00               	movlw	0
  7016  0037E8  6FA0               	movwf	(?___fldiv+3)& (0+255),b
  7017  0037EA  0012               	return	
  7018  0037EC                     l15642:
  7019                           
  7020                           ; BSR set to: 0
  7021  0037EC  51B5               	movf	___fldiv@aexp& (0+255),w,b
  7022  0037EE  C0B4  F0A5         	movff	___fldiv@bexp,??___fldiv
  7023  0037F2  6BA6               	clrf	(??___fldiv+1)& (0+255),b
  7024  0037F4  5FA5               	subwf	??___fldiv& (0+255),f,b
  7025  0037F6  0E00               	movlw	0
  7026  0037F8  5BA6               	subwfb	(??___fldiv+1)& (0+255),f,b
  7027  0037FA  0E7F               	movlw	127
  7028  0037FC  25A5               	addwf	??___fldiv& (0+255),w,b
  7029  0037FE  6FAE               	movwf	___fldiv@new_exp& (0+255),b
  7030  003800  0E00               	movlw	0
  7031  003802  21A6               	addwfc	(??___fldiv+1)& (0+255),w,b
  7032  003804  6FAF               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7033                           
  7034                           ; BSR set to: 0
  7035  003806  C09D  F0A9         	movff	___fldiv@b,___fldiv@rem
  7036  00380A  C09E  F0AA         	movff	___fldiv@b+1,___fldiv@rem+1
  7037  00380E  C09F  F0AB         	movff	___fldiv@b+2,___fldiv@rem+2
  7038  003812  C0A0  F0AC         	movff	___fldiv@b+3,___fldiv@rem+3
  7039                           
  7040                           ; BSR set to: 0
  7041  003816  0E00               	movlw	0
  7042  003818  6F9D               	movwf	___fldiv@b& (0+255),b
  7043  00381A  0E00               	movlw	0
  7044  00381C  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7045  00381E  0E00               	movlw	0
  7046  003820  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7047  003822  0E00               	movlw	0
  7048  003824  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7049                           
  7050                           ; BSR set to: 0
  7051  003826  0E00               	movlw	0
  7052  003828  6FB0               	movwf	___fldiv@grs& (0+255),b
  7053  00382A  0E00               	movlw	0
  7054  00382C  6FB1               	movwf	(___fldiv@grs+1)& (0+255),b
  7055  00382E  0E00               	movlw	0
  7056  003830  6FB2               	movwf	(___fldiv@grs+2)& (0+255),b
  7057  003832  0E00               	movlw	0
  7058  003834  6FB3               	movwf	(___fldiv@grs+3)& (0+255),b
  7059                           
  7060                           ; BSR set to: 0
  7061  003836  0E00               	movlw	0
  7062  003838  6FB5               	movwf	___fldiv@aexp& (0+255),b
  7063  00383A  D028               	goto	l4115
  7064  00383C                     l15652:
  7065                           
  7066                           ; BSR set to: 0
  7067  00383C  51B5               	movf	___fldiv@aexp& (0+255),w,b
  7068  00383E  B4D8               	btfsc	status,2,c
  7069  003840  D011               	goto	l15660
  7070                           
  7071                           ; BSR set to: 0
  7072  003842  90D8               	bcf	status,0,c
  7073  003844  37A9               	rlcf	___fldiv@rem& (0+255),f,b
  7074  003846  37AA               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7075  003848  37AB               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7076  00384A  37AC               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7077  00384C  90D8               	bcf	status,0,c
  7078  00384E  379D               	rlcf	___fldiv@b& (0+255),f,b
  7079  003850  379E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7080  003852  379F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7081  003854  37A0               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7082                           
  7083                           ; BSR set to: 0
  7084  003856  BFB3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7085                           
  7086                           ; BSR set to: 0
  7087  003858  819D               	bsf	___fldiv@b& (0+255),0,b
  7088                           
  7089                           ; BSR set to: 0
  7090  00385A  90D8               	bcf	status,0,c
  7091  00385C  37B0               	rlcf	___fldiv@grs& (0+255),f,b
  7092  00385E  37B1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7093  003860  37B2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7094  003862  37B3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7095  003864                     l15660:
  7096                           
  7097                           ; BSR set to: 0
  7098  003864  51A1               	movf	___fldiv@a& (0+255),w,b
  7099  003866  5DA9               	subwf	___fldiv@rem& (0+255),w,b
  7100  003868  51A2               	movf	(___fldiv@a+1)& (0+255),w,b
  7101  00386A  59AA               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7102  00386C  51A3               	movf	(___fldiv@a+2)& (0+255),w,b
  7103  00386E  59AB               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7104  003870  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  7105  003872  59AC               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7106  003874  A0D8               	btfss	status,0,c
  7107  003876  D009               	goto	l15666
  7108                           
  7109                           ; BSR set to: 0
  7110  003878  8DB3               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7111                           
  7112                           ; BSR set to: 0
  7113  00387A  51A1               	movf	___fldiv@a& (0+255),w,b
  7114  00387C  5FA9               	subwf	___fldiv@rem& (0+255),f,b
  7115  00387E  51A2               	movf	(___fldiv@a+1)& (0+255),w,b
  7116  003880  5BAA               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7117  003882  51A3               	movf	(___fldiv@a+2)& (0+255),w,b
  7118  003884  5BAB               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7119  003886  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  7120  003888  5BAC               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7121  00388A                     l15666:
  7122                           
  7123                           ; BSR set to: 0
  7124  00388A  2BB5               	incf	___fldiv@aexp& (0+255),f,b
  7125  00388C                     l4115:
  7126                           
  7127                           ; BSR set to: 0
  7128  00388C  0E19               	movlw	25
  7129  00388E  65B5               	cpfsgt	___fldiv@aexp& (0+255),b
  7130  003890  D7D5               	goto	l15652
  7131                           
  7132                           ; BSR set to: 0
  7133  003892  51A9               	movf	___fldiv@rem& (0+255),w,b
  7134  003894  11AA               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7135  003896  11AB               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7136  003898  11AC               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7137  00389A  B4D8               	btfsc	status,2,c
  7138  00389C  D011               	goto	l15678
  7139                           
  7140                           ; BSR set to: 0
  7141  00389E  81B0               	bsf	___fldiv@grs& (0+255),0,b
  7142  0038A0  D00F               	goto	l15678
  7143  0038A2                     l15672:
  7144                           
  7145                           ; BSR set to: 0
  7146  0038A2  90D8               	bcf	status,0,c
  7147  0038A4  379D               	rlcf	___fldiv@b& (0+255),f,b
  7148  0038A6  379E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7149  0038A8  379F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7150  0038AA  37A0               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7151                           
  7152                           ; BSR set to: 0
  7153  0038AC  BFB3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7154                           
  7155                           ; BSR set to: 0
  7156  0038AE  819D               	bsf	___fldiv@b& (0+255),0,b
  7157                           
  7158                           ; BSR set to: 0
  7159  0038B0  90D8               	bcf	status,0,c
  7160  0038B2  37B0               	rlcf	___fldiv@grs& (0+255),f,b
  7161  0038B4  37B1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7162  0038B6  37B2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7163  0038B8  37B3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7164  0038BA  07AE               	decf	___fldiv@new_exp& (0+255),f,b
  7165  0038BC  A0D8               	btfss	status,0,c
  7166  0038BE  07AF               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7167  0038C0                     l15678:
  7168                           
  7169                           ; BSR set to: 0
  7170  0038C0  AF9F               	btfss	(___fldiv@b+2)& (0+255),7,b
  7171  0038C2  D7EF               	goto	l15672
  7172                           
  7173                           ; BSR set to: 0
  7174  0038C4  0E00               	movlw	0
  7175  0038C6  6FB5               	movwf	___fldiv@aexp& (0+255),b
  7176                           
  7177                           ; BSR set to: 0
  7178  0038C8  AFB3               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7179  0038CA  D017               	goto	l4126
  7180                           
  7181                           ; BSR set to: 0
  7182  0038CC  0EFF               	movlw	255
  7183  0038CE  15B0               	andwf	___fldiv@grs& (0+255),w,b
  7184  0038D0  6FA5               	movwf	??___fldiv& (0+255),b
  7185  0038D2  0EFF               	movlw	255
  7186  0038D4  15B1               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7187  0038D6  6FA6               	movwf	(??___fldiv+1)& (0+255),b
  7188  0038D8  0EFF               	movlw	255
  7189  0038DA  15B2               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7190  0038DC  6FA7               	movwf	(??___fldiv+2)& (0+255),b
  7191  0038DE  0E7F               	movlw	127
  7192  0038E0  15B3               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7193  0038E2  6FA8               	movwf	(??___fldiv+3)& (0+255),b
  7194  0038E4  51A5               	movf	??___fldiv& (0+255),w,b
  7195  0038E6  11A6               	iorwf	(??___fldiv+1)& (0+255),w,b
  7196  0038E8  11A7               	iorwf	(??___fldiv+2)& (0+255),w,b
  7197  0038EA  11A8               	iorwf	(??___fldiv+3)& (0+255),w,b
  7198  0038EC  B4D8               	btfsc	status,2,c
  7199  0038EE  D003               	goto	l4127
  7200  0038F0                     u16140:
  7201                           
  7202                           ; BSR set to: 0
  7203  0038F0  0E01               	movlw	1
  7204  0038F2  6FB5               	movwf	___fldiv@aexp& (0+255),b
  7205  0038F4  D002               	goto	l4126
  7206  0038F6                     l4127:
  7207                           
  7208                           ; BSR set to: 0
  7209  0038F6  B19D               	btfsc	___fldiv@b& (0+255),0,b
  7210  0038F8  D7FB               	goto	u16140
  7211  0038FA                     l4126:
  7212                           
  7213                           ; BSR set to: 0
  7214  0038FA  51B5               	movf	___fldiv@aexp& (0+255),w,b
  7215  0038FC  B4D8               	btfsc	status,2,c
  7216  0038FE  D01F               	goto	l15698
  7217                           
  7218                           ; BSR set to: 0
  7219  003900  0E01               	movlw	1
  7220  003902  279D               	addwf	___fldiv@b& (0+255),f,b
  7221  003904  0E00               	movlw	0
  7222  003906  239E               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7223  003908  239F               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7224  00390A  23A0               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7225                           
  7226                           ; BSR set to: 0
  7227  00390C  A1A0               	btfss	(___fldiv@b+3)& (0+255),0,b
  7228  00390E  D017               	goto	l15698
  7229                           
  7230                           ; BSR set to: 0
  7231  003910  C09D  F0A5         	movff	___fldiv@b,??___fldiv
  7232  003914  C09E  F0A6         	movff	___fldiv@b+1,??___fldiv+1
  7233  003918  C09F  F0A7         	movff	___fldiv@b+2,??___fldiv+2
  7234  00391C  C0A0  F0A8         	movff	___fldiv@b+3,??___fldiv+3
  7235  003920  35A8               	rlcf	(??___fldiv+3)& (0+255),w,b
  7236  003922  33A8               	rrcf	(??___fldiv+3)& (0+255),f,b
  7237  003924  33A7               	rrcf	(??___fldiv+2)& (0+255),f,b
  7238  003926  33A6               	rrcf	(??___fldiv+1)& (0+255),f,b
  7239  003928  33A5               	rrcf	??___fldiv& (0+255),f,b
  7240  00392A  C0A5  F09D         	movff	??___fldiv,___fldiv@b
  7241  00392E  C0A6  F09E         	movff	??___fldiv+1,___fldiv@b+1
  7242  003932  C0A7  F09F         	movff	??___fldiv+2,___fldiv@b+2
  7243  003936  C0A8  F0A0         	movff	??___fldiv+3,___fldiv@b+3
  7244                           
  7245                           ; BSR set to: 0
  7246  00393A  4BAE               	infsnz	___fldiv@new_exp& (0+255),f,b
  7247  00393C  2BAF               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7248  00393E                     l15698:
  7249                           
  7250                           ; BSR set to: 0
  7251  00393E  BFAF               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7252  003940  D010               	goto	l15702
  7253  003942  51AF               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7254  003944  E103               	bnz	u16180
  7255  003946  29AE               	incf	___fldiv@new_exp& (0+255),w,b
  7256  003948  A0D8               	btfss	status,0,c
  7257  00394A  D00B               	goto	l15702
  7258  00394C                     u16180:
  7259                           
  7260                           ; BSR set to: 0
  7261  00394C  0E00               	movlw	0
  7262  00394E  6FAF               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7263  003950  69AE               	setf	___fldiv@new_exp& (0+255),b
  7264  003952  0E00               	movlw	0
  7265  003954  6F9D               	movwf	___fldiv@b& (0+255),b
  7266  003956  0E00               	movlw	0
  7267  003958  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7268  00395A  0E00               	movlw	0
  7269  00395C  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7270  00395E  0E00               	movlw	0
  7271  003960  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7272  003962                     l15702:
  7273                           
  7274                           ; BSR set to: 0
  7275  003962  BFAF               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7276  003964  D005               	goto	u16190
  7277  003966  51AF               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7278  003968  E111               	bnz	l15706
  7279  00396A  05AE               	decf	___fldiv@new_exp& (0+255),w,b
  7280  00396C  B0D8               	btfsc	status,0,c
  7281  00396E  D00E               	goto	l15706
  7282  003970                     u16190:
  7283                           
  7284                           ; BSR set to: 0
  7285  003970  0E00               	movlw	0
  7286  003972  6FAF               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7287  003974  0E00               	movlw	0
  7288  003976  6FAE               	movwf	___fldiv@new_exp& (0+255),b
  7289  003978  0E00               	movlw	0
  7290  00397A  6F9D               	movwf	___fldiv@b& (0+255),b
  7291  00397C  0E00               	movlw	0
  7292  00397E  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7293  003980  0E00               	movlw	0
  7294  003982  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7295  003984  0E00               	movlw	0
  7296  003986  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7297  003988  0E00               	movlw	0
  7298  00398A  6FAD               	movwf	___fldiv@sign& (0+255),b
  7299  00398C                     l15706:
  7300                           
  7301                           ; BSR set to: 0
  7302  00398C  C0AE  F0B4         	movff	___fldiv@new_exp,___fldiv@bexp
  7303                           
  7304                           ; BSR set to: 0
  7305  003990  A1B4               	btfss	___fldiv@bexp& (0+255),0,b
  7306  003992  D002               	goto	l15712
  7307                           
  7308                           ; BSR set to: 0
  7309  003994  8F9F               	bsf	(___fldiv@b+2)& (0+255),7,b
  7310  003996  D001               	goto	l15714
  7311  003998                     l15712:
  7312                           
  7313                           ; BSR set to: 0
  7314  003998  9F9F               	bcf	(___fldiv@b+2)& (0+255),7,b
  7315  00399A                     l15714:
  7316                           
  7317                           ; BSR set to: 0
  7318  00399A  90D8               	bcf	status,0,c
  7319  00399C  31B4               	rrcf	___fldiv@bexp& (0+255),w,b
  7320  00399E  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7321  0039A0  D70E               	goto	l15628
  7322  0039A2                     __end_of___fldiv:
  7323                           	opt callstack 0
  7324                           
  7325 ;; *************** function _pointAddition *****************
  7326 ;; Defined at:
  7327 ;;		line 427 in file "acuadori.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;  element         2    0[BANK0 ] PTR unsigned char 
  7330 ;;		 -> stringValue(5), 
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;  d               1    4[BANK0 ] unsigned char 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7342 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7343 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7344 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7345 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7346 ;;Total ram usage:        5 bytes
  7347 ;; Hardware stack levels used:    1
  7348 ;; Hardware stack levels required when called:    7
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_tempSensAcquisition
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text18
  7357  00975A                     __ptext18:
  7358                           	opt callstack 0
  7359  00975A                     _pointAddition:
  7360                           	opt callstack 21
  7361                           
  7362                           ;acuadori.c: 428: for(uint8_t d = 1; d<4; d++){
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;incstack = 0
  7366  00975A  0E01               	movlw	1
  7367  00975C  0100               	movlb	0	; () banked
  7368  00975E  6F64               	movwf	pointAddition@d& (0+255),b
  7369  009760                     l16274:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;acuadori.c: 429: element[d-1] = element[d];
  7373  009760  5164               	movf	pointAddition@d& (0+255),w,b
  7374  009762  2560               	addwf	pointAddition@element& (0+255),w,b
  7375  009764  6ED9               	movwf	fsr2l,c
  7376  009766  0E00               	movlw	0
  7377  009768  2161               	addwfc	(pointAddition@element+1)& (0+255),w,b
  7378  00976A  6EDA               	movwf	fsr2h,c
  7379  00976C  5164               	movf	pointAddition@d& (0+255),w,b
  7380  00976E  2560               	addwf	pointAddition@element& (0+255),w,b
  7381  009770  6F62               	movwf	??_pointAddition& (0+255),b
  7382  009772  0E00               	movlw	0
  7383  009774  2161               	addwfc	(pointAddition@element+1)& (0+255),w,b
  7384  009776  6F63               	movwf	(??_pointAddition+1)& (0+255),b
  7385  009778  0EFF               	movlw	255
  7386  00977A  2562               	addwf	??_pointAddition& (0+255),w,b
  7387  00977C  6EE9               	movwf	fsr0l,c
  7388  00977E  0EFF               	movlw	255
  7389  009780  2163               	addwfc	(??_pointAddition+1)& (0+255),w,b
  7390  009782  6EEA               	movwf	fsr0h,c
  7391  009784  CFDF FFEF          	movff	indf2,indf0
  7392                           
  7393                           ; BSR set to: 0
  7394  009788  2B64               	incf	pointAddition@d& (0+255),f,b
  7395                           
  7396                           ; BSR set to: 0
  7397  00978A  0E03               	movlw	3
  7398  00978C  6564               	cpfsgt	pointAddition@d& (0+255),b
  7399  00978E  D7E8               	goto	l16274
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;acuadori.c: 430: };acuadori.c: 431: element[3] = 0x2E;
  7403  009790  EE20 F003          	lfsr	2,3
  7404  009794  5160               	movf	pointAddition@element& (0+255),w,b
  7405  009796  26D9               	addwf	fsr2l,f,c
  7406  009798  5161               	movf	(pointAddition@element+1)& (0+255),w,b
  7407  00979A  22DA               	addwfc	fsr2h,f,c
  7408  00979C  0E2E               	movlw	46
  7409  00979E  6EDF               	movwf	indf2,c
  7410                           
  7411                           ; BSR set to: 0
  7412  0097A0  0012               	return		;funcret
  7413  0097A2                     __end_of_pointAddition:
  7414                           	opt callstack 0
  7415                           
  7416 ;; *************** function _strncat *****************
  7417 ;; Defined at:
  7418 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strncat.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  to              2    0[BANK0 ] PTR unsigned char 
  7421 ;;		 -> sensorsString(40), 
  7422 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  7423 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  7424 ;;		 -> stringValue(5), STR_1(2), 
  7425 ;;  size            2    4[BANK0 ] unsigned int 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;  cp              2    6[BANK0 ] PTR unsigned char 
  7428 ;;		 -> sensorsString(40), 
  7429 ;; Return value:  Size  Location     Type
  7430 ;;                  2    0[BANK0 ] PTR unsigned char 
  7431 ;; Registers used:
  7432 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7433 ;; Tracked objects:
  7434 ;;		On entry : 0/0
  7435 ;;		On exit  : 0/0
  7436 ;;		Unchanged: 0/0
  7437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7438 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7441 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7442 ;;Total ram usage:        8 bytes
  7443 ;; Hardware stack levels used:    1
  7444 ;; Hardware stack levels required when called:    7
  7445 ;; This function calls:
  7446 ;;		Nothing
  7447 ;; This function is called by:
  7448 ;;		_acuadoriApp
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452                           	psect	text19
  7453  0084A8                     __ptext19:
  7454                           	opt callstack 0
  7455  0084A8                     _strncat:
  7456                           	opt callstack 22
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;incstack = 0
  7460  0084A8  C060  F066         	movff	strncat@to,strncat@cp
  7461  0084AC  C061  F067         	movff	strncat@to+1,strncat@cp+1
  7462  0084B0  D003               	goto	l16814
  7463  0084B2                     l16812:
  7464  0084B2  0100               	movlb	0	; () banked
  7465  0084B4  4B66               	infsnz	strncat@cp& (0+255),f,b
  7466  0084B6  2B67               	incf	(strncat@cp+1)& (0+255),f,b
  7467  0084B8                     l16814:
  7468  0084B8  C066  FFD9         	movff	strncat@cp,fsr2l
  7469  0084BC  C067  FFDA         	movff	strncat@cp+1,fsr2h
  7470  0084C0  50DF               	movf	indf2,w,c
  7471  0084C2  B4D8               	btfsc	status,2,c
  7472  0084C4  D009               	goto	l16818
  7473  0084C6  D7F5               	goto	l16812
  7474  0084C8                     l16816:
  7475  0084C8  0100               	movlb	0	; () banked
  7476  0084CA  0764               	decf	strncat@size& (0+255),f,b
  7477  0084CC  A0D8               	btfss	status,0,c
  7478  0084CE  0765               	decf	(strncat@size+1)& (0+255),f,b
  7479  0084D0  4B66               	infsnz	strncat@cp& (0+255),f,b
  7480  0084D2  2B67               	incf	(strncat@cp+1)& (0+255),f,b
  7481  0084D4  4B62               	infsnz	strncat@from& (0+255),f,b
  7482  0084D6  2B63               	incf	(strncat@from+1)& (0+255),f,b
  7483  0084D8                     l16818:
  7484  0084D8  0100               	movlb	0	; () banked
  7485  0084DA  5164               	movf	strncat@size& (0+255),w,b
  7486  0084DC  1165               	iorwf	(strncat@size+1)& (0+255),w,b
  7487  0084DE  B4D8               	btfsc	status,2,c
  7488  0084E0  D019               	goto	u17370
  7489                           
  7490                           ; BSR set to: 0
  7491  0084E2  C062  FFF6         	movff	strncat@from,tblptrl
  7492  0084E6  C063  FFF7         	movff	strncat@from+1,tblptrh
  7493  0084EA  0E00               	movlw	low (__mediumconst shr (0+16))
  7494  0084EC  6EF8               	movwf	tblptru,c
  7495  0084EE  C066  FFD9         	movff	strncat@cp,fsr2l
  7496  0084F2  C067  FFDA         	movff	strncat@cp+1,fsr2h
  7497  0084F6  0E0F               	movlw	(high __ramtop+-1)
  7498  0084F8  64F7               	cpfsgt	tblptrh,c
  7499  0084FA  D003               	bra	u17367
  7500  0084FC  0008               	tblrd		*
  7501  0084FE  50F5               	movf	tablat,w,c
  7502  008500  D005               	bra	u17360
  7503  008502                     u17367:
  7504  008502  CFF6 FFE9          	movff	tblptrl,fsr0l
  7505  008506  CFF7 FFEA          	movff	tblptrh,fsr0h
  7506  00850A  50EF               	movf	indf0,w,c
  7507  00850C                     u17360:
  7508  00850C  6EDF               	movwf	indf2,c
  7509  00850E  50DF               	movf	indf2,w,c
  7510  008510  A4D8               	btfss	status,2,c
  7511  008512  D7DA               	goto	l16816
  7512  008514                     u17370:
  7513  008514  0100               	movlb	0	; () banked
  7514  008516  5164               	movf	strncat@size& (0+255),w,b
  7515  008518  1165               	iorwf	(strncat@size+1)& (0+255),w,b
  7516  00851A  A4D8               	btfss	status,2,c
  7517  00851C  0012               	return	
  7518                           
  7519                           ; BSR set to: 0
  7520  00851E  C066  FFD9         	movff	strncat@cp,fsr2l
  7521  008522  C067  FFDA         	movff	strncat@cp+1,fsr2h
  7522  008526  0E00               	movlw	0
  7523  008528  6EDF               	movwf	indf2,c
  7524                           
  7525                           ; BSR set to: 0
  7526  00852A  0012               	return		;funcret
  7527  00852C                     __end_of_strncat:
  7528                           	opt callstack 0
  7529                           
  7530 ;; *************** function _sendValue *****************
  7531 ;; Defined at:
  7532 ;;		line 378 in file "acuadori.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;		None
  7535 ;; Auto vars:     Size  Location     Type
  7536 ;;  result          4    0        unsigned long 
  7537 ;;  status          1  155[BANK0 ] unsigned char 
  7538 ;;  firstSend       1  154[BANK0 ] unsigned char 
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      void 
  7541 ;; Registers used:
  7542 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;Total ram usage:        2 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:   19
  7555 ;; This function calls:
  7556 ;;		_LORAWAN_Mainloop
  7557 ;;		_LORAWAN_Send
  7558 ;;		_SwClearAllTimers
  7559 ;;		_timerReset
  7560 ;; This function is called by:
  7561 ;;		_acuadoriApp
  7562 ;; This function uses a non-reentrant model
  7563 ;;
  7564                           
  7565                           	psect	text20
  7566  008EB2                     __ptext20:
  7567                           	opt callstack 0
  7568  008EB2                     _sendValue:
  7569                           	opt callstack 10
  7570                           
  7571                           ;acuadori.c: 380: uint8_t status = 1;
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;incstack = 0
  7575  008EB2  0E01               	movlw	1
  7576  008EB4  0100               	movlb	0	; () banked
  7577  008EB6  6FFB               	movwf	sendValue@status& (0+255),b
  7578                           
  7579                           ;acuadori.c: 381: bool firstSend = 1;
  7580  008EB8  0E01               	movlw	1
  7581  008EBA  6FFA               	movwf	sendValue@firstSend& (0+255),b
  7582                           
  7583                           ;acuadori.c: 382: uint32_t result;;acuadori.c: 386: while(status){
  7584  008EBC  D026               	goto	l3395
  7585  008EBE                     l21732:
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;acuadori.c: 387: LORAWAN_Mainloop();
  7589  008EBE  EC64  F04D         	call	_LORAWAN_Mainloop	;wreg free
  7590                           
  7591                           ;acuadori.c: 389: if(timer.sec > 10 || firstSend){
  7592  008EC2  0E0B               	movlw	11
  7593  008EC4  0101               	movlb	1	; () banked
  7594  008EC6  6102               	cpfslt	(_timer+2)& (0+255),b
  7595  008EC8  D004               	goto	u24480
  7596                           
  7597                           ; BSR set to: 1
  7598  008ECA  0100               	movlb	0	; () banked
  7599  008ECC  51FA               	movf	sendValue@firstSend& (0+255),w,b
  7600  008ECE  B4D8               	btfsc	status,2,c
  7601  008ED0  D01C               	goto	l3395
  7602  008ED2                     u24480:
  7603                           
  7604                           ;acuadori.c: 390: firstSend = 0;
  7605  008ED2  0E00               	movlw	0
  7606  008ED4  0100               	movlb	0	; () banked
  7607  008ED6  6FFA               	movwf	sendValue@firstSend& (0+255),b
  7608                           
  7609                           ; BSR set to: 0
  7610                           ;acuadori.c: 395: SwClearAllTimers();
  7611  008ED8  ECB0  F04E         	call	_SwClearAllTimers	;wreg free
  7612                           
  7613                           ;acuadori.c: 396: LORAWAN_Mainloop();
  7614  008EDC  EC64  F04D         	call	_LORAWAN_Mainloop	;wreg free
  7615                           
  7616                           ;acuadori.c: 398: status = LORAWAN_Send(CNF, 200, sensorsString, sensorsStringLength);
  7617  008EE0  0EC8               	movlw	200
  7618  008EE2  0100               	movlb	0	; () banked
  7619  008EE4  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
  7620  008EE6  0EA0               	movlw	low _sensorsString
  7621  008EE8  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
  7622  008EEA  0E03               	movlw	high _sensorsString
  7623  008EEC  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  7624  008EEE  C1F8  F0D7         	movff	_sensorsStringLength,LORAWAN_Send@bufferLength
  7625  008EF2  0E01               	movlw	1
  7626  008EF4  EC12  F038         	call	_LORAWAN_Send
  7627  008EF8  0100               	movlb	0	; () banked
  7628  008EFA  6FFB               	movwf	sendValue@status& (0+255),b
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;acuadori.c: 410: if(status == NETWORK_NOT_JOINED){
  7632  008EFC  05FB               	decf	sendValue@status& (0+255),w,b
  7633  008EFE  B4D8               	btfsc	status,2,c
  7634  008F00  0012               	return	
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;acuadori.c: 412: };acuadori.c: 413: if (status){
  7638  008F02  51FB               	movf	sendValue@status& (0+255),w,b
  7639  008F04  A4D8               	btfss	status,2,c
  7640                           
  7641                           ; BSR set to: 0
  7642                           ;acuadori.c: 416: timerReset();
  7643  008F06  EC0F  F050         	call	_timerReset	;wreg free
  7644  008F0A                     l3395:
  7645                           
  7646                           ; BSR set to: 0
  7647  008F0A  0100               	movlb	0	; () banked
  7648  008F0C  51FB               	movf	sendValue@status& (0+255),w,b
  7649  008F0E  B4D8               	btfsc	status,2,c
  7650  008F10  0012               	return	
  7651  008F12  D7D5               	goto	l21732
  7652  008F14                     __end_of_sendValue:
  7653                           	opt callstack 0
  7654                           
  7655 ;; *************** function _timerReset *****************
  7656 ;; Defined at:
  7657 ;;		line 68 in file "tmrAPP.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;		None
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1    wreg      void 
  7664 ;; Registers used:
  7665 ;;		wreg, status,2
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7675 ;;Total ram usage:        0 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    7
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_main
  7682 ;;		_sendValue
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text21
  7687  00A01E                     __ptext21:
  7688                           	opt callstack 0
  7689  00A01E                     _timerReset:
  7690                           	opt callstack 23
  7691                           
  7692                           ;tmrAPP.c: 69: sCounter = 0;
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;incstack = 0
  7696  00A01E  0E00               	movlw	0
  7697  00A020  0101               	movlb	1	; () banked
  7698  00A022  6F1B               	movwf	(_sCounter+1)& (0+255),b
  7699  00A024  0E00               	movlw	0
  7700  00A026  6F1A               	movwf	_sCounter& (0+255),b
  7701                           
  7702                           ;tmrAPP.c: 70: msCounter = 0;
  7703  00A028  0E00               	movlw	0
  7704  00A02A  6F1D               	movwf	(_msCounter+1)& (0+255),b
  7705  00A02C  0E00               	movlw	0
  7706  00A02E  6F1C               	movwf	_msCounter& (0+255),b
  7707                           
  7708                           ;tmrAPP.c: 71: timer.ms = 0;
  7709  00A030  0E00               	movlw	0
  7710  00A032  6F01               	movwf	(_timer+1)& (0+255),b
  7711  00A034  0E00               	movlw	0
  7712  00A036  6F00               	movwf	_timer& (0+255),b
  7713                           
  7714                           ;tmrAPP.c: 72: timer.sec = 0;
  7715  00A038  0E00               	movlw	0
  7716  00A03A  6F02               	movwf	(_timer+2)& (0+255),b
  7717                           
  7718                           ;tmrAPP.c: 73: timer.min = 0;
  7719  00A03C  0E00               	movlw	0
  7720  00A03E  6F03               	movwf	(_timer+3)& (0+255),b
  7721                           
  7722                           ;tmrAPP.c: 74: timer.hour = 0;
  7723  00A040  0E00               	movlw	0
  7724  00A042  6F04               	movwf	(_timer+4)& (0+255),b
  7725                           
  7726                           ;tmrAPP.c: 75: timer.day = 0;
  7727  00A044  0E00               	movlw	0
  7728  00A046  6F05               	movwf	(_timer+5)& (0+255),b
  7729                           
  7730                           ; BSR set to: 1
  7731  00A048  0012               	return		;funcret
  7732  00A04A                     __end_of_timerReset:
  7733                           	opt callstack 0
  7734                           
  7735 ;; *************** function _SwClearAllTimers *****************
  7736 ;; Defined at:
  7737 ;;		line 328 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;  i               1    0[BANK0 ] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1    wreg      void 
  7744 ;; Registers used:
  7745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7755 ;;Total ram usage:        1 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    7
  7758 ;; This function calls:
  7759 ;;		Nothing
  7760 ;; This function is called by:
  7761 ;;		_sendValue
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text22
  7766  009D60                     __ptext22:
  7767                           	opt callstack 0
  7768  009D60                     _SwClearAllTimers:
  7769                           	opt callstack 21
  7770                           
  7771                           ;sw_timer.c: 329: for (uint8_t i = 0; i < allocatedTimers; i++)
  7772                           
  7773                           ; BSR set to: 1
  7774                           ;incstack = 0
  7775  009D60  0E00               	movlw	0
  7776  009D62  0100               	movlb	0	; () banked
  7777  009D64  6F60               	movwf	SwClearAllTimers@i& (0+255),b
  7778  009D66  D00D               	goto	l21374
  7779  009D68                     l21370:
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;sw_timer.c: 330: {;sw_timer.c: 331: swTimers[i].ticksRemaining = 0;
  7783  009D68  5160               	movf	SwClearAllTimers@i& (0+255),w,b
  7784  009D6A  0D08               	mullw	8
  7785  009D6C  0E00               	movlw	low _swTimers
  7786  009D6E  24F3               	addwf	prodl,w,c
  7787  009D70  6ED9               	movwf	fsr2l,c
  7788  009D72  0E03               	movlw	high _swTimers
  7789  009D74  20F4               	addwfc	prodh,w,c
  7790  009D76  6EDA               	movwf	fsr2h,c
  7791  009D78  6ADE               	clrf	postinc2,c
  7792  009D7A  6ADE               	clrf	postinc2,c
  7793  009D7C  6ADE               	clrf	postinc2,c
  7794  009D7E  6ADD               	clrf	postdec2,c
  7795                           
  7796                           ; BSR set to: 0
  7797  009D80  2B60               	incf	SwClearAllTimers@i& (0+255),f,b
  7798  009D82                     l21374:
  7799                           
  7800                           ; BSR set to: 0
  7801  009D82  0101               	movlb	1	; () banked
  7802  009D84  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
  7803  009D86  0100               	movlb	0	; () banked
  7804  009D88  5D60               	subwf	SwClearAllTimers@i& (0+255),w,b
  7805  009D8A  B0D8               	btfsc	status,0,c
  7806  009D8C  0012               	return	
  7807  009D8E  D7EC               	goto	l21370
  7808  009D90                     __end_of_SwClearAllTimers:
  7809                           	opt callstack 0
  7810                           
  7811 ;; *************** function _LORAWAN_Mainloop *****************
  7812 ;; Defined at:
  7813 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;		None
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;		None
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      void 
  7820 ;; Registers used:
  7821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7831 ;;Total ram usage:        0 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:   18
  7834 ;; This function calls:
  7835 ;;		_INTERRUPT_GetDioStatus
  7836 ;;		_RADIO_DIO0
  7837 ;;		_RADIO_DIO1
  7838 ;;		_RADIO_DIO2
  7839 ;;		_RADIO_DIO3
  7840 ;;		_RADIO_DIO4
  7841 ;;		_RADIO_DIO5
  7842 ;;		_SwTimersExecute
  7843 ;; This function is called by:
  7844 ;;		_main
  7845 ;;		_sendValue
  7846 ;; This function uses a non-reentrant model
  7847 ;;
  7848                           
  7849                           	psect	text23
  7850  009AC8                     __ptext23:
  7851                           	opt callstack 0
  7852  009AC8                     _LORAWAN_Mainloop:
  7853                           	opt callstack 10
  7854                           
  7855                           ;lorawan.c: 2240: SwTimersExecute();
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;incstack = 0
  7859  009AC8  EC5B  F03C         	call	_SwTimersExecute	;wreg free
  7860                           
  7861                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  7862  009ACC  EC3C  F053         	call	_INTERRUPT_GetDioStatus	;wreg free
  7863  009AD0  0101               	movlb	1	; () banked
  7864  009AD2  6F27               	movwf	_localDioStatus& (0+255),b
  7865                           
  7866                           ; BSR set to: 1
  7867                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  7868  009AD4  B127               	btfsc	_localDioStatus& (0+255),0,b
  7869                           
  7870                           ; BSR set to: 1
  7871                           ;lorawan.c: 2246: {;lorawan.c: 2247: RADIO_DIO0();
  7872  009AD6  EC00  F041         	call	_RADIO_DIO0	;wreg free
  7873                           
  7874                           ;lorawan.c: 2248: };lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  7875  009ADA  0101               	movlb	1	; () banked
  7876  009ADC  B327               	btfsc	_localDioStatus& (0+255),1,b
  7877                           
  7878                           ; BSR set to: 1
  7879                           ;lorawan.c: 2250: {;lorawan.c: 2251: RADIO_DIO1();
  7880  009ADE  EC18  F04B         	call	_RADIO_DIO1	;wreg free
  7881                           
  7882                           ;lorawan.c: 2252: };lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  7883  009AE2  0101               	movlb	1	; () banked
  7884  009AE4  B527               	btfsc	_localDioStatus& (0+255),2,b
  7885                           
  7886                           ; BSR set to: 1
  7887                           ;lorawan.c: 2254: {;lorawan.c: 2255: RADIO_DIO2();
  7888  009AE6  EC79  F04A         	call	_RADIO_DIO2	;wreg free
  7889                           
  7890                           ;lorawan.c: 2256: };lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  7891  009AEA  0101               	movlb	1	; () banked
  7892  009AEC  B727               	btfsc	_localDioStatus& (0+255),3,b
  7893                           
  7894                           ; BSR set to: 1
  7895                           ;lorawan.c: 2258: {;lorawan.c: 2259: RADIO_DIO3();
  7896  009AEE  EC7F  F052         	call	_RADIO_DIO3	;wreg free
  7897                           
  7898                           ;lorawan.c: 2260: };lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  7899  009AF2  0101               	movlb	1	; () banked
  7900  009AF4  B927               	btfsc	_localDioStatus& (0+255),4,b
  7901                           
  7902                           ; BSR set to: 1
  7903                           ;lorawan.c: 2262: {;lorawan.c: 2263: RADIO_DIO4();
  7904  009AF6  EC71  F052         	call	_RADIO_DIO4	;wreg free
  7905                           
  7906                           ;lorawan.c: 2264: };lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  7907  009AFA  0101               	movlb	1	; () banked
  7908  009AFC  AB27               	btfss	_localDioStatus& (0+255),5,b
  7909  009AFE  0012               	return	
  7910                           
  7911                           ; BSR set to: 1
  7912                           ;lorawan.c: 2266: {;lorawan.c: 2267: RADIO_DIO5();
  7913  009B00  EC63  F052         	call	_RADIO_DIO5	;wreg free
  7914  009B04  0012               	return		;funcret
  7915  009B06                     __end_of_LORAWAN_Mainloop:
  7916                           	opt callstack 0
  7917                           
  7918 ;; *************** function _SwTimersExecute *****************
  7919 ;; Defined at:
  7920 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  7921 ;; Parameters:    Size  Location     Type
  7922 ;;		None
  7923 ;; Auto vars:     Size  Location     Type
  7924 ;;  i               1  127[BANK0 ] unsigned char 
  7925 ;; Return value:  Size  Location     Type
  7926 ;;                  1    wreg      void 
  7927 ;; Registers used:
  7928 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7929 ;; Tracked objects:
  7930 ;;		On entry : 0/0
  7931 ;;		On exit  : 0/0
  7932 ;;		Unchanged: 0/0
  7933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7936 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7937 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7938 ;;Total ram usage:        5 bytes
  7939 ;; Hardware stack levels used:    1
  7940 ;; Hardware stack levels required when called:   17
  7941 ;; This function calls:
  7942 ;;		Absolute function
  7943 ;;		_AckRetransmissionCallback
  7944 ;;		_AutomaticReplyCallback
  7945 ;;		_DutyCycleCallback
  7946 ;;		_LORAWAN_LinkCheckCallback
  7947 ;;		_LORAWAN_ReceiveWindow1Callback
  7948 ;;		_LORAWAN_ReceiveWindow2Callback
  7949 ;;		_RADIO_RxFSKTimeout
  7950 ;;		_RADIO_WatchdogTimeout
  7951 ;;		_UnconfirmedTransmissionCallback
  7952 ;;		_UpdateJoinSuccessState
  7953 ;; This function is called by:
  7954 ;;		_LORAWAN_Mainloop
  7955 ;; This function uses a non-reentrant model
  7956 ;;
  7957                           
  7958                           	psect	text24
  7959  0078B6                     __ptext24:
  7960                           	opt callstack 0
  7961  0078B6                     _SwTimersExecute:
  7962                           	opt callstack 10
  7963                           
  7964                           ;sw_timer.c: 262: uint8_t i;;sw_timer.c: 264: (INTCONbits.GIE = 0);
  7965                           
  7966                           ;incstack = 0
  7967  0078B6  9EF2               	bcf	4082,7,c	;volatile
  7968                           
  7969                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  7970  0078B8  0E00               	movlw	0
  7971  0078BA  0100               	movlb	0	; () banked
  7972  0078BC  6FDF               	movwf	SwTimersExecute@i& (0+255),b
  7973  0078BE  D054               	goto	l21250
  7974  0078C0                     l21236:
  7975                           
  7976                           ; BSR set to: 0
  7977                           ;sw_timer.c: 266: {;sw_timer.c: 269: if (swTimers[i].running == 1)
  7978  0078C0  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  7979  0078C2  0D08               	mullw	8
  7980  0078C4  0E04               	movlw	low (_swTimers+4)
  7981  0078C6  24F3               	addwf	prodl,w,c
  7982  0078C8  6ED9               	movwf	fsr2l,c
  7983  0078CA  0E03               	movlw	high (_swTimers+4)
  7984  0078CC  20F4               	addwfc	prodh,w,c
  7985  0078CE  6EDA               	movwf	fsr2h,c
  7986  0078D0  04DE               	decf	postinc2,w,c
  7987  0078D2  A4D8               	btfss	status,2,c
  7988  0078D4  D047               	goto	l21248
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;sw_timer.c: 270: {;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  7992  0078D6  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  7993  0078D8  0D08               	mullw	8
  7994  0078DA  0E00               	movlw	low _swTimers
  7995  0078DC  24F3               	addwf	prodl,w,c
  7996  0078DE  6ED9               	movwf	fsr2l,c
  7997  0078E0  0E03               	movlw	high _swTimers
  7998  0078E2  20F4               	addwfc	prodh,w,c
  7999  0078E4  6EDA               	movwf	fsr2h,c
  8000  0078E6  50DE               	movf	postinc2,w,c
  8001  0078E8  10DE               	iorwf	postinc2,w,c
  8002  0078EA  10DE               	iorwf	postinc2,w,c
  8003  0078EC  10DE               	iorwf	postinc2,w,c
  8004  0078EE  A4D8               	btfss	status,2,c
  8005  0078F0  D039               	goto	l21248
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;sw_timer.c: 272: {;sw_timer.c: 273: swTimers[i].running = 0;
  8009  0078F2  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8010  0078F4  0D08               	mullw	8
  8011  0078F6  0E04               	movlw	low (_swTimers+4)
  8012  0078F8  24F3               	addwf	prodl,w,c
  8013  0078FA  6ED9               	movwf	fsr2l,c
  8014  0078FC  0E03               	movlw	high (_swTimers+4)
  8015  0078FE  20F4               	addwfc	prodh,w,c
  8016  007900  6EDA               	movwf	fsr2h,c
  8017  007902  0E00               	movlw	0
  8018  007904  6EDF               	movwf	indf2,c
  8019                           
  8020                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  8021  007906  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8022  007908  0D08               	mullw	8
  8023  00790A  0E06               	movlw	low (_swTimers+6)
  8024  00790C  24F3               	addwf	prodl,w,c
  8025  00790E  6ED9               	movwf	fsr2l,c
  8026  007910  0E03               	movlw	high (_swTimers+6)
  8027  007912  20F4               	addwfc	prodh,w,c
  8028  007914  6EDA               	movwf	fsr2h,c
  8029  007916  50DE               	movf	postinc2,w,c
  8030  007918  10DE               	iorwf	postinc2,w,c
  8031  00791A  B4D8               	btfsc	status,2,c
  8032  00791C  D023               	goto	l21248
  8033                           
  8034                           ; BSR set to: 0
  8035                           ;sw_timer.c: 275: {;sw_timer.c: 276: (INTCONbits.GIE = 1);
  8036  00791E  8EF2               	bsf	4082,7,c	;volatile
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  8040  007920  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8041  007922  0D08               	mullw	8
  8042  007924  0E05               	movlw	low (_swTimers+5)
  8043  007926  24F3               	addwf	prodl,w,c
  8044  007928  6ED9               	movwf	fsr2l,c
  8045  00792A  0E03               	movlw	high (_swTimers+5)
  8046  00792C  20F4               	addwfc	prodh,w,c
  8047  00792E  6EDA               	movwf	fsr2h,c
  8048  007930  50DF               	movf	indf2,w,c
  8049  007932  6EE6               	movwf	postinc1,c
  8050  007934  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8051  007936  0D08               	mullw	8
  8052  007938  0E06               	movlw	low (_swTimers+6)
  8053  00793A  24F3               	addwf	prodl,w,c
  8054  00793C  6ED9               	movwf	fsr2l,c
  8055  00793E  0E03               	movlw	high (_swTimers+6)
  8056  007940  20F4               	addwfc	prodh,w,c
  8057  007942  6EDA               	movwf	fsr2h,c
  8058  007944  CFDE F0DB          	movff	postinc2,??_SwTimersExecute
  8059  007948  CFDD F0DC          	movff	postdec2,??_SwTimersExecute+1
  8060  00794C  D801               	call	u24138
  8061  00794E  D009               	goto	u24139
  8062  007950                     u24138:
  8063  007950  0005               	push	
  8064  007952  6EFA               	movwf	pclath,c
  8065  007954  51DB               	movf	??_SwTimersExecute& (0+255),w,b
  8066  007956  6EFD               	movwf	tosl,c
  8067  007958  51DC               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  8068  00795A  6EFE               	movwf	tosh,c
  8069  00795C  6AFF               	clrf	tosu,c
  8070  00795E  50FA               	movf	pclath,w,c
  8071  007960  0012               	return		;indir
  8072  007962                     u24139:
  8073                           
  8074                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  8075  007962  9EF2               	bcf	4082,7,c	;volatile
  8076  007964                     l21248:
  8077  007964  0100               	movlb	0	; () banked
  8078  007966  2BDF               	incf	SwTimersExecute@i& (0+255),f,b
  8079  007968                     l21250:
  8080                           
  8081                           ; BSR set to: 0
  8082  007968  0101               	movlb	1	; () banked
  8083  00796A  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
  8084  00796C  0100               	movlb	0	; () banked
  8085  00796E  5DDF               	subwf	SwTimersExecute@i& (0+255),w,b
  8086  007970  A0D8               	btfss	status,0,c
  8087  007972  D7A6               	goto	l21236
  8088                           
  8089                           ; BSR set to: 0
  8090                           ;sw_timer.c: 279: };sw_timer.c: 280: };sw_timer.c: 281: };sw_timer.c: 282: };sw_timer.c:
      +                           283: (INTCONbits.GIE = 1);
  8091  007974  8EF2               	bsf	4082,7,c	;volatile
  8092                           
  8093                           ; BSR set to: 0
  8094  007976  0012               	return		;funcret
  8095  007978                     __end_of_SwTimersExecute:
  8096                           	opt callstack 0
  8097                           
  8098 ;; *************** function _DutyCycleCallback *****************
  8099 ;; Defined at:
  8100 ;;		line 1222 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;  param           1  [STACK] unsigned char 
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;  minim           4  [STACK] unsigned long 
  8105 ;;  i               1  [STACK] unsigned char 
  8106 ;;  found           1  [STACK] unsigned char 
  8107 ;; Return value:  Size  Location     Type
  8108 ;;                  1  [STACK] void 
  8109 ;; Registers used:
  8110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  8111 ;; Tracked objects:
  8112 ;;		On entry : 3F/0
  8113 ;;		On exit  : 0/0
  8114 ;;		Unchanged: 0/0
  8115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8120 ;;Total ram usage:        0 bytes
  8121 ;; Hardware stack levels used:    1
  8122 ;; Hardware stack levels required when called:   11
  8123 ;; This function calls:
  8124 ;;		_SwTimerSetTimeout
  8125 ;;		_SwTimerStart
  8126 ;;		___lldiv
  8127 ;; This function is called by:
  8128 ;;		_SetCallbackSoftwareTimers
  8129 ;;		_SwTimersExecute
  8130 ;; This function uses a reentrant model
  8131 ;;
  8132                           
  8133                           	psect	text25
  8134  002B76                     __ptext25:
  8135                           	opt callstack 0
  8136  002B76                     _DutyCycleCallback:
  8137                           	opt callstack 0
  8138                           
  8139                           ; BSR set to: 0
  8140                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8141  002B76  0E0A               	movlw	10
  8142  002B78  26E1               	addwf	fsr1l,f,c
  8143  002B7A  0E00               	movlw	0
  8144  002B7C  22E2               	addwfc	fsr1h,f,c
  8145                           
  8146                           ;lorawan_eu.c: 1224: uint32_t minim = (4294967295UL);
  8147                           
  8148                           ;incstack = 0
  8149  002B7E  0EFF               	movlw	255
  8150  002B80  6E4E               	movwf	btemp+8,c
  8151  002B82  0EFF               	movlw	255
  8152  002B84  6E4F               	movwf	btemp+9,c
  8153  002B86  0EFF               	movlw	255
  8154  002B88  6E50               	movwf	btemp+10,c
  8155  002B8A  0EFF               	movlw	255
  8156  002B8C  6E51               	movwf	btemp+11,c
  8157                           
  8158                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8159  002B8E  0EFA               	movlw	-6
  8160  002B90  C04E  FFE3         	movff	btemp+8,plusw1
  8161  002B94  0EFB               	movlw	-5
  8162  002B96  C04F  FFE3         	movff	btemp+9,plusw1
  8163  002B9A  0EFC               	movlw	-4
  8164  002B9C  C050  FFE3         	movff	btemp+10,plusw1
  8165  002BA0  0EFD               	movlw	-3
  8166  002BA2  C051  FFE3         	movff	btemp+11,plusw1
  8167                           
  8168                           ;lorawan_eu.c: 1225: bool found = 0;
  8169                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  8170  002BA6  0EFF               	movlw	-1
  8171  002BA8  6AE3               	clrf	plusw1,c
  8172                           
  8173                           ;lorawan_eu.c: 1226: uint8_t i;;lorawan_eu.c: 1228: for (i=0; i < 16; i++)
  8174                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8175  002BAA  0EFE               	movlw	-2
  8176  002BAC  6AE3               	clrf	plusw1,c
  8177  002BAE                     l21066:
  8178                           
  8179                           ;lorawan_eu.c: 1229: {;lorawan_eu.c: 1231: if ((Channels[i].status == 1) && ( Channels[i
      +                          ].channelTimer != 0 ))
  8180                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8181  002BAE  0EFE               	movlw	-2
  8182  002BB0  50E3               	movf	plusw1,w,c
  8183  002BB2  0D0E               	mullw	14
  8184  002BB4  0E18               	movlw	low (_Channels+4)
  8185  002BB6  24F3               	addwf	prodl,w,c
  8186  002BB8  6ED9               	movwf	fsr2l,c
  8187  002BBA  0E04               	movlw	high (_Channels+4)
  8188  002BBC  20F4               	addwfc	prodh,w,c
  8189  002BBE  6EDA               	movwf	fsr2h,c
  8190  002BC0  04DE               	decf	postinc2,w,c
  8191  002BC2  A4D8               	btfss	status,2,c
  8192  002BC4  D0AD               	goto	l21084
  8193                           
  8194                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8195  002BC6  0EFE               	movlw	-2
  8196  002BC8  50E3               	movf	plusw1,w,c
  8197  002BCA  0D0E               	mullw	14
  8198  002BCC  0E1C               	movlw	low (_Channels+8)
  8199  002BCE  24F3               	addwf	prodl,w,c
  8200  002BD0  6ED9               	movwf	fsr2l,c
  8201  002BD2  0E04               	movlw	high (_Channels+8)
  8202  002BD4  20F4               	addwfc	prodh,w,c
  8203  002BD6  6EDA               	movwf	fsr2h,c
  8204  002BD8  50DE               	movf	postinc2,w,c
  8205  002BDA  10DE               	iorwf	postinc2,w,c
  8206  002BDC  10DE               	iorwf	postinc2,w,c
  8207  002BDE  10DE               	iorwf	postinc2,w,c
  8208  002BE0  B4D8               	btfsc	status,2,c
  8209  002BE2  D09E               	goto	l21084
  8210                           
  8211                           ;lorawan_eu.c: 1232: {;lorawan_eu.c: 1233: if ( Channels[i].channelTimer > loRa.lastTime
      +                          rValue )
  8212                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8213  002BE4  0EFE               	movlw	-2
  8214  002BE6  50E3               	movf	plusw1,w,c
  8215  002BE8  0D0E               	mullw	14
  8216  002BEA  0E1C               	movlw	low (_Channels+8)
  8217  002BEC  24F3               	addwf	prodl,w,c
  8218  002BEE  6ED9               	movwf	fsr2l,c
  8219  002BF0  0E04               	movlw	high (_Channels+8)
  8220  002BF2  20F4               	addwfc	prodh,w,c
  8221  002BF4  6EDA               	movwf	fsr2h,c
  8222  002BF6  50DE               	movf	postinc2,w,c
  8223  002BF8  0102               	movlb	2	; () banked
  8224  002BFA  5DCD               	subwf	(_loRa+200)& (0+255),w,b
  8225  002BFC  50DE               	movf	postinc2,w,c
  8226  002BFE  59CE               	subwfb	(_loRa+201)& (0+255),w,b
  8227  002C00  50DE               	movf	postinc2,w,c
  8228  002C02  59CF               	subwfb	(_loRa+202)& (0+255),w,b
  8229  002C04  50DE               	movf	postinc2,w,c
  8230  002C06  59D0               	subwfb	(_loRa+203)& (0+255),w,b
  8231  002C08  B0D8               	btfsc	status,0,c
  8232  002C0A  D02F               	goto	l21074
  8233                           
  8234                           ; BSR set to: 2
  8235                           ;lorawan_eu.c: 1234: {;lorawan_eu.c: 1235: Channels[i].channelTimer = Channels[i].channe
      +                          lTimer - loRa.lastTimerValue;
  8236                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8237  002C0C  0EFE               	movlw	-2
  8238  002C0E  50E3               	movf	plusw1,w,c
  8239  002C10  0D0E               	mullw	14
  8240  002C12  0E1C               	movlw	low (_Channels+8)
  8241  002C14  24F3               	addwf	prodl,w,c
  8242  002C16  6ED9               	movwf	fsr2l,c
  8243  002C18  0E04               	movlw	high (_Channels+8)
  8244  002C1A  20F4               	addwfc	prodh,w,c
  8245  002C1C  6EDA               	movwf	fsr2h,c
  8246  002C1E  CFDE F04E          	movff	postinc2,btemp+8
  8247  002C22  CFDE F04F          	movff	postinc2,btemp+9
  8248  002C26  CFDE F050          	movff	postinc2,btemp+10
  8249  002C2A  CFDE F051          	movff	postinc2,btemp+11
  8250  002C2E  51CD               	movf	(_loRa+200)& (0+255),w,b
  8251  002C30  5C4E               	subwf	btemp+8,w,c
  8252  002C32  6E4A               	movwf	btemp+4,c
  8253  002C34  51CE               	movf	(_loRa+201)& (0+255),w,b
  8254  002C36  584F               	subwfb	btemp+9,w,c
  8255  002C38  6E4B               	movwf	btemp+5,c
  8256  002C3A  51CF               	movf	(_loRa+202)& (0+255),w,b
  8257  002C3C  5850               	subwfb	btemp+10,w,c
  8258  002C3E  6E4C               	movwf	btemp+6,c
  8259  002C40  51D0               	movf	(_loRa+203)& (0+255),w,b
  8260  002C42  5851               	subwfb	btemp+11,w,c
  8261  002C44  6E4D               	movwf	btemp+7,c
  8262                           
  8263                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8264  002C46  0EFE               	movlw	-2
  8265  002C48  50E3               	movf	plusw1,w,c
  8266  002C4A  0D0E               	mullw	14
  8267  002C4C  0E1C               	movlw	low (_Channels+8)
  8268  002C4E  24F3               	addwf	prodl,w,c
  8269  002C50  6ED9               	movwf	fsr2l,c
  8270  002C52  0E04               	movlw	high (_Channels+8)
  8271  002C54  20F4               	addwfc	prodh,w,c
  8272  002C56  6EDA               	movwf	fsr2h,c
  8273  002C58  C04A  FFDE         	movff	btemp+4,postinc2
  8274  002C5C  C04B  FFDE         	movff	btemp+5,postinc2
  8275  002C60  C04C  FFDE         	movff	btemp+6,postinc2
  8276  002C64  C04D  FFDE         	movff	btemp+7,postinc2
  8277                           
  8278                           ;lorawan_eu.c: 1236: }
  8279  002C68  D00D               	goto	l21076
  8280  002C6A                     l21074:
  8281                           
  8282                           ; BSR set to: 2
  8283                           ;lorawan_eu.c: 1237: else;lorawan_eu.c: 1238: {;lorawan_eu.c: 1239: Channels[i].channelT
      +                          imer = 0;
  8284                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8285  002C6A  0EFE               	movlw	-2
  8286  002C6C  50E3               	movf	plusw1,w,c
  8287  002C6E  0D0E               	mullw	14
  8288  002C70  0E1C               	movlw	low (_Channels+8)
  8289  002C72  24F3               	addwf	prodl,w,c
  8290  002C74  6ED9               	movwf	fsr2l,c
  8291  002C76  0E04               	movlw	high (_Channels+8)
  8292  002C78  20F4               	addwfc	prodh,w,c
  8293  002C7A  6EDA               	movwf	fsr2h,c
  8294  002C7C  6ADE               	clrf	postinc2,c
  8295  002C7E  6ADE               	clrf	postinc2,c
  8296  002C80  6ADE               	clrf	postinc2,c
  8297  002C82  6ADD               	clrf	postdec2,c
  8298  002C84                     l21076:
  8299                           
  8300                           ; BSR set to: 2
  8301                           ;lorawan_eu.c: 1240: };lorawan_eu.c: 1241: if ( (Channels[i].channelTimer <= minim) && (
      +                          Channels[i].channelTimer != 0) )
  8302                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8303  002C84  0EFE               	movlw	-2
  8304  002C86  50E3               	movf	plusw1,w,c
  8305  002C88  0D0E               	mullw	14
  8306  002C8A  0E1C               	movlw	low (_Channels+8)
  8307  002C8C  24F3               	addwf	prodl,w,c
  8308  002C8E  6ED9               	movwf	fsr2l,c
  8309  002C90  0E04               	movlw	high (_Channels+8)
  8310  002C92  20F4               	addwfc	prodh,w,c
  8311  002C94  6EDA               	movwf	fsr2h,c
  8312                           
  8313                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8314  002C96  0EFA               	movlw	-6
  8315  002C98  CFE3 F046          	movff	plusw1,btemp
  8316  002C9C  50DE               	movf	postinc2,w,c
  8317  002C9E  5C46               	subwf	btemp,w,c
  8318  002CA0  0EFB               	movlw	-5
  8319  002CA2  CFE3 F046          	movff	plusw1,btemp
  8320  002CA6  50DE               	movf	postinc2,w,c
  8321  002CA8  5846               	subwfb	btemp,w,c
  8322  002CAA  0EFC               	movlw	-4
  8323  002CAC  CFE3 F046          	movff	plusw1,btemp
  8324  002CB0  50DE               	movf	postinc2,w,c
  8325  002CB2  5846               	subwfb	btemp,w,c
  8326  002CB4  0EFD               	movlw	-3
  8327  002CB6  CFE3 F046          	movff	plusw1,btemp
  8328  002CBA  50DE               	movf	postinc2,w,c
  8329  002CBC  5846               	subwfb	btemp,w,c
  8330  002CBE  A0D8               	btfss	status,0,c
  8331  002CC0  D02F               	goto	l21084
  8332                           
  8333                           ; BSR set to: 2
  8334                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8335  002CC2  0EFE               	movlw	-2
  8336  002CC4  50E3               	movf	plusw1,w,c
  8337  002CC6  0D0E               	mullw	14
  8338  002CC8  0E1C               	movlw	low (_Channels+8)
  8339  002CCA  24F3               	addwf	prodl,w,c
  8340  002CCC  6ED9               	movwf	fsr2l,c
  8341  002CCE  0E04               	movlw	high (_Channels+8)
  8342  002CD0  20F4               	addwfc	prodh,w,c
  8343  002CD2  6EDA               	movwf	fsr2h,c
  8344  002CD4  50DE               	movf	postinc2,w,c
  8345  002CD6  10DE               	iorwf	postinc2,w,c
  8346  002CD8  10DE               	iorwf	postinc2,w,c
  8347  002CDA  10DE               	iorwf	postinc2,w,c
  8348  002CDC  B4D8               	btfsc	status,2,c
  8349  002CDE  D020               	goto	l21084
  8350                           
  8351                           ; BSR set to: 2
  8352                           ;lorawan_eu.c: 1242: {;lorawan_eu.c: 1243: minim = Channels[i].channelTimer;
  8353                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8354  002CE0  0EFE               	movlw	-2
  8355  002CE2  50E3               	movf	plusw1,w,c
  8356  002CE4  0D0E               	mullw	14
  8357  002CE6  0E1C               	movlw	low (_Channels+8)
  8358  002CE8  24F3               	addwf	prodl,w,c
  8359  002CEA  6ED9               	movwf	fsr2l,c
  8360  002CEC  0E04               	movlw	high (_Channels+8)
  8361  002CEE  20F4               	addwfc	prodh,w,c
  8362  002CF0  6EDA               	movwf	fsr2h,c
  8363  002CF2  CFDE F04E          	movff	postinc2,btemp+8
  8364  002CF6  CFDE F04F          	movff	postinc2,btemp+9
  8365  002CFA  CFDE F050          	movff	postinc2,btemp+10
  8366  002CFE  CFDE F051          	movff	postinc2,btemp+11
  8367                           
  8368                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8369  002D02  0EFA               	movlw	-6
  8370  002D04  C04E  FFE3         	movff	btemp+8,plusw1
  8371  002D08  0EFB               	movlw	-5
  8372  002D0A  C04F  FFE3         	movff	btemp+9,plusw1
  8373  002D0E  0EFC               	movlw	-4
  8374  002D10  C050  FFE3         	movff	btemp+10,plusw1
  8375  002D14  0EFD               	movlw	-3
  8376  002D16  C051  FFE3         	movff	btemp+11,plusw1
  8377                           
  8378                           ; BSR set to: 2
  8379                           ;lorawan_eu.c: 1244: found = 1;
  8380                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  8381  002D1A  0EFF               	movlw	-1
  8382  002D1C  6AE3               	clrf	plusw1,c
  8383  002D1E  2AE3               	incf	plusw1,f,c
  8384  002D20                     l21084:
  8385                           
  8386                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8387  002D20  0EFE               	movlw	-2
  8388  002D22  2AE3               	incf	plusw1,f,c
  8389                           
  8390                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8391  002D24  0EFE               	movlw	-2
  8392  002D26  CFE3 F046          	movff	plusw1,btemp
  8393  002D2A  0E0F               	movlw	15
  8394  002D2C  6446               	cpfsgt	btemp,c
  8395  002D2E  D73F               	goto	l21066
  8396                           
  8397                           ;lorawan_eu.c: 1245: };lorawan_eu.c: 1246: };lorawan_eu.c: 1247: };lorawan_eu.c: 1248: i
      +                          f ( found == 1 )
  8398                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  8399  002D30  0EFF               	movlw	-1
  8400  002D32  04E3               	decf	plusw1,w,c
  8401  002D34  A4D8               	btfss	status,2,c
  8402  002D36  D09D               	goto	l1315
  8403                           
  8404                           ;lorawan_eu.c: 1249: {;lorawan_eu.c: 1250: loRa.lastTimerValue = minim;
  8405                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8406  002D38  50E1               	movf	fsr1l,w,c
  8407  002D3A  0FFA               	addlw	-6
  8408  002D3C  6ED9               	movwf	fsr2l,c
  8409  002D3E  50E2               	movf	fsr1h,w,c
  8410  002D40  6EDA               	movwf	fsr2h,c
  8411  002D42  0EFF               	movlw	255
  8412  002D44  22DA               	addwfc	fsr2h,f,c
  8413  002D46  CFDE F2CD          	movff	postinc2,_loRa+200
  8414  002D4A  CFDE F2CE          	movff	postinc2,_loRa+201
  8415  002D4E  CFDE F2CF          	movff	postinc2,_loRa+202
  8416  002D52  CFDE F2D0          	movff	postinc2,_loRa+203
  8417                           
  8418                           ;lorawan_eu.c: 1251: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  8419                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8420  002D56  0EFD               	movlw	-3
  8421  002D58  50E3               	movf	plusw1,w,c
  8422  002D5A  E10E               	bnz	u23760
  8423  002D5C  0EFA               	movlw	-6
  8424  002D5E  28E3               	incf	plusw1,w,c
  8425  002D60  0EFB               	movlw	-5
  8426  002D62  CFE3 F046          	movff	plusw1,btemp
  8427  002D66  0EFF               	movlw	255
  8428  002D68  5A46               	subwfb	btemp,f,c
  8429  002D6A  0EFC               	movlw	-4
  8430  002D6C  CFE3 F046          	movff	plusw1,btemp
  8431  002D70  0E0F               	movlw	15
  8432  002D72  5A46               	subwfb	btemp,f,c
  8433  002D74  A0D8               	btfss	status,0,c
  8434  002D76  D02B               	goto	l21096
  8435  002D78                     u23760:
  8436                           
  8437                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8438  002D78  50E1               	movf	fsr1l,w,c
  8439  002D7A  0FFA               	addlw	-6
  8440  002D7C  6ED9               	movwf	fsr2l,c
  8441  002D7E  50E2               	movf	fsr1h,w,c
  8442  002D80  6EDA               	movwf	fsr2h,c
  8443  002D82  0EFF               	movlw	255
  8444  002D84  22DA               	addwfc	fsr2h,f,c
  8445  002D86  CFDE F060          	movff	postinc2,___lldiv@dividend
  8446  002D8A  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8447  002D8E  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8448  002D92  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8449  002D96  0E7D               	movlw	125
  8450  002D98  0100               	movlb	0	; () banked
  8451  002D9A  6F64               	movwf	___lldiv@divisor& (0+255),b
  8452  002D9C  0E00               	movlw	0
  8453  002D9E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8454  002DA0  0E00               	movlw	0
  8455  002DA2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8456  002DA4  0E00               	movlw	0
  8457  002DA6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8458  002DA8  EC96  F042         	call	___lldiv	;wreg free
  8459  002DAC  C060  F04E         	movff	?___lldiv,btemp+8
  8460  002DB0  C061  F04F         	movff	?___lldiv+1,btemp+9
  8461  002DB4  C062  F050         	movff	?___lldiv+2,btemp+10
  8462  002DB8  C063  F051         	movff	?___lldiv+3,btemp+11
  8463  002DBC  0E0C               	movlw	12
  8464  002DBE                     u23775:
  8465  002DBE  90D8               	bcf	status,0,c
  8466  002DC0  364E               	rlcf	btemp+8,f,c
  8467  002DC2  364F               	rlcf	btemp+9,f,c
  8468  002DC4  3650               	rlcf	btemp+10,f,c
  8469  002DC6  3651               	rlcf	btemp+11,f,c
  8470  002DC8  2EE8               	decfsz	wreg,f,c
  8471  002DCA  D7F9               	goto	u23775
  8472  002DCC  D02F               	goto	L8
  8473  002DCE                     l21096:
  8474                           
  8475                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8476  002DCE  0EFA               	movlw	-6
  8477  002DD0  CFE3 F04E          	movff	plusw1,btemp+8
  8478  002DD4  0EFB               	movlw	-5
  8479  002DD6  CFE3 F04F          	movff	plusw1,btemp+9
  8480  002DDA  0EFC               	movlw	-4
  8481  002DDC  CFE3 F050          	movff	plusw1,btemp+10
  8482  002DE0  0EFD               	movlw	-3
  8483  002DE2  CFE3 F051          	movff	plusw1,btemp+11
  8484  002DE6  0E0C               	movlw	12
  8485  002DE8                     u23785:
  8486  002DE8  90D8               	bcf	status,0,c
  8487  002DEA  364E               	rlcf	btemp+8,f,c
  8488  002DEC  364F               	rlcf	btemp+9,f,c
  8489  002DEE  3650               	rlcf	btemp+10,f,c
  8490  002DF0  3651               	rlcf	btemp+11,f,c
  8491  002DF2  2EE8               	decfsz	wreg,f,c
  8492  002DF4  D7F9               	goto	u23785
  8493  002DF6  C04E  F060         	movff	btemp+8,___lldiv@dividend
  8494  002DFA  C04F  F061         	movff	btemp+9,___lldiv@dividend+1
  8495  002DFE  C050  F062         	movff	btemp+10,___lldiv@dividend+2
  8496  002E02  C051  F063         	movff	btemp+11,___lldiv@dividend+3
  8497  002E06  0E7D               	movlw	125
  8498  002E08  0100               	movlb	0	; () banked
  8499  002E0A  6F64               	movwf	___lldiv@divisor& (0+255),b
  8500  002E0C  0E00               	movlw	0
  8501  002E0E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8502  002E10  0E00               	movlw	0
  8503  002E12  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8504  002E14  0E00               	movlw	0
  8505  002E16  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8506  002E18  EC96  F042         	call	___lldiv	;wreg free
  8507  002E1C  C060  F04E         	movff	?___lldiv,btemp+8
  8508  002E20  C061  F04F         	movff	?___lldiv+1,btemp+9
  8509  002E24  C062  F050         	movff	?___lldiv+2,btemp+10
  8510  002E28  C063  F051         	movff	?___lldiv+3,btemp+11
  8511  002E2C                     L8:
  8512                           
  8513                           ;stkvar	_DutyCycleCallback$1859 @ sp[(-10)+0]
  8514  002E2C  0EF6               	movlw	-10
  8515  002E2E  C04E  FFE3         	movff	btemp+8,plusw1
  8516  002E32  0EF7               	movlw	-9
  8517  002E34  C04F  FFE3         	movff	btemp+9,plusw1
  8518  002E38  0EF8               	movlw	-8
  8519  002E3A  C050  FFE3         	movff	btemp+10,plusw1
  8520  002E3E  0EF9               	movlw	-7
  8521  002E40  C051  FFE3         	movff	btemp+11,plusw1
  8522                           
  8523                           ;stkvar	_DutyCycleCallback$1859 @ sp[(-10)+0]
  8524  002E44  50E1               	movf	fsr1l,w,c
  8525  002E46  0FF6               	addlw	-10
  8526  002E48  6ED9               	movwf	fsr2l,c
  8527  002E4A  50E2               	movf	fsr1h,w,c
  8528  002E4C  6EDA               	movwf	fsr2h,c
  8529  002E4E  0EFF               	movlw	255
  8530  002E50  22DA               	addwfc	fsr2h,f,c
  8531  002E52  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  8532  002E56  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  8533  002E5A  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  8534  002E5E  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  8535  002E62  0102               	movlb	2	; () banked
  8536  002E64  51EE               	movf	(_loRa+233)& (0+255),w,b
  8537  002E66  EC7F  F04C         	call	_SwTimerSetTimeout
  8538                           
  8539                           ;lorawan_eu.c: 1252: SwTimerStart (loRa.dutyCycleTimerId);
  8540  002E6A  0102               	movlb	2	; () banked
  8541  002E6C  51EE               	movf	(_loRa+233)& (0+255),w,b
  8542  002E6E  EC73  F040         	call	_SwTimerStart
  8543  002E72                     l1315:
  8544                           
  8545                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8546  002E72  0EF5               	movlw	245
  8547  002E74  26E1               	addwf	fsr1l,f,c
  8548  002E76  0EFF               	movlw	255
  8549  002E78  22E2               	addwfc	fsr1h,f,c
  8550  002E7A  0012               	return		;funcret
  8551  002E7C                     __end_of_DutyCycleCallback:
  8552                           	opt callstack 0
  8553                           
  8554 ;; *************** function _UpdateJoinSuccessState *****************
  8555 ;; Defined at:
  8556 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;  param           1  [STACK] unsigned char 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;		None
  8561 ;; Return value:  Size  Location     Type
  8562 ;;                  1  [STACK] void 
  8563 ;; Registers used:
  8564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
  8565 ;; Tracked objects:
  8566 ;;		On entry : 0/0
  8567 ;;		On exit  : 0/0
  8568 ;;		Unchanged: 0/0
  8569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8574 ;;Total ram usage:        0 bytes
  8575 ;; Hardware stack levels used:    1
  8576 ;; Hardware stack levels required when called:   11
  8577 ;; This function calls:
  8578 ;;		_RxJoinResponse
  8579 ;;		_SwTimerSetTimeout
  8580 ;;		_SwTimerStart
  8581 ;;		___lldiv
  8582 ;; This function is called by:
  8583 ;;		_SetCallbackSoftwareTimers
  8584 ;;		_LORAWAN_RxDone
  8585 ;;		_SwTimersExecute
  8586 ;; This function uses a reentrant model
  8587 ;;
  8588                           
  8589                           	psect	text26
  8590  005AB0                     __ptext26:
  8591                           	opt callstack 0
  8592  005AB0                     _UpdateJoinSuccessState:
  8593                           	opt callstack 0
  8594                           
  8595                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8596  005AB0  52E6               	movf	postinc1,f,c
  8597  005AB2  52E6               	movf	postinc1,f,c
  8598  005AB4  52E6               	movf	postinc1,f,c
  8599  005AB6  52E6               	movf	postinc1,f,c
  8600                           
  8601                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  8602                           
  8603                           ;incstack = 0
  8604  005AB8  0102               	movlb	2	; () banked
  8605  005ABA  9505               	bcf	_loRa& (0+255),2,b
  8606                           
  8607                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  8608  005ABC  8907               	bsf	(_loRa+2)& (0+255),4,b
  8609                           
  8610                           ; BSR set to: 2
  8611                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  8612  005ABE  0EF0               	movlw	-16
  8613  005AC0  1707               	andwf	(_loRa+2)& (0+255),f,b
  8614                           
  8615                           ; BSR set to: 2
  8616                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  8617  005AC2  6BD5               	clrf	(_loRa+208)& (0+255),b
  8618  005AC4  6BD6               	clrf	(_loRa+209)& (0+255),b
  8619                           
  8620                           ; BSR set to: 2
  8621                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  8622  005AC6  6BF3               	clrf	(_loRa+238)& (0+255),b
  8623                           
  8624                           ; BSR set to: 2
  8625                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  8626  005AC8  A508               	btfss	(_loRa+3)& (0+255),2,b
  8627  005ACA  D07B               	goto	l20094
  8628                           
  8629                           ; BSR set to: 2
  8630                           ;lorawan.c: 1052: {;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.per
      +                          iodForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 12
      +                          5UL ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  8631  005ACC  51D4               	movf	(_loRa+207)& (0+255),w,b
  8632  005ACE  E107               	bnz	u21880
  8633  005AD0  29D1               	incf	(_loRa+204)& (0+255),w,b
  8634  005AD2  0EFF               	movlw	255
  8635  005AD4  59D2               	subwfb	(_loRa+205)& (0+255),w,b
  8636  005AD6  0E0F               	movlw	15
  8637  005AD8  59D3               	subwfb	(_loRa+206)& (0+255),w,b
  8638  005ADA  A0D8               	btfss	status,0,c
  8639  005ADC  D024               	goto	l20088
  8640  005ADE                     u21880:
  8641                           
  8642                           ; BSR set to: 2
  8643  005ADE  C2D1  F060         	movff	_loRa+204,___lldiv@dividend
  8644  005AE2  C2D2  F061         	movff	_loRa+205,___lldiv@dividend+1
  8645  005AE6  C2D3  F062         	movff	_loRa+206,___lldiv@dividend+2
  8646  005AEA  C2D4  F063         	movff	_loRa+207,___lldiv@dividend+3
  8647  005AEE  0E7D               	movlw	125
  8648  005AF0  0100               	movlb	0	; () banked
  8649  005AF2  6F64               	movwf	___lldiv@divisor& (0+255),b
  8650  005AF4  0E00               	movlw	0
  8651  005AF6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8652  005AF8  0E00               	movlw	0
  8653  005AFA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8654  005AFC  0E00               	movlw	0
  8655  005AFE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8656  005B00  EC96  F042         	call	___lldiv	;wreg free
  8657  005B04  C060  F04E         	movff	?___lldiv,btemp+8
  8658  005B08  C061  F04F         	movff	?___lldiv+1,btemp+9
  8659  005B0C  C062  F050         	movff	?___lldiv+2,btemp+10
  8660  005B10  C063  F051         	movff	?___lldiv+3,btemp+11
  8661  005B14  0E0C               	movlw	12
  8662  005B16                     u21895:
  8663  005B16  90D8               	bcf	status,0,c
  8664  005B18  364E               	rlcf	btemp+8,f,c
  8665  005B1A  364F               	rlcf	btemp+9,f,c
  8666  005B1C  3650               	rlcf	btemp+10,f,c
  8667  005B1E  3651               	rlcf	btemp+11,f,c
  8668  005B20  2EE8               	decfsz	wreg,f,c
  8669  005B22  D7F9               	goto	u21895
  8670  005B24  D02B               	goto	L9
  8671  005B26                     l20088:
  8672                           
  8673                           ; BSR set to: 2
  8674  005B26  C2D1  F04E         	movff	_loRa+204,btemp+8
  8675  005B2A  C2D2  F04F         	movff	_loRa+205,btemp+9
  8676  005B2E  C2D3  F050         	movff	_loRa+206,btemp+10
  8677  005B32  C2D4  F051         	movff	_loRa+207,btemp+11
  8678  005B36  0E0C               	movlw	12
  8679  005B38                     u21905:
  8680  005B38  90D8               	bcf	status,0,c
  8681  005B3A  364E               	rlcf	btemp+8,f,c
  8682  005B3C  364F               	rlcf	btemp+9,f,c
  8683  005B3E  3650               	rlcf	btemp+10,f,c
  8684  005B40  3651               	rlcf	btemp+11,f,c
  8685  005B42  2EE8               	decfsz	wreg,f,c
  8686  005B44  D7F9               	goto	u21905
  8687  005B46  C04E  F060         	movff	btemp+8,___lldiv@dividend
  8688  005B4A  C04F  F061         	movff	btemp+9,___lldiv@dividend+1
  8689  005B4E  C050  F062         	movff	btemp+10,___lldiv@dividend+2
  8690  005B52  C051  F063         	movff	btemp+11,___lldiv@dividend+3
  8691  005B56  0E7D               	movlw	125
  8692  005B58  0100               	movlb	0	; () banked
  8693  005B5A  6F64               	movwf	___lldiv@divisor& (0+255),b
  8694  005B5C  0E00               	movlw	0
  8695  005B5E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8696  005B60  0E00               	movlw	0
  8697  005B62  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8698  005B64  0E00               	movlw	0
  8699  005B66  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8700  005B68  EC96  F042         	call	___lldiv	;wreg free
  8701  005B6C  C060  F04E         	movff	?___lldiv,btemp+8
  8702  005B70  C061  F04F         	movff	?___lldiv+1,btemp+9
  8703  005B74  C062  F050         	movff	?___lldiv+2,btemp+10
  8704  005B78  C063  F051         	movff	?___lldiv+3,btemp+11
  8705  005B7C                     L9:
  8706                           
  8707                           ;stkvar	_UpdateJoinSuccessState$2530 @ sp[(-4)+0]
  8708  005B7C  0EFC               	movlw	-4
  8709  005B7E  C04E  FFE3         	movff	btemp+8,plusw1
  8710  005B82  0EFD               	movlw	-3
  8711  005B84  C04F  FFE3         	movff	btemp+9,plusw1
  8712  005B88  0EFE               	movlw	-2
  8713  005B8A  C050  FFE3         	movff	btemp+10,plusw1
  8714  005B8E  0EFF               	movlw	-1
  8715  005B90  C051  FFE3         	movff	btemp+11,plusw1
  8716                           
  8717                           ;stkvar	_UpdateJoinSuccessState$2530 @ sp[(-4)+0]
  8718  005B94  50E1               	movf	fsr1l,w,c
  8719  005B96  0FFC               	addlw	-4
  8720  005B98  6ED9               	movwf	fsr2l,c
  8721  005B9A  50E2               	movf	fsr1h,w,c
  8722  005B9C  6EDA               	movwf	fsr2h,c
  8723  005B9E  0EFF               	movlw	255
  8724  005BA0  22DA               	addwfc	fsr2h,f,c
  8725  005BA2  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  8726  005BA6  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  8727  005BAA  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  8728  005BAE  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  8729  005BB2  0102               	movlb	2	; () banked
  8730  005BB4  51EC               	movf	(_loRa+231)& (0+255),w,b
  8731  005BB6  EC7F  F04C         	call	_SwTimerSetTimeout
  8732                           
  8733                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  8734  005BBA  0102               	movlb	2	; () banked
  8735  005BBC  51EC               	movf	(_loRa+231)& (0+255),w,b
  8736  005BBE  EC73  F040         	call	_SwTimerStart
  8737  005BC2                     l20094:
  8738                           
  8739                           ;lorawan.c: 1055: };lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  8740  005BC2  0101               	movlb	1	; () banked
  8741  005BC4  5110               	movf	(_rxPayload+2)& (0+255),w,b
  8742  005BC6  1111               	iorwf	(_rxPayload+3)& (0+255),w,b
  8743  005BC8  B4D8               	btfsc	status,2,c
  8744  005BCA  D00C               	goto	u21929
  8745                           
  8746                           ; BSR set to: 1
  8747                           ;lorawan.c: 1058: {;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  8748  005BCC  D801               	call	u21928
  8749  005BCE  D00A               	goto	u21929
  8750  005BD0                     u21928:
  8751  005BD0  0005               	push	
  8752  005BD2  6EFA               	movwf	pclath,c
  8753  005BD4  5110               	movf	(_rxPayload+2)& (0+255),w,b
  8754  005BD6  6EFD               	movwf	tosl,c
  8755  005BD8  5111               	movf	(_rxPayload+3)& (0+255),w,b
  8756  005BDA  6EFE               	movwf	tosh,c
  8757  005BDC  6AFF               	clrf	tosu,c
  8758  005BDE  50FA               	movf	pclath,w,c
  8759  005BE0  0E01               	movlw	1
  8760  005BE2  0012               	return		;indir
  8761  005BE4                     u21929:
  8762                           
  8763                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  8764  005BE4  0EFB               	movlw	251
  8765  005BE6  26E1               	addwf	fsr1l,f,c
  8766  005BE8  0EFF               	movlw	255
  8767  005BEA  22E2               	addwfc	fsr1h,f,c
  8768  005BEC  0012               	return		;funcret
  8769  005BEE                     __end_of_UpdateJoinSuccessState:
  8770                           	opt callstack 0
  8771                           
  8772 ;; *************** function _AutomaticReplyCallback *****************
  8773 ;; Defined at:
  8774 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  param           1  [STACK] unsigned char 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;		None
  8779 ;; Return value:  Size  Location     Type
  8780 ;;                  1  [STACK] void 
  8781 ;; Registers used:
  8782 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8783 ;; Tracked objects:
  8784 ;;		On entry : 3F/0
  8785 ;;		On exit  : 3F/2
  8786 ;;		Unchanged: 0/0
  8787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;Total ram usage:        0 bytes
  8793 ;; Hardware stack levels used:    1
  8794 ;; Hardware stack levels required when called:   14
  8795 ;; This function calls:
  8796 ;;		_LORAWAN_Send
  8797 ;; This function is called by:
  8798 ;;		_SetCallbackSoftwareTimers
  8799 ;;		_SwTimersExecute
  8800 ;; This function uses a reentrant model
  8801 ;;
  8802                           
  8803                           	psect	text27
  8804  00A212                     __ptext27:
  8805                           	opt callstack 0
  8806  00A212                     _AutomaticReplyCallback:
  8807                           	opt callstack 12
  8808                           
  8809                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  8810                           
  8811                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8812                           ;incstack = 0
  8813  00A212  0EF0               	movlw	-16
  8814  00A214  0102               	movlb	2	; () banked
  8815  00A216  1707               	andwf	(_loRa+2)& (0+255),f,b
  8816                           
  8817                           ; BSR set to: 2
  8818                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  8819  00A218  0E00               	movlw	0
  8820  00A21A  0100               	movlb	0	; () banked
  8821  00A21C  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
  8822  00A21E  0E00               	movlw	0
  8823  00A220  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
  8824  00A222  0E00               	movlw	0
  8825  00A224  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  8826  00A226  0E00               	movlw	0
  8827  00A228  6FD7               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  8828  00A22A  0E00               	movlw	0
  8829  00A22C  EC12  F038         	call	_LORAWAN_Send
  8830                           
  8831                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  8832  00A230  0102               	movlb	2	; () banked
  8833  00A232  9705               	bcf	_loRa& (0+255),3,b
  8834                           
  8835                           ; BSR set to: 2
  8836                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  8837  00A234  52E5               	movf	postdec1,f,c
  8838  00A236  0012               	return		;funcret
  8839  00A238                     __end_of_AutomaticReplyCallback:
  8840                           	opt callstack 0
  8841                           
  8842 ;; *************** function _AckRetransmissionCallback *****************
  8843 ;; Defined at:
  8844 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8845 ;; Parameters:    Size  Location     Type
  8846 ;;  param           1  [STACK] unsigned char 
  8847 ;; Auto vars:     Size  Location     Type
  8848 ;;  maximumPacke    1  [STACK] unsigned char 
  8849 ;; Return value:  Size  Location     Type
  8850 ;;                  1  [STACK] void 
  8851 ;; Registers used:
  8852 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8853 ;; Tracked objects:
  8854 ;;		On entry : 3F/0
  8855 ;;		On exit  : 0/0
  8856 ;;		Unchanged: 0/0
  8857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8862 ;;Total ram usage:        0 bytes
  8863 ;; Hardware stack levels used:    1
  8864 ;; Hardware stack levels required when called:   13
  8865 ;; This function calls:
  8866 ;;		_FindSmallestDataRate
  8867 ;;		_LORAWAN_GetMaxPayloadSize
  8868 ;;		_RADIO_Transmit
  8869 ;;		_ResetParametersForConfirmedTransmission
  8870 ;;		_RxData
  8871 ;;		_SelectChannelForTransmission
  8872 ;;		_UpdateRetransmissionAckTimeoutState
  8873 ;; This function is called by:
  8874 ;;		_SetCallbackSoftwareTimers
  8875 ;;		_SwTimersExecute
  8876 ;; This function uses a reentrant model
  8877 ;;
  8878                           
  8879                           	psect	text28
  8880  0060B2                     __ptext28:
  8881                           	opt callstack 0
  8882  0060B2                     _AckRetransmissionCallback:
  8883                           	opt callstack 0
  8884                           
  8885                           ; BSR set to: 2
  8886                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8887  0060B2  52E6               	movf	postinc1,f,c
  8888                           
  8889                           ;lorawan.c: 936: uint8_t maximumPacketSize;;lorawan.c: 938: if (loRa.macStatus.macPause 
      +                          == 0)
  8890                           
  8891                           ;incstack = 0
  8892  0060B4  0102               	movlb	2	; () banked
  8893  0060B6  B108               	btfsc	(_loRa+3)& (0+255),0,b
  8894  0060B8  D086               	goto	l21202
  8895                           
  8896                           ; BSR set to: 2
  8897                           ;lorawan.c: 939: {;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.ma
      +                          xRepetitionsConfirmedUplink)
  8898  0060BA  51DE               	movf	(_loRa+217)& (0+255),w,b
  8899  0060BC  5DDC               	subwf	(_loRa+215)& (0+255),w,b
  8900  0060BE  A0D8               	btfss	status,0,c
  8901  0060C0  D061               	goto	l21192
  8902                           
  8903                           ; BSR set to: 2
  8904                           ;lorawan.c: 941: {;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13
      +                          ;
  8905  0060C2  ECA1  F04A         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  8906  0060C6  6E51               	movwf	btemp+11,c
  8907  0060C8  0E0D               	movlw	13
  8908  0060CA  2651               	addwf	btemp+11,f,c
  8909                           
  8910                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  8911  0060CC  0EFF               	movlw	-1
  8912  0060CE  C051  FFE3         	movff	btemp+11,plusw1
  8913                           
  8914                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  8915                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  8916  0060D2  0EFF               	movlw	-1
  8917  0060D4  50E3               	movf	plusw1,w,c
  8918  0060D6  6E50               	movwf	btemp+10,c
  8919  0060D8  6A51               	clrf	btemp+11,c
  8920  0060DA  0102               	movlb	2	; () banked
  8921  0060DC  51D9               	movf	(_loRa+212)& (0+255),w,b
  8922  0060DE  5C50               	subwf	btemp+10,w,c
  8923  0060E0  51DA               	movf	(_loRa+213)& (0+255),w,b
  8924  0060E2  5851               	subwfb	btemp+11,w,c
  8925  0060E4  A0D8               	btfss	status,0,c
  8926  0060E6  D039               	goto	l21186
  8927                           
  8928                           ; BSR set to: 2
  8929                           ;lorawan.c: 946: {;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  8930  0060E8  0E01               	movlw	1
  8931  0060EA  EC8A  F046         	call	_SelectChannelForTransmission
  8932  0060EE  0900               	iorlw	0
  8933  0060F0  A4D8               	btfss	status,2,c
  8934  0060F2  D030               	goto	l21182
  8935                           
  8936                           ;lorawan.c: 948: {;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLe
      +                          ngth) == OK)
  8937  0060F4  0EC8               	movlw	low (_macBuffer+16)
  8938  0060F6  0100               	movlb	0	; () banked
  8939  0060F8  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
  8940  0060FA  0E06               	movlw	high (_macBuffer+16)
  8941  0060FC  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  8942  0060FE  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
  8943  006102  EC06  F01F         	call	_RADIO_Transmit	;wreg free
  8944  006106  C0A9  F050         	movff	?_RADIO_Transmit,btemp+10
  8945  00610A  C0AA  F051         	movff	?_RADIO_Transmit+1,btemp+11
  8946  00610E  5050               	movf	btemp+10,w,c
  8947  006110  1051               	iorwf	btemp+11,w,c
  8948  006112  A4D8               	btfss	status,2,c
  8949  006114  D01F               	goto	l21182
  8950                           
  8951                           ;lorawan.c: 951: {;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  8952  006116  0102               	movlb	2	; () banked
  8953  006118  5107               	movf	(_loRa+2)& (0+255),w,b
  8954  00611A  0BF0               	andlw	-16
  8955  00611C  0901               	iorlw	1
  8956  00611E  6F07               	movwf	(_loRa+2)& (0+255),b
  8957                           
  8958                           ; BSR set to: 2
  8959                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  8960  006120  2BDE               	incf	(_loRa+217)& (0+255),f,b
  8961                           
  8962                           ; BSR set to: 2
  8963                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  8964  006122  B1DE               	btfsc	(_loRa+217)& (0+255),0,b
  8965  006124  D052               	goto	l1856
  8966                           
  8967                           ; BSR set to: 2
  8968  006126  51E4               	movf	(_loRa+223)& (0+255),w,b
  8969  006128  B4D8               	btfsc	status,2,c
  8970  00612A  D04F               	goto	l1856
  8971                           
  8972                           ; BSR set to: 2
  8973  00612C  51DE               	movf	(_loRa+217)& (0+255),w,b
  8974  00612E  6E50               	movwf	btemp+10,c
  8975  006130  6A51               	clrf	btemp+11,c
  8976  006132  51DC               	movf	(_loRa+215)& (0+255),w,b
  8977  006134  6E4E               	movwf	btemp+8,c
  8978  006136  6A4F               	clrf	btemp+9,c
  8979  006138  0E01               	movlw	1
  8980  00613A  264E               	addwf	btemp+8,f,c
  8981  00613C  0E00               	movlw	0
  8982  00613E  224F               	addwfc	btemp+9,f,c
  8983  006140  5050               	movf	btemp+10,w,c
  8984  006142  184E               	xorwf	btemp+8,w,c
  8985  006144  E104               	bnz	u23990
  8986  006146  5051               	movf	btemp+11,w,c
  8987  006148  184F               	xorwf	btemp+9,w,c
  8988  00614A  B4D8               	btfsc	status,2,c
  8989  00614C  D03E               	goto	l1856
  8990  00614E                     u23990:
  8991                           
  8992                           ; BSR set to: 2
  8993                           ;lorawan.c: 957: {;lorawan.c: 958: FindSmallestDataRate();
  8994  00614E  ECBC  F03C         	call	_FindSmallestDataRate	;wreg free
  8995  006152  D03B               	goto	l1856
  8996  006154                     l21182:
  8997                           
  8998                           ;lorawan.c: 961: else;lorawan.c: 962: {;lorawan.c: 964: UpdateRetransmissionAckTimeoutSt
      +                          ate ();
  8999  006154  EC7B  F045         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  9000  006158  D038               	goto	l1856
  9001  00615A                     l21186:
  9002                           
  9003                           ; BSR set to: 2
  9004                           ;lorawan.c: 973: else;lorawan.c: 974: {;lorawan.c: 975: ResetParametersForConfirmedTrans
      +                          mission ();
  9005  00615A  EC98  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9006                           
  9007                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  9008  00615E  0101               	movlb	1	; () banked
  9009  006160  510E               	movf	_rxPayload& (0+255),w,b
  9010  006162  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9011  006164  B4D8               	btfsc	status,2,c
  9012  006166  D031               	goto	l1856
  9013                           
  9014                           ; BSR set to: 1
  9015                           ;lorawan.c: 977: {;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  9016  006168  0E00               	movlw	0
  9017  00616A  0100               	movlb	0	; () banked
  9018  00616C  6F60               	movwf	RxData@pData& (0+255),b
  9019  00616E  0E00               	movlw	0
  9020  006170  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9021  006172  0E00               	movlw	0
  9022  006174  6F62               	movwf	RxData@dataLength& (0+255),b
  9023  006176  0E04               	movlw	4
  9024  006178  6F63               	movwf	RxData@status& (0+255),b
  9025  00617A  D801               	call	u24018
  9026  00617C  D026               	goto	l1856
  9027  00617E                     u24018:
  9028  00617E  0005               	push	
  9029  006180  6EFA               	movwf	pclath,c
  9030  006182  D019               	goto	L10
  9031  006184                     l21192:
  9032                           
  9033                           ; BSR set to: 2
  9034                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  9035  006184  51DE               	movf	(_loRa+217)& (0+255),w,b
  9036  006186  5DDC               	subwf	(_loRa+215)& (0+255),w,b
  9037  006188  A0D8               	btfss	status,0,c
  9038                           
  9039                           ; BSR set to: 2
  9040  00618A  B108               	btfsc	(_loRa+3)& (0+255),0,b
  9041  00618C  D01E               	goto	l1856
  9042                           
  9043                           ; BSR set to: 2
  9044                           ;lorawan.c: 983: {;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  9045  00618E  EC98  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9046                           
  9047                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  9048  006192  0101               	movlb	1	; () banked
  9049  006194  510E               	movf	_rxPayload& (0+255),w,b
  9050  006196  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9051  006198  B4D8               	btfsc	status,2,c
  9052  00619A  D017               	goto	l1856
  9053                           
  9054                           ; BSR set to: 1
  9055                           ;lorawan.c: 986: {;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  9056  00619C  0E00               	movlw	0
  9057  00619E  0100               	movlb	0	; () banked
  9058  0061A0  6F60               	movwf	RxData@pData& (0+255),b
  9059  0061A2  0E00               	movlw	0
  9060  0061A4  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9061  0061A6  0E00               	movlw	0
  9062  0061A8  6F62               	movwf	RxData@dataLength& (0+255),b
  9063  0061AA  0E00               	movlw	0
  9064  0061AC  6F63               	movwf	RxData@status& (0+255),b
  9065  0061AE  D801               	call	u24058
  9066  0061B0  D00C               	goto	l1856
  9067  0061B2                     u24058:
  9068  0061B2  0005               	push	
  9069  0061B4  6EFA               	movwf	pclath,c
  9070  0061B6                     L10:
  9071  0061B6  0101               	movlb	1	; () banked
  9072  0061B8  510E               	movf	_rxPayload& (0+255),w,b
  9073  0061BA  6EFD               	movwf	tosl,c
  9074  0061BC  510F               	movf	(_rxPayload+1)& (0+255),w,b
  9075  0061BE  6EFE               	movwf	tosh,c
  9076  0061C0  6AFF               	clrf	tosu,c
  9077  0061C2  50FA               	movf	pclath,w,c
  9078  0061C4  0012               	return		;indir
  9079  0061C6                     l21202:
  9080                           
  9081                           ; BSR set to: 2
  9082                           ;lorawan.c: 991: else;lorawan.c: 992: {;lorawan.c: 993: ResetParametersForConfirmedTrans
      +                          mission ();
  9083  0061C6  EC98  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9084  0061CA                     l1856:
  9085                           
  9086                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  9087  0061CA  52E5               	movf	postdec1,f,c
  9088  0061CC  52E5               	movf	postdec1,f,c
  9089  0061CE  0012               	return		;funcret
  9090  0061D0                     __end_of_AckRetransmissionCallback:
  9091                           	opt callstack 0
  9092                           
  9093 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  9094 ;; Defined at:
  9095 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  param           1  [STACK] unsigned char 
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;  iCtr            1  [STACK] unsigned char 
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1  [STACK] void 
  9102 ;; Registers used:
  9103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  9104 ;; Tracked objects:
  9105 ;;		On entry : 3F/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9113 ;;Total ram usage:        0 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; Hardware stack levels required when called:   11
  9116 ;; This function calls:
  9117 ;;		_SwTimerSetTimeout
  9118 ;;		_SwTimerStart
  9119 ;;		___lldiv
  9120 ;; This function is called by:
  9121 ;;		_SetCallbackSoftwareTimers
  9122 ;;		_SwTimersExecute
  9123 ;; This function uses a reentrant model
  9124 ;;
  9125                           
  9126                           	psect	text29
  9127  004EA6                     __ptext29:
  9128                           	opt callstack 0
  9129  004EA6                     _LORAWAN_LinkCheckCallback:
  9130                           	opt callstack 0
  9131                           
  9132                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9133  004EA6  0E05               	movlw	5
  9134  004EA8  26E1               	addwf	fsr1l,f,c
  9135  004EAA  0E00               	movlw	0
  9136  004EAC  22E2               	addwfc	fsr1h,f,c
  9137                           
  9138                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  9139                           
  9140                           ;incstack = 0
  9141  004EAE  0102               	movlb	2	; () banked
  9142  004EB0  A108               	btfss	(_loRa+3)& (0+255),0,b
  9143                           
  9144                           ; BSR set to: 2
  9145  004EB2  A508               	btfss	(_loRa+3)& (0+255),2,b
  9146  004EB4  D02C               	goto	l21146
  9147                           
  9148                           ; BSR set to: 2
  9149                           ;lorawan.c: 886: {;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  9150                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9151  004EB6  0EFF               	movlw	-1
  9152  004EB8  6AE3               	clrf	plusw1,c
  9153  004EBA  D00F               	goto	l21136
  9154  004EBC                     l21130:
  9155                           
  9156                           ; BSR set to: 2
  9157                           ;lorawan.c: 889: {;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_C
      +                          ID)
  9158                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9159  004EBC  0EFF               	movlw	-1
  9160  004EBE  50E3               	movf	plusw1,w,c
  9161  004EC0  0D02               	mullw	2
  9162  004EC2  0EAD               	movlw	low (_loRa+168)
  9163  004EC4  24F3               	addwf	prodl,w,c
  9164  004EC6  6ED9               	movwf	fsr2l,c
  9165  004EC8  0E02               	movlw	high (_loRa+168)
  9166  004ECA  20F4               	addwfc	prodh,w,c
  9167  004ECC  6EDA               	movwf	fsr2h,c
  9168  004ECE  0E02               	movlw	2
  9169  004ED0  18DE               	xorwf	postinc2,w,c
  9170  004ED2  B4D8               	btfsc	status,2,c
  9171  004ED4  D009               	goto	u23850
  9172                           
  9173                           ; BSR set to: 2
  9174                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9175  004ED6  0EFF               	movlw	-1
  9176  004ED8  2AE3               	incf	plusw1,f,c
  9177  004EDA                     l21136:
  9178                           
  9179                           ; BSR set to: 2
  9180                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9181  004EDA  0EFF               	movlw	-1
  9182  004EDC  CFE3 F046          	movff	plusw1,btemp
  9183  004EE0  51AC               	movf	(_loRa+167)& (0+255),w,b
  9184  004EE2  5C46               	subwf	btemp,w,c
  9185  004EE4  A0D8               	btfss	status,0,c
  9186  004EE6  D7EA               	goto	l21130
  9187  004EE8                     u23850:
  9188                           
  9189                           ; BSR set to: 2
  9190                           ;lorawan.c: 893: };lorawan.c: 894: };lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  9191                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9192  004EE8  0EFF               	movlw	-1
  9193  004EEA  50E3               	movf	plusw1,w,c
  9194  004EEC  19AC               	xorwf	(_loRa+167)& (0+255),w,b
  9195  004EEE  A4D8               	btfss	status,2,c
  9196  004EF0  D00E               	goto	l21146
  9197                           
  9198                           ; BSR set to: 2
  9199                           ;lorawan.c: 897: {;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = L
      +                          INK_CHECK_CID;
  9200  004EF2  51AC               	movf	(_loRa+167)& (0+255),w,b
  9201  004EF4  0D02               	mullw	2
  9202  004EF6  0EAD               	movlw	low (_loRa+168)
  9203  004EF8  24F3               	addwf	prodl,w,c
  9204  004EFA  6ED9               	movwf	fsr2l,c
  9205  004EFC  0E02               	movlw	high (_loRa+168)
  9206  004EFE  20F4               	addwfc	prodh,w,c
  9207  004F00  6EDA               	movwf	fsr2h,c
  9208  004F02  0E02               	movlw	2
  9209  004F04  6EDF               	movwf	indf2,c
  9210                           
  9211                           ; BSR set to: 2
  9212                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  9213  004F06  0E10               	movlw	16
  9214  004F08  61AC               	cpfslt	(_loRa+167)& (0+255),b
  9215  004F0A  D001               	goto	l21146
  9216                           
  9217                           ; BSR set to: 2
  9218                           ;lorawan.c: 901: {;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  9219  004F0C  2BAC               	incf	(_loRa+167)& (0+255),f,b
  9220  004F0E                     l21146:
  9221                           
  9222                           ; BSR set to: 2
  9223                           ;lorawan.c: 903: };lorawan.c: 904: };lorawan.c: 905: };lorawan.c: 908: if (loRa.macStatu
      +                          s.linkCheck == 1)
  9224  004F0E  A508               	btfss	(_loRa+3)& (0+255),2,b
  9225  004F10  D07B               	goto	l1834
  9226                           
  9227                           ; BSR set to: 2
  9228                           ;lorawan.c: 909: {;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.perio
      +                          dForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125U
      +                          L ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  9229  004F12  51D4               	movf	(_loRa+207)& (0+255),w,b
  9230  004F14  E107               	bnz	u23890
  9231  004F16  29D1               	incf	(_loRa+204)& (0+255),w,b
  9232  004F18  0EFF               	movlw	255
  9233  004F1A  59D2               	subwfb	(_loRa+205)& (0+255),w,b
  9234  004F1C  0E0F               	movlw	15
  9235  004F1E  59D3               	subwfb	(_loRa+206)& (0+255),w,b
  9236  004F20  A0D8               	btfss	status,0,c
  9237  004F22  D024               	goto	l21152
  9238  004F24                     u23890:
  9239                           
  9240                           ; BSR set to: 2
  9241  004F24  C2D1  F060         	movff	_loRa+204,___lldiv@dividend
  9242  004F28  C2D2  F061         	movff	_loRa+205,___lldiv@dividend+1
  9243  004F2C  C2D3  F062         	movff	_loRa+206,___lldiv@dividend+2
  9244  004F30  C2D4  F063         	movff	_loRa+207,___lldiv@dividend+3
  9245  004F34  0E7D               	movlw	125
  9246  004F36  0100               	movlb	0	; () banked
  9247  004F38  6F64               	movwf	___lldiv@divisor& (0+255),b
  9248  004F3A  0E00               	movlw	0
  9249  004F3C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9250  004F3E  0E00               	movlw	0
  9251  004F40  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9252  004F42  0E00               	movlw	0
  9253  004F44  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9254  004F46  EC96  F042         	call	___lldiv	;wreg free
  9255  004F4A  C060  F04E         	movff	?___lldiv,btemp+8
  9256  004F4E  C061  F04F         	movff	?___lldiv+1,btemp+9
  9257  004F52  C062  F050         	movff	?___lldiv+2,btemp+10
  9258  004F56  C063  F051         	movff	?___lldiv+3,btemp+11
  9259  004F5A  0E0C               	movlw	12
  9260  004F5C                     u23905:
  9261  004F5C  90D8               	bcf	status,0,c
  9262  004F5E  364E               	rlcf	btemp+8,f,c
  9263  004F60  364F               	rlcf	btemp+9,f,c
  9264  004F62  3650               	rlcf	btemp+10,f,c
  9265  004F64  3651               	rlcf	btemp+11,f,c
  9266  004F66  2EE8               	decfsz	wreg,f,c
  9267  004F68  D7F9               	goto	u23905
  9268  004F6A  D02B               	goto	L11
  9269  004F6C                     l21152:
  9270                           
  9271                           ; BSR set to: 2
  9272  004F6C  C2D1  F04E         	movff	_loRa+204,btemp+8
  9273  004F70  C2D2  F04F         	movff	_loRa+205,btemp+9
  9274  004F74  C2D3  F050         	movff	_loRa+206,btemp+10
  9275  004F78  C2D4  F051         	movff	_loRa+207,btemp+11
  9276  004F7C  0E0C               	movlw	12
  9277  004F7E                     u23915:
  9278  004F7E  90D8               	bcf	status,0,c
  9279  004F80  364E               	rlcf	btemp+8,f,c
  9280  004F82  364F               	rlcf	btemp+9,f,c
  9281  004F84  3650               	rlcf	btemp+10,f,c
  9282  004F86  3651               	rlcf	btemp+11,f,c
  9283  004F88  2EE8               	decfsz	wreg,f,c
  9284  004F8A  D7F9               	goto	u23915
  9285  004F8C  C04E  F060         	movff	btemp+8,___lldiv@dividend
  9286  004F90  C04F  F061         	movff	btemp+9,___lldiv@dividend+1
  9287  004F94  C050  F062         	movff	btemp+10,___lldiv@dividend+2
  9288  004F98  C051  F063         	movff	btemp+11,___lldiv@dividend+3
  9289  004F9C  0E7D               	movlw	125
  9290  004F9E  0100               	movlb	0	; () banked
  9291  004FA0  6F64               	movwf	___lldiv@divisor& (0+255),b
  9292  004FA2  0E00               	movlw	0
  9293  004FA4  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9294  004FA6  0E00               	movlw	0
  9295  004FA8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9296  004FAA  0E00               	movlw	0
  9297  004FAC  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9298  004FAE  EC96  F042         	call	___lldiv	;wreg free
  9299  004FB2  C060  F04E         	movff	?___lldiv,btemp+8
  9300  004FB6  C061  F04F         	movff	?___lldiv+1,btemp+9
  9301  004FBA  C062  F050         	movff	?___lldiv+2,btemp+10
  9302  004FBE  C063  F051         	movff	?___lldiv+3,btemp+11
  9303  004FC2                     L11:
  9304                           
  9305                           ;stkvar	_LORAWAN_LinkCheckCallback$2513 @ sp[(-5)+0]
  9306  004FC2  0EFB               	movlw	-5
  9307  004FC4  C04E  FFE3         	movff	btemp+8,plusw1
  9308  004FC8  0EFC               	movlw	-4
  9309  004FCA  C04F  FFE3         	movff	btemp+9,plusw1
  9310  004FCE  0EFD               	movlw	-3
  9311  004FD0  C050  FFE3         	movff	btemp+10,plusw1
  9312  004FD4  0EFE               	movlw	-2
  9313  004FD6  C051  FFE3         	movff	btemp+11,plusw1
  9314                           
  9315                           ;stkvar	_LORAWAN_LinkCheckCallback$2513 @ sp[(-5)+0]
  9316  004FDA  50E1               	movf	fsr1l,w,c
  9317  004FDC  0FFB               	addlw	-5
  9318  004FDE  6ED9               	movwf	fsr2l,c
  9319  004FE0  50E2               	movf	fsr1h,w,c
  9320  004FE2  6EDA               	movwf	fsr2h,c
  9321  004FE4  0EFF               	movlw	255
  9322  004FE6  22DA               	addwfc	fsr2h,f,c
  9323  004FE8  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  9324  004FEC  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  9325  004FF0  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  9326  004FF4  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  9327  004FF8  0102               	movlb	2	; () banked
  9328  004FFA  51EC               	movf	(_loRa+231)& (0+255),w,b
  9329  004FFC  EC7F  F04C         	call	_SwTimerSetTimeout
  9330                           
  9331                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  9332  005000  0102               	movlb	2	; () banked
  9333  005002  51EC               	movf	(_loRa+231)& (0+255),w,b
  9334  005004  EC73  F040         	call	_SwTimerStart
  9335  005008                     l1834:
  9336                           
  9337                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  9338  005008  0EFA               	movlw	250
  9339  00500A  26E1               	addwf	fsr1l,f,c
  9340  00500C  0EFF               	movlw	255
  9341  00500E  22E2               	addwfc	fsr1h,f,c
  9342  005010  0012               	return		;funcret
  9343  005012                     __end_of_LORAWAN_LinkCheckCallback:
  9344                           	opt callstack 0
  9345                           
  9346 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  9347 ;; Defined at:
  9348 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;  param           1  [STACK] unsigned char 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  freq            4  [STACK] unsigned long 
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1  [STACK] void 
  9355 ;; Registers used:
  9356 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 3F/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9366 ;;Total ram usage:        0 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:   13
  9369 ;; This function calls:
  9370 ;;		_ConfigureRadioRx
  9371 ;;		_GetRx1Freq
  9372 ;;		_RADIO_ReceiveStart
  9373 ;;		_RADIO_ReceiveStop
  9374 ;;		_RADIO_ReleaseData
  9375 ;; This function is called by:
  9376 ;;		_SetCallbackSoftwareTimers
  9377 ;;		_SwTimersExecute
  9378 ;; This function uses a reentrant model
  9379 ;;
  9380                           
  9381                           	psect	text30
  9382  007BB4                     __ptext30:
  9383                           	opt callstack 0
  9384  007BB4                     _LORAWAN_ReceiveWindow1Callback:
  9385                           	opt callstack 0
  9386                           
  9387                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9388  007BB4  52E6               	movf	postinc1,f,c
  9389  007BB6  52E6               	movf	postinc1,f,c
  9390  007BB8  52E6               	movf	postinc1,f,c
  9391  007BBA  52E6               	movf	postinc1,f,c
  9392                           
  9393                           ;lorawan.c: 798: uint32_t freq;;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  9394                           
  9395                           ;incstack = 0
  9396  007BBC  0102               	movlb	2	; () banked
  9397  007BBE  B108               	btfsc	(_loRa+3)& (0+255),0,b
  9398  007BC0  D050               	goto	l1807
  9399                           
  9400                           ; BSR set to: 2
  9401                           ;lorawan.c: 801: {;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  9402  007BC2  0E02               	movlw	2
  9403  007BC4  1917               	xorwf	(_loRa+18)& (0+255),w,b
  9404  007BC6  B4D8               	btfsc	status,2,c
  9405                           
  9406                           ; BSR set to: 2
  9407                           ;lorawan.c: 803: {;lorawan.c: 804: RADIO_ReceiveStop();
  9408  007BC8  ECB5  F051         	call	_RADIO_ReceiveStop	;wreg free
  9409                           
  9410                           ;lorawan.c: 805: };lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.of
      +                          fset)
  9411  007BCC  0102               	movlb	2	; () banked
  9412  007BCE  51F4               	movf	(_loRa+239)& (0+255),w,b
  9413  007BD0  5D1C               	subwf	(_loRa+23)& (0+255),w,b
  9414  007BD2  A0D8               	btfss	status,0,c
  9415  007BD4  D004               	goto	l1805
  9416                           
  9417                           ; BSR set to: 2
  9418                           ;lorawan.c: 807: {;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receive
      +                          Window1Parameters.dataRate - loRa.offset;
  9419  007BD6  51F4               	movf	(_loRa+239)& (0+255),w,b
  9420  007BD8  5D1C               	subwf	(_loRa+23)& (0+255),w,b
  9421  007BDA  6F1C               	movwf	(_loRa+23)& (0+255),b
  9422                           
  9423                           ;lorawan.c: 809: }
  9424  007BDC  D001               	goto	l21112
  9425  007BDE                     l1805:
  9426                           
  9427                           ; BSR set to: 2
  9428                           ;lorawan.c: 810: else;lorawan.c: 811: {;lorawan.c: 812: loRa.receiveWindow1Parameters.da
      +                          taRate = 0;
  9429  007BDE  6B1C               	clrf	(_loRa+23)& (0+255),b
  9430  007BE0                     l21112:
  9431                           
  9432                           ; BSR set to: 2
  9433                           ;lorawan.c: 813: };lorawan.c: 815: freq = GetRx1Freq();
  9434  007BE0  EC33  F053         	call	_GetRx1Freq	;wreg free
  9435  007BE4  C060  F04E         	movff	?_GetRx1Freq,btemp+8
  9436  007BE8  C061  F04F         	movff	?_GetRx1Freq+1,btemp+9
  9437  007BEC  C062  F050         	movff	?_GetRx1Freq+2,btemp+10
  9438  007BF0  C063  F051         	movff	?_GetRx1Freq+3,btemp+11
  9439                           
  9440                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  9441  007BF4  0EFC               	movlw	-4
  9442  007BF6  C04E  FFE3         	movff	btemp+8,plusw1
  9443  007BFA  0EFD               	movlw	-3
  9444  007BFC  C04F  FFE3         	movff	btemp+9,plusw1
  9445  007C00  0EFE               	movlw	-2
  9446  007C02  C050  FFE3         	movff	btemp+10,plusw1
  9447  007C06  0EFF               	movlw	-1
  9448  007C08  C051  FFE3         	movff	btemp+11,plusw1
  9449                           
  9450                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  9451  007C0C  0102               	movlb	2	; () banked
  9452  007C0E  5107               	movf	(_loRa+2)& (0+255),w,b
  9453  007C10  0BF0               	andlw	-16
  9454  007C12  0903               	iorlw	3
  9455  007C14  6F07               	movwf	(_loRa+2)& (0+255),b
  9456                           
  9457                           ; BSR set to: 2
  9458                           ;lorawan.c: 819: RADIO_ReleaseData();
  9459  007C16  EC56  F054         	call	_RADIO_ReleaseData	;wreg free
  9460                           
  9461                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  9462                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  9463  007C1A  50E1               	movf	fsr1l,w,c
  9464  007C1C  0FFC               	addlw	-4
  9465  007C1E  6ED9               	movwf	fsr2l,c
  9466  007C20  50E2               	movf	fsr1h,w,c
  9467  007C22  6EDA               	movwf	fsr2h,c
  9468  007C24  0EFF               	movlw	255
  9469  007C26  22DA               	addwfc	fsr2h,f,c
  9470  007C28  CFDE F073          	movff	postinc2,ConfigureRadioRx@freq
  9471  007C2C  CFDE F074          	movff	postinc2,ConfigureRadioRx@freq+1
  9472  007C30  CFDE F075          	movff	postinc2,ConfigureRadioRx@freq+2
  9473  007C34  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq+3
  9474  007C38  0102               	movlb	2	; () banked
  9475  007C3A  511C               	movf	(_loRa+23)& (0+255),w,b
  9476  007C3C  EC66  F050         	call	_ConfigureRadioRx
  9477                           
  9478                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  9479  007C40  0E1F               	movlw	low _rxWindowSize
  9480  007C42  0102               	movlb	2	; () banked
  9481  007C44  251C               	addwf	(_loRa+23)& (0+255),w,b
  9482  007C46  6EF6               	movwf	tblptrl,c
  9483  007C48  6AF7               	clrf	tblptrh,c
  9484  007C4A  0EFF               	movlw	high _rxWindowSize
  9485  007C4C  22F7               	addwfc	tblptrh,f,c
  9486  007C4E                     	if	1	;There are 3 active tblptr bytes
  9487  007C4E  6AF8               	clrf	tblptru,c
  9488  007C50  0E00               	movlw	low (__mediumconst shr (0+16))
  9489  007C52  22F8               	addwfc	tblptru,f,c
  9490  007C54                     	endif
  9491  007C54  0008               	tblrd		*
  9492  007C56  50F5               	movf	tablat,w,c
  9493  007C58  0100               	movlb	0	; () banked
  9494  007C5A  6FA9               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  9495  007C5C  6BAA               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  9496  007C5E  ECEE  F01D         	call	_RADIO_ReceiveStart	;wreg free
  9497  007C62                     l1807:
  9498                           
  9499                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  9500  007C62  0EFB               	movlw	251
  9501  007C64  26E1               	addwf	fsr1l,f,c
  9502  007C66  0EFF               	movlw	255
  9503  007C68  22E2               	addwfc	fsr1h,f,c
  9504  007C6A  0012               	return		;funcret
  9505  007C6C                     __end_of_LORAWAN_ReceiveWindow1Callback:
  9506                           	opt callstack 0
  9507                           
  9508 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  9509 ;; Defined at:
  9510 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9511 ;; Parameters:    Size  Location     Type
  9512 ;;  param           1  [STACK] unsigned char 
  9513 ;; Auto vars:     Size  Location     Type
  9514 ;;		None
  9515 ;; Return value:  Size  Location     Type
  9516 ;;                  1  [STACK] void 
  9517 ;; Registers used:
  9518 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
  9519 ;; Tracked objects:
  9520 ;;		On entry : 3D/0
  9521 ;;		On exit  : 0/0
  9522 ;;		Unchanged: 0/0
  9523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9528 ;;Total ram usage:        0 bytes
  9529 ;; Hardware stack levels used:    1
  9530 ;; Hardware stack levels required when called:   14
  9531 ;; This function calls:
  9532 ;;		_ConfigureRadioRx
  9533 ;;		_LORAWAN_EnterContinuousReceive
  9534 ;;		_RADIO_GetStatus
  9535 ;;		_RADIO_ReceiveStart
  9536 ;;		_RADIO_ReceiveStop
  9537 ;;		_RADIO_ReleaseData
  9538 ;;		_ResetParametersForConfirmedTransmission
  9539 ;;		_ResetParametersForUnconfirmedTransmission
  9540 ;;		_RxData
  9541 ;; This function is called by:
  9542 ;;		_LORAWAN_RxTimeout
  9543 ;;		_SetCallbackSoftwareTimers
  9544 ;;		_SwTimersExecute
  9545 ;; This function uses a reentrant model
  9546 ;;
  9547                           
  9548                           	psect	text31
  9549  0074B6                     __ptext31:
  9550                           	opt callstack 0
  9551  0074B6                     _LORAWAN_ReceiveWindow2Callback:
  9552                           	opt callstack 10
  9553                           
  9554                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  9555                           
  9556                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9557                           ;incstack = 0
  9558  0074B6  0102               	movlb	2	; () banked
  9559  0074B8  B108               	btfsc	(_loRa+3)& (0+255),0,b
  9560  0074BA  D05F               	goto	l1810
  9561                           
  9562                           ; BSR set to: 2
  9563                           ;lorawan.c: 831: {;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  9564  0074BC  EC53  F054         	call	_RADIO_GetStatus	;wreg free
  9565  0074C0  6E51               	movwf	btemp+11,c
  9566  0074C2  B251               	btfsc	btemp+11,1,c
  9567  0074C4  D056               	goto	l19914
  9568                           
  9569                           ;lorawan.c: 833: {;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  9570  0074C6  0102               	movlb	2	; () banked
  9571  0074C8  5107               	movf	(_loRa+2)& (0+255),w,b
  9572  0074CA  0BF0               	andlw	-16
  9573  0074CC  0905               	iorlw	5
  9574  0074CE  6F07               	movwf	(_loRa+2)& (0+255),b
  9575                           
  9576                           ; BSR set to: 2
  9577                           ;lorawan.c: 836: RADIO_ReceiveStop();
  9578  0074D0  ECB5  F051         	call	_RADIO_ReceiveStop	;wreg free
  9579                           
  9580                           ;lorawan.c: 837: RADIO_ReleaseData();
  9581  0074D4  EC56  F054         	call	_RADIO_ReleaseData	;wreg free
  9582                           
  9583                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  9584  0074D8  C21D  F073         	movff	_loRa+24,ConfigureRadioRx@freq
  9585  0074DC  C21E  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
  9586  0074E0  C21F  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
  9587  0074E4  C220  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
  9588  0074E8  0102               	movlb	2	; () banked
  9589  0074EA  5121               	movf	(_loRa+28)& (0+255),w,b
  9590  0074EC  EC66  F050         	call	_ConfigureRadioRx
  9591                           
  9592                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  9593  0074F0  0102               	movlb	2	; () banked
  9594  0074F2  5117               	movf	(_loRa+18)& (0+255),w,b
  9595  0074F4  A4D8               	btfss	status,2,c
  9596  0074F6  D036               	goto	l19910
  9597                           
  9598                           ; BSR set to: 2
  9599                           ;lorawan.c: 842: {;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindo
      +                          w2Parameters.dataRate]) != OK)
  9600  0074F8  0E1F               	movlw	low _rxWindowSize
  9601  0074FA  2521               	addwf	(_loRa+28)& (0+255),w,b
  9602  0074FC  6EF6               	movwf	tblptrl,c
  9603  0074FE  6AF7               	clrf	tblptrh,c
  9604  007500  0EFF               	movlw	high _rxWindowSize
  9605  007502  22F7               	addwfc	tblptrh,f,c
  9606  007504                     	if	1	;There are 3 active tblptr bytes
  9607  007504  6AF8               	clrf	tblptru,c
  9608  007506  0E00               	movlw	low (__mediumconst shr (0+16))
  9609  007508  22F8               	addwfc	tblptru,f,c
  9610  00750A                     	endif
  9611  00750A  0008               	tblrd		*
  9612  00750C  50F5               	movf	tablat,w,c
  9613  00750E  0100               	movlb	0	; () banked
  9614  007510  6FA9               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  9615  007512  6BAA               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  9616  007514  ECEE  F01D         	call	_RADIO_ReceiveStart	;wreg free
  9617  007518  C0A9  F050         	movff	?_RADIO_ReceiveStart,btemp+10
  9618  00751C  C0AA  F051         	movff	?_RADIO_ReceiveStart+1,btemp+11
  9619  007520  5050               	movf	btemp+10,w,c
  9620  007522  1051               	iorwf	btemp+11,w,c
  9621  007524  B4D8               	btfsc	status,2,c
  9622  007526  D031               	goto	l1819
  9623                           
  9624                           ;lorawan.c: 844: {;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  9625  007528  EC98  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9626                           
  9627                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  9628  00752C  EC68  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9629                           
  9630                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  9631  007530  0101               	movlb	1	; () banked
  9632  007532  510E               	movf	_rxPayload& (0+255),w,b
  9633  007534  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9634  007536  B4D8               	btfsc	status,2,c
  9635  007538  D028               	goto	l1819
  9636                           
  9637                           ; BSR set to: 1
  9638                           ;lorawan.c: 848: {;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  9639  00753A  0E00               	movlw	0
  9640  00753C  0100               	movlb	0	; () banked
  9641  00753E  6F60               	movwf	RxData@pData& (0+255),b
  9642  007540  0E00               	movlw	0
  9643  007542  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9644  007544  0E00               	movlw	0
  9645  007546  6F62               	movwf	RxData@dataLength& (0+255),b
  9646  007548  0E00               	movlw	0
  9647  00754A  6F63               	movwf	RxData@status& (0+255),b
  9648  00754C  D801               	call	u21568
  9649  00754E  D01D               	goto	l1819
  9650  007550                     u21568:
  9651  007550  0005               	push	
  9652  007552  6EFA               	movwf	pclath,c
  9653  007554  0101               	movlb	1	; () banked
  9654  007556  510E               	movf	_rxPayload& (0+255),w,b
  9655  007558  6EFD               	movwf	tosl,c
  9656  00755A  510F               	movf	(_rxPayload+1)& (0+255),w,b
  9657  00755C  6EFE               	movwf	tosh,c
  9658  00755E  6AFF               	clrf	tosu,c
  9659  007560  50FA               	movf	pclath,w,c
  9660  007562  0012               	return		;indir
  9661  007564                     l19910:
  9662                           
  9663                           ; BSR set to: 2
  9664                           ;lorawan.c: 853: else;lorawan.c: 854: {;lorawan.c: 855: loRa.macStatus.macState = CLASS_
      +                          C_RX2_2_OPEN;
  9665  007564  5107               	movf	(_loRa+2)& (0+255),w,b
  9666  007566  0BF0               	andlw	-16
  9667  007568  0909               	iorlw	9
  9668  00756A  6F07               	movwf	(_loRa+2)& (0+255),b
  9669                           
  9670                           ; BSR set to: 2
  9671                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  9672  00756C  ECD5  F043         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  9673  007570  D00C               	goto	l1819
  9674  007572                     l19914:
  9675                           
  9676                           ;lorawan.c: 859: else;lorawan.c: 860: {;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  9677  007572  0E01               	movlw	1
  9678  007574  0102               	movlb	2	; () banked
  9679  007576  6FF6               	movwf	(_loRa+241)& (0+255),b
  9680                           
  9681                           ; BSR set to: 1
  9682                           ;lorawan.c: 864: };lorawan.c: 865: }
  9683  007578  D008               	goto	l1819
  9684  00757A                     l1810:
  9685                           
  9686                           ; BSR set to: 2
  9687                           ;lorawan.c: 866: else;lorawan.c: 867: {;lorawan.c: 870: if (loRa.lorawanMacStatus.joinin
      +                          g == 1)
  9688  00757A  A505               	btfss	_loRa& (0+255),2,b
  9689  00757C  D002               	goto	l19918
  9690                           
  9691                           ; BSR set to: 2
  9692                           ;lorawan.c: 871: {;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  9693  00757E  9505               	bcf	_loRa& (0+255),2,b
  9694                           
  9695                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  9696  007580  9907               	bcf	(_loRa+2)& (0+255),4,b
  9697  007582                     l19918:
  9698                           
  9699                           ; BSR set to: 2
  9700                           ;lorawan.c: 874: };lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  9701  007582  EC68  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9702                           
  9703                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  9704  007586  EC98  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9705  00758A                     l1819:
  9706                           
  9707                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  9708  00758A  52E5               	movf	postdec1,f,c
  9709  00758C  0012               	return		;funcret
  9710  00758E                     __end_of_LORAWAN_ReceiveWindow2Callback:
  9711                           	opt callstack 0
  9712                           
  9713 ;; *************** function _RADIO_WatchdogTimeout *****************
  9714 ;; Defined at:
  9715 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;  param           1  [STACK] unsigned char 
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;		None
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1  [STACK] void 
  9722 ;; Registers used:
  9723 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
  9724 ;; Tracked objects:
  9725 ;;		On entry : 3F/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9733 ;;Total ram usage:        0 bytes
  9734 ;; Hardware stack levels used:    1
  9735 ;; Hardware stack levels required when called:   16
  9736 ;; This function calls:
  9737 ;;		_LORAWAN_RxTimeout
  9738 ;;		_LORAWAN_TxDone
  9739 ;;		_RADIO_WriteMode
  9740 ;; This function is called by:
  9741 ;;		_RADIO_Init
  9742 ;;		_SwTimersExecute
  9743 ;; This function uses a reentrant model
  9744 ;;
  9745                           
  9746                           	psect	text32
  9747  0097A2                     __ptext32:
  9748                           	opt callstack 0
  9749  0097A2                     _RADIO_WatchdogTimeout:
  9750                           	opt callstack 10
  9751                           
  9752                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  9753                           
  9754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9755                           ;incstack = 0
  9756  0097A2  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9757  0097A6  0E01               	movlw	1
  9758  0097A8  0100               	movlb	0	; () banked
  9759  0097AA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9760  0097AC  0E01               	movlw	1
  9761  0097AE  EC1C  F036         	call	_RADIO_WriteMode
  9762                           
  9763                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9764  0097B2  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9765  0097B6  0E00               	movlw	0
  9766  0097B8  0100               	movlb	0	; () banked
  9767  0097BA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9768  0097BC  0E00               	movlw	0
  9769  0097BE  EC1C  F036         	call	_RADIO_WriteMode
  9770                           
  9771                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  9772  0097C2  0101               	movlb	1	; () banked
  9773  0097C4  894C               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  9774                           
  9775                           ; BSR set to: 1
  9776                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  9777  0097C6  A34C               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  9778  0097C8  D004               	goto	l691
  9779                           
  9780                           ; BSR set to: 1
  9781                           ;radio_driver_SX1276.c: 1414: {;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &=
      +                           ~(1 << (1));
  9782  0097CA  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9783                           
  9784                           ; BSR set to: 1
  9785                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  9786  0097CC  EC3E  F017         	call	_LORAWAN_RxTimeout	;wreg free
  9787                           
  9788                           ;radio_driver_SX1276.c: 1417: }
  9789  0097D0  D009               	goto	l694
  9790  0097D2                     l691:
  9791                           
  9792                           ; BSR set to: 1
  9793                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  9794  0097D2  A14C               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  9795  0097D4  D007               	goto	l694
  9796                           
  9797                           ; BSR set to: 1
  9798                           ;radio_driver_SX1276.c: 1419: {;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &=
      +                           ~(1 << (0));
  9799  0097D6  914C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9800                           
  9801                           ; BSR set to: 1
  9802                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  9803  0097D8  C153  F0B3         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  9804  0097DC  C154  F0B4         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  9805  0097E0  ECEC  F005         	call	_LORAWAN_TxDone	;wreg free
  9806  0097E4                     l694:
  9807                           
  9808                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  9809  0097E4  52E5               	movf	postdec1,f,c
  9810  0097E6  0012               	return		;funcret
  9811  0097E8                     __end_of_RADIO_WatchdogTimeout:
  9812                           	opt callstack 0
  9813                           
  9814 ;; *************** function _RADIO_RxFSKTimeout *****************
  9815 ;; Defined at:
  9816 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9817 ;; Parameters:    Size  Location     Type
  9818 ;;  param           1  [STACK] unsigned char 
  9819 ;; Auto vars:     Size  Location     Type
  9820 ;;  irqFlags        1  [STACK] unsigned char 
  9821 ;; Return value:  Size  Location     Type
  9822 ;;                  1  [STACK] void 
  9823 ;; Registers used:
  9824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblpt
      +rh, tblptru, prodl, prodh, cstack
  9825 ;; Tracked objects:
  9826 ;;		On entry : 3F/0
  9827 ;;		On exit  : 0/0
  9828 ;;		Unchanged: 0/0
  9829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9834 ;;Total ram usage:        0 bytes
  9835 ;; Hardware stack levels used:    1
  9836 ;; Hardware stack levels required when called:   16
  9837 ;; This function calls:
  9838 ;;		_LORAWAN_RxTimeout
  9839 ;;		_RADIO_RegisterRead
  9840 ;;		_RADIO_WriteMode
  9841 ;;		_SwTimerStop
  9842 ;; This function is called by:
  9843 ;;		_RADIO_Init
  9844 ;;		_SwTimersExecute
  9845 ;; This function uses a reentrant model
  9846 ;;
  9847                           
  9848                           	psect	text33
  9849  009B44                     __ptext33:
  9850                           	opt callstack 0
  9851  009B44                     _RADIO_RxFSKTimeout:
  9852                           	opt callstack 0
  9853                           
  9854                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9855  009B44  52E6               	movf	postinc1,f,c
  9856                           
  9857                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;;radio_driver_SX1276.c: 1395: irqFlags = 
      +                          RADIO_RegisterRead(0x3E);
  9858                           
  9859                           ;incstack = 0
  9860  009B46  0E3E               	movlw	62
  9861  009B48  ECF5  F050         	call	_RADIO_RegisterRead
  9862  009B4C  6E51               	movwf	btemp+11,c
  9863                           
  9864                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  9865  009B4E  0EFF               	movlw	-1
  9866  009B50  C051  FFE3         	movff	btemp+11,plusw1
  9867                           
  9868                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  9869                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  9870  009B54  0EFF               	movlw	-1
  9871  009B56  B0E3               	btfsc	plusw1,0,c
  9872  009B58  D010               	goto	l688
  9873                           
  9874                           ;radio_driver_SX1276.c: 1397: {;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
  9875  009B5A  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9876  009B5E  0E00               	movlw	0
  9877  009B60  0100               	movlb	0	; () banked
  9878  009B62  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9879  009B64  0E00               	movlw	0
  9880  009B66  EC1C  F036         	call	_RADIO_WriteMode
  9881                           
  9882                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9883  009B6A  0101               	movlb	1	; () banked
  9884  009B6C  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9885  009B6E  ECD5  F051         	call	_SwTimerStop
  9886                           
  9887                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  9888  009B72  0101               	movlb	1	; () banked
  9889  009B74  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9890                           
  9891                           ; BSR set to: 1
  9892                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  9893  009B76  EC3E  F017         	call	_LORAWAN_RxTimeout	;wreg free
  9894  009B7A                     l688:
  9895                           
  9896                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9897  009B7A  52E5               	movf	postdec1,f,c
  9898  009B7C  52E5               	movf	postdec1,f,c
  9899  009B7E  0012               	return		;funcret
  9900  009B80                     __end_of_RADIO_RxFSKTimeout:
  9901                           	opt callstack 0
  9902                           
  9903 ;; *************** function _UnconfirmedTransmissionCallback *****************
  9904 ;; Defined at:
  9905 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9906 ;; Parameters:    Size  Location     Type
  9907 ;;  param           1  [STACK] unsigned char 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;		None
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  1  [STACK] void 
  9912 ;; Registers used:
  9913 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : 3F/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9923 ;;Total ram usage:        0 bytes
  9924 ;; Hardware stack levels used:    1
  9925 ;; Hardware stack levels required when called:   13
  9926 ;; This function calls:
  9927 ;;		_RADIO_Transmit
  9928 ;;		_ResetParametersForUnconfirmedTransmission
  9929 ;;		_RxData
  9930 ;;		_SelectChannelForTransmission
  9931 ;; This function is called by:
  9932 ;;		_SetCallbackSoftwareTimers
  9933 ;;		_SwTimersExecute
  9934 ;; This function uses a reentrant model
  9935 ;;
  9936                           
  9937                           	psect	text34
  9938  00889E                     __ptext34:
  9939                           	opt callstack 0
  9940  00889E                     _UnconfirmedTransmissionCallback:
  9941                           	opt callstack 13
  9942                           
  9943                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  9944                           
  9945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9946                           ;incstack = 0
  9947  00889E  0E01               	movlw	1
  9948  0088A0  EC8A  F046         	call	_SelectChannelForTransmission
  9949  0088A4  0900               	iorlw	0
  9950  0088A6  A4D8               	btfss	status,2,c
  9951  0088A8  D018               	goto	l21212
  9952  0088AA  0EC8               	movlw	low (_macBuffer+16)
  9953  0088AC  0100               	movlb	0	; () banked
  9954  0088AE  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
  9955  0088B0  0E06               	movlw	high (_macBuffer+16)
  9956  0088B2  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  9957  0088B4  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
  9958  0088B8  EC06  F01F         	call	_RADIO_Transmit	;wreg free
  9959  0088BC  C0A9  F050         	movff	?_RADIO_Transmit,btemp+10
  9960  0088C0  C0AA  F051         	movff	?_RADIO_Transmit+1,btemp+11
  9961  0088C4  5050               	movf	btemp+10,w,c
  9962  0088C6  1051               	iorwf	btemp+11,w,c
  9963  0088C8  A4D8               	btfss	status,2,c
  9964  0088CA  D007               	goto	l21212
  9965                           
  9966                           ;lorawan.c: 1001: {;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  9967  0088CC  0102               	movlb	2	; () banked
  9968  0088CE  2BDD               	incf	(_loRa+216)& (0+255),f,b
  9969                           
  9970                           ; BSR set to: 2
  9971                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  9972  0088D0  5107               	movf	(_loRa+2)& (0+255),w,b
  9973  0088D2  0BF0               	andlw	-16
  9974  0088D4  0901               	iorlw	1
  9975  0088D6  6F07               	movwf	(_loRa+2)& (0+255),b
  9976                           
  9977                           ;lorawan.c: 1005: }
  9978  0088D8  D01C               	goto	u24099
  9979  0088DA                     l21212:
  9980                           
  9981                           ;lorawan.c: 1006: else;lorawan.c: 1008: {;lorawan.c: 1009: ResetParametersForUnconfirmed
      +                          Transmission ();
  9982  0088DA  EC68  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9983                           
  9984                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  9985  0088DE  0101               	movlb	1	; () banked
  9986  0088E0  510E               	movf	_rxPayload& (0+255),w,b
  9987  0088E2  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9988  0088E4  B4D8               	btfsc	status,2,c
  9989  0088E6  D015               	goto	u24099
  9990                           
  9991                           ; BSR set to: 1
  9992                           ;lorawan.c: 1011: {;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  9993  0088E8  0E00               	movlw	0
  9994  0088EA  0100               	movlb	0	; () banked
  9995  0088EC  6F60               	movwf	RxData@pData& (0+255),b
  9996  0088EE  0E00               	movlw	0
  9997  0088F0  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9998  0088F2  0E00               	movlw	0
  9999  0088F4  6F62               	movwf	RxData@dataLength& (0+255),b
 10000  0088F6  0E00               	movlw	0
 10001  0088F8  6F63               	movwf	RxData@status& (0+255),b
 10002  0088FA  D801               	call	u24098
 10003  0088FC  D00A               	goto	u24099
 10004  0088FE                     u24098:
 10005  0088FE  0005               	push	
 10006  008900  6EFA               	movwf	pclath,c
 10007  008902  0101               	movlb	1	; () banked
 10008  008904  510E               	movf	_rxPayload& (0+255),w,b
 10009  008906  6EFD               	movwf	tosl,c
 10010  008908  510F               	movf	(_rxPayload+1)& (0+255),w,b
 10011  00890A  6EFE               	movwf	tosh,c
 10012  00890C  6AFF               	clrf	tosu,c
 10013  00890E  50FA               	movf	pclath,w,c
 10014  008910  0012               	return		;indir
 10015  008912                     u24099:
 10016                           
 10017                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
 10018  008912  52E5               	movf	postdec1,f,c
 10019  008914  0012               	return		;funcret
 10020  008916                     __end_of_UnconfirmedTransmissionCallback:
 10021                           	opt callstack 0
 10022                           
 10023 ;; *************** function _GetRx1Freq *****************
 10024 ;; Defined at:
 10025 ;;		line 884 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10026 ;; Parameters:    Size  Location     Type
 10027 ;;		None
 10028 ;; Auto vars:     Size  Location     Type
 10029 ;;		None
 10030 ;; Return value:  Size  Location     Type
 10031 ;;                  4    0[BANK0 ] unsigned long 
 10032 ;; Registers used:
 10033 ;;		None
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10043 ;;Total ram usage:        4 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; Hardware stack levels required when called:    7
 10046 ;; This function calls:
 10047 ;;		Nothing
 10048 ;; This function is called by:
 10049 ;;		_LORAWAN_ReceiveWindow1Callback
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           	psect	text35
 10054  00A666                     __ptext35:
 10055                           	opt callstack 0
 10056  00A666                     _GetRx1Freq:
 10057                           	opt callstack 18
 10058                           
 10059                           ;lorawan_eu.c: 886: return loRa.receiveWindow1Parameters.frequency;
 10060                           
 10061                           ;incstack = 0
 10062  00A666  C218  F060         	movff	_loRa+19,?_GetRx1Freq
 10063  00A66A  C219  F061         	movff	_loRa+20,?_GetRx1Freq+1
 10064  00A66E  C21A  F062         	movff	_loRa+21,?_GetRx1Freq+2
 10065  00A672  C21B  F063         	movff	_loRa+22,?_GetRx1Freq+3
 10066  00A676  0012               	return		;funcret
 10067  00A678                     __end_of_GetRx1Freq:
 10068                           	opt callstack 0
 10069                           
 10070 ;; *************** function _RADIO_DIO5 *****************
 10071 ;; Defined at:
 10072 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10073 ;; Parameters:    Size  Location     Type
 10074 ;;		None
 10075 ;; Auto vars:     Size  Location     Type
 10076 ;;  dioMapping      1    0        unsigned char 
 10077 ;; Return value:  Size  Location     Type
 10078 ;;                  1    wreg      void 
 10079 ;; Registers used:
 10080 ;;		wreg, status,2, status,0, cstack
 10081 ;; Tracked objects:
 10082 ;;		On entry : 0/0
 10083 ;;		On exit  : 0/0
 10084 ;;		Unchanged: 0/0
 10085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10089 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10090 ;;Total ram usage:        2 bytes
 10091 ;; Hardware stack levels used:    1
 10092 ;; Hardware stack levels required when called:   11
 10093 ;; This function calls:
 10094 ;;		_RADIO_RegisterRead
 10095 ;;		_RADIO_UnhandledInterrupt
 10096 ;; This function is called by:
 10097 ;;		_LORAWAN_Mainloop
 10098 ;; This function uses a non-reentrant model
 10099 ;;
 10100                           
 10101                           	psect	text36
 10102  00A4C6                     __ptext36:
 10103                           	opt callstack 0
 10104  00A4C6                     _RADIO_DIO5:
 10105                           	opt callstack 16
 10106                           
 10107                           ;incstack = 0
 10108  00A4C6  0E41               	movlw	65
 10109  00A4C8  ECF5  F050         	call	_RADIO_RegisterRead
 10110                           
 10111                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10112  00A4CC  0E01               	movlw	1
 10113  00A4CE  ECF5  F050         	call	_RADIO_RegisterRead
 10114  00A4D2  0100               	movlb	0	; () banked
 10115  00A4D4  6F65               	movwf	??_RADIO_DIO5& (0+255),b
 10116  00A4D6  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
 10117  00A4D8  0012               	return	
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10121  00A4DA  0E01               	movlw	1
 10122  00A4DC  ECC8  F04E         	call	_RADIO_UnhandledInterrupt
 10123                           
 10124                           ;radio_driver_SX1276.c: 1357: break;
 10125  00A4E0  0012               	return		;funcret
 10126  00A4E2                     __end_of_RADIO_DIO5:
 10127                           	opt callstack 0
 10128                           
 10129 ;; *************** function _RADIO_DIO4 *****************
 10130 ;; Defined at:
 10131 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;		None
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;  dioMapping      1    0        unsigned char 
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      void 
 10138 ;; Registers used:
 10139 ;;		wreg, status,2, status,0, cstack
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10147 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10148 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10149 ;;Total ram usage:        2 bytes
 10150 ;; Hardware stack levels used:    1
 10151 ;; Hardware stack levels required when called:   11
 10152 ;; This function calls:
 10153 ;;		_RADIO_RegisterRead
 10154 ;;		_RADIO_UnhandledInterrupt
 10155 ;; This function is called by:
 10156 ;;		_LORAWAN_Mainloop
 10157 ;; This function uses a non-reentrant model
 10158 ;;
 10159                           
 10160                           	psect	text37
 10161  00A4E2                     __ptext37:
 10162                           	opt callstack 0
 10163  00A4E2                     _RADIO_DIO4:
 10164                           	opt callstack 16
 10165                           
 10166                           ;incstack = 0
 10167  00A4E2  0E41               	movlw	65
 10168  00A4E4  ECF5  F050         	call	_RADIO_RegisterRead
 10169                           
 10170                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10171  00A4E8  0E01               	movlw	1
 10172  00A4EA  ECF5  F050         	call	_RADIO_RegisterRead
 10173  00A4EE  0100               	movlb	0	; () banked
 10174  00A4F0  6F65               	movwf	??_RADIO_DIO4& (0+255),b
 10175  00A4F2  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
 10176  00A4F4  0012               	return	
 10177                           
 10178                           ; BSR set to: 0
 10179                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10180  00A4F6  0E01               	movlw	1
 10181  00A4F8  ECC8  F04E         	call	_RADIO_UnhandledInterrupt
 10182                           
 10183                           ;radio_driver_SX1276.c: 1334: break;
 10184  00A4FC  0012               	return		;funcret
 10185  00A4FE                     __end_of_RADIO_DIO4:
 10186                           	opt callstack 0
 10187                           
 10188 ;; *************** function _RADIO_DIO3 *****************
 10189 ;; Defined at:
 10190 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;		None
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;  dioMapping      1    0        unsigned char 
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1    wreg      void 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2, status,0, cstack
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;Total ram usage:        2 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:   11
 10211 ;; This function calls:
 10212 ;;		_RADIO_RegisterRead
 10213 ;;		_RADIO_UnhandledInterrupt
 10214 ;; This function is called by:
 10215 ;;		_LORAWAN_Mainloop
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text38
 10220  00A4FE                     __ptext38:
 10221                           	opt callstack 0
 10222  00A4FE                     _RADIO_DIO3:
 10223                           	opt callstack 16
 10224                           
 10225                           ;incstack = 0
 10226  00A4FE  0E40               	movlw	64
 10227  00A500  ECF5  F050         	call	_RADIO_RegisterRead
 10228                           
 10229                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10230  00A504  0E01               	movlw	1
 10231  00A506  ECF5  F050         	call	_RADIO_RegisterRead
 10232  00A50A  0100               	movlb	0	; () banked
 10233  00A50C  6F65               	movwf	??_RADIO_DIO3& (0+255),b
 10234  00A50E  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
 10235  00A510  0012               	return	
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10239  00A512  0E01               	movlw	1
 10240  00A514  ECC8  F04E         	call	_RADIO_UnhandledInterrupt
 10241                           
 10242                           ;radio_driver_SX1276.c: 1311: break;
 10243  00A518  0012               	return		;funcret
 10244  00A51A                     __end_of_RADIO_DIO3:
 10245                           	opt callstack 0
 10246                           
 10247 ;; *************** function _RADIO_DIO2 *****************
 10248 ;; Defined at:
 10249 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;		None
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  dioMapping      1   28[BANK0 ] unsigned char 
 10254 ;;  opMode          1    0        unsigned char 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      void 
 10257 ;; Registers used:
 10258 ;;		wreg, status,2, status,0, cstack
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10267 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10268 ;;Total ram usage:        3 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:   12
 10271 ;; This function calls:
 10272 ;;		_RADIO_FHSSChangeChannel
 10273 ;;		_RADIO_RegisterRead
 10274 ;;		_RADIO_UnhandledInterrupt
 10275 ;; This function is called by:
 10276 ;;		_LORAWAN_Mainloop
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           	psect	text39
 10281  0094F2                     __ptext39:
 10282                           	opt callstack 0
 10283  0094F2                     _RADIO_DIO2:
 10284                           	opt callstack 15
 10285                           
 10286                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;;radio_driver_SX1276.c: 1272: uint8_t o
      +                          pMode;;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2
      +                          );
 10287                           
 10288                           ;incstack = 0
 10289  0094F2  0E40               	movlw	64
 10290  0094F4  ECF5  F050         	call	_RADIO_RegisterRead
 10291  0094F8  0100               	movlb	0	; () banked
 10292  0094FA  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 10293  0094FC  90D8               	bcf	status,0,c
 10294  0094FE  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
 10295  009500  90D8               	bcf	status,0,c
 10296  009502  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
 10297  009504  0B03               	andlw	3
 10298  009506  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
 10299  009508  0E01               	movlw	1
 10300  00950A  ECF5  F050         	call	_RADIO_RegisterRead
 10301                           
 10302                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10303  00950E  0E01               	movlw	1
 10304  009510  ECF5  F050         	call	_RADIO_RegisterRead
 10305  009514  0100               	movlb	0	; () banked
 10306  009516  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 10307  009518  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
 10308  00951A  0012               	return	
 10309  00951C  D007               	goto	l21322
 10310  00951E                     l21316:
 10311                           
 10312                           ; BSR set to: 0
 10313                           ;radio_driver_SX1276.c: 1283: case 0x01:;radio_driver_SX1276.c: 1284: case 0x02:;radio_d
      +                          river_SX1276.c: 1285: RADIO_FHSSChangeChannel();
 10314  00951E  ECC0  F04D         	call	_RADIO_FHSSChangeChannel	;wreg free
 10315                           
 10316                           ;radio_driver_SX1276.c: 1286: break;
 10317  009522  0012               	return	
 10318  009524                     l21318:
 10319                           
 10320                           ; BSR set to: 0
 10321                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10322  009524  0E01               	movlw	1
 10323  009526  ECC8  F04E         	call	_RADIO_UnhandledInterrupt
 10324                           
 10325                           ;radio_driver_SX1276.c: 1289: break;
 10326  00952A  0012               	return	
 10327  00952C                     l21322:
 10328                           
 10329                           ; BSR set to: 0
 10330  00952C  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
 10331                           
 10332                           ; Switch size 1, requested type "simple"
 10333                           ; Number of cases is 3, Range of values is 0 to 2
 10334                           ; switch strategies available:
 10335                           ; Name         Instructions Cycles
 10336                           ; simple_byte           10     6 (average)
 10337                           ;	Chosen strategy is simple_byte
 10338  00952E  0A00               	xorlw	0	; case 0
 10339  009530  B4D8               	btfsc	status,2,c
 10340  009532  D7F5               	goto	l21316
 10341  009534  0A01               	xorlw	1	; case 1
 10342  009536  B4D8               	btfsc	status,2,c
 10343  009538  D7F2               	goto	l21316
 10344  00953A  0A03               	xorlw	3	; case 2
 10345  00953C  B4D8               	btfsc	status,2,c
 10346  00953E  D7EF               	goto	l21316
 10347  009540  D7F1               	goto	l21318
 10348  009542                     __end_of_RADIO_DIO2:
 10349                           	opt callstack 0
 10350                           
 10351 ;; *************** function _RADIO_DIO1 *****************
 10352 ;; Defined at:
 10353 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;		None
 10356 ;; Auto vars:     Size  Location     Type
 10357 ;;  dioMapping      1  100[BANK0 ] unsigned char 
 10358 ;; Return value:  Size  Location     Type
 10359 ;;                  1    wreg      void 
 10360 ;; Registers used:
 10361 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
 10362 ;; Tracked objects:
 10363 ;;		On entry : 0/0
 10364 ;;		On exit  : 0/0
 10365 ;;		Unchanged: 0/0
 10366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10368 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;Total ram usage:        2 bytes
 10372 ;; Hardware stack levels used:    1
 10373 ;; Hardware stack levels required when called:   17
 10374 ;; This function calls:
 10375 ;;		_RADIO_FHSSChangeChannel
 10376 ;;		_RADIO_RegisterRead
 10377 ;;		_RADIO_RxTimeout
 10378 ;;		_RADIO_UnhandledInterrupt
 10379 ;; This function is called by:
 10380 ;;		_LORAWAN_Mainloop
 10381 ;; This function uses a non-reentrant model
 10382 ;;
 10383                           
 10384                           	psect	text40
 10385  009630                     __ptext40:
 10386                           	opt callstack 0
 10387  009630                     _RADIO_DIO1:
 10388                           	opt callstack 10
 10389                           
 10390                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;;radio_driver_SX1276.c: 1235: dioMappin
      +                          g = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
 10391                           
 10392                           ;incstack = 0
 10393  009630  0E40               	movlw	64
 10394  009632  ECF5  F050         	call	_RADIO_RegisterRead
 10395  009636  0100               	movlb	0	; () banked
 10396  009638  6FC3               	movwf	??_RADIO_DIO1& (0+255),b
 10397  00963A  39C3               	swapf	??_RADIO_DIO1& (0+255),w,b
 10398  00963C  0B0F               	andlw	15
 10399  00963E  0B03               	andlw	3
 10400  009640  6FC4               	movwf	RADIO_DIO1@dioMapping& (0+255),b
 10401                           
 10402                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10403  009642  0E01               	movlw	1
 10404  009644  ECF5  F050         	call	_RADIO_RegisterRead
 10405  009648  0100               	movlb	0	; () banked
 10406  00964A  6FC3               	movwf	??_RADIO_DIO1& (0+255),b
 10407  00964C  BFC3               	btfsc	??_RADIO_DIO1& (0+255),7,b
 10408  00964E  D00B               	goto	l21306
 10409  009650  D012               	goto	l21310
 10410  009652                     l21298:
 10411                           
 10412                           ; BSR set to: 0
 10413                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
 10414  009652  EC40  F04F         	call	_RADIO_RxTimeout	;wreg free
 10415                           
 10416                           ;radio_driver_SX1276.c: 1244: break;
 10417  009656  0012               	return	
 10418  009658                     l21300:
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
 10422  009658  ECC0  F04D         	call	_RADIO_FHSSChangeChannel	;wreg free
 10423                           
 10424                           ;radio_driver_SX1276.c: 1247: break;
 10425  00965C  0012               	return	
 10426  00965E                     l21302:
 10427                           
 10428                           ; BSR set to: 0
 10429                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10430  00965E  0E01               	movlw	1
 10431  009660  ECC8  F04E         	call	_RADIO_UnhandledInterrupt
 10432                           
 10433                           ;radio_driver_SX1276.c: 1250: break;
 10434  009664  0012               	return	
 10435  009666                     l21306:
 10436                           
 10437                           ; BSR set to: 0
 10438  009666  51C4               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 10439                           
 10440                           ; Switch size 1, requested type "simple"
 10441                           ; Number of cases is 2, Range of values is 0 to 1
 10442                           ; switch strategies available:
 10443                           ; Name         Instructions Cycles
 10444                           ; simple_byte            7     4 (average)
 10445                           ;	Chosen strategy is simple_byte
 10446  009668  0A00               	xorlw	0	; case 0
 10447  00966A  B4D8               	btfsc	status,2,c
 10448  00966C  D7F2               	goto	l21298
 10449  00966E  0A01               	xorlw	1	; case 1
 10450  009670  B4D8               	btfsc	status,2,c
 10451  009672  D7F2               	goto	l21300
 10452  009674  D7F4               	goto	l21302
 10453  009676                     l21310:
 10454                           
 10455                           ; BSR set to: 0
 10456  009676  51C4               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 10457                           
 10458                           ; Switch size 1, requested type "simple"
 10459                           ; Number of cases is 1, Range of values is 0 to 0
 10460                           ; switch strategies available:
 10461                           ; Name         Instructions Cycles
 10462                           ; simple_byte            4     3 (average)
 10463                           ;	Chosen strategy is simple_byte
 10464  009678  0A00               	xorlw	0	; case 0
 10465  00967A  0012               	return	
 10466  00967C                     __end_of_RADIO_DIO1:
 10467                           	opt callstack 0
 10468                           
 10469 ;; *************** function _RADIO_RxTimeout *****************
 10470 ;; Defined at:
 10471 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10472 ;; Parameters:    Size  Location     Type
 10473 ;;		None
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;		None
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      void 
 10478 ;; Registers used:
 10479 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/0
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10489 ;;Total ram usage:        0 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:   16
 10492 ;; This function calls:
 10493 ;;		_LORAWAN_RxTimeout
 10494 ;;		_RADIO_RegisterWrite
 10495 ;;		_RADIO_WriteMode
 10496 ;;		_SwTimerStop
 10497 ;; This function is called by:
 10498 ;;		_RADIO_DIO1
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           	psect	text41
 10503  009E80                     __ptext41:
 10504                           	opt callstack 0
 10505  009E80                     _RADIO_RxTimeout:
 10506                           	opt callstack 10
 10507                           
 10508                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
 10509                           
 10510                           ;incstack = 0
 10511  009E80  0101               	movlb	1	; () banked
 10512  009E82  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10513  009E84  ECD5  F051         	call	_SwTimerStop
 10514                           
 10515                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
 10516  009E88  0E80               	movlw	128
 10517  009E8A  0100               	movlb	0	; () banked
 10518  009E8C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10519  009E8E  0E12               	movlw	18
 10520  009E90  ECC5  F051         	call	_RADIO_RegisterWrite
 10521                           
 10522                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10523  009E94  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10524  009E98  0E00               	movlw	0
 10525  009E9A  0100               	movlb	0	; () banked
 10526  009E9C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10527  009E9E  0E00               	movlw	0
 10528  009EA0  EC1C  F036         	call	_RADIO_WriteMode
 10529                           
 10530                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
 10531  009EA4  0101               	movlb	1	; () banked
 10532  009EA6  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 10533                           
 10534                           ; BSR set to: 1
 10535                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
 10536  009EA8  EC3E  F017         	call	_LORAWAN_RxTimeout	;wreg free
 10537  009EAC  0012               	return		;funcret
 10538  009EAE                     __end_of_RADIO_RxTimeout:
 10539                           	opt callstack 0
 10540                           
 10541 ;; *************** function _RADIO_FHSSChangeChannel *****************
 10542 ;; Defined at:
 10543 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10544 ;; Parameters:    Size  Location     Type
 10545 ;;		None
 10546 ;; Auto vars:     Size  Location     Type
 10547 ;;  irqFlags        1    0        unsigned char 
 10548 ;; Return value:  Size  Location     Type
 10549 ;;                  1    wreg      void 
 10550 ;; Registers used:
 10551 ;;		wreg, status,2, status,0, cstack
 10552 ;; Tracked objects:
 10553 ;;		On entry : 0/0
 10554 ;;		On exit  : 0/0
 10555 ;;		Unchanged: 0/0
 10556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10561 ;;Total ram usage:        1 bytes
 10562 ;; Hardware stack levels used:    1
 10563 ;; Hardware stack levels required when called:   11
 10564 ;; This function calls:
 10565 ;;		_RADIO_RegisterRead
 10566 ;;		_RADIO_RegisterWrite
 10567 ;;		_RADIO_WriteFrequency
 10568 ;; This function is called by:
 10569 ;;		_RADIO_DIO1
 10570 ;;		_RADIO_DIO2
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           	psect	text42
 10575  009B80                     __ptext42:
 10576                           	opt callstack 0
 10577  009B80                     _RADIO_FHSSChangeChannel:
 10578                           	opt callstack 15
 10579                           
 10580                           ;incstack = 0
 10581  009B80  0E12               	movlw	18
 10582  009B82  ECF5  F050         	call	_RADIO_RegisterRead
 10583                           
 10584                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
 10585  009B86  0101               	movlb	1	; () banked
 10586  009B88  5147               	movf	(_RadioConfiguration+30)& (0+255),w,b
 10587  009B8A  1148               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 10588  009B8C  B4D8               	btfsc	status,2,c
 10589  009B8E  D00F               	goto	l610
 10590                           
 10591                           ; BSR set to: 1
 10592                           ;radio_driver_SX1276.c: 1164: {;radio_driver_SX1276.c: 1165: if ((0) != RadioConfigurati
      +                          on.fhssNextFrequency)
 10593  009B90  5158               	movf	(_RadioConfiguration+47)& (0+255),w,b
 10594  009B92  1159               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
 10595  009B94  B4D8               	btfsc	status,2,c
 10596  009B96  D00B               	goto	l610
 10597                           
 10598                           ; BSR set to: 1
 10599                           ;radio_driver_SX1276.c: 1166: {;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioC
      +                          onfiguration.fhssNextFrequency());
 10600  009B98  0E00               	movlw	0
 10601  009B9A  0100               	movlb	0	; () banked
 10602  009B9C  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
 10603  009B9E  0E00               	movlw	0
 10604  009BA0  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
 10605  009BA2  0E00               	movlw	0
 10606  009BA4  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
 10607  009BA6  0E00               	movlw	0
 10608  009BA8  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
 10609  009BAA  EC8B  F038         	call	_RADIO_WriteFrequency	;wreg free
 10610  009BAE                     l610:
 10611                           
 10612                           ;radio_driver_SX1276.c: 1168: };radio_driver_SX1276.c: 1169: };radio_driver_SX1276.c: 11
      +                          72: RADIO_RegisterWrite(0x12, 1<<(1));
 10613  009BAE  0E02               	movlw	2
 10614  009BB0  0100               	movlb	0	; () banked
 10615  009BB2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10616  009BB4  0E12               	movlw	18
 10617  009BB6  ECC5  F051         	call	_RADIO_RegisterWrite
 10618  009BBA  0012               	return		;funcret
 10619  009BBC                     __end_of_RADIO_FHSSChangeChannel:
 10620                           	opt callstack 0
 10621                           
 10622 ;; *************** function _RADIO_DIO0 *****************
 10623 ;; Defined at:
 10624 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;		None
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;  opMode          1  153[BANK0 ] unsigned char 
 10629 ;;  dioMapping      1  152[BANK0 ] unsigned char 
 10630 ;; Return value:  Size  Location     Type
 10631 ;;                  1    wreg      void 
 10632 ;; Registers used:
 10633 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10634 ;; Tracked objects:
 10635 ;;		On entry : 0/0
 10636 ;;		On exit  : 0/0
 10637 ;;		Unchanged: 0/0
 10638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10640 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10641 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;Total ram usage:        4 bytes
 10644 ;; Hardware stack levels used:    1
 10645 ;; Hardware stack levels required when called:   17
 10646 ;; This function calls:
 10647 ;;		_RADIO_FSKPacketSent
 10648 ;;		_RADIO_FSKPayloadReady
 10649 ;;		_RADIO_RegisterRead
 10650 ;;		_RADIO_RxDone
 10651 ;;		_RADIO_TxDone
 10652 ;;		_RADIO_UnhandledInterrupt
 10653 ;; This function is called by:
 10654 ;;		_LORAWAN_Mainloop
 10655 ;; This function uses a non-reentrant model
 10656 ;;
 10657                           
 10658                           	psect	text43
 10659  008200                     __ptext43:
 10660                           	opt callstack 0
 10661  008200                     _RADIO_DIO0:
 10662                           	opt callstack 10
 10663                           
 10664                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;;radio_driver_SX1276.c: 1180: uint8_t o
      +                          pMode;;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6
      +                          );
 10665                           
 10666                           ;incstack = 0
 10667  008200  0E40               	movlw	64
 10668  008202  ECF5  F050         	call	_RADIO_RegisterRead
 10669  008206  0100               	movlb	0	; () banked
 10670  008208  6FF6               	movwf	??_RADIO_DIO0& (0+255),b
 10671  00820A  0E06               	movlw	6
 10672  00820C  6FF7               	movwf	(??_RADIO_DIO0+1)& (0+255),b
 10673  00820E                     u24155:
 10674  00820E  90D8               	bcf	status,0,c
 10675  008210  33F6               	rrcf	??_RADIO_DIO0& (0+255),f,b
 10676  008212  2FF7               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
 10677  008214  D7FC               	goto	u24155
 10678  008216  51F6               	movf	??_RADIO_DIO0& (0+255),w,b
 10679  008218  0B03               	andlw	3
 10680  00821A  6FF8               	movwf	RADIO_DIO0@dioMapping& (0+255),b
 10681                           
 10682                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
 10683  00821C  0E01               	movlw	1
 10684  00821E  ECF5  F050         	call	_RADIO_RegisterRead
 10685  008222  0100               	movlb	0	; () banked
 10686  008224  6FF9               	movwf	RADIO_DIO0@opMode& (0+255),b
 10687                           
 10688                           ; BSR set to: 0
 10689                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
 10690  008226  BFF9               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
 10691  008228  D00B               	goto	l21276
 10692  00822A  D02A               	goto	l21292
 10693  00822C                     l21268:
 10694                           
 10695                           ; BSR set to: 0
 10696                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
 10697  00822C  EC7A  F039         	call	_RADIO_RxDone	;wreg free
 10698                           
 10699                           ;radio_driver_SX1276.c: 1191: break;
 10700  008230  0012               	return	
 10701  008232                     l21270:
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
 10705  008232  EC9C  F033         	call	_RADIO_TxDone	;wreg free
 10706                           
 10707                           ;radio_driver_SX1276.c: 1194: break;
 10708  008236  0012               	return	
 10709  008238                     l21272:
 10710                           
 10711                           ; BSR set to: 0
 10712                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10713  008238  0E01               	movlw	1
 10714  00823A  ECC8  F04E         	call	_RADIO_UnhandledInterrupt
 10715                           
 10716                           ;radio_driver_SX1276.c: 1197: break;
 10717  00823E  0012               	return	
 10718  008240                     l21276:
 10719                           
 10720                           ; BSR set to: 0
 10721  008240  51F8               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 10722                           
 10723                           ; Switch size 1, requested type "simple"
 10724                           ; Number of cases is 2, Range of values is 0 to 1
 10725                           ; switch strategies available:
 10726                           ; Name         Instructions Cycles
 10727                           ; simple_byte            7     4 (average)
 10728                           ;	Chosen strategy is simple_byte
 10729  008242  0A00               	xorlw	0	; case 0
 10730  008244  B4D8               	btfsc	status,2,c
 10731  008246  D7F2               	goto	l21268
 10732  008248  0A01               	xorlw	1	; case 1
 10733  00824A  B4D8               	btfsc	status,2,c
 10734  00824C  D7F2               	goto	l21270
 10735  00824E  D7F4               	goto	l21272
 10736  008250                     l21278:
 10737                           
 10738                           ; BSR set to: 0
 10739                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
 10740  008250  0E07               	movlw	7
 10741  008252  17F9               	andwf	RADIO_DIO0@opMode& (0+255),f,b
 10742                           
 10743                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
 10744  008254  0E03               	movlw	3
 10745  008256  19F9               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 10746  008258  A4D8               	btfss	status,2,c
 10747  00825A  D003               	goto	l21282
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;radio_driver_SX1276.c: 1209: {;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
 10751  00825C  EC16  F033         	call	_RADIO_FSKPacketSent	;wreg free
 10752                           
 10753                           ;radio_driver_SX1276.c: 1212: }
 10754  008260  0012               	return	
 10755  008262                     l21282:
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
 10759  008262  0E05               	movlw	5
 10760  008264  19F9               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 10761  008266  A4D8               	btfss	status,2,c
 10762  008268  D003               	goto	l21286
 10763                           
 10764                           ; BSR set to: 0
 10765                           ;radio_driver_SX1276.c: 1214: {;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
 10766  00826A  EC91  F03E         	call	_RADIO_FSKPayloadReady	;wreg free
 10767                           
 10768                           ;radio_driver_SX1276.c: 1217: }
 10769  00826E  0012               	return	
 10770  008270                     l21286:
 10771                           
 10772                           ; BSR set to: 0
 10773                           ;radio_driver_SX1276.c: 1218: else;radio_driver_SX1276.c: 1219: {;radio_driver_SX1276.c:
      +                           1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
 10774  008270  0E00               	movlw	0
 10775  008272  ECC8  F04E         	call	_RADIO_UnhandledInterrupt
 10776  008276  0012               	return	
 10777  008278                     l21288:
 10778                           
 10779                           ; BSR set to: 0
 10780                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
 10781  008278  0E00               	movlw	0
 10782  00827A  ECC8  F04E         	call	_RADIO_UnhandledInterrupt
 10783                           
 10784                           ;radio_driver_SX1276.c: 1225: break;
 10785  00827E  0012               	return	
 10786  008280                     l21292:
 10787                           
 10788                           ; BSR set to: 0
 10789  008280  51F8               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 10790                           
 10791                           ; Switch size 1, requested type "simple"
 10792                           ; Number of cases is 1, Range of values is 0 to 0
 10793                           ; switch strategies available:
 10794                           ; Name         Instructions Cycles
 10795                           ; simple_byte            4     3 (average)
 10796                           ;	Chosen strategy is simple_byte
 10797  008282  0A00               	xorlw	0	; case 0
 10798  008284  B4D8               	btfsc	status,2,c
 10799  008286  D7E4               	goto	l21278
 10800  008288  D7F7               	goto	l21288
 10801  00828A                     __end_of_RADIO_DIO0:
 10802                           	opt callstack 0
 10803                           
 10804 ;; *************** function _RADIO_UnhandledInterrupt *****************
 10805 ;; Defined at:
 10806 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10807 ;; Parameters:    Size  Location     Type
 10808 ;;  modulation      1    wreg     enum E5853
 10809 ;; Auto vars:     Size  Location     Type
 10810 ;;  modulation      1    4[BANK0 ] enum E5853
 10811 ;; Return value:  Size  Location     Type
 10812 ;;                  1    wreg      void 
 10813 ;; Registers used:
 10814 ;;		wreg, status,2, status,0, cstack
 10815 ;; Tracked objects:
 10816 ;;		On entry : 0/0
 10817 ;;		On exit  : 0/0
 10818 ;;		Unchanged: 0/0
 10819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10821 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10823 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10824 ;;Total ram usage:        1 bytes
 10825 ;; Hardware stack levels used:    1
 10826 ;; Hardware stack levels required when called:   10
 10827 ;; This function calls:
 10828 ;;		_RADIO_RegisterWrite
 10829 ;; This function is called by:
 10830 ;;		_RADIO_DIO0
 10831 ;;		_RADIO_DIO1
 10832 ;;		_RADIO_DIO2
 10833 ;;		_RADIO_DIO3
 10834 ;;		_RADIO_DIO4
 10835 ;;		_RADIO_DIO5
 10836 ;; This function uses a non-reentrant model
 10837 ;;
 10838                           
 10839                           	psect	text44
 10840  009D90                     __ptext44:
 10841                           	opt callstack 0
 10842  009D90                     _RADIO_UnhandledInterrupt:
 10843                           	opt callstack 16
 10844                           
 10845                           ;incstack = 0
 10846                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
 10847  009D90  0100               	movlb	0	; () banked
 10848  009D92  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
 10849                           
 10850                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
 10851  009D94  0100               	movlb	0	; () banked
 10852  009D96  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
 10853  009D98  A4D8               	btfss	status,2,c
 10854  009D9A  D006               	goto	l21020
 10855                           
 10856                           ; BSR set to: 0
 10857                           ;radio_driver_SX1276.c: 1145: {;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0
      +                          xFF);
 10858  009D9C  0EFF               	movlw	255
 10859  009D9E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10860  009DA0  0E12               	movlw	18
 10861  009DA2  ECC5  F051         	call	_RADIO_RegisterWrite
 10862                           
 10863                           ;radio_driver_SX1276.c: 1147: }
 10864  009DA6  0012               	return	
 10865  009DA8                     l21020:
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;radio_driver_SX1276.c: 1148: else;radio_driver_SX1276.c: 1149: {;radio_driver_SX1276.c:
      +                           1152: RADIO_RegisterWrite(0x3E, 0xFF);
 10869  009DA8  0EFF               	movlw	255
 10870  009DAA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10871  009DAC  0E3E               	movlw	62
 10872  009DAE  ECC5  F051         	call	_RADIO_RegisterWrite
 10873                           
 10874                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
 10875  009DB2  0EFF               	movlw	255
 10876  009DB4  0100               	movlb	0	; () banked
 10877  009DB6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10878  009DB8  0E3F               	movlw	63
 10879  009DBA  ECC5  F051         	call	_RADIO_RegisterWrite
 10880  009DBE  0012               	return		;funcret
 10881  009DC0                     __end_of_RADIO_UnhandledInterrupt:
 10882                           	opt callstack 0
 10883                           
 10884 ;; *************** function _RADIO_TxDone *****************
 10885 ;; Defined at:
 10886 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10887 ;; Parameters:    Size  Location     Type
 10888 ;;		None
 10889 ;; Auto vars:     Size  Location     Type
 10890 ;;  timeOnAir       4  119[BANK0 ] unsigned long 
 10891 ;; Return value:  Size  Location     Type
 10892 ;;                  1    wreg      void 
 10893 ;; Registers used:
 10894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10895 ;; Tracked objects:
 10896 ;;		On entry : 0/0
 10897 ;;		On exit  : 0/0
 10898 ;;		Unchanged: 0/0
 10899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10901 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10903 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10904 ;;Total ram usage:        8 bytes
 10905 ;; Hardware stack levels used:    1
 10906 ;; Hardware stack levels required when called:   15
 10907 ;; This function calls:
 10908 ;;		_LORAWAN_TxDone
 10909 ;;		_RADIO_RegisterWrite
 10910 ;;		_RADIO_WriteMode
 10911 ;;		_SwTimerReadValue
 10912 ;;		_SwTimerStop
 10913 ;;		___lmul
 10914 ;; This function is called by:
 10915 ;;		_RADIO_DIO0
 10916 ;; This function uses a non-reentrant model
 10917 ;;
 10918                           
 10919                           	psect	text45
 10920  006738                     __ptext45:
 10921                           	opt callstack 0
 10922  006738                     _RADIO_TxDone:
 10923                           	opt callstack 11
 10924                           
 10925                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;;radio_driver_SX1276.c: 1082: SwTimerSt
      +                          op(RadioConfiguration.watchdogTimerId);
 10926                           
 10927                           ;incstack = 0
 10928  006738  0101               	movlb	1	; () banked
 10929  00673A  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10930  00673C  ECD5  F051         	call	_SwTimerStop
 10931                           
 10932                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
 10933  006740  0E08               	movlw	8
 10934  006742  0100               	movlb	0	; () banked
 10935  006744  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10936  006746  0E12               	movlw	18
 10937  006748  ECC5  F051         	call	_RADIO_RegisterWrite
 10938                           
 10939                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10940  00674C  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10941  006750  0E00               	movlw	0
 10942  006752  0100               	movlb	0	; () banked
 10943  006754  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10944  006756  0E00               	movlw	0
 10945  006758  EC1C  F036         	call	_RADIO_WriteMode
 10946                           
 10947                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
 10948  00675C  0101               	movlb	1	; () banked
 10949  00675E  914C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 10950                           
 10951                           ; BSR set to: 1
 10952                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 10953  006760  B94C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 10954  006762  0012               	return	
 10955                           
 10956                           ; BSR set to: 1
 10957                           ;radio_driver_SX1276.c: 1087: {;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)2000
      +                          0) - ((SwTimerReadValue(RadioConfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint
      +                          32_t)(SwTimerReadValue(RadioConfiguration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((
      +                          uint32_t)(SwTimerReadValue(RadioConfiguration.t
 10958  006764  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 10959  006766  EC04  F04D         	call	_SwTimerReadValue
 10960  00676A  0100               	movlb	0	; () banked
 10961  00676C  518C               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 10962  00676E  E108               	bnz	u23550
 10963  006770  0E1F               	movlw	31
 10964  006772  5D89               	subwf	?_SwTimerReadValue& (0+255),w,b
 10965  006774  0EAC               	movlw	172
 10966  006776  598A               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 10967  006778  0EDF               	movlw	223
 10968  00677A  598B               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 10969  00677C  A0D8               	btfss	status,0,c
 10970  00677E  D021               	goto	l20986
 10971  006780                     u23550:
 10972                           
 10973                           ; BSR set to: 0
 10974  006780  0101               	movlb	1	; () banked
 10975  006782  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 10976  006784  EC04  F04D         	call	_SwTimerReadValue
 10977  006788  0E0D               	movlw	13
 10978  00678A  D006               	goto	u23560
 10979  00678C                     u23565:
 10980  00678C  0100               	movlb	0	; () banked
 10981  00678E  90D8               	bcf	status,0,c
 10982  006790  338C               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 10983  006792  338B               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 10984  006794  338A               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 10985  006796  3389               	rrcf	?_SwTimerReadValue& (0+255),f,b
 10986  006798                     u23560:
 10987  006798  2EE8               	decfsz	wreg,f,c
 10988  00679A  D7F8               	goto	u23565
 10989  00679C  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 10990  0067A0  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 10991  0067A4  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 10992  0067A8  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 10993  0067AC  0E7D               	movlw	125
 10994  0067AE  6F96               	movwf	___lmul@multiplicand& (0+255),b
 10995  0067B0  0E00               	movlw	0
 10996  0067B2  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10997  0067B4  0E00               	movlw	0
 10998  0067B6  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10999  0067B8  0E00               	movlw	0
 11000  0067BA  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11001  0067BC  ECD6  F048         	call	___lmul	;wreg free
 11002  0067C0  D021               	goto	L12
 11003  0067C2                     l20986:
 11004                           
 11005                           ; BSR set to: 0
 11006  0067C2  0101               	movlb	1	; () banked
 11007  0067C4  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 11008  0067C6  EC04  F04D         	call	_SwTimerReadValue
 11009  0067CA  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 11010  0067CE  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 11011  0067D2  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 11012  0067D6  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 11013  0067DA  0E7D               	movlw	125
 11014  0067DC  0100               	movlb	0	; () banked
 11015  0067DE  6F96               	movwf	___lmul@multiplicand& (0+255),b
 11016  0067E0  0E00               	movlw	0
 11017  0067E2  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 11018  0067E4  0E00               	movlw	0
 11019  0067E6  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 11020  0067E8  0E00               	movlw	0
 11021  0067EA  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 11022  0067EC  ECD6  F048         	call	___lmul	;wreg free
 11023  0067F0  0E0D               	movlw	13
 11024  0067F2  D006               	goto	u23570
 11025  0067F4                     u23575:
 11026  0067F4  0100               	movlb	0	; () banked
 11027  0067F6  90D8               	bcf	status,0,c
 11028  0067F8  3395               	rrcf	(?___lmul+3)& (0+255),f,b
 11029  0067FA  3394               	rrcf	(?___lmul+2)& (0+255),f,b
 11030  0067FC  3393               	rrcf	(?___lmul+1)& (0+255),f,b
 11031  0067FE  3392               	rrcf	?___lmul& (0+255),f,b
 11032  006800                     u23570:
 11033  006800  2EE8               	decfsz	wreg,f,c
 11034  006802  D7F8               	goto	u23575
 11035  006804                     L12:
 11036  006804  C092  F0DB         	movff	?___lmul,_RADIO_TxDone$796
 11037  006808  C093  F0DC         	movff	?___lmul+1,_RADIO_TxDone$796+1
 11038  00680C  C094  F0DD         	movff	?___lmul+2,_RADIO_TxDone$796+2
 11039  006810  C095  F0DE         	movff	?___lmul+3,_RADIO_TxDone$796+3
 11040  006814  0100               	movlb	0	; () banked
 11041  006816  51DB               	movf	_RADIO_TxDone$796& (0+255),w,b
 11042  006818  0820               	sublw	32
 11043  00681A  6FD7               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
 11044  00681C  0E4E               	movlw	78
 11045  00681E  55DC               	subfwb	(_RADIO_TxDone$796+1)& (0+255),w,b
 11046  006820  6FD8               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
 11047  006822  0E00               	movlw	0
 11048  006824  55DD               	subfwb	(_RADIO_TxDone$796+2)& (0+255),w,b
 11049  006826  6FD9               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
 11050  006828  0E00               	movlw	0
 11051  00682A  55DE               	subfwb	(_RADIO_TxDone$796+3)& (0+255),w,b
 11052  00682C  6FDA               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
 11053                           
 11054                           ; BSR set to: 0
 11055                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
 11056  00682E  C0D7  F0B3         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
 11057  006832  C0D8  F0B4         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 11058  006836  ECEC  F005         	call	_LORAWAN_TxDone	;wreg free
 11059  00683A  0012               	return		;funcret
 11060  00683C                     __end_of_RADIO_TxDone:
 11061                           	opt callstack 0
 11062                           
 11063 ;; *************** function _RADIO_RxDone *****************
 11064 ;; Defined at:
 11065 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;		None
 11068 ;; Auto vars:     Size  Location     Type
 11069 ;;  i               1  149[BANK0 ] unsigned char 
 11070 ;;  irqFlags        1  148[BANK0 ] unsigned char 
 11071 ;; Return value:  Size  Location     Type
 11072 ;;                  1    wreg      void 
 11073 ;; Registers used:
 11074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11075 ;; Tracked objects:
 11076 ;;		On entry : 0/0
 11077 ;;		On exit  : 0/0
 11078 ;;		Unchanged: 0/0
 11079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11081 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11083 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11084 ;;Total ram usage:        2 bytes
 11085 ;; Hardware stack levels used:    1
 11086 ;; Hardware stack levels required when called:   16
 11087 ;; This function calls:
 11088 ;;		_HALSPICSAssert
 11089 ;;		_HALSPICSDeassert
 11090 ;;		_HALSPISend
 11091 ;;		_LORAWAN_RxDone
 11092 ;;		_RADIO_RegisterRead
 11093 ;;		_RADIO_RegisterWrite
 11094 ;;		_RADIO_WriteMode
 11095 ;;		_SwTimerStop
 11096 ;;		___abdiv
 11097 ;; This function is called by:
 11098 ;;		_RADIO_DIO0
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           	psect	text46
 11103  0072F4                     __ptext46:
 11104                           	opt callstack 0
 11105  0072F4                     _RADIO_RxDone:
 11106                           	opt callstack 10
 11107                           
 11108                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;;radio_driver_SX1276.c: 964: irqFlags =
      +                           RADIO_RegisterRead(0x12);
 11109                           
 11110                           ;incstack = 0
 11111  0072F4  0E12               	movlw	18
 11112  0072F6  ECF5  F050         	call	_RADIO_RegisterRead
 11113  0072FA  0100               	movlb	0	; () banked
 11114  0072FC  6FF4               	movwf	RADIO_RxDone@irqFlags& (0+255),b
 11115                           
 11116                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
 11117  0072FE  0E70               	movlw	112
 11118  007300  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11119  007302  0E12               	movlw	18
 11120  007304  ECC5  F051         	call	_RADIO_RegisterWrite
 11121                           
 11122                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
 11123  007308  0100               	movlb	0	; () banked
 11124  00730A  51F4               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
 11125  00730C  0B50               	andlw	80
 11126  00730E  0A50               	xorlw	80
 11127  007310  A4D8               	btfss	status,2,c
 11128  007312  0012               	return	
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;radio_driver_SX1276.c: 969: {;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguratio
      +                          n.watchdogTimerId);
 11132  007314  0101               	movlb	1	; () banked
 11133  007316  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 11134  007318  ECD5  F051         	call	_SwTimerStop
 11135                           
 11136                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
 11137  00731C  0E1C               	movlw	28
 11138  00731E  ECF5  F050         	call	_RADIO_RegisterRead
 11139  007322  0100               	movlb	0	; () banked
 11140  007324  6FF5               	movwf	RADIO_RxDone@i& (0+255),b
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
 11144  007326  0101               	movlb	1	; () banked
 11145  007328  5145               	movf	(_RadioConfiguration+28)& (0+255),w,b
 11146  00732A  B4D8               	btfsc	status,2,c
 11147  00732C  D004               	goto	u23470
 11148                           
 11149                           ; BSR set to: 1
 11150  00732E  0100               	movlb	0	; () banked
 11151  007330  ABF4               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
 11152                           
 11153                           ; BSR set to: 0
 11154  007332  ADF5               	btfss	RADIO_RxDone@i& (0+255),6,b
 11155  007334  D03C               	goto	l20910
 11156  007336                     u23470:
 11157                           
 11158                           ;radio_driver_SX1276.c: 976: {;radio_driver_SX1276.c: 984: RadioConfiguration.dataBuffer
      +                          Len = RADIO_RegisterRead(0x13);
 11159  007336  0E13               	movlw	19
 11160  007338  ECF5  F050         	call	_RADIO_RegisterRead
 11161  00733C  0101               	movlb	1	; () banked
 11162  00733E  6F4D               	movwf	(_RadioConfiguration+36)& (0+255),b
 11163                           
 11164                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
 11165  007340  0E00               	movlw	0
 11166  007342  0100               	movlb	0	; () banked
 11167  007344  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11168  007346  0E0D               	movlw	13
 11169  007348  ECC5  F051         	call	_RADIO_RegisterWrite
 11170                           
 11171                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
 11172  00734C  EC6C  F054         	call	_HALSPICSAssert	;wreg free
 11173                           
 11174                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
 11175  007350  0E00               	movlw	0
 11176  007352  ECBB  F053         	call	_HALSPISend
 11177                           
 11178                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 11179  007356  0E00               	movlw	0
 11180  007358  0100               	movlb	0	; () banked
 11181  00735A  6FF5               	movwf	RADIO_RxDone@i& (0+255),b
 11182  00735C  D00F               	goto	l20900
 11183  00735E                     l20896:
 11184                           
 11185                           ; BSR set to: 0
 11186                           ;radio_driver_SX1276.c: 990: {;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer
      +                          [i] = HALSPISend(0xFF);
 11187  00735E  51F5               	movf	RADIO_RxDone@i& (0+255),w,b
 11188  007360  0101               	movlb	1	; () banked
 11189  007362  254E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 11190  007364  6ED9               	movwf	fsr2l,c
 11191  007366  0100               	movlb	0	; () banked
 11192  007368  0E00               	movlw	0
 11193  00736A  0101               	movlb	1	; () banked
 11194  00736C  214F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 11195  00736E  6EDA               	movwf	fsr2h,c
 11196  007370  0EFF               	movlw	255
 11197  007372  ECBB  F053         	call	_HALSPISend
 11198  007376  6EDF               	movwf	indf2,c
 11199  007378  0100               	movlb	0	; () banked
 11200  00737A  2BF5               	incf	RADIO_RxDone@i& (0+255),f,b
 11201  00737C                     l20900:
 11202                           
 11203                           ; BSR set to: 0
 11204  00737C  0101               	movlb	1	; () banked
 11205  00737E  514D               	movf	(_RadioConfiguration+36)& (0+255),w,b
 11206  007380  0100               	movlb	0	; () banked
 11207  007382  5DF5               	subwf	RADIO_RxDone@i& (0+255),w,b
 11208  007384  A0D8               	btfss	status,0,c
 11209  007386  D7EB               	goto	l20896
 11210                           
 11211                           ; BSR set to: 0
 11212                           ;radio_driver_SX1276.c: 992: };radio_driver_SX1276.c: 993: HALSPICSDeassert();
 11213  007388  EC6A  F054         	call	_HALSPICSDeassert	;wreg free
 11214                           
 11215                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
 11216  00738C  0101               	movlb	1	; () banked
 11217  00738E  854C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 11218                           
 11219                           ; BSR set to: 1
 11220                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
 11221  007390  0E19               	movlw	25
 11222  007392  ECF5  F050         	call	_RADIO_RegisterRead
 11223  007396  0101               	movlb	1	; () banked
 11224  007398  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 11225                           
 11226                           ; BSR set to: 1
 11227                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
 11228  00739A  0E04               	movlw	4
 11229  00739C  0100               	movlb	0	; () banked
 11230  00739E  6F60               	movwf	___abdiv@divisor& (0+255),b
 11231  0073A0  0101               	movlb	1	; () banked
 11232  0073A2  515B               	movf	(_RadioConfiguration+50)& (0+255),w,b
 11233  0073A4  EC26  F047         	call	___abdiv
 11234  0073A8  0101               	movlb	1	; () banked
 11235  0073AA  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 11236                           
 11237                           ;radio_driver_SX1276.c: 998: }
 11238  0073AC  D002               	goto	l20912
 11239  0073AE                     l20910:
 11240                           
 11241                           ; BSR set to: 0
 11242                           ;radio_driver_SX1276.c: 999: else;radio_driver_SX1276.c: 1000: {;radio_driver_SX1276.c: 
      +                          1002: RadioConfiguration.flags |= (1 << (3));
 11243  0073AE  0101               	movlb	1	; () banked
 11244  0073B0  874C               	bsf	(_RadioConfiguration+35)& (0+255),3,b
 11245  0073B2                     l20912:
 11246                           
 11247                           ; BSR set to: 1
 11248                           ;radio_driver_SX1276.c: 1003: };radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
 11249  0073B2  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 11250  0073B6  0E00               	movlw	0
 11251  0073B8  0100               	movlb	0	; () banked
 11252  0073BA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11253  0073BC  0E00               	movlw	0
 11254  0073BE  EC1C  F036         	call	_RADIO_WriteMode
 11255                           
 11256                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
 11257  0073C2  0101               	movlb	1	; () banked
 11258  0073C4  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 11259                           
 11260                           ; BSR set to: 1
 11261                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 11262  0073C6  C14E  F1DA         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 11263  0073CA  C14F  F1DB         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 11264  0073CE  C14D  F1DC         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 11265  0073D2  EC56  F000         	call	_LORAWAN_RxDone	;wreg free
 11266  0073D6  0012               	return		;funcret
 11267  0073D8                     __end_of_RADIO_RxDone:
 11268                           	opt callstack 0
 11269                           
 11270 ;; *************** function ___abdiv *****************
 11271 ;; Defined at:
 11272 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\abdiv.c"
 11273 ;; Parameters:    Size  Location     Type
 11274 ;;  dividend        1    wreg     char 
 11275 ;;  divisor         1    0[BANK0 ] char 
 11276 ;; Auto vars:     Size  Location     Type
 11277 ;;  dividend        1    6[BANK0 ] char 
 11278 ;;  quotient        1    5[BANK0 ] char 
 11279 ;;  sign            1    4[BANK0 ] unsigned char 
 11280 ;;  counter         1    3[BANK0 ] unsigned char 
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      char 
 11283 ;; Registers used:
 11284 ;;		wreg, status,2, status,0
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11290 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11291 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11292 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11293 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11294 ;;Total ram usage:        7 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:    7
 11297 ;; This function calls:
 11298 ;;		Nothing
 11299 ;; This function is called by:
 11300 ;;		_RADIO_RxDone
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text47
 11305  008E4C                     __ptext47:
 11306                           	opt callstack 0
 11307  008E4C                     ___abdiv:
 11308                           	opt callstack 18
 11309                           
 11310                           ;incstack = 0
 11311                           ;___abdiv@dividend stored from wreg
 11312  008E4C  0100               	movlb	0	; () banked
 11313  008E4E  6F66               	movwf	___abdiv@dividend& (0+255),b
 11314  008E50  0E00               	movlw	0
 11315  008E52  0100               	movlb	0	; () banked
 11316  008E54  6F64               	movwf	___abdiv@sign& (0+255),b
 11317                           
 11318                           ; BSR set to: 0
 11319  008E56  AF60               	btfss	___abdiv@divisor& (0+255),7,b
 11320  008E58  D003               	goto	l20838
 11321                           
 11322                           ; BSR set to: 0
 11323  008E5A  6D60               	negf	___abdiv@divisor& (0+255),b
 11324                           
 11325                           ; BSR set to: 0
 11326  008E5C  0E01               	movlw	1
 11327  008E5E  6F64               	movwf	___abdiv@sign& (0+255),b
 11328  008E60                     l20838:
 11329                           
 11330                           ; BSR set to: 0
 11331  008E60  AF66               	btfss	___abdiv@dividend& (0+255),7,b
 11332  008E62  D003               	goto	l20844
 11333                           
 11334                           ; BSR set to: 0
 11335  008E64  6D66               	negf	___abdiv@dividend& (0+255),b
 11336                           
 11337                           ; BSR set to: 0
 11338  008E66  0E01               	movlw	1
 11339  008E68  1B64               	xorwf	___abdiv@sign& (0+255),f,b
 11340  008E6A                     l20844:
 11341                           
 11342                           ; BSR set to: 0
 11343  008E6A  0E00               	movlw	0
 11344  008E6C  6F65               	movwf	___abdiv@quotient& (0+255),b
 11345                           
 11346                           ; BSR set to: 0
 11347  008E6E  5160               	movf	___abdiv@divisor& (0+255),w,b
 11348  008E70  B4D8               	btfsc	status,2,c
 11349  008E72  D01A               	goto	l20866
 11350                           
 11351                           ; BSR set to: 0
 11352  008E74  0E01               	movlw	1
 11353  008E76  6F63               	movwf	___abdiv@counter& (0+255),b
 11354  008E78  D003               	goto	l20854
 11355  008E7A                     l20850:
 11356                           
 11357                           ; BSR set to: 0
 11358  008E7A  90D8               	bcf	status,0,c
 11359  008E7C  3760               	rlcf	___abdiv@divisor& (0+255),f,b
 11360                           
 11361                           ; BSR set to: 0
 11362  008E7E  2B63               	incf	___abdiv@counter& (0+255),f,b
 11363  008E80                     l20854:
 11364                           
 11365                           ; BSR set to: 0
 11366  008E80  C060  F061         	movff	___abdiv@divisor,??___abdiv
 11367  008E84  6B62               	clrf	(??___abdiv+1)& (0+255),b
 11368  008E86  BF61               	btfsc	??___abdiv& (0+255),7,b
 11369  008E88  0762               	decf	(??___abdiv+1)& (0+255),f,b
 11370  008E8A  AF61               	btfss	??___abdiv& (0+255),7,b
 11371  008E8C  D7F6               	goto	l20850
 11372  008E8E                     u23410:
 11373                           
 11374                           ; BSR set to: 0
 11375  008E8E  90D8               	bcf	status,0,c
 11376  008E90  3765               	rlcf	___abdiv@quotient& (0+255),f,b
 11377  008E92  5160               	movf	___abdiv@divisor& (0+255),w,b
 11378  008E94  5D66               	subwf	___abdiv@dividend& (0+255),w,b
 11379  008E96  A0D8               	btfss	status,0,c
 11380  008E98  D003               	goto	l20862
 11381                           
 11382                           ; BSR set to: 0
 11383  008E9A  5160               	movf	___abdiv@divisor& (0+255),w,b
 11384  008E9C  5F66               	subwf	___abdiv@dividend& (0+255),f,b
 11385                           
 11386                           ; BSR set to: 0
 11387  008E9E  8165               	bsf	___abdiv@quotient& (0+255),0,b
 11388  008EA0                     l20862:
 11389                           
 11390                           ; BSR set to: 0
 11391  008EA0  90D8               	bcf	status,0,c
 11392  008EA2  3360               	rrcf	___abdiv@divisor& (0+255),f,b
 11393                           
 11394                           ; BSR set to: 0
 11395  008EA4  2F63               	decfsz	___abdiv@counter& (0+255),f,b
 11396  008EA6  D7F3               	goto	u23410
 11397  008EA8                     l20866:
 11398                           
 11399                           ; BSR set to: 0
 11400  008EA8  5164               	movf	___abdiv@sign& (0+255),w,b
 11401  008EAA  A4D8               	btfss	status,2,c
 11402                           
 11403                           ; BSR set to: 0
 11404  008EAC  6D65               	negf	___abdiv@quotient& (0+255),b
 11405                           
 11406                           ; BSR set to: 0
 11407  008EAE  5165               	movf	___abdiv@quotient& (0+255),w,b
 11408                           
 11409                           ; BSR set to: 0
 11410  008EB0  0012               	return		;funcret
 11411  008EB2                     __end_of___abdiv:
 11412                           	opt callstack 0
 11413                           
 11414 ;; *************** function _RADIO_FSKPayloadReady *****************
 11415 ;; Defined at:
 11416 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 11417 ;; Parameters:    Size  Location     Type
 11418 ;;		None
 11419 ;; Auto vars:     Size  Location     Type
 11420 ;;  i               1  149[BANK0 ] unsigned char 
 11421 ;;  irqFlags        1  148[BANK0 ] unsigned char 
 11422 ;; Return value:  Size  Location     Type
 11423 ;;                  1    wreg      void 
 11424 ;; Registers used:
 11425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11426 ;; Tracked objects:
 11427 ;;		On entry : 0/0
 11428 ;;		On exit  : 0/0
 11429 ;;		Unchanged: 0/0
 11430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11432 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11434 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11435 ;;Total ram usage:        2 bytes
 11436 ;; Hardware stack levels used:    1
 11437 ;; Hardware stack levels required when called:   16
 11438 ;; This function calls:
 11439 ;;		_HALSPICSAssert
 11440 ;;		_HALSPICSDeassert
 11441 ;;		_HALSPISend
 11442 ;;		_LORAWAN_RxDone
 11443 ;;		_LORAWAN_RxTimeout
 11444 ;;		_RADIO_RegisterRead
 11445 ;;		_RADIO_WriteMode
 11446 ;;		_SwTimerStop
 11447 ;; This function is called by:
 11448 ;;		_RADIO_DIO0
 11449 ;; This function uses a non-reentrant model
 11450 ;;
 11451                           
 11452                           	psect	text48
 11453  007D22                     __ptext48:
 11454                           	opt callstack 0
 11455  007D22                     _RADIO_FSKPayloadReady:
 11456                           	opt callstack 10
 11457                           
 11458                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;;radio_driver_SX1276.c: 1013: uint8_t i;;
      +                          radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
 11459                           
 11460                           ; BSR set to: 0
 11461                           ;incstack = 0
 11462  007D22  0E3F               	movlw	63
 11463  007D24  ECF5  F050         	call	_RADIO_RegisterRead
 11464  007D28  0100               	movlb	0	; () banked
 11465  007D2A  6FF4               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
 11466                           
 11467                           ; BSR set to: 0
 11468                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
 11469  007D2C  A5F4               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
 11470  007D2E  0012               	return	
 11471                           
 11472                           ; BSR set to: 0
 11473                           ;radio_driver_SX1276.c: 1017: {;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfigurat
      +                          ion.watchdogTimerId);
 11474  007D30  0101               	movlb	1	; () banked
 11475  007D32  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 11476  007D34  ECD5  F051         	call	_SwTimerStop
 11477                           
 11478                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 11479  007D38  0101               	movlb	1	; () banked
 11480  007D3A  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 11481  007D3C  ECD5  F051         	call	_SwTimerStop
 11482                           
 11483                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
 11484  007D40  EC6C  F054         	call	_HALSPICSAssert	;wreg free
 11485                           
 11486                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
 11487  007D44  0E00               	movlw	0
 11488  007D46  ECBB  F053         	call	_HALSPISend
 11489                           
 11490                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
 11491  007D4A  0EFF               	movlw	255
 11492  007D4C  ECBB  F053         	call	_HALSPISend
 11493  007D50  0101               	movlb	1	; () banked
 11494  007D52  6F4D               	movwf	(_RadioConfiguration+36)& (0+255),b
 11495                           
 11496                           ; BSR set to: 1
 11497                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 11498  007D54  0E00               	movlw	0
 11499  007D56  0100               	movlb	0	; () banked
 11500  007D58  6FF5               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
 11501  007D5A  D00F               	goto	l20936
 11502  007D5C                     l20932:
 11503                           
 11504                           ; BSR set to: 0
 11505                           ;radio_driver_SX1276.c: 1029: {;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuff
      +                          er[i] = HALSPISend(0xFF);
 11506  007D5C  51F5               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
 11507  007D5E  0101               	movlb	1	; () banked
 11508  007D60  254E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 11509  007D62  6ED9               	movwf	fsr2l,c
 11510  007D64  0100               	movlb	0	; () banked
 11511  007D66  0E00               	movlw	0
 11512  007D68  0101               	movlb	1	; () banked
 11513  007D6A  214F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 11514  007D6C  6EDA               	movwf	fsr2h,c
 11515  007D6E  0EFF               	movlw	255
 11516  007D70  ECBB  F053         	call	_HALSPISend
 11517  007D74  6EDF               	movwf	indf2,c
 11518  007D76  0100               	movlb	0	; () banked
 11519  007D78  2BF5               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
 11520  007D7A                     l20936:
 11521                           
 11522                           ; BSR set to: 0
 11523  007D7A  0101               	movlb	1	; () banked
 11524  007D7C  514D               	movf	(_RadioConfiguration+36)& (0+255),w,b
 11525  007D7E  0100               	movlb	0	; () banked
 11526  007D80  5DF5               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
 11527  007D82  A0D8               	btfss	status,0,c
 11528  007D84  D7EB               	goto	l20932
 11529                           
 11530                           ; BSR set to: 0
 11531                           ;radio_driver_SX1276.c: 1031: };radio_driver_SX1276.c: 1032: HALSPICSDeassert();
 11532  007D86  EC6A  F054         	call	_HALSPICSDeassert	;wreg free
 11533                           
 11534                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 11535  007D8A  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 11536  007D8E  0E00               	movlw	0
 11537  007D90  0100               	movlb	0	; () banked
 11538  007D92  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11539  007D94  0E00               	movlw	0
 11540  007D96  EC1C  F036         	call	_RADIO_WriteMode
 11541                           
 11542                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
 11543  007D9A  0101               	movlb	1	; () banked
 11544  007D9C  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 11545                           
 11546                           ; BSR set to: 1
 11547                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
 11548  007D9E  0E80               	movlw	128
 11549  007DA0  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 11550                           
 11551                           ; BSR set to: 1
 11552                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
 11553  007DA2  0545               	decf	(_RadioConfiguration+28)& (0+255),w,b
 11554  007DA4  A4D8               	btfss	status,2,c
 11555  007DA6  D003               	goto	u23520
 11556                           
 11557                           ; BSR set to: 1
 11558                           ;radio_driver_SX1276.c: 1040: {;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags &
      +                           (1<<(1))))
 11559  007DA8  0100               	movlb	0	; () banked
 11560  007DAA  A3F4               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 11561  007DAC  D003               	goto	l20952
 11562  007DAE                     u23520:
 11563                           
 11564                           ;radio_driver_SX1276.c: 1042: {;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |=
      +                           (1 << (2));
 11565  007DAE  0101               	movlb	1	; () banked
 11566  007DB0  854C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 11567                           
 11568                           ;radio_driver_SX1276.c: 1044: }
 11569  007DB2  D002               	goto	l20956
 11570  007DB4                     l20952:
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;radio_driver_SX1276.c: 1045: else;radio_driver_SX1276.c: 1046: {;radio_driver_SX1276.c:
      +                           1047: RadioConfiguration.flags &= ~(1 << (2));
 11574  007DB4  0101               	movlb	1	; () banked
 11575  007DB6  954C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 11576  007DB8                     l20956:
 11577                           
 11578                           ; BSR set to: 1
 11579                           ;radio_driver_SX1276.c: 1053: };radio_driver_SX1276.c: 1055: if ((RadioConfiguration.fla
      +                          gs & (1 << (2))) != 0)
 11580  007DB8  A54C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 11581  007DBA  D009               	goto	l20960
 11582                           
 11583                           ; BSR set to: 1
 11584                           ;radio_driver_SX1276.c: 1056: {;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfigu
      +                          ration.dataBuffer, RadioConfiguration.dataBufferLen);
 11585  007DBC  C14E  F1DA         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 11586  007DC0  C14F  F1DB         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 11587  007DC4  C14D  F1DC         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 11588  007DC8  EC56  F000         	call	_LORAWAN_RxDone	;wreg free
 11589                           
 11590                           ;radio_driver_SX1276.c: 1058: }
 11591  007DCC  0012               	return	
 11592  007DCE                     l20960:
 11593                           
 11594                           ; BSR set to: 1
 11595                           ;radio_driver_SX1276.c: 1059: else;radio_driver_SX1276.c: 1060: {;radio_driver_SX1276.c:
      +                           1061: LORAWAN_RxTimeout();
 11596  007DCE  EC3E  F017         	call	_LORAWAN_RxTimeout	;wreg free
 11597  007DD2  0012               	return		;funcret
 11598  007DD4                     __end_of_RADIO_FSKPayloadReady:
 11599                           	opt callstack 0
 11600                           
 11601 ;; *************** function _LORAWAN_RxTimeout *****************
 11602 ;; Defined at:
 11603 ;;		line 465 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;		None
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;  minim           4   94[BANK0 ] unsigned long 
 11608 ;;  i               1   98[BANK0 ] unsigned char 
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  1    wreg      void 
 11611 ;; Registers used:
 11612 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11619 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11620 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11621 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11622 ;;Total ram usage:        9 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:   15
 11625 ;; This function calls:
 11626 ;;		_LORAWAN_ReceiveWindow2Callback
 11627 ;;		_RADIO_Transmit
 11628 ;;		_ResetParametersForConfirmedTransmission
 11629 ;;		_ResetParametersForUnconfirmedTransmission
 11630 ;;		_RxData
 11631 ;;		_SelectChannelForTransmission
 11632 ;;		_SetJoinFailState
 11633 ;;		_SwTimerSetTimeout
 11634 ;;		_SwTimerStart
 11635 ;;		___lldiv
 11636 ;; This function is called by:
 11637 ;;		_RADIO_FSKPayloadReady
 11638 ;;		_RADIO_RxTimeout
 11639 ;;		_RADIO_RxFSKTimeout
 11640 ;;		_RADIO_WatchdogTimeout
 11641 ;; This function uses a non-reentrant model
 11642 ;;
 11643                           
 11644                           	psect	text49
 11645  002E7C                     __ptext49:
 11646                           	opt callstack 0
 11647  002E7C                     _LORAWAN_RxTimeout:
 11648                           	opt callstack 10
 11649                           
 11650                           ;lorawan_eu.c: 467: uint8_t i;;lorawan_eu.c: 468: uint32_t minim = (4294967295UL);
 11651                           
 11652                           ;incstack = 0
 11653  002E7C  0100               	movlb	0	; () banked
 11654  002E7E  69BE               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 11655  002E80  69BF               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 11656  002E82  69C0               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 11657  002E84  69C1               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 11658                           
 11659                           ;lorawan_eu.c: 470: if (loRa.macStatus.macPause == 0)
 11660  002E86  0102               	movlb	2	; () banked
 11661  002E88  B108               	btfsc	(_loRa+3)& (0+255),0,b
 11662  002E8A  D15E               	goto	l20730
 11663                           
 11664                           ; BSR set to: 2
 11665                           ;lorawan_eu.c: 471: {;lorawan_eu.c: 473: if ( loRa.macStatus.macState == RX1_OPEN )
 11666  002E8C  5107               	movf	(_loRa+2)& (0+255),w,b
 11667  002E8E  0B0F               	andlw	15
 11668  002E90  0A03               	xorlw	3
 11669  002E92  A4D8               	btfss	status,2,c
 11670  002E94  D011               	goto	l1067
 11671                           
 11672                           ; BSR set to: 2
 11673                           ;lorawan_eu.c: 474: {;lorawan_eu.c: 475: if (CLASS_A == loRa.deviceClass)
 11674  002E96  5117               	movf	(_loRa+18)& (0+255),w,b
 11675  002E98  A4D8               	btfss	status,2,c
 11676  002E9A  D005               	goto	l20664
 11677                           
 11678                           ; BSR set to: 2
 11679                           ;lorawan_eu.c: 476: {;lorawan_eu.c: 477: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 11680  002E9C  5107               	movf	(_loRa+2)& (0+255),w,b
 11681  002E9E  0BF0               	andlw	-16
 11682  002EA0  0904               	iorlw	4
 11683  002EA2  6F07               	movwf	(_loRa+2)& (0+255),b
 11684                           
 11685                           ;lorawan_eu.c: 478: }
 11686  002EA4  0012               	return	
 11687  002EA6                     l20664:
 11688                           
 11689                           ; BSR set to: 2
 11690                           ;lorawan_eu.c: 479: else if (CLASS_C == loRa.deviceClass)
 11691  002EA6  0E02               	movlw	2
 11692  002EA8  1917               	xorwf	(_loRa+18)& (0+255),w,b
 11693  002EAA  A4D8               	btfss	status,2,c
 11694  002EAC  0012               	return	
 11695                           
 11696                           ; BSR set to: 2
 11697                           ;lorawan_eu.c: 480: {;lorawan_eu.c: 481: LORAWAN_ReceiveWindow2Callback(0);
 11698  002EAE  0E00               	movlw	0
 11699  002EB0  6EE6               	movwf	postinc1,c
 11700  002EB2  EC5B  F03A         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
 11701                           
 11702                           ;lorawan_eu.c: 482: };lorawan_eu.c: 483: }
 11703  002EB6  0012               	return	
 11704  002EB8                     l1067:
 11705                           
 11706                           ; BSR set to: 2
 11707                           ;lorawan_eu.c: 484: else;lorawan_eu.c: 485: {;lorawan_eu.c: 487: if (loRa.lorawanMacStat
      +                          us.joining == 1)
 11708  002EB8  A505               	btfss	_loRa& (0+255),2,b
 11709  002EBA  D003               	goto	l1072
 11710                           
 11711                           ; BSR set to: 2
 11712                           ;lorawan_eu.c: 488: {;lorawan_eu.c: 489: SetJoinFailState();
 11713  002EBC  EC25  F050         	call	_SetJoinFailState	;wreg free
 11714                           
 11715                           ;lorawan_eu.c: 490: }
 11716  002EC0  0012               	return	
 11717  002EC2                     l1072:
 11718                           
 11719                           ; BSR set to: 2
 11720                           ;lorawan_eu.c: 492: else if (loRa.macStatus.networkJoined == 1)
 11721  002EC2  A907               	btfss	(_loRa+2)& (0+255),4,b
 11722  002EC4  0012               	return	
 11723                           
 11724                           ; BSR set to: 2
 11725                           ;lorawan_eu.c: 493: {;lorawan_eu.c: 494: if (loRa.lorawanMacStatus.ackRequiredFromNextDo
      +                          wnlinkMessage == 1)
 11726  002EC6  A105               	btfss	_loRa& (0+255),0,b
 11727  002EC8  D058               	goto	l20686
 11728                           
 11729                           ; BSR set to: 2
 11730                           ;lorawan_eu.c: 495: {;lorawan_eu.c: 496: if (loRa.counterRepetitionsConfirmedUplink <= l
      +                          oRa.maxRepetitionsConfirmedUplink)
 11731  002ECA  51DE               	movf	(_loRa+217)& (0+255),w,b
 11732  002ECC  5DDC               	subwf	(_loRa+215)& (0+255),w,b
 11733  002ECE  A0D8               	btfss	status,0,c
 11734  002ED0  D038               	goto	l20680
 11735                           
 11736                           ; BSR set to: 2
 11737                           ;lorawan_eu.c: 497: {;lorawan_eu.c: 498: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 11738  002ED2  5107               	movf	(_loRa+2)& (0+255),w,b
 11739  002ED4  0BF0               	andlw	-16
 11740  002ED6  0906               	iorlw	6
 11741  002ED8  6F07               	movwf	(_loRa+2)& (0+255),b
 11742                           
 11743                           ; BSR set to: 2
 11744                           ;lorawan_eu.c: 499: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 11745  002EDA  51A5               	movf	(_loRa+160)& (0+255),w,b
 11746  002EDC  0100               	movlb	0	; () banked
 11747  002EDE  6FBA               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11748  002EE0  0102               	movlb	2	; () banked
 11749  002EE2  51A6               	movf	(_loRa+161)& (0+255),w,b
 11750  002EE4  0100               	movlb	0	; () banked
 11751  002EE6  6FBB               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 11752  002EE8  6BBC               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 11753  002EEA  6BBD               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 11754  002EEC  0E0C               	movlw	12
 11755  002EEE                     u22935:
 11756  002EEE  90D8               	bcf	status,0,c
 11757  002EF0  37BA               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 11758  002EF2  37BB               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 11759  002EF4  37BC               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 11760  002EF6  37BD               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 11761  002EF8  2EE8               	decfsz	wreg,f,c
 11762  002EFA  D7F9               	goto	u22935
 11763  002EFC  C0BA  F060         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 11764  002F00  C0BB  F061         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 11765  002F04  C0BC  F062         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 11766  002F08  C0BD  F063         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 11767  002F0C  0E7D               	movlw	125
 11768  002F0E  6F64               	movwf	___lldiv@divisor& (0+255),b
 11769  002F10  0E00               	movlw	0
 11770  002F12  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11771  002F14  0E00               	movlw	0
 11772  002F16  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11773  002F18  0E00               	movlw	0
 11774  002F1A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11775  002F1C  EC96  F042         	call	___lldiv	;wreg free
 11776  002F20  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 11777  002F24  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 11778  002F28  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 11779  002F2C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 11780  002F30  0102               	movlb	2	; () banked
 11781  002F32  51ED               	movf	(_loRa+232)& (0+255),w,b
 11782  002F34  EC7F  F04C         	call	_SwTimerSetTimeout
 11783                           
 11784                           ;lorawan_eu.c: 500: SwTimerStart(loRa.ackTimeoutTimerId);
 11785  002F38  0102               	movlb	2	; () banked
 11786  002F3A  51ED               	movf	(_loRa+232)& (0+255),w,b
 11787  002F3C  EC73  F040         	call	_SwTimerStart
 11788                           
 11789                           ;lorawan_eu.c: 501: }
 11790  002F40  0012               	return	
 11791  002F42                     l20680:
 11792                           
 11793                           ; BSR set to: 2
 11794                           ;lorawan_eu.c: 502: else;lorawan_eu.c: 503: {;lorawan_eu.c: 504: ResetParametersForConfi
      +                          rmedTransmission ();
 11795  002F42  EC98  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
 11796  002F46                     
 11797                           ;lorawan_eu.c: 505: if (rxPayload.RxAppData != (0))
 11798  002F46  0101               	movlb	1	; () banked
 11799  002F48  510E               	movf	_rxPayload& (0+255),w,b
 11800  002F4A  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 11801  002F4C  B4D8               	btfsc	status,2,c
 11802  002F4E  0012               	return	
 11803                           
 11804                           ; BSR set to: 1
 11805                           ;lorawan_eu.c: 506: {;lorawan_eu.c: 507: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11806  002F50  0E00               	movlw	0
 11807  002F52  0100               	movlb	0	; () banked
 11808  002F54  6F60               	movwf	RxData@pData& (0+255),b
 11809  002F56  0E00               	movlw	0
 11810  002F58  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11811  002F5A  0E00               	movlw	0
 11812  002F5C  6F62               	movwf	RxData@dataLength& (0+255),b
 11813  002F5E  0E00               	movlw	0
 11814  002F60  6F63               	movwf	RxData@status& (0+255),b
 11815  002F62  D801               	call	u22958
 11816  002F64  0012               	return	
 11817  002F66                     u22958:
 11818  002F66  0005               	push	
 11819  002F68  6EFA               	movwf	pclath,c
 11820  002F6A  0101               	movlb	1	; () banked
 11821  002F6C  510E               	movf	_rxPayload& (0+255),w,b
 11822  002F6E  6EFD               	movwf	tosl,c
 11823  002F70  510F               	movf	(_rxPayload+1)& (0+255),w,b
 11824  002F72  6EFE               	movwf	tosh,c
 11825  002F74  6AFF               	clrf	tosu,c
 11826  002F76  50FA               	movf	pclath,w,c
 11827  002F78  0012               	return		;indir
 11828  002F7A                     l20686:
 11829                           
 11830                           ; BSR set to: 2
 11831                           ;lorawan_eu.c: 512: else;lorawan_eu.c: 513: {;lorawan_eu.c: 514: if (loRa.counterRepetit
      +                          ionsUnconfirmedUplink <= loRa.maxRepetitionsUnconfirmedUplink)
 11832  002F7A  51DD               	movf	(_loRa+216)& (0+255),w,b
 11833  002F7C  5DDB               	subwf	(_loRa+214)& (0+255),w,b
 11834  002F7E  A0D8               	btfss	status,0,c
 11835  002F80  D0C7               	goto	l20724
 11836                           
 11837                           ; BSR set to: 2
 11838                           ;lorawan_eu.c: 515: {;lorawan_eu.c: 516: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 11839  002F82  5107               	movf	(_loRa+2)& (0+255),w,b
 11840  002F84  0BF0               	andlw	-16
 11841  002F86  0906               	iorlw	6
 11842  002F88  6F07               	movwf	(_loRa+2)& (0+255),b
 11843                           
 11844                           ; BSR set to: 2
 11845                           ;lorawan_eu.c: 517: if (SelectChannelForTransmission (1) == OK)
 11846  002F8A  0E01               	movlw	1
 11847  002F8C  EC8A  F046         	call	_SelectChannelForTransmission
 11848  002F90  0900               	iorlw	0
 11849  002F92  A4D8               	btfss	status,2,c
 11850  002F94  D018               	goto	l20704
 11851                           
 11852                           ;lorawan_eu.c: 518: {;lorawan_eu.c: 520: if (RADIO_Transmit (&macBuffer[16], loRa.lastPa
      +                          cketLength) == OK)
 11853  002F96  0EC8               	movlw	low (_macBuffer+16)
 11854  002F98  0100               	movlb	0	; () banked
 11855  002F9A  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 11856  002F9C  0E06               	movlw	high (_macBuffer+16)
 11857  002F9E  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 11858  002FA0  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
 11859  002FA4  EC06  F01F         	call	_RADIO_Transmit	;wreg free
 11860  002FA8  0100               	movlb	0	; () banked
 11861  002FAA  51A9               	movf	?_RADIO_Transmit& (0+255),w,b
 11862  002FAC  11AA               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 11863  002FAE  A4D8               	btfss	status,2,c
 11864  002FB0  D007               	goto	l20698
 11865                           
 11866                           ; BSR set to: 0
 11867                           ;lorawan_eu.c: 521: {;lorawan_eu.c: 522: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 11868  002FB2  0102               	movlb	2	; () banked
 11869  002FB4  2BDD               	incf	(_loRa+216)& (0+255),f,b
 11870                           
 11871                           ; BSR set to: 2
 11872                           ;lorawan_eu.c: 523: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 11873  002FB6  5107               	movf	(_loRa+2)& (0+255),w,b
 11874  002FB8  0BF0               	andlw	-16
 11875  002FBA  0901               	iorlw	1
 11876  002FBC  6F07               	movwf	(_loRa+2)& (0+255),b
 11877                           
 11878                           ;lorawan_eu.c: 524: }
 11879  002FBE  0012               	return	
 11880  002FC0                     l20698:
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;lorawan_eu.c: 525: else;lorawan_eu.c: 527: {;lorawan_eu.c: 528: ResetParametersForUncon
      +                          firmedTransmission ();
 11884  002FC0  EC68  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 11885  002FC4  D7C0               	goto	L38
 11886  002FC6                     l20704:
 11887                           
 11888                           ;lorawan_eu.c: 535: else;lorawan_eu.c: 536: {;lorawan_eu.c: 538: for (i = 0; i <= loRa.m
      +                          axChannels; i ++)
 11889  002FC6  0E00               	movlw	0
 11890  002FC8  0100               	movlb	0	; () banked
 11891  002FCA  6FC2               	movwf	LORAWAN_RxTimeout@i& (0+255),b
 11892  002FCC  D064               	goto	l20720
 11893  002FCE                     l20706:
 11894                           
 11895                           ; BSR set to: 2
 11896                           ;lorawan_eu.c: 539: {;lorawan_eu.c: 540: if ( (Channels[i].status == 1) && (Channels[i].
      +                          channelTimer != 0) && (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Ch
      +                          annels[i].dataRange.min) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 11897  002FCE  0100               	movlb	0	; () banked
 11898  002FD0  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11899  002FD2  0D0E               	mullw	14
 11900  002FD4  0E18               	movlw	low (_Channels+4)
 11901  002FD6  24F3               	addwf	prodl,w,c
 11902  002FD8  6ED9               	movwf	fsr2l,c
 11903  002FDA  0E04               	movlw	high (_Channels+4)
 11904  002FDC  20F4               	addwfc	prodh,w,c
 11905  002FDE  6EDA               	movwf	fsr2h,c
 11906  002FE0  04DE               	decf	postinc2,w,c
 11907  002FE2  A4D8               	btfss	status,2,c
 11908  002FE4  D056               	goto	l20718
 11909                           
 11910                           ; BSR set to: 0
 11911  002FE6  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11912  002FE8  0D0E               	mullw	14
 11913  002FEA  0E1C               	movlw	low (_Channels+8)
 11914  002FEC  24F3               	addwf	prodl,w,c
 11915  002FEE  6ED9               	movwf	fsr2l,c
 11916  002FF0  0E04               	movlw	high (_Channels+8)
 11917  002FF2  20F4               	addwfc	prodh,w,c
 11918  002FF4  6EDA               	movwf	fsr2h,c
 11919  002FF6  50DE               	movf	postinc2,w,c
 11920  002FF8  10DE               	iorwf	postinc2,w,c
 11921  002FFA  10DE               	iorwf	postinc2,w,c
 11922  002FFC  10DE               	iorwf	postinc2,w,c
 11923  002FFE  B4D8               	btfsc	status,2,c
 11924  003000  D048               	goto	l20718
 11925                           
 11926                           ; BSR set to: 0
 11927  003002  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11928  003004  0D0E               	mullw	14
 11929  003006  0E1C               	movlw	low (_Channels+8)
 11930  003008  24F3               	addwf	prodl,w,c
 11931  00300A  6ED9               	movwf	fsr2l,c
 11932  00300C  0E04               	movlw	high (_Channels+8)
 11933  00300E  20F4               	addwfc	prodh,w,c
 11934  003010  6EDA               	movwf	fsr2h,c
 11935  003012  50DE               	movf	postinc2,w,c
 11936  003014  5DBE               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 11937  003016  50DE               	movf	postinc2,w,c
 11938  003018  59BF               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 11939  00301A  50DE               	movf	postinc2,w,c
 11940  00301C  59C0               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 11941  00301E  50DE               	movf	postinc2,w,c
 11942  003020  59C1               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 11943  003022  A0D8               	btfss	status,0,c
 11944  003024  D036               	goto	l20718
 11945                           
 11946                           ; BSR set to: 0
 11947  003026  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11948  003028  0D0E               	mullw	14
 11949  00302A  0E19               	movlw	low (_Channels+5)
 11950  00302C  24F3               	addwf	prodl,w,c
 11951  00302E  6ED9               	movwf	fsr2l,c
 11952  003030  0E04               	movlw	high (_Channels+5)
 11953  003032  20F4               	addwfc	prodh,w,c
 11954  003034  6EDA               	movwf	fsr2h,c
 11955  003036  0104               	movlb	4	; () banked
 11956  003038  50DF               	movf	223,w,c
 11957  00303A  0B0F               	andlw	15
 11958  00303C  0100               	movlb	0	; () banked
 11959  00303E  6FBA               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11960  003040  51BA               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 11961  003042  0102               	movlb	2	; () banked
 11962  003044  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 11963  003046  A0D8               	btfss	status,0,c
 11964  003048  D024               	goto	l20718
 11965                           
 11966                           ; BSR set to: 2
 11967  00304A  0100               	movlb	0	; () banked
 11968  00304C  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11969  00304E  0D0E               	mullw	14
 11970  003050  0E19               	movlw	low (_Channels+5)
 11971  003052  24F3               	addwf	prodl,w,c
 11972  003054  6ED9               	movwf	fsr2l,c
 11973  003056  0E04               	movlw	high (_Channels+5)
 11974  003058  20F4               	addwfc	prodh,w,c
 11975  00305A  6EDA               	movwf	fsr2h,c
 11976  00305C  0104               	movlb	4	; () banked
 11977  00305E  38DF               	swapf	223,w,c
 11978  003060  0B0F               	andlw	15
 11979  003062  0100               	movlb	0	; () banked
 11980  003064  6FBA               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11981  003066  0102               	movlb	2	; () banked
 11982  003068  51E4               	movf	(_loRa+223)& (0+255),w,b
 11983  00306A  0100               	movlb	0	; () banked
 11984  00306C  5DBA               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 11985  00306E  A0D8               	btfss	status,0,c
 11986  003070  D010               	goto	l20718
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;lorawan_eu.c: 541: {;lorawan_eu.c: 542: minim = Channels[i].channelTimer;
 11990  003072  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11991  003074  0D0E               	mullw	14
 11992  003076  0E1C               	movlw	low (_Channels+8)
 11993  003078  24F3               	addwf	prodl,w,c
 11994  00307A  6ED9               	movwf	fsr2l,c
 11995  00307C  0E04               	movlw	high (_Channels+8)
 11996  00307E  20F4               	addwfc	prodh,w,c
 11997  003080  6EDA               	movwf	fsr2h,c
 11998  003082  CFDE F0BE          	movff	postinc2,LORAWAN_RxTimeout@minim
 11999  003086  CFDE F0BF          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 12000  00308A  CFDE F0C0          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 12001  00308E  CFDE F0C1          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 12002  003092                     l20718:
 12003  003092  0100               	movlb	0	; () banked
 12004  003094  2BC2               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 12005  003096                     l20720:
 12006                           
 12007                           ; BSR set to: 0
 12008  003096  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 12009  003098  0102               	movlb	2	; () banked
 12010  00309A  5DF2               	subwf	(_loRa+237)& (0+255),w,b
 12011  00309C  B0D8               	btfsc	status,0,c
 12012  00309E  D797               	goto	l20706
 12013                           
 12014                           ; BSR set to: 2
 12015                           ;lorawan_eu.c: 543: };lorawan_eu.c: 544: };lorawan_eu.c: 545: SwTimerSetTimeout (loRa.un
      +                          confirmedRetransmisionTimerId, ( (((uint32_t)(minim + 50)) << (12)) / 125UL ) );
 12016  0030A0  C0BE  F0BA         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 12017  0030A4  C0BF  F0BB         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 12018  0030A8  C0C0  F0BC         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 12019  0030AC  C0C1  F0BD         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 12020  0030B0  0E0C               	movlw	12
 12021  0030B2                     u23065:
 12022  0030B2  90D8               	bcf	status,0,c
 12023  0030B4  0100               	movlb	0	; () banked
 12024  0030B6  37BA               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 12025  0030B8  37BB               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 12026  0030BA  37BC               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 12027  0030BC  37BD               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 12028  0030BE  2EE8               	decfsz	wreg,f,c
 12029  0030C0  D7F8               	goto	u23065
 12030  0030C2  0E00               	movlw	0
 12031  0030C4  25BA               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 12032  0030C6  6F60               	movwf	___lldiv@dividend& (0+255),b
 12033  0030C8  0E20               	movlw	32
 12034  0030CA  21BB               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 12035  0030CC  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 12036  0030CE  0E03               	movlw	3
 12037  0030D0  21BC               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 12038  0030D2  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 12039  0030D4  0E00               	movlw	0
 12040  0030D6  21BD               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 12041  0030D8  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 12042  0030DA  0E7D               	movlw	125
 12043  0030DC  6F64               	movwf	___lldiv@divisor& (0+255),b
 12044  0030DE  0E00               	movlw	0
 12045  0030E0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12046  0030E2  0E00               	movlw	0
 12047  0030E4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12048  0030E6  0E00               	movlw	0
 12049  0030E8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12050  0030EA  EC96  F042         	call	___lldiv	;wreg free
 12051  0030EE  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12052  0030F2  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12053  0030F6  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12054  0030FA  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12055  0030FE  0102               	movlb	2	; () banked
 12056  003100  51EF               	movf	(_loRa+234)& (0+255),w,b
 12057  003102  EC7F  F04C         	call	_SwTimerSetTimeout
 12058                           
 12059                           ;lorawan_eu.c: 546: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 12060  003106  0102               	movlb	2	; () banked
 12061  003108  51EF               	movf	(_loRa+234)& (0+255),w,b
 12062  00310A  EC73  F040         	call	_SwTimerStart
 12063  00310E  0012               	return	
 12064  003110                     l20724:
 12065                           
 12066                           ; BSR set to: 2
 12067                           ;lorawan_eu.c: 549: else;lorawan_eu.c: 550: {;lorawan_eu.c: 551: ResetParametersForUncon
      +                          firmedTransmission ();
 12068  003110  EC68  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 12069                           
 12070                           ;lorawan_eu.c: 552: if (rxPayload.RxAppData != (0))
 12071  003114  0101               	movlb	1	; () banked
 12072  003116  510E               	movf	_rxPayload& (0+255),w,b
 12073  003118  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12074  00311A  B4D8               	btfsc	status,2,c
 12075  00311C  0012               	return	
 12076                           
 12077                           ; BSR set to: 1
 12078                           ;lorawan_eu.c: 553: {;lorawan_eu.c: 554: rxPayload.RxAppData((0), 0, MAC_OK);
 12079  00311E  0E00               	movlw	0
 12080  003120  0100               	movlb	0	; () banked
 12081  003122  6F60               	movwf	RxData@pData& (0+255),b
 12082  003124  0E00               	movlw	0
 12083  003126  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12084  003128  0E00               	movlw	0
 12085  00312A  6F62               	movwf	RxData@dataLength& (0+255),b
 12086  00312C  0E01               	movlw	1
 12087  00312E  6F63               	movwf	RxData@status& (0+255),b
 12088  003130  D801               	call	u23088
 12089  003132  0012               	return	
 12090  003134                     u23088:
 12091  003134  0005               	push	
 12092  003136  6EFA               	movwf	pclath,c
 12093  003138  0101               	movlb	1	; () banked
 12094  00313A  510E               	movf	_rxPayload& (0+255),w,b
 12095  00313C  6EFD               	movwf	tosl,c
 12096  00313E  510F               	movf	(_rxPayload+1)& (0+255),w,b
 12097  003140  6EFE               	movwf	tosh,c
 12098  003142  6AFF               	clrf	tosu,c
 12099  003144  50FA               	movf	pclath,w,c
 12100  003146  0012               	return		;indir
 12101  003148                     l20730:
 12102                           
 12103                           ; BSR set to: 2
 12104                           ;lorawan_eu.c: 561: else;lorawan_eu.c: 562: {;lorawan_eu.c: 564: if (rxPayload.RxAppData
      +                           != (0))
 12105  003148  0101               	movlb	1	; () banked
 12106  00314A  510E               	movf	_rxPayload& (0+255),w,b
 12107  00314C  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12108  00314E  B4D8               	btfsc	status,2,c
 12109  003150  0012               	return	
 12110                           
 12111                           ; BSR set to: 1
 12112                           ;lorawan_eu.c: 565: {;lorawan_eu.c: 566: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 12113  003152  0E00               	movlw	0
 12114  003154  0100               	movlb	0	; () banked
 12115  003156  6F60               	movwf	RxData@pData& (0+255),b
 12116  003158  0E00               	movlw	0
 12117  00315A  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12118  00315C  0E00               	movlw	0
 12119  00315E  6F62               	movwf	RxData@dataLength& (0+255),b
 12120  003160  0E02               	movlw	2
 12121  003162  6F63               	movwf	RxData@status& (0+255),b
 12122  003164  D801               	call	u23108
 12123  003166  0012               	return	
 12124  003168                     u23108:
 12125  003168  0005               	push	
 12126  00316A  6EFA               	movwf	pclath,c
 12127  00316C  0101               	movlb	1	; () banked
 12128  00316E  510E               	movf	_rxPayload& (0+255),w,b
 12129  003170  6EFD               	movwf	tosl,c
 12130  003172  510F               	movf	(_rxPayload+1)& (0+255),w,b
 12131  003174  6EFE               	movwf	tosh,c
 12132  003176  6AFF               	clrf	tosu,c
 12133  003178  50FA               	movf	pclath,w,c
 12134  00317A  0012               	return		;indir
 12135  00317C                     __end_of_LORAWAN_RxTimeout:
 12136                           	opt callstack 0
 12137                           
 12138 ;; *************** function _LORAWAN_RxDone *****************
 12139 ;; Defined at:
 12140 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12141 ;; Parameters:    Size  Location     Type
 12142 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 12143 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12144 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;  hdr             2  146[BANK0 ] PTR struct .
 12147 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12148 ;;  joinAccept      2  143[BANK0 ] PTR struct .
 12149 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12150 ;;  computedMic     4  139[BANK0 ] unsigned long 
 12151 ;;  extractedMic    4  131[BANK0 ] unsigned long 
 12152 ;;  packet          2  137[BANK0 ] PTR unsigned char 
 12153 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 12154 ;;  frmPayloadLe    1  145[BANK0 ] unsigned char 
 12155 ;;  temp            1  136[BANK0 ] unsigned char 
 12156 ;;  bufferIndex     1  135[BANK0 ] unsigned char 
 12157 ;;  mhdr            1  130[BANK0 ] struct .
 12158 ;;  channelIndex    1  129[BANK0 ] unsigned char 
 12159 ;;  fPort           1  128[BANK0 ] unsigned char 
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  1    wreg      enum E6295
 12162 ;; Registers used:
 12163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12169 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12170 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12171 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12172 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12173 ;;Total ram usage:       28 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:   15
 12176 ;; This function calls:
 12177 ;;		_AESCmac
 12178 ;;		_AESEncodeLoRa
 12179 ;;		_AssembleEncryptionBlock
 12180 ;;		_CheckFlags
 12181 ;;		_CheckMcastFlags
 12182 ;;		_ComputeMic
 12183 ;;		_ComputeSessionKeys
 12184 ;;		_EncryptFRMPayload
 12185 ;;		_ExtractMic
 12186 ;;		_LORAWAN_EnterContinuousReceive
 12187 ;;		_LORAWAN_Send
 12188 ;;		_MacExecuteCommands
 12189 ;;		_RADIO_GetStatus
 12190 ;;		_RADIO_ReleaseData
 12191 ;;		_RxData
 12192 ;;		_SearchAvailableChannel
 12193 ;;		_SetJoinFailState
 12194 ;;		_SetReceptionNotOkState
 12195 ;;		_StartReTxTimer
 12196 ;;		_SwTimerStop
 12197 ;;		_UpdateCfList
 12198 ;;		_UpdateDLSettings
 12199 ;;		_UpdateJoinSuccessState
 12200 ;;		_UpdateReceiveDelays
 12201 ;;		_UpdateRetransmissionAckTimeoutState
 12202 ;;		_memcpy
 12203 ;; This function is called by:
 12204 ;;		_RADIO_RxDone
 12205 ;;		_RADIO_FSKPayloadReady
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           	psect	text50
 12210  0000AC                     __ptext50:
 12211                           	opt callstack 0
 12212  0000AC                     _LORAWAN_RxDone:
 12213                           	opt callstack 10
 12214                           
 12215                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;;lorawan.c: 1124: Mhdr_t mhdr;;lora
      +                          wan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;;lorawan.c: 1126: uint8_t frmPaylo
      +                          adLength;;lorawan.c: 1127: uint8_t *packet;;lorawan.c: 1128: uint8_t temp;;lorawan.c: 11
      +                          30: RADIO_ReleaseData();
 12216                           
 12217                           ;incstack = 0
 12218  0000AC  EC56  F054         	call	_RADIO_ReleaseData	;wreg free
 12219                           
 12220                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 12221  0000B0  0102               	movlb	2	; () banked
 12222  0000B2  B108               	btfsc	(_loRa+3)& (0+255),0,b
 12223  0000B4  EFB9  F005         	goto	l20646
 12224                           
 12225                           ; BSR set to: 2
 12226                           ;lorawan.c: 1133: {;lorawan.c: 1134: mhdr.value = buffer[0];
 12227  0000B8  C1DA  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12228  0000BC  C1DB  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12229  0000C0  50DF               	movf	indf2,w,c
 12230  0000C2  0100               	movlb	0	; () banked
 12231  0000C4  6FE2               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 12235  0000C6  39E2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12236  0000C8  32E8               	rrcf	wreg,f,c
 12237  0000CA  0B07               	andlw	7
 12238  0000CC  06E8               	decf	wreg,f,c
 12239  0000CE  A4D8               	btfss	status,2,c
 12240  0000D0  D0CF               	goto	l20306
 12241                           
 12242                           ; BSR set to: 0
 12243  0000D2  0102               	movlb	2	; () banked
 12244  0000D4  5122               	movf	(_loRa+29)& (0+255),w,b
 12245  0000D6  A4D8               	btfss	status,2,c
 12246  0000D8  D0CB               	goto	l20306
 12247                           
 12248                           ; BSR set to: 2
 12249                           ;lorawan.c: 1136: {;lorawan.c: 1137: temp = bufferLength - 1;
 12250  0000DA  0101               	movlb	1	; () banked
 12251  0000DC  05DC               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12252  0000DE  0100               	movlb	0	; () banked
 12253  0000E0  D01F               	goto	L13
 12254  0000E2                     l20256:
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;lorawan.c: 1139: {;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.a
      +                          ctivationParameters.applicationKey);
 12258  0000E2  0101               	movlb	1	; () banked
 12259  0000E4  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12260  0000E6  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12261  0000E8  0100               	movlb	0	; () banked
 12262  0000EA  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 12263  0000EC  0E00               	movlw	0
 12264  0000EE  0101               	movlb	1	; () banked
 12265  0000F0  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12266  0000F2  0100               	movlb	0	; () banked
 12267  0000F4  6FDC               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 12268  0000F6  51E8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 12269  0000F8  5DDB               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 12270  0000FA  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 12271  0000FC  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12272  0000FE  A0D8               	btfss	status,0,c
 12273  000100  05DC               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12274  000102  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 12275  000104  0E47               	movlw	low (_loRa+66)
 12276  000106  6F80               	movwf	AESEncodeLoRa@key& (0+255),b
 12277  000108  0E02               	movlw	high (_loRa+66)
 12278  00010A  6F81               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 12279  00010C  EC17  F04E         	call	_AESEncodeLoRa	;wreg free
 12280                           
 12281                           ;lorawan.c: 1142: if (temp > 16)
 12282  000110  0E10               	movlw	16
 12283  000112  0100               	movlb	0	; () banked
 12284  000114  65E8               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 12285  000116  D003               	goto	l20262
 12286                           
 12287                           ; BSR set to: 0
 12288                           ;lorawan.c: 1143: {;lorawan.c: 1144: temp -= 16;
 12289  000118  0E10               	movlw	16
 12290  00011A  5FE8               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 12291                           
 12292                           ;lorawan.c: 1145: }
 12293  00011C  D002               	goto	l1912
 12294  00011E                     l20262:
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;lorawan.c: 1146: else;lorawan.c: 1147: {;lorawan.c: 1148: temp = 0;
 12298  00011E  0E00               	movlw	0
 12299  000120                     L13:
 12300  000120  6FE8               	movwf	LORAWAN_RxDone@temp& (0+255),b
 12301  000122                     l1912:
 12302                           
 12303                           ; BSR set to: 0
 12304  000122  51E8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 12305  000124  A4D8               	btfss	status,2,c
 12306  000126  D7DD               	goto	l20256
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;lorawan.c: 1149: };lorawan.c: 1150: };lorawan.c: 1153: computedMic = ComputeMic (loRa.a
      +                          ctivationParameters.applicationKey, buffer, bufferLength - sizeof(extractedMic));
 12310  000128  0E47               	movlw	low (_loRa+66)
 12311  00012A  6FC8               	movwf	ComputeMic@key& (0+255),b
 12312  00012C  0E02               	movlw	high (_loRa+66)
 12313  00012E  6FC9               	movwf	(ComputeMic@key+1)& (0+255),b
 12314  000130  C1DA  F0CA         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 12315  000134  C1DB  F0CB         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 12316  000138  0101               	movlb	1	; () banked
 12317  00013A  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12318  00013C  0FFC               	addlw	252
 12319  00013E  0100               	movlb	0	; () banked
 12320  000140  6FCC               	movwf	ComputeMic@bufferLength& (0+255),b
 12321  000142  EC8A  F047         	call	_ComputeMic	;wreg free
 12322  000146  C0C8  F0EB         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 12323  00014A  C0C9  F0EC         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 12324  00014E  C0CA  F0ED         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 12325  000152  C0CB  F0EE         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 12326                           
 12327                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 12328  000156  C1DA  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12329  00015A  C1DB  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12330  00015E  C1DC  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12331  000162  ECC9  F04A         	call	_ExtractMic	;wreg free
 12332  000166  C06B  F0E3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12333  00016A  C06C  F0E4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12334  00016E  C06D  F0E5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12335  000172  C06E  F0E6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12336                           
 12337                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 12338  000176  0100               	movlb	0	; () banked
 12339  000178  51EB               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12340  00017A  19E3               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12341  00017C  E10A               	bnz	u22190
 12342  00017E  51EC               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12343  000180  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12344  000182  E107               	bnz	u22190
 12345  000184  51ED               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12346  000186  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12347  000188  E104               	bnz	u22190
 12348  00018A  51EE               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12349  00018C  19E6               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12350  00018E  B4D8               	btfsc	status,2,c
 12351  000190  D011               	goto	l20280
 12352  000192                     u22190:
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;lorawan.c: 1156: {;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa
      +                          .macStatus.macState == RX1_OPEN) && (loRa.rx2DelayExpired)))
 12356  000192  0102               	movlb	2	; () banked
 12357  000194  5107               	movf	(_loRa+2)& (0+255),w,b
 12358  000196  0B0F               	andlw	15
 12359  000198  0A05               	xorlw	5
 12360  00019A  B4D8               	btfsc	status,2,c
 12361  00019C  D008               	goto	u22220
 12362                           
 12363                           ; BSR set to: 2
 12364  00019E  5107               	movf	(_loRa+2)& (0+255),w,b
 12365  0001A0  0B0F               	andlw	15
 12366  0001A2  0A03               	xorlw	3
 12367  0001A4  A4D8               	btfss	status,2,c
 12368  0001A6  0012               	return	
 12369                           
 12370                           ; BSR set to: 2
 12371  0001A8  51F6               	movf	(_loRa+241)& (0+255),w,b
 12372  0001AA  B4D8               	btfsc	status,2,c
 12373  0001AC  0012               	return	
 12374  0001AE                     u22220:
 12375                           
 12376                           ; BSR set to: 2
 12377                           ;lorawan.c: 1158: {;lorawan.c: 1159: SetJoinFailState();
 12378  0001AE  EC25  F050         	call	_SetJoinFailState	;wreg free
 12379                           
 12380                           ; BSR set to: 2
 12381                           ;lorawan.c: 1160: };lorawan.c: 1162: return INVALID_PARAMETER;;	Return value of _LORAWAN
      +                          _RxDone is never used
 12382  0001B2  0012               	return	
 12383  0001B4                     l20280:
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;lorawan.c: 1163: };lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 12387  0001B4  0102               	movlb	2	; () banked
 12388  0001B6  5107               	movf	(_loRa+2)& (0+255),w,b
 12389  0001B8  0B0F               	andlw	15
 12390  0001BA  0A03               	xorlw	3
 12391  0001BC  A4D8               	btfss	status,2,c
 12392  0001BE  D003               	goto	l20284
 12393                           
 12394                           ; BSR set to: 2
 12395                           ;lorawan.c: 1167: {;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 12396  0001C0  51E8               	movf	(_loRa+227)& (0+255),w,b
 12397  0001C2  ECD5  F051         	call	_SwTimerStop
 12398  0001C6                     l20284:
 12399                           
 12400                           ;lorawan.c: 1169: };lorawan.c: 1171: JoinAccept_t *joinAccept;;lorawan.c: 1172: joinAcce
      +                          pt = (JoinAccept_t*)buffer;
 12401  0001C6  C1DA  F0EF         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 12402  0001CA  C1DB  F0F0         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 12403                           
 12404                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 12405  0001CE  0100               	movlb	0	; () banked
 12406  0001D0  EE20 F007          	lfsr	2,7
 12407  0001D4  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12408  0001D6  26D9               	addwf	fsr2l,f,c
 12409  0001D8  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12410  0001DA  22DA               	addwfc	fsr2h,f,c
 12411  0001DC  CFDE F223          	movff	postinc2,_loRa+30
 12412  0001E0  CFDE F224          	movff	postinc2,_loRa+31
 12413  0001E4  CFDE F225          	movff	postinc2,_loRa+32
 12414  0001E8  CFDE F226          	movff	postinc2,_loRa+33
 12415                           
 12416                           ; BSR set to: 0
 12417                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 12418  0001EC  EE20 F00C          	lfsr	2,12
 12419  0001F0  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12420  0001F2  26D9               	addwf	fsr2l,f,c
 12421  0001F4  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12422  0001F6  22DA               	addwfc	fsr2h,f,c
 12423  0001F8  50DF               	movf	indf2,w,c
 12424  0001FA  0B0F               	andlw	15
 12425  0001FC  ECA1  F04C         	call	_UpdateReceiveDelays
 12426                           
 12427                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 12428  000200  0100               	movlb	0	; () banked
 12429  000202  EE20 F00B          	lfsr	2,11
 12430  000206  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12431  000208  26D9               	addwf	fsr2l,f,c
 12432  00020A  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12433  00020C  22DA               	addwfc	fsr2h,f,c
 12434  00020E  38DF               	swapf	223,w,c
 12435  000210  0B07               	andlw	7
 12436  000212  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12437  000214  EE20 F00B          	lfsr	2,11
 12438  000218  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12439  00021A  26D9               	addwf	fsr2l,f,c
 12440  00021C  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12441  00021E  22DA               	addwfc	fsr2h,f,c
 12442  000220  50DF               	movf	223,w,c
 12443  000222  0B0F               	andlw	15
 12444  000224  EC8D  F052         	call	_UpdateDLSettings
 12445                           
 12446                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 12447  000228  C0EF  F09E         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 12448  00022C  C0F0  F09F         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 12449  000230  0101               	movlb	1	; () banked
 12450  000232  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12451  000234  EC18  F020         	call	_UpdateCfList
 12452                           
 12453                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 12454  000238  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 12455  00023C  C0F0  F093         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 12456  000240  EC11  F042         	call	_ComputeSessionKeys	;wreg free
 12457                           
 12458                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 12459  000244  0E00               	movlw	0
 12460  000246  6EE6               	movwf	postinc1,c
 12461  000248  EC58  F02D         	call	_UpdateJoinSuccessState	;wreg free
 12462                           
 12463                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 12464  00024C  0E00               	movlw	0
 12465  00024E  0102               	movlb	2	; () banked
 12466  000250  6F0B               	movwf	(_loRa+6)& (0+255),b
 12467  000252  0E00               	movlw	0
 12468  000254  6F0C               	movwf	(_loRa+7)& (0+255),b
 12469  000256  0E00               	movlw	0
 12470  000258  6F0D               	movwf	(_loRa+8)& (0+255),b
 12471  00025A  0E00               	movlw	0
 12472  00025C  6F0E               	movwf	(_loRa+9)& (0+255),b
 12473                           
 12474                           ; BSR set to: 2
 12475                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 12476  00025E  0E00               	movlw	0
 12477  000260  6F0F               	movwf	(_loRa+10)& (0+255),b
 12478  000262  0E00               	movlw	0
 12479  000264  6F10               	movwf	(_loRa+11)& (0+255),b
 12480  000266  0E00               	movlw	0
 12481  000268  6F11               	movwf	(_loRa+12)& (0+255),b
 12482  00026A  0E00               	movlw	0
 12483  00026C  6F12               	movwf	(_loRa+13)& (0+255),b
 12484  00026E  0012               	return	
 12485  000270                     l20306:
 12486                           
 12487                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 12488  000270  0100               	movlb	0	; () banked
 12489  000272  39E2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12490  000274  32E8               	rrcf	wreg,f,c
 12491  000276  0B07               	andlw	7
 12492  000278  0A03               	xorlw	3
 12493  00027A  B4D8               	btfsc	status,2,c
 12494  00027C  D007               	goto	u22250
 12495                           
 12496                           ; BSR set to: 0
 12497  00027E  39E2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12498  000280  32E8               	rrcf	wreg,f,c
 12499  000282  0B07               	andlw	7
 12500  000284  0A05               	xorlw	5
 12501  000286  A4D8               	btfss	status,2,c
 12502  000288  EFB6  F005         	goto	l20642
 12503  00028C                     u22250:
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;lorawan.c: 1192: {;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 12507  00028C  0E00               	movlw	0
 12508  00028E  0102               	movlb	2	; () banked
 12509  000290  6FAC               	movwf	(_loRa+167)& (0+255),b
 12510                           
 12511                           ; BSR set to: 2
 12512                           ;lorawan.c: 1195: Hdr_t *hdr;;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 12513  000292  C1DA  F0F2         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 12514  000296  C1DB  F0F3         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 12515                           
 12516                           ; BSR set to: 2
 12517                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 12518  00029A  0E02               	movlw	2
 12519  00029C  1917               	xorwf	(_loRa+18)& (0+255),w,b
 12520  00029E  A4D8               	btfss	status,2,c
 12521  0002A0  D1AA               	goto	l20432
 12522                           
 12523                           ; BSR set to: 2
 12524  0002A2  0100               	movlb	0	; () banked
 12525  0002A4  EE20 F001          	lfsr	2,1
 12526  0002A8  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12527  0002AA  26D9               	addwf	fsr2l,f,c
 12528  0002AC  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12529  0002AE  22DA               	addwfc	fsr2h,f,c
 12530  0002B0  0102               	movlb	2	; () banked
 12531  0002B2  5167               	movf	(_loRa+98)& (0+255),w,b
 12532  0002B4  18DE               	xorwf	postinc2,w,c
 12533  0002B6  E109               	bnz	u22271
 12534  0002B8  5168               	movf	(_loRa+99)& (0+255),w,b
 12535  0002BA  18DE               	xorwf	postinc2,w,c
 12536  0002BC  E106               	bnz	u22271
 12537  0002BE  5169               	movf	(_loRa+100)& (0+255),w,b
 12538  0002C0  18DE               	xorwf	postinc2,w,c
 12539  0002C2  E103               	bnz	u22271
 12540  0002C4  516A               	movf	(_loRa+101)& (0+255),w,b
 12541  0002C6  18DE               	xorwf	postinc2,w,c
 12542  0002C8  A4D8               	btfss	status,2,c
 12543  0002CA                     u22271:
 12544  0002CA  D195               	goto	l20432
 12545                           
 12546                           ; BSR set to: 2
 12547  0002CC  A509               	btfss	(_loRa+4)& (0+255),2,b
 12548  0002CE  D193               	goto	l20432
 12549                           
 12550                           ; BSR set to: 2
 12551                           ;lorawan.c: 1200: {;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 12552  0002D0  C0F2  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 12553  0002D4  C0F3  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 12554  0002D8  EC98  F043         	call	_CheckMcastFlags	;wreg free
 12555  0002DC  0900               	iorlw	0
 12556  0002DE  A4D8               	btfss	status,2,c
 12557  0002E0  D008               	goto	l20328
 12558  0002E2                     u22290:
 12559  0002E2                     l20322:
 12560                           
 12561                           ;lorawan.c: 1203: {;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12562  0002E2  0102               	movlb	2	; () banked
 12563  0002E4  5107               	movf	(_loRa+2)& (0+255),w,b
 12564  0002E6  0BF0               	andlw	-16
 12565  0002E8  0909               	iorlw	9
 12566  0002EA  6F07               	movwf	(_loRa+2)& (0+255),b
 12567                           
 12568                           ; BSR set to: 2
 12569                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 12570  0002EC  ECD5  F043         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12571  0002F0  0012               	return	
 12572  0002F2                     l20328:
 12573                           
 12574                           ;lorawan.c: 1207: };lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, buff
      +                          erLength - sizeof (computedMic), 0x49, 1);
 12575  0002F2  0100               	movlb	0	; () banked
 12576  0002F4  EE20 F006          	lfsr	2,6
 12577  0002F8  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12578  0002FA  26D9               	addwf	fsr2l,f,c
 12579  0002FC  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12580  0002FE  22DA               	addwfc	fsr2h,f,c
 12581  000300  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 12582  000304  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 12583  000308  C0DB  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 12584  00030C  C0DC  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 12585  000310  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 12586  000312  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 12587  000314  0101               	movlb	1	; () banked
 12588  000316  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12589  000318  0FFC               	addlw	252
 12590  00031A  0100               	movlb	0	; () banked
 12591  00031C  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 12592  00031E  0E49               	movlw	73
 12593  000320  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 12594  000322  0E01               	movlw	1
 12595  000324  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 12596  000326  0E01               	movlw	1
 12597  000328  ECC7  F03A         	call	_AssembleEncryptionBlock
 12598                           
 12599                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 12600  00032C  0EC7               	movlw	low _radioBuffer
 12601  00032E  0100               	movlb	0	; () banked
 12602  000330  6F60               	movwf	memcpy@d1& (0+255),b
 12603  000332  0E07               	movlw	high _radioBuffer
 12604  000334  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12605  000336  0E5F               	movlw	low _aesBuffer
 12606  000338  6F62               	movwf	memcpy@s1& (0+255),b
 12607  00033A  0E01               	movlw	high _aesBuffer
 12608  00033C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12609  00033E  0E00               	movlw	0
 12610  000340  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12611  000342  0E10               	movlw	16
 12612  000344  6F64               	movwf	memcpy@n& (0+255),b
 12613  000346  ECEC  F047         	call	_memcpy	;wreg free
 12614                           
 12615                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 12616  00034A  0ED7               	movlw	low (_radioBuffer+16)
 12617  00034C  0100               	movlb	0	; () banked
 12618  00034E  6F60               	movwf	memcpy@d1& (0+255),b
 12619  000350  0E07               	movlw	high (_radioBuffer+16)
 12620  000352  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12621  000354  C1DA  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 12622  000358  C1DB  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 12623  00035C  0EFC               	movlw	252
 12624  00035E  0101               	movlb	1	; () banked
 12625  000360  25DC               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12626  000362  0100               	movlb	0	; () banked
 12627  000364  6F64               	movwf	memcpy@n& (0+255),b
 12628  000366  6B65               	clrf	(memcpy@n+1)& (0+255),b
 12629  000368  0EFF               	movlw	255
 12630  00036A  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 12631  00036C  ECEC  F047         	call	_memcpy	;wreg free
 12632                           
 12633                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 12634  000370  0E6B               	movlw	low (_loRa+102)
 12635  000372  0100               	movlb	0	; () banked
 12636  000374  6FBA               	movwf	AESCmac@key& (0+255),b
 12637  000376  0E02               	movlw	high (_loRa+102)
 12638  000378  6FBB               	movwf	(AESCmac@key+1)& (0+255),b
 12639  00037A  0E5F               	movlw	low _aesBuffer
 12640  00037C  6FBC               	movwf	AESCmac@output& (0+255),b
 12641  00037E  0E01               	movlw	high _aesBuffer
 12642  000380  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 12643  000382  0EC7               	movlw	low _radioBuffer
 12644  000384  6FBE               	movwf	AESCmac@input& (0+255),b
 12645  000386  0E07               	movlw	high _radioBuffer
 12646  000388  6FBF               	movwf	(AESCmac@input+1)& (0+255),b
 12647  00038A  0101               	movlb	1	; () banked
 12648  00038C  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12649  00038E  0F0C               	addlw	12
 12650  000390  0100               	movlb	0	; () banked
 12651  000392  6FC0               	movwf	AESCmac@size& (0+255),b
 12652  000394  ECAD  F00D         	call	_AESCmac	;wreg free
 12653                           
 12654                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 12655  000398  0EEB               	movlw	low LORAWAN_RxDone@computedMic
 12656  00039A  0100               	movlb	0	; () banked
 12657  00039C  6F60               	movwf	memcpy@d1& (0+255),b
 12658  00039E  0E00               	movlw	high LORAWAN_RxDone@computedMic
 12659  0003A0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12660  0003A2  0E5F               	movlw	low _aesBuffer
 12661  0003A4  6F62               	movwf	memcpy@s1& (0+255),b
 12662  0003A6  0E01               	movlw	high _aesBuffer
 12663  0003A8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12664  0003AA  0E00               	movlw	0
 12665  0003AC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12666  0003AE  0E04               	movlw	4
 12667  0003B0  6F64               	movwf	memcpy@n& (0+255),b
 12668  0003B2  ECEC  F047         	call	_memcpy	;wreg free
 12669                           
 12670                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 12671  0003B6  C1DA  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12672  0003BA  C1DB  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12673  0003BE  C1DC  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12674  0003C2  ECC9  F04A         	call	_ExtractMic	;wreg free
 12675  0003C6  C06B  F0E3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12676  0003CA  C06C  F0E4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12677  0003CE  C06D  F0E5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12678  0003D2  C06E  F0E6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12679                           
 12680                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 12681  0003D6  0100               	movlb	0	; () banked
 12682  0003D8  51E3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12683  0003DA  19EB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12684  0003DC  E182               	bnz	l20322
 12685  0003DE  51E4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12686  0003E0  19EC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12687  0003E2  E108               	bnz	u22300
 12688  0003E4  51E5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12689  0003E6  19ED               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12690  0003E8  E105               	bnz	u22300
 12691  0003EA  51E6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12692  0003EC  19EE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12693  0003EE  A4D8               	btfss	status,2,c
 12694  0003F0  D778               	goto	u22290
 12695  0003F2  D001               	goto	l20344
 12696  0003F4                     u22300:
 12697  0003F4  D776               	goto	u22290
 12698  0003F6                     l20344:
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;lorawan.c: 1222: };lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members
      +                          .valueLow)
 12702  0003F6  EE20 F006          	lfsr	2,6
 12703  0003FA  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12704  0003FC  26D9               	addwf	fsr2l,f,c
 12705  0003FE  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12706  000400  22DA               	addwfc	fsr2h,f,c
 12707  000402  0102               	movlb	2	; () banked
 12708  000404  5113               	movf	(_loRa+14)& (0+255),w,b
 12709  000406  5CDE               	subwf	postinc2,w,c
 12710  000408  5114               	movf	(_loRa+15)& (0+255),w,b
 12711  00040A  58DE               	subwfb	postinc2,w,c
 12712  00040C  A0D8               	btfss	status,0,c
 12713  00040E  D03B               	goto	l20362
 12714                           
 12715                           ; BSR set to: 2
 12716                           ;lorawan.c: 1225: {;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.member
      +                          s.valueLow) > loRa.protocolParameters.maxMultiFcntGap )
 12717  000410  0100               	movlb	0	; () banked
 12718  000412  EE20 F006          	lfsr	2,6
 12719  000416  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12720  000418  26D9               	addwf	fsr2l,f,c
 12721  00041A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12722  00041C  22DA               	addwfc	fsr2h,f,c
 12723  00041E  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 12724  000422  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 12725  000426  0102               	movlb	2	; () banked
 12726  000428  5113               	movf	(_loRa+14)& (0+255),w,b
 12727  00042A  0100               	movlb	0	; () banked
 12728  00042C  5FDB               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 12729  00042E  0102               	movlb	2	; () banked
 12730  000430  5114               	movf	(_loRa+15)& (0+255),w,b
 12731  000432  0100               	movlb	0	; () banked
 12732  000434  5BDC               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 12733  000436  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12734  000438  0102               	movlb	2	; () banked
 12735  00043A  5DA3               	subwf	(_loRa+158)& (0+255),w,b
 12736  00043C  0100               	movlb	0	; () banked
 12737  00043E  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12738  000440  0102               	movlb	2	; () banked
 12739  000442  59A4               	subwfb	(_loRa+159)& (0+255),w,b
 12740  000444  B0D8               	btfsc	status,0,c
 12741  000446  D013               	goto	l20360
 12742                           
 12743                           ; BSR set to: 2
 12744                           ;lorawan.c: 1227: {;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 12745  000448  0101               	movlb	1	; () banked
 12746  00044A  510E               	movf	_rxPayload& (0+255),w,b
 12747  00044C  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12748  00044E  B4D8               	btfsc	status,2,c
 12749  000450  D748               	goto	u22290
 12750  000452                     u22330:
 12751                           
 12752                           ; BSR set to: 1
 12753                           ;lorawan.c: 1229: {;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED
      +                          );
 12754  000452  0E00               	movlw	0
 12755  000454  0100               	movlb	0	; () banked
 12756  000456  6F60               	movwf	RxData@pData& (0+255),b
 12757  000458  0E00               	movlw	0
 12758  00045A  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12759  00045C  0E00               	movlw	0
 12760  00045E  6F62               	movwf	RxData@dataLength& (0+255),b
 12761  000460  0E05               	movlw	5
 12762  000462  6F63               	movwf	RxData@status& (0+255),b
 12763  000464  D801               	call	u22348
 12764  000466  D73D               	goto	u22290
 12765  000468                     u22348:
 12766  000468  0005               	push	
 12767  00046A  6EFA               	movwf	pclath,c
 12768  00046C  D0BC               	goto	L16
 12769  00046E                     l20360:
 12770                           
 12771                           ; BSR set to: 2
 12772                           ;lorawan.c: 1237: else;lorawan.c: 1238: {;lorawan.c: 1239: loRa.fMcastCntDown.members.va
      +                          lueLow = hdr->members.fCnt;
 12773  00046E  0100               	movlb	0	; () banked
 12774  000470  EE20 F006          	lfsr	2,6
 12775  000474  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12776  000476  26D9               	addwf	fsr2l,f,c
 12777  000478  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12778  00047A  22DA               	addwfc	fsr2h,f,c
 12779  00047C  CFDE F213          	movff	postinc2,_loRa+14
 12780  000480  CFDD F214          	movff	postdec2,_loRa+15
 12781  000484  D01E               	goto	l20380
 12782  000486                     l20362:
 12783                           
 12784                           ; BSR set to: 2
 12785                           ;lorawan.c: 1242: else;lorawan.c: 1243: {;lorawan.c: 1244: if ( (0 == hdr->members.fCnt)
      +                           && (0xFFFF == loRa.fMcastCntDown.members.valueLow) )
 12786  000486  0100               	movlb	0	; () banked
 12787  000488  EE20 F006          	lfsr	2,6
 12788  00048C  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12789  00048E  26D9               	addwf	fsr2l,f,c
 12790  000490  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12791  000492  22DA               	addwfc	fsr2h,f,c
 12792  000494  50DE               	movf	postinc2,w,c
 12793  000496  10DE               	iorwf	postinc2,w,c
 12794  000498  A4D8               	btfss	status,2,c
 12795  00049A  D00D               	goto	l20370
 12796                           
 12797                           ; BSR set to: 0
 12798  00049C  0102               	movlb	2	; () banked
 12799  00049E  2913               	incf	(_loRa+14)& (0+255),w,b
 12800  0004A0  E10A               	bnz	l20370
 12801  0004A2  2914               	incf	(_loRa+15)& (0+255),w,b
 12802  0004A4  A4D8               	btfss	status,2,c
 12803  0004A6  D007               	goto	l20370
 12804                           
 12805                           ; BSR set to: 2
 12806                           ;lorawan.c: 1245: {;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 12807  0004A8  0E00               	movlw	0
 12808  0004AA  6F14               	movwf	(_loRa+15)& (0+255),b
 12809  0004AC  0E00               	movlw	0
 12810  0004AE  6F13               	movwf	(_loRa+14)& (0+255),b
 12811                           
 12812                           ; BSR set to: 2
 12813                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 12814  0004B0  4B15               	infsnz	(_loRa+16)& (0+255),f,b
 12815  0004B2  2B16               	incf	(_loRa+17)& (0+255),f,b
 12816                           
 12817                           ;lorawan.c: 1248: }
 12818  0004B4  D006               	goto	l20380
 12819  0004B6                     l20370:
 12820                           
 12821                           ;lorawan.c: 1249: else;lorawan.c: 1250: {;lorawan.c: 1251: if (rxPayload.RxAppData != (0
      +                          ))
 12822  0004B6  0101               	movlb	1	; () banked
 12823  0004B8  510E               	movf	_rxPayload& (0+255),w,b
 12824  0004BA  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12825  0004BC  A4D8               	btfss	status,2,c
 12826  0004BE  D7C9               	goto	u22330
 12827  0004C0  D710               	goto	u22290
 12828  0004C2                     l20380:
 12829                           
 12830                           ;lorawan.c: 1259: };lorawan.c: 1260: };lorawan.c: 1262: if (loRa.fMcastCntDown.value == 
      +                          (4294967295UL))
 12831  0004C2  0102               	movlb	2	; () banked
 12832  0004C4  2913               	incf	(_loRa+14)& (0+255),w,b
 12833  0004C6  E107               	bnz	l20392
 12834  0004C8  2914               	incf	(_loRa+15)& (0+255),w,b
 12835  0004CA  E105               	bnz	l20392
 12836  0004CC  2915               	incf	(_loRa+16)& (0+255),w,b
 12837  0004CE  E103               	bnz	l20392
 12838  0004D0  2916               	incf	(_loRa+17)& (0+255),w,b
 12839  0004D2  B4D8               	btfsc	status,2,c
 12840  0004D4  D7F0               	goto	l20370
 12841  0004D6                     l20392:
 12842                           
 12843                           ; BSR set to: 2
 12844                           ;lorawan.c: 1272: };lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 12845  0004D6  5107               	movf	(_loRa+2)& (0+255),w,b
 12846  0004D8  0B0F               	andlw	15
 12847  0004DA  0A08               	xorlw	8
 12848  0004DC  A4D8               	btfss	status,2,c
 12849  0004DE  D008               	goto	l20396
 12850                           
 12851                           ; BSR set to: 2
 12852                           ;lorawan.c: 1275: {;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 12853  0004E0  51E9               	movf	(_loRa+228)& (0+255),w,b
 12854  0004E2  ECD5  F051         	call	_SwTimerStop
 12855                           
 12856                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 12857  0004E6  0102               	movlb	2	; () banked
 12858  0004E8  51EA               	movf	(_loRa+229)& (0+255),w,b
 12859  0004EA  ECD5  F051         	call	_SwTimerStop
 12860                           
 12861                           ;lorawan.c: 1278: }
 12862  0004EE  D008               	goto	l20400
 12863  0004F0                     l20396:
 12864                           
 12865                           ; BSR set to: 2
 12866                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 12867  0004F0  5107               	movf	(_loRa+2)& (0+255),w,b
 12868  0004F2  0B0F               	andlw	15
 12869  0004F4  0A03               	xorlw	3
 12870  0004F6  A4D8               	btfss	status,2,c
 12871  0004F8  D003               	goto	l20400
 12872                           
 12873                           ; BSR set to: 2
 12874                           ;lorawan.c: 1280: {;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 12875  0004FA  51EA               	movf	(_loRa+229)& (0+255),w,b
 12876  0004FC  ECD5  F051         	call	_SwTimerStop
 12877  000500                     l20400:
 12878                           
 12879                           ;lorawan.c: 1282: };lorawan.c: 1284: buffer = buffer + 8;
 12880  000500  0E08               	movlw	8
 12881  000502  0101               	movlb	1	; () banked
 12882  000504  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12883  000506  6FDA               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 12884  000508  0E00               	movlw	0
 12885  00050A  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12886  00050C  6FDB               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 12887                           
 12888                           ; BSR set to: 1
 12889                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 12890  00050E  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12891  000510  0100               	movlb	0	; () banked
 12892  000512  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 12893  000514  6BDC               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12894  000516  EE20 F005          	lfsr	2,5
 12895  00051A  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12896  00051C  26D9               	addwf	fsr2l,f,c
 12897  00051E  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12898  000520  22DA               	addwfc	fsr2h,f,c
 12899  000522  50DF               	movf	223,w,c
 12900  000524  0B0F               	andlw	15
 12901  000526  6FDD               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12902  000528  6BDE               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12903  00052A  0E0C               	movlw	12
 12904  00052C  27DD               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12905  00052E  0E00               	movlw	0
 12906  000530  23DE               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12907  000532  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12908  000534  19DD               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12909  000536  E104               	bnz	u22420
 12910  000538  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12911  00053A  19DE               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12912  00053C  B4D8               	btfsc	status,2,c
 12913  00053E  D037               	goto	l20416
 12914  000540                     u22420:
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;lorawan.c: 1287: {;lorawan.c: 1288: fPort = *(buffer++);
 12918  000540  C1DA  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12919  000544  C1DB  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12920  000548  50DF               	movf	indf2,w,c
 12921  00054A  6FE0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 12922                           
 12923                           ; BSR set to: 0
 12924  00054C  0101               	movlb	1	; () banked
 12925  00054E  4BDA               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 12926  000550  2BDB               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 12927                           
 12928                           ; BSR set to: 1
 12929                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 12930  000552  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12931  000554  0FF4               	addlw	244
 12932  000556  0100               	movlb	0	; () banked
 12933  000558  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 12937  00055A  0E19               	movlw	25
 12938  00055C  6FE7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 12942  00055E  C1DA  F092         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 12943  000562  C1DB  F093         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 12944  000566  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12945  000568  6F94               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 12946  00056A  0E01               	movlw	1
 12947  00056C  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 12948  00056E  C213  F096         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 12949  000572  C214  F097         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 12950  000576  C215  F098         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 12951  00057A  C216  F099         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 12952  00057E  0E7B               	movlw	low (_loRa+118)
 12953  000580  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 12954  000582  0E02               	movlw	high (_loRa+118)
 12955  000584  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 12956  000586  C0E7  F09C         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 12957  00058A  0EC7               	movlw	low _radioBuffer
 12958  00058C  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 12959  00058E  0E07               	movlw	high _radioBuffer
 12960  000590  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 12961  000592  0E01               	movlw	1
 12962  000594  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 12963  000596  EC95  F026         	call	_EncryptFRMPayload	;wreg free
 12964                           
 12965                           ;lorawan.c: 1294: packet = buffer - 1;
 12966  00059A  0EFF               	movlw	255
 12967  00059C  0101               	movlb	1	; () banked
 12968  00059E  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12969  0005A0  0100               	movlb	0	; () banked
 12970  0005A2  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12971  0005A4  0EFF               	movlw	255
 12972  0005A6  0101               	movlb	1	; () banked
 12973  0005A8  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12974  0005AA  0100               	movlb	0	; () banked
 12975  0005AC  D005               	goto	L14
 12976  0005AE                     l20416:
 12977                           
 12978                           ; BSR set to: 0
 12979                           ;lorawan.c: 1296: else;lorawan.c: 1297: {;lorawan.c: 1298: frmPayloadLength = 0;
 12980  0005AE  0E00               	movlw	0
 12981  0005B0  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;lorawan.c: 1299: packet = (0);
 12985  0005B2  0E00               	movlw	0
 12986  0005B4  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12987  0005B6  0E00               	movlw	0
 12988  0005B8                     L14:
 12989  0005B8  6FEA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 12990                           
 12991                           ; BSR set to: 0
 12992                           ;lorawan.c: 1300: };lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 12993  0005BA  0102               	movlb	2	; () banked
 12994  0005BC  8308               	bsf	(_loRa+3)& (0+255),1,b
 12995                           
 12996                           ; BSR set to: 2
 12997                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 12998  0005BE  0EF0               	movlw	-16
 12999  0005C0  1707               	andwf	(_loRa+2)& (0+255),f,b
 13000                           
 13001                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 13002  0005C2  0101               	movlb	1	; () banked
 13003  0005C4  510E               	movf	_rxPayload& (0+255),w,b
 13004  0005C6  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13005  0005C8  B4D8               	btfsc	status,2,c
 13006  0005CA  D68B               	goto	u22290
 13007                           
 13008                           ; BSR set to: 1
 13009                           ;lorawan.c: 1306: {;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_
      +                          OK);
 13010  0005CC  C0E9  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 13011  0005D0  C0EA  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 13012  0005D4  C0F1  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 13013  0005D8  0E01               	movlw	1
 13014  0005DA  0100               	movlb	0	; () banked
 13015  0005DC  6F63               	movwf	RxData@status& (0+255),b
 13016  0005DE  D801               	call	u22448
 13017  0005E0  D680               	goto	u22290
 13018  0005E2                     u22448:
 13019  0005E2  0005               	push	
 13020  0005E4  6EFA               	movwf	pclath,c
 13021  0005E6                     L16:
 13022  0005E6  0101               	movlb	1	; () banked
 13023  0005E8  510E               	movf	_rxPayload& (0+255),w,b
 13024  0005EA  6EFD               	movwf	tosl,c
 13025  0005EC  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13026  0005EE  6EFE               	movwf	tosh,c
 13027  0005F0  6AFF               	clrf	tosu,c
 13028  0005F2  50FA               	movf	pclath,w,c
 13029  0005F4  0012               	return		;indir
 13030  0005F6                     l20432:
 13031                           
 13032                           ; BSR set to: 2
 13033                           ;lorawan.c: 1313: };lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationPa
      +                          rameters.deviceAddress.value)
 13034  0005F6  0100               	movlb	0	; () banked
 13035  0005F8  EE20 F001          	lfsr	2,1
 13036  0005FC  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13037  0005FE  26D9               	addwf	fsr2l,f,c
 13038  000600  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13039  000602  22DA               	addwfc	fsr2h,f,c
 13040  000604  0102               	movlb	2	; () banked
 13041  000606  5123               	movf	(_loRa+30)& (0+255),w,b
 13042  000608  18DE               	xorwf	postinc2,w,c
 13043  00060A  E10A               	bnz	u22450
 13044  00060C  5124               	movf	(_loRa+31)& (0+255),w,b
 13045  00060E  18DE               	xorwf	postinc2,w,c
 13046  000610  E107               	bnz	u22450
 13047  000612  5125               	movf	(_loRa+32)& (0+255),w,b
 13048  000614  18DE               	xorwf	postinc2,w,c
 13049  000616  E104               	bnz	u22450
 13050  000618  5126               	movf	(_loRa+33)& (0+255),w,b
 13051  00061A  18DE               	xorwf	postinc2,w,c
 13052  00061C  B4D8               	btfsc	status,2,c
 13053  00061E  D008               	goto	l20444
 13054  000620                     u22450:
 13055                           
 13056                           ; BSR set to: 2
 13057                           ;lorawan.c: 1317: {;lorawan.c: 1318: SetReceptionNotOkState();
 13058  000620  EC5B  F043         	call	_SetReceptionNotOkState	;wreg free
 13059  000624                     l20436:
 13060                           
 13061                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 13062  000624  0E02               	movlw	2
 13063  000626  0102               	movlb	2	; () banked
 13064  000628                     L17:
 13065  000628  1917               	xorwf	(_loRa+18)& (0+255),w,b
 13066  00062A  A4D8               	btfss	status,2,c
 13067  00062C  0012               	return	
 13068  00062E  D659               	goto	u22290
 13069  000630                     l20444:
 13070                           
 13071                           ; BSR set to: 2
 13072                           ;lorawan.c: 1325: };lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, buff
      +                          erLength - sizeof (computedMic), 0x49, 0);
 13073  000630  0100               	movlb	0	; () banked
 13074  000632  EE20 F006          	lfsr	2,6
 13075  000636  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13076  000638  26D9               	addwf	fsr2l,f,c
 13077  00063A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13078  00063C  22DA               	addwfc	fsr2h,f,c
 13079  00063E  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 13080  000642  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 13081  000646  C0DB  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 13082  00064A  C0DC  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 13083  00064E  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 13084  000650  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 13085  000652  0101               	movlb	1	; () banked
 13086  000654  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13087  000656  0FFC               	addlw	252
 13088  000658  0100               	movlb	0	; () banked
 13089  00065A  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 13090  00065C  0E49               	movlw	73
 13091  00065E  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 13092  000660  0E00               	movlw	0
 13093  000662  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 13094  000664  0E01               	movlw	1
 13095  000666  ECC7  F03A         	call	_AssembleEncryptionBlock
 13096                           
 13097                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 13098  00066A  0EC7               	movlw	low _radioBuffer
 13099  00066C  0100               	movlb	0	; () banked
 13100  00066E  6F60               	movwf	memcpy@d1& (0+255),b
 13101  000670  0E07               	movlw	high _radioBuffer
 13102  000672  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13103  000674  0E5F               	movlw	low _aesBuffer
 13104  000676  6F62               	movwf	memcpy@s1& (0+255),b
 13105  000678  0E01               	movlw	high _aesBuffer
 13106  00067A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13107  00067C  0E00               	movlw	0
 13108  00067E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13109  000680  0E10               	movlw	16
 13110  000682  6F64               	movwf	memcpy@n& (0+255),b
 13111  000684  ECEC  F047         	call	_memcpy	;wreg free
 13112                           
 13113                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 13114  000688  0ED7               	movlw	low (_radioBuffer+16)
 13115  00068A  0100               	movlb	0	; () banked
 13116  00068C  6F60               	movwf	memcpy@d1& (0+255),b
 13117  00068E  0E07               	movlw	high (_radioBuffer+16)
 13118  000690  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13119  000692  C1DA  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 13120  000696  C1DB  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 13121  00069A  0EFC               	movlw	252
 13122  00069C  0101               	movlb	1	; () banked
 13123  00069E  25DC               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13124  0006A0  0100               	movlb	0	; () banked
 13125  0006A2  6F64               	movwf	memcpy@n& (0+255),b
 13126  0006A4  6B65               	clrf	(memcpy@n+1)& (0+255),b
 13127  0006A6  0EFF               	movlw	255
 13128  0006A8  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 13129  0006AA  ECEC  F047         	call	_memcpy	;wreg free
 13130                           
 13131                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 13132  0006AE  0E27               	movlw	low (_loRa+34)
 13133  0006B0  0100               	movlb	0	; () banked
 13134  0006B2  6FBA               	movwf	AESCmac@key& (0+255),b
 13135  0006B4  0E02               	movlw	high (_loRa+34)
 13136  0006B6  6FBB               	movwf	(AESCmac@key+1)& (0+255),b
 13137  0006B8  0E5F               	movlw	low _aesBuffer
 13138  0006BA  6FBC               	movwf	AESCmac@output& (0+255),b
 13139  0006BC  0E01               	movlw	high _aesBuffer
 13140  0006BE  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 13141  0006C0  0EC7               	movlw	low _radioBuffer
 13142  0006C2  6FBE               	movwf	AESCmac@input& (0+255),b
 13143  0006C4  0E07               	movlw	high _radioBuffer
 13144  0006C6  6FBF               	movwf	(AESCmac@input+1)& (0+255),b
 13145  0006C8  0101               	movlb	1	; () banked
 13146  0006CA  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13147  0006CC  0F0C               	addlw	12
 13148  0006CE  0100               	movlb	0	; () banked
 13149  0006D0  6FC0               	movwf	AESCmac@size& (0+255),b
 13150  0006D2  ECAD  F00D         	call	_AESCmac	;wreg free
 13151                           
 13152                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 13153  0006D6  0EEB               	movlw	low LORAWAN_RxDone@computedMic
 13154  0006D8  0100               	movlb	0	; () banked
 13155  0006DA  6F60               	movwf	memcpy@d1& (0+255),b
 13156  0006DC  0E00               	movlw	high LORAWAN_RxDone@computedMic
 13157  0006DE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13158  0006E0  0E5F               	movlw	low _aesBuffer
 13159  0006E2  6F62               	movwf	memcpy@s1& (0+255),b
 13160  0006E4  0E01               	movlw	high _aesBuffer
 13161  0006E6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13162  0006E8  0E00               	movlw	0
 13163  0006EA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13164  0006EC  0E04               	movlw	4
 13165  0006EE  6F64               	movwf	memcpy@n& (0+255),b
 13166  0006F0  ECEC  F047         	call	_memcpy	;wreg free
 13167                           
 13168                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 13169  0006F4  C1DA  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 13170  0006F8  C1DB  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 13171  0006FC  C1DC  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 13172  000700  ECC9  F04A         	call	_ExtractMic	;wreg free
 13173  000704  C06B  F0E3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 13174  000708  C06C  F0E4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 13175  00070C  C06D  F0E5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 13176  000710  C06E  F0E6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 13177                           
 13178                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 13179  000714  0100               	movlb	0	; () banked
 13180  000716  51E3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 13181  000718  19EB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 13182  00071A  E10A               	bnz	u22470
 13183  00071C  51E4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 13184  00071E  19EC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 13185  000720  E107               	bnz	u22470
 13186  000722  51E5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 13187  000724  19ED               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 13188  000726  E104               	bnz	u22470
 13189  000728  51E6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 13190  00072A  19EE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 13191  00072C  B4D8               	btfsc	status,2,c
 13192  00072E  D003               	goto	l20464
 13193  000730                     u22470:
 13194                           
 13195                           ; BSR set to: 0
 13196                           ;lorawan.c: 1337: {;lorawan.c: 1338: SetReceptionNotOkState();
 13197  000730  EC5B  F043         	call	_SetReceptionNotOkState	;wreg free
 13198  000734  D777               	goto	l20436
 13199  000736                     l20464:
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;lorawan.c: 1345: };lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valu
      +                          eLow)
 13203  000736  EE20 F006          	lfsr	2,6
 13204  00073A  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13205  00073C  26D9               	addwf	fsr2l,f,c
 13206  00073E  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13207  000740  22DA               	addwfc	fsr2h,f,c
 13208  000742  0102               	movlb	2	; () banked
 13209  000744  510F               	movf	(_loRa+10)& (0+255),w,b
 13210  000746  5CDE               	subwf	postinc2,w,c
 13211  000748  5110               	movf	(_loRa+11)& (0+255),w,b
 13212  00074A  58DE               	subwfb	postinc2,w,c
 13213  00074C  A0D8               	btfss	status,0,c
 13214  00074E  D04A               	goto	l20494
 13215                           
 13216                           ; BSR set to: 2
 13217                           ;lorawan.c: 1349: {;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valu
      +                          eLow) > loRa.protocolParameters.maxFcntGap)
 13218  000750  0100               	movlb	0	; () banked
 13219  000752  EE20 F006          	lfsr	2,6
 13220  000756  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13221  000758  26D9               	addwf	fsr2l,f,c
 13222  00075A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13223  00075C  22DA               	addwfc	fsr2h,f,c
 13224  00075E  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 13225  000762  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 13226  000766  0102               	movlb	2	; () banked
 13227  000768  510F               	movf	(_loRa+10)& (0+255),w,b
 13228  00076A  0100               	movlb	0	; () banked
 13229  00076C  5FDB               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 13230  00076E  0102               	movlb	2	; () banked
 13231  000770  5110               	movf	(_loRa+11)& (0+255),w,b
 13232  000772  0100               	movlb	0	; () banked
 13233  000774  5BDC               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 13234  000776  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13235  000778  0102               	movlb	2	; () banked
 13236  00077A  5DA1               	subwf	(_loRa+156)& (0+255),w,b
 13237  00077C  0100               	movlb	0	; () banked
 13238  00077E  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13239  000780  0102               	movlb	2	; () banked
 13240  000782  59A2               	subwfb	(_loRa+157)& (0+255),w,b
 13241  000784  B0D8               	btfsc	status,0,c
 13242  000786  D022               	goto	l20492
 13243                           
 13244                           ; BSR set to: 2
 13245                           ;lorawan.c: 1351: {;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 13246  000788  9105               	bcf	_loRa& (0+255),0,b
 13247                           
 13248                           ; BSR set to: 2
 13249                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 13250  00078A  0EF0               	movlw	-16
 13251  00078C  1707               	andwf	(_loRa+2)& (0+255),f,b
 13252                           
 13253                           ; BSR set to: 2
 13254                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 13255  00078E  0101               	movlb	1	; () banked
 13256  000790  510E               	movf	_rxPayload& (0+255),w,b
 13257  000792  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13258  000794  B4D8               	btfsc	status,2,c
 13259  000796  D017               	goto	u22529
 13260                           
 13261                           ; BSR set to: 1
 13262                           ;lorawan.c: 1355: {;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 13263  000798  0102               	movlb	2	; () banked
 13264  00079A  9B05               	bcf	_loRa& (0+255),5,b
 13265                           
 13266                           ; BSR set to: 2
 13267                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13268  00079C  0E00               	movlw	0
 13269  00079E  0100               	movlb	0	; () banked
 13270  0007A0  6F60               	movwf	RxData@pData& (0+255),b
 13271  0007A2  0E00               	movlw	0
 13272  0007A4  6F61               	movwf	(RxData@pData+1)& (0+255),b
 13273  0007A6  0E00               	movlw	0
 13274  0007A8  6F62               	movwf	RxData@dataLength& (0+255),b
 13275  0007AA  0E00               	movlw	0
 13276  0007AC  6F63               	movwf	RxData@status& (0+255),b
 13277  0007AE  D801               	call	u22528
 13278  0007B0  D00A               	goto	u22529
 13279  0007B2                     u22528:
 13280  0007B2  0005               	push	
 13281  0007B4  6EFA               	movwf	pclath,c
 13282  0007B6  0101               	movlb	1	; () banked
 13283  0007B8  510E               	movf	_rxPayload& (0+255),w,b
 13284  0007BA  6EFD               	movwf	tosl,c
 13285  0007BC  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13286  0007BE  6EFE               	movwf	tosh,c
 13287  0007C0  6AFF               	clrf	tosu,c
 13288  0007C2  50FA               	movf	pclath,w,c
 13289  0007C4  0012               	return		;indir
 13290  0007C6                     u22529:
 13291                           
 13292                           ;lorawan.c: 1358: };lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 13293  0007C6  0102               	movlb	2	; () banked
 13294  0007C8  9308               	bcf	(_loRa+3)& (0+255),1,b
 13295  0007CA  D039               	goto	u22570
 13296  0007CC                     l20492:
 13297                           
 13298                           ; BSR set to: 2
 13299                           ;lorawan.c: 1370: else;lorawan.c: 1371: {;lorawan.c: 1372: loRa.fCntDown.members.valueLo
      +                          w = hdr->members.fCnt;
 13300  0007CC  0100               	movlb	0	; () banked
 13301  0007CE  EE20 F006          	lfsr	2,6
 13302  0007D2  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13303  0007D4  26D9               	addwf	fsr2l,f,c
 13304  0007D6  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13305  0007D8  22DA               	addwfc	fsr2h,f,c
 13306  0007DA  CFDE F20F          	movff	postinc2,_loRa+10
 13307  0007DE  CFDD F210          	movff	postdec2,_loRa+11
 13308  0007E2  D023               	goto	l20512
 13309  0007E4                     l20494:
 13310                           
 13311                           ; BSR set to: 2
 13312                           ;lorawan.c: 1375: else;lorawan.c: 1376: {;lorawan.c: 1377: if((hdr->members.fCnt == 0) &
      +                          & (loRa.fCntDown.members.valueLow == 0xFFFF))
 13313  0007E4  0100               	movlb	0	; () banked
 13314  0007E6  EE20 F006          	lfsr	2,6
 13315  0007EA  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13316  0007EC  26D9               	addwf	fsr2l,f,c
 13317  0007EE  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13318  0007F0  22DA               	addwfc	fsr2h,f,c
 13319  0007F2  50DE               	movf	postinc2,w,c
 13320  0007F4  10DE               	iorwf	postinc2,w,c
 13321  0007F6  A4D8               	btfss	status,2,c
 13322  0007F8  D015               	goto	l20502
 13323                           
 13324                           ; BSR set to: 0
 13325  0007FA  0102               	movlb	2	; () banked
 13326  0007FC  290F               	incf	(_loRa+10)& (0+255),w,b
 13327  0007FE  E112               	bnz	l20502
 13328  000800  2910               	incf	(_loRa+11)& (0+255),w,b
 13329  000802  A4D8               	btfss	status,2,c
 13330  000804  D00F               	goto	l20502
 13331                           
 13332                           ; BSR set to: 2
 13333                           ;lorawan.c: 1378: {;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 13334  000806  0100               	movlb	0	; () banked
 13335  000808  EE20 F006          	lfsr	2,6
 13336  00080C  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13337  00080E  26D9               	addwf	fsr2l,f,c
 13338  000810  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13339  000812  22DA               	addwfc	fsr2h,f,c
 13340  000814  CFDE F20F          	movff	postinc2,_loRa+10
 13341  000818  CFDD F210          	movff	postdec2,_loRa+11
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 13345  00081C  0102               	movlb	2	; () banked
 13346  00081E  4B11               	infsnz	(_loRa+12)& (0+255),f,b
 13347  000820  2B12               	incf	(_loRa+13)& (0+255),f,b
 13348                           
 13349                           ;lorawan.c: 1382: }
 13350  000822  D003               	goto	l20512
 13351  000824                     l20502:
 13352                           
 13353                           ;lorawan.c: 1383: else;lorawan.c: 1384: {;lorawan.c: 1385: SetReceptionNotOkState();
 13354  000824  EC5B  F043         	call	_SetReceptionNotOkState	;wreg free
 13355  000828  D6FD               	goto	l20436
 13356  00082A                     l20512:
 13357                           
 13358                           ;lorawan.c: 1393: };lorawan.c: 1394: };lorawan.c: 1396: if (loRa.fCntDown.value == (4294
      +                          967295UL))
 13359  00082A  0102               	movlb	2	; () banked
 13360  00082C  290F               	incf	(_loRa+10)& (0+255),w,b
 13361  00082E  E10A               	bnz	l20524
 13362  000830  2910               	incf	(_loRa+11)& (0+255),w,b
 13363  000832  E108               	bnz	l20524
 13364  000834  2911               	incf	(_loRa+12)& (0+255),w,b
 13365  000836  E106               	bnz	l20524
 13366  000838  2912               	incf	(_loRa+13)& (0+255),w,b
 13367  00083A  A4D8               	btfss	status,2,c
 13368  00083C  D003               	goto	l20524
 13369  00083E                     u22570:
 13370                           
 13371                           ; BSR set to: 2
 13372                           ;lorawan.c: 1397: {;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 13373  00083E  8309               	bsf	(_loRa+4)& (0+255),1,b
 13374                           
 13375                           ; BSR set to: 2
 13376                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 13377  000840  0E02               	movlw	2
 13378  000842  D6F2               	goto	L17
 13379  000844                     l20524:
 13380                           
 13381                           ; BSR set to: 2
 13382                           ;lorawan.c: 1407: };lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 13383  000844  5107               	movf	(_loRa+2)& (0+255),w,b
 13384  000846  0B0F               	andlw	15
 13385  000848  0A03               	xorlw	3
 13386  00084A  A4D8               	btfss	status,2,c
 13387  00084C  D003               	goto	l20528
 13388                           
 13389                           ; BSR set to: 2
 13390                           ;lorawan.c: 1411: {;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 13391  00084E  51EA               	movf	(_loRa+229)& (0+255),w,b
 13392  000850  ECD5  F051         	call	_SwTimerStop
 13393  000854                     l20528:
 13394                           
 13395                           ;lorawan.c: 1413: };lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 13396  000854  0E01               	movlw	1
 13397  000856  0102               	movlb	2	; () banked
 13398  000858  6FDD               	movwf	(_loRa+216)& (0+255),b
 13399                           
 13400                           ; BSR set to: 2
 13401                           ;lorawan.c: 1417: CheckFlags (hdr);
 13402  00085A  C0F2  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 13403  00085E  C0F3  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 13404  000862  EC4B  F048         	call	_CheckFlags	;wreg free
 13405                           
 13406                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 13407  000866  0100               	movlb	0	; () banked
 13408  000868  EE20 F005          	lfsr	2,5
 13409  00086C  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13410  00086E  26D9               	addwf	fsr2l,f,c
 13411  000870  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13412  000872  22DA               	addwfc	fsr2h,f,c
 13413  000874  50DF               	movf	223,w,c
 13414  000876  0B0F               	andlw	15
 13415  000878  0900               	iorlw	0
 13416  00087A  B4D8               	btfsc	status,2,c
 13417  00087C  D016               	goto	l20536
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;lorawan.c: 1420: {;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommand
      +                          s, hdr->members.fCtrl.fOptsLen);
 13421  00087E  0E08               	movlw	8
 13422  000880  25F2               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 13423  000882  6FA6               	movwf	MacExecuteCommands@buffer& (0+255),b
 13424  000884  0E00               	movlw	0
 13425  000886  21F3               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13426  000888  6FA7               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 13427  00088A  EE20 F005          	lfsr	2,5
 13428  00088E  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13429  000890  26D9               	addwf	fsr2l,f,c
 13430  000892  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13431  000894  22DA               	addwfc	fsr2h,f,c
 13432  000896  50DF               	movf	223,w,c
 13433  000898  0B0F               	andlw	15
 13434  00089A  6FA8               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 13435  00089C  EC22  F021         	call	_MacExecuteCommands	;wreg free
 13436  0008A0  C0A6  F1DA         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 13437  0008A4  C0A7  F1DB         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 13438                           
 13439                           ;lorawan.c: 1422: }
 13440  0008A8  D007               	goto	l20538
 13441  0008AA                     l20536:
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;lorawan.c: 1423: else;lorawan.c: 1424: {;lorawan.c: 1425: buffer = buffer + 8;
 13445  0008AA  0E08               	movlw	8
 13446  0008AC  0101               	movlb	1	; () banked
 13447  0008AE  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13448  0008B0  6FDA               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 13449  0008B2  0E00               	movlw	0
 13450  0008B4  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13451  0008B6  6FDB               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 13452  0008B8                     l20538:
 13453                           
 13454                           ;lorawan.c: 1426: };lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOp
      +                          tsLen + 8) != bufferLength)
 13455  0008B8  0101               	movlb	1	; () banked
 13456  0008BA  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13457  0008BC  0100               	movlb	0	; () banked
 13458  0008BE  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13459  0008C0  6BDC               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13460  0008C2  EE20 F005          	lfsr	2,5
 13461  0008C6  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13462  0008C8  26D9               	addwf	fsr2l,f,c
 13463  0008CA  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13464  0008CC  22DA               	addwfc	fsr2h,f,c
 13465  0008CE  50DF               	movf	223,w,c
 13466  0008D0  0B0F               	andlw	15
 13467  0008D2  6FDD               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13468  0008D4  6BDE               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13469  0008D6  0E0C               	movlw	12
 13470  0008D8  27DD               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13471  0008DA  0E00               	movlw	0
 13472  0008DC  23DE               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13473  0008DE  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13474  0008E0  19DD               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13475  0008E2  E104               	bnz	u22610
 13476  0008E4  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13477  0008E6  19DE               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13478  0008E8  B4D8               	btfsc	status,2,c
 13479  0008EA  D096               	goto	l20560
 13480  0008EC                     u22610:
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;lorawan.c: 1428: {;lorawan.c: 1429: fPort = *(buffer++);
 13484  0008EC  C1DA  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 13485  0008F0  C1DB  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 13486  0008F4  50DF               	movf	indf2,w,c
 13487  0008F6  6FE0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 13488                           
 13489                           ; BSR set to: 0
 13490  0008F8  0101               	movlb	1	; () banked
 13491  0008FA  4BDA               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 13492  0008FC  2BDB               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 13493                           
 13494                           ; BSR set to: 1
 13495                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 13496  0008FE  0100               	movlb	0	; () banked
 13497  000900  EE20 F005          	lfsr	2,5
 13498  000904  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13499  000906  26D9               	addwf	fsr2l,f,c
 13500  000908  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13501  00090A  22DA               	addwfc	fsr2h,f,c
 13502  00090C  50DF               	movf	223,w,c
 13503  00090E  0B0F               	andlw	15
 13504  000910  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13505  000912  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13506  000914  0101               	movlb	1	; () banked
 13507  000916  5DDC               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13508  000918  0FF4               	addlw	244
 13509  00091A  0100               	movlb	0	; () banked
 13510  00091C  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 13514  00091E  EE20 F005          	lfsr	2,5
 13515  000922  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13516  000924  26D9               	addwf	fsr2l,f,c
 13517  000926  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13518  000928  22DA               	addwfc	fsr2h,f,c
 13519  00092A  50DF               	movf	223,w,c
 13520  00092C  0B0F               	andlw	15
 13521  00092E  0F19               	addlw	25
 13522  000930  6FE7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 13523                           
 13524                           ; BSR set to: 0
 13525                           ;lorawan.c: 1434: if (fPort != 0)
 13526  000932  51E0               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 13527  000934  B4D8               	btfsc	status,2,c
 13528  000936  D028               	goto	l20554
 13529                           
 13530                           ; BSR set to: 0
 13531                           ;lorawan.c: 1435: {;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1,
      +                           loRa.fCntDown.value, loRa.activationParameters.applicationSessionKey, bufferIndex, radi
      +                          oBuffer, 0);
 13532  000938  C1DA  F092         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13533  00093C  C1DB  F093         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13534  000940  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13535  000942  6F94               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13536  000944  0E01               	movlw	1
 13537  000946  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 13538  000948  C20F  F096         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13539  00094C  C210  F097         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13540  000950  C211  F098         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13541  000954  C212  F099         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13542  000958  0E37               	movlw	low (_loRa+50)
 13543  00095A  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 13544  00095C  0E02               	movlw	high (_loRa+50)
 13545  00095E  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13546  000960  C0E7  F09C         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13547  000964  0EC7               	movlw	low _radioBuffer
 13548  000966  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13549  000968  0E07               	movlw	high _radioBuffer
 13550  00096A  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13551  00096C  0E00               	movlw	0
 13552  00096E  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13553  000970  EC95  F026         	call	_EncryptFRMPayload	;wreg free
 13554                           
 13555                           ;lorawan.c: 1437: packet = buffer - 1;
 13556  000974  0EFF               	movlw	255
 13557  000976  0101               	movlb	1	; () banked
 13558  000978  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13559  00097A  0100               	movlb	0	; () banked
 13560  00097C  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13561  00097E  0EFF               	movlw	255
 13562  000980  0101               	movlb	1	; () banked
 13563  000982  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13564  000984  0100               	movlb	0	; () banked
 13565  000986  D04E               	goto	L15
 13566  000988                     l20554:
 13567                           
 13568                           ; BSR set to: 0
 13569                           ;lorawan.c: 1439: else;lorawan.c: 1440: {;lorawan.c: 1442: if(bufferLength > (13 + hdr->
      +                          members.fCtrl.fOptsLen))
 13570  000988  0101               	movlb	1	; () banked
 13571  00098A  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13572  00098C  0100               	movlb	0	; () banked
 13573  00098E  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13574  000990  6BDC               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13575  000992  EE20 F005          	lfsr	2,5
 13576  000996  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13577  000998  26D9               	addwf	fsr2l,f,c
 13578  00099A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13579  00099C  22DA               	addwfc	fsr2h,f,c
 13580  00099E  50DF               	movf	223,w,c
 13581  0009A0  0B0F               	andlw	15
 13582  0009A2  6FDD               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13583  0009A4  6BDE               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13584  0009A6  0E0D               	movlw	13
 13585  0009A8  27DD               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13586  0009AA  0E00               	movlw	0
 13587  0009AC  23DE               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13588  0009AE  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13589  0009B0  5DDD               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13590  0009B2  51DE               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13591  0009B4  0A80               	xorlw	128
 13592  0009B6  6FDF               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 13593  0009B8  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13594  0009BA  0A80               	xorlw	128
 13595  0009BC  59DF               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 13596  0009BE  B0D8               	btfsc	status,0,c
 13597  0009C0  D02B               	goto	l20560
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;lorawan.c: 1443: {;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1,
      +                           loRa.fCntDown.value, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuf
      +                          fer, 0);
 13601  0009C2  C1DA  F092         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13602  0009C6  C1DB  F093         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13603  0009CA  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13604  0009CC  6F94               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13605  0009CE  0E01               	movlw	1
 13606  0009D0  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 13607  0009D2  C20F  F096         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13608  0009D6  C210  F097         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13609  0009DA  C211  F098         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13610  0009DE  C212  F099         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13611  0009E2  0E27               	movlw	low (_loRa+34)
 13612  0009E4  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 13613  0009E6  0E02               	movlw	high (_loRa+34)
 13614  0009E8  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13615  0009EA  C0E7  F09C         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13616  0009EE  0EC7               	movlw	low _radioBuffer
 13617  0009F0  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13618  0009F2  0E07               	movlw	high _radioBuffer
 13619  0009F4  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13620  0009F6  0E00               	movlw	0
 13621  0009F8  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13622  0009FA  EC95  F026         	call	_EncryptFRMPayload	;wreg free
 13623                           
 13624                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 13625  0009FE  C1DA  F0A6         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 13626  000A02  C1DB  F0A7         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 13627  000A06  0100               	movlb	0	; () banked
 13628  000A08  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13629  000A0A  6FA8               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 13630  000A0C  EC22  F021         	call	_MacExecuteCommands	;wreg free
 13631  000A10  C0A6  F1DA         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 13632  000A14  C0A7  F1DB         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 13633  000A18                     l20560:
 13634                           
 13635                           ;lorawan.c: 1447: };lorawan.c: 1449: frmPayloadLength = 0;
 13636  000A18  0E00               	movlw	0
 13637  000A1A  0100               	movlb	0	; () banked
 13638  000A1C  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13639                           
 13640                           ; BSR set to: 0
 13641                           ;lorawan.c: 1450: packet = (0);
 13642  000A1E  0E00               	movlw	0
 13643  000A20  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13644  000A22  0E00               	movlw	0
 13645  000A24                     L15:
 13646  000A24  6FEA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 13647                           
 13648                           ; BSR set to: 0
 13649                           ;lorawan.c: 1457: };lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 13650  000A26  0E01               	movlw	1
 13651  000A28  0102               	movlb	2	; () banked
 13652  000A2A  6FDD               	movwf	(_loRa+216)& (0+255),b
 13653                           
 13654                           ; BSR set to: 2
 13655                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 13656  000A2C  0E00               	movlw	0
 13657  000A2E  6FD6               	movwf	(_loRa+209)& (0+255),b
 13658  000A30  0E00               	movlw	0
 13659  000A32  6FD5               	movwf	(_loRa+208)& (0+255),b
 13660                           
 13661                           ; BSR set to: 2
 13662                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 13663  000A34  0E00               	movlw	0
 13664  000A36  6FF3               	movwf	(_loRa+238)& (0+255),b
 13665                           
 13666                           ; BSR set to: 2
 13667                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 13668  000A38  9905               	bcf	_loRa& (0+255),4,b
 13669                           
 13670                           ; BSR set to: 2
 13671                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 13672  000A3A  8308               	bsf	(_loRa+3)& (0+255),1,b
 13673                           
 13674                           ; BSR set to: 2
 13675                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 13676  000A3C  A105               	btfss	_loRa& (0+255),0,b
 13677  000A3E  D055               	goto	l20612
 13678                           
 13679                           ; BSR set to: 2
 13680                           ;lorawan.c: 1468: {;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 13681  000A40  0100               	movlb	0	; () banked
 13682  000A42  EE20 F005          	lfsr	2,5
 13683  000A46  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13684  000A48  26D9               	addwf	fsr2l,f,c
 13685  000A4A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13686  000A4C  22DA               	addwfc	fsr2h,f,c
 13687  000A4E  AADF               	btfss	indf2,5,c
 13688  000A50  D049               	goto	l20610
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;lorawan.c: 1470: {;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 13692  000A52  0102               	movlb	2	; () banked
 13693  000A54  9105               	bcf	_loRa& (0+255),0,b
 13694                           
 13695                           ; BSR set to: 2
 13696                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 13697  000A56  0EF0               	movlw	-16
 13698  000A58  1707               	andwf	(_loRa+2)& (0+255),f,b
 13699                           
 13700                           ; BSR set to: 2
 13701                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 13702  000A5A  0101               	movlb	1	; () banked
 13703  000A5C  510E               	movf	_rxPayload& (0+255),w,b
 13704  000A5E  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13705  000A60  B4D8               	btfsc	status,2,c
 13706  000A62  D017               	goto	u22679
 13707                           
 13708                           ; BSR set to: 1
 13709                           ;lorawan.c: 1474: {;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 13710  000A64  0102               	movlb	2	; () banked
 13711  000A66  9B05               	bcf	_loRa& (0+255),5,b
 13712                           
 13713                           ; BSR set to: 2
 13714                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13715  000A68  C0E9  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 13716  000A6C  C0EA  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 13717  000A70  C0F1  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 13718  000A74  0E01               	movlw	1
 13719  000A76  0100               	movlb	0	; () banked
 13720  000A78  6F63               	movwf	RxData@status& (0+255),b
 13721  000A7A  D801               	call	u22678
 13722  000A7C  D00A               	goto	u22679
 13723  000A7E                     u22678:
 13724  000A7E  0005               	push	
 13725  000A80  6EFA               	movwf	pclath,c
 13726  000A82  0101               	movlb	1	; () banked
 13727  000A84  510E               	movf	_rxPayload& (0+255),w,b
 13728  000A86  6EFD               	movwf	tosl,c
 13729  000A88  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13730  000A8A  6EFE               	movwf	tosh,c
 13731  000A8C  6AFF               	clrf	tosu,c
 13732  000A8E  50FA               	movf	pclath,w,c
 13733  000A90  0012               	return		;indir
 13734  000A92                     u22679:
 13735                           
 13736                           ;lorawan.c: 1477: };lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 13737  000A92  0102               	movlb	2	; () banked
 13738  000A94  9308               	bcf	(_loRa+3)& (0+255),1,b
 13739                           
 13740                           ; BSR set to: 2
 13741                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 13742  000A96  BB07               	btfsc	(_loRa+2)& (0+255),5,b
 13743                           
 13744                           ; BSR set to: 2
 13745  000A98  BB05               	btfsc	_loRa& (0+255),5,b
 13746  000A9A  D5C4               	goto	l20436
 13747                           
 13748                           ; BSR set to: 2
 13749  000A9C  B305               	btfsc	_loRa& (0+255),1,b
 13750  000A9E  D002               	goto	u22710
 13751                           
 13752                           ; BSR set to: 2
 13753  000AA0  A705               	btfss	_loRa& (0+255),3,b
 13754  000AA2  D5C0               	goto	l20436
 13755  000AA4                     u22710:
 13756                           
 13757                           ; BSR set to: 2
 13758                           ;lorawan.c: 1480: {;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &c
      +                          hannelIndex) == OK)
 13759  000AA4  0E01               	movlw	1
 13760  000AA6  0100               	movlb	0	; () banked
 13761  000AA8  6FA7               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13762  000AAA  0EE1               	movlw	low LORAWAN_RxDone@channelIndex
 13763  000AAC  6FA8               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13764  000AAE  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 13765  000AB0  6FA9               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13766  000AB2  0102               	movlb	2	; () banked
 13767  000AB4  51F2               	movf	(_loRa+237)& (0+255),w,b
 13768  000AB6  EC1E  F034         	call	_SearchAvailableChannel
 13769  000ABA  0900               	iorlw	0
 13770  000ABC  A4D8               	btfss	status,2,c
 13771  000ABE  D00F               	goto	l20608
 13772                           
 13773                           ;lorawan.c: 1482: {;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 13774  000AC0  0E00               	movlw	0
 13775  000AC2  0100               	movlb	0	; () banked
 13776  000AC4  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
 13777  000AC6  0E00               	movlw	0
 13778  000AC8  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
 13779  000ACA  0E00               	movlw	0
 13780  000ACC  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13781  000ACE  0E00               	movlw	0
 13782  000AD0  6FD7               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13783  000AD2  0E00               	movlw	0
 13784  000AD4  EC12  F038         	call	_LORAWAN_Send
 13785  000AD8                     l20606:
 13786                           
 13787                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 13788  000AD8  0102               	movlb	2	; () banked
 13789  000ADA  9705               	bcf	_loRa& (0+255),3,b
 13790                           
 13791                           ;lorawan.c: 1485: }
 13792  000ADC  D5A3               	goto	l20436
 13793  000ADE                     l20608:
 13794                           
 13795                           ;lorawan.c: 1486: else;lorawan.c: 1487: {;lorawan.c: 1489: StartReTxTimer();
 13796  000ADE  ECC5  F02A         	call	_StartReTxTimer	;wreg free
 13797  000AE2  D5A0               	goto	l20436
 13798  000AE4                     l20610:
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;lorawan.c: 1494: else;lorawan.c: 1495: {;lorawan.c: 1496: UpdateRetransmissionAckTimeou
      +                          tState ();
 13802  000AE4  EC7B  F045         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 13803  000AE8  D59D               	goto	l20436
 13804  000AEA                     l20612:
 13805                           
 13806                           ; BSR set to: 2
 13807                           ;lorawan.c: 1499: else;lorawan.c: 1500: {;lorawan.c: 1501: loRa.macStatus.macState = IDL
      +                          E;
 13808  000AEA  0EF0               	movlw	-16
 13809  000AEC  1707               	andwf	(_loRa+2)& (0+255),f,b
 13810                           
 13811                           ; BSR set to: 2
 13812                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 13813  000AEE  0101               	movlb	1	; () banked
 13814  000AF0  510E               	movf	_rxPayload& (0+255),w,b
 13815  000AF2  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13816  000AF4  B4D8               	btfsc	status,2,c
 13817  000AF6  D017               	goto	u22749
 13818                           
 13819                           ; BSR set to: 1
 13820                           ;lorawan.c: 1504: {;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 13821  000AF8  0102               	movlb	2	; () banked
 13822  000AFA  9B05               	bcf	_loRa& (0+255),5,b
 13823                           
 13824                           ; BSR set to: 2
 13825                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13826  000AFC  C0E9  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 13827  000B00  C0EA  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 13828  000B04  C0F1  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 13829  000B08  0E01               	movlw	1
 13830  000B0A  0100               	movlb	0	; () banked
 13831  000B0C  6F63               	movwf	RxData@status& (0+255),b
 13832  000B0E  D801               	call	u22748
 13833  000B10  D00A               	goto	u22749
 13834  000B12                     u22748:
 13835  000B12  0005               	push	
 13836  000B14  6EFA               	movwf	pclath,c
 13837  000B16  0101               	movlb	1	; () banked
 13838  000B18  510E               	movf	_rxPayload& (0+255),w,b
 13839  000B1A  6EFD               	movwf	tosl,c
 13840  000B1C  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13841  000B1E  6EFE               	movwf	tosh,c
 13842  000B20  6AFF               	clrf	tosu,c
 13843  000B22  50FA               	movf	pclath,w,c
 13844  000B24  0012               	return		;indir
 13845  000B26                     u22749:
 13846                           
 13847                           ;lorawan.c: 1507: };lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.
      +                          lorawanMacStatus.synchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUp
      +                          linkMessage == 1) || (loRa.lorawanMacStatus.fPending == 1) ) )
 13848  000B26  0102               	movlb	2	; () banked
 13849  000B28  BB07               	btfsc	(_loRa+2)& (0+255),5,b
 13850                           
 13851                           ; BSR set to: 2
 13852  000B2A  BB05               	btfsc	_loRa& (0+255),5,b
 13853  000B2C  D57B               	goto	l20436
 13854                           
 13855                           ; BSR set to: 2
 13856  000B2E  B305               	btfsc	_loRa& (0+255),1,b
 13857  000B30  D002               	goto	u22780
 13858                           
 13859                           ; BSR set to: 2
 13860  000B32  A705               	btfss	_loRa& (0+255),3,b
 13861  000B34  D577               	goto	l20436
 13862  000B36                     u22780:
 13863                           
 13864                           ; BSR set to: 2
 13865                           ;lorawan.c: 1510: {;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &c
      +                          hannelIndex) == OK)
 13866  000B36  0E01               	movlw	1
 13867  000B38  0100               	movlb	0	; () banked
 13868  000B3A  6FA7               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13869  000B3C  0EE1               	movlw	low LORAWAN_RxDone@channelIndex
 13870  000B3E  6FA8               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13871  000B40  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 13872  000B42  6FA9               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13873  000B44  0102               	movlb	2	; () banked
 13874  000B46  51F2               	movf	(_loRa+237)& (0+255),w,b
 13875  000B48  EC1E  F034         	call	_SearchAvailableChannel
 13876  000B4C  0900               	iorlw	0
 13877  000B4E  A4D8               	btfss	status,2,c
 13878  000B50  D7C6               	goto	l20608
 13879                           
 13880                           ;lorawan.c: 1512: {;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 13881  000B52  0E00               	movlw	0
 13882  000B54  0100               	movlb	0	; () banked
 13883  000B56  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
 13884  000B58  0E00               	movlw	0
 13885  000B5A  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
 13886  000B5C  0E00               	movlw	0
 13887  000B5E  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13888  000B60  0E00               	movlw	0
 13889  000B62  6FD7               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13890  000B64  0E00               	movlw	0
 13891  000B66  EC12  F038         	call	_LORAWAN_Send
 13892  000B6A  D7B6               	goto	l20606
 13893  000B6C                     l20642:
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;lorawan.c: 1530: else;lorawan.c: 1531: {;lorawan.c: 1533: SetReceptionNotOkState ();
 13897  000B6C  EC5B  F043         	call	_SetReceptionNotOkState	;wreg free
 13898  000B70  0012               	return	
 13899  000B72                     l20646:
 13900                           
 13901                           ; BSR set to: 2
 13902                           ;lorawan.c: 1537: else;lorawan.c: 1538: {;lorawan.c: 1540: if ( rxPayload.RxAppData != (
      +                          0) )
 13903  000B72  0101               	movlb	1	; () banked
 13904  000B74  510E               	movf	_rxPayload& (0+255),w,b
 13905  000B76  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13906  000B78  B4D8               	btfsc	status,2,c
 13907  000B7A  0012               	return	
 13908                           
 13909                           ; BSR set to: 1
 13910                           ;lorawan.c: 1541: {;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 13911  000B7C  EC53  F054         	call	_RADIO_GetStatus	;wreg free
 13912  000B80  0100               	movlb	0	; () banked
 13913  000B82  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13914  000B84  B7DB               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 13915  000B86  D014               	goto	l20652
 13916                           
 13917                           ; BSR set to: 0
 13918                           ;lorawan.c: 1543: {;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK)
      +                          ;
 13919  000B88  C1DA  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 13920  000B8C  C1DB  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 13921  000B90  C1DC  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 13922  000B94  0E03               	movlw	3
 13923  000B96  6F63               	movwf	RxData@status& (0+255),b
 13924  000B98  D801               	call	u22838
 13925  000B9A  0012               	return	
 13926  000B9C                     u22838:
 13927  000B9C  0005               	push	
 13928  000B9E  6EFA               	movwf	pclath,c
 13929  000BA0  0101               	movlb	1	; () banked
 13930  000BA2  510E               	movf	_rxPayload& (0+255),w,b
 13931  000BA4  6EFD               	movwf	tosl,c
 13932  000BA6  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13933  000BA8  6EFE               	movwf	tosh,c
 13934  000BAA  6AFF               	clrf	tosu,c
 13935  000BAC  50FA               	movf	pclath,w,c
 13936  000BAE  0012               	return		;indir
 13937  000BB0                     l20652:
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;lorawan.c: 1546: else;lorawan.c: 1547: {;lorawan.c: 1548: rxPayload.RxAppData(buffer, b
      +                          ufferLength, RADIO_NOT_OK);
 13941  000BB0  C1DA  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 13942  000BB4  C1DB  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 13943  000BB8  C1DC  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 13944  000BBC  0E02               	movlw	2
 13945  000BBE  6F63               	movwf	RxData@status& (0+255),b
 13946  000BC0  D801               	call	u22848
 13947  000BC2  0012               	return	
 13948  000BC4                     u22848:
 13949  000BC4  0005               	push	
 13950  000BC6  6EFA               	movwf	pclath,c
 13951  000BC8  0101               	movlb	1	; () banked
 13952  000BCA  510E               	movf	_rxPayload& (0+255),w,b
 13953  000BCC  6EFD               	movwf	tosl,c
 13954  000BCE  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13955  000BD0  6EFE               	movwf	tosh,c
 13956  000BD2  6AFF               	clrf	tosu,c
 13957  000BD4  50FA               	movf	pclath,w,c
 13958  000BD6  0012               	return		;indir
 13959  000BD8                     __end_of_LORAWAN_RxDone:
 13960                           	opt callstack 0
 13961                           
 13962 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 13963 ;; Defined at:
 13964 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;		None
 13967 ;; Auto vars:     Size  Location     Type
 13968 ;;		None
 13969 ;; Return value:  Size  Location     Type
 13970 ;;                  1    wreg      void 
 13971 ;; Registers used:
 13972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13973 ;; Tracked objects:
 13974 ;;		On entry : 0/0
 13975 ;;		On exit  : 0/0
 13976 ;;		Unchanged: 0/0
 13977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13980 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13981 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13982 ;;Total ram usage:        4 bytes
 13983 ;; Hardware stack levels used:    1
 13984 ;; Hardware stack levels required when called:   11
 13985 ;; This function calls:
 13986 ;;		_SwTimerSetTimeout
 13987 ;;		_SwTimerStart
 13988 ;;		___lldiv
 13989 ;; This function is called by:
 13990 ;;		_AckRetransmissionCallback
 13991 ;;		_LORAWAN_RxDone
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995                           	psect	text51
 13996  008AF6                     __ptext51:
 13997                           	opt callstack 0
 13998  008AF6                     _UpdateRetransmissionAckTimeoutState:
 13999                           	opt callstack 14
 14000                           
 14001                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 14002                           
 14003                           ;incstack = 0
 14004  008AF6  0102               	movlb	2	; () banked
 14005  008AF8  5107               	movf	(_loRa+2)& (0+255),w,b
 14006  008AFA  0BF0               	andlw	-16
 14007  008AFC  0906               	iorlw	6
 14008  008AFE  6F07               	movwf	(_loRa+2)& (0+255),b
 14009                           
 14010                           ; BSR set to: 2
 14011                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 14012  008B00  51A5               	movf	(_loRa+160)& (0+255),w,b
 14013  008B02  0100               	movlb	0	; () banked
 14014  008B04  6F92               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 14015  008B06  0102               	movlb	2	; () banked
 14016  008B08  51A6               	movf	(_loRa+161)& (0+255),w,b
 14017  008B0A  0100               	movlb	0	; () banked
 14018  008B0C  6F93               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 14019  008B0E  6B94               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 14020  008B10  6B95               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 14021  008B12  0E0C               	movlw	12
 14022  008B14                     u21865:
 14023  008B14  90D8               	bcf	status,0,c
 14024  008B16  3792               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 14025  008B18  3793               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 14026  008B1A  3794               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 14027  008B1C  3795               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 14028  008B1E  2EE8               	decfsz	wreg,f,c
 14029  008B20  D7F9               	goto	u21865
 14030  008B22  C092  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 14031  008B26  C093  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 14032  008B2A  C094  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 14033  008B2E  C095  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 14034  008B32  0E7D               	movlw	125
 14035  008B34  6F64               	movwf	___lldiv@divisor& (0+255),b
 14036  008B36  0E00               	movlw	0
 14037  008B38  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14038  008B3A  0E00               	movlw	0
 14039  008B3C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14040  008B3E  0E00               	movlw	0
 14041  008B40  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14042  008B42  EC96  F042         	call	___lldiv	;wreg free
 14043  008B46  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 14044  008B4A  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 14045  008B4E  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 14046  008B52  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 14047  008B56  0102               	movlb	2	; () banked
 14048  008B58  51ED               	movf	(_loRa+232)& (0+255),w,b
 14049  008B5A  EC7F  F04C         	call	_SwTimerSetTimeout
 14050                           
 14051                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 14052  008B5E  0102               	movlb	2	; () banked
 14053  008B60  51ED               	movf	(_loRa+232)& (0+255),w,b
 14054  008B62  EC73  F040         	call	_SwTimerStart
 14055  008B66  0012               	return		;funcret
 14056  008B68                     __end_of_UpdateRetransmissionAckTimeoutState:
 14057                           	opt callstack 0
 14058                           
 14059 ;; *************** function _UpdateDLSettings *****************
 14060 ;; Defined at:
 14061 ;;		line 889 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14062 ;; Parameters:    Size  Location     Type
 14063 ;;  dlRx2Dr         1    wreg     unsigned char 
 14064 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 14067 ;; Return value:  Size  Location     Type
 14068 ;;                  1    wreg      void 
 14069 ;; Registers used:
 14070 ;;		wreg, status,2, status,0
 14071 ;; Tracked objects:
 14072 ;;		On entry : 0/0
 14073 ;;		On exit  : 0/0
 14074 ;;		Unchanged: 0/0
 14075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14076 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14077 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14079 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14080 ;;Total ram usage:        2 bytes
 14081 ;; Hardware stack levels used:    1
 14082 ;; Hardware stack levels required when called:    7
 14083 ;; This function calls:
 14084 ;;		Nothing
 14085 ;; This function is called by:
 14086 ;;		_LORAWAN_RxDone
 14087 ;; This function uses a non-reentrant model
 14088 ;;
 14089                           
 14090                           	psect	text52
 14091  00A51A                     __ptext52:
 14092                           	opt callstack 0
 14093  00A51A                     _UpdateDLSettings:
 14094                           	opt callstack 17
 14095                           
 14096                           ;incstack = 0
 14097                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 14098  00A51A  0100               	movlb	0	; () banked
 14099  00A51C  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 14100                           
 14101                           ;lorawan_eu.c: 891: if (dlRx2Dr <= 7)
 14102  00A51E  0E08               	movlw	8
 14103  00A520  0100               	movlb	0	; () banked
 14104  00A522  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 14105  00A524  D002               	goto	l19962
 14106                           
 14107                           ; BSR set to: 0
 14108                           ;lorawan_eu.c: 892: {;lorawan_eu.c: 893: loRa.receiveWindow2Parameters.dataRate = dlRx2D
      +                          r;
 14109  00A526  C061  F221         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 14110  00A52A                     l19962:
 14111                           
 14112                           ; BSR set to: 0
 14113                           ;lorawan_eu.c: 894: };lorawan_eu.c: 896: if (dlRx1DrOffset <= 5)
 14114  00A52A  0E06               	movlw	6
 14115  00A52C  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 14116  00A52E  0012               	return	
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;lorawan_eu.c: 897: {;lorawan_eu.c: 899: loRa.offset = dlRx1DrOffset;
 14120  00A530  C060  F2F4         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 14121                           
 14122                           ; BSR set to: 0
 14123  00A534  0012               	return		;funcret
 14124  00A536                     __end_of_UpdateDLSettings:
 14125                           	opt callstack 0
 14126                           
 14127 ;; *************** function _UpdateCfList *****************
 14128 ;; Defined at:
 14129 ;;		line 825 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;  bufferLength    1    wreg     unsigned char 
 14132 ;;  joinAccept      2   62[BANK0 ] PTR struct .
 14133 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14134 ;; Auto vars:     Size  Location     Type
 14135 ;;  bufferLength    1   68[BANK0 ] unsigned char 
 14136 ;;  frequency       4   69[BANK0 ] unsigned long 
 14137 ;;  i               1   74[BANK0 ] unsigned char 
 14138 ;;  channelIndex    1   73[BANK0 ] unsigned char 
 14139 ;; Return value:  Size  Location     Type
 14140 ;;                  1    wreg      void 
 14141 ;; Registers used:
 14142 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14143 ;; Tracked objects:
 14144 ;;		On entry : 0/0
 14145 ;;		On exit  : 0/0
 14146 ;;		Unchanged: 0/0
 14147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14148 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14149 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14150 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14151 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14152 ;;Total ram usage:       13 bytes
 14153 ;; Hardware stack levels used:    1
 14154 ;; Hardware stack levels required when called:    9
 14155 ;; This function calls:
 14156 ;;		_LORAWAN_SetChannelIdStatus
 14157 ;;		_ValidateFrequency
 14158 ;;		___lmul
 14159 ;;		_memcpy
 14160 ;; This function is called by:
 14161 ;;		_LORAWAN_RxDone
 14162 ;; This function uses a non-reentrant model
 14163 ;;
 14164                           
 14165                           	psect	text53
 14166  004030                     __ptext53:
 14167                           	opt callstack 0
 14168  004030                     _UpdateCfList:
 14169                           	opt callstack 15
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;incstack = 0
 14173                           ;UpdateCfList@bufferLength stored from wreg
 14174  004030  0100               	movlb	0	; () banked
 14175  004032  6FA4               	movwf	UpdateCfList@bufferLength& (0+255),b
 14176                           
 14177                           ;lorawan_eu.c: 827: uint8_t i;;lorawan_eu.c: 828: uint32_t frequency;;lorawan_eu.c: 829:
      +                           uint8_t channelIndex;;lorawan_eu.c: 831: if ( (bufferLength == 33) )
 14178  004034  0E21               	movlw	33
 14179  004036  0100               	movlb	0	; () banked
 14180  004038  19A4               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 14181  00403A  A4D8               	btfss	status,2,c
 14182  00403C  0012               	return	
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;lorawan_eu.c: 832: {;lorawan_eu.c: 834: channelIndex = 3;
 14186  00403E  0E03               	movlw	3
 14187  004040  6FA9               	movwf	UpdateCfList@channelIndex& (0+255),b
 14188                           
 14189                           ;lorawan_eu.c: 836: for (i = 0; i < 5; i++ )
 14190  004042  0E00               	movlw	0
 14191  004044  6FAA               	movwf	UpdateCfList@i& (0+255),b
 14192  004046                     l19936:
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;lorawan_eu.c: 837: {;lorawan_eu.c: 838: frequency = 0;
 14196  004046  0E00               	movlw	0
 14197  004048  6FA5               	movwf	UpdateCfList@frequency& (0+255),b
 14198  00404A  0E00               	movlw	0
 14199  00404C  6FA6               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 14200  00404E  0E00               	movlw	0
 14201  004050  6FA7               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 14202  004052  0E00               	movlw	0
 14203  004054  6FA8               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 14204                           
 14205                           ; BSR set to: 0
 14206                           ;lorawan_eu.c: 839: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 14207  004056  0EA5               	movlw	low UpdateCfList@frequency
 14208  004058  6F60               	movwf	memcpy@d1& (0+255),b
 14209  00405A  0E00               	movlw	high UpdateCfList@frequency
 14210  00405C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14211  00405E  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14212  004060  0D03               	mullw	3
 14213  004062  C09E  F0A0         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 14214  004066  C09F  F0A1         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 14215  00406A  50F3               	movf	prodl,w,c
 14216  00406C  27A0               	addwf	??_UpdateCfList& (0+255),f,b
 14217  00406E  50F4               	movf	prodh,w,c
 14218  004070  23A1               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 14219  004072  0E0D               	movlw	13
 14220  004074  25A0               	addwf	??_UpdateCfList& (0+255),w,b
 14221  004076  6F62               	movwf	memcpy@s1& (0+255),b
 14222  004078  0E00               	movlw	0
 14223  00407A  21A1               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 14224  00407C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14225  00407E  0E00               	movlw	0
 14226  004080  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14227  004082  0E03               	movlw	3
 14228  004084  6F64               	movwf	memcpy@n& (0+255),b
 14229  004086  ECEC  F047         	call	_memcpy	;wreg free
 14230                           
 14231                           ;lorawan_eu.c: 840: frequency *= 100;
 14232  00408A  C0A5  F092         	movff	UpdateCfList@frequency,___lmul@multiplier
 14233  00408E  C0A6  F093         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 14234  004092  C0A7  F094         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 14235  004096  C0A8  F095         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 14236  00409A  0E64               	movlw	100
 14237  00409C  0100               	movlb	0	; () banked
 14238  00409E  6F96               	movwf	___lmul@multiplicand& (0+255),b
 14239  0040A0  0E00               	movlw	0
 14240  0040A2  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14241  0040A4  0E00               	movlw	0
 14242  0040A6  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14243  0040A8  0E00               	movlw	0
 14244  0040AA  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14245  0040AC  ECD6  F048         	call	___lmul	;wreg free
 14246  0040B0  C092  F0A5         	movff	?___lmul,UpdateCfList@frequency
 14247  0040B4  C093  F0A6         	movff	?___lmul+1,UpdateCfList@frequency+1
 14248  0040B8  C094  F0A7         	movff	?___lmul+2,UpdateCfList@frequency+2
 14249  0040BC  C095  F0A8         	movff	?___lmul+3,UpdateCfList@frequency+3
 14250                           
 14251                           ;lorawan_eu.c: 841: if (frequency != 0)
 14252  0040C0  0100               	movlb	0	; () banked
 14253  0040C2  51A5               	movf	UpdateCfList@frequency& (0+255),w,b
 14254  0040C4  11A6               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 14255  0040C6  11A7               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 14256  0040C8  11A8               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 14257  0040CA  B4D8               	btfsc	status,2,c
 14258  0040CC  D0AD               	goto	l19952
 14259                           
 14260                           ; BSR set to: 0
 14261                           ;lorawan_eu.c: 842: {;lorawan_eu.c: 843: if (ValidateFrequency (frequency) == OK)
 14262  0040CE  C0A5  F060         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 14263  0040D2  C0A6  F061         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 14264  0040D6  C0A7  F062         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 14265  0040DA  C0A8  F063         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 14266  0040DE  ECB4  F045         	call	_ValidateFrequency	;wreg free
 14267  0040E2  0900               	iorlw	0
 14268  0040E4  A4D8               	btfss	status,2,c
 14269  0040E6  D0A6               	goto	l19954
 14270                           
 14271                           ;lorawan_eu.c: 844: {;lorawan_eu.c: 845: Channels[i+channelIndex].frequency = frequency;
 14272  0040E8  0100               	movlb	0	; () banked
 14273  0040EA  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14274  0040EC  0D0E               	mullw	14
 14275  0040EE  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14276  0040F2  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14277  0040F6  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14278  0040F8  0D0E               	mullw	14
 14279  0040FA  0E14               	movlw	low _Channels
 14280  0040FC  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14281  0040FE  0E04               	movlw	high _Channels
 14282  004100  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14283  004102  50F3               	movf	prodl,w,c
 14284  004104  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14285  004106  50F4               	movf	prodh,w,c
 14286  004108  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14287  00410A  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14288  00410C  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14289  00410E  6ED9               	movwf	fsr2l,c
 14290  004110  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14291  004112  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14292  004114  6EDA               	movwf	fsr2h,c
 14293  004116  C0A5  FFDE         	movff	UpdateCfList@frequency,postinc2
 14294  00411A  C0A6  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 14295  00411E  C0A7  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 14296  004122  C0A8  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 14297                           
 14298                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.max = 5;
 14299  004126  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14300  004128  0D0E               	mullw	14
 14301  00412A  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14302  00412E  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14303  004132  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14304  004134  0D0E               	mullw	14
 14305  004136  0E14               	movlw	low _Channels
 14306  004138  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14307  00413A  0E04               	movlw	high _Channels
 14308  00413C  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14309  00413E  0E05               	movlw	5
 14310  004140  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14311  004142  0E00               	movlw	0
 14312  004144  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14313  004146  50F3               	movf	prodl,w,c
 14314  004148  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14315  00414A  50F4               	movf	prodh,w,c
 14316  00414C  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14317  00414E  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14318  004150  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14319  004152  6ED9               	movwf	fsr2l,c
 14320  004154  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14321  004156  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14322  004158  6EDA               	movwf	fsr2h,c
 14323  00415A  0104               	movlb	4	; () banked
 14324  00415C  50DF               	movf	223,w,c
 14325  00415E  0B0F               	andlw	-241
 14326  004160  0950               	iorlw	80
 14327  004162  6EDF               	movwf	223,c
 14328                           
 14329                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dataRange.min = 0;
 14330  004164  0100               	movlb	0	; () banked
 14331  004166  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14332  004168  0D0E               	mullw	14
 14333  00416A  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14334  00416E  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14335  004172  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14336  004174  0D0E               	mullw	14
 14337  004176  0E14               	movlw	low _Channels
 14338  004178  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14339  00417A  0E04               	movlw	high _Channels
 14340  00417C  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14341  00417E  0E05               	movlw	5
 14342  004180  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14343  004182  0E00               	movlw	0
 14344  004184  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14345  004186  50F3               	movf	prodl,w,c
 14346  004188  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14347  00418A  50F4               	movf	prodh,w,c
 14348  00418C  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14349  00418E  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14350  004190  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14351  004192  6ED9               	movwf	fsr2l,c
 14352  004194  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14353  004196  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14354  004198  6EDA               	movwf	fsr2h,c
 14355  00419A  0EF0               	movlw	-16
 14356  00419C  0104               	movlb	4	; () banked
 14357  00419E  16DF               	andwf	223,f,c
 14358                           
 14359                           ;lorawan_eu.c: 848: Channels[i+channelIndex].dutyCycle = 999;
 14360  0041A0  0100               	movlb	0	; () banked
 14361  0041A2  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14362  0041A4  0D0E               	mullw	14
 14363  0041A6  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14364  0041AA  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14365  0041AE  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14366  0041B0  0D0E               	mullw	14
 14367  0041B2  0E14               	movlw	low _Channels
 14368  0041B4  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14369  0041B6  0E04               	movlw	high _Channels
 14370  0041B8  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14371  0041BA  0E06               	movlw	6
 14372  0041BC  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14373  0041BE  0E00               	movlw	0
 14374  0041C0  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14375  0041C2  50F3               	movf	prodl,w,c
 14376  0041C4  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14377  0041C6  50F4               	movf	prodh,w,c
 14378  0041C8  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14379  0041CA  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14380  0041CC  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14381  0041CE  6ED9               	movwf	fsr2l,c
 14382  0041D0  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14383  0041D2  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14384  0041D4  6EDA               	movwf	fsr2h,c
 14385  0041D6  0EE7               	movlw	231
 14386  0041D8  6EDE               	movwf	postinc2,c
 14387  0041DA  0E03               	movlw	3
 14388  0041DC  6EDD               	movwf	postdec2,c
 14389                           
 14390                           ;lorawan_eu.c: 849: Channels[i+channelIndex].parametersDefined = 0xFF;
 14391  0041DE  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14392  0041E0  0D0E               	mullw	14
 14393  0041E2  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14394  0041E6  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14395  0041EA  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14396  0041EC  0D0E               	mullw	14
 14397  0041EE  0E14               	movlw	low _Channels
 14398  0041F0  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14399  0041F2  0E04               	movlw	high _Channels
 14400  0041F4  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14401  0041F6  0E0D               	movlw	13
 14402  0041F8  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14403  0041FA  0E00               	movlw	0
 14404  0041FC  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14405  0041FE  50F3               	movf	prodl,w,c
 14406  004200  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14407  004202  50F4               	movf	prodh,w,c
 14408  004204  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14409  004206  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14410  004208  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14411  00420A  6ED9               	movwf	fsr2l,c
 14412  00420C  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14413  00420E  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14414  004210  6EDA               	movwf	fsr2h,c
 14415  004212  0EFF               	movlw	255
 14416  004214  6EDF               	movwf	indf2,c
 14417                           
 14418                           ; BSR set to: 0
 14419                           ;lorawan_eu.c: 850: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 14420  004216  0E01               	movlw	1
 14421  004218  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14422  00421A  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14423  00421C  25A9               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14424  00421E  EC83  F04D         	call	_LORAWAN_SetChannelIdStatus
 14425                           
 14426                           ;lorawan_eu.c: 851: loRa.macStatus.channelsModified = 1;
 14427  004222  0102               	movlb	2	; () banked
 14428  004224  8708               	bsf	(_loRa+3)& (0+255),3,b
 14429  004226  D006               	goto	l19954
 14430  004228                     l19952:
 14431                           
 14432                           ; BSR set to: 0
 14433                           ;lorawan_eu.c: 854: else;lorawan_eu.c: 855: {;lorawan_eu.c: 856: LORAWAN_SetChannelIdSta
      +                          tus(i+channelIndex, 0);
 14434  004228  0E00               	movlw	0
 14435  00422A  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14436  00422C  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14437  00422E  25A9               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14438  004230  EC83  F04D         	call	_LORAWAN_SetChannelIdStatus
 14439  004234                     l19954:
 14440  004234  0100               	movlb	0	; () banked
 14441  004236  2BAA               	incf	UpdateCfList@i& (0+255),f,b
 14442                           
 14443                           ; BSR set to: 0
 14444  004238  0E04               	movlw	4
 14445  00423A  65AA               	cpfsgt	UpdateCfList@i& (0+255),b
 14446  00423C  D704               	goto	l19936
 14447                           
 14448                           ; BSR set to: 0
 14449                           ;lorawan_eu.c: 857: };lorawan_eu.c: 858: };lorawan_eu.c: 860: loRa.macStatus.channelsMod
      +                          ified = 1;
 14450  00423E  0102               	movlb	2	; () banked
 14451  004240  8708               	bsf	(_loRa+3)& (0+255),3,b
 14452  004242  0012               	return		;funcret
 14453  004244                     __end_of_UpdateCfList:
 14454                           	opt callstack 0
 14455                           
 14456 ;; *************** function _StartReTxTimer *****************
 14457 ;; Defined at:
 14458 ;;		line 903 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14459 ;; Parameters:    Size  Location     Type
 14460 ;;		None
 14461 ;; Auto vars:     Size  Location     Type
 14462 ;;  minim           4   54[BANK0 ] unsigned long 
 14463 ;;  i               1   58[BANK0 ] unsigned char 
 14464 ;; Return value:  Size  Location     Type
 14465 ;;                  1    wreg      void 
 14466 ;; Registers used:
 14467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14468 ;; Tracked objects:
 14469 ;;		On entry : 0/0
 14470 ;;		On exit  : 0/0
 14471 ;;		Unchanged: 0/0
 14472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14474 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14475 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14476 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14477 ;;Total ram usage:        9 bytes
 14478 ;; Hardware stack levels used:    1
 14479 ;; Hardware stack levels required when called:   11
 14480 ;; This function calls:
 14481 ;;		_SwTimerSetTimeout
 14482 ;;		_SwTimerStart
 14483 ;;		___lldiv
 14484 ;; This function is called by:
 14485 ;;		_LORAWAN_RxDone
 14486 ;; This function uses a non-reentrant model
 14487 ;;
 14488                           
 14489                           	psect	text54
 14490  00558A                     __ptext54:
 14491                           	opt callstack 0
 14492  00558A                     _StartReTxTimer:
 14493                           	opt callstack 13
 14494                           
 14495                           ;lorawan_eu.c: 905: uint8_t i;;lorawan_eu.c: 906: uint32_t minim = (4294967295UL);
 14496                           
 14497                           ;incstack = 0
 14498  00558A  0100               	movlb	0	; () banked
 14499  00558C  6996               	setf	StartReTxTimer@minim& (0+255),b
 14500  00558E  6997               	setf	(StartReTxTimer@minim+1)& (0+255),b
 14501  005590  6998               	setf	(StartReTxTimer@minim+2)& (0+255),b
 14502  005592  6999               	setf	(StartReTxTimer@minim+3)& (0+255),b
 14503                           
 14504                           ; BSR set to: 0
 14505                           ;lorawan_eu.c: 908: for (i = 0; i <= loRa.maxChannels; i++)
 14506  005594  0E00               	movlw	0
 14507  005596  6F9A               	movwf	StartReTxTimer@i& (0+255),b
 14508  005598  D064               	goto	l19984
 14509  00559A                     l19970:
 14510                           
 14511                           ; BSR set to: 2
 14512                           ;lorawan_eu.c: 909: {;lorawan_eu.c: 910: if ( (Channels[i].status == 1) && (Channels[i].
      +                          channelTimer != 0) && (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Ch
      +                          annels[i].dataRange.min) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 14513  00559A  0100               	movlb	0	; () banked
 14514  00559C  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14515  00559E  0D0E               	mullw	14
 14516  0055A0  0E18               	movlw	low (_Channels+4)
 14517  0055A2  24F3               	addwf	prodl,w,c
 14518  0055A4  6ED9               	movwf	fsr2l,c
 14519  0055A6  0E04               	movlw	high (_Channels+4)
 14520  0055A8  20F4               	addwfc	prodh,w,c
 14521  0055AA  6EDA               	movwf	fsr2h,c
 14522  0055AC  04DE               	decf	postinc2,w,c
 14523  0055AE  A4D8               	btfss	status,2,c
 14524  0055B0  D056               	goto	l19982
 14525                           
 14526                           ; BSR set to: 0
 14527  0055B2  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14528  0055B4  0D0E               	mullw	14
 14529  0055B6  0E1C               	movlw	low (_Channels+8)
 14530  0055B8  24F3               	addwf	prodl,w,c
 14531  0055BA  6ED9               	movwf	fsr2l,c
 14532  0055BC  0E04               	movlw	high (_Channels+8)
 14533  0055BE  20F4               	addwfc	prodh,w,c
 14534  0055C0  6EDA               	movwf	fsr2h,c
 14535  0055C2  50DE               	movf	postinc2,w,c
 14536  0055C4  10DE               	iorwf	postinc2,w,c
 14537  0055C6  10DE               	iorwf	postinc2,w,c
 14538  0055C8  10DE               	iorwf	postinc2,w,c
 14539  0055CA  B4D8               	btfsc	status,2,c
 14540  0055CC  D048               	goto	l19982
 14541                           
 14542                           ; BSR set to: 0
 14543  0055CE  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14544  0055D0  0D0E               	mullw	14
 14545  0055D2  0E1C               	movlw	low (_Channels+8)
 14546  0055D4  24F3               	addwf	prodl,w,c
 14547  0055D6  6ED9               	movwf	fsr2l,c
 14548  0055D8  0E04               	movlw	high (_Channels+8)
 14549  0055DA  20F4               	addwfc	prodh,w,c
 14550  0055DC  6EDA               	movwf	fsr2h,c
 14551  0055DE  50DE               	movf	postinc2,w,c
 14552  0055E0  5D96               	subwf	StartReTxTimer@minim& (0+255),w,b
 14553  0055E2  50DE               	movf	postinc2,w,c
 14554  0055E4  5997               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 14555  0055E6  50DE               	movf	postinc2,w,c
 14556  0055E8  5998               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 14557  0055EA  50DE               	movf	postinc2,w,c
 14558  0055EC  5999               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 14559  0055EE  A0D8               	btfss	status,0,c
 14560  0055F0  D036               	goto	l19982
 14561                           
 14562                           ; BSR set to: 0
 14563  0055F2  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14564  0055F4  0D0E               	mullw	14
 14565  0055F6  0E19               	movlw	low (_Channels+5)
 14566  0055F8  24F3               	addwf	prodl,w,c
 14567  0055FA  6ED9               	movwf	fsr2l,c
 14568  0055FC  0E04               	movlw	high (_Channels+5)
 14569  0055FE  20F4               	addwfc	prodh,w,c
 14570  005600  6EDA               	movwf	fsr2h,c
 14571  005602  0104               	movlb	4	; () banked
 14572  005604  50DF               	movf	223,w,c
 14573  005606  0B0F               	andlw	15
 14574  005608  0100               	movlb	0	; () banked
 14575  00560A  6F92               	movwf	??_StartReTxTimer& (0+255),b
 14576  00560C  5192               	movf	??_StartReTxTimer& (0+255),w,b
 14577  00560E  0102               	movlb	2	; () banked
 14578  005610  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 14579  005612  A0D8               	btfss	status,0,c
 14580  005614  D024               	goto	l19982
 14581                           
 14582                           ; BSR set to: 2
 14583  005616  0100               	movlb	0	; () banked
 14584  005618  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14585  00561A  0D0E               	mullw	14
 14586  00561C  0E19               	movlw	low (_Channels+5)
 14587  00561E  24F3               	addwf	prodl,w,c
 14588  005620  6ED9               	movwf	fsr2l,c
 14589  005622  0E04               	movlw	high (_Channels+5)
 14590  005624  20F4               	addwfc	prodh,w,c
 14591  005626  6EDA               	movwf	fsr2h,c
 14592  005628  0104               	movlb	4	; () banked
 14593  00562A  38DF               	swapf	223,w,c
 14594  00562C  0B0F               	andlw	15
 14595  00562E  0100               	movlb	0	; () banked
 14596  005630  6F92               	movwf	??_StartReTxTimer& (0+255),b
 14597  005632  0102               	movlb	2	; () banked
 14598  005634  51E4               	movf	(_loRa+223)& (0+255),w,b
 14599  005636  0100               	movlb	0	; () banked
 14600  005638  5D92               	subwf	??_StartReTxTimer& (0+255),w,b
 14601  00563A  A0D8               	btfss	status,0,c
 14602  00563C  D010               	goto	l19982
 14603                           
 14604                           ; BSR set to: 0
 14605                           ;lorawan_eu.c: 911: {;lorawan_eu.c: 912: minim = Channels[i].channelTimer;
 14606  00563E  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14607  005640  0D0E               	mullw	14
 14608  005642  0E1C               	movlw	low (_Channels+8)
 14609  005644  24F3               	addwf	prodl,w,c
 14610  005646  6ED9               	movwf	fsr2l,c
 14611  005648  0E04               	movlw	high (_Channels+8)
 14612  00564A  20F4               	addwfc	prodh,w,c
 14613  00564C  6EDA               	movwf	fsr2h,c
 14614  00564E  CFDE F096          	movff	postinc2,StartReTxTimer@minim
 14615  005652  CFDE F097          	movff	postinc2,StartReTxTimer@minim+1
 14616  005656  CFDE F098          	movff	postinc2,StartReTxTimer@minim+2
 14617  00565A  CFDE F099          	movff	postinc2,StartReTxTimer@minim+3
 14618  00565E                     l19982:
 14619  00565E  0100               	movlb	0	; () banked
 14620  005660  2B9A               	incf	StartReTxTimer@i& (0+255),f,b
 14621  005662                     l19984:
 14622                           
 14623                           ; BSR set to: 0
 14624  005662  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14625  005664  0102               	movlb	2	; () banked
 14626  005666  5DF2               	subwf	(_loRa+237)& (0+255),w,b
 14627  005668  B0D8               	btfsc	status,0,c
 14628  00566A  D797               	goto	l19970
 14629                           
 14630                           ; BSR set to: 2
 14631                           ;lorawan_eu.c: 913: };lorawan_eu.c: 914: };lorawan_eu.c: 915: loRa.macStatus.macState = 
      +                          RETRANSMISSION_DELAY;
 14632  00566C  5107               	movf	(_loRa+2)& (0+255),w,b
 14633  00566E  0BF0               	andlw	-16
 14634  005670  0906               	iorlw	6
 14635  005672  6F07               	movwf	(_loRa+2)& (0+255),b
 14636                           
 14637                           ; BSR set to: 2
 14638                           ;lorawan_eu.c: 916: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 14639  005674  C096  F092         	movff	StartReTxTimer@minim,??_StartReTxTimer
 14640  005678  C097  F093         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 14641  00567C  C098  F094         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 14642  005680  C099  F095         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 14643  005684  0E0C               	movlw	12
 14644  005686                     u21725:
 14645  005686  90D8               	bcf	status,0,c
 14646  005688  0100               	movlb	0	; () banked
 14647  00568A  3792               	rlcf	??_StartReTxTimer& (0+255),f,b
 14648  00568C  3793               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 14649  00568E  3794               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 14650  005690  3795               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 14651  005692  2EE8               	decfsz	wreg,f,c
 14652  005694  D7F8               	goto	u21725
 14653  005696  C092  F060         	movff	??_StartReTxTimer,___lldiv@dividend
 14654  00569A  C093  F061         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 14655  00569E  C094  F062         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 14656  0056A2  C095  F063         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 14657  0056A6  0E7D               	movlw	125
 14658  0056A8  6F64               	movwf	___lldiv@divisor& (0+255),b
 14659  0056AA  0E00               	movlw	0
 14660  0056AC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14661  0056AE  0E00               	movlw	0
 14662  0056B0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14663  0056B2  0E00               	movlw	0
 14664  0056B4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14665  0056B6  EC96  F042         	call	___lldiv	;wreg free
 14666  0056BA  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 14667  0056BE  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 14668  0056C2  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 14669  0056C6  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 14670  0056CA  0102               	movlb	2	; () banked
 14671  0056CC  51EB               	movf	(_loRa+230)& (0+255),w,b
 14672  0056CE  EC7F  F04C         	call	_SwTimerSetTimeout
 14673                           
 14674                           ;lorawan_eu.c: 917: SwTimerStart (loRa.automaticReplyTimerId);
 14675  0056D2  0102               	movlb	2	; () banked
 14676  0056D4  51EB               	movf	(_loRa+230)& (0+255),w,b
 14677  0056D6  EC73  F040         	call	_SwTimerStart
 14678  0056DA  0012               	return		;funcret
 14679  0056DC                     __end_of_StartReTxTimer:
 14680                           	opt callstack 0
 14681                           
 14682 ;; *************** function _SetReceptionNotOkState *****************
 14683 ;; Defined at:
 14684 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14685 ;; Parameters:    Size  Location     Type
 14686 ;;		None
 14687 ;; Auto vars:     Size  Location     Type
 14688 ;;		None
 14689 ;; Return value:  Size  Location     Type
 14690 ;;                  1    wreg      void 
 14691 ;; Registers used:
 14692 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14693 ;; Tracked objects:
 14694 ;;		On entry : 0/0
 14695 ;;		On exit  : 0/0
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14702 ;;Total ram usage:        0 bytes
 14703 ;; Hardware stack levels used:    1
 14704 ;; Hardware stack levels required when called:   14
 14705 ;; This function calls:
 14706 ;;		_LORAWAN_EnterContinuousReceive
 14707 ;;		_RxData
 14708 ;; This function is called by:
 14709 ;;		_LORAWAN_RxDone
 14710 ;; This function uses a non-reentrant model
 14711 ;;
 14712                           
 14713                           	psect	text55
 14714  0086B6                     __ptext55:
 14715                           	opt callstack 0
 14716  0086B6                     _SetReceptionNotOkState:
 14717                           	opt callstack 10
 14718                           
 14719                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 14720                           
 14721                           ;incstack = 0
 14722  0086B6  0102               	movlb	2	; () banked
 14723  0086B8  5107               	movf	(_loRa+2)& (0+255),w,b
 14724  0086BA  0B0F               	andlw	15
 14725  0086BC  0A05               	xorlw	5
 14726  0086BE  B4D8               	btfsc	status,2,c
 14727  0086C0  D008               	goto	u22010
 14728                           
 14729                           ; BSR set to: 2
 14730  0086C2  5107               	movf	(_loRa+2)& (0+255),w,b
 14731  0086C4  0B0F               	andlw	15
 14732  0086C6  0A03               	xorlw	3
 14733  0086C8  A4D8               	btfss	status,2,c
 14734  0086CA  D027               	goto	l20174
 14735                           
 14736                           ; BSR set to: 2
 14737  0086CC  51F6               	movf	(_loRa+241)& (0+255),w,b
 14738  0086CE  B4D8               	btfsc	status,2,c
 14739  0086D0  D024               	goto	l20174
 14740  0086D2                     u22010:
 14741                           
 14742                           ; BSR set to: 2
 14743                           ;lorawan.c: 2000: {;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 14744  0086D2  9105               	bcf	_loRa& (0+255),0,b
 14745                           
 14746                           ; BSR set to: 2
 14747                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 14748  0086D4  0EF0               	movlw	-16
 14749  0086D6  1707               	andwf	(_loRa+2)& (0+255),f,b
 14750                           
 14751                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 14752  0086D8  5117               	movf	(_loRa+18)& (0+255),w,b
 14753  0086DA  A4D8               	btfss	status,2,c
 14754  0086DC  D01C               	goto	u22049
 14755                           
 14756                           ; BSR set to: 2
 14757  0086DE  0101               	movlb	1	; () banked
 14758  0086E0  510E               	movf	_rxPayload& (0+255),w,b
 14759  0086E2  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 14760  0086E4  B4D8               	btfsc	status,2,c
 14761  0086E6  D017               	goto	u22049
 14762                           
 14763                           ; BSR set to: 1
 14764                           ;lorawan.c: 2005: {;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 14765  0086E8  0102               	movlb	2	; () banked
 14766  0086EA  9B05               	bcf	_loRa& (0+255),5,b
 14767                           
 14768                           ; BSR set to: 2
 14769                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 14770  0086EC  0E00               	movlw	0
 14771  0086EE  0100               	movlb	0	; () banked
 14772  0086F0  6F60               	movwf	RxData@pData& (0+255),b
 14773  0086F2  0E00               	movlw	0
 14774  0086F4  6F61               	movwf	(RxData@pData+1)& (0+255),b
 14775  0086F6  0E00               	movlw	0
 14776  0086F8  6F62               	movwf	RxData@dataLength& (0+255),b
 14777  0086FA  0E00               	movlw	0
 14778  0086FC  6F63               	movwf	RxData@status& (0+255),b
 14779  0086FE  D801               	call	u22048
 14780  008700  D00A               	goto	u22049
 14781  008702                     u22048:
 14782  008702  0005               	push	
 14783  008704  6EFA               	movwf	pclath,c
 14784  008706  0101               	movlb	1	; () banked
 14785  008708  510E               	movf	_rxPayload& (0+255),w,b
 14786  00870A  6EFD               	movwf	tosl,c
 14787  00870C  510F               	movf	(_rxPayload+1)& (0+255),w,b
 14788  00870E  6EFE               	movwf	tosh,c
 14789  008710  6AFF               	clrf	tosu,c
 14790  008712  50FA               	movf	pclath,w,c
 14791  008714  0012               	return		;indir
 14792  008716                     u22049:
 14793                           
 14794                           ;lorawan.c: 2008: };lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 14795  008716  0102               	movlb	2	; () banked
 14796  008718  9308               	bcf	(_loRa+3)& (0+255),1,b
 14797  00871A                     l20174:
 14798                           
 14799                           ; BSR set to: 2
 14800                           ;lorawan.c: 2010: };lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 14801  00871A  0E02               	movlw	2
 14802  00871C  1917               	xorwf	(_loRa+18)& (0+255),w,b
 14803  00871E  A4D8               	btfss	status,2,c
 14804  008720  0012               	return	
 14805                           
 14806                           ; BSR set to: 2
 14807                           ;lorawan.c: 2013: {;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 14808  008722  5107               	movf	(_loRa+2)& (0+255),w,b
 14809  008724  0BF0               	andlw	-16
 14810  008726  0909               	iorlw	9
 14811  008728  6F07               	movwf	(_loRa+2)& (0+255),b
 14812                           
 14813                           ; BSR set to: 2
 14814                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 14815  00872A  ECD5  F043         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 14816  00872E  0012               	return		;funcret
 14817  008730                     __end_of_SetReceptionNotOkState:
 14818                           	opt callstack 0
 14819                           
 14820 ;; *************** function _SetJoinFailState *****************
 14821 ;; Defined at:
 14822 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14823 ;; Parameters:    Size  Location     Type
 14824 ;;		None
 14825 ;; Auto vars:     Size  Location     Type
 14826 ;;		None
 14827 ;; Return value:  Size  Location     Type
 14828 ;;                  1    wreg      void 
 14829 ;; Registers used:
 14830 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14831 ;; Tracked objects:
 14832 ;;		On entry : 0/0
 14833 ;;		On exit  : 0/0
 14834 ;;		Unchanged: 0/0
 14835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14840 ;;Total ram usage:        0 bytes
 14841 ;; Hardware stack levels used:    1
 14842 ;; Hardware stack levels required when called:    8
 14843 ;; This function calls:
 14844 ;;		_RxJoinResponse
 14845 ;; This function is called by:
 14846 ;;		_LORAWAN_RxTimeout
 14847 ;;		_LORAWAN_RxDone
 14848 ;; This function uses a non-reentrant model
 14849 ;;
 14850                           
 14851                           	psect	text56
 14852  00A04A                     __ptext56:
 14853                           	opt callstack 0
 14854  00A04A                     _SetJoinFailState:
 14855                           	opt callstack 16
 14856                           
 14857                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 14858                           
 14859                           ;incstack = 0
 14860  00A04A  0102               	movlb	2	; () banked
 14861  00A04C  9907               	bcf	(_loRa+2)& (0+255),4,b
 14862                           
 14863                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 14864  00A04E  9505               	bcf	_loRa& (0+255),2,b
 14865                           
 14866                           ; BSR set to: 2
 14867                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 14868  00A050  0EF0               	movlw	-16
 14869  00A052  1707               	andwf	(_loRa+2)& (0+255),f,b
 14870                           
 14871                           ; BSR set to: 2
 14872                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 14873  00A054  0101               	movlb	1	; () banked
 14874  00A056  5110               	movf	(_rxPayload+2)& (0+255),w,b
 14875  00A058  1111               	iorwf	(_rxPayload+3)& (0+255),w,b
 14876  00A05A  B4D8               	btfsc	status,2,c
 14877  00A05C  0012               	return	
 14878                           
 14879                           ; BSR set to: 1
 14880                           ;lorawan.c: 1110: {;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 14881  00A05E  D801               	call	u21598
 14882  00A060  0012               	return	
 14883  00A062                     u21598:
 14884  00A062  0005               	push	
 14885  00A064  6EFA               	movwf	pclath,c
 14886  00A066  5110               	movf	(_rxPayload+2)& (0+255),w,b
 14887  00A068  6EFD               	movwf	tosl,c
 14888  00A06A  5111               	movf	(_rxPayload+3)& (0+255),w,b
 14889  00A06C  6EFE               	movwf	tosh,c
 14890  00A06E  6AFF               	clrf	tosu,c
 14891  00A070  50FA               	movf	pclath,w,c
 14892  00A072  0E00               	movlw	0
 14893  00A074  0012               	return		;indir
 14894  00A076                     __end_of_SetJoinFailState:
 14895                           	opt callstack 0
 14896                           
 14897 ;; *************** function _RxJoinResponse *****************
 14898 ;; Defined at:
 14899 ;;		line 76 in file "main.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  status          1    wreg     unsigned char 
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;  status          1    0[BANK0 ] unsigned char 
 14904 ;; Return value:  Size  Location     Type
 14905 ;;                  1    wreg      void 
 14906 ;; Registers used:
 14907 ;;		wreg, status,2, status,0
 14908 ;; Tracked objects:
 14909 ;;		On entry : 0/0
 14910 ;;		On exit  : 0/0
 14911 ;;		Unchanged: 0/0
 14912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14916 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14917 ;;Total ram usage:        1 bytes
 14918 ;; Hardware stack levels used:    1
 14919 ;; Hardware stack levels required when called:    7
 14920 ;; This function calls:
 14921 ;;		Nothing
 14922 ;; This function is called by:
 14923 ;;		_main
 14924 ;;		_SetJoinFailState
 14925 ;;		_UpdateJoinSuccessState
 14926 ;; This function uses a non-reentrant model
 14927 ;;
 14928                           
 14929                           	psect	text57
 14930  00A536                     __ptext57:
 14931                           	opt callstack 0
 14932  00A536                     _RxJoinResponse:
 14933                           	opt callstack 18
 14934                           
 14935                           ;incstack = 0
 14936                           ;RxJoinResponse@status stored from wreg
 14937  00A536  0100               	movlb	0	; () banked
 14938  00A538  6F60               	movwf	RxJoinResponse@status& (0+255),b
 14939                           
 14940                           ;main.c: 78: if (status == 1){
 14941  00A53A  0100               	movlb	0	; () banked
 14942  00A53C  0560               	decf	RxJoinResponse@status& (0+255),w,b
 14943  00A53E  A4D8               	btfss	status,2,c
 14944  00A540  D004               	goto	l19864
 14945                           
 14946                           ; BSR set to: 0
 14947                           ;main.c: 81: joined = 1;
 14948  00A542  0E01               	movlw	1
 14949  00A544  0101               	movlb	1	; () banked
 14950  00A546  6F25               	movwf	_joined& (0+255),b
 14951                           
 14952                           ;main.c: 82: }
 14953  00A548  0012               	return	
 14954  00A54A                     l19864:
 14955                           
 14956                           ; BSR set to: 0
 14957                           ;main.c: 83: else {;main.c: 84: joined = 0;
 14958  00A54A  0E00               	movlw	0
 14959  00A54C  0101               	movlb	1	; () banked
 14960  00A54E  6F25               	movwf	_joined& (0+255),b
 14961                           
 14962                           ; BSR set to: 1
 14963  00A550  0012               	return		;funcret
 14964  00A552                     __end_of_RxJoinResponse:
 14965                           	opt callstack 0
 14966                           
 14967 ;; *************** function _MacExecuteCommands *****************
 14968 ;; Defined at:
 14969 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14970 ;; Parameters:    Size  Location     Type
 14971 ;;  buffer          2   70[BANK0 ] PTR unsigned char 
 14972 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14973 ;;  fOptsLen        1   72[BANK0 ] unsigned char 
 14974 ;; Auto vars:     Size  Location     Type
 14975 ;;  ptr             2   76[BANK0 ] PTR unsigned char 
 14976 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14977 ;;  done            1   75[BANK0 ] unsigned char 
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  2   70[BANK0 ] PTR unsigned char 
 14980 ;; Registers used:
 14981 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14982 ;; Tracked objects:
 14983 ;;		On entry : 0/0
 14984 ;;		On exit  : 0/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14987 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14988 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14989 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14990 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14991 ;;Total ram usage:        8 bytes
 14992 ;; Hardware stack levels used:    1
 14993 ;; Hardware stack levels required when called:   11
 14994 ;; This function calls:
 14995 ;;		_ExecuteDevStatus
 14996 ;;		_ExecuteDutyCycle
 14997 ;;		_ExecuteLinkAdr
 14998 ;;		_ExecuteLinkCheck
 14999 ;;		_ExecuteNewChannel
 15000 ;;		_ExecuteRxParamSetupReq
 15001 ;;		_ExecuteRxTimingSetup
 15002 ;; This function is called by:
 15003 ;;		_LORAWAN_RxDone
 15004 ;; This function uses a non-reentrant model
 15005 ;;
 15006                           
 15007                           	psect	text58
 15008  004244                     __ptext58:
 15009                           	opt callstack 0
 15010  004244                     _MacExecuteCommands:
 15011                           	opt callstack 13
 15012                           
 15013                           ;lorawan.c: 1577: bool done = 0;
 15014                           
 15015                           ; BSR set to: 1
 15016                           ;incstack = 0
 15017  004244  0E00               	movlw	0
 15018  004246  0100               	movlb	0	; () banked
 15019  004248  6FAB               	movwf	MacExecuteCommands@done& (0+255),b
 15020                           
 15021                           ; BSR set to: 0
 15022                           ;lorawan.c: 1578: uint8_t *ptr;;lorawan.c: 1579: ptr = buffer;
 15023  00424A  C0A6  F0AC         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 15024  00424E  C0A7  F0AD         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 15025                           
 15026                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 15027  004252  D0E7               	goto	l20236
 15028  004254                     l20200:
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;lorawan.c: 1581: {;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAc
      +                          k = 0;
 15032  004254  0102               	movlb	2	; () banked
 15033  004256  51AC               	movf	(_loRa+167)& (0+255),w,b
 15034  004258  0D02               	mullw	2
 15035  00425A  0EAE               	movlw	low (_loRa+169)
 15036  00425C  24F3               	addwf	prodl,w,c
 15037  00425E  6ED9               	movwf	fsr2l,c
 15038  004260  0E02               	movlw	high (_loRa+169)
 15039  004262  20F4               	addwfc	prodh,w,c
 15040  004264  6EDA               	movwf	fsr2h,c
 15041  004266  90DF               	bcf	indf2,0,c
 15042                           
 15043                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 15044  004268  51AC               	movf	(_loRa+167)& (0+255),w,b
 15045  00426A  0D02               	mullw	2
 15046  00426C  0EAE               	movlw	low (_loRa+169)
 15047  00426E  24F3               	addwf	prodl,w,c
 15048  004270  6ED9               	movwf	fsr2l,c
 15049  004272  0E02               	movlw	high (_loRa+169)
 15050  004274  20F4               	addwfc	prodh,w,c
 15051  004276  6EDA               	movwf	fsr2h,c
 15052  004278  92DF               	bcf	indf2,1,c
 15053                           
 15054                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 15055  00427A  51AC               	movf	(_loRa+167)& (0+255),w,b
 15056  00427C  0D02               	mullw	2
 15057  00427E  0EAE               	movlw	low (_loRa+169)
 15058  004280  24F3               	addwf	prodl,w,c
 15059  004282  6ED9               	movwf	fsr2l,c
 15060  004284  0E02               	movlw	high (_loRa+169)
 15061  004286  20F4               	addwfc	prodh,w,c
 15062  004288  6EDA               	movwf	fsr2h,c
 15063  00428A  94DF               	bcf	indf2,2,c
 15064                           
 15065                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 15066  00428C  51AC               	movf	(_loRa+167)& (0+255),w,b
 15067  00428E  0D02               	mullw	2
 15068  004290  0EAE               	movlw	low (_loRa+169)
 15069  004292  24F3               	addwf	prodl,w,c
 15070  004294  6ED9               	movwf	fsr2l,c
 15071  004296  0E02               	movlw	high (_loRa+169)
 15072  004298  20F4               	addwfc	prodh,w,c
 15073  00429A  6EDA               	movwf	fsr2h,c
 15074  00429C  96DF               	bcf	indf2,3,c
 15075                           
 15076                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 15077  00429E  51AC               	movf	(_loRa+167)& (0+255),w,b
 15078  0042A0  0D02               	mullw	2
 15079  0042A2  0EAE               	movlw	low (_loRa+169)
 15080  0042A4  24F3               	addwf	prodl,w,c
 15081  0042A6  6ED9               	movwf	fsr2l,c
 15082  0042A8  0E02               	movlw	high (_loRa+169)
 15083  0042AA  20F4               	addwfc	prodh,w,c
 15084  0042AC  6EDA               	movwf	fsr2h,c
 15085  0042AE  98DF               	bcf	indf2,4,c
 15086                           
 15087                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 15088  0042B0  51AC               	movf	(_loRa+167)& (0+255),w,b
 15089  0042B2  0D02               	mullw	2
 15090  0042B4  0EAE               	movlw	low (_loRa+169)
 15091  0042B6  24F3               	addwf	prodl,w,c
 15092  0042B8  6ED9               	movwf	fsr2l,c
 15093  0042BA  0E02               	movlw	high (_loRa+169)
 15094  0042BC  20F4               	addwfc	prodh,w,c
 15095  0042BE  6EDA               	movwf	fsr2h,c
 15096  0042C0  9ADF               	bcf	indf2,5,c
 15097                           
 15098                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 15099  0042C2  51AC               	movf	(_loRa+167)& (0+255),w,b
 15100  0042C4  0D02               	mullw	2
 15101  0042C6  0EAE               	movlw	low (_loRa+169)
 15102  0042C8  24F3               	addwf	prodl,w,c
 15103  0042CA  6ED9               	movwf	fsr2l,c
 15104  0042CC  0E02               	movlw	high (_loRa+169)
 15105  0042CE  20F4               	addwfc	prodh,w,c
 15106  0042D0  6EDA               	movwf	fsr2h,c
 15107  0042D2  9CDF               	bcf	indf2,6,c
 15108                           
 15109                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 15110  0042D4  51AC               	movf	(_loRa+167)& (0+255),w,b
 15111  0042D6  0D02               	mullw	2
 15112  0042D8  0EAE               	movlw	low (_loRa+169)
 15113  0042DA  24F3               	addwf	prodl,w,c
 15114  0042DC  6ED9               	movwf	fsr2l,c
 15115  0042DE  0E02               	movlw	high (_loRa+169)
 15116  0042E0  20F4               	addwfc	prodh,w,c
 15117  0042E2  6EDA               	movwf	fsr2h,c
 15118  0042E4  9EDF               	bcf	indf2,7,c
 15119                           
 15120                           ; BSR set to: 2
 15121                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 15122  0042E6  C0AC  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15123  0042EA  C0AD  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15124  0042EE  51AC               	movf	(_loRa+167)& (0+255),w,b
 15125  0042F0  0D02               	mullw	2
 15126  0042F2  0EAD               	movlw	low (_loRa+168)
 15127  0042F4  24F3               	addwf	prodl,w,c
 15128  0042F6  6EE9               	movwf	fsr0l,c
 15129  0042F8  0E02               	movlw	high (_loRa+168)
 15130  0042FA  20F4               	addwfc	prodh,w,c
 15131  0042FC  6EEA               	movwf	fsr0h,c
 15132  0042FE  CFDF FFEF          	movff	indf2,indf0
 15133                           
 15134                           ;lorawan.c: 1595: switch (*ptr ++)
 15135  004302  D061               	goto	l20228
 15136  004304                     l20204:
 15137                           
 15138                           ; BSR set to: 0
 15139                           ;lorawan.c: 1598: {;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 15140  004304  C0AC  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 15141  004308  C0AD  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 15142  00430C  EC66  F04E         	call	_ExecuteLinkCheck
 15143  004310  C060  F0AC         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 15144  004314  C061  F0AD         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 15145  004318                     l20206:
 15146                           
 15147                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 15148  004318  0102               	movlb	2	; () banked
 15149  00431A  51AC               	movf	(_loRa+167)& (0+255),w,b
 15150  00431C  0D02               	mullw	2
 15151  00431E  0EAD               	movlw	low (_loRa+168)
 15152  004320  24F3               	addwf	prodl,w,c
 15153  004322  6ED9               	movwf	fsr2l,c
 15154  004324  0E02               	movlw	high (_loRa+168)
 15155  004326  20F4               	addwfc	prodh,w,c
 15156  004328  6EDA               	movwf	fsr2h,c
 15157  00432A  0EFF               	movlw	255
 15158  00432C  6EDF               	movwf	indf2,c
 15159                           
 15160                           ;lorawan.c: 1602: } break;
 15161  00432E  D069               	goto	l20230
 15162  004330                     l20208:
 15163                           
 15164                           ; BSR set to: 0
 15165                           ;lorawan.c: 1605: {;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 15166  004330  C0AC  F06F         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 15167  004334  C0AD  F070         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 15168  004338  EC02  F024         	call	_ExecuteLinkAdr	;wreg free
 15169  00433C  C06F  F0AC         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 15170  004340  C070  F0AD         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 15171                           
 15172                           ;lorawan.c: 1607: } break;
 15173  004344  D05E               	goto	l20230
 15174  004346                     l20210:
 15175                           
 15176                           ; BSR set to: 0
 15177                           ;lorawan.c: 1610: {;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 15178  004346  C0AC  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 15179  00434A  C0AD  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 15180  00434E  EC2D  F049         	call	_ExecuteDutyCycle	;wreg free
 15181  004352  C060  F0AC         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 15182  004356  C061  F0AD         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 15183                           
 15184                           ;lorawan.c: 1612: } break;
 15185  00435A  D053               	goto	l20230
 15186  00435C                     l20212:
 15187                           
 15188                           ; BSR set to: 0
 15189                           ;lorawan.c: 1615: {;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 15190  00435C  C0AC  F09E         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 15191  004360  C0AD  F09F         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 15192  004364  EC6A  F029         	call	_ExecuteRxParamSetupReq	;wreg free
 15193  004368  C09E  F0AC         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 15194  00436C  C09F  F0AD         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 15195                           
 15196                           ;lorawan.c: 1617: } break;
 15197  004370  D048               	goto	l20230
 15198  004372                     l20214:
 15199                           
 15200                           ; BSR set to: 0
 15201                           ;lorawan.c: 1620: {;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 15202  004372  C0AC  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 15203  004376  C0AD  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 15204  00437A  ECD8  F053         	call	_ExecuteDevStatus	;wreg free
 15205  00437E  C060  F0AC         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 15206  004382  C061  F0AD         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 15207                           
 15208                           ;lorawan.c: 1622: } break;
 15209  004386  D03D               	goto	l20230
 15210  004388                     l20216:
 15211                           
 15212                           ; BSR set to: 0
 15213                           ;lorawan.c: 1625: {;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 15214  004388  C0AC  F09E         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 15215  00438C  C0AD  F09F         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 15216  004390  EC26  F022         	call	_ExecuteNewChannel	;wreg free
 15217  004394  C09E  F0AC         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 15218  004398  C09F  F0AD         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 15219                           
 15220                           ;lorawan.c: 1628: } break;
 15221  00439C  D032               	goto	l20230
 15222  00439E                     l20218:
 15223                           
 15224                           ; BSR set to: 0
 15225                           ;lorawan.c: 1631: {;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 15226  00439E  C0AC  F067         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 15227  0043A2  C0AD  F068         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 15228  0043A6  ECB9  F050         	call	_ExecuteRxTimingSetup	;wreg free
 15229  0043AA  C067  F0AC         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 15230  0043AE  C068  F0AD         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 15231                           
 15232                           ;lorawan.c: 1633: } break;
 15233  0043B2  D027               	goto	l20230
 15234  0043B4                     l20220:
 15235                           
 15236                           ; BSR set to: 0
 15237                           ;lorawan.c: 1636: {;lorawan.c: 1637: done = 1;
 15238  0043B4  0E01               	movlw	1
 15239  0043B6  6FAB               	movwf	MacExecuteCommands@done& (0+255),b
 15240                           
 15241                           ; BSR set to: 0
 15242                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 15243  0043B8  51A8               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15244  0043BA  25A6               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 15245  0043BC  6FAC               	movwf	MacExecuteCommands@ptr& (0+255),b
 15246  0043BE  0E00               	movlw	0
 15247  0043C0  21A7               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 15248  0043C2  6FAD               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 15249  0043C4  D7A9               	goto	l20206
 15250  0043C6                     l20228:
 15251                           
 15252                           ; BSR set to: 2
 15253  0043C6  C0AC  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15254  0043CA  C0AD  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15255  0043CE  0100               	movlb	0	; () banked
 15256  0043D0  4BAC               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 15257  0043D2  2BAD               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 15258  0043D4  50DF               	movf	indf2,w,c
 15259                           
 15260                           ; Switch size 1, requested type "simple"
 15261                           ; Number of cases is 7, Range of values is 2 to 8
 15262                           ; switch strategies available:
 15263                           ; Name         Instructions Cycles
 15264                           ; simple_byte           22    12 (average)
 15265                           ;	Chosen strategy is simple_byte
 15266  0043D6  0A02               	xorlw	2	; case 2
 15267  0043D8  B4D8               	btfsc	status,2,c
 15268  0043DA  D794               	goto	l20204
 15269  0043DC  0A01               	xorlw	1	; case 3
 15270  0043DE  B4D8               	btfsc	status,2,c
 15271  0043E0  D7A7               	goto	l20208
 15272  0043E2  0A07               	xorlw	7	; case 4
 15273  0043E4  B4D8               	btfsc	status,2,c
 15274  0043E6  D7AF               	goto	l20210
 15275  0043E8  0A01               	xorlw	1	; case 5
 15276  0043EA  B4D8               	btfsc	status,2,c
 15277  0043EC  D7B7               	goto	l20212
 15278  0043EE  0A03               	xorlw	3	; case 6
 15279  0043F0  B4D8               	btfsc	status,2,c
 15280  0043F2  D7BF               	goto	l20214
 15281  0043F4  0A01               	xorlw	1	; case 7
 15282  0043F6  B4D8               	btfsc	status,2,c
 15283  0043F8  D7C7               	goto	l20216
 15284  0043FA  0A0F               	xorlw	15	; case 8
 15285  0043FC  B4D8               	btfsc	status,2,c
 15286  0043FE  D7CF               	goto	l20218
 15287  004400  D7D9               	goto	l20220
 15288  004402                     l20230:
 15289                           
 15290                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&;lora
      +                          wan.c: 1644: (loRa.crtMacCmdIndex < 16))
 15291  004402  0102               	movlb	2	; () banked
 15292  004404  51AC               	movf	(_loRa+167)& (0+255),w,b
 15293  004406  0D02               	mullw	2
 15294  004408  0EAD               	movlw	low (_loRa+168)
 15295  00440A  24F3               	addwf	prodl,w,c
 15296  00440C  6ED9               	movwf	fsr2l,c
 15297  00440E  0E02               	movlw	high (_loRa+168)
 15298  004410  20F4               	addwfc	prodh,w,c
 15299  004412  6EDA               	movwf	fsr2h,c
 15300  004414  28DE               	incf	postinc2,w,c
 15301  004416  B4D8               	btfsc	status,2,c
 15302  004418  D004               	goto	l20236
 15303                           
 15304                           ; BSR set to: 2
 15305  00441A  0E10               	movlw	16
 15306  00441C  61AC               	cpfslt	(_loRa+167)& (0+255),b
 15307  00441E  D001               	goto	l20236
 15308                           
 15309                           ; BSR set to: 2
 15310                           ;lorawan.c: 1645: {;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 15311  004420  2BAC               	incf	(_loRa+167)& (0+255),f,b
 15312  004422                     l20236:
 15313  004422  0100               	movlb	0	; () banked
 15314  004424  51A8               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15315  004426  25A6               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 15316  004428  6FA9               	movwf	??_MacExecuteCommands& (0+255),b
 15317  00442A  0E00               	movlw	0
 15318  00442C  21A7               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 15319  00442E  6FAA               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15320  004430  51A9               	movf	??_MacExecuteCommands& (0+255),w,b
 15321  004432  5DAC               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 15322  004434  51AA               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 15323  004436  59AD               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 15324  004438  B0D8               	btfsc	status,0,c
 15325  00443A  D003               	goto	u22130
 15326                           
 15327                           ; BSR set to: 0
 15328  00443C  51AB               	movf	MacExecuteCommands@done& (0+255),w,b
 15329  00443E  B4D8               	btfsc	status,2,c
 15330  004440  D709               	goto	l20200
 15331  004442                     u22130:
 15332                           
 15333                           ; BSR set to: 0
 15334                           ;lorawan.c: 1647: };lorawan.c: 1648: };lorawan.c: 1649: return ptr;
 15335  004442  C0AC  F0A6         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 15336  004446  C0AD  F0A7         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 15337                           
 15338                           ; BSR set to: 0
 15339  00444A  0012               	return		;funcret
 15340  00444C                     __end_of_MacExecuteCommands:
 15341                           	opt callstack 0
 15342                           
 15343 ;; *************** function _ExecuteRxTimingSetup *****************
 15344 ;; Defined at:
 15345 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15346 ;; Parameters:    Size  Location     Type
 15347 ;;  ptr             2    7[BANK0 ] PTR unsigned char 
 15348 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15349 ;; Auto vars:     Size  Location     Type
 15350 ;;  delay           1    9[BANK0 ] unsigned char 
 15351 ;; Return value:  Size  Location     Type
 15352 ;;                  2    7[BANK0 ] PTR unsigned char 
 15353 ;; Registers used:
 15354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15355 ;; Tracked objects:
 15356 ;;		On entry : 0/0
 15357 ;;		On exit  : 0/0
 15358 ;;		Unchanged: 0/0
 15359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15360 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15363 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15364 ;;Total ram usage:        3 bytes
 15365 ;; Hardware stack levels used:    1
 15366 ;; Hardware stack levels required when called:    9
 15367 ;; This function calls:
 15368 ;;		_UpdateReceiveDelays
 15369 ;; This function is called by:
 15370 ;;		_MacExecuteCommands
 15371 ;; This function uses a non-reentrant model
 15372 ;;
 15373                           
 15374                           	psect	text59
 15375  00A172                     __ptext59:
 15376                           	opt callstack 0
 15377  00A172                     _ExecuteRxTimingSetup:
 15378                           	opt callstack 14
 15379                           
 15380                           ;lorawan.c: 1661: uint8_t delay;;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 15381                           
 15382                           ; BSR set to: 0
 15383                           ;incstack = 0
 15384  00A172  C067  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 15385  00A176  C068  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 15386  00A17A  50DF               	movf	indf2,w,c
 15387  00A17C  0B0F               	andlw	15
 15388  00A17E  0100               	movlb	0	; () banked
 15389  00A180  6F69               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 15390                           
 15391                           ; BSR set to: 0
 15392                           ;lorawan.c: 1664: ptr++;
 15393  00A182  4B67               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 15394  00A184  2B68               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 15395                           
 15396                           ; BSR set to: 0
 15397                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 15398  00A186  5169               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 15399  00A188  ECA1  F04C         	call	_UpdateReceiveDelays
 15400                           
 15401                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 15402  00A18C  0102               	movlb	2	; () banked
 15403  00A18E  8109               	bsf	(_loRa+4)& (0+255),0,b
 15404                           
 15405                           ; BSR set to: 2
 15406                           ;lorawan.c: 1669: return ptr;
 15407  00A190  C067  F067         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 15408  00A194  C068  F068         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 15409                           
 15410                           ; BSR set to: 2
 15411  00A198  0012               	return		;funcret
 15412  00A19A                     __end_of_ExecuteRxTimingSetup:
 15413                           	opt callstack 0
 15414                           
 15415 ;; *************** function _UpdateReceiveDelays *****************
 15416 ;; Defined at:
 15417 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15418 ;; Parameters:    Size  Location     Type
 15419 ;;  delay           1    wreg     unsigned char 
 15420 ;; Auto vars:     Size  Location     Type
 15421 ;;  delay           1    6[BANK0 ] unsigned char 
 15422 ;; Return value:  Size  Location     Type
 15423 ;;                  1    wreg      void 
 15424 ;; Registers used:
 15425 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15426 ;; Tracked objects:
 15427 ;;		On entry : 0/0
 15428 ;;		On exit  : 0/0
 15429 ;;		Unchanged: 0/0
 15430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15432 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15434 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15435 ;;Total ram usage:        1 bytes
 15436 ;; Hardware stack levels used:    1
 15437 ;; Hardware stack levels required when called:    8
 15438 ;; This function calls:
 15439 ;;		___wmul
 15440 ;; This function is called by:
 15441 ;;		_LORAWAN_RxDone
 15442 ;;		_ExecuteRxTimingSetup
 15443 ;; This function uses a non-reentrant model
 15444 ;;
 15445                           
 15446                           	psect	text60
 15447  009942                     __ptext60:
 15448                           	opt callstack 0
 15449  009942                     _UpdateReceiveDelays:
 15450                           	opt callstack 16
 15451                           
 15452                           ; BSR set to: 2
 15453                           ;incstack = 0
 15454                           ;UpdateReceiveDelays@delay stored from wreg
 15455  009942  0100               	movlb	0	; () banked
 15456  009944  6F66               	movwf	UpdateReceiveDelays@delay& (0+255),b
 15457                           
 15458                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 15459  009946  C066  F060         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 15460  00994A  0100               	movlb	0	; () banked
 15461  00994C  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 15462  00994E  0E03               	movlw	3
 15463  009950  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15464  009952  0EE8               	movlw	232
 15465  009954  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15466  009956  ECCD  F050         	call	___wmul	;wreg free
 15467  00995A  C060  F299         	movff	?___wmul,_loRa+148
 15468  00995E  C061  F29A         	movff	?___wmul+1,_loRa+149
 15469                           
 15470                           ;lorawan.c: 2029: if (delay == 0)
 15471  009962  0100               	movlb	0	; () banked
 15472  009964  5166               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 15473  009966  A4D8               	btfss	status,2,c
 15474  009968  D005               	goto	l19234
 15475                           
 15476                           ; BSR set to: 0
 15477                           ;lorawan.c: 2030: {;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 15478  00996A  0E03               	movlw	3
 15479  00996C  0102               	movlb	2	; () banked
 15480  00996E  6F9A               	movwf	(_loRa+149)& (0+255),b
 15481  009970  0EE8               	movlw	232
 15482  009972  6F99               	movwf	(_loRa+148)& (0+255),b
 15483  009974                     l19234:
 15484                           
 15485                           ;lorawan.c: 2032: };lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protoc
      +                          olParameters.receiveDelay1 + 1000;
 15486  009974  0EE8               	movlw	232
 15487  009976  0102               	movlb	2	; () banked
 15488  009978  2599               	addwf	(_loRa+148)& (0+255),w,b
 15489  00997A  6F9B               	movwf	(_loRa+150)& (0+255),b
 15490  00997C  0E03               	movlw	3
 15491  00997E  219A               	addwfc	(_loRa+149)& (0+255),w,b
 15492  009980  6F9C               	movwf	(_loRa+151)& (0+255),b
 15493                           
 15494                           ; BSR set to: 2
 15495  009982  0012               	return		;funcret
 15496  009984                     __end_of_UpdateReceiveDelays:
 15497                           	opt callstack 0
 15498                           
 15499 ;; *************** function ___wmul *****************
 15500 ;; Defined at:
 15501 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 15502 ;; Parameters:    Size  Location     Type
 15503 ;;  multiplier      2    0[BANK0 ] unsigned int 
 15504 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 15505 ;; Auto vars:     Size  Location     Type
 15506 ;;  product         2    4[BANK0 ] unsigned int 
 15507 ;; Return value:  Size  Location     Type
 15508 ;;                  2    0[BANK0 ] unsigned int 
 15509 ;; Registers used:
 15510 ;;		wreg, status,2, status,0, prodl, prodh
 15511 ;; Tracked objects:
 15512 ;;		On entry : 0/0
 15513 ;;		On exit  : 0/0
 15514 ;;		Unchanged: 0/0
 15515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15516 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15519 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15520 ;;Total ram usage:        6 bytes
 15521 ;; Hardware stack levels used:    1
 15522 ;; Hardware stack levels required when called:    7
 15523 ;; This function calls:
 15524 ;;		Nothing
 15525 ;; This function is called by:
 15526 ;;		_UpdateReceiveDelays
 15527 ;; This function uses a non-reentrant model
 15528 ;;
 15529                           
 15530                           	psect	text61
 15531  00A19A                     __ptext61:
 15532                           	opt callstack 0
 15533  00A19A                     ___wmul:
 15534                           	opt callstack 16
 15535                           
 15536                           ; BSR set to: 2
 15537                           ;incstack = 0
 15538  00A19A  0100               	movlb	0	; () banked
 15539  00A19C  5160               	movf	___wmul@multiplier& (0+255),w,b
 15540  00A19E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15541  00A1A0  CFF3 F064          	movff	prodl,___wmul@product
 15542  00A1A4  CFF4 F065          	movff	prodh,___wmul@product+1
 15543  00A1A8  5160               	movf	___wmul@multiplier& (0+255),w,b
 15544  00A1AA  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15545  00A1AC  50F3               	movf	prodl,w,c
 15546  00A1AE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15547  00A1B0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15548  00A1B2  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15549  00A1B4  50F3               	movf	prodl,w,c
 15550  00A1B6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15551                           
 15552                           ; BSR set to: 0
 15553  00A1B8  C064  F060         	movff	___wmul@product,?___wmul
 15554  00A1BC  C065  F061         	movff	___wmul@product+1,?___wmul+1
 15555                           
 15556                           ; BSR set to: 0
 15557  00A1C0  0012               	return		;funcret
 15558  00A1C2                     __end_of___wmul:
 15559                           	opt callstack 0
 15560                           
 15561 ;; *************** function _ExecuteRxParamSetupReq *****************
 15562 ;; Defined at:
 15563 ;;		line 741 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15564 ;; Parameters:    Size  Location     Type
 15565 ;;  ptr             2   62[BANK0 ] PTR unsigned char 
 15566 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15567 ;; Auto vars:     Size  Location     Type
 15568 ;;  frequency       4   64[BANK0 ] unsigned long 
 15569 ;;  dlSettings      1   68[BANK0 ] struct .
 15570 ;; Return value:  Size  Location     Type
 15571 ;;                  2   62[BANK0 ] PTR unsigned char 
 15572 ;; Registers used:
 15573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15574 ;; Tracked objects:
 15575 ;;		On entry : 0/0
 15576 ;;		On exit  : 0/0
 15577 ;;		Unchanged: 0/0
 15578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15579 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15580 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15582 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15583 ;;Total ram usage:        7 bytes
 15584 ;; Hardware stack levels used:    1
 15585 ;; Hardware stack levels required when called:    8
 15586 ;; This function calls:
 15587 ;;		_UpdateReceiveWindow2Parameters
 15588 ;;		_ValidateDataRate
 15589 ;;		_ValidateFrequency
 15590 ;;		_ValidateRxOffset
 15591 ;;		___lmul
 15592 ;; This function is called by:
 15593 ;;		_MacExecuteCommands
 15594 ;; This function uses a non-reentrant model
 15595 ;;
 15596                           
 15597                           	psect	text62
 15598  0052D4                     __ptext62:
 15599                           	opt callstack 0
 15600  0052D4                     _ExecuteRxParamSetupReq:
 15601                           	opt callstack 15
 15602                           
 15603                           ;lorawan_eu.c: 748: dlSettings.value = *(ptr++);
 15604                           
 15605                           ; BSR set to: 0
 15606                           ;incstack = 0
 15607  0052D4  C09E  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15608  0052D8  C09F  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15609  0052DC  50DF               	movf	indf2,w,c
 15610  0052DE  0100               	movlb	0	; () banked
 15611  0052E0  6FA4               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 15612                           
 15613                           ; BSR set to: 0
 15614  0052E2  4B9E               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 15615  0052E4  2B9F               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 15616                           
 15617                           ; BSR set to: 0
 15618                           ;lorawan_eu.c: 750: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15619  0052E6  C09E  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15620  0052EA  C09F  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15621  0052EE  0EFF               	movlw	255
 15622  0052F0  14DE               	andwf	postinc2,w,c
 15623  0052F2  6FA0               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15624  0052F4  0EFF               	movlw	255
 15625  0052F6  14DE               	andwf	postinc2,w,c
 15626  0052F8  6FA1               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15627  0052FA  0EFF               	movlw	255
 15628  0052FC  14DE               	andwf	postinc2,w,c
 15629  0052FE  6FA2               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15630  005300  0E00               	movlw	0
 15631  005302  14DE               	andwf	postinc2,w,c
 15632  005304  6FA3               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15633                           
 15634                           ; BSR set to: 0
 15635                           ;lorawan_eu.c: 751: frequency = frequency * 100;
 15636  005306  C0A0  F092         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 15637  00530A  C0A1  F093         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 15638  00530E  C0A2  F094         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 15639  005312  C0A3  F095         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 15640  005316  0E64               	movlw	100
 15641  005318  6F96               	movwf	___lmul@multiplicand& (0+255),b
 15642  00531A  0E00               	movlw	0
 15643  00531C  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15644  00531E  0E00               	movlw	0
 15645  005320  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15646  005322  0E00               	movlw	0
 15647  005324  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15648  005326  ECD6  F048         	call	___lmul	;wreg free
 15649  00532A  C092  F0A0         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 15650  00532E  C093  F0A1         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 15651  005332  C094  F0A2         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 15652  005336  C095  F0A3         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 15653                           
 15654                           ;lorawan_eu.c: 752: ptr = ptr + 3;
 15655  00533A  0E03               	movlw	3
 15656  00533C  0100               	movlb	0	; () banked
 15657  00533E  259E               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 15658  005340  6F9E               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 15659  005342  0E00               	movlw	0
 15660  005344  219F               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 15661  005346  6F9F               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;lorawan_eu.c: 754: if (ValidateFrequency (frequency) == OK)
 15665  005348  C0A0  F060         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 15666  00534C  C0A1  F061         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 15667  005350  C0A2  F062         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 15668  005354  C0A3  F063         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 15669  005358  ECB4  F045         	call	_ValidateFrequency	;wreg free
 15670  00535C  0900               	iorlw	0
 15671  00535E  A4D8               	btfss	status,2,c
 15672  005360  D00A               	goto	l19672
 15673                           
 15674                           ;lorawan_eu.c: 755: {;lorawan_eu.c: 756: loRa.macCommands[loRa.crtMacCmdIndex].channelAc
      +                          k = 1;
 15675  005362  0102               	movlb	2	; () banked
 15676  005364  51AC               	movf	(_loRa+167)& (0+255),w,b
 15677  005366  0D02               	mullw	2
 15678  005368  0EAE               	movlw	low (_loRa+169)
 15679  00536A  24F3               	addwf	prodl,w,c
 15680  00536C  6ED9               	movwf	fsr2l,c
 15681  00536E  0E02               	movlw	high (_loRa+169)
 15682  005370  20F4               	addwfc	prodh,w,c
 15683  005372  6EDA               	movwf	fsr2h,c
 15684  005374  86DF               	bsf	indf2,3,c
 15685  005376                     l19672:
 15686                           
 15687                           ;lorawan_eu.c: 757: };lorawan_eu.c: 759: if (ValidateDataRate (dlSettings.bits.rx2DataRa
      +                          te) == OK)
 15688  005376  0100               	movlb	0	; () banked
 15689  005378  51A4               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15690  00537A  0B0F               	andlw	15
 15691  00537C  EC06  F053         	call	_ValidateDataRate
 15692  005380  0900               	iorlw	0
 15693  005382  A4D8               	btfss	status,2,c
 15694  005384  D00A               	goto	l19676
 15695                           
 15696                           ;lorawan_eu.c: 760: {;lorawan_eu.c: 761: loRa.macCommands[loRa.crtMacCmdIndex].dataRateR
      +                          eceiveWindowAck = 1;
 15697  005386  0102               	movlb	2	; () banked
 15698  005388  51AC               	movf	(_loRa+167)& (0+255),w,b
 15699  00538A  0D02               	mullw	2
 15700  00538C  0EAE               	movlw	low (_loRa+169)
 15701  00538E  24F3               	addwf	prodl,w,c
 15702  005390  6ED9               	movwf	fsr2l,c
 15703  005392  0E02               	movlw	high (_loRa+169)
 15704  005394  20F4               	addwfc	prodh,w,c
 15705  005396  6EDA               	movwf	fsr2h,c
 15706  005398  88DF               	bsf	indf2,4,c
 15707  00539A                     l19676:
 15708                           
 15709                           ;lorawan_eu.c: 762: };lorawan_eu.c: 764: if (ValidateRxOffset (dlSettings.bits.rx1DROffs
      +                          et) == OK)
 15710  00539A  0100               	movlb	0	; () banked
 15711  00539C  39A4               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15712  00539E  0B07               	andlw	7
 15713  0053A0  ECFA  F052         	call	_ValidateRxOffset
 15714  0053A4  0900               	iorlw	0
 15715  0053A6  A4D8               	btfss	status,2,c
 15716  0053A8  D00A               	goto	l1145
 15717                           
 15718                           ;lorawan_eu.c: 765: {;lorawan_eu.c: 766: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffe
      +                          stAck = 1;
 15719  0053AA  0102               	movlb	2	; () banked
 15720  0053AC  51AC               	movf	(_loRa+167)& (0+255),w,b
 15721  0053AE  0D02               	mullw	2
 15722  0053B0  0EAE               	movlw	low (_loRa+169)
 15723  0053B2  24F3               	addwf	prodl,w,c
 15724  0053B4  6ED9               	movwf	fsr2l,c
 15725  0053B6  0E02               	movlw	high (_loRa+169)
 15726  0053B8  20F4               	addwfc	prodh,w,c
 15727  0053BA  6EDA               	movwf	fsr2h,c
 15728  0053BC  8ADF               	bsf	indf2,5,c
 15729  0053BE                     l1145:
 15730                           
 15731                           ;lorawan_eu.c: 767: };lorawan_eu.c: 769: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dat
      +                          aRateReceiveWindowAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) &
      +                          & (loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck == 1))
 15732  0053BE  0102               	movlb	2	; () banked
 15733  0053C0  51AC               	movf	(_loRa+167)& (0+255),w,b
 15734  0053C2  0D02               	mullw	2
 15735  0053C4  0EAE               	movlw	low (_loRa+169)
 15736  0053C6  24F3               	addwf	prodl,w,c
 15737  0053C8  6ED9               	movwf	fsr2l,c
 15738  0053CA  0E02               	movlw	high (_loRa+169)
 15739  0053CC  20F4               	addwfc	prodh,w,c
 15740  0053CE  6EDA               	movwf	fsr2h,c
 15741  0053D0  A8DF               	btfss	indf2,4,c
 15742  0053D2  D029               	goto	l19690
 15743                           
 15744                           ; BSR set to: 2
 15745  0053D4  51AC               	movf	(_loRa+167)& (0+255),w,b
 15746  0053D6  0D02               	mullw	2
 15747  0053D8  0EAE               	movlw	low (_loRa+169)
 15748  0053DA  24F3               	addwf	prodl,w,c
 15749  0053DC  6ED9               	movwf	fsr2l,c
 15750  0053DE  0E02               	movlw	high (_loRa+169)
 15751  0053E0  20F4               	addwfc	prodh,w,c
 15752  0053E2  6EDA               	movwf	fsr2h,c
 15753  0053E4  A6DF               	btfss	indf2,3,c
 15754  0053E6  D01F               	goto	l19690
 15755                           
 15756                           ; BSR set to: 2
 15757  0053E8  51AC               	movf	(_loRa+167)& (0+255),w,b
 15758  0053EA  0D02               	mullw	2
 15759  0053EC  0EAE               	movlw	low (_loRa+169)
 15760  0053EE  24F3               	addwf	prodl,w,c
 15761  0053F0  6ED9               	movwf	fsr2l,c
 15762  0053F2  0E02               	movlw	high (_loRa+169)
 15763  0053F4  20F4               	addwfc	prodh,w,c
 15764  0053F6  6EDA               	movwf	fsr2h,c
 15765  0053F8  AADF               	btfss	indf2,5,c
 15766  0053FA  D015               	goto	l19690
 15767                           
 15768                           ; BSR set to: 2
 15769                           ;lorawan_eu.c: 770: {;lorawan_eu.c: 771: loRa.offset = dlSettings.bits.rx1DROffset;
 15770  0053FC  0100               	movlb	0	; () banked
 15771  0053FE  39A4               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15772  005400  0B07               	andlw	7
 15773  005402  0102               	movlb	2	; () banked
 15774  005404  6FF4               	movwf	(_loRa+239)& (0+255),b
 15775                           
 15776                           ; BSR set to: 2
 15777                           ;lorawan_eu.c: 772: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 15778  005406  C0A0  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 15779  00540A  C0A1  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 15780  00540E  C0A2  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 15781  005412  C0A3  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 15782  005416  0100               	movlb	0	; () banked
 15783  005418  51A4               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15784  00541A  0B0F               	andlw	15
 15785  00541C  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 15786  00541E  EC1E  F053         	call	_UpdateReceiveWindow2Parameters	;wreg free
 15787                           
 15788                           ;lorawan_eu.c: 773: loRa.macStatus.secondReceiveWindowModified = 1;
 15789  005422  0102               	movlb	2	; () banked
 15790  005424  8F08               	bsf	(_loRa+3)& (0+255),7,b
 15791  005426                     l19690:
 15792                           
 15793                           ; BSR set to: 2
 15794                           ;lorawan_eu.c: 774: };lorawan_eu.c: 776: return ptr;
 15795  005426  C09E  F09E         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 15796  00542A  C09F  F09F         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 15797                           
 15798                           ; BSR set to: 2
 15799  00542E  0012               	return		;funcret
 15800  005430                     __end_of_ExecuteRxParamSetupReq:
 15801                           	opt callstack 0
 15802                           
 15803 ;; *************** function _ValidateRxOffset *****************
 15804 ;; Defined at:
 15805 ;;		line 1077 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15806 ;; Parameters:    Size  Location     Type
 15807 ;;  rxOffset        1    wreg     unsigned char 
 15808 ;; Auto vars:     Size  Location     Type
 15809 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 15810 ;;  result          1    1[BANK0 ] enum E6118
 15811 ;; Return value:  Size  Location     Type
 15812 ;;                  1    wreg      enum E6118
 15813 ;; Registers used:
 15814 ;;		wreg, status,2, status,0
 15815 ;; Tracked objects:
 15816 ;;		On entry : 0/0
 15817 ;;		On exit  : 0/0
 15818 ;;		Unchanged: 0/0
 15819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15821 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15823 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15824 ;;Total ram usage:        2 bytes
 15825 ;; Hardware stack levels used:    1
 15826 ;; Hardware stack levels required when called:    7
 15827 ;; This function calls:
 15828 ;;		Nothing
 15829 ;; This function is called by:
 15830 ;;		_ExecuteRxParamSetupReq
 15831 ;; This function uses a non-reentrant model
 15832 ;;
 15833                           
 15834                           	psect	text63
 15835  00A5F4                     __ptext63:
 15836                           	opt callstack 0
 15837  00A5F4                     _ValidateRxOffset:
 15838                           	opt callstack 15
 15839                           
 15840                           ; BSR set to: 2
 15841                           ;incstack = 0
 15842                           ;ValidateRxOffset@rxOffset stored from wreg
 15843  00A5F4  0100               	movlb	0	; () banked
 15844  00A5F6  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 15845                           
 15846                           ;lorawan_eu.c: 1079: LorawanError_t result = OK;
 15847  00A5F8  0E00               	movlw	0
 15848  00A5FA  0100               	movlb	0	; () banked
 15849  00A5FC  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;lorawan_eu.c: 1081: if (rxOffset > 5)
 15853  00A5FE  0E05               	movlw	5
 15854  00A600  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 15855  00A602  D002               	goto	l1241
 15856                           
 15857                           ; BSR set to: 0
 15858                           ;lorawan_eu.c: 1082: {;lorawan_eu.c: 1083: result = INVALID_PARAMETER;
 15859  00A604  0E03               	movlw	3
 15860  00A606  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 15861  00A608                     l1241:
 15862                           
 15863                           ; BSR set to: 0
 15864                           ;lorawan_eu.c: 1084: };lorawan_eu.c: 1086: return result;
 15865  00A608  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 15866                           
 15867                           ; BSR set to: 0
 15868  00A60A  0012               	return		;funcret
 15869  00A60C                     __end_of_ValidateRxOffset:
 15870                           	opt callstack 0
 15871                           
 15872 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 15873 ;; Defined at:
 15874 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15875 ;; Parameters:    Size  Location     Type
 15876 ;;  frequency       4    0[BANK0 ] unsigned long 
 15877 ;;  dataRate        1    4[BANK0 ] unsigned char 
 15878 ;; Auto vars:     Size  Location     Type
 15879 ;;		None
 15880 ;; Return value:  Size  Location     Type
 15881 ;;                  1    wreg      void 
 15882 ;; Registers used:
 15883 ;;		None
 15884 ;; Tracked objects:
 15885 ;;		On entry : 0/0
 15886 ;;		On exit  : 0/0
 15887 ;;		Unchanged: 0/0
 15888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15889 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15892 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15893 ;;Total ram usage:        5 bytes
 15894 ;; Hardware stack levels used:    1
 15895 ;; Hardware stack levels required when called:    7
 15896 ;; This function calls:
 15897 ;;		Nothing
 15898 ;; This function is called by:
 15899 ;;		_ExecuteRxParamSetupReq
 15900 ;;		_LORAWAN_SetReceiveWindow2Parameters
 15901 ;; This function uses a non-reentrant model
 15902 ;;
 15903                           
 15904                           	psect	text64
 15905  00A63C                     __ptext64:
 15906                           	opt callstack 0
 15907  00A63C                     _UpdateReceiveWindow2Parameters:
 15908                           	opt callstack 15
 15909                           
 15910                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 15911                           
 15912                           ; BSR set to: 0
 15913                           ;incstack = 0
 15914  00A63C  C064  F221         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 15915                           
 15916                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 15917  00A640  C060  F21D         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 15918  00A644  C061  F21E         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 15919  00A648  C062  F21F         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 15920  00A64C  C063  F220         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 15921  00A650  0012               	return		;funcret
 15922  00A652                     __end_of_UpdateReceiveWindow2Parameters:
 15923                           	opt callstack 0
 15924                           
 15925 ;; *************** function _ExecuteNewChannel *****************
 15926 ;; Defined at:
 15927 ;;		line 678 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15928 ;; Parameters:    Size  Location     Type
 15929 ;;  ptr             2   62[BANK0 ] PTR unsigned char 
 15930 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15931 ;; Auto vars:     Size  Location     Type
 15932 ;;  frequency       4   65[BANK0 ] unsigned long 
 15933 ;;  channelIndex    1   69[BANK0 ] unsigned char 
 15934 ;;  drRange         1   64[BANK0 ] struct .
 15935 ;; Return value:  Size  Location     Type
 15936 ;;                  2   62[BANK0 ] PTR unsigned char 
 15937 ;; Registers used:
 15938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15939 ;; Tracked objects:
 15940 ;;		On entry : 0/0
 15941 ;;		On exit  : 0/0
 15942 ;;		Unchanged: 0/0
 15943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15944 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15945 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15947 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15948 ;;Total ram usage:        8 bytes
 15949 ;; Hardware stack levels used:    1
 15950 ;; Hardware stack levels required when called:    9
 15951 ;; This function calls:
 15952 ;;		_LORAWAN_SetChannelIdStatus
 15953 ;;		_UpdateChannelIdStatus
 15954 ;;		_UpdateDataRange
 15955 ;;		_UpdateDutyCycle
 15956 ;;		_UpdateFrequency
 15957 ;;		_ValidateChannelId
 15958 ;;		_ValidateDataRange
 15959 ;;		_ValidateFrequency
 15960 ;;		___lmul
 15961 ;; This function is called by:
 15962 ;;		_MacExecuteCommands
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           	psect	text65
 15967  00444C                     __ptext65:
 15968                           	opt callstack 0
 15969  00444C                     _ExecuteNewChannel:
 15970                           	opt callstack 14
 15971                           
 15972                           ;lorawan_eu.c: 684: channelIndex = *(ptr++);
 15973                           
 15974                           ;incstack = 0
 15975  00444C  C09E  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15976  004450  C09F  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15977  004454  50DF               	movf	indf2,w,c
 15978  004456  0100               	movlb	0	; () banked
 15979  004458  6FA5               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 15980                           
 15981                           ; BSR set to: 0
 15982  00445A  4B9E               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15983  00445C  2B9F               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15984                           
 15985                           ; BSR set to: 0
 15986                           ;lorawan_eu.c: 686: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15987  00445E  C09E  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15988  004462  C09F  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15989  004466  0EFF               	movlw	255
 15990  004468  14DE               	andwf	postinc2,w,c
 15991  00446A  6FA1               	movwf	ExecuteNewChannel@frequency& (0+255),b
 15992  00446C  0EFF               	movlw	255
 15993  00446E  14DE               	andwf	postinc2,w,c
 15994  004470  6FA2               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 15995  004472  0EFF               	movlw	255
 15996  004474  14DE               	andwf	postinc2,w,c
 15997  004476  6FA3               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 15998  004478  0E00               	movlw	0
 15999  00447A  14DE               	andwf	postinc2,w,c
 16000  00447C  6FA4               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 16001                           
 16002                           ; BSR set to: 0
 16003                           ;lorawan_eu.c: 687: frequency = frequency * 100;
 16004  00447E  C0A1  F092         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 16005  004482  C0A2  F093         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 16006  004486  C0A3  F094         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 16007  00448A  C0A4  F095         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 16008  00448E  0E64               	movlw	100
 16009  004490  6F96               	movwf	___lmul@multiplicand& (0+255),b
 16010  004492  0E00               	movlw	0
 16011  004494  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16012  004496  0E00               	movlw	0
 16013  004498  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16014  00449A  0E00               	movlw	0
 16015  00449C  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16016  00449E  ECD6  F048         	call	___lmul	;wreg free
 16017  0044A2  C092  F0A1         	movff	?___lmul,ExecuteNewChannel@frequency
 16018  0044A6  C093  F0A2         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 16019  0044AA  C094  F0A3         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 16020  0044AE  C095  F0A4         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 16021                           
 16022                           ;lorawan_eu.c: 688: ptr = ptr + 3;
 16023  0044B2  0E03               	movlw	3
 16024  0044B4  0100               	movlb	0	; () banked
 16025  0044B6  259E               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 16026  0044B8  6F9E               	movwf	ExecuteNewChannel@ptr& (0+255),b
 16027  0044BA  0E00               	movlw	0
 16028  0044BC  219F               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 16029  0044BE  6F9F               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 16030                           
 16031                           ; BSR set to: 0
 16032                           ;lorawan_eu.c: 690: drRange.value = *(ptr++);
 16033  0044C0  C09E  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16034  0044C4  C09F  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16035  0044C8  50DF               	movf	indf2,w,c
 16036  0044CA  6FA0               	movwf	ExecuteNewChannel@drRange& (0+255),b
 16037                           
 16038                           ; BSR set to: 0
 16039  0044CC  4B9E               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 16040  0044CE  2B9F               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;lorawan_eu.c: 692: if (ValidateChannelId (channelIndex, 0) == OK)
 16044  0044D0  0E00               	movlw	0
 16045  0044D2  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16046  0044D4  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16047  0044D6  EC1C  F051         	call	_ValidateChannelId
 16048  0044DA  0900               	iorlw	0
 16049  0044DC  A4D8               	btfss	status,2,c
 16050  0044DE  D02F               	goto	l1128
 16051                           
 16052                           ;lorawan_eu.c: 693: {;lorawan_eu.c: 694: if ( (ValidateFrequency (frequency) == OK) || (
      +                          frequency == 0) )
 16053  0044E0  C0A1  F060         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 16054  0044E4  C0A2  F061         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 16055  0044E8  C0A3  F062         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 16056  0044EC  C0A4  F063         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 16057  0044F0  ECB4  F045         	call	_ValidateFrequency	;wreg free
 16058  0044F4  0900               	iorlw	0
 16059  0044F6  B4D8               	btfsc	status,2,c
 16060  0044F8  D007               	goto	u21220
 16061  0044FA  0100               	movlb	0	; () banked
 16062  0044FC  51A1               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16063  0044FE  11A2               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16064  004500  11A3               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16065  004502  11A4               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16066  004504  A4D8               	btfss	status,2,c
 16067  004506  D00A               	goto	l19630
 16068  004508                     u21220:
 16069                           
 16070                           ;lorawan_eu.c: 695: {;lorawan_eu.c: 696: loRa.macCommands[loRa.crtMacCmdIndex].channelFr
      +                          equencyAck = 1;
 16071  004508  0102               	movlb	2	; () banked
 16072  00450A  51AC               	movf	(_loRa+167)& (0+255),w,b
 16073  00450C  0D02               	mullw	2
 16074  00450E  0EAE               	movlw	low (_loRa+169)
 16075  004510  24F3               	addwf	prodl,w,c
 16076  004512  6ED9               	movwf	fsr2l,c
 16077  004514  0E02               	movlw	high (_loRa+169)
 16078  004516  20F4               	addwfc	prodh,w,c
 16079  004518  6EDA               	movwf	fsr2h,c
 16080  00451A  8EDF               	bsf	indf2,7,c
 16081  00451C                     l19630:
 16082                           
 16083                           ;lorawan_eu.c: 697: };lorawan_eu.c: 699: if (ValidateDataRange (drRange.value) == OK)
 16084  00451C  0100               	movlb	0	; () banked
 16085  00451E  51A0               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 16086  004520  ECF4  F04B         	call	_ValidateDataRange
 16087  004524  0900               	iorlw	0
 16088  004526  A4D8               	btfss	status,2,c
 16089  004528  D00A               	goto	l1128
 16090                           
 16091                           ;lorawan_eu.c: 700: {;lorawan_eu.c: 701: loRa.macCommands[loRa.crtMacCmdIndex].dataRateR
      +                          angeAck = 1;
 16092  00452A  0102               	movlb	2	; () banked
 16093  00452C  51AC               	movf	(_loRa+167)& (0+255),w,b
 16094  00452E  0D02               	mullw	2
 16095  004530  0EAE               	movlw	low (_loRa+169)
 16096  004532  24F3               	addwf	prodl,w,c
 16097  004534  6ED9               	movwf	fsr2l,c
 16098  004536  0E02               	movlw	high (_loRa+169)
 16099  004538  20F4               	addwfc	prodh,w,c
 16100  00453A  6EDA               	movwf	fsr2h,c
 16101  00453C  8CDF               	bsf	indf2,6,c
 16102  00453E                     l1128:
 16103                           
 16104                           ;lorawan_eu.c: 702: };lorawan_eu.c: 703: };lorawan_eu.c: 705: if ( (loRa.macCommands[loR
      +                          a.crtMacCmdIndex].channelFrequencyAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].da
      +                          taRateRangeAck == 1) )
 16105  00453E  0102               	movlb	2	; () banked
 16106  004540  51AC               	movf	(_loRa+167)& (0+255),w,b
 16107  004542  0D02               	mullw	2
 16108  004544  0EAE               	movlw	low (_loRa+169)
 16109  004546  24F3               	addwf	prodl,w,c
 16110  004548  6ED9               	movwf	fsr2l,c
 16111  00454A  0E02               	movlw	high (_loRa+169)
 16112  00454C  20F4               	addwfc	prodh,w,c
 16113  00454E  6EDA               	movwf	fsr2h,c
 16114  004550  AEDF               	btfss	indf2,7,c
 16115  004552  D06D               	goto	l19652
 16116                           
 16117                           ; BSR set to: 2
 16118  004554  51AC               	movf	(_loRa+167)& (0+255),w,b
 16119  004556  0D02               	mullw	2
 16120  004558  0EAE               	movlw	low (_loRa+169)
 16121  00455A  24F3               	addwf	prodl,w,c
 16122  00455C  6ED9               	movwf	fsr2l,c
 16123  00455E  0E02               	movlw	high (_loRa+169)
 16124  004560  20F4               	addwfc	prodh,w,c
 16125  004562  6EDA               	movwf	fsr2h,c
 16126  004564  ACDF               	btfss	indf2,6,c
 16127  004566  D063               	goto	l19652
 16128                           
 16129                           ; BSR set to: 2
 16130                           ;lorawan_eu.c: 706: {;lorawan_eu.c: 707: if (loRa.lastUsedChannelIndex < 16)
 16131  004568  0E10               	movlw	16
 16132  00456A  61DF               	cpfslt	(_loRa+218)& (0+255),b
 16133  00456C  D02D               	goto	l19644
 16134                           
 16135                           ; BSR set to: 2
 16136                           ;lorawan_eu.c: 708: {;lorawan_eu.c: 709: if (frequency != 0)
 16137  00456E  0100               	movlb	0	; () banked
 16138  004570  51A1               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16139  004572  11A2               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16140  004574  11A3               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16141  004576  11A4               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16142  004578  B4D8               	btfsc	status,2,c
 16143  00457A  D020               	goto	l19642
 16144                           
 16145                           ; BSR set to: 0
 16146                           ;lorawan_eu.c: 710: {;lorawan_eu.c: 711: UpdateFrequency (channelIndex, frequency);
 16147  00457C  C0A1  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16148  004580  C0A2  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16149  004584  C0A3  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16150  004588  C0A4  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16151  00458C  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16152  00458E  ECDE  F04D         	call	_UpdateFrequency
 16153                           
 16154                           ;lorawan_eu.c: 712: UpdateDataRange (channelIndex, drRange.value);
 16155  004592  C0A0  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16156  004596  0100               	movlb	0	; () banked
 16157  004598  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16158  00459A  EC8F  F032         	call	_UpdateDataRange
 16159                           
 16160                           ;lorawan_eu.c: 713: UpdateDutyCycle (channelIndex, 302);
 16161  00459E  0E01               	movlw	1
 16162  0045A0  0100               	movlb	0	; () banked
 16163  0045A2  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16164  0045A4  0E2E               	movlw	46
 16165  0045A6  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16166  0045A8  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16167  0045AA  EC32  F04E         	call	_UpdateDutyCycle
 16168                           
 16169                           ;lorawan_eu.c: 714: UpdateChannelIdStatus (channelIndex, 1);
 16170  0045AE  0E01               	movlw	1
 16171  0045B0  0100               	movlb	0	; () banked
 16172  0045B2  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16173  0045B4  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16174  0045B6  ECE8  F030         	call	_UpdateChannelIdStatus
 16175                           
 16176                           ;lorawan_eu.c: 715: }
 16177  0045BA  D037               	goto	l19650
 16178  0045BC                     l19642:
 16179                           
 16180                           ; BSR set to: 0
 16181                           ;lorawan_eu.c: 716: else;lorawan_eu.c: 717: {;lorawan_eu.c: 718: LORAWAN_SetChannelIdSta
      +                          tus (channelIndex, 0);
 16182  0045BC  0E00               	movlw	0
 16183  0045BE  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16184  0045C0  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16185  0045C2  EC83  F04D         	call	_LORAWAN_SetChannelIdStatus
 16186  0045C6  D031               	goto	l19650
 16187  0045C8                     l19644:
 16188                           
 16189                           ; BSR set to: 2
 16190                           ;lorawan_eu.c: 721: else;lorawan_eu.c: 722: {;lorawan_eu.c: 723: if (frequency != 0)
 16191  0045C8  0100               	movlb	0	; () banked
 16192  0045CA  51A1               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16193  0045CC  11A2               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16194  0045CE  11A3               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16195  0045D0  11A4               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16196  0045D2  B4D8               	btfsc	status,2,c
 16197  0045D4  D024               	goto	l19648
 16198                           
 16199                           ; BSR set to: 0
 16200                           ;lorawan_eu.c: 724: {;lorawan_eu.c: 725: UpdateFrequency (channelIndex + 16, frequency);
 16201  0045D6  C0A1  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16202  0045DA  C0A2  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16203  0045DE  C0A3  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16204  0045E2  C0A4  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16205  0045E6  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16206  0045E8  0F10               	addlw	16
 16207  0045EA  ECDE  F04D         	call	_UpdateFrequency
 16208                           
 16209                           ;lorawan_eu.c: 726: UpdateDataRange (channelIndex + 16, drRange.value);
 16210  0045EE  C0A0  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16211  0045F2  0100               	movlb	0	; () banked
 16212  0045F4  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16213  0045F6  0F10               	addlw	16
 16214  0045F8  EC8F  F032         	call	_UpdateDataRange
 16215                           
 16216                           ;lorawan_eu.c: 727: UpdateDutyCycle (channelIndex + 16, 302);
 16217  0045FC  0E01               	movlw	1
 16218  0045FE  0100               	movlb	0	; () banked
 16219  004600  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16220  004602  0E2E               	movlw	46
 16221  004604  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16222  004606  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16223  004608  0F10               	addlw	16
 16224  00460A  EC32  F04E         	call	_UpdateDutyCycle
 16225                           
 16226                           ;lorawan_eu.c: 728: UpdateChannelIdStatus (channelIndex + 16, 1);
 16227  00460E  0E01               	movlw	1
 16228  004610  0100               	movlb	0	; () banked
 16229  004612  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16230  004614  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16231  004616  0F10               	addlw	16
 16232  004618  ECE8  F030         	call	_UpdateChannelIdStatus
 16233                           
 16234                           ;lorawan_eu.c: 729: }
 16235  00461C  D006               	goto	l19650
 16236  00461E                     l19648:
 16237                           
 16238                           ; BSR set to: 0
 16239                           ;lorawan_eu.c: 730: else;lorawan_eu.c: 731: {;lorawan_eu.c: 732: LORAWAN_SetChannelIdSta
      +                          tus (channelIndex + 16, 0);
 16240  00461E  0E00               	movlw	0
 16241  004620  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16242  004622  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16243  004624  0F10               	addlw	16
 16244  004626  EC83  F04D         	call	_LORAWAN_SetChannelIdStatus
 16245  00462A                     l19650:
 16246                           
 16247                           ;lorawan_eu.c: 733: };lorawan_eu.c: 734: };lorawan_eu.c: 736: loRa.macStatus.channelsMod
      +                          ified = 1;
 16248  00462A  0102               	movlb	2	; () banked
 16249  00462C  8708               	bsf	(_loRa+3)& (0+255),3,b
 16250  00462E                     l19652:
 16251                           
 16252                           ; BSR set to: 2
 16253                           ;lorawan_eu.c: 737: };lorawan_eu.c: 738: return ptr;
 16254  00462E  C09E  F09E         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 16255  004632  C09F  F09F         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 16256                           
 16257                           ; BSR set to: 2
 16258  004636  0012               	return		;funcret
 16259  004638                     __end_of_ExecuteNewChannel:
 16260                           	opt callstack 0
 16261                           
 16262 ;; *************** function _ValidateFrequency *****************
 16263 ;; Defined at:
 16264 ;;		line 1089 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16265 ;; Parameters:    Size  Location     Type
 16266 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 16267 ;; Auto vars:     Size  Location     Type
 16268 ;;  result          1    4[BANK0 ] enum E6118
 16269 ;; Return value:  Size  Location     Type
 16270 ;;                  1    wreg      enum E6118
 16271 ;; Registers used:
 16272 ;;		wreg, status,2, status,0
 16273 ;; Tracked objects:
 16274 ;;		On entry : 0/0
 16275 ;;		On exit  : 0/0
 16276 ;;		Unchanged: 0/0
 16277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16279 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16281 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16282 ;;Total ram usage:        5 bytes
 16283 ;; Hardware stack levels used:    1
 16284 ;; Hardware stack levels required when called:    7
 16285 ;; This function calls:
 16286 ;;		Nothing
 16287 ;; This function is called by:
 16288 ;;		_ExecuteNewChannel
 16289 ;;		_ExecuteRxParamSetupReq
 16290 ;;		_UpdateCfList
 16291 ;;		_LORAWAN_SetReceiveWindow2Parameters
 16292 ;;		_LORAWAN_SetFrequency
 16293 ;; This function uses a non-reentrant model
 16294 ;;
 16295                           
 16296                           	psect	text66
 16297  008B68                     __ptext66:
 16298                           	opt callstack 0
 16299  008B68                     _ValidateFrequency:
 16300                           	opt callstack 16
 16301                           
 16302                           ;lorawan_eu.c: 1091: LorawanError_t result = OK;
 16303                           
 16304                           ; BSR set to: 2
 16305                           ;incstack = 0
 16306  008B68  0E00               	movlw	0
 16307  008B6A  0100               	movlb	0	; () banked
 16308  008B6C  6F64               	movwf	ValidateFrequency@result& (0+255),b
 16309                           
 16310                           ;lorawan_eu.c: 1093: if(ISM_EU868 == loRa.ismBand)
 16311  008B6E  0102               	movlb	2	; () banked
 16312  008B70  51A9               	movf	(_loRa+164)& (0+255),w,b
 16313  008B72  A4D8               	btfss	status,2,c
 16314  008B74  D018               	goto	l18978
 16315                           
 16316                           ; BSR set to: 2
 16317                           ;lorawan_eu.c: 1094: {;lorawan_eu.c: 1095: if ( (frequencyNew > 870000000) || (frequency
      +                          New < 863000000) )
 16318  008B76  0E81               	movlw	129
 16319  008B78  0100               	movlb	0	; () banked
 16320  008B7A  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16321  008B7C  0E25               	movlw	37
 16322  008B7E  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16323  008B80  0EDB               	movlw	219
 16324  008B82  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16325  008B84  0E33               	movlw	51
 16326  008B86  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16327  008B88  B0D8               	btfsc	status,0,c
 16328  008B8A  D00A               	goto	u20230
 16329                           
 16330                           ; BSR set to: 0
 16331  008B8C  0EC0               	movlw	192
 16332  008B8E  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16333  008B90  0E55               	movlw	85
 16334  008B92  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16335  008B94  0E70               	movlw	112
 16336  008B96  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16337  008B98  0E33               	movlw	51
 16338  008B9A  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16339  008B9C  B0D8               	btfsc	status,0,c
 16340  008B9E  D018               	goto	l1249
 16341  008BA0                     u20230:
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;lorawan_eu.c: 1096: {;lorawan_eu.c: 1097: result = INVALID_PARAMETER ;
 16345  008BA0  0E03               	movlw	3
 16346  008BA2  6F64               	movwf	ValidateFrequency@result& (0+255),b
 16347  008BA4  D015               	goto	l1249
 16348  008BA6                     l18978:
 16349                           
 16350                           ; BSR set to: 2
 16351                           ;lorawan_eu.c: 1100: else;lorawan_eu.c: 1101: {;lorawan_eu.c: 1102: if ( (frequencyNew >
      +                           434790000) || (frequencyNew < 433050000) )
 16352  008BA6  0E71               	movlw	113
 16353  008BA8  0100               	movlb	0	; () banked
 16354  008BAA  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16355  008BAC  0E5E               	movlw	94
 16356  008BAE  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16357  008BB0  0EEA               	movlw	234
 16358  008BB2  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16359  008BB4  0E19               	movlw	25
 16360  008BB6  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16361  008BB8  B0D8               	btfsc	status,0,c
 16362  008BBA  D7F2               	goto	u20230
 16363                           
 16364                           ; BSR set to: 0
 16365  008BBC  0E90               	movlw	144
 16366  008BBE  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16367  008BC0  0ED1               	movlw	209
 16368  008BC2  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16369  008BC4  0ECF               	movlw	207
 16370  008BC6  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16371  008BC8  0E19               	movlw	25
 16372  008BCA  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16373  008BCC  A0D8               	btfss	status,0,c
 16374  008BCE  D7E8               	goto	u20230
 16375  008BD0                     l1249:
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;lorawan_eu.c: 1105: };lorawan_eu.c: 1106: };lorawan_eu.c: 1108: return result;
 16379  008BD0  5164               	movf	ValidateFrequency@result& (0+255),w,b
 16380                           
 16381                           ; BSR set to: 0
 16382  008BD2  0012               	return		;funcret
 16383  008BD4                     __end_of_ValidateFrequency:
 16384                           	opt callstack 0
 16385                           
 16386 ;; *************** function _ValidateDataRange *****************
 16387 ;; Defined at:
 16388 ;;		line 1111 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16389 ;; Parameters:    Size  Location     Type
 16390 ;;  dataRangeNew    1    wreg     unsigned char 
 16391 ;; Auto vars:     Size  Location     Type
 16392 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 16393 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 16394 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 16395 ;;  result          1    2[BANK0 ] enum E6118
 16396 ;; Return value:  Size  Location     Type
 16397 ;;                  1    wreg      enum E6118
 16398 ;; Registers used:
 16399 ;;		wreg, status,2, status,0, cstack
 16400 ;; Tracked objects:
 16401 ;;		On entry : 0/0
 16402 ;;		On exit  : 0/0
 16403 ;;		Unchanged: 0/0
 16404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16406 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16408 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16409 ;;Total ram usage:        4 bytes
 16410 ;; Hardware stack levels used:    1
 16411 ;; Hardware stack levels required when called:    8
 16412 ;; This function calls:
 16413 ;;		_ValidateDataRate
 16414 ;; This function is called by:
 16415 ;;		_ExecuteNewChannel
 16416 ;;		_LORAWAN_SetDataRange
 16417 ;; This function uses a non-reentrant model
 16418 ;;
 16419                           
 16420                           	psect	text67
 16421  0097E8                     __ptext67:
 16422                           	opt callstack 0
 16423  0097E8                     _ValidateDataRange:
 16424                           	opt callstack 14
 16425                           
 16426                           ; BSR set to: 0
 16427                           ;incstack = 0
 16428                           ;ValidateDataRange@dataRangeNew stored from wreg
 16429  0097E8  0100               	movlb	0	; () banked
 16430  0097EA  6F63               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 16431                           
 16432                           ;lorawan_eu.c: 1113: LorawanError_t result = OK;
 16433  0097EC  0E00               	movlw	0
 16434  0097EE  0100               	movlb	0	; () banked
 16435  0097F0  6F62               	movwf	ValidateDataRange@result& (0+255),b
 16436                           
 16437                           ; BSR set to: 0
 16438                           ;lorawan_eu.c: 1114: uint8_t dataRateMax, dataRateMin;;lorawan_eu.c: 1116: dataRateMin =
      +                           dataRangeNew & 0x0F;
 16439  0097F2  5163               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16440  0097F4  0B0F               	andlw	15
 16441  0097F6  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 16442                           
 16443                           ; BSR set to: 0
 16444                           ;lorawan_eu.c: 1117: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 16445  0097F8  3963               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16446  0097FA  0B0F               	andlw	15
 16447  0097FC  0B0F               	andlw	15
 16448  0097FE  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 16449                           
 16450                           ; BSR set to: 0
 16451                           ;lorawan_eu.c: 1119: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 16452  009800  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 16453  009802  EC06  F053         	call	_ValidateDataRate
 16454  009806  0900               	iorlw	0
 16455  009808  A4D8               	btfss	status,2,c
 16456  00980A  D00C               	goto	u20280
 16457  00980C  0100               	movlb	0	; () banked
 16458  00980E  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16459  009810  EC06  F053         	call	_ValidateDataRate
 16460  009814  0900               	iorlw	0
 16461  009816  A4D8               	btfss	status,2,c
 16462  009818  D005               	goto	u20280
 16463  00981A  0100               	movlb	0	; () banked
 16464  00981C  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16465  00981E  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 16466  009820  B0D8               	btfsc	status,0,c
 16467  009822  D003               	goto	l1256
 16468  009824                     u20280:
 16469                           
 16470                           ;lorawan_eu.c: 1120: {;lorawan_eu.c: 1121: result = INVALID_PARAMETER;
 16471  009824  0E03               	movlw	3
 16472  009826  0100               	movlb	0	; () banked
 16473  009828  6F62               	movwf	ValidateDataRange@result& (0+255),b
 16474  00982A                     l1256:
 16475                           
 16476                           ; BSR set to: 0
 16477                           ;lorawan_eu.c: 1122: };lorawan_eu.c: 1123: return result;
 16478  00982A  5162               	movf	ValidateDataRange@result& (0+255),w,b
 16479                           
 16480                           ; BSR set to: 0
 16481  00982C  0012               	return		;funcret
 16482  00982E                     __end_of_ValidateDataRange:
 16483                           	opt callstack 0
 16484                           
 16485 ;; *************** function _UpdateFrequency *****************
 16486 ;; Defined at:
 16487 ;;		line 1155 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16488 ;; Parameters:    Size  Location     Type
 16489 ;;  channelId       1    wreg     unsigned char 
 16490 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 16491 ;; Auto vars:     Size  Location     Type
 16492 ;;  channelId       1    4[BANK0 ] unsigned char 
 16493 ;; Return value:  Size  Location     Type
 16494 ;;                  1    wreg      void 
 16495 ;; Registers used:
 16496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16497 ;; Tracked objects:
 16498 ;;		On entry : 0/0
 16499 ;;		On exit  : 0/0
 16500 ;;		Unchanged: 0/0
 16501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16502 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16505 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16506 ;;Total ram usage:        5 bytes
 16507 ;; Hardware stack levels used:    1
 16508 ;; Hardware stack levels required when called:    7
 16509 ;; This function calls:
 16510 ;;		Nothing
 16511 ;; This function is called by:
 16512 ;;		_ExecuteNewChannel
 16513 ;;		_LORAWAN_SetFrequency
 16514 ;; This function uses a non-reentrant model
 16515 ;;
 16516                           
 16517                           	psect	text68
 16518  009BBC                     __ptext68:
 16519                           	opt callstack 0
 16520  009BBC                     _UpdateFrequency:
 16521                           	opt callstack 15
 16522                           
 16523                           ; BSR set to: 0
 16524                           ;incstack = 0
 16525                           ;UpdateFrequency@channelId stored from wreg
 16526  009BBC  0100               	movlb	0	; () banked
 16527  009BBE  6F64               	movwf	UpdateFrequency@channelId& (0+255),b
 16528                           
 16529                           ;lorawan_eu.c: 1157: Channels[channelId].frequency = frequencyNew;
 16530  009BC0  0100               	movlb	0	; () banked
 16531  009BC2  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 16532  009BC4  0D0E               	mullw	14
 16533  009BC6  0E14               	movlw	low _Channels
 16534  009BC8  24F3               	addwf	prodl,w,c
 16535  009BCA  6ED9               	movwf	fsr2l,c
 16536  009BCC  0E04               	movlw	high _Channels
 16537  009BCE  20F4               	addwfc	prodh,w,c
 16538  009BD0  6EDA               	movwf	fsr2h,c
 16539  009BD2  C060  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 16540  009BD6  C061  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 16541  009BDA  C062  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 16542  009BDE  C063  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 16543                           
 16544                           ;lorawan_eu.c: 1158: Channels[channelId].parametersDefined |= 0X01;
 16545  009BE2  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 16546  009BE4  0D0E               	mullw	14
 16547  009BE6  0E21               	movlw	low (_Channels+13)
 16548  009BE8  24F3               	addwf	prodl,w,c
 16549  009BEA  6ED9               	movwf	fsr2l,c
 16550  009BEC  0E04               	movlw	high (_Channels+13)
 16551  009BEE  20F4               	addwfc	prodh,w,c
 16552  009BF0  6EDA               	movwf	fsr2h,c
 16553  009BF2  0E00               	movlw	0
 16554  009BF4  80DB               	bsf	plusw2,0,c
 16555                           
 16556                           ; BSR set to: 0
 16557  009BF6  0012               	return		;funcret
 16558  009BF8                     __end_of_UpdateFrequency:
 16559                           	opt callstack 0
 16560                           
 16561 ;; *************** function _UpdateDutyCycle *****************
 16562 ;; Defined at:
 16563 ;;		line 1161 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16564 ;; Parameters:    Size  Location     Type
 16565 ;;  channelId       1    wreg     unsigned char 
 16566 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 16567 ;; Auto vars:     Size  Location     Type
 16568 ;;  channelId       1    2[BANK0 ] unsigned char 
 16569 ;; Return value:  Size  Location     Type
 16570 ;;                  1    wreg      void 
 16571 ;; Registers used:
 16572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16573 ;; Tracked objects:
 16574 ;;		On entry : 0/0
 16575 ;;		On exit  : 0/0
 16576 ;;		Unchanged: 0/0
 16577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16578 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16579 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16581 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16582 ;;Total ram usage:        3 bytes
 16583 ;; Hardware stack levels used:    1
 16584 ;; Hardware stack levels required when called:    7
 16585 ;; This function calls:
 16586 ;;		Nothing
 16587 ;; This function is called by:
 16588 ;;		_ExecuteNewChannel
 16589 ;;		_LORAWAN_SetDutyCycle
 16590 ;; This function uses a non-reentrant model
 16591 ;;
 16592                           
 16593                           	psect	text69
 16594  009C64                     __ptext69:
 16595                           	opt callstack 0
 16596  009C64                     _UpdateDutyCycle:
 16597                           	opt callstack 15
 16598                           
 16599                           ; BSR set to: 0
 16600                           ;incstack = 0
 16601                           ;UpdateDutyCycle@channelId stored from wreg
 16602  009C64  0100               	movlb	0	; () banked
 16603  009C66  6F62               	movwf	UpdateDutyCycle@channelId& (0+255),b
 16604                           
 16605                           ;lorawan_eu.c: 1163: Channels[channelId].dutyCycle = dutyCycleNew;
 16606  009C68  0100               	movlb	0	; () banked
 16607  009C6A  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16608  009C6C  0D0E               	mullw	14
 16609  009C6E  0E1A               	movlw	low (_Channels+6)
 16610  009C70  24F3               	addwf	prodl,w,c
 16611  009C72  6ED9               	movwf	fsr2l,c
 16612  009C74  0E04               	movlw	high (_Channels+6)
 16613  009C76  20F4               	addwfc	prodh,w,c
 16614  009C78  6EDA               	movwf	fsr2h,c
 16615  009C7A  C060  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 16616  009C7E  C061  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 16617                           
 16618                           ;lorawan_eu.c: 1164: Channels[channelId].parametersDefined |= 0x04;
 16619  009C82  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16620  009C84  0D0E               	mullw	14
 16621  009C86  0E21               	movlw	low (_Channels+13)
 16622  009C88  24F3               	addwf	prodl,w,c
 16623  009C8A  6ED9               	movwf	fsr2l,c
 16624  009C8C  0E04               	movlw	high (_Channels+13)
 16625  009C8E  20F4               	addwfc	prodh,w,c
 16626  009C90  6EDA               	movwf	fsr2h,c
 16627  009C92  0E00               	movlw	0
 16628  009C94  84DB               	bsf	plusw2,2,c
 16629                           
 16630                           ; BSR set to: 0
 16631  009C96  0012               	return		;funcret
 16632  009C98                     __end_of_UpdateDutyCycle:
 16633                           	opt callstack 0
 16634                           
 16635 ;; *************** function _UpdateDataRange *****************
 16636 ;; Defined at:
 16637 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;  channelId       1    wreg     unsigned char 
 16640 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 16641 ;; Auto vars:     Size  Location     Type
 16642 ;;  channelId       1    2[BANK0 ] unsigned char 
 16643 ;;  i               1    3[BANK0 ] unsigned char 
 16644 ;; Return value:  Size  Location     Type
 16645 ;;                  1    wreg      void 
 16646 ;; Registers used:
 16647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16648 ;; Tracked objects:
 16649 ;;		On entry : 0/0
 16650 ;;		On exit  : 0/0
 16651 ;;		Unchanged: 0/0
 16652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16653 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16654 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16656 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16657 ;;Total ram usage:        4 bytes
 16658 ;; Hardware stack levels used:    1
 16659 ;; Hardware stack levels required when called:    7
 16660 ;; This function calls:
 16661 ;;		Nothing
 16662 ;; This function is called by:
 16663 ;;		_ExecuteNewChannel
 16664 ;;		_LORAWAN_SetDataRange
 16665 ;; This function uses a non-reentrant model
 16666 ;;
 16667                           
 16668                           	psect	text70
 16669  00651E                     __ptext70:
 16670                           	opt callstack 0
 16671  00651E                     _UpdateDataRange:
 16672                           	opt callstack 15
 16673                           
 16674                           ; BSR set to: 0
 16675                           ;incstack = 0
 16676                           ;UpdateDataRange@channelId stored from wreg
 16677  00651E  0100               	movlb	0	; () banked
 16678  006520  6F62               	movwf	UpdateDataRange@channelId& (0+255),b
 16679                           
 16680                           ;lorawan_eu.c: 1012: uint8_t i;;lorawan_eu.c: 1015: loRa.minDataRate = 7;
 16681  006522  0E07               	movlw	7
 16682  006524  0102               	movlb	2	; () banked
 16683  006526  6FF0               	movwf	(_loRa+235)& (0+255),b
 16684                           
 16685                           ;lorawan_eu.c: 1016: loRa.maxDataRate = 0;
 16686  006528  0E00               	movlw	0
 16687  00652A  6FF1               	movwf	(_loRa+236)& (0+255),b
 16688                           
 16689                           ; BSR set to: 2
 16690                           ;lorawan_eu.c: 1018: Channels[channelId].dataRange.value = dataRangeNew;
 16691  00652C  0100               	movlb	0	; () banked
 16692  00652E  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16693  006530  0D0E               	mullw	14
 16694  006532  0E19               	movlw	low (_Channels+5)
 16695  006534  24F3               	addwf	prodl,w,c
 16696  006536  6ED9               	movwf	fsr2l,c
 16697  006538  0E04               	movlw	high (_Channels+5)
 16698  00653A  20F4               	addwfc	prodh,w,c
 16699  00653C  6EDA               	movwf	fsr2h,c
 16700  00653E  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 16701                           
 16702                           ; BSR set to: 0
 16703                           ;lorawan_eu.c: 1019: Channels[channelId].parametersDefined |= 0X02;
 16704  006542  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16705  006544  0D0E               	mullw	14
 16706  006546  0E21               	movlw	low (_Channels+13)
 16707  006548  24F3               	addwf	prodl,w,c
 16708  00654A  6ED9               	movwf	fsr2l,c
 16709  00654C  0E04               	movlw	high (_Channels+13)
 16710  00654E  20F4               	addwfc	prodh,w,c
 16711  006550  6EDA               	movwf	fsr2h,c
 16712  006552  0E00               	movlw	0
 16713  006554  82DB               	bsf	plusw2,1,c
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;lorawan_eu.c: 1020: for (i=0; i < loRa.maxChannels; i++)
 16717  006556  0E00               	movlw	0
 16718  006558  6F63               	movwf	UpdateDataRange@i& (0+255),b
 16719  00655A  D055               	goto	l19024
 16720  00655C                     l19012:
 16721                           
 16722                           ; BSR set to: 0
 16723                           ;lorawan_eu.c: 1021: {;lorawan_eu.c: 1022: if ( (Channels[i].dataRange.min < loRa.minDat
      +                          aRate) && (Channels[i].status == 1) )
 16724  00655C  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16725  00655E  0D0E               	mullw	14
 16726  006560  0E19               	movlw	low (_Channels+5)
 16727  006562  24F3               	addwf	prodl,w,c
 16728  006564  6ED9               	movwf	fsr2l,c
 16729  006566  0E04               	movlw	high (_Channels+5)
 16730  006568  20F4               	addwfc	prodh,w,c
 16731  00656A  6EDA               	movwf	fsr2h,c
 16732  00656C  0104               	movlb	4	; () banked
 16733  00656E  50DF               	movf	223,w,c
 16734  006570  0B0F               	andlw	15
 16735  006572  0100               	movlb	0	; () banked
 16736  006574  6F61               	movwf	??_UpdateDataRange& (0+255),b
 16737  006576  0102               	movlb	2	; () banked
 16738  006578  51F0               	movf	(_loRa+235)& (0+255),w,b
 16739  00657A  0100               	movlb	0	; () banked
 16740  00657C  5D61               	subwf	??_UpdateDataRange& (0+255),w,b
 16741  00657E  B0D8               	btfsc	status,0,c
 16742  006580  D018               	goto	l1222
 16743                           
 16744                           ; BSR set to: 0
 16745  006582  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16746  006584  0D0E               	mullw	14
 16747  006586  0E18               	movlw	low (_Channels+4)
 16748  006588  24F3               	addwf	prodl,w,c
 16749  00658A  6ED9               	movwf	fsr2l,c
 16750  00658C  0E04               	movlw	high (_Channels+4)
 16751  00658E  20F4               	addwfc	prodh,w,c
 16752  006590  6EDA               	movwf	fsr2h,c
 16753  006592  04DE               	decf	postinc2,w,c
 16754  006594  A4D8               	btfss	status,2,c
 16755  006596  D00D               	goto	l1222
 16756                           
 16757                           ; BSR set to: 0
 16758                           ;lorawan_eu.c: 1023: {;lorawan_eu.c: 1024: loRa.minDataRate = Channels[i].dataRange.min;
 16759  006598  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16760  00659A  0D0E               	mullw	14
 16761  00659C  0E19               	movlw	low (_Channels+5)
 16762  00659E  24F3               	addwf	prodl,w,c
 16763  0065A0  6ED9               	movwf	fsr2l,c
 16764  0065A2  0E04               	movlw	high (_Channels+5)
 16765  0065A4  20F4               	addwfc	prodh,w,c
 16766  0065A6  6EDA               	movwf	fsr2h,c
 16767  0065A8  0104               	movlb	4	; () banked
 16768  0065AA  50DF               	movf	223,w,c
 16769  0065AC  0B0F               	andlw	15
 16770  0065AE  0102               	movlb	2	; () banked
 16771  0065B0  6FF0               	movwf	(_loRa+235)& (0+255),b
 16772  0065B2                     l1222:
 16773                           
 16774                           ;lorawan_eu.c: 1025: };lorawan_eu.c: 1026: if ( (Channels[i].dataRange.max > loRa.maxDat
      +                          aRate) && (Channels[i].status == 1) )
 16775  0065B2  0100               	movlb	0	; () banked
 16776  0065B4  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16777  0065B6  0D0E               	mullw	14
 16778  0065B8  0E19               	movlw	low (_Channels+5)
 16779  0065BA  24F3               	addwf	prodl,w,c
 16780  0065BC  6ED9               	movwf	fsr2l,c
 16781  0065BE  0E04               	movlw	high (_Channels+5)
 16782  0065C0  20F4               	addwfc	prodh,w,c
 16783  0065C2  6EDA               	movwf	fsr2h,c
 16784  0065C4  0104               	movlb	4	; () banked
 16785  0065C6  38DF               	swapf	223,w,c
 16786  0065C8  0B0F               	andlw	15
 16787  0065CA  0102               	movlb	2	; () banked
 16788  0065CC  61F1               	cpfslt	(_loRa+236)& (0+255),b
 16789  0065CE  D019               	goto	l19022
 16790                           
 16791                           ; BSR set to: 2
 16792  0065D0  0100               	movlb	0	; () banked
 16793  0065D2  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16794  0065D4  0D0E               	mullw	14
 16795  0065D6  0E18               	movlw	low (_Channels+4)
 16796  0065D8  24F3               	addwf	prodl,w,c
 16797  0065DA  6ED9               	movwf	fsr2l,c
 16798  0065DC  0E04               	movlw	high (_Channels+4)
 16799  0065DE  20F4               	addwfc	prodh,w,c
 16800  0065E0  6EDA               	movwf	fsr2h,c
 16801  0065E2  04DE               	decf	postinc2,w,c
 16802  0065E4  A4D8               	btfss	status,2,c
 16803  0065E6  D00D               	goto	l19022
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;lorawan_eu.c: 1027: {;lorawan_eu.c: 1028: loRa.maxDataRate = Channels[i].dataRange.max;
 16807  0065E8  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16808  0065EA  0D0E               	mullw	14
 16809  0065EC  0E19               	movlw	low (_Channels+5)
 16810  0065EE  24F3               	addwf	prodl,w,c
 16811  0065F0  6ED9               	movwf	fsr2l,c
 16812  0065F2  0E04               	movlw	high (_Channels+5)
 16813  0065F4  20F4               	addwfc	prodh,w,c
 16814  0065F6  6EDA               	movwf	fsr2h,c
 16815  0065F8  0104               	movlb	4	; () banked
 16816  0065FA  38DF               	swapf	223,w,c
 16817  0065FC  0B0F               	andlw	15
 16818  0065FE  0102               	movlb	2	; () banked
 16819  006600  6FF1               	movwf	(_loRa+236)& (0+255),b
 16820  006602                     l19022:
 16821  006602  0100               	movlb	0	; () banked
 16822  006604  2B63               	incf	UpdateDataRange@i& (0+255),f,b
 16823  006606                     l19024:
 16824                           
 16825                           ; BSR set to: 0
 16826  006606  0102               	movlb	2	; () banked
 16827  006608  51F2               	movf	(_loRa+237)& (0+255),w,b
 16828  00660A  0100               	movlb	0	; () banked
 16829  00660C  5D63               	subwf	UpdateDataRange@i& (0+255),w,b
 16830  00660E  A0D8               	btfss	status,0,c
 16831  006610  D7A5               	goto	l19012
 16832                           
 16833                           ; BSR set to: 0
 16834                           ;lorawan_eu.c: 1029: };lorawan_eu.c: 1030: };lorawan_eu.c: 1032: if (loRa.currentDataRat
      +                          e > loRa.maxDataRate)
 16835  006612  0102               	movlb	2	; () banked
 16836  006614  51E4               	movf	(_loRa+223)& (0+255),w,b
 16837  006616  5DF1               	subwf	(_loRa+236)& (0+255),w,b
 16838  006618  A0D8               	btfss	status,0,c
 16839                           
 16840                           ; BSR set to: 2
 16841                           ;lorawan_eu.c: 1033: {;lorawan_eu.c: 1034: loRa.currentDataRate = loRa.maxDataRate;
 16842  00661A  C2F1  F2E4         	movff	_loRa+236,_loRa+223
 16843                           
 16844                           ; BSR set to: 2
 16845                           ;lorawan_eu.c: 1035: };lorawan_eu.c: 1037: if (loRa.currentDataRate < loRa.minDataRate)
 16846  00661E  51F0               	movf	(_loRa+235)& (0+255),w,b
 16847  006620  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 16848  006622  B0D8               	btfsc	status,0,c
 16849  006624  0012               	return	
 16850                           
 16851                           ; BSR set to: 2
 16852                           ;lorawan_eu.c: 1038: {;lorawan_eu.c: 1039: loRa.currentDataRate = loRa.minDataRate;
 16853  006626  C2F0  F2E4         	movff	_loRa+235,_loRa+223
 16854                           
 16855                           ; BSR set to: 2
 16856  00662A  0012               	return		;funcret
 16857  00662C                     __end_of_UpdateDataRange:
 16858                           	opt callstack 0
 16859                           
 16860 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 16861 ;; Defined at:
 16862 ;;		line 283 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;  channelId       1    wreg     unsigned char 
 16865 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16866 ;; Auto vars:     Size  Location     Type
 16867 ;;  channelId       1    6[BANK0 ] unsigned char 
 16868 ;;  result          1    0        enum E6118
 16869 ;; Return value:  Size  Location     Type
 16870 ;;                  1    wreg      enum E6118
 16871 ;; Registers used:
 16872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16873 ;; Tracked objects:
 16874 ;;		On entry : 0/0
 16875 ;;		On exit  : 0/0
 16876 ;;		Unchanged: 0/0
 16877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16878 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16881 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16882 ;;Total ram usage:        3 bytes
 16883 ;; Hardware stack levels used:    1
 16884 ;; Hardware stack levels required when called:    8
 16885 ;; This function calls:
 16886 ;;		_UpdateChannelIdStatus
 16887 ;;		_ValidateChannelId
 16888 ;; This function is called by:
 16889 ;;		_ExecuteNewChannel
 16890 ;;		_UpdateCfList
 16891 ;;		_resetAllChannels
 16892 ;; This function uses a non-reentrant model
 16893 ;;
 16894                           
 16895                           	psect	text71
 16896  009B06                     __ptext71:
 16897                           	opt callstack 0
 16898  009B06                     _LORAWAN_SetChannelIdStatus:
 16899                           	opt callstack 15
 16900                           
 16901                           ; BSR set to: 2
 16902                           ;incstack = 0
 16903                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 16904  009B06  0100               	movlb	0	; () banked
 16905  009B08  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 16906                           
 16907                           ;lorawan_eu.c: 288: if (ValidateChannelId (channelId, 1) != OK)
 16908  009B0A  0E01               	movlw	1
 16909  009B0C  0100               	movlb	0	; () banked
 16910  009B0E  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16911  009B10  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16912  009B12  EC1C  F051         	call	_ValidateChannelId
 16913  009B16  0900               	iorlw	0
 16914  009B18  A4D8               	btfss	status,2,c
 16915  009B1A  0012               	return	
 16916                           
 16917                           ;lorawan_eu.c: 293: else;lorawan_eu.c: 294: {;lorawan_eu.c: 295: if ( (Channels[channelI
      +                          d].parametersDefined & (0X01 | 0X02 | 0x04) ) == (0X01 | 0X02 | 0x04) )
 16918                           
 16919                           ;lorawan_eu.c: 291: }
 16920  009B1C  0100               	movlb	0	; () banked
 16921  009B1E  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16922  009B20  0D0E               	mullw	14
 16923  009B22  0E21               	movlw	low (_Channels+13)
 16924  009B24  24F3               	addwf	prodl,w,c
 16925  009B26  6ED9               	movwf	fsr2l,c
 16926  009B28  0E04               	movlw	high (_Channels+13)
 16927  009B2A  20F4               	addwfc	prodh,w,c
 16928  009B2C  6EDA               	movwf	fsr2h,c
 16929  009B2E  50DF               	movf	indf2,w,c
 16930  009B30  0B07               	andlw	7
 16931  009B32  0A07               	xorlw	7
 16932  009B34  A4D8               	btfss	status,2,c
 16933  009B36  0012               	return	
 16934                           
 16935                           ; BSR set to: 0
 16936                           ;lorawan_eu.c: 296: {;lorawan_eu.c: 297: UpdateChannelIdStatus (channelId, statusNew);
 16937  009B38  C064  F060         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 16938  009B3C  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16939  009B3E  ECE8  F030         	call	_UpdateChannelIdStatus
 16940                           
 16941                           ;lorawan_eu.c: 298: }
 16942  009B42  0012               	return		;funcret
 16943  009B44                     __end_of_LORAWAN_SetChannelIdStatus:
 16944                           	opt callstack 0
 16945                           
 16946 ;; *************** function _ValidateChannelId *****************
 16947 ;; Defined at:
 16948 ;;		line 1126 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16949 ;; Parameters:    Size  Location     Type
 16950 ;;  channelId       1    wreg     unsigned char 
 16951 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 16952 ;; Auto vars:     Size  Location     Type
 16953 ;;  channelId       1    2[BANK0 ] unsigned char 
 16954 ;;  result          1    1[BANK0 ] enum E6118
 16955 ;; Return value:  Size  Location     Type
 16956 ;;                  1    wreg      enum E6118
 16957 ;; Registers used:
 16958 ;;		wreg, status,2, status,0
 16959 ;; Tracked objects:
 16960 ;;		On entry : 0/0
 16961 ;;		On exit  : 0/0
 16962 ;;		Unchanged: 0/0
 16963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16964 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16965 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16967 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16968 ;;Total ram usage:        3 bytes
 16969 ;; Hardware stack levels used:    1
 16970 ;; Hardware stack levels required when called:    7
 16971 ;; This function calls:
 16972 ;;		Nothing
 16973 ;; This function is called by:
 16974 ;;		_LORAWAN_SetChannelIdStatus
 16975 ;;		_ExecuteNewChannel
 16976 ;;		_LORAWAN_SetDataRange
 16977 ;;		_LORAWAN_GetDataRange
 16978 ;;		_LORAWAN_GetChannelIdStatus
 16979 ;;		_LORAWAN_SetFrequency
 16980 ;;		_LORAWAN_SetDutyCycle
 16981 ;;		_LORAWAN_GetDutyCycle
 16982 ;; This function uses a non-reentrant model
 16983 ;;
 16984                           
 16985                           	psect	text72
 16986  00A238                     __ptext72:
 16987                           	opt callstack 0
 16988  00A238                     _ValidateChannelId:
 16989                           	opt callstack 15
 16990                           
 16991                           ;incstack = 0
 16992                           ;ValidateChannelId@channelId stored from wreg
 16993  00A238  0100               	movlb	0	; () banked
 16994  00A23A  6F62               	movwf	ValidateChannelId@channelId& (0+255),b
 16995                           
 16996                           ;lorawan_eu.c: 1128: LorawanError_t result = OK;
 16997  00A23C  0E00               	movlw	0
 16998  00A23E  0100               	movlb	0	; () banked
 16999  00A240  6F61               	movwf	ValidateChannelId@result& (0+255),b
 17000                           
 17001                           ; BSR set to: 0
 17002                           ;lorawan_eu.c: 1130: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 17003  00A242  0E10               	movlw	16
 17004  00A244  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 17005  00A246  D006               	goto	u19820
 17006                           
 17007                           ; BSR set to: 0
 17008  00A248  5160               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 17009  00A24A  A4D8               	btfss	status,2,c
 17010  00A24C  D005               	goto	l1262
 17011                           
 17012                           ; BSR set to: 0
 17013  00A24E  0E03               	movlw	3
 17014  00A250  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 17015  00A252  D002               	goto	l1262
 17016  00A254                     u19820:
 17017                           
 17018                           ; BSR set to: 0
 17019                           ;lorawan_eu.c: 1131: {;lorawan_eu.c: 1132: result = INVALID_PARAMETER ;
 17020  00A254  0E03               	movlw	3
 17021  00A256  6F61               	movwf	ValidateChannelId@result& (0+255),b
 17022  00A258                     l1262:
 17023                           
 17024                           ; BSR set to: 0
 17025                           ;lorawan_eu.c: 1133: };lorawan_eu.c: 1135: return result;
 17026  00A258  5161               	movf	ValidateChannelId@result& (0+255),w,b
 17027                           
 17028                           ; BSR set to: 0
 17029  00A25A  0012               	return		;funcret
 17030  00A25C                     __end_of_ValidateChannelId:
 17031                           	opt callstack 0
 17032                           
 17033 ;; *************** function _ExecuteLinkCheck *****************
 17034 ;; Defined at:
 17035 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17036 ;; Parameters:    Size  Location     Type
 17037 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 17038 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17039 ;; Auto vars:     Size  Location     Type
 17040 ;;		None
 17041 ;; Return value:  Size  Location     Type
 17042 ;;                  2    0[BANK0 ] PTR unsigned char 
 17043 ;; Registers used:
 17044 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17045 ;; Tracked objects:
 17046 ;;		On entry : 0/0
 17047 ;;		On exit  : 0/0
 17048 ;;		Unchanged: 0/0
 17049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17050 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17054 ;;Total ram usage:        2 bytes
 17055 ;; Hardware stack levels used:    1
 17056 ;; Hardware stack levels required when called:    7
 17057 ;; This function calls:
 17058 ;;		Nothing
 17059 ;; This function is called by:
 17060 ;;		_MacExecuteCommands
 17061 ;; This function uses a non-reentrant model
 17062 ;;
 17063                           
 17064                           	psect	text73
 17065  009CCC                     __ptext73:
 17066                           	opt callstack 0
 17067  009CCC                     _ExecuteLinkCheck:
 17068                           	opt callstack 16
 17069                           
 17070                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;incstack = 0
 17074  009CCC  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 17075  009CD0  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 17076  009CD4  50DF               	movf	indf2,w,c
 17077  009CD6  0102               	movlb	2	; () banked
 17078  009CD8  6FE2               	movwf	(_loRa+221)& (0+255),b
 17079                           
 17080                           ; BSR set to: 2
 17081  009CDA  0100               	movlb	0	; () banked
 17082  009CDC  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 17083  009CDE  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 17084                           
 17085                           ; BSR set to: 0
 17086                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 17087  009CE0  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 17088  009CE4  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 17089  009CE8  50DF               	movf	indf2,w,c
 17090  009CEA  0102               	movlb	2	; () banked
 17091  009CEC  6FE3               	movwf	(_loRa+222)& (0+255),b
 17092  009CEE  0100               	movlb	0	; () banked
 17093  009CF0  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 17094  009CF2  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 17095                           
 17096                           ; BSR set to: 0
 17097                           ;lorawan.c: 1656: return ptr;
 17098  009CF4  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 17099  009CF8  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 17100                           
 17101                           ; BSR set to: 0
 17102  009CFC  0012               	return		;funcret
 17103  009CFE                     __end_of_ExecuteLinkCheck:
 17104                           	opt callstack 0
 17105                           
 17106 ;; *************** function _ExecuteLinkAdr *****************
 17107 ;; Defined at:
 17108 ;;		line 614 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17109 ;; Parameters:    Size  Location     Type
 17110 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 17111 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;  redundancy      2   21[BANK0 ] PTR struct .
 17114 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17115 ;;  channelMask     2   18[BANK0 ] unsigned int 
 17116 ;;  dataRate        1   23[BANK0 ] unsigned char 
 17117 ;;  txPower         1   20[BANK0 ] unsigned char 
 17118 ;; Return value:  Size  Location     Type
 17119 ;;                  2   15[BANK0 ] PTR unsigned char 
 17120 ;; Registers used:
 17121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17122 ;; Tracked objects:
 17123 ;;		On entry : 0/0
 17124 ;;		On exit  : 0/0
 17125 ;;		Unchanged: 0/0
 17126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17128 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17130 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17131 ;;Total ram usage:        9 bytes
 17132 ;; Hardware stack levels used:    1
 17133 ;; Hardware stack levels required when called:   10
 17134 ;; This function calls:
 17135 ;;		_EnableChannels
 17136 ;;		_UpdateCurrentDataRate
 17137 ;;		_UpdateTxPower
 17138 ;;		_ValidateChannelMask
 17139 ;;		_ValidateChannelMaskCntl
 17140 ;;		_ValidateDataRate
 17141 ;;		_ValidateTxPower
 17142 ;; This function is called by:
 17143 ;;		_MacExecuteCommands
 17144 ;; This function uses a non-reentrant model
 17145 ;;
 17146                           
 17147                           	psect	text74
 17148  004804                     __ptext74:
 17149                           	opt callstack 0
 17150  004804                     _ExecuteLinkAdr:
 17151                           	opt callstack 13
 17152                           
 17153                           ;lorawan_eu.c: 616: uint8_t txPower, dataRate;;lorawan_eu.c: 617: uint16_t channelMask;;
      +                          lorawan_eu.c: 619: txPower = *(ptr) & 0x0F;
 17154                           
 17155                           ; BSR set to: 0
 17156                           ;incstack = 0
 17157  004804  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17158  004808  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17159  00480C  50DF               	movf	indf2,w,c
 17160  00480E  0B0F               	andlw	15
 17161  004810  0100               	movlb	0	; () banked
 17162  004812  6F74               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 17163                           
 17164                           ;lorawan_eu.c: 620: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 17165  004814  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17166  004818  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17167  00481C  50DF               	movf	indf2,w,c
 17168  00481E  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17169  004820  3971               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 17170  004822  0B0F               	andlw	15
 17171  004824  0B0F               	andlw	15
 17172  004826  6F77               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 17173                           
 17174                           ; BSR set to: 0
 17175                           ;lorawan_eu.c: 621: ptr++;
 17176  004828  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 17177  00482A  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 17178                           
 17179                           ; BSR set to: 0
 17180                           ;lorawan_eu.c: 622: channelMask = (*((uint16_t*)ptr));
 17181  00482C  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17182  004830  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17183  004834  CFDE F072          	movff	postinc2,ExecuteLinkAdr@channelMask
 17184  004838  CFDD F073          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 17185                           
 17186                           ; BSR set to: 0
 17187                           ;lorawan_eu.c: 623: ptr = ptr + sizeof (channelMask);
 17188  00483C  0E02               	movlw	2
 17189  00483E  256F               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 17190  004840  6F6F               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 17191  004842  0E00               	movlw	0
 17192  004844  2170               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 17193  004846  6F70               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 17194                           
 17195                           ; BSR set to: 0
 17196                           ;lorawan_eu.c: 624: Redundancy_t *redundancy;;lorawan_eu.c: 625: redundancy = (Redundanc
      +                          y_t*)(ptr++);
 17197  004848  C06F  F075         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 17198  00484C  C070  F076         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 17199                           
 17200                           ; BSR set to: 0
 17201  004850  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 17202  004852  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 17203                           
 17204                           ; BSR set to: 0
 17205                           ;lorawan_eu.c: 627: if (1 == loRa.macStatus.adr)
 17206  004854  0102               	movlb	2	; () banked
 17207  004856  AD07               	btfss	(_loRa+2)& (0+255),6,b
 17208  004858  D09A               	goto	l19596
 17209                           
 17210                           ; BSR set to: 2
 17211                           ;lorawan_eu.c: 628: {;lorawan_eu.c: 629: if ( (ValidateChannelMaskCntl(redundancy->chMas
      +                          kCntl) == OK) && (ValidateChannelMask(channelMask) == OK) )
 17212  00485A  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17213  00485E  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17214  004862  0100               	movlb	0	; () banked
 17215  004864  38DF               	swapf	223,w,c
 17216  004866  0B07               	andlw	7
 17217  004868  ECA5  F051         	call	_ValidateChannelMaskCntl
 17218  00486C  0900               	iorlw	0
 17219  00486E  A4D8               	btfss	status,2,c
 17220  004870  D013               	goto	l19564
 17221  004872  C072  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 17222  004876  C073  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 17223  00487A  EC64  F04B         	call	_ValidateChannelMask	;wreg free
 17224  00487E  0900               	iorlw	0
 17225  004880  A4D8               	btfss	status,2,c
 17226  004882  D00A               	goto	l19564
 17227                           
 17228                           ;lorawan_eu.c: 630: {;lorawan_eu.c: 631: loRa.macCommands[loRa.crtMacCmdIndex].channelMa
      +                          skAck = 1;
 17229  004884  0102               	movlb	2	; () banked
 17230  004886  51AC               	movf	(_loRa+167)& (0+255),w,b
 17231  004888  0D02               	mullw	2
 17232  00488A  0EAE               	movlw	low (_loRa+169)
 17233  00488C  24F3               	addwf	prodl,w,c
 17234  00488E  6ED9               	movwf	fsr2l,c
 17235  004890  0E02               	movlw	high (_loRa+169)
 17236  004892  20F4               	addwfc	prodh,w,c
 17237  004894  6EDA               	movwf	fsr2h,c
 17238  004896  80DF               	bsf	indf2,0,c
 17239  004898                     l19564:
 17240                           
 17241                           ;lorawan_eu.c: 632: };lorawan_eu.c: 634: if ( (ValidateDataRate (dataRate) == OK) && (da
      +                          taRate >= loRa.minDataRate) && (dataRate <= loRa.maxDataRate) )
 17242  004898  0100               	movlb	0	; () banked
 17243  00489A  5177               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17244  00489C  EC06  F053         	call	_ValidateDataRate
 17245  0048A0  0900               	iorlw	0
 17246  0048A2  A4D8               	btfss	status,2,c
 17247  0048A4  D014               	goto	l19572
 17248  0048A6  0102               	movlb	2	; () banked
 17249  0048A8  51F0               	movf	(_loRa+235)& (0+255),w,b
 17250  0048AA  0100               	movlb	0	; () banked
 17251  0048AC  5D77               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17252  0048AE  A0D8               	btfss	status,0,c
 17253  0048B0  D00E               	goto	l19572
 17254                           
 17255                           ; BSR set to: 0
 17256  0048B2  5177               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17257  0048B4  0102               	movlb	2	; () banked
 17258  0048B6  5DF1               	subwf	(_loRa+236)& (0+255),w,b
 17259  0048B8  A0D8               	btfss	status,0,c
 17260  0048BA  D009               	goto	l19572
 17261                           
 17262                           ; BSR set to: 2
 17263                           ;lorawan_eu.c: 635: {;lorawan_eu.c: 636: loRa.macCommands[loRa.crtMacCmdIndex].dataRateA
      +                          ck = 1;
 17264  0048BC  51AC               	movf	(_loRa+167)& (0+255),w,b
 17265  0048BE  0D02               	mullw	2
 17266  0048C0  0EAE               	movlw	low (_loRa+169)
 17267  0048C2  24F3               	addwf	prodl,w,c
 17268  0048C4  6ED9               	movwf	fsr2l,c
 17269  0048C6  0E02               	movlw	high (_loRa+169)
 17270  0048C8  20F4               	addwfc	prodh,w,c
 17271  0048CA  6EDA               	movwf	fsr2h,c
 17272  0048CC  82DF               	bsf	indf2,1,c
 17273  0048CE                     l19572:
 17274                           
 17275                           ;lorawan_eu.c: 637: };lorawan_eu.c: 639: if (ValidateTxPower (txPower) == OK)
 17276  0048CE  0100               	movlb	0	; () banked
 17277  0048D0  5174               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17278  0048D2  EC51  F050         	call	_ValidateTxPower
 17279  0048D6  0900               	iorlw	0
 17280  0048D8  A4D8               	btfss	status,2,c
 17281  0048DA  D00A               	goto	l1117
 17282                           
 17283                           ;lorawan_eu.c: 640: {;lorawan_eu.c: 641: loRa.macCommands[loRa.crtMacCmdIndex].powerAck 
      +                          = 1;
 17284  0048DC  0102               	movlb	2	; () banked
 17285  0048DE  51AC               	movf	(_loRa+167)& (0+255),w,b
 17286  0048E0  0D02               	mullw	2
 17287  0048E2  0EAE               	movlw	low (_loRa+169)
 17288  0048E4  24F3               	addwf	prodl,w,c
 17289  0048E6  6ED9               	movwf	fsr2l,c
 17290  0048E8  0E02               	movlw	high (_loRa+169)
 17291  0048EA  20F4               	addwfc	prodh,w,c
 17292  0048EC  6EDA               	movwf	fsr2h,c
 17293  0048EE  84DF               	bsf	indf2,2,c
 17294  0048F0                     l1117:
 17295                           
 17296                           ;lorawan_eu.c: 642: };lorawan_eu.c: 644: if ( (loRa.macCommands[loRa.crtMacCmdIndex].pow
      +                          erAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macComm
      +                          ands[loRa.crtMacCmdIndex].channelMaskAck == 1) )
 17297  0048F0  0102               	movlb	2	; () banked
 17298  0048F2  51AC               	movf	(_loRa+167)& (0+255),w,b
 17299  0048F4  0D02               	mullw	2
 17300  0048F6  0EAE               	movlw	low (_loRa+169)
 17301  0048F8  24F3               	addwf	prodl,w,c
 17302  0048FA  6ED9               	movwf	fsr2l,c
 17303  0048FC  0E02               	movlw	high (_loRa+169)
 17304  0048FE  20F4               	addwfc	prodh,w,c
 17305  004900  6EDA               	movwf	fsr2h,c
 17306  004902  A4DF               	btfss	indf2,2,c
 17307  004904  D05F               	goto	l19598
 17308                           
 17309                           ; BSR set to: 2
 17310  004906  51AC               	movf	(_loRa+167)& (0+255),w,b
 17311  004908  0D02               	mullw	2
 17312  00490A  0EAE               	movlw	low (_loRa+169)
 17313  00490C  24F3               	addwf	prodl,w,c
 17314  00490E  6ED9               	movwf	fsr2l,c
 17315  004910  0E02               	movlw	high (_loRa+169)
 17316  004912  20F4               	addwfc	prodh,w,c
 17317  004914  6EDA               	movwf	fsr2h,c
 17318  004916  A2DF               	btfss	indf2,1,c
 17319  004918  D055               	goto	l19598
 17320                           
 17321                           ; BSR set to: 2
 17322  00491A  51AC               	movf	(_loRa+167)& (0+255),w,b
 17323  00491C  0D02               	mullw	2
 17324  00491E  0EAE               	movlw	low (_loRa+169)
 17325  004920  24F3               	addwf	prodl,w,c
 17326  004922  6ED9               	movwf	fsr2l,c
 17327  004924  0E02               	movlw	high (_loRa+169)
 17328  004926  20F4               	addwfc	prodh,w,c
 17329  004928  6EDA               	movwf	fsr2h,c
 17330  00492A  A0DF               	btfss	indf2,0,c
 17331  00492C  D04B               	goto	l19598
 17332                           
 17333                           ; BSR set to: 2
 17334                           ;lorawan_eu.c: 645: {;lorawan_eu.c: 646: EnableChannels (channelMask, redundancy->chMask
      +                          Cntl);
 17335  00492E  C072  F06C         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 17336  004932  C073  F06D         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 17337  004936  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17338  00493A  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17339  00493E  0100               	movlb	0	; () banked
 17340  004940  38DF               	swapf	223,w,c
 17341  004942  0B07               	andlw	7
 17342  004944  6F6E               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 17343  004946  ECA9  F052         	call	_EnableChannels	;wreg free
 17344                           
 17345                           ;lorawan_eu.c: 648: UpdateTxPower (txPower);
 17346  00494A  0100               	movlb	0	; () banked
 17347  00494C  5174               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17348  00494E  ECCE  F053         	call	_UpdateTxPower
 17349                           
 17350                           ;lorawan_eu.c: 649: loRa.macStatus.txPowerModified = 1;
 17351  004952  0102               	movlb	2	; () banked
 17352  004954  8908               	bsf	(_loRa+3)& (0+255),4,b
 17353                           
 17354                           ; BSR set to: 2
 17355                           ;lorawan_eu.c: 650: UpdateCurrentDataRate (dataRate);
 17356  004956  0100               	movlb	0	; () banked
 17357  004958  5177               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17358  00495A  ECD3  F053         	call	_UpdateCurrentDataRate
 17359                           
 17360                           ;lorawan_eu.c: 652: if (redundancy->nbRep == 0)
 17361  00495E  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17362  004962  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17363  004966  0100               	movlb	0	; () banked
 17364  004968  50DF               	movf	223,w,c
 17365  00496A  0B0F               	andlw	15
 17366  00496C  0900               	iorlw	0
 17367  00496E  A4D8               	btfss	status,2,c
 17368  004970  D002               	goto	l19592
 17369                           
 17370                           ; BSR set to: 0
 17371                           ;lorawan_eu.c: 653: {;lorawan_eu.c: 654: loRa.maxRepetitionsUnconfirmedUplink = 0;
 17372  004972  0E00               	movlw	0
 17373  004974  D008               	goto	L18
 17374  004976                     l19592:
 17375                           
 17376                           ; BSR set to: 0
 17377                           ;lorawan_eu.c: 656: else;lorawan_eu.c: 657: {;lorawan_eu.c: 658: loRa.maxRepetitionsUnco
      +                          nfirmedUplink = redundancy->nbRep - 1;
 17378  004976  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17379  00497A  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17380  00497E  50DF               	movf	223,w,c
 17381  004980  0B0F               	andlw	15
 17382  004982  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17383  004984  0571               	decf	??_ExecuteLinkAdr& (0+255),w,b
 17384  004986                     L18:
 17385  004986  0102               	movlb	2	; () banked
 17386  004988  6FDB               	movwf	(_loRa+214)& (0+255),b
 17387                           
 17388                           ; BSR set to: 2
 17389                           ;lorawan_eu.c: 659: };lorawan_eu.c: 660: loRa.macStatus.nbRepModified = 1;
 17390  00498A  8B08               	bsf	(_loRa+3)& (0+255),5,b
 17391  00498C  D01B               	goto	l19598
 17392  00498E                     l19596:
 17393                           
 17394                           ; BSR set to: 2
 17395                           ;lorawan_eu.c: 663: else;lorawan_eu.c: 664: {;lorawan_eu.c: 665: loRa.macCommands[loRa.c
      +                          rtMacCmdIndex].channelMaskAck = 0;
 17396  00498E  51AC               	movf	(_loRa+167)& (0+255),w,b
 17397  004990  0D02               	mullw	2
 17398  004992  0EAE               	movlw	low (_loRa+169)
 17399  004994  24F3               	addwf	prodl,w,c
 17400  004996  6ED9               	movwf	fsr2l,c
 17401  004998  0E02               	movlw	high (_loRa+169)
 17402  00499A  20F4               	addwfc	prodh,w,c
 17403  00499C  6EDA               	movwf	fsr2h,c
 17404  00499E  90DF               	bcf	indf2,0,c
 17405                           
 17406                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 17407  0049A0  51AC               	movf	(_loRa+167)& (0+255),w,b
 17408  0049A2  0D02               	mullw	2
 17409  0049A4  0EAE               	movlw	low (_loRa+169)
 17410  0049A6  24F3               	addwf	prodl,w,c
 17411  0049A8  6ED9               	movwf	fsr2l,c
 17412  0049AA  0E02               	movlw	high (_loRa+169)
 17413  0049AC  20F4               	addwfc	prodh,w,c
 17414  0049AE  6EDA               	movwf	fsr2h,c
 17415  0049B0  92DF               	bcf	indf2,1,c
 17416                           
 17417                           ;lorawan_eu.c: 667: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 17418  0049B2  51AC               	movf	(_loRa+167)& (0+255),w,b
 17419  0049B4  0D02               	mullw	2
 17420  0049B6  0EAE               	movlw	low (_loRa+169)
 17421  0049B8  24F3               	addwf	prodl,w,c
 17422  0049BA  6ED9               	movwf	fsr2l,c
 17423  0049BC  0E02               	movlw	high (_loRa+169)
 17424  0049BE  20F4               	addwfc	prodh,w,c
 17425  0049C0  6EDA               	movwf	fsr2h,c
 17426  0049C2  94DF               	bcf	indf2,2,c
 17427  0049C4                     l19598:
 17428                           
 17429                           ; BSR set to: 2
 17430                           ;lorawan_eu.c: 668: };lorawan_eu.c: 670: return ptr;
 17431  0049C4  C06F  F06F         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 17432  0049C8  C070  F070         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 17433                           
 17434                           ; BSR set to: 2
 17435  0049CC  0012               	return		;funcret
 17436  0049CE                     __end_of_ExecuteLinkAdr:
 17437                           	opt callstack 0
 17438                           
 17439 ;; *************** function _ValidateTxPower *****************
 17440 ;; Defined at:
 17441 ;;		line 583 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17442 ;; Parameters:    Size  Location     Type
 17443 ;;  txPowerNew      1    wreg     unsigned char 
 17444 ;; Auto vars:     Size  Location     Type
 17445 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 17446 ;;  result          1    0[BANK0 ] enum E6118
 17447 ;; Return value:  Size  Location     Type
 17448 ;;                  1    wreg      enum E6118
 17449 ;; Registers used:
 17450 ;;		wreg, status,2, status,0
 17451 ;; Tracked objects:
 17452 ;;		On entry : 0/0
 17453 ;;		On exit  : 0/0
 17454 ;;		Unchanged: 0/0
 17455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17459 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17460 ;;Total ram usage:        2 bytes
 17461 ;; Hardware stack levels used:    1
 17462 ;; Hardware stack levels required when called:    7
 17463 ;; This function calls:
 17464 ;;		Nothing
 17465 ;; This function is called by:
 17466 ;;		_ExecuteLinkAdr
 17467 ;;		_LORAWAN_SetTxPower
 17468 ;; This function uses a non-reentrant model
 17469 ;;
 17470                           
 17471                           	psect	text75
 17472  00A0A2                     __ptext75:
 17473                           	opt callstack 0
 17474  00A0A2                     _ValidateTxPower:
 17475                           	opt callstack 15
 17476                           
 17477                           ; BSR set to: 2
 17478                           ;incstack = 0
 17479                           ;ValidateTxPower@txPowerNew stored from wreg
 17480  00A0A2  0100               	movlb	0	; () banked
 17481  00A0A4  6F61               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 17482                           
 17483                           ;lorawan_eu.c: 585: LorawanError_t result = OK;
 17484  00A0A6  0E00               	movlw	0
 17485  00A0A8  0100               	movlb	0	; () banked
 17486  00A0AA  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17487                           
 17488                           ; BSR set to: 0
 17489                           ;lorawan_eu.c: 587: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 17490  00A0AC  0102               	movlb	2	; () banked
 17491  00A0AE  51A9               	movf	(_loRa+164)& (0+255),w,b
 17492  00A0B0  A4D8               	btfss	status,2,c
 17493  00A0B2  D004               	goto	u20390
 17494                           
 17495                           ; BSR set to: 2
 17496  00A0B4  0100               	movlb	0	; () banked
 17497  00A0B6  5161               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 17498  00A0B8  B4D8               	btfsc	status,2,c
 17499  00A0BA  D004               	goto	u20400
 17500  00A0BC                     u20390:
 17501  00A0BC  0E05               	movlw	5
 17502  00A0BE  0100               	movlb	0	; () banked
 17503  00A0C0  6561               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 17504  00A0C2  D002               	goto	l1101
 17505  00A0C4                     u20400:
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;lorawan_eu.c: 588: {;lorawan_eu.c: 589: result = INVALID_PARAMETER;
 17509  00A0C4  0E03               	movlw	3
 17510  00A0C6  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17511  00A0C8                     l1101:
 17512                           
 17513                           ; BSR set to: 0
 17514                           ;lorawan_eu.c: 590: };lorawan_eu.c: 592: return result;
 17515  00A0C8  5160               	movf	ValidateTxPower@result& (0+255),w,b
 17516                           
 17517                           ; BSR set to: 0
 17518  00A0CA  0012               	return		;funcret
 17519  00A0CC                     __end_of_ValidateTxPower:
 17520                           	opt callstack 0
 17521                           
 17522 ;; *************** function _ValidateDataRate *****************
 17523 ;; Defined at:
 17524 ;;		line 571 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17525 ;; Parameters:    Size  Location     Type
 17526 ;;  dataRate        1    wreg     unsigned char 
 17527 ;; Auto vars:     Size  Location     Type
 17528 ;;  dataRate        1    0[BANK0 ] unsigned char 
 17529 ;;  result          1    1[BANK0 ] enum E6118
 17530 ;; Return value:  Size  Location     Type
 17531 ;;                  1    wreg      enum E6118
 17532 ;; Registers used:
 17533 ;;		wreg, status,2, status,0
 17534 ;; Tracked objects:
 17535 ;;		On entry : 0/0
 17536 ;;		On exit  : 0/0
 17537 ;;		Unchanged: 0/0
 17538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17540 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17542 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17543 ;;Total ram usage:        2 bytes
 17544 ;; Hardware stack levels used:    1
 17545 ;; Hardware stack levels required when called:    7
 17546 ;; This function calls:
 17547 ;;		Nothing
 17548 ;; This function is called by:
 17549 ;;		_ExecuteLinkAdr
 17550 ;;		_ExecuteRxParamSetupReq
 17551 ;;		_ValidateDataRange
 17552 ;;		_LORAWAN_SetReceiveWindow2Parameters
 17553 ;;		_LORAWAN_SetCurrentDataRate
 17554 ;; This function uses a non-reentrant model
 17555 ;;
 17556                           
 17557                           	psect	text76
 17558  00A60C                     __ptext76:
 17559                           	opt callstack 0
 17560  00A60C                     _ValidateDataRate:
 17561                           	opt callstack 15
 17562                           
 17563                           ; BSR set to: 0
 17564                           ;incstack = 0
 17565                           ;ValidateDataRate@dataRate stored from wreg
 17566  00A60C  0100               	movlb	0	; () banked
 17567  00A60E  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 17568                           
 17569                           ;lorawan_eu.c: 573: LorawanError_t result = OK;
 17570  00A610  0E00               	movlw	0
 17571  00A612  0100               	movlb	0	; () banked
 17572  00A614  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17573                           
 17574                           ; BSR set to: 0
 17575                           ;lorawan_eu.c: 575: if ( dataRate > 7 )
 17576  00A616  0E07               	movlw	7
 17577  00A618  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 17578  00A61A  D002               	goto	l1097
 17579                           
 17580                           ; BSR set to: 0
 17581                           ;lorawan_eu.c: 576: {;lorawan_eu.c: 577: result = INVALID_PARAMETER;
 17582  00A61C  0E03               	movlw	3
 17583  00A61E  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17584  00A620                     l1097:
 17585                           
 17586                           ; BSR set to: 0
 17587                           ;lorawan_eu.c: 578: };lorawan_eu.c: 580: return result;
 17588  00A620  5161               	movf	ValidateDataRate@result& (0+255),w,b
 17589                           
 17590                           ; BSR set to: 0
 17591  00A622  0012               	return		;funcret
 17592  00A624                     __end_of_ValidateDataRate:
 17593                           	opt callstack 0
 17594                           
 17595 ;; *************** function _ValidateChannelMaskCntl *****************
 17596 ;; Defined at:
 17597 ;;		line 1138 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17598 ;; Parameters:    Size  Location     Type
 17599 ;;  channelMaskC    1    wreg     unsigned char 
 17600 ;; Auto vars:     Size  Location     Type
 17601 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 17602 ;;  result          1    0[BANK0 ] enum E6118
 17603 ;; Return value:  Size  Location     Type
 17604 ;;                  1    wreg      enum E6118
 17605 ;; Registers used:
 17606 ;;		wreg, status,2, status,0
 17607 ;; Tracked objects:
 17608 ;;		On entry : 0/0
 17609 ;;		On exit  : 0/0
 17610 ;;		Unchanged: 0/0
 17611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17613 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17615 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17616 ;;Total ram usage:        2 bytes
 17617 ;; Hardware stack levels used:    1
 17618 ;; Hardware stack levels required when called:    7
 17619 ;; This function calls:
 17620 ;;		Nothing
 17621 ;; This function is called by:
 17622 ;;		_ExecuteLinkAdr
 17623 ;; This function uses a non-reentrant model
 17624 ;;
 17625                           
 17626                           	psect	text77
 17627  00A34A                     __ptext77:
 17628                           	opt callstack 0
 17629  00A34A                     _ValidateChannelMaskCntl:
 17630                           	opt callstack 15
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;incstack = 0
 17634                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 17635  00A34A  0100               	movlb	0	; () banked
 17636  00A34C  6F61               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 17637                           
 17638                           ;lorawan_eu.c: 1140: LorawanError_t result = OK;
 17639  00A34E  0E00               	movlw	0
 17640  00A350  0100               	movlb	0	; () banked
 17641  00A352  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;lorawan_eu.c: 1142: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 17645  00A354  5161               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17646  00A356  B4D8               	btfsc	status,2,c
 17647  00A358  D006               	goto	l1268
 17648                           
 17649                           ; BSR set to: 0
 17650  00A35A  0E06               	movlw	6
 17651  00A35C  1961               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17652  00A35E  B4D8               	btfsc	status,2,c
 17653  00A360  D002               	goto	l1268
 17654                           
 17655                           ; BSR set to: 0
 17656                           ;lorawan_eu.c: 1143: {;lorawan_eu.c: 1144: result = INVALID_PARAMETER;
 17657  00A362  0E03               	movlw	3
 17658  00A364  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17659  00A366                     l1268:
 17660                           
 17661                           ; BSR set to: 0
 17662                           ;lorawan_eu.c: 1145: };lorawan_eu.c: 1147: return result;
 17663  00A366  5160               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 17664                           
 17665                           ; BSR set to: 0
 17666  00A368  0012               	return		;funcret
 17667  00A36A                     __end_of_ValidateChannelMaskCntl:
 17668                           	opt callstack 0
 17669                           
 17670 ;; *************** function _ValidateChannelMask *****************
 17671 ;; Defined at:
 17672 ;;		line 1167 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17673 ;; Parameters:    Size  Location     Type
 17674 ;;  channelMask     2    0[BANK0 ] unsigned int 
 17675 ;; Auto vars:     Size  Location     Type
 17676 ;;  i               1    4[BANK0 ] unsigned char 
 17677 ;; Return value:  Size  Location     Type
 17678 ;;                  1    wreg      enum E6118
 17679 ;; Registers used:
 17680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17681 ;; Tracked objects:
 17682 ;;		On entry : 0/0
 17683 ;;		On exit  : 0/0
 17684 ;;		Unchanged: 0/0
 17685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17687 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17688 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17689 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17690 ;;Total ram usage:        5 bytes
 17691 ;; Hardware stack levels used:    1
 17692 ;; Hardware stack levels required when called:    7
 17693 ;; This function calls:
 17694 ;;		Nothing
 17695 ;; This function is called by:
 17696 ;;		_ExecuteLinkAdr
 17697 ;; This function uses a non-reentrant model
 17698 ;;
 17699                           
 17700                           	psect	text78
 17701  0096C8                     __ptext78:
 17702                           	opt callstack 0
 17703  0096C8                     _ValidateChannelMask:
 17704                           	opt callstack 15
 17705                           
 17706                           ;lorawan_eu.c: 1171: if(channelMask != 0x0000U)
 17707                           
 17708                           ; BSR set to: 0
 17709                           ;incstack = 0
 17710  0096C8  0100               	movlb	0	; () banked
 17711  0096CA  5160               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 17712  0096CC  1161               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17713  0096CE  B4D8               	btfsc	status,2,c
 17714  0096D0  D011               	goto	u20450
 17715                           
 17716                           ; BSR set to: 0
 17717                           ;lorawan_eu.c: 1172: {;lorawan_eu.c: 1173: for (i = 0; i < 16; i++)
 17718  0096D2  0E00               	movlw	0
 17719  0096D4  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 17720  0096D6                     l1282:
 17721                           
 17722                           ; BSR set to: 0
 17723                           ;lorawan_eu.c: 1174: {;lorawan_eu.c: 1175: if ( ( (channelMask & (1 << (0))) == (1 << (0
      +                          ))) && ( (Channels[i].parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04)
      +                           ) )
 17724  0096D6  A160               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 17725  0096D8  D00F               	goto	l19098
 17726                           
 17727                           ; BSR set to: 0
 17728  0096DA  5164               	movf	ValidateChannelMask@i& (0+255),w,b
 17729  0096DC  0D0E               	mullw	14
 17730  0096DE  0E21               	movlw	low (_Channels+13)
 17731  0096E0  24F3               	addwf	prodl,w,c
 17732  0096E2  6ED9               	movwf	fsr2l,c
 17733  0096E4  0E04               	movlw	high (_Channels+13)
 17734  0096E6  20F4               	addwfc	prodh,w,c
 17735  0096E8  6EDA               	movwf	fsr2h,c
 17736  0096EA  50DF               	movf	indf2,w,c
 17737  0096EC  0B07               	andlw	7
 17738  0096EE  0A07               	xorlw	7
 17739  0096F0  B4D8               	btfsc	status,2,c
 17740  0096F2  D002               	goto	l19098
 17741  0096F4                     u20450:
 17742                           
 17743                           ; BSR set to: 0
 17744                           ;lorawan_eu.c: 1176: {;lorawan_eu.c: 1177: return INVALID_PARAMETER;
 17745  0096F4  0E03               	movlw	3
 17746  0096F6  0012               	return	
 17747  0096F8                     l19098:
 17748                           
 17749                           ; BSR set to: 0
 17750                           ;lorawan_eu.c: 1179: else;lorawan_eu.c: 1180: {;lorawan_eu.c: 1181: channelMask = channe
      +                          lMask >> (1);
 17751  0096F8  90D8               	bcf	status,0,c
 17752  0096FA  3161               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17753  0096FC  6F62               	movwf	??_ValidateChannelMask& (0+255),b
 17754  0096FE  3160               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 17755  009700  6F60               	movwf	ValidateChannelMask@channelMask& (0+255),b
 17756  009702  C062  F061         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 17757                           
 17758                           ; BSR set to: 0
 17759  009706  2B64               	incf	ValidateChannelMask@i& (0+255),f,b
 17760                           
 17761                           ; BSR set to: 0
 17762  009708  0E0F               	movlw	15
 17763  00970A  6564               	cpfsgt	ValidateChannelMask@i& (0+255),b
 17764  00970C  D7E4               	goto	l1282
 17765                           
 17766                           ; BSR set to: 0
 17767                           ;lorawan_eu.c: 1182: };lorawan_eu.c: 1183: };lorawan_eu.c: 1185: return OK;
 17768  00970E  0E00               	movlw	0
 17769                           
 17770                           ; BSR set to: 0
 17771  009710  0012               	return		;funcret
 17772  009712                     __end_of_ValidateChannelMask:
 17773                           	opt callstack 0
 17774                           
 17775 ;; *************** function _UpdateTxPower *****************
 17776 ;; Defined at:
 17777 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17778 ;; Parameters:    Size  Location     Type
 17779 ;;  txPowerNew      1    wreg     unsigned char 
 17780 ;; Auto vars:     Size  Location     Type
 17781 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 17782 ;; Return value:  Size  Location     Type
 17783 ;;                  1    wreg      void 
 17784 ;; Registers used:
 17785 ;;		wreg
 17786 ;; Tracked objects:
 17787 ;;		On entry : 0/0
 17788 ;;		On exit  : 0/0
 17789 ;;		Unchanged: 0/0
 17790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17792 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17794 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17795 ;;Total ram usage:        1 bytes
 17796 ;; Hardware stack levels used:    1
 17797 ;; Hardware stack levels required when called:    7
 17798 ;; This function calls:
 17799 ;;		Nothing
 17800 ;; This function is called by:
 17801 ;;		_ExecuteLinkAdr
 17802 ;;		_LORAWAN_SetTxPower
 17803 ;; This function uses a non-reentrant model
 17804 ;;
 17805                           
 17806                           	psect	text79
 17807  00A79C                     __ptext79:
 17808                           	opt callstack 0
 17809  00A79C                     _UpdateTxPower:
 17810                           	opt callstack 15
 17811                           
 17812                           ; BSR set to: 0
 17813                           ;incstack = 0
 17814                           ;UpdateTxPower@txPowerNew stored from wreg
 17815  00A79C  0100               	movlb	0	; () banked
 17816  00A79E  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 17817                           
 17818                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 17819  00A7A0  C060  F2E6         	movff	UpdateTxPower@txPowerNew,_loRa+225
 17820  00A7A4  0012               	return		;funcret
 17821  00A7A6                     __end_of_UpdateTxPower:
 17822                           	opt callstack 0
 17823                           
 17824 ;; *************** function _UpdateCurrentDataRate *****************
 17825 ;; Defined at:
 17826 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17827 ;; Parameters:    Size  Location     Type
 17828 ;;  valueNew        1    wreg     unsigned char 
 17829 ;; Auto vars:     Size  Location     Type
 17830 ;;  valueNew        1    0[BANK0 ] unsigned char 
 17831 ;; Return value:  Size  Location     Type
 17832 ;;                  1    wreg      void 
 17833 ;; Registers used:
 17834 ;;		wreg
 17835 ;; Tracked objects:
 17836 ;;		On entry : 0/0
 17837 ;;		On exit  : 0/0
 17838 ;;		Unchanged: 0/0
 17839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17841 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17843 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17844 ;;Total ram usage:        1 bytes
 17845 ;; Hardware stack levels used:    1
 17846 ;; Hardware stack levels required when called:    7
 17847 ;; This function calls:
 17848 ;;		Nothing
 17849 ;; This function is called by:
 17850 ;;		_ExecuteLinkAdr
 17851 ;;		_LORAWAN_SetCurrentDataRate
 17852 ;; This function uses a non-reentrant model
 17853 ;;
 17854                           
 17855                           	psect	text80
 17856  00A7A6                     __ptext80:
 17857                           	opt callstack 0
 17858  00A7A6                     _UpdateCurrentDataRate:
 17859                           	opt callstack 15
 17860                           
 17861                           ;incstack = 0
 17862                           ;UpdateCurrentDataRate@valueNew stored from wreg
 17863  00A7A6  0100               	movlb	0	; () banked
 17864  00A7A8  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 17865                           
 17866                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 17867  00A7AA  C060  F2E4         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 17868  00A7AE  0012               	return		;funcret
 17869  00A7B0                     __end_of_UpdateCurrentDataRate:
 17870                           	opt callstack 0
 17871                           
 17872 ;; *************** function _EnableChannels *****************
 17873 ;; Defined at:
 17874 ;;		line 1150 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17875 ;; Parameters:    Size  Location     Type
 17876 ;;  channelMask     2   12[BANK0 ] unsigned int 
 17877 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 17878 ;; Auto vars:     Size  Location     Type
 17879 ;;		None
 17880 ;; Return value:  Size  Location     Type
 17881 ;;                  1    wreg      void 
 17882 ;; Registers used:
 17883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17884 ;; Tracked objects:
 17885 ;;		On entry : 0/0
 17886 ;;		On exit  : 0/0
 17887 ;;		Unchanged: 0/0
 17888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17889 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17892 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17893 ;;Total ram usage:        3 bytes
 17894 ;; Hardware stack levels used:    1
 17895 ;; Hardware stack levels required when called:    9
 17896 ;; This function calls:
 17897 ;;		_EnableChannels1
 17898 ;; This function is called by:
 17899 ;;		_ExecuteLinkAdr
 17900 ;; This function uses a non-reentrant model
 17901 ;;
 17902                           
 17903                           	psect	text81
 17904  00A552                     __ptext81:
 17905                           	opt callstack 0
 17906  00A552                     _EnableChannels:
 17907                           	opt callstack 13
 17908                           
 17909                           ;lorawan_eu.c: 1152: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 17910                           
 17911                           ;incstack = 0
 17912  00A552  C06C  F064         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 17913  00A556  C06D  F065         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 17914  00A55A  C06E  F066         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 17915  00A55E  0E00               	movlw	0
 17916  00A560  0100               	movlb	0	; () banked
 17917  00A562  6F67               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 17918  00A564  0E10               	movlw	16
 17919  00A566  6F68               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 17920  00A568  EC20  F046         	call	_EnableChannels1	;wreg free
 17921  00A56C  0012               	return		;funcret
 17922  00A56E                     __end_of_EnableChannels:
 17923                           	opt callstack 0
 17924                           
 17925 ;; *************** function _EnableChannels1 *****************
 17926 ;; Defined at:
 17927 ;;		line 1194 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17928 ;; Parameters:    Size  Location     Type
 17929 ;;  channelMask     2    4[BANK0 ] unsigned int 
 17930 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 17931 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 17932 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 17933 ;; Auto vars:     Size  Location     Type
 17934 ;;  i               1   11[BANK0 ] unsigned char 
 17935 ;; Return value:  Size  Location     Type
 17936 ;;                  1    wreg      void 
 17937 ;; Registers used:
 17938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17939 ;; Tracked objects:
 17940 ;;		On entry : 0/0
 17941 ;;		On exit  : 0/0
 17942 ;;		Unchanged: 0/0
 17943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17944 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17945 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17946 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17947 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17948 ;;Total ram usage:        8 bytes
 17949 ;; Hardware stack levels used:    1
 17950 ;; Hardware stack levels required when called:    8
 17951 ;; This function calls:
 17952 ;;		_UpdateChannelIdStatus
 17953 ;; This function is called by:
 17954 ;;		_EnableChannels
 17955 ;; This function uses a non-reentrant model
 17956 ;;
 17957                           
 17958                           	psect	text82
 17959  008C40                     __ptext82:
 17960                           	opt callstack 0
 17961  008C40                     _EnableChannels1:
 17962                           	opt callstack 13
 17963                           
 17964                           ;lorawan_eu.c: 1196: uint8_t i;;lorawan_eu.c: 1198: if (channelMaskCntl == 6)
 17965                           
 17966                           ;incstack = 0
 17967  008C40  0E06               	movlw	6
 17968  008C42  0100               	movlb	0	; () banked
 17969  008C44  1966               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17970  008C46  A4D8               	btfss	status,2,c
 17971  008C48  D00F               	goto	l18710
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;lorawan_eu.c: 1199: {;lorawan_eu.c: 1200: for ( i = channelIndexMin; i < channelIndexMa
      +                          x; i++ )
 17975  008C4A  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17976  008C4E  D007               	goto	l18708
 17977  008C50                     l18704:
 17978                           
 17979                           ; BSR set to: 0
 17980                           ;lorawan_eu.c: 1201: {;lorawan_eu.c: 1202: UpdateChannelIdStatus (i, 1);
 17981  008C50  0E01               	movlw	1
 17982  008C52  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17983  008C54  516B               	movf	EnableChannels1@i& (0+255),w,b
 17984  008C56  ECE8  F030         	call	_UpdateChannelIdStatus
 17985  008C5A  0100               	movlb	0	; () banked
 17986  008C5C  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 17987  008C5E                     l18708:
 17988                           
 17989                           ; BSR set to: 0
 17990  008C5E  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17991  008C60  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 17992  008C62  B0D8               	btfsc	status,0,c
 17993  008C64  0012               	return	
 17994  008C66  D7F4               	goto	l18704
 17995  008C68                     l18710:
 17996                           
 17997                           ; BSR set to: 0
 17998                           ;lorawan_eu.c: 1205: else if (channelMaskCntl == 0)
 17999  008C68  5166               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 18000  008C6A  A4D8               	btfss	status,2,c
 18001  008C6C  0012               	return	
 18002                           
 18003                           ; BSR set to: 0
 18004                           ;lorawan_eu.c: 1206: {;lorawan_eu.c: 1207: for ( i = channelIndexMin; i < channelIndexMa
      +                          x; i++ )
 18005  008C6E  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 18006  008C72  D016               	goto	l18722
 18007  008C74                     l1297:
 18008                           
 18009                           ; BSR set to: 0
 18010                           ;lorawan_eu.c: 1208: {;lorawan_eu.c: 1209: if ( channelMask & (1 << (0)) == (1 << (0)))
 18011  008C74  A164               	btfss	EnableChannels1@channelMask& (0+255),0,b
 18012  008C76  D006               	goto	l18716
 18013                           
 18014                           ; BSR set to: 0
 18015                           ;lorawan_eu.c: 1210: {;lorawan_eu.c: 1211: UpdateChannelIdStatus (i, 1);
 18016  008C78  0E01               	movlw	1
 18017  008C7A  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18018  008C7C  516B               	movf	EnableChannels1@i& (0+255),w,b
 18019  008C7E  ECE8  F030         	call	_UpdateChannelIdStatus
 18020                           
 18021                           ;lorawan_eu.c: 1212: }
 18022  008C82  D005               	goto	l18718
 18023  008C84                     l18716:
 18024                           
 18025                           ; BSR set to: 0
 18026                           ;lorawan_eu.c: 1213: else;lorawan_eu.c: 1214: {;lorawan_eu.c: 1215: UpdateChannelIdStatu
      +                          s (i, 0);
 18027  008C84  0E00               	movlw	0
 18028  008C86  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18029  008C88  516B               	movf	EnableChannels1@i& (0+255),w,b
 18030  008C8A  ECE8  F030         	call	_UpdateChannelIdStatus
 18031  008C8E                     l18718:
 18032                           
 18033                           ;lorawan_eu.c: 1216: };lorawan_eu.c: 1217: channelMask = channelMask >> (1);
 18034  008C8E  90D8               	bcf	status,0,c
 18035  008C90  0100               	movlb	0	; () banked
 18036  008C92  3165               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 18037  008C94  6F69               	movwf	??_EnableChannels1& (0+255),b
 18038  008C96  3164               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 18039  008C98  6F64               	movwf	EnableChannels1@channelMask& (0+255),b
 18040  008C9A  C069  F065         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 18041                           
 18042                           ; BSR set to: 0
 18043  008C9E  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 18044  008CA0                     l18722:
 18045                           
 18046                           ; BSR set to: 0
 18047  008CA0  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18048  008CA2  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 18049  008CA4  B0D8               	btfsc	status,0,c
 18050  008CA6  0012               	return	
 18051  008CA8  D7E5               	goto	l1297
 18052  008CAA                     __end_of_EnableChannels1:
 18053                           	opt callstack 0
 18054                           
 18055 ;; *************** function _UpdateChannelIdStatus *****************
 18056 ;; Defined at:
 18057 ;;		line 1043 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18058 ;; Parameters:    Size  Location     Type
 18059 ;;  channelId       1    wreg     unsigned char 
 18060 ;;  statusNew       1    0[BANK0 ] unsigned char 
 18061 ;; Auto vars:     Size  Location     Type
 18062 ;;  channelId       1    2[BANK0 ] unsigned char 
 18063 ;;  i               1    3[BANK0 ] unsigned char 
 18064 ;; Return value:  Size  Location     Type
 18065 ;;                  1    wreg      void 
 18066 ;; Registers used:
 18067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18068 ;; Tracked objects:
 18069 ;;		On entry : 0/0
 18070 ;;		On exit  : 0/0
 18071 ;;		Unchanged: 0/0
 18072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18073 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18074 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18076 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18077 ;;Total ram usage:        4 bytes
 18078 ;; Hardware stack levels used:    1
 18079 ;; Hardware stack levels required when called:    7
 18080 ;; This function calls:
 18081 ;;		Nothing
 18082 ;; This function is called by:
 18083 ;;		_LORAWAN_SetChannelIdStatus
 18084 ;;		_ExecuteNewChannel
 18085 ;;		_EnableChannels1
 18086 ;; This function uses a non-reentrant model
 18087 ;;
 18088                           
 18089                           	psect	text83
 18090  0061D0                     __ptext83:
 18091                           	opt callstack 0
 18092  0061D0                     _UpdateChannelIdStatus:
 18093                           	opt callstack 15
 18094                           
 18095                           ; BSR set to: 0
 18096                           ;incstack = 0
 18097                           ;UpdateChannelIdStatus@channelId stored from wreg
 18098  0061D0  0100               	movlb	0	; () banked
 18099  0061D2  6F62               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 18100                           
 18101                           ;lorawan_eu.c: 1045: uint8_t i;;lorawan_eu.c: 1047: Channels[channelId].status = statusN
      +                          ew;
 18102  0061D4  0100               	movlb	0	; () banked
 18103  0061D6  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18104  0061D8  0D0E               	mullw	14
 18105  0061DA  0E18               	movlw	low (_Channels+4)
 18106  0061DC  24F3               	addwf	prodl,w,c
 18107  0061DE  6ED9               	movwf	fsr2l,c
 18108  0061E0  0E04               	movlw	high (_Channels+4)
 18109  0061E2  20F4               	addwfc	prodh,w,c
 18110  0061E4  6EDA               	movwf	fsr2h,c
 18111  0061E6  C060  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 18112                           
 18113                           ;lorawan_eu.c: 1048: if(Channels[channelId].status == 0)
 18114  0061EA  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18115  0061EC  0D0E               	mullw	14
 18116  0061EE  0E18               	movlw	low (_Channels+4)
 18117  0061F0  24F3               	addwf	prodl,w,c
 18118  0061F2  6ED9               	movwf	fsr2l,c
 18119  0061F4  0E04               	movlw	high (_Channels+4)
 18120  0061F6  20F4               	addwfc	prodh,w,c
 18121  0061F8  6EDA               	movwf	fsr2h,c
 18122  0061FA  50DF               	movf	indf2,w,c
 18123  0061FC  A4D8               	btfss	status,2,c
 18124  0061FE  D00C               	goto	l18378
 18125                           
 18126                           ; BSR set to: 0
 18127                           ;lorawan_eu.c: 1049: {;lorawan_eu.c: 1051: Channels[channelId].channelTimer = 0;
 18128  006200  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18129  006202  0D0E               	mullw	14
 18130  006204  0E1C               	movlw	low (_Channels+8)
 18131  006206  24F3               	addwf	prodl,w,c
 18132  006208  6ED9               	movwf	fsr2l,c
 18133  00620A  0E04               	movlw	high (_Channels+8)
 18134  00620C  20F4               	addwfc	prodh,w,c
 18135  00620E  6EDA               	movwf	fsr2h,c
 18136  006210  6ADE               	clrf	postinc2,c
 18137  006212  6ADE               	clrf	postinc2,c
 18138  006214  6ADE               	clrf	postinc2,c
 18139  006216  6ADD               	clrf	postdec2,c
 18140  006218                     l18378:
 18141                           
 18142                           ; BSR set to: 0
 18143                           ;lorawan_eu.c: 1052: };lorawan_eu.c: 1054: for (i = 0; i < loRa.maxChannels; i++)
 18144  006218  0E00               	movlw	0
 18145  00621A  6F63               	movwf	UpdateChannelIdStatus@i& (0+255),b
 18146  00621C  D055               	goto	l18392
 18147  00621E                     l18380:
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;lorawan_eu.c: 1055: {;lorawan_eu.c: 1056: if ( (Channels[i].dataRange.min < loRa.minDat
      +                          aRate) && (Channels[i].status == 1) )
 18151  00621E  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18152  006220  0D0E               	mullw	14
 18153  006222  0E19               	movlw	low (_Channels+5)
 18154  006224  24F3               	addwf	prodl,w,c
 18155  006226  6ED9               	movwf	fsr2l,c
 18156  006228  0E04               	movlw	high (_Channels+5)
 18157  00622A  20F4               	addwfc	prodh,w,c
 18158  00622C  6EDA               	movwf	fsr2h,c
 18159  00622E  0104               	movlb	4	; () banked
 18160  006230  50DF               	movf	223,w,c
 18161  006232  0B0F               	andlw	15
 18162  006234  0100               	movlb	0	; () banked
 18163  006236  6F61               	movwf	??_UpdateChannelIdStatus& (0+255),b
 18164  006238  0102               	movlb	2	; () banked
 18165  00623A  51F0               	movf	(_loRa+235)& (0+255),w,b
 18166  00623C  0100               	movlb	0	; () banked
 18167  00623E  5D61               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 18168  006240  B0D8               	btfsc	status,0,c
 18169  006242  D018               	goto	l1233
 18170                           
 18171                           ; BSR set to: 0
 18172  006244  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18173  006246  0D0E               	mullw	14
 18174  006248  0E18               	movlw	low (_Channels+4)
 18175  00624A  24F3               	addwf	prodl,w,c
 18176  00624C  6ED9               	movwf	fsr2l,c
 18177  00624E  0E04               	movlw	high (_Channels+4)
 18178  006250  20F4               	addwfc	prodh,w,c
 18179  006252  6EDA               	movwf	fsr2h,c
 18180  006254  04DE               	decf	postinc2,w,c
 18181  006256  A4D8               	btfss	status,2,c
 18182  006258  D00D               	goto	l1233
 18183                           
 18184                           ; BSR set to: 0
 18185                           ;lorawan_eu.c: 1057: {;lorawan_eu.c: 1058: loRa.minDataRate = Channels[i].dataRange.min;
 18186  00625A  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18187  00625C  0D0E               	mullw	14
 18188  00625E  0E19               	movlw	low (_Channels+5)
 18189  006260  24F3               	addwf	prodl,w,c
 18190  006262  6ED9               	movwf	fsr2l,c
 18191  006264  0E04               	movlw	high (_Channels+5)
 18192  006266  20F4               	addwfc	prodh,w,c
 18193  006268  6EDA               	movwf	fsr2h,c
 18194  00626A  0104               	movlb	4	; () banked
 18195  00626C  50DF               	movf	223,w,c
 18196  00626E  0B0F               	andlw	15
 18197  006270  0102               	movlb	2	; () banked
 18198  006272  6FF0               	movwf	(_loRa+235)& (0+255),b
 18199  006274                     l1233:
 18200                           
 18201                           ;lorawan_eu.c: 1059: };lorawan_eu.c: 1060: if ( (Channels[i].dataRange.max > loRa.maxDat
      +                          aRate) && (Channels[i].status == 1) )
 18202  006274  0100               	movlb	0	; () banked
 18203  006276  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18204  006278  0D0E               	mullw	14
 18205  00627A  0E19               	movlw	low (_Channels+5)
 18206  00627C  24F3               	addwf	prodl,w,c
 18207  00627E  6ED9               	movwf	fsr2l,c
 18208  006280  0E04               	movlw	high (_Channels+5)
 18209  006282  20F4               	addwfc	prodh,w,c
 18210  006284  6EDA               	movwf	fsr2h,c
 18211  006286  0104               	movlb	4	; () banked
 18212  006288  38DF               	swapf	223,w,c
 18213  00628A  0B0F               	andlw	15
 18214  00628C  0102               	movlb	2	; () banked
 18215  00628E  61F1               	cpfslt	(_loRa+236)& (0+255),b
 18216  006290  D019               	goto	l18390
 18217                           
 18218                           ; BSR set to: 2
 18219  006292  0100               	movlb	0	; () banked
 18220  006294  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18221  006296  0D0E               	mullw	14
 18222  006298  0E18               	movlw	low (_Channels+4)
 18223  00629A  24F3               	addwf	prodl,w,c
 18224  00629C  6ED9               	movwf	fsr2l,c
 18225  00629E  0E04               	movlw	high (_Channels+4)
 18226  0062A0  20F4               	addwfc	prodh,w,c
 18227  0062A2  6EDA               	movwf	fsr2h,c
 18228  0062A4  04DE               	decf	postinc2,w,c
 18229  0062A6  A4D8               	btfss	status,2,c
 18230  0062A8  D00D               	goto	l18390
 18231                           
 18232                           ; BSR set to: 0
 18233                           ;lorawan_eu.c: 1061: {;lorawan_eu.c: 1062: loRa.maxDataRate = Channels[i].dataRange.max;
 18234  0062AA  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18235  0062AC  0D0E               	mullw	14
 18236  0062AE  0E19               	movlw	low (_Channels+5)
 18237  0062B0  24F3               	addwf	prodl,w,c
 18238  0062B2  6ED9               	movwf	fsr2l,c
 18239  0062B4  0E04               	movlw	high (_Channels+5)
 18240  0062B6  20F4               	addwfc	prodh,w,c
 18241  0062B8  6EDA               	movwf	fsr2h,c
 18242  0062BA  0104               	movlb	4	; () banked
 18243  0062BC  38DF               	swapf	223,w,c
 18244  0062BE  0B0F               	andlw	15
 18245  0062C0  0102               	movlb	2	; () banked
 18246  0062C2  6FF1               	movwf	(_loRa+236)& (0+255),b
 18247  0062C4                     l18390:
 18248  0062C4  0100               	movlb	0	; () banked
 18249  0062C6  2B63               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 18250  0062C8                     l18392:
 18251                           
 18252                           ; BSR set to: 0
 18253  0062C8  0102               	movlb	2	; () banked
 18254  0062CA  51F2               	movf	(_loRa+237)& (0+255),w,b
 18255  0062CC  0100               	movlb	0	; () banked
 18256  0062CE  5D63               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 18257  0062D0  A0D8               	btfss	status,0,c
 18258  0062D2  D7A5               	goto	l18380
 18259                           
 18260                           ; BSR set to: 0
 18261                           ;lorawan_eu.c: 1063: };lorawan_eu.c: 1064: };lorawan_eu.c: 1066: if (loRa.currentDataRat
      +                          e > loRa.maxDataRate)
 18262  0062D4  0102               	movlb	2	; () banked
 18263  0062D6  51E4               	movf	(_loRa+223)& (0+255),w,b
 18264  0062D8  5DF1               	subwf	(_loRa+236)& (0+255),w,b
 18265  0062DA  A0D8               	btfss	status,0,c
 18266                           
 18267                           ; BSR set to: 2
 18268                           ;lorawan_eu.c: 1067: {;lorawan_eu.c: 1068: loRa.currentDataRate = loRa.maxDataRate;
 18269  0062DC  C2F1  F2E4         	movff	_loRa+236,_loRa+223
 18270                           
 18271                           ; BSR set to: 2
 18272                           ;lorawan_eu.c: 1069: };lorawan_eu.c: 1071: if (loRa.currentDataRate < loRa.minDataRate)
 18273  0062E0  51F0               	movf	(_loRa+235)& (0+255),w,b
 18274  0062E2  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 18275  0062E4  B0D8               	btfsc	status,0,c
 18276  0062E6  0012               	return	
 18277                           
 18278                           ; BSR set to: 2
 18279                           ;lorawan_eu.c: 1072: {;lorawan_eu.c: 1073: loRa.currentDataRate = loRa.minDataRate;
 18280  0062E8  C2F0  F2E4         	movff	_loRa+235,_loRa+223
 18281                           
 18282                           ; BSR set to: 2
 18283  0062EC  0012               	return		;funcret
 18284  0062EE                     __end_of_UpdateChannelIdStatus:
 18285                           	opt callstack 0
 18286                           
 18287 ;; *************** function _ExecuteDutyCycle *****************
 18288 ;; Defined at:
 18289 ;;		line 595 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18290 ;; Parameters:    Size  Location     Type
 18291 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18292 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18293 ;; Auto vars:     Size  Location     Type
 18294 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 18295 ;; Return value:  Size  Location     Type
 18296 ;;                  2    0[BANK0 ] PTR unsigned char 
 18297 ;; Registers used:
 18298 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18299 ;; Tracked objects:
 18300 ;;		On entry : 0/0
 18301 ;;		On exit  : 0/0
 18302 ;;		Unchanged: 0/0
 18303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18304 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18306 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18307 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18308 ;;Total ram usage:        6 bytes
 18309 ;; Hardware stack levels used:    1
 18310 ;; Hardware stack levels required when called:    7
 18311 ;; This function calls:
 18312 ;;		Nothing
 18313 ;; This function is called by:
 18314 ;;		_MacExecuteCommands
 18315 ;; This function uses a non-reentrant model
 18316 ;;
 18317                           
 18318                           	psect	text84
 18319  00925A                     __ptext84:
 18320                           	opt callstack 0
 18321  00925A                     _ExecuteDutyCycle:
 18322                           	opt callstack 16
 18323                           
 18324                           ;lorawan_eu.c: 597: uint8_t maxDCycle;;lorawan_eu.c: 599: maxDCycle = *(ptr++);
 18325                           
 18326                           ; BSR set to: 2
 18327                           ;incstack = 0
 18328  00925A  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 18329  00925E  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 18330  009262  50DF               	movf	indf2,w,c
 18331  009264  0100               	movlb	0	; () banked
 18332  009266  6F65               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 18333                           
 18334                           ; BSR set to: 0
 18335  009268  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 18336  00926A  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 18337                           
 18338                           ; BSR set to: 0
 18339                           ;lorawan_eu.c: 600: if (maxDCycle < 15)
 18340  00926C  0E0F               	movlw	15
 18341  00926E  6165               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 18342  009270  D013               	goto	l1109
 18343                           
 18344                           ; BSR set to: 0
 18345                           ;lorawan_eu.c: 601: {;lorawan_eu.c: 602: loRa.prescaler = 1 << maxDCycle;
 18346  009272  C065  F062         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 18347  009276  0E01               	movlw	1
 18348  009278  6F63               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 18349  00927A  0E00               	movlw	0
 18350  00927C  6F64               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 18351  00927E  2B62               	incf	??_ExecuteDutyCycle& (0+255),f,b
 18352  009280  D003               	goto	u21074
 18353  009282                     u21075:
 18354  009282  90D8               	bcf	status,0,c
 18355  009284  3763               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 18356  009286  3764               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 18357  009288                     u21074:
 18358  009288  2F62               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 18359  00928A  D7FB               	goto	u21075
 18360  00928C  C063  F2E0         	movff	??_ExecuteDutyCycle+1,_loRa+219
 18361  009290  C064  F2E1         	movff	??_ExecuteDutyCycle+2,_loRa+220
 18362                           
 18363                           ;lorawan_eu.c: 603: loRa.macStatus.prescalerModified = 1;
 18364  009294  0102               	movlb	2	; () banked
 18365  009296  8D08               	bsf	(_loRa+3)& (0+255),6,b
 18366  009298                     l1109:
 18367                           
 18368                           ;lorawan_eu.c: 604: };lorawan_eu.c: 606: if (maxDCycle == 255)
 18369  009298  0100               	movlb	0	; () banked
 18370  00929A  2965               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 18371  00929C  A4D8               	btfss	status,2,c
 18372  00929E  D002               	goto	l19540
 18373                           
 18374                           ; BSR set to: 0
 18375                           ;lorawan_eu.c: 607: {;lorawan_eu.c: 608: loRa.macStatus.silentImmediately = 1;
 18376  0092A0  0102               	movlb	2	; () banked
 18377  0092A2  8F07               	bsf	(_loRa+2)& (0+255),7,b
 18378  0092A4                     l19540:
 18379                           
 18380                           ;lorawan_eu.c: 609: };lorawan_eu.c: 611: return ptr;
 18381  0092A4  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 18382  0092A8  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 18383  0092AC  0012               	return		;funcret
 18384  0092AE                     __end_of_ExecuteDutyCycle:
 18385                           	opt callstack 0
 18386                           
 18387 ;; *************** function _ExecuteDevStatus *****************
 18388 ;; Defined at:
 18389 ;;		line 673 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18390 ;; Parameters:    Size  Location     Type
 18391 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18392 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18393 ;; Auto vars:     Size  Location     Type
 18394 ;;		None
 18395 ;; Return value:  Size  Location     Type
 18396 ;;                  2    0[BANK0 ] PTR unsigned char 
 18397 ;; Registers used:
 18398 ;;		wreg, status,2, status,0
 18399 ;; Tracked objects:
 18400 ;;		On entry : 0/0
 18401 ;;		On exit  : 0/0
 18402 ;;		Unchanged: 0/0
 18403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18404 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18407 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18408 ;;Total ram usage:        2 bytes
 18409 ;; Hardware stack levels used:    1
 18410 ;; Hardware stack levels required when called:    7
 18411 ;; This function calls:
 18412 ;;		Nothing
 18413 ;; This function is called by:
 18414 ;;		_MacExecuteCommands
 18415 ;; This function uses a non-reentrant model
 18416 ;;
 18417                           
 18418                           	psect	text85
 18419  00A7B0                     __ptext85:
 18420                           	opt callstack 0
 18421  00A7B0                     _ExecuteDevStatus:
 18422                           	opt callstack 16
 18423                           
 18424                           ;lorawan_eu.c: 675: return ptr;
 18425                           
 18426                           ;incstack = 0
 18427  00A7B0  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 18428  00A7B4  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 18429  00A7B8  0012               	return		;funcret
 18430  00A7BA                     __end_of_ExecuteDevStatus:
 18431                           	opt callstack 0
 18432                           
 18433 ;; *************** function _LORAWAN_Send *****************
 18434 ;; Defined at:
 18435 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18436 ;; Parameters:    Size  Location     Type
 18437 ;;  confirmed       1    wreg     enum E6086
 18438 ;;  port            1  116[BANK0 ] unsigned char 
 18439 ;;  buffer          2  117[BANK0 ] PTR void 
 18440 ;;		 -> sensorsString(40), NULL(0), 
 18441 ;;  bufferLength    1  119[BANK0 ] unsigned char 
 18442 ;; Auto vars:     Size  Location     Type
 18443 ;;  confirmed       1  121[BANK0 ] enum E6086
 18444 ;;  result          1  122[BANK0 ] enum E6059
 18445 ;; Return value:  Size  Location     Type
 18446 ;;                  1    wreg      enum E6059
 18447 ;; Registers used:
 18448 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18449 ;; Tracked objects:
 18450 ;;		On entry : 0/0
 18451 ;;		On exit  : 0/0
 18452 ;;		Unchanged: 0/0
 18453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18454 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18455 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18456 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18457 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18458 ;;Total ram usage:        7 bytes
 18459 ;; Hardware stack levels used:    1
 18460 ;; Hardware stack levels required when called:   13
 18461 ;; This function calls:
 18462 ;;		_AssemblePacket
 18463 ;;		_LORAWAN_GetMaxPayloadSize
 18464 ;;		_RADIO_ReceiveStop
 18465 ;;		_RADIO_Transmit
 18466 ;;		_SelectChannelForTransmission
 18467 ;; This function is called by:
 18468 ;;		_AutomaticReplyCallback
 18469 ;;		_LORAWAN_RxDone
 18470 ;;		_sendValue
 18471 ;; This function uses a non-reentrant model
 18472 ;;
 18473                           
 18474                           	psect	text86
 18475  007024                     __ptext86:
 18476                           	opt callstack 0
 18477  007024                     _LORAWAN_Send:
 18478                           	opt callstack 15
 18479                           
 18480                           ;incstack = 0
 18481                           ;LORAWAN_Send@confirmed stored from wreg
 18482  007024  0100               	movlb	0	; () banked
 18483  007026  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 18484                           
 18485                           ;lorawan.c: 187: LorawanError_t result;;lorawan.c: 189: if (loRa.macStatus.macPause == 1
      +                          )
 18486  007028  0102               	movlb	2	; () banked
 18487  00702A  A108               	btfss	(_loRa+3)& (0+255),0,b
 18488  00702C  D002               	goto	l1527
 18489                           
 18490                           ; BSR set to: 2
 18491                           ;lorawan.c: 190: {;lorawan.c: 191: return MAC_PAUSED;
 18492  00702E  0E08               	movlw	8
 18493  007030  0012               	return	
 18494  007032                     l1527:
 18495                           
 18496                           ; BSR set to: 2
 18497                           ;lorawan.c: 192: };lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 18498  007032  AF07               	btfss	(_loRa+2)& (0+255),7,b
 18499  007034  D002               	goto	l1529
 18500                           
 18501                           ; BSR set to: 2
 18502                           ;lorawan.c: 195: {;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 18503  007036  0E05               	movlw	5
 18504  007038  0012               	return	
 18505  00703A                     l1529:
 18506                           
 18507                           ; BSR set to: 2
 18508                           ;lorawan.c: 197: };lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 18509  00703A  B907               	btfsc	(_loRa+2)& (0+255),4,b
 18510  00703C  D002               	goto	l20006
 18511                           
 18512                           ; BSR set to: 2
 18513                           ;lorawan.c: 200: {;lorawan.c: 201: return NETWORK_NOT_JOINED;
 18514  00703E  0E01               	movlw	1
 18515  007040  0012               	return	
 18516  007042                     l20006:
 18517                           
 18518                           ; BSR set to: 2
 18519                           ;lorawan.c: 202: };lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 18520  007042  0100               	movlb	0	; () banked
 18521  007044  51D4               	movf	LORAWAN_Send@port& (0+255),w,b
 18522  007046  A4D8               	btfss	status,2,c
 18523  007048  D005               	goto	l20014
 18524                           
 18525                           ; BSR set to: 0
 18526  00704A  51D7               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18527  00704C  B4D8               	btfsc	status,2,c
 18528  00704E  D002               	goto	l20014
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;lorawan.c: 205: {;lorawan.c: 206: return INVALID_PARAMETER;
 18532  007050  0E03               	movlw	3
 18533  007052  0012               	return	
 18534  007054                     l20014:
 18535                           
 18536                           ; BSR set to: 0
 18537                           ;lorawan.c: 207: };lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 18538  007054  ECA1  F04A         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 18539  007058  0100               	movlb	0	; () banked
 18540  00705A  6FD8               	movwf	??_LORAWAN_Send& (0+255),b
 18541  00705C  51D7               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18542  00705E  5DD8               	subwf	??_LORAWAN_Send& (0+255),w,b
 18543  007060  B0D8               	btfsc	status,0,c
 18544  007062  D002               	goto	l20020
 18545                           
 18546                           ; BSR set to: 0
 18547                           ;lorawan.c: 211: {;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 18548  007064  0E07               	movlw	7
 18549  007066  0012               	return	
 18550  007068                     l20020:
 18551                           
 18552                           ; BSR set to: 0
 18553                           ;lorawan.c: 213: };lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 18554  007068  0102               	movlb	2	; () banked
 18555  00706A  290B               	incf	(_loRa+6)& (0+255),w,b
 18556  00706C  E10A               	bnz	l20028
 18557  00706E  290C               	incf	(_loRa+7)& (0+255),w,b
 18558  007070  E108               	bnz	l20028
 18559  007072  290D               	incf	(_loRa+8)& (0+255),w,b
 18560  007074  E106               	bnz	l20028
 18561  007076  290E               	incf	(_loRa+9)& (0+255),w,b
 18562  007078  A4D8               	btfss	status,2,c
 18563  00707A  D003               	goto	l20028
 18564                           
 18565                           ; BSR set to: 2
 18566                           ;lorawan.c: 216: {;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 18567  00707C  8309               	bsf	(_loRa+4)& (0+255),1,b
 18568                           
 18569                           ; BSR set to: 2
 18570                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 18571  00707E  0E06               	movlw	6
 18572  007080  0012               	return	
 18573  007082                     l20028:
 18574                           
 18575                           ; BSR set to: 2
 18576                           ;lorawan.c: 220: };lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == 
      +                          loRa.deviceClass))
 18577  007082  5107               	movf	(_loRa+2)& (0+255),w,b
 18578  007084  0B0F               	andlw	15
 18579  007086  0900               	iorlw	0
 18580  007088  B4D8               	btfsc	status,2,c
 18581  00708A  D005               	goto	l20036
 18582                           
 18583                           ; BSR set to: 2
 18584  00708C  5117               	movf	(_loRa+18)& (0+255),w,b
 18585  00708E  A4D8               	btfss	status,2,c
 18586  007090  D002               	goto	l20036
 18587  007092                     u21810:
 18588                           
 18589                           ;lorawan.c: 223: {;lorawan.c: 224: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 18590  007092  0E02               	movlw	2
 18591  007094  0012               	return	
 18592  007096                     l20036:
 18593                           
 18594                           ; BSR set to: 2
 18595                           ;lorawan.c: 225: };lorawan.c: 227: result = SelectChannelForTransmission (1);
 18596  007096  0E01               	movlw	1
 18597  007098  EC8A  F046         	call	_SelectChannelForTransmission
 18598  00709C  0100               	movlb	0	; () banked
 18599  00709E  6FDA               	movwf	LORAWAN_Send@result& (0+255),b
 18600                           
 18601                           ; BSR set to: 0
 18602                           ;lorawan.c: 228: if (result != OK)
 18603  0070A0  51DA               	movf	LORAWAN_Send@result& (0+255),w,b
 18604  0070A2  B4D8               	btfsc	status,2,c
 18605  0070A4  D002               	goto	l20046
 18606                           
 18607                           ; BSR set to: 0
 18608                           ;lorawan.c: 229: {;lorawan.c: 230: return result;
 18609  0070A6  51DA               	movf	LORAWAN_Send@result& (0+255),w,b
 18610  0070A8  0012               	return	
 18611  0070AA                     l20046:
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;lorawan.c: 232: else;lorawan.c: 233: {;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 18615  0070AA  0E02               	movlw	2
 18616  0070AC  0102               	movlb	2	; () banked
 18617  0070AE  1917               	xorwf	(_loRa+18)& (0+255),w,b
 18618  0070B0  B4D8               	btfsc	status,2,c
 18619                           
 18620                           ; BSR set to: 2
 18621                           ;lorawan.c: 235: {;lorawan.c: 236: RADIO_ReceiveStop();
 18622  0070B2  ECB5  F051         	call	_RADIO_ReceiveStop	;wreg free
 18623                           
 18624                           ;lorawan.c: 237: };lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength
      +                          );
 18625  0070B6  C0D4  F0C8         	movff	LORAWAN_Send@port,AssemblePacket@port
 18626  0070BA  C0D5  F0C9         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 18627  0070BE  C0D6  F0CA         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 18628  0070C2  C0D7  F0CB         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 18629  0070C6  0100               	movlb	0	; () banked
 18630  0070C8  6BCC               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 18631  0070CA  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 18632  0070CC  ECE8  F00B         	call	_AssemblePacket
 18633                           
 18634                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 18635  0070D0  0EC8               	movlw	low (_macBuffer+16)
 18636  0070D2  0100               	movlb	0	; () banked
 18637  0070D4  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 18638  0070D6  0E06               	movlw	high (_macBuffer+16)
 18639  0070D8  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 18640  0070DA  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
 18641  0070DE  EC06  F01F         	call	_RADIO_Transmit	;wreg free
 18642  0070E2  0100               	movlb	0	; () banked
 18643  0070E4  51A9               	movf	?_RADIO_Transmit& (0+255),w,b
 18644  0070E6  11AA               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 18645  0070E8  A4D8               	btfss	status,2,c
 18646  0070EA  D7D3               	goto	u21810
 18647                           
 18648                           ; BSR set to: 0
 18649                           ;lorawan.c: 242: {;lorawan.c: 243: loRa.fCntUp.value ++;
 18650  0070EC  0E01               	movlw	1
 18651  0070EE  0102               	movlb	2	; () banked
 18652  0070F0  270B               	addwf	(_loRa+6)& (0+255),f,b
 18653  0070F2  0E00               	movlw	0
 18654  0070F4  230C               	addwfc	(_loRa+7)& (0+255),f,b
 18655  0070F6  230D               	addwfc	(_loRa+8)& (0+255),f,b
 18656  0070F8  230E               	addwfc	(_loRa+9)& (0+255),f,b
 18657                           
 18658                           ;lorawan.c: 245: if (CNF == confirmed)
 18659  0070FA  0100               	movlb	0	; () banked
 18660  0070FC  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 18661  0070FE  A4D8               	btfss	status,2,c
 18662  007100  D002               	goto	l1539
 18663                           
 18664                           ; BSR set to: 0
 18665                           ;lorawan.c: 246: {;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMess
      +                          age = 1;
 18666  007102  0102               	movlb	2	; () banked
 18667  007104  8105               	bsf	_loRa& (0+255),0,b
 18668  007106                     l1539:
 18669                           
 18670                           ;lorawan.c: 248: };lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 18671  007106  0102               	movlb	2	; () banked
 18672  007108  8B05               	bsf	_loRa& (0+255),5,b
 18673                           
 18674                           ; BSR set to: 2
 18675                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 18676  00710A  5107               	movf	(_loRa+2)& (0+255),w,b
 18677  00710C  0BF0               	andlw	-16
 18678  00710E  0901               	iorlw	1
 18679  007110  6F07               	movwf	(_loRa+2)& (0+255),b
 18680                           
 18681                           ; BSR set to: 2
 18682                           ;lorawan.c: 255: };lorawan.c: 256: };lorawan.c: 258: return OK;
 18683                           
 18684                           ;lorawan.c: 251: }
 18685  007112  0E00               	movlw	0
 18686  007114  0012               	return		;funcret
 18687  007116                     __end_of_LORAWAN_Send:
 18688                           	opt callstack 0
 18689                           
 18690 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 18691 ;; Defined at:
 18692 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18693 ;; Parameters:    Size  Location     Type
 18694 ;;		None
 18695 ;; Auto vars:     Size  Location     Type
 18696 ;;  result          1   10[BANK0 ] unsigned char 
 18697 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 18698 ;; Return value:  Size  Location     Type
 18699 ;;                  1    wreg      unsigned char 
 18700 ;; Registers used:
 18701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18702 ;; Tracked objects:
 18703 ;;		On entry : 0/0
 18704 ;;		On exit  : 0/0
 18705 ;;		Unchanged: 0/0
 18706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18708 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18710 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18711 ;;Total ram usage:        3 bytes
 18712 ;; Hardware stack levels used:    1
 18713 ;; Hardware stack levels required when called:    8
 18714 ;; This function calls:
 18715 ;;		_CountfOptsLength
 18716 ;; This function is called by:
 18717 ;;		_LORAWAN_Send
 18718 ;;		_AckRetransmissionCallback
 18719 ;; This function uses a non-reentrant model
 18720 ;;
 18721                           
 18722                           	psect	text87
 18723  009542                     __ptext87:
 18724                           	opt callstack 0
 18725  009542                     _LORAWAN_GetMaxPayloadSize:
 18726                           	opt callstack 19
 18727                           
 18728                           ;lorawan.c: 1559: uint8_t macCommandsLength;;lorawan.c: 1561: macCommandsLength = Countf
      +                          OptsLength();
 18729                           
 18730                           ;incstack = 0
 18731  009542  EC30  F03B         	call	_CountfOptsLength	;wreg free
 18732  009546  0100               	movlb	0	; () banked
 18733  009548  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 18734                           
 18735                           ; BSR set to: 0
 18736                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 18737  00954A  0102               	movlb	2	; () banked
 18738  00954C  51AC               	movf	(_loRa+167)& (0+255),w,b
 18739  00954E  A4D8               	btfss	status,2,c
 18740  009550  D00D               	goto	l19702
 18741                           
 18742                           ; BSR set to: 2
 18743                           ;lorawan.c: 1564: {;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 18744  009552  0E17               	movlw	low _maxPayloadSize
 18745  009554  25E4               	addwf	(_loRa+223)& (0+255),w,b
 18746  009556  6EF6               	movwf	tblptrl,c
 18747  009558  6AF7               	clrf	tblptrh,c
 18748  00955A  0EFF               	movlw	high _maxPayloadSize
 18749  00955C  22F7               	addwfc	tblptrh,f,c
 18750  00955E                     	if	1	;There are 3 active tblptr bytes
 18751  00955E  6AF8               	clrf	tblptru,c
 18752  009560  0E00               	movlw	low (__mediumconst shr (0+16))
 18753  009562  22F8               	addwfc	tblptru,f,c
 18754  009564                     	endif
 18755  009564  0008               	tblrd		*
 18756  009566  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 18757                           
 18758                           ;lorawan.c: 1566: }
 18759  00956A  D010               	goto	l19704
 18760  00956C                     l19702:
 18761                           
 18762                           ; BSR set to: 2
 18763                           ;lorawan.c: 1567: else;lorawan.c: 1568: {;lorawan.c: 1569: result = maxPayloadSize[loRa.
      +                          currentDataRate] - macCommandsLength ;
 18764  00956C  0E17               	movlw	low _maxPayloadSize
 18765  00956E  25E4               	addwf	(_loRa+223)& (0+255),w,b
 18766  009570  6EF6               	movwf	tblptrl,c
 18767  009572  6AF7               	clrf	tblptrh,c
 18768  009574  0EFF               	movlw	high _maxPayloadSize
 18769  009576  22F7               	addwfc	tblptrh,f,c
 18770  009578                     	if	1	;There are 3 active tblptr bytes
 18771  009578  6AF8               	clrf	tblptru,c
 18772  00957A  0E00               	movlw	low (__mediumconst shr (0+16))
 18773  00957C  22F8               	addwfc	tblptru,f,c
 18774  00957E                     	endif
 18775  00957E  0008               	tblrd		*
 18776  009580  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 18777  009584  0100               	movlb	0	; () banked
 18778  009586  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 18779  009588  5D68               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 18780  00958A  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18781  00958C                     l19704:
 18782                           
 18783                           ;lorawan.c: 1570: };lorawan.c: 1572: return result;
 18784  00958C  0100               	movlb	0	; () banked
 18785  00958E  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 18786                           
 18787                           ; BSR set to: 0
 18788  009590  0012               	return		;funcret
 18789  009592                     __end_of_LORAWAN_GetMaxPayloadSize:
 18790                           	opt callstack 0
 18791                           
 18792 ;; *************** function _AssemblePacket *****************
 18793 ;; Defined at:
 18794 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18795 ;; Parameters:    Size  Location     Type
 18796 ;;  confirmed       1    wreg     unsigned char 
 18797 ;;  port            1  104[BANK0 ] unsigned char 
 18798 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 18799 ;;		 -> sensorsString(40), NULL(0), 
 18800 ;;  bufferLength    2  107[BANK0 ] unsigned int 
 18801 ;; Auto vars:     Size  Location     Type
 18802 ;;  confirmed       1  111[BANK0 ] unsigned char 
 18803 ;;  bufferIndex     1  115[BANK0 ] unsigned char 
 18804 ;;  macCmdIdx       1  114[BANK0 ] unsigned char 
 18805 ;;  fCtrl           1  113[BANK0 ] struct .
 18806 ;;  mhdr            1  112[BANK0 ] struct .
 18807 ;; Return value:  Size  Location     Type
 18808 ;;                  1    wreg      void 
 18809 ;; Registers used:
 18810 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18811 ;; Tracked objects:
 18812 ;;		On entry : 0/0
 18813 ;;		On exit  : 0/0
 18814 ;;		Unchanged: 0/0
 18815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18816 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18817 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18819 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18820 ;;Total ram usage:       12 bytes
 18821 ;; Hardware stack levels used:    1
 18822 ;; Hardware stack levels required when called:   12
 18823 ;; This function calls:
 18824 ;;		_AESCmac
 18825 ;;		_AssembleEncryptionBlock
 18826 ;;		_CountfOptsLength
 18827 ;;		_EncryptFRMPayload
 18828 ;;		_FindSmallestDataRate
 18829 ;;		_IncludeMacCommandsResponse
 18830 ;;		_memcpy
 18831 ;;		_memset
 18832 ;; This function is called by:
 18833 ;;		_LORAWAN_Send
 18834 ;; This function uses a non-reentrant model
 18835 ;;
 18836                           
 18837                           	psect	text88
 18838  0017D0                     __ptext88:
 18839                           	opt callstack 0
 18840  0017D0                     _AssemblePacket:
 18841                           	opt callstack 15
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;incstack = 0
 18845                           ;AssemblePacket@confirmed stored from wreg
 18846  0017D0  0100               	movlb	0	; () banked
 18847  0017D2  6FCF               	movwf	AssemblePacket@confirmed& (0+255),b
 18848                           
 18849                           ;lorawan.c: 1674: Mhdr_t mhdr;;lorawan.c: 1675: uint8_t bufferIndex = 16;
 18850  0017D4  0E10               	movlw	16
 18851  0017D6  0100               	movlb	0	; () banked
 18852  0017D8  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18853                           
 18854                           ;lorawan.c: 1676: FCtrl_t fCtrl;;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 18855  0017DA  0E00               	movlw	0
 18856  0017DC  6FD2               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 18857                           
 18858                           ; BSR set to: 0
 18859                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 18860  0017DE  0ED0               	movlw	low AssemblePacket@mhdr
 18861  0017E0  6F60               	movwf	memset@p1& (0+255),b
 18862  0017E2  0E00               	movlw	high AssemblePacket@mhdr
 18863  0017E4  6F61               	movwf	(memset@p1+1)& (0+255),b
 18864  0017E6  0E00               	movlw	0
 18865  0017E8  6F63               	movwf	(memset@c+1)& (0+255),b
 18866  0017EA  0E00               	movlw	0
 18867  0017EC  6F62               	movwf	memset@c& (0+255),b
 18868  0017EE  0E00               	movlw	0
 18869  0017F0  6F65               	movwf	(memset@n+1)& (0+255),b
 18870  0017F2  0E01               	movlw	1
 18871  0017F4  6F64               	movwf	memset@n& (0+255),b
 18872  0017F6  ECCA  F04F         	call	_memset	;wreg free
 18873                           
 18874                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 18875  0017FA  0EB8               	movlw	low _macBuffer
 18876  0017FC  0100               	movlb	0	; () banked
 18877  0017FE  6F60               	movwf	memset@p1& (0+255),b
 18878  001800  0E06               	movlw	high _macBuffer
 18879  001802  6F61               	movwf	(memset@p1+1)& (0+255),b
 18880  001804  0E00               	movlw	0
 18881  001806  6F63               	movwf	(memset@c+1)& (0+255),b
 18882  001808  0E00               	movlw	0
 18883  00180A  6F62               	movwf	memset@c& (0+255),b
 18884  00180C  0E01               	movlw	1
 18885  00180E  6F65               	movwf	(memset@n+1)& (0+255),b
 18886  001810  0E0F               	movlw	15
 18887  001812  6F64               	movwf	memset@n& (0+255),b
 18888  001814  ECCA  F04F         	call	_memset	;wreg free
 18889                           
 18890                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 18891  001818  0E5F               	movlw	low _aesBuffer
 18892  00181A  0100               	movlb	0	; () banked
 18893  00181C  6F60               	movwf	memset@p1& (0+255),b
 18894  00181E  0E01               	movlw	high _aesBuffer
 18895  001820  6F61               	movwf	(memset@p1+1)& (0+255),b
 18896  001822  0E00               	movlw	0
 18897  001824  6F63               	movwf	(memset@c+1)& (0+255),b
 18898  001826  0E00               	movlw	0
 18899  001828  6F62               	movwf	memset@c& (0+255),b
 18900  00182A  0E00               	movlw	0
 18901  00182C  6F65               	movwf	(memset@n+1)& (0+255),b
 18902  00182E  0E10               	movlw	16
 18903  001830  6F64               	movwf	memset@n& (0+255),b
 18904  001832  ECCA  F04F         	call	_memset	;wreg free
 18905                           
 18906                           ;lorawan.c: 1683: if (confirmed == 1)
 18907  001836  0100               	movlb	0	; () banked
 18908  001838  05CF               	decf	AssemblePacket@confirmed& (0+255),w,b
 18909  00183A  A4D8               	btfss	status,2,c
 18910  00183C  D007               	goto	l19722
 18911                           
 18912                           ; BSR set to: 0
 18913                           ;lorawan.c: 1684: {;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 18914  00183E  51D0               	movf	AssemblePacket@mhdr& (0+255),w,b
 18915  001840  0B1F               	andlw	-225
 18916  001842  0980               	iorlw	128
 18917  001844  6FD0               	movwf	AssemblePacket@mhdr& (0+255),b
 18918                           
 18919                           ; BSR set to: 0
 18920                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18921  001846  0102               	movlb	2	; () banked
 18922  001848  8105               	bsf	_loRa& (0+255),0,b
 18923                           
 18924                           ;lorawan.c: 1687: }
 18925  00184A  D004               	goto	l2024
 18926  00184C                     l19722:
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;lorawan.c: 1688: else;lorawan.c: 1689: {;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_
      +                          DATA_UNCONFIRMED_UP;
 18930  00184C  51D0               	movf	AssemblePacket@mhdr& (0+255),w,b
 18931  00184E  0B1F               	andlw	-225
 18932  001850  0940               	iorlw	64
 18933  001852  6FD0               	movwf	AssemblePacket@mhdr& (0+255),b
 18934  001854                     l2024:
 18935                           
 18936                           ;lorawan.c: 1691: };lorawan.c: 1692: mhdr.bits.major = 0;
 18937  001854  0EFC               	movlw	-4
 18938  001856  0100               	movlb	0	; () banked
 18939  001858  17D0               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18940                           
 18941                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 18942  00185A  0EE3               	movlw	-29
 18943  00185C  17D0               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18944                           
 18945                           ; BSR set to: 0
 18946                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 18947  00185E  0EB8               	movlw	low _macBuffer
 18948  001860  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18949  001862  6ED9               	movwf	fsr2l,c
 18950  001864  6ADA               	clrf	fsr2h,c
 18951  001866  0E06               	movlw	high _macBuffer
 18952  001868  22DA               	addwfc	fsr2h,f,c
 18953  00186A  C0D0  FFDF         	movff	AssemblePacket@mhdr,indf2
 18954                           
 18955                           ; BSR set to: 0
 18956  00186E  2BD3               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 18960  001870  0EB8               	movlw	low _macBuffer
 18961  001872  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18962  001874  6F60               	movwf	memcpy@d1& (0+255),b
 18963  001876  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 18964  001878  0E06               	movlw	high _macBuffer
 18965  00187A  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18966  00187C  0E23               	movlw	low (_loRa+30)
 18967  00187E  6F62               	movwf	memcpy@s1& (0+255),b
 18968  001880  0E02               	movlw	high (_loRa+30)
 18969  001882  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18970  001884  0E00               	movlw	0
 18971  001886  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18972  001888  0E04               	movlw	4
 18973  00188A  6F64               	movwf	memcpy@n& (0+255),b
 18974  00188C  ECEC  F047         	call	_memcpy	;wreg free
 18975                           
 18976                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 18977  001890  0100               	movlb	0	; () banked
 18978  001892  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18979  001894  0F04               	addlw	4
 18980  001896  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18981                           
 18982                           ; BSR set to: 0
 18983                           ;lorawan.c: 1699: fCtrl.value = 0;
 18984  001898  0E00               	movlw	0
 18985  00189A  6FD1               	movwf	AssemblePacket@fCtrl& (0+255),b
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 18989  00189C  0102               	movlb	2	; () banked
 18990  00189E  AD07               	btfss	(_loRa+2)& (0+255),6,b
 18991  0018A0  D046               	goto	l2028
 18992                           
 18993                           ; BSR set to: 2
 18994                           ;lorawan.c: 1702: {;lorawan.c: 1703: fCtrl.adr = 1;
 18995  0018A2  0100               	movlb	0	; () banked
 18996  0018A4  8FD1               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 18997                           
 18998                           ; BSR set to: 0
 18999                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 19000  0018A6  0102               	movlb	2	; () banked
 19001  0018A8  51E4               	movf	(_loRa+223)& (0+255),w,b
 19002  0018AA  5DF0               	subwf	(_loRa+235)& (0+255),w,b
 19003  0018AC  B0D8               	btfsc	status,0,c
 19004  0018AE  D03D               	goto	L20
 19005                           
 19006                           ; BSR set to: 2
 19007                           ;lorawan.c: 1705: {;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 19008  0018B0  0100               	movlb	0	; () banked
 19009  0018B2  8DD1               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 19010                           
 19011                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 19012  0018B4  0102               	movlb	2	; () banked
 19013  0018B6  8905               	bsf	_loRa& (0+255),4,b
 19014                           
 19015                           ; BSR set to: 2
 19016                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 19017  0018B8  4BD5               	infsnz	(_loRa+208)& (0+255),f,b
 19018  0018BA  2BD6               	incf	(_loRa+209)& (0+255),f,b
 19019                           
 19020                           ; BSR set to: 2
 19021                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 19022  0018BC  51A7               	movf	(_loRa+162)& (0+255),w,b
 19023  0018BE  0100               	movlb	0	; () banked
 19024  0018C0  6FCD               	movwf	??_AssemblePacket& (0+255),b
 19025  0018C2  6BCE               	clrf	(??_AssemblePacket+1)& (0+255),b
 19026  0018C4  0102               	movlb	2	; () banked
 19027  0018C6  51D5               	movf	(_loRa+208)& (0+255),w,b
 19028  0018C8  0100               	movlb	0	; () banked
 19029  0018CA  19CD               	xorwf	??_AssemblePacket& (0+255),w,b
 19030  0018CC  E10B               	bnz	l19752
 19031  0018CE  0102               	movlb	2	; () banked
 19032  0018D0  51D6               	movf	(_loRa+209)& (0+255),w,b
 19033  0018D2  0100               	movlb	0	; () banked
 19034  0018D4  19CE               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 19035  0018D6  A4D8               	btfss	status,2,c
 19036  0018D8  D005               	goto	l19752
 19037                           
 19038                           ; BSR set to: 0
 19039                           ;lorawan.c: 1711: {;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 19040  0018DA  0E00               	movlw	0
 19041  0018DC  0102               	movlb	2	; () banked
 19042  0018DE  6FF3               	movwf	(_loRa+238)& (0+255),b
 19043  0018E0                     l19748:
 19044                           
 19045                           ; BSR set to: 2
 19046                           ;lorawan.c: 1713: fCtrl.adrAckReq = 0;
 19047  0018E0  0100               	movlb	0	; () banked
 19048  0018E2  D022               	goto	l2029
 19049  0018E4                     l19752:
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;lorawan.c: 1716: else;lorawan.c: 1717: {;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.pro
      +                          tocolParameters.adrAckLimit)
 19053  0018E4  0102               	movlb	2	; () banked
 19054  0018E6  51A7               	movf	(_loRa+162)& (0+255),w,b
 19055  0018E8  0100               	movlb	0	; () banked
 19056  0018EA  6FCD               	movwf	??_AssemblePacket& (0+255),b
 19057  0018EC  6BCE               	clrf	(??_AssemblePacket+1)& (0+255),b
 19058  0018EE  0102               	movlb	2	; () banked
 19059  0018F0  51D5               	movf	(_loRa+208)& (0+255),w,b
 19060  0018F2  0100               	movlb	0	; () banked
 19061  0018F4  5DCD               	subwf	??_AssemblePacket& (0+255),w,b
 19062  0018F6  0102               	movlb	2	; () banked
 19063  0018F8  51D6               	movf	(_loRa+209)& (0+255),w,b
 19064  0018FA  0100               	movlb	0	; () banked
 19065  0018FC  59CE               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 19066  0018FE  B0D8               	btfsc	status,0,c
 19067  001900  D013               	goto	l2029
 19068                           
 19069                           ; BSR set to: 0
 19070                           ;lorawan.c: 1719: {;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 19071  001902  0102               	movlb	2	; () banked
 19072  001904  2BF3               	incf	(_loRa+238)& (0+255),f,b
 19073                           
 19074                           ; BSR set to: 2
 19075                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 19076  001906  51F3               	movf	(_loRa+238)& (0+255),w,b
 19077  001908  5DA8               	subwf	(_loRa+163)& (0+255),w,b
 19078  00190A  B0D8               	btfsc	status,0,c
 19079  00190C  D010               	goto	l2028
 19080                           
 19081                           ; BSR set to: 2
 19082                           ;lorawan.c: 1725: {;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 19083  00190E  0E00               	movlw	0
 19084  001910  6FF3               	movwf	(_loRa+238)& (0+255),b
 19085                           
 19086                           ; BSR set to: 2
 19087                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 19088  001912  ECBC  F03C         	call	_FindSmallestDataRate	;wreg free
 19089  001916  0900               	iorlw	0
 19090  001918  A4D8               	btfss	status,2,c
 19091  00191A  D009               	goto	l2028
 19092                           
 19093                           ;lorawan.c: 1729: {;lorawan.c: 1731: loRa.adrAckCnt = 0;
 19094  00191C  0E00               	movlw	0
 19095  00191E  0102               	movlb	2	; () banked
 19096  001920  6FD6               	movwf	(_loRa+209)& (0+255),b
 19097  001922  0E00               	movlw	0
 19098  001924  6FD5               	movwf	(_loRa+208)& (0+255),b
 19099  001926  D7DC               	goto	l19748
 19100  001928                     l2029:
 19101                           
 19102                           ; BSR set to: 0
 19103                           ;lorawan.c: 1737: else;lorawan.c: 1738: {;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 19104  001928  9DD1               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 19105  00192A                     L20:
 19106                           
 19107                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 19108  00192A  0102               	movlb	2	; () banked
 19109  00192C  9905               	bcf	_loRa& (0+255),4,b
 19110  00192E                     l2028:
 19111                           
 19112                           ;lorawan.c: 1747: };lorawan.c: 1748: };lorawan.c: 1750: if (loRa.lorawanMacStatus.ackReq
      +                          uiredFromNextUplinkMessage == 1)
 19113                           
 19114                           ;lorawan.c: 1741: };lorawan.c: 1742: };lorawan.c: 1743: }
 19115  00192E  0102               	movlb	2	; () banked
 19116  001930  A305               	btfss	_loRa& (0+255),1,b
 19117  001932  D004               	goto	l2034
 19118                           
 19119                           ; BSR set to: 2
 19120                           ;lorawan.c: 1751: {;lorawan.c: 1752: fCtrl.ack = 1;
 19121  001934  0100               	movlb	0	; () banked
 19122  001936  8BD1               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 19123                           
 19124                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 19125  001938  0102               	movlb	2	; () banked
 19126  00193A  9305               	bcf	_loRa& (0+255),1,b
 19127  00193C                     l2034:
 19128                           
 19129                           ; BSR set to: 2
 19130                           ;lorawan.c: 1754: };lorawan.c: 1756: fCtrl.fPending = 0;
 19131  00193C  0100               	movlb	0	; () banked
 19132  00193E  99D1               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 19133                           
 19134                           ; BSR set to: 0
 19135                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 19136  001940  0102               	movlb	2	; () banked
 19137  001942  51AC               	movf	(_loRa+167)& (0+255),w,b
 19138  001944  B4D8               	btfsc	status,2,c
 19139  001946  D005               	goto	u21450
 19140                           
 19141                           ; BSR set to: 2
 19142  001948  0100               	movlb	0	; () banked
 19143  00194A  51CB               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19144  00194C  11CC               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19145  00194E  A4D8               	btfss	status,2,c
 19146  001950  D004               	goto	l19776
 19147  001952                     u21450:
 19148                           
 19149                           ;lorawan.c: 1759: {;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 19150  001952  0EF0               	movlw	-16
 19151  001954  0100               	movlb	0	; () banked
 19152  001956  17D1               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 19153                           
 19154                           ;lorawan.c: 1761: }
 19155  001958  D009               	goto	l19778
 19156  00195A                     l19776:
 19157                           
 19158                           ; BSR set to: 0
 19159                           ;lorawan.c: 1763: else;lorawan.c: 1764: {;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLe
      +                          ngth();
 19160  00195A  EC30  F03B         	call	_CountfOptsLength	;wreg free
 19161  00195E  0100               	movlb	0	; () banked
 19162  001960  6FCD               	movwf	??_AssemblePacket& (0+255),b
 19163  001962  51D1               	movf	AssemblePacket@fCtrl& (0+255),w,b
 19164  001964  19CD               	xorwf	??_AssemblePacket& (0+255),w,b
 19165  001966  0BF0               	andlw	-16
 19166  001968  19CD               	xorwf	??_AssemblePacket& (0+255),w,b
 19167  00196A  6FD1               	movwf	AssemblePacket@fCtrl& (0+255),b
 19168  00196C                     l19778:
 19169                           
 19170                           ; BSR set to: 0
 19171                           ;lorawan.c: 1766: };lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 19172  00196C  0EB8               	movlw	low _macBuffer
 19173  00196E  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19174  001970  6ED9               	movwf	fsr2l,c
 19175  001972  6ADA               	clrf	fsr2h,c
 19176  001974  0E06               	movlw	high _macBuffer
 19177  001976  22DA               	addwfc	fsr2h,f,c
 19178  001978  C0D1  FFDF         	movff	AssemblePacket@fCtrl,indf2
 19179                           
 19180                           ; BSR set to: 0
 19181  00197C  2BD3               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 19185  00197E  0EB8               	movlw	low _macBuffer
 19186  001980  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19187  001982  6F60               	movwf	memcpy@d1& (0+255),b
 19188  001984  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19189  001986  0E06               	movlw	high _macBuffer
 19190  001988  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19191  00198A  0E0B               	movlw	low (_loRa+6)
 19192  00198C  6F62               	movwf	memcpy@s1& (0+255),b
 19193  00198E  0E02               	movlw	high (_loRa+6)
 19194  001990  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19195  001992  0E00               	movlw	0
 19196  001994  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19197  001996  0E02               	movlw	2
 19198  001998  6F64               	movwf	memcpy@n& (0+255),b
 19199  00199A  ECEC  F047         	call	_memcpy	;wreg free
 19200                           
 19201                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 19202  00199E  0100               	movlb	0	; () banked
 19203  0019A0  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19204  0019A2  0F02               	addlw	2
 19205  0019A4  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19206                           
 19207                           ; BSR set to: 0
 19208                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 19209  0019A6  0102               	movlb	2	; () banked
 19210  0019A8  51AC               	movf	(_loRa+167)& (0+255),w,b
 19211  0019AA  B4D8               	btfsc	status,2,c
 19212  0019AC  D011               	goto	l19792
 19213                           
 19214                           ; BSR set to: 2
 19215  0019AE  0100               	movlb	0	; () banked
 19216  0019B0  51CB               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19217  0019B2  11CC               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19218  0019B4  B4D8               	btfsc	status,2,c
 19219  0019B6  D00C               	goto	l19792
 19220                           
 19221                           ; BSR set to: 0
 19222                           ;lorawan.c: 1774: {;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex
      +                          , 1);
 19223  0019B8  0EB8               	movlw	low _macBuffer
 19224  0019BA  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19225  0019BC  0E06               	movlw	high _macBuffer
 19226  0019BE  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19227  0019C0  0ED3               	movlw	low AssemblePacket@bufferIndex
 19228  0019C2  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19229  0019C4  0E00               	movlw	high AssemblePacket@bufferIndex
 19230  0019C6  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19231  0019C8  0E01               	movlw	1
 19232  0019CA  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19233  0019CC  EC05  F011         	call	_IncludeMacCommandsResponse	;wreg free
 19234  0019D0                     l19792:
 19235                           
 19236                           ;lorawan.c: 1776: };lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 19237  0019D0  0EB8               	movlw	low _macBuffer
 19238  0019D2  0100               	movlb	0	; () banked
 19239  0019D4  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19240  0019D6  6ED9               	movwf	fsr2l,c
 19241  0019D8  6ADA               	clrf	fsr2h,c
 19242  0019DA  0E06               	movlw	high _macBuffer
 19243  0019DC  22DA               	addwfc	fsr2h,f,c
 19244  0019DE  C0C8  FFDF         	movff	AssemblePacket@port,indf2
 19245                           
 19246                           ; BSR set to: 0
 19247  0019E2  2BD3               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19248                           
 19249                           ; BSR set to: 0
 19250                           ;lorawan.c: 1780: if (bufferLength != 0)
 19251  0019E4  51CB               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19252  0019E6  11CC               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19253  0019E8  B4D8               	btfsc	status,2,c
 19254  0019EA  D033               	goto	l19804
 19255                           
 19256                           ; BSR set to: 0
 19257                           ;lorawan.c: 1781: {;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLeng
      +                          th);
 19258  0019EC  0EB8               	movlw	low _macBuffer
 19259  0019EE  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19260  0019F0  6F60               	movwf	memcpy@d1& (0+255),b
 19261  0019F2  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19262  0019F4  0E06               	movlw	high _macBuffer
 19263  0019F6  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19264  0019F8  C0C9  F062         	movff	AssemblePacket@buffer,memcpy@s1
 19265  0019FC  C0CA  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 19266  001A00  C0CB  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 19267  001A04  C0CC  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 19268  001A08  ECEC  F047         	call	_memcpy	;wreg free
 19269                           
 19270                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 19271  001A0C  C0C9  F092         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 19272  001A10  C0CA  F093         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 19273  001A14  C0CB  F094         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 19274  001A18  0E00               	movlw	0
 19275  001A1A  0100               	movlb	0	; () banked
 19276  001A1C  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 19277  001A1E  C20B  F096         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19278  001A22  C20C  F097         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19279  001A26  C20D  F098         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19280  001A2A  C20E  F099         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19281  001A2E  0E37               	movlw	low (_loRa+50)
 19282  001A30  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 19283  001A32  0E02               	movlw	high (_loRa+50)
 19284  001A34  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19285  001A36  C0D3  F09C         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19286  001A3A  0EB8               	movlw	low _macBuffer
 19287  001A3C  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19288  001A3E  0E06               	movlw	high _macBuffer
 19289  001A40  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19290  001A42  0E00               	movlw	0
 19291  001A44  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19292  001A46  EC95  F026         	call	_EncryptFRMPayload	;wreg free
 19293                           
 19294                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 19295  001A4A  0100               	movlb	0	; () banked
 19296  001A4C  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19297  001A4E  25CB               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 19298  001A50  D033               	goto	L19
 19299  001A52                     l19804:
 19300                           
 19301                           ; BSR set to: 0
 19302                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 19303  001A52  0102               	movlb	2	; () banked
 19304  001A54  51AC               	movf	(_loRa+167)& (0+255),w,b
 19305  001A56  B4D8               	btfsc	status,2,c
 19306  001A58  D030               	goto	l19810
 19307                           
 19308                           ; BSR set to: 2
 19309                           ;lorawan.c: 1787: {;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx
      +                          , 0 );
 19310  001A5A  0EC7               	movlw	low _radioBuffer
 19311  001A5C  0100               	movlb	0	; () banked
 19312  001A5E  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19313  001A60  0E07               	movlw	high _radioBuffer
 19314  001A62  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19315  001A64  0ED2               	movlw	low AssemblePacket@macCmdIdx
 19316  001A66  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19317  001A68  0E00               	movlw	high AssemblePacket@macCmdIdx
 19318  001A6A  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19319  001A6C  0E00               	movlw	0
 19320  001A6E  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19321  001A70  EC05  F011         	call	_IncludeMacCommandsResponse	;wreg free
 19322                           
 19323                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 19324  001A74  0EC7               	movlw	low _radioBuffer
 19325  001A76  0100               	movlb	0	; () banked
 19326  001A78  6F92               	movwf	EncryptFRMPayload@buffer& (0+255),b
 19327  001A7A  0E07               	movlw	high _radioBuffer
 19328  001A7C  6F93               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 19329  001A7E  C0D2  F094         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 19330  001A82  0E00               	movlw	0
 19331  001A84  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 19332  001A86  C20B  F096         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19333  001A8A  C20C  F097         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19334  001A8E  C20D  F098         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19335  001A92  C20E  F099         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19336  001A96  0E27               	movlw	low (_loRa+34)
 19337  001A98  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 19338  001A9A  0E02               	movlw	high (_loRa+34)
 19339  001A9C  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19340  001A9E  C0D3  F09C         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19341  001AA2  0EB8               	movlw	low _macBuffer
 19342  001AA4  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19343  001AA6  0E06               	movlw	high _macBuffer
 19344  001AA8  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19345  001AAA  0E00               	movlw	0
 19346  001AAC  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19347  001AAE  EC95  F026         	call	_EncryptFRMPayload	;wreg free
 19348                           
 19349                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 19350  001AB2  0100               	movlb	0	; () banked
 19351  001AB4  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19352  001AB6  25D2               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 19353  001AB8                     L19:
 19354  001AB8  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19355  001ABA                     l19810:
 19356                           
 19357                           ;lorawan.c: 1793: };lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, buff
      +                          erIndex - 16, 0x49, 0);
 19358  001ABA  C20B  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 19359  001ABE  C20C  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 19360  001AC2  C20D  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 19361  001AC6  C20E  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 19362  001ACA  0100               	movlb	0	; () banked
 19363  001ACC  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19364  001ACE  0FF0               	addlw	240
 19365  001AD0  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 19366  001AD2  0E49               	movlw	73
 19367  001AD4  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19368  001AD6  0E00               	movlw	0
 19369  001AD8  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 19370  001ADA  0E00               	movlw	0
 19371  001ADC  ECC7  F03A         	call	_AssembleEncryptionBlock
 19372                           
 19373                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 19374  001AE0  0EB8               	movlw	low _macBuffer
 19375  001AE2  0100               	movlb	0	; () banked
 19376  001AE4  6F60               	movwf	memcpy@d1& (0+255),b
 19377  001AE6  0E06               	movlw	high _macBuffer
 19378  001AE8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19379  001AEA  0E5F               	movlw	low _aesBuffer
 19380  001AEC  6F62               	movwf	memcpy@s1& (0+255),b
 19381  001AEE  0E01               	movlw	high _aesBuffer
 19382  001AF0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19383  001AF2  0E00               	movlw	0
 19384  001AF4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19385  001AF6  0E10               	movlw	16
 19386  001AF8  6F64               	movwf	memcpy@n& (0+255),b
 19387  001AFA  ECEC  F047         	call	_memcpy	;wreg free
 19388                           
 19389                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 19390  001AFE  0E27               	movlw	low (_loRa+34)
 19391  001B00  0100               	movlb	0	; () banked
 19392  001B02  6FBA               	movwf	AESCmac@key& (0+255),b
 19393  001B04  0E02               	movlw	high (_loRa+34)
 19394  001B06  6FBB               	movwf	(AESCmac@key+1)& (0+255),b
 19395  001B08  0E5F               	movlw	low _aesBuffer
 19396  001B0A  6FBC               	movwf	AESCmac@output& (0+255),b
 19397  001B0C  0E01               	movlw	high _aesBuffer
 19398  001B0E  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 19399  001B10  0EB8               	movlw	low _macBuffer
 19400  001B12  6FBE               	movwf	AESCmac@input& (0+255),b
 19401  001B14  0E06               	movlw	high _macBuffer
 19402  001B16  6FBF               	movwf	(AESCmac@input+1)& (0+255),b
 19403  001B18  C0D3  F0C0         	movff	AssemblePacket@bufferIndex,AESCmac@size
 19404  001B1C  ECAD  F00D         	call	_AESCmac	;wreg free
 19405                           
 19406                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 19407  001B20  0EB8               	movlw	low _macBuffer
 19408  001B22  0100               	movlb	0	; () banked
 19409  001B24  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19410  001B26  6F60               	movwf	memcpy@d1& (0+255),b
 19411  001B28  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19412  001B2A  0E06               	movlw	high _macBuffer
 19413  001B2C  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19414  001B2E  0E5F               	movlw	low _aesBuffer
 19415  001B30  6F62               	movwf	memcpy@s1& (0+255),b
 19416  001B32  0E01               	movlw	high _aesBuffer
 19417  001B34  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19418  001B36  0E00               	movlw	0
 19419  001B38  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19420  001B3A  0E04               	movlw	4
 19421  001B3C  6F64               	movwf	memcpy@n& (0+255),b
 19422  001B3E  ECEC  F047         	call	_memcpy	;wreg free
 19423                           
 19424                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 19425  001B42  0100               	movlb	0	; () banked
 19426  001B44  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19427  001B46  0F04               	addlw	4
 19428  001B48  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19429                           
 19430                           ; BSR set to: 0
 19431                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 19432  001B4A  0EF0               	movlw	240
 19433  001B4C  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19434  001B4E  0102               	movlb	2	; () banked
 19435  001B50  6FD9               	movwf	(_loRa+212)& (0+255),b
 19436  001B52  6BDA               	clrf	(_loRa+213)& (0+255),b
 19437  001B54  0EFF               	movlw	255
 19438  001B56  23DA               	addwfc	(_loRa+213)& (0+255),f,b
 19439                           
 19440                           ; BSR set to: 2
 19441  001B58  0012               	return		;funcret
 19442  001B5A                     __end_of_AssemblePacket:
 19443                           	opt callstack 0
 19444                           
 19445 ;; *************** function _IncludeMacCommandsResponse *****************
 19446 ;; Defined at:
 19447 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19448 ;; Parameters:    Size  Location     Type
 19449 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 19450 ;;		 -> macBuffer(271), radioBuffer(271), 
 19451 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 19452 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 19453 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 19454 ;; Auto vars:     Size  Location     Type
 19455 ;;  bufferIndex     1   13[BANK0 ] unsigned char 
 19456 ;;  i               1   12[BANK0 ] unsigned char 
 19457 ;; Return value:  Size  Location     Type
 19458 ;;                  1    wreg      void 
 19459 ;; Registers used:
 19460 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19461 ;; Tracked objects:
 19462 ;;		On entry : 0/0
 19463 ;;		On exit  : 0/0
 19464 ;;		Unchanged: 0/0
 19465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19466 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19467 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19468 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19469 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19470 ;;Total ram usage:       14 bytes
 19471 ;; Hardware stack levels used:    1
 19472 ;; Hardware stack levels required when called:    8
 19473 ;; This function calls:
 19474 ;;		_RADIO_GetPacketSnr
 19475 ;; This function is called by:
 19476 ;;		_AssemblePacket
 19477 ;; This function uses a non-reentrant model
 19478 ;;
 19479                           
 19480                           	psect	text89
 19481  00220A                     __ptext89:
 19482                           	opt callstack 0
 19483  00220A                     _IncludeMacCommandsResponse:
 19484                           	opt callstack 18
 19485                           
 19486                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 19487                           
 19488                           ; BSR set to: 2
 19489                           ;incstack = 0
 19490  00220A  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19491  00220E  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19492  002212  50DF               	movf	indf2,w,c
 19493  002214  0100               	movlb	0	; () banked
 19494  002216  6F6D               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 19495                           
 19496                           ; BSR set to: 0
 19497                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 19498  002218  0E00               	movlw	0
 19499  00221A  6F6C               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19500  00221C  D182               	goto	l19396
 19501  00221E                     l19298:
 19502                           
 19503                           ; BSR set to: 0
 19504                           ;lorawan.c: 1851: {;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receiv
      +                          edCid != 0xFF))
 19505  00221E  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 19506  002220  B4D8               	btfsc	status,2,c
 19507  002222  D160               	goto	l19392
 19508                           
 19509                           ; BSR set to: 0
 19510  002224  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19511  002226  0D02               	mullw	2
 19512  002228  0EAD               	movlw	low (_loRa+168)
 19513  00222A  24F3               	addwf	prodl,w,c
 19514  00222C  6ED9               	movwf	fsr2l,c
 19515  00222E  0E02               	movlw	high (_loRa+168)
 19516  002230  20F4               	addwfc	prodh,w,c
 19517  002232  6EDA               	movwf	fsr2h,c
 19518  002234  28DE               	incf	postinc2,w,c
 19519  002236  B4D8               	btfsc	status,2,c
 19520  002238  D155               	goto	l19392
 19521                           
 19522                           ; BSR set to: 0
 19523                           ;lorawan.c: 1853: {;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdRep
      +                          lyLen[loRa.macCommands[i].receivedCid - 2]) > 0x0F)
 19524  00223A  0EFE               	movlw	254
 19525  00223C  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19526  00223E  0EFF               	movlw	255
 19527  002240  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19528  002242  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19529  002244  0D02               	mullw	2
 19530  002246  0EAD               	movlw	low (_loRa+168)
 19531  002248  24F3               	addwf	prodl,w,c
 19532  00224A  6ED9               	movwf	fsr2l,c
 19533  00224C  0E02               	movlw	high (_loRa+168)
 19534  00224E  20F4               	addwfc	prodh,w,c
 19535  002250  6EDA               	movwf	fsr2h,c
 19536  002252  50DF               	movf	indf2,w,c
 19537  002254  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 19538  002256  6B68               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 19539  002258  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 19540  00225A  2767               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 19541  00225C  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19542  00225E  2368               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 19543  002260  0E27               	movlw	low _macEndDevCmdReplyLen
 19544  002262  2567               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 19545  002264  6EF6               	movwf	tblptrl,c
 19546  002266  0EFF               	movlw	high _macEndDevCmdReplyLen
 19547  002268  2168               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 19548  00226A  6EF7               	movwf	tblptrh,c
 19549  00226C                     	if	1	;There are 3 active tblptr bytes
 19550  00226C  6AF8               	clrf	tblptru,c
 19551  00226E  0E00               	movlw	low (__mediumconst shr (0+16))
 19552  002270  22F8               	addwfc	tblptru,f,c
 19553  002272                     	endif
 19554  002272  0008               	tblrd		*
 19555  002274  50F5               	movf	tablat,w,c
 19556  002276  C06D  F069         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 19557  00227A  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 19558  00227C  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19559  00227E  0E00               	movlw	0
 19560  002280  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19561  002282  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19562  002286  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19563  00228A  50DF               	movf	indf2,w,c
 19564  00228C  6F6B               	movwf	(??_IncludeMacCommandsResponse+6)& (0+255),b
 19565  00228E  516B               	movf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 19566  002290  5F69               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19567  002292  0E00               	movlw	0
 19568  002294  5B6A               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19569  002296  BF6A               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 19570  002298  D125               	goto	l19392
 19571  00229A  516A               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 19572  00229C  E105               	bnz	u20790
 19573  00229E  0E10               	movlw	16
 19574  0022A0  5D69               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 19575  0022A2  B0D8               	btfsc	status,0,c
 19576  0022A4  D144               	goto	u20900
 19577  0022A6  D11E               	goto	l19392
 19578  0022A8                     u20790:
 19579  0022A8  D142               	goto	u20900
 19580  0022AA                     l19306:
 19581                           
 19582                           ; BSR set to: 0
 19583                           ;lorawan.c: 1862: {;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 19584  0022AA  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19585  0022AC  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19586  0022AE  6ED9               	movwf	fsr2l,c
 19587  0022B0  0E00               	movlw	0
 19588  0022B2  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19589  0022B4  6EDA               	movwf	fsr2h,c
 19590  0022B6  0E03               	movlw	3
 19591  0022B8  6EDF               	movwf	indf2,c
 19592                           
 19593                           ; BSR set to: 0
 19594  0022BA  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19595                           
 19596                           ; BSR set to: 0
 19597                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 19598  0022BC  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19599  0022BE  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19600  0022C0  6ED9               	movwf	fsr2l,c
 19601  0022C2  0E00               	movlw	0
 19602  0022C4  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19603  0022C6  6EDA               	movwf	fsr2h,c
 19604  0022C8  0E00               	movlw	0
 19605  0022CA  6EDF               	movwf	indf2,c
 19606                           
 19607                           ; BSR set to: 0
 19608                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 19609  0022CC  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19610  0022CE  0D02               	mullw	2
 19611  0022D0  0EAE               	movlw	low (_loRa+169)
 19612  0022D2  24F3               	addwf	prodl,w,c
 19613  0022D4  6ED9               	movwf	fsr2l,c
 19614  0022D6  0E02               	movlw	high (_loRa+169)
 19615  0022D8  20F4               	addwfc	prodh,w,c
 19616  0022DA  6EDA               	movwf	fsr2h,c
 19617  0022DC  0102               	movlb	2	; () banked
 19618  0022DE  A0DF               	btfss	indf2,0,c
 19619  0022E0  D009               	goto	l19316
 19620                           
 19621                           ; BSR set to: 2
 19622                           ;lorawan.c: 1866: {;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 19623  0022E2  0100               	movlb	0	; () banked
 19624  0022E4  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19625  0022E6  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19626  0022E8  6ED9               	movwf	fsr2l,c
 19627  0022EA  0E00               	movlw	0
 19628  0022EC  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19629  0022EE  6EDA               	movwf	fsr2h,c
 19630  0022F0  0E00               	movlw	0
 19631  0022F2  80DB               	bsf	plusw2,0,c
 19632  0022F4                     l19316:
 19633                           
 19634                           ;lorawan.c: 1868: };lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 19635  0022F4  0100               	movlb	0	; () banked
 19636  0022F6  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19637  0022F8  0D02               	mullw	2
 19638  0022FA  0EAE               	movlw	low (_loRa+169)
 19639  0022FC  24F3               	addwf	prodl,w,c
 19640  0022FE  6ED9               	movwf	fsr2l,c
 19641  002300  0E02               	movlw	high (_loRa+169)
 19642  002302  20F4               	addwfc	prodh,w,c
 19643  002304  6EDA               	movwf	fsr2h,c
 19644  002306  0102               	movlb	2	; () banked
 19645  002308  A2DF               	btfss	indf2,1,c
 19646  00230A  D009               	goto	l19320
 19647                           
 19648                           ; BSR set to: 2
 19649                           ;lorawan.c: 1871: {;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 19650  00230C  0100               	movlb	0	; () banked
 19651  00230E  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19652  002310  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19653  002312  6ED9               	movwf	fsr2l,c
 19654  002314  0E00               	movlw	0
 19655  002316  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19656  002318  6EDA               	movwf	fsr2h,c
 19657  00231A  0E00               	movlw	0
 19658  00231C  82DB               	bsf	plusw2,1,c
 19659  00231E                     l19320:
 19660                           
 19661                           ;lorawan.c: 1873: };lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 19662  00231E  0100               	movlb	0	; () banked
 19663  002320  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19664  002322  0D02               	mullw	2
 19665  002324  0EAE               	movlw	low (_loRa+169)
 19666  002326  24F3               	addwf	prodl,w,c
 19667  002328  6ED9               	movwf	fsr2l,c
 19668  00232A  0E02               	movlw	high (_loRa+169)
 19669  00232C  20F4               	addwfc	prodh,w,c
 19670  00232E  6EDA               	movwf	fsr2h,c
 19671  002330  0102               	movlb	2	; () banked
 19672  002332  A4DF               	btfss	indf2,2,c
 19673  002334  D009               	goto	l19324
 19674  002336                     u20820:
 19675                           
 19676                           ; BSR set to: 2
 19677                           ;lorawan.c: 1876: {;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 19678  002336  0100               	movlb	0	; () banked
 19679  002338  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19680  00233A  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19681  00233C  6ED9               	movwf	fsr2l,c
 19682  00233E  0E00               	movlw	0
 19683  002340  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19684  002342  6EDA               	movwf	fsr2h,c
 19685  002344  0E00               	movlw	0
 19686  002346  84DB               	bsf	plusw2,2,c
 19687  002348                     l19324:
 19688                           
 19689                           ;lorawan.c: 1878: };lorawan.c: 1879: bufferIndex ++;
 19690  002348  0100               	movlb	0	; () banked
 19691  00234A  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19692                           
 19693                           ;lorawan.c: 1880: };lorawan.c: 1881: break;
 19694  00234C  D0E9               	goto	l19394
 19695  00234E                     l19326:
 19696                           
 19697                           ; BSR set to: 0
 19698                           ;lorawan.c: 1884: {;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 19699  00234E  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19700  002350  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19701  002352  6ED9               	movwf	fsr2l,c
 19702  002354  0E00               	movlw	0
 19703  002356  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19704  002358  6EDA               	movwf	fsr2h,c
 19705  00235A  0E05               	movlw	5
 19706  00235C  6EDF               	movwf	indf2,c
 19707                           
 19708                           ; BSR set to: 0
 19709  00235E  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19710                           
 19711                           ; BSR set to: 0
 19712                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 19713  002360  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19714  002362  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19715  002364  6ED9               	movwf	fsr2l,c
 19716  002366  0E00               	movlw	0
 19717  002368  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19718  00236A  6EDA               	movwf	fsr2h,c
 19719  00236C  0E00               	movlw	0
 19720  00236E  6EDF               	movwf	indf2,c
 19721                           
 19722                           ; BSR set to: 0
 19723                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 19724  002370  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19725  002372  0D02               	mullw	2
 19726  002374  0EAE               	movlw	low (_loRa+169)
 19727  002376  24F3               	addwf	prodl,w,c
 19728  002378  6ED9               	movwf	fsr2l,c
 19729  00237A  0E02               	movlw	high (_loRa+169)
 19730  00237C  20F4               	addwfc	prodh,w,c
 19731  00237E  6EDA               	movwf	fsr2h,c
 19732  002380  0102               	movlb	2	; () banked
 19733  002382  A6DF               	btfss	indf2,3,c
 19734  002384  D009               	goto	l19336
 19735                           
 19736                           ; BSR set to: 2
 19737                           ;lorawan.c: 1888: {;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 19738  002386  0100               	movlb	0	; () banked
 19739  002388  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19740  00238A  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19741  00238C  6ED9               	movwf	fsr2l,c
 19742  00238E  0E00               	movlw	0
 19743  002390  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19744  002392  6EDA               	movwf	fsr2h,c
 19745  002394  0E00               	movlw	0
 19746  002396  80DB               	bsf	plusw2,0,c
 19747  002398                     l19336:
 19748                           
 19749                           ;lorawan.c: 1890: };lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck ==
      +                           1)
 19750  002398  0100               	movlb	0	; () banked
 19751  00239A  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19752  00239C  0D02               	mullw	2
 19753  00239E  0EAE               	movlw	low (_loRa+169)
 19754  0023A0  24F3               	addwf	prodl,w,c
 19755  0023A2  6ED9               	movwf	fsr2l,c
 19756  0023A4  0E02               	movlw	high (_loRa+169)
 19757  0023A6  20F4               	addwfc	prodh,w,c
 19758  0023A8  6EDA               	movwf	fsr2h,c
 19759  0023AA  0102               	movlb	2	; () banked
 19760  0023AC  A8DF               	btfss	indf2,4,c
 19761  0023AE  D009               	goto	l19340
 19762                           
 19763                           ; BSR set to: 2
 19764                           ;lorawan.c: 1893: {;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 19765  0023B0  0100               	movlb	0	; () banked
 19766  0023B2  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19767  0023B4  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19768  0023B6  6ED9               	movwf	fsr2l,c
 19769  0023B8  0E00               	movlw	0
 19770  0023BA  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19771  0023BC  6EDA               	movwf	fsr2h,c
 19772  0023BE  0E00               	movlw	0
 19773  0023C0  82DB               	bsf	plusw2,1,c
 19774  0023C2                     l19340:
 19775                           
 19776                           ;lorawan.c: 1895: };lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 19777  0023C2  0100               	movlb	0	; () banked
 19778  0023C4  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19779  0023C6  0D02               	mullw	2
 19780  0023C8  0EAE               	movlw	low (_loRa+169)
 19781  0023CA  24F3               	addwf	prodl,w,c
 19782  0023CC  6ED9               	movwf	fsr2l,c
 19783  0023CE  0E02               	movlw	high (_loRa+169)
 19784  0023D0  20F4               	addwfc	prodh,w,c
 19785  0023D2  6EDA               	movwf	fsr2h,c
 19786  0023D4  0102               	movlb	2	; () banked
 19787  0023D6  BADF               	btfsc	indf2,5,c
 19788  0023D8  D7AE               	goto	u20820
 19789  0023DA  D7B6               	goto	l19324
 19790  0023DC                     l19346:
 19791                           
 19792                           ; BSR set to: 0
 19793                           ;lorawan.c: 1907: {;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 19794  0023DC  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19795  0023DE  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19796  0023E0  6ED9               	movwf	fsr2l,c
 19797  0023E2  0E00               	movlw	0
 19798  0023E4  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19799  0023E6  6EDA               	movwf	fsr2h,c
 19800  0023E8  0E06               	movlw	6
 19801  0023EA  6EDF               	movwf	indf2,c
 19802                           
 19803                           ; BSR set to: 0
 19804  0023EC  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19805                           
 19806                           ; BSR set to: 0
 19807                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 19808  0023EE  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19809  0023F0  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19810  0023F2  6ED9               	movwf	fsr2l,c
 19811  0023F4  0E00               	movlw	0
 19812  0023F6  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19813  0023F8  6EDA               	movwf	fsr2h,c
 19814  0023FA  C2E5  FFDF         	movff	_loRa+224,indf2
 19815  0023FE  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19816                           
 19817                           ; BSR set to: 0
 19818                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 19819  002400  EC50  F054         	call	_RADIO_GetPacketSnr	;wreg free
 19820  002404  0A80               	xorlw	128
 19821  002406  0FA0               	addlw	160
 19822  002408  A0D8               	btfss	status,0,c
 19823  00240A  D006               	goto	u20870
 19824  00240C  EC50  F054         	call	_RADIO_GetPacketSnr	;wreg free
 19825  002410  0A80               	xorlw	128
 19826  002412  0F60               	addlw	-160
 19827  002414  A0D8               	btfss	status,0,c
 19828  002416  D009               	goto	l19360
 19829  002418                     u20870:
 19830                           
 19831                           ;lorawan.c: 1911: {;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 19832  002418  0100               	movlb	0	; () banked
 19833  00241A  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19834  00241C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19835  00241E  6ED9               	movwf	fsr2l,c
 19836  002420  0E00               	movlw	0
 19837  002422  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19838  002424  6EDA               	movwf	fsr2h,c
 19839  002426  0E20               	movlw	32
 19840  002428  D00A               	goto	L21
 19841  00242A                     l19360:
 19842                           
 19843                           ;lorawan.c: 1914: else;lorawan.c: 1915: {;lorawan.c: 1916: macBuffer[bufferIndex++] = ((
      +                          uint8_t)RADIO_GetPacketSnr() & 0x3F);
 19844  00242A  0100               	movlb	0	; () banked
 19845  00242C  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19846  00242E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19847  002430  6ED9               	movwf	fsr2l,c
 19848  002432  0E00               	movlw	0
 19849  002434  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19850  002436  6EDA               	movwf	fsr2h,c
 19851  002438  EC50  F054         	call	_RADIO_GetPacketSnr	;wreg free
 19852  00243C  0B3F               	andlw	63
 19853  00243E                     L21:
 19854  00243E  6EDF               	movwf	indf2,c
 19855  002440  D783               	goto	l19324
 19856  002442                     l19364:
 19857                           
 19858                           ; BSR set to: 0
 19859                           ;lorawan.c: 1922: {;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 19860  002442  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19861  002444  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19862  002446  6ED9               	movwf	fsr2l,c
 19863  002448  0E00               	movlw	0
 19864  00244A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19865  00244C  6EDA               	movwf	fsr2h,c
 19866  00244E  0E07               	movlw	7
 19867  002450  6EDF               	movwf	indf2,c
 19868                           
 19869                           ; BSR set to: 0
 19870  002452  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19871                           
 19872                           ; BSR set to: 0
 19873                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 19874  002454  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19875  002456  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19876  002458  6ED9               	movwf	fsr2l,c
 19877  00245A  0E00               	movlw	0
 19878  00245C  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19879  00245E  6EDA               	movwf	fsr2h,c
 19880  002460  0E00               	movlw	0
 19881  002462  6EDF               	movwf	indf2,c
 19882                           
 19883                           ; BSR set to: 0
 19884                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 19885  002464  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19886  002466  0D02               	mullw	2
 19887  002468  0EAE               	movlw	low (_loRa+169)
 19888  00246A  24F3               	addwf	prodl,w,c
 19889  00246C  6ED9               	movwf	fsr2l,c
 19890  00246E  0E02               	movlw	high (_loRa+169)
 19891  002470  20F4               	addwfc	prodh,w,c
 19892  002472  6EDA               	movwf	fsr2h,c
 19893  002474  0102               	movlb	2	; () banked
 19894  002476  AEDF               	btfss	indf2,7,c
 19895  002478  D009               	goto	l19374
 19896                           
 19897                           ; BSR set to: 2
 19898                           ;lorawan.c: 1926: {;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 19899  00247A  0100               	movlb	0	; () banked
 19900  00247C  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19901  00247E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19902  002480  6ED9               	movwf	fsr2l,c
 19903  002482  0E00               	movlw	0
 19904  002484  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19905  002486  6EDA               	movwf	fsr2h,c
 19906  002488  0E00               	movlw	0
 19907  00248A  80DB               	bsf	plusw2,0,c
 19908  00248C                     l19374:
 19909                           
 19910                           ;lorawan.c: 1928: };lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 19911  00248C  0100               	movlb	0	; () banked
 19912  00248E  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19913  002490  0D02               	mullw	2
 19914  002492  0EAE               	movlw	low (_loRa+169)
 19915  002494  24F3               	addwf	prodl,w,c
 19916  002496  6ED9               	movwf	fsr2l,c
 19917  002498  0E02               	movlw	high (_loRa+169)
 19918  00249A  20F4               	addwfc	prodh,w,c
 19919  00249C  6EDA               	movwf	fsr2h,c
 19920  00249E  0102               	movlb	2	; () banked
 19921  0024A0  ACDF               	btfss	indf2,6,c
 19922  0024A2  D752               	goto	l19324
 19923                           
 19924                           ; BSR set to: 2
 19925                           ;lorawan.c: 1931: {;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 19926  0024A4  0100               	movlb	0	; () banked
 19927  0024A6  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19928  0024A8  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19929  0024AA  6ED9               	movwf	fsr2l,c
 19930  0024AC  0E00               	movlw	0
 19931  0024AE  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19932  0024B0  6EDA               	movwf	fsr2h,c
 19933  0024B2  0E00               	movlw	0
 19934  0024B4  82DB               	bsf	plusw2,1,c
 19935  0024B6  D748               	goto	l19324
 19936  0024B8                     l2076:
 19937                           
 19938                           ; BSR set to: 0
 19939                           ;lorawan.c: 1939: {;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 19940  0024B8  0102               	movlb	2	; () banked
 19941  0024BA  69E2               	setf	(_loRa+221)& (0+255),b
 19942                           
 19943                           ; BSR set to: 2
 19944                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 19945  0024BC  0E00               	movlw	0
 19946  0024BE  6FE3               	movwf	(_loRa+222)& (0+255),b
 19947  0024C0                     l19382:
 19948                           
 19949                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 19950  0024C0  0100               	movlb	0	; () banked
 19951  0024C2  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19952  0024C4  0D02               	mullw	2
 19953  0024C6  0EAD               	movlw	low (_loRa+168)
 19954  0024C8  24F3               	addwf	prodl,w,c
 19955  0024CA  6ED9               	movwf	fsr2l,c
 19956  0024CC  0E02               	movlw	high (_loRa+168)
 19957  0024CE  20F4               	addwfc	prodh,w,c
 19958  0024D0  6EDA               	movwf	fsr2h,c
 19959  0024D2  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19960  0024D4  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19961  0024D6  6EE9               	movwf	fsr0l,c
 19962  0024D8  0E00               	movlw	0
 19963  0024DA  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19964  0024DC  6EEA               	movwf	fsr0h,c
 19965  0024DE  CFDF FFEF          	movff	indf2,indf0
 19966  0024E2  D732               	goto	l19324
 19967  0024E4                     l19392:
 19968                           
 19969                           ; BSR set to: 0
 19970  0024E4  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19971  0024E6  0D02               	mullw	2
 19972  0024E8  0EAD               	movlw	low (_loRa+168)
 19973  0024EA  24F3               	addwf	prodl,w,c
 19974  0024EC  6ED9               	movwf	fsr2l,c
 19975  0024EE  0E02               	movlw	high (_loRa+168)
 19976  0024F0  20F4               	addwfc	prodh,w,c
 19977  0024F2  6EDA               	movwf	fsr2h,c
 19978  0024F4  50DF               	movf	indf2,w,c
 19979                           
 19980                           ; Switch size 1, requested type "simple"
 19981                           ; Number of cases is 7, Range of values is 2 to 8
 19982                           ; switch strategies available:
 19983                           ; Name         Instructions Cycles
 19984                           ; simple_byte           22    12 (average)
 19985                           ;	Chosen strategy is simple_byte
 19986  0024F6  0A02               	xorlw	2	; case 2
 19987  0024F8  B4D8               	btfsc	status,2,c
 19988  0024FA  D7DE               	goto	l2076
 19989  0024FC  0A01               	xorlw	1	; case 3
 19990  0024FE  B4D8               	btfsc	status,2,c
 19991  002500  D6D4               	goto	l19306
 19992  002502  0A07               	xorlw	7	; case 4
 19993  002504  B4D8               	btfsc	status,2,c
 19994  002506  D7DC               	goto	l19382
 19995  002508  0A01               	xorlw	1	; case 5
 19996  00250A  B4D8               	btfsc	status,2,c
 19997  00250C  D720               	goto	l19326
 19998  00250E  0A03               	xorlw	3	; case 6
 19999  002510  B4D8               	btfsc	status,2,c
 20000  002512  D764               	goto	l19346
 20001  002514  0A01               	xorlw	1	; case 7
 20002  002516  B4D8               	btfsc	status,2,c
 20003  002518  D794               	goto	l19364
 20004  00251A  0A0F               	xorlw	15	; case 8
 20005  00251C  B4D8               	btfsc	status,2,c
 20006  00251E  D7D0               	goto	l19382
 20007  002520                     l19394:
 20008                           
 20009                           ; BSR set to: 0
 20010  002520  2B6C               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 20011  002522                     l19396:
 20012                           
 20013                           ; BSR set to: 0
 20014  002522  0102               	movlb	2	; () banked
 20015  002524  51AC               	movf	(_loRa+167)& (0+255),w,b
 20016  002526  0100               	movlb	0	; () banked
 20017  002528  5D6C               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 20018  00252A  A0D8               	btfss	status,0,c
 20019  00252C  D678               	goto	l19298
 20020  00252E                     u20900:
 20021                           
 20022                           ; BSR set to: 0
 20023                           ;lorawan.c: 1957: };lorawan.c: 1959: *pBufferIndex = bufferIndex;
 20024  00252E  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 20025  002532  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 20026  002536  C06D  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 20027                           
 20028                           ; BSR set to: 0
 20029  00253A  0012               	return		;funcret
 20030  00253C                     __end_of_IncludeMacCommandsResponse:
 20031                           	opt callstack 0
 20032                           
 20033 ;; *************** function _RADIO_GetPacketSnr *****************
 20034 ;; Defined at:
 20035 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20036 ;; Parameters:    Size  Location     Type
 20037 ;;		None
 20038 ;; Auto vars:     Size  Location     Type
 20039 ;;		None
 20040 ;; Return value:  Size  Location     Type
 20041 ;;                  1    wreg      char 
 20042 ;; Registers used:
 20043 ;;		wreg, status,2
 20044 ;; Tracked objects:
 20045 ;;		On entry : 0/0
 20046 ;;		On exit  : 0/0
 20047 ;;		Unchanged: 0/0
 20048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20053 ;;Total ram usage:        0 bytes
 20054 ;; Hardware stack levels used:    1
 20055 ;; Hardware stack levels required when called:    7
 20056 ;; This function calls:
 20057 ;;		Nothing
 20058 ;; This function is called by:
 20059 ;;		_IncludeMacCommandsResponse
 20060 ;; This function uses a non-reentrant model
 20061 ;;
 20062                           
 20063                           	psect	text90
 20064  00A8A0                     __ptext90:
 20065                           	opt callstack 0
 20066  00A8A0                     _RADIO_GetPacketSnr:
 20067                           	opt callstack 18
 20068                           
 20069                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;incstack = 0
 20073  00A8A0  0101               	movlb	1	; () banked
 20074  00A8A2  515B               	movf	(_RadioConfiguration+50)& (0+255),w,b
 20075                           
 20076                           ; BSR set to: 1
 20077  00A8A4  0012               	return		;funcret
 20078  00A8A6                     __end_of_RADIO_GetPacketSnr:
 20079                           	opt callstack 0
 20080                           
 20081 ;; *************** function _FindSmallestDataRate *****************
 20082 ;; Defined at:
 20083 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20084 ;; Parameters:    Size  Location     Type
 20085 ;;		None
 20086 ;; Auto vars:     Size  Location     Type
 20087 ;;  dataRate        1    3[BANK0 ] unsigned char 
 20088 ;;  i               1    2[BANK0 ] unsigned char 
 20089 ;;  found           1    1[BANK0 ] unsigned char 
 20090 ;; Return value:  Size  Location     Type
 20091 ;;                  1    wreg      unsigned char 
 20092 ;; Registers used:
 20093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20094 ;; Tracked objects:
 20095 ;;		On entry : 0/0
 20096 ;;		On exit  : 0/0
 20097 ;;		Unchanged: 0/0
 20098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20100 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20101 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20102 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20103 ;;Total ram usage:        4 bytes
 20104 ;; Hardware stack levels used:    1
 20105 ;; Hardware stack levels required when called:    7
 20106 ;; This function calls:
 20107 ;;		Nothing
 20108 ;; This function is called by:
 20109 ;;		_AckRetransmissionCallback
 20110 ;;		_AssemblePacket
 20111 ;; This function uses a non-reentrant model
 20112 ;;
 20113                           
 20114                           	psect	text91
 20115  007978                     __ptext91:
 20116                           	opt callstack 0
 20117  007978                     _FindSmallestDataRate:
 20118                           	opt callstack 19
 20119                           
 20120                           ;lorawan.c: 1966: bool found = 0;
 20121                           
 20122                           ; BSR set to: 1
 20123                           ;incstack = 0
 20124  007978  0E00               	movlw	0
 20125  00797A  0100               	movlb	0	; () banked
 20126  00797C  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20127                           
 20128                           ; BSR set to: 0
 20129                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 20130  00797E  0102               	movlb	2	; () banked
 20131  007980  51E4               	movf	(_loRa+223)& (0+255),w,b
 20132  007982  5DF0               	subwf	(_loRa+235)& (0+255),w,b
 20133  007984  B0D8               	btfsc	status,0,c
 20134  007986  D056               	goto	l19224
 20135                           
 20136                           ; BSR set to: 2
 20137                           ;lorawan.c: 1969: {;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 20138  007988  05E4               	decf	(_loRa+223)& (0+255),w,b
 20139  00798A  0100               	movlb	0	; () banked
 20140  00798C  D044               	goto	L22
 20141  00798E                     l19196:
 20142                           
 20143                           ; BSR set to: 0
 20144                           ;lorawan.c: 1973: {;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 20145  00798E  0E00               	movlw	0
 20146  007990  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 20147  007992  D031               	goto	l19208
 20148  007994                     l19198:
 20149                           
 20150                           ; BSR set to: 0
 20151                           ;lorawan.c: 1975: {;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (da
      +                          taRate <= Channels[i].dataRange.max ) && ( Channels[i].status == 1 ) )
 20152  007994  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20153  007996  0D0E               	mullw	14
 20154  007998  0E19               	movlw	low (_Channels+5)
 20155  00799A  24F3               	addwf	prodl,w,c
 20156  00799C  6ED9               	movwf	fsr2l,c
 20157  00799E  0E04               	movlw	high (_Channels+5)
 20158  0079A0  20F4               	addwfc	prodh,w,c
 20159  0079A2  6EDA               	movwf	fsr2h,c
 20160  0079A4  0104               	movlb	4	; () banked
 20161  0079A6  50DF               	movf	223,w,c
 20162  0079A8  0B0F               	andlw	15
 20163  0079AA  0100               	movlb	0	; () banked
 20164  0079AC  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20165  0079AE  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 20166  0079B0  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20167  0079B2  A0D8               	btfss	status,0,c
 20168  0079B4  D01F               	goto	l19206
 20169                           
 20170                           ; BSR set to: 0
 20171  0079B6  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20172  0079B8  0D0E               	mullw	14
 20173  0079BA  0E19               	movlw	low (_Channels+5)
 20174  0079BC  24F3               	addwf	prodl,w,c
 20175  0079BE  6ED9               	movwf	fsr2l,c
 20176  0079C0  0E04               	movlw	high (_Channels+5)
 20177  0079C2  20F4               	addwfc	prodh,w,c
 20178  0079C4  6EDA               	movwf	fsr2h,c
 20179  0079C6  0104               	movlb	4	; () banked
 20180  0079C8  38DF               	swapf	223,w,c
 20181  0079CA  0B0F               	andlw	15
 20182  0079CC  0100               	movlb	0	; () banked
 20183  0079CE  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20184  0079D0  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20185  0079D2  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 20186  0079D4  A0D8               	btfss	status,0,c
 20187  0079D6  D00E               	goto	l19206
 20188                           
 20189                           ; BSR set to: 0
 20190  0079D8  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20191  0079DA  0D0E               	mullw	14
 20192  0079DC  0E18               	movlw	low (_Channels+4)
 20193  0079DE  24F3               	addwf	prodl,w,c
 20194  0079E0  6ED9               	movwf	fsr2l,c
 20195  0079E2  0E04               	movlw	high (_Channels+4)
 20196  0079E4  20F4               	addwfc	prodh,w,c
 20197  0079E6  6EDA               	movwf	fsr2h,c
 20198  0079E8  04DE               	decf	postinc2,w,c
 20199  0079EA  A4D8               	btfss	status,2,c
 20200  0079EC  D003               	goto	l19206
 20201                           
 20202                           ; BSR set to: 0
 20203                           ;lorawan.c: 1977: {;lorawan.c: 1978: found = 1;
 20204  0079EE  0E01               	movlw	1
 20205  0079F0  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20206                           
 20207                           ;lorawan.c: 1979: break;
 20208  0079F2  D007               	goto	u20630
 20209  0079F4                     l19206:
 20210                           
 20211                           ; BSR set to: 0
 20212  0079F4  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 20213  0079F6                     l19208:
 20214                           
 20215                           ; BSR set to: 0
 20216  0079F6  0102               	movlb	2	; () banked
 20217  0079F8  51F2               	movf	(_loRa+237)& (0+255),w,b
 20218  0079FA  0100               	movlb	0	; () banked
 20219  0079FC  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 20220  0079FE  A0D8               	btfss	status,0,c
 20221  007A00  D7C9               	goto	l19198
 20222  007A02                     u20630:
 20223                           
 20224                           ; BSR set to: 0
 20225                           ;lorawan.c: 1980: };lorawan.c: 1981: };lorawan.c: 1982: if ( (found == 0) && (dataRate >
      +                           loRa.minDataRate) )
 20226  007A02  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20227  007A04  A4D8               	btfss	status,2,c
 20228  007A06  D008               	goto	l19216
 20229                           
 20230                           ; BSR set to: 0
 20231  007A08  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20232  007A0A  0102               	movlb	2	; () banked
 20233  007A0C  5DF0               	subwf	(_loRa+235)& (0+255),w,b
 20234  007A0E  B0D8               	btfsc	status,0,c
 20235  007A10  D003               	goto	l19216
 20236                           
 20237                           ; BSR set to: 2
 20238                           ;lorawan.c: 1983: {;lorawan.c: 1984: dataRate = dataRate - 1;
 20239  007A12  0100               	movlb	0	; () banked
 20240  007A14  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 20241  007A16                     L22:
 20242  007A16  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 20243  007A18                     l19216:
 20244  007A18  0100               	movlb	0	; () banked
 20245  007A1A  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20246  007A1C  A4D8               	btfss	status,2,c
 20247  007A1E  D006               	goto	u20670
 20248                           
 20249                           ; BSR set to: 0
 20250  007A20  0102               	movlb	2	; () banked
 20251  007A22  51F0               	movf	(_loRa+235)& (0+255),w,b
 20252  007A24  0100               	movlb	0	; () banked
 20253  007A26  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20254  007A28  B0D8               	btfsc	status,0,c
 20255  007A2A  D7B1               	goto	l19196
 20256  007A2C                     u20670:
 20257                           
 20258                           ; BSR set to: 0
 20259                           ;lorawan.c: 1985: };lorawan.c: 1986: };lorawan.c: 1988: if (found == 1)
 20260  007A2C  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 20261  007A2E  B4D8               	btfsc	status,2,c
 20262                           
 20263                           ; BSR set to: 0
 20264                           ;lorawan.c: 1989: {;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 20265  007A30  C063  F2E4         	movff	FindSmallestDataRate@dataRate,_loRa+223
 20266  007A34                     l19224:
 20267                           
 20268                           ;lorawan.c: 1991: };lorawan.c: 1992: };lorawan.c: 1994: return found;
 20269  007A34  0100               	movlb	0	; () banked
 20270  007A36  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20271                           
 20272                           ; BSR set to: 0
 20273  007A38  0012               	return		;funcret
 20274  007A3A                     __end_of_FindSmallestDataRate:
 20275                           	opt callstack 0
 20276                           
 20277 ;; *************** function _EncryptFRMPayload *****************
 20278 ;; Defined at:
 20279 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20280 ;; Parameters:    Size  Location     Type
 20281 ;;  buffer          2   50[BANK0 ] PTR unsigned char 
 20282 ;;		 -> sensorsString(40), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 20283 ;;  bufferLength    1   52[BANK0 ] unsigned char 
 20284 ;;  dir             1   53[BANK0 ] unsigned char 
 20285 ;;  frameCounter    4   54[BANK0 ] unsigned long 
 20286 ;;  key             2   58[BANK0 ] PTR unsigned char 
 20287 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20288 ;;  macBufferInd    1   60[BANK0 ] unsigned char 
 20289 ;;  bufferToBeEn    2   61[BANK0 ] PTR unsigned char 
 20290 ;;		 -> macBuffer(271), radioBuffer(271), 
 20291 ;;  multicastSta    1   63[BANK0 ] unsigned char 
 20292 ;; Auto vars:     Size  Location     Type
 20293 ;;  j               1   71[BANK0 ] unsigned char 
 20294 ;;  i               1   70[BANK0 ] unsigned char 
 20295 ;;  k               1   69[BANK0 ] unsigned char 
 20296 ;; Return value:  Size  Location     Type
 20297 ;;                  1    wreg      void 
 20298 ;; Registers used:
 20299 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20300 ;; Tracked objects:
 20301 ;;		On entry : 0/0
 20302 ;;		On exit  : 0/0
 20303 ;;		Unchanged: 0/0
 20304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20305 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20306 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20307 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20308 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20309 ;;Total ram usage:       22 bytes
 20310 ;; Hardware stack levels used:    1
 20311 ;; Hardware stack levels required when called:   10
 20312 ;; This function calls:
 20313 ;;		_AESEncodeLoRa
 20314 ;;		_AssembleEncryptionBlock
 20315 ;;		___awdiv
 20316 ;; This function is called by:
 20317 ;;		_LORAWAN_RxDone
 20318 ;;		_AssemblePacket
 20319 ;; This function uses a non-reentrant model
 20320 ;;
 20321                           
 20322                           	psect	text92
 20323  004D2A                     __ptext92:
 20324                           	opt callstack 0
 20325  004D2A                     _EncryptFRMPayload:
 20326                           	opt callstack 16
 20327                           
 20328                           ; BSR set to: 0
 20329                           ;incstack = 0
 20330  004D2A  0E00               	movlw	0
 20331  004D2C  0100               	movlb	0	; () banked
 20332  004D2E  6FA6               	movwf	EncryptFRMPayload@i& (0+255),b
 20333  004D30  0E00               	movlw	0
 20334  004D32  6FA7               	movwf	EncryptFRMPayload@j& (0+255),b
 20335                           
 20336                           ; BSR set to: 0
 20337                           ;lorawan.c: 2209: k = bufferLength / 16;
 20338  004D34  C094  F060         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 20339  004D38  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 20340  004D3A  0E00               	movlw	0
 20341  004D3C  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 20342  004D3E  0E10               	movlw	16
 20343  004D40  6F62               	movwf	___awdiv@divisor& (0+255),b
 20344  004D42  ECCE  F041         	call	___awdiv	;wreg free
 20345  004D46  0100               	movlb	0	; () banked
 20346  004D48  5160               	movf	?___awdiv& (0+255),w,b
 20347  004D4A  6FA5               	movwf	EncryptFRMPayload@k& (0+255),b
 20348                           
 20349                           ; BSR set to: 0
 20350                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 20351  004D4C  0E01               	movlw	1
 20352  004D4E  6FA6               	movwf	EncryptFRMPayload@i& (0+255),b
 20353  004D50  D054               	goto	l19260
 20354  004D52                     l19242:
 20355                           
 20356                           ; BSR set to: 0
 20357                           ;lorawan.c: 2211: {;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01
      +                          , multicastStatus);
 20358  004D52  C096  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20359  004D56  C097  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20360  004D5A  C098  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20361  004D5E  C099  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20362  004D62  C0A6  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20363  004D66  0E01               	movlw	1
 20364  004D68  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20365  004D6A  C09F  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20366  004D6E  5195               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20367  004D70  ECC7  F03A         	call	_AssembleEncryptionBlock
 20368                           
 20369                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 20370  004D74  0E5F               	movlw	low _aesBuffer
 20371  004D76  0100               	movlb	0	; () banked
 20372  004D78  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 20373  004D7A  0E01               	movlw	high _aesBuffer
 20374  004D7C  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20375  004D7E  C09A  F080         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20376  004D82  C09B  F081         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20377  004D86  EC17  F04E         	call	_AESEncodeLoRa	;wreg free
 20378                           
 20379                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 20380  004D8A  0E00               	movlw	0
 20381  004D8C  0100               	movlb	0	; () banked
 20382  004D8E  6FA7               	movwf	EncryptFRMPayload@j& (0+255),b
 20383  004D90                     l19250:
 20384                           
 20385                           ; BSR set to: 0
 20386                           ;lorawan.c: 2216: {;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j
      +                          ] ^ buffer[16*(i-1) + j];
 20387  004D90  519C               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20388  004D92  259D               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20389  004D94  6ED9               	movwf	fsr2l,c
 20390  004D96  0E00               	movlw	0
 20391  004D98  219E               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20392  004D9A  6EDA               	movwf	fsr2h,c
 20393  004D9C  51A6               	movf	EncryptFRMPayload@i& (0+255),w,b
 20394  004D9E  6FA0               	movwf	??_EncryptFRMPayload& (0+255),b
 20395  004DA0  6BA1               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 20396  004DA2  3BA0               	swapf	??_EncryptFRMPayload& (0+255),f,b
 20397  004DA4  3BA1               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20398  004DA6  0EF0               	movlw	240
 20399  004DA8  17A1               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20400  004DAA  51A0               	movf	??_EncryptFRMPayload& (0+255),w,b
 20401  004DAC  0B0F               	andlw	15
 20402  004DAE  13A1               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20403  004DB0  0EF0               	movlw	240
 20404  004DB2  17A0               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20405  004DB4  C092  F0A2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 20406  004DB8  C093  F0A3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 20407  004DBC  51A0               	movf	??_EncryptFRMPayload& (0+255),w,b
 20408  004DBE  27A2               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20409  004DC0  51A1               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 20410  004DC2  23A3               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20411  004DC4  51A7               	movf	EncryptFRMPayload@j& (0+255),w,b
 20412  004DC6  27A2               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20413  004DC8  0E00               	movlw	0
 20414  004DCA  23A3               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20415  004DCC  0EF0               	movlw	240
 20416  004DCE  25A2               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20417  004DD0  6EE9               	movwf	fsr0l,c
 20418  004DD2  0EFF               	movlw	255
 20419  004DD4  21A3               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 20420  004DD6  6EEA               	movwf	fsr0h,c
 20421  004DD8  50EF               	movf	indf0,w,c
 20422  004DDA  6FA4               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 20423  004DDC  0E5F               	movlw	low _aesBuffer
 20424  004DDE  25A7               	addwf	EncryptFRMPayload@j& (0+255),w,b
 20425  004DE0  6EE9               	movwf	fsr0l,c
 20426  004DE2  6AEA               	clrf	fsr0h,c
 20427  004DE4  0E01               	movlw	high _aesBuffer
 20428  004DE6  22EA               	addwfc	fsr0h,f,c
 20429  004DE8  50EF               	movf	indf0,w,c
 20430  004DEA  19A4               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 20431  004DEC  6EDF               	movwf	indf2,c
 20432                           
 20433                           ; BSR set to: 0
 20434  004DEE  2B9C               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20435                           
 20436                           ; BSR set to: 0
 20437  004DF0  2BA7               	incf	EncryptFRMPayload@j& (0+255),f,b
 20438                           
 20439                           ; BSR set to: 0
 20440  004DF2  0E0F               	movlw	15
 20441  004DF4  65A7               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 20442  004DF6  D7CC               	goto	l19250
 20443                           
 20444                           ; BSR set to: 0
 20445  004DF8  2BA6               	incf	EncryptFRMPayload@i& (0+255),f,b
 20446  004DFA                     l19260:
 20447                           
 20448                           ; BSR set to: 0
 20449  004DFA  51A6               	movf	EncryptFRMPayload@i& (0+255),w,b
 20450  004DFC  5DA5               	subwf	EncryptFRMPayload@k& (0+255),w,b
 20451  004DFE  B0D8               	btfsc	status,0,c
 20452  004E00  D7A8               	goto	l19242
 20453                           
 20454                           ; BSR set to: 0
 20455                           ;lorawan.c: 2218: };lorawan.c: 2219: };lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 20456  004E02  C094  F0A0         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20457  004E06  0E0F               	movlw	15
 20458  004E08  17A0               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20459  004E0A  B4D8               	btfsc	status,2,c
 20460  004E0C  0012               	return	
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;lorawan.c: 2222: {;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01
      +                          , multicastStatus);
 20464  004E0E  C096  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20465  004E12  C097  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20466  004E16  C098  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20467  004E1A  C099  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20468  004E1E  C0A6  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20469  004E22  0E01               	movlw	1
 20470  004E24  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20471  004E26  C09F  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20472  004E2A  5195               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20473  004E2C  ECC7  F03A         	call	_AssembleEncryptionBlock
 20474                           
 20475                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 20476  004E30  0E5F               	movlw	low _aesBuffer
 20477  004E32  0100               	movlb	0	; () banked
 20478  004E34  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 20479  004E36  0E01               	movlw	high _aesBuffer
 20480  004E38  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20481  004E3A  C09A  F080         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20482  004E3E  C09B  F081         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20483  004E42  EC17  F04E         	call	_AESEncodeLoRa	;wreg free
 20484                           
 20485                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 20486  004E46  0E00               	movlw	0
 20487  004E48  0100               	movlb	0	; () banked
 20488  004E4A  6FA7               	movwf	EncryptFRMPayload@j& (0+255),b
 20489  004E4C  D023               	goto	l19274
 20490  004E4E                     l19268:
 20491                           
 20492                           ; BSR set to: 0
 20493                           ;lorawan.c: 2227: {;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j
      +                          ] ^ buffer[(16*k) + j];
 20494  004E4E  519C               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20495  004E50  259D               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20496  004E52  6ED9               	movwf	fsr2l,c
 20497  004E54  0E00               	movlw	0
 20498  004E56  219E               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20499  004E58  6EDA               	movwf	fsr2h,c
 20500  004E5A  51A5               	movf	EncryptFRMPayload@k& (0+255),w,b
 20501  004E5C  0D10               	mullw	16
 20502  004E5E  C092  F0A0         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 20503  004E62  C093  F0A1         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 20504  004E66  50F3               	movf	prodl,w,c
 20505  004E68  27A0               	addwf	??_EncryptFRMPayload& (0+255),f,b
 20506  004E6A  50F4               	movf	prodh,w,c
 20507  004E6C  23A1               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 20508  004E6E  51A7               	movf	EncryptFRMPayload@j& (0+255),w,b
 20509  004E70  25A0               	addwf	??_EncryptFRMPayload& (0+255),w,b
 20510  004E72  6EE9               	movwf	fsr0l,c
 20511  004E74  0E00               	movlw	0
 20512  004E76  21A1               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 20513  004E78  6EEA               	movwf	fsr0h,c
 20514  004E7A  50EF               	movf	indf0,w,c
 20515  004E7C  6FA2               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 20516  004E7E  0E5F               	movlw	low _aesBuffer
 20517  004E80  25A7               	addwf	EncryptFRMPayload@j& (0+255),w,b
 20518  004E82  6EE9               	movwf	fsr0l,c
 20519  004E84  6AEA               	clrf	fsr0h,c
 20520  004E86  0E01               	movlw	high _aesBuffer
 20521  004E88  22EA               	addwfc	fsr0h,f,c
 20522  004E8A  50EF               	movf	indf0,w,c
 20523  004E8C  19A2               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20524  004E8E  6EDF               	movwf	indf2,c
 20525                           
 20526                           ; BSR set to: 0
 20527  004E90  2B9C               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20528                           
 20529                           ; BSR set to: 0
 20530  004E92  2BA7               	incf	EncryptFRMPayload@j& (0+255),f,b
 20531  004E94                     l19274:
 20532                           
 20533                           ; BSR set to: 0
 20534  004E94  C094  F0A0         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20535  004E98  0E0F               	movlw	15
 20536  004E9A  17A0               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20537  004E9C  51A0               	movf	??_EncryptFRMPayload& (0+255),w,b
 20538  004E9E  5DA7               	subwf	EncryptFRMPayload@j& (0+255),w,b
 20539  004EA0  B0D8               	btfsc	status,0,c
 20540  004EA2  0012               	return	
 20541  004EA4  D7D4               	goto	l19268
 20542  004EA6                     __end_of_EncryptFRMPayload:
 20543                           	opt callstack 0
 20544                           
 20545 ;; *************** function ___awdiv *****************
 20546 ;; Defined at:
 20547 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 20548 ;; Parameters:    Size  Location     Type
 20549 ;;  dividend        2    0[BANK0 ] int 
 20550 ;;  divisor         2    2[BANK0 ] int 
 20551 ;; Auto vars:     Size  Location     Type
 20552 ;;  quotient        2    6[BANK0 ] int 
 20553 ;;  sign            1    5[BANK0 ] unsigned char 
 20554 ;;  counter         1    4[BANK0 ] unsigned char 
 20555 ;; Return value:  Size  Location     Type
 20556 ;;                  2    0[BANK0 ] int 
 20557 ;; Registers used:
 20558 ;;		wreg, status,2, status,0
 20559 ;; Tracked objects:
 20560 ;;		On entry : 0/0
 20561 ;;		On exit  : 0/0
 20562 ;;		Unchanged: 0/0
 20563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20564 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20565 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20567 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20568 ;;Total ram usage:        8 bytes
 20569 ;; Hardware stack levels used:    1
 20570 ;; Hardware stack levels required when called:    7
 20571 ;; This function calls:
 20572 ;;		Nothing
 20573 ;; This function is called by:
 20574 ;;		_EncryptFRMPayload
 20575 ;;		_timerHandler16
 20576 ;; This function uses a non-reentrant model
 20577 ;;
 20578                           
 20579                           	psect	text93
 20580  00839C                     __ptext93:
 20581                           	opt callstack 0
 20582  00839C                     ___awdiv:
 20583                           	opt callstack 18
 20584                           
 20585                           ; BSR set to: 0
 20586                           ;incstack = 0
 20587  00839C  0E00               	movlw	0
 20588  00839E  0100               	movlb	0	; () banked
 20589  0083A0  6F65               	movwf	___awdiv@sign& (0+255),b
 20590                           
 20591                           ; BSR set to: 0
 20592  0083A2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 20593  0083A4  D006               	goto	l18766
 20594                           
 20595                           ; BSR set to: 0
 20596  0083A6  6D62               	negf	___awdiv@divisor& (0+255),b
 20597  0083A8  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 20598  0083AA  B0D8               	btfsc	status,0,c
 20599  0083AC  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 20600                           
 20601                           ; BSR set to: 0
 20602  0083AE  0E01               	movlw	1
 20603  0083B0  6F65               	movwf	___awdiv@sign& (0+255),b
 20604  0083B2                     l18766:
 20605                           
 20606                           ; BSR set to: 0
 20607  0083B2  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 20608  0083B4  D006               	goto	l18772
 20609                           
 20610                           ; BSR set to: 0
 20611  0083B6  6D60               	negf	___awdiv@dividend& (0+255),b
 20612  0083B8  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 20613  0083BA  B0D8               	btfsc	status,0,c
 20614  0083BC  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 20615                           
 20616                           ; BSR set to: 0
 20617  0083BE  0E01               	movlw	1
 20618  0083C0  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 20619  0083C2                     l18772:
 20620                           
 20621                           ; BSR set to: 0
 20622  0083C2  0E00               	movlw	0
 20623  0083C4  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 20624  0083C6  0E00               	movlw	0
 20625  0083C8  6F66               	movwf	___awdiv@quotient& (0+255),b
 20626                           
 20627                           ; BSR set to: 0
 20628  0083CA  5162               	movf	___awdiv@divisor& (0+255),w,b
 20629  0083CC  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 20630  0083CE  B4D8               	btfsc	status,2,c
 20631  0083D0  D01C               	goto	l18794
 20632                           
 20633                           ; BSR set to: 0
 20634  0083D2  0E01               	movlw	1
 20635  0083D4  6F64               	movwf	___awdiv@counter& (0+255),b
 20636  0083D6  D004               	goto	l18780
 20637  0083D8                     l18778:
 20638                           
 20639                           ; BSR set to: 0
 20640  0083D8  90D8               	bcf	status,0,c
 20641  0083DA  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 20642  0083DC  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 20643  0083DE  2B64               	incf	___awdiv@counter& (0+255),f,b
 20644  0083E0                     l18780:
 20645                           
 20646                           ; BSR set to: 0
 20647  0083E0  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 20648  0083E2  D7FA               	goto	l18778
 20649  0083E4                     u19930:
 20650                           
 20651                           ; BSR set to: 0
 20652  0083E4  90D8               	bcf	status,0,c
 20653  0083E6  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 20654  0083E8  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 20655                           
 20656                           ; BSR set to: 0
 20657  0083EA  5162               	movf	___awdiv@divisor& (0+255),w,b
 20658  0083EC  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 20659  0083EE  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20660  0083F0  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 20661  0083F2  A0D8               	btfss	status,0,c
 20662  0083F4  D005               	goto	l18790
 20663                           
 20664                           ; BSR set to: 0
 20665  0083F6  5162               	movf	___awdiv@divisor& (0+255),w,b
 20666  0083F8  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 20667  0083FA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20668  0083FC  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 20669                           
 20670                           ; BSR set to: 0
 20671  0083FE  8166               	bsf	___awdiv@quotient& (0+255),0,b
 20672  008400                     l18790:
 20673                           
 20674                           ; BSR set to: 0
 20675  008400  90D8               	bcf	status,0,c
 20676  008402  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 20677  008404  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 20678                           
 20679                           ; BSR set to: 0
 20680  008406  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 20681  008408  D7ED               	goto	u19930
 20682  00840A                     l18794:
 20683                           
 20684                           ; BSR set to: 0
 20685  00840A  5165               	movf	___awdiv@sign& (0+255),w,b
 20686  00840C  B4D8               	btfsc	status,2,c
 20687  00840E  D004               	goto	l18798
 20688                           
 20689                           ; BSR set to: 0
 20690  008410  6D66               	negf	___awdiv@quotient& (0+255),b
 20691  008412  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 20692  008414  B0D8               	btfsc	status,0,c
 20693  008416  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 20694  008418                     l18798:
 20695                           
 20696                           ; BSR set to: 0
 20697  008418  C066  F060         	movff	___awdiv@quotient,?___awdiv
 20698  00841C  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 20699                           
 20700                           ; BSR set to: 0
 20701  008420  0012               	return		;funcret
 20702  008422                     __end_of___awdiv:
 20703                           	opt callstack 0
 20704                           
 20705 ;; *************** function _AssembleEncryptionBlock *****************
 20706 ;; Defined at:
 20707 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20708 ;; Parameters:    Size  Location     Type
 20709 ;;  dir             1    wreg     unsigned char 
 20710 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 20711 ;;  blockId         1   15[BANK0 ] unsigned char 
 20712 ;;  firstByte       1   16[BANK0 ] unsigned char 
 20713 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 20714 ;; Auto vars:     Size  Location     Type
 20715 ;;  dir             1   18[BANK0 ] unsigned char 
 20716 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 20717 ;; Return value:  Size  Location     Type
 20718 ;;                  1    wreg      void 
 20719 ;; Registers used:
 20720 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20721 ;; Tracked objects:
 20722 ;;		On entry : 0/0
 20723 ;;		On exit  : 0/0
 20724 ;;		Unchanged: 0/0
 20725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20726 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20727 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20729 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20730 ;;Total ram usage:        9 bytes
 20731 ;; Hardware stack levels used:    1
 20732 ;; Hardware stack levels required when called:    8
 20733 ;; This function calls:
 20734 ;;		_memcpy
 20735 ;;		_memset
 20736 ;; This function is called by:
 20737 ;;		_LORAWAN_RxDone
 20738 ;;		_AssemblePacket
 20739 ;;		_EncryptFRMPayload
 20740 ;; This function uses a non-reentrant model
 20741 ;;
 20742                           
 20743                           	psect	text94
 20744  00758E                     __ptext94:
 20745                           	opt callstack 0
 20746  00758E                     _AssembleEncryptionBlock:
 20747                           	opt callstack 17
 20748                           
 20749                           ; BSR set to: 0
 20750                           ;incstack = 0
 20751                           ;AssembleEncryptionBlock@dir stored from wreg
 20752  00758E  0100               	movlb	0	; () banked
 20753  007590  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 20754                           
 20755                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 20756  007592  0E00               	movlw	0
 20757  007594  0100               	movlb	0	; () banked
 20758  007596  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20759                           
 20760                           ; BSR set to: 0
 20761                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 20762  007598  0E5F               	movlw	low _aesBuffer
 20763  00759A  6F60               	movwf	memset@p1& (0+255),b
 20764  00759C  0E01               	movlw	high _aesBuffer
 20765  00759E  6F61               	movwf	(memset@p1+1)& (0+255),b
 20766  0075A0  0E00               	movlw	0
 20767  0075A2  6F63               	movwf	(memset@c+1)& (0+255),b
 20768  0075A4  0E00               	movlw	0
 20769  0075A6  6F62               	movwf	memset@c& (0+255),b
 20770  0075A8  0E00               	movlw	0
 20771  0075AA  6F65               	movwf	(memset@n+1)& (0+255),b
 20772  0075AC  0E10               	movlw	16
 20773  0075AE  6F64               	movwf	memset@n& (0+255),b
 20774  0075B0  ECCA  F04F         	call	_memset	;wreg free
 20775                           
 20776                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 20777  0075B4  C070  F15F         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 20778                           
 20779                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 20780  0075B8  0100               	movlb	0	; () banked
 20781  0075BA  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20782  0075BC  0F05               	addlw	5
 20783  0075BE  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20784                           
 20785                           ; BSR set to: 0
 20786                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 20787  0075C0  0E5F               	movlw	low _aesBuffer
 20788  0075C2  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20789  0075C4  6ED9               	movwf	fsr2l,c
 20790  0075C6  6ADA               	clrf	fsr2h,c
 20791  0075C8  0E01               	movlw	high _aesBuffer
 20792  0075CA  22DA               	addwfc	fsr2h,f,c
 20793  0075CC  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 20794                           
 20795                           ; BSR set to: 0
 20796  0075D0  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20797                           
 20798                           ; BSR set to: 0
 20799                           ;lorawan.c: 2168: if (0 == multicastStatus)
 20800  0075D2  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 20801  0075D4  A4D8               	btfss	status,2,c
 20802  0075D6  D015               	goto	l18742
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;lorawan.c: 2169: {;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationPa
      +                          rameters.deviceAddress, sizeof (loRa.activationParameters.deviceAddress));
 20806  0075D8  0E5F               	movlw	low _aesBuffer
 20807  0075DA  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20808  0075DC  6F60               	movwf	memcpy@d1& (0+255),b
 20809  0075DE  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 20810  0075E0  0E01               	movlw	high _aesBuffer
 20811  0075E2  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20812  0075E4  0E23               	movlw	low (_loRa+30)
 20813  0075E6  6F62               	movwf	memcpy@s1& (0+255),b
 20814  0075E8  0E02               	movlw	high (_loRa+30)
 20815  0075EA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20816  0075EC  0E00               	movlw	0
 20817  0075EE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20818  0075F0  0E04               	movlw	4
 20819  0075F2  6F64               	movwf	memcpy@n& (0+255),b
 20820  0075F4  ECEC  F047         	call	_memcpy	;wreg free
 20821  0075F8                     l18740:
 20822                           
 20823                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 20824  0075F8  0100               	movlb	0	; () banked
 20825  0075FA  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20826  0075FC  0F04               	addlw	4
 20827  0075FE  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20828                           
 20829                           ;lorawan.c: 2172: }
 20830  007600  D011               	goto	l18746
 20831  007602                     l18742:
 20832                           
 20833                           ; BSR set to: 0
 20834                           ;lorawan.c: 2173: else;lorawan.c: 2174: {;lorawan.c: 2175: memcpy (&aesBuffer[bufferInde
      +                          x], &loRa.activationParameters.mcastDeviceAddress, sizeof (loRa.activationParameters.mca
      +                          stDeviceAddress));
 20835  007602  0E5F               	movlw	low _aesBuffer
 20836  007604  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20837  007606  6F60               	movwf	memcpy@d1& (0+255),b
 20838  007608  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 20839  00760A  0E01               	movlw	high _aesBuffer
 20840  00760C  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20841  00760E  0E67               	movlw	low (_loRa+98)
 20842  007610  6F62               	movwf	memcpy@s1& (0+255),b
 20843  007612  0E02               	movlw	high (_loRa+98)
 20844  007614  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20845  007616  0E00               	movlw	0
 20846  007618  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20847  00761A  0E04               	movlw	4
 20848  00761C  6F64               	movwf	memcpy@n& (0+255),b
 20849  00761E  ECEC  F047         	call	_memcpy	;wreg free
 20850  007622  D7EA               	goto	l18740
 20851  007624                     l18746:
 20852                           
 20853                           ; BSR set to: 0
 20854                           ;lorawan.c: 2177: };lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, siz
      +                          eof (frameCounter));
 20855  007624  0E5F               	movlw	low _aesBuffer
 20856  007626  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20857  007628  6F60               	movwf	memcpy@d1& (0+255),b
 20858  00762A  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 20859  00762C  0E01               	movlw	high _aesBuffer
 20860  00762E  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20861  007630  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 20862  007632  6F62               	movwf	memcpy@s1& (0+255),b
 20863  007634  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 20864  007636  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20865  007638  0E00               	movlw	0
 20866  00763A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20867  00763C  0E04               	movlw	4
 20868  00763E  6F64               	movwf	memcpy@n& (0+255),b
 20869  007640  ECEC  F047         	call	_memcpy	;wreg free
 20870                           
 20871                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 20872  007644  0100               	movlb	0	; () banked
 20873  007646  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20874  007648  0F04               	addlw	4
 20875  00764A  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20876                           
 20877                           ; BSR set to: 0
 20878                           ;lorawan.c: 2182: bufferIndex ++;
 20879  00764C  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20880                           
 20881                           ; BSR set to: 0
 20882                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 20883  00764E  0E5F               	movlw	low _aesBuffer
 20884  007650  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20885  007652  6ED9               	movwf	fsr2l,c
 20886  007654  6ADA               	clrf	fsr2h,c
 20887  007656  0E01               	movlw	high _aesBuffer
 20888  007658  22DA               	addwfc	fsr2h,f,c
 20889  00765A  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 20890                           
 20891                           ; BSR set to: 0
 20892  00765E  0012               	return		;funcret
 20893  007660                     __end_of_AssembleEncryptionBlock:
 20894                           	opt callstack 0
 20895                           
 20896 ;; *************** function _CountfOptsLength *****************
 20897 ;; Defined at:
 20898 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20899 ;; Parameters:    Size  Location     Type
 20900 ;;		None
 20901 ;; Auto vars:     Size  Location     Type
 20902 ;;  i               1    7[BANK0 ] unsigned char 
 20903 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 20904 ;; Return value:  Size  Location     Type
 20905 ;;                  1    wreg      unsigned char 
 20906 ;; Registers used:
 20907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20908 ;; Tracked objects:
 20909 ;;		On entry : 0/0
 20910 ;;		On exit  : 0/0
 20911 ;;		Unchanged: 0/0
 20912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20914 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20915 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20917 ;;Total ram usage:        8 bytes
 20918 ;; Hardware stack levels used:    1
 20919 ;; Hardware stack levels required when called:    7
 20920 ;; This function calls:
 20921 ;;		Nothing
 20922 ;; This function is called by:
 20923 ;;		_LORAWAN_GetMaxPayloadSize
 20924 ;;		_AssemblePacket
 20925 ;; This function uses a non-reentrant model
 20926 ;;
 20927                           
 20928                           	psect	text95
 20929  007660                     __ptext95:
 20930                           	opt callstack 0
 20931  007660                     _CountfOptsLength:
 20932                           	opt callstack 19
 20933                           
 20934                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 20935                           
 20936                           ; BSR set to: 0
 20937                           ;incstack = 0
 20938  007660  0E00               	movlw	0
 20939  007662  0100               	movlb	0	; () banked
 20940  007664  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 20941                           
 20942                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 20943  007666  0E00               	movlw	0
 20944  007668  6F67               	movwf	CountfOptsLength@i& (0+255),b
 20945  00766A  D057               	goto	l19286
 20946  00766C                     l19278:
 20947                           
 20948                           ; BSR set to: 0
 20949                           ;lorawan.c: 2139: {;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 20950  00766C  5167               	movf	CountfOptsLength@i& (0+255),w,b
 20951  00766E  0D02               	mullw	2
 20952  007670  0EAD               	movlw	low (_loRa+168)
 20953  007672  24F3               	addwf	prodl,w,c
 20954  007674  6ED9               	movwf	fsr2l,c
 20955  007676  0E02               	movlw	high (_loRa+168)
 20956  007678  20F4               	addwfc	prodh,w,c
 20957  00767A  6EDA               	movwf	fsr2h,c
 20958  00767C  28DE               	incf	postinc2,w,c
 20959  00767E  B4D8               	btfsc	status,2,c
 20960  007680  D04B               	goto	l19284
 20961                           
 20962                           ; BSR set to: 0
 20963                           ;lorawan.c: 2141: {;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.ma
      +                          cCommands[i].receivedCid - 2]) <= 0x0F)
 20964  007682  0EFE               	movlw	254
 20965  007684  6F60               	movwf	??_CountfOptsLength& (0+255),b
 20966  007686  0EFF               	movlw	255
 20967  007688  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 20968  00768A  5167               	movf	CountfOptsLength@i& (0+255),w,b
 20969  00768C  0D02               	mullw	2
 20970  00768E  0EAD               	movlw	low (_loRa+168)
 20971  007690  24F3               	addwf	prodl,w,c
 20972  007692  6ED9               	movwf	fsr2l,c
 20973  007694  0E02               	movlw	high (_loRa+168)
 20974  007696  20F4               	addwfc	prodh,w,c
 20975  007698  6EDA               	movwf	fsr2h,c
 20976  00769A  50DF               	movf	indf2,w,c
 20977  00769C  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20978  00769E  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20979  0076A0  5160               	movf	??_CountfOptsLength& (0+255),w,b
 20980  0076A2  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20981  0076A4  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20982  0076A6  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20983  0076A8  0E27               	movlw	low _macEndDevCmdReplyLen
 20984  0076AA  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20985  0076AC  6EF6               	movwf	tblptrl,c
 20986  0076AE  0EFF               	movlw	high _macEndDevCmdReplyLen
 20987  0076B0  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20988  0076B2  6EF7               	movwf	tblptrh,c
 20989  0076B4                     	if	1	;There are 3 active tblptr bytes
 20990  0076B4  6AF8               	clrf	tblptru,c
 20991  0076B6  0E00               	movlw	low (__mediumconst shr (0+16))
 20992  0076B8  22F8               	addwfc	tblptru,f,c
 20993  0076BA                     	endif
 20994  0076BA  0008               	tblrd		*
 20995  0076BC  50F5               	movf	tablat,w,c
 20996  0076BE  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 20997  0076C2  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 20998  0076C4  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 20999  0076C6  0E00               	movlw	0
 21000  0076C8  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 21001  0076CA  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 21002  0076CC  D006               	goto	u20750
 21003  0076CE  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 21004  0076D0  E12A               	bnz	l19288
 21005  0076D2  0E10               	movlw	16
 21006  0076D4  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 21007  0076D6  B0D8               	btfsc	status,0,c
 21008  0076D8  D026               	goto	u20760
 21009  0076DA                     u20750:
 21010                           
 21011                           ; BSR set to: 0
 21012                           ;lorawan.c: 2143: {;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCo
      +                          mmands[i].receivedCid - 2];
 21013  0076DA  0EFE               	movlw	254
 21014  0076DC  6F60               	movwf	??_CountfOptsLength& (0+255),b
 21015  0076DE  0EFF               	movlw	255
 21016  0076E0  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 21017  0076E2  5167               	movf	CountfOptsLength@i& (0+255),w,b
 21018  0076E4  0D02               	mullw	2
 21019  0076E6  0EAD               	movlw	low (_loRa+168)
 21020  0076E8  24F3               	addwf	prodl,w,c
 21021  0076EA  6ED9               	movwf	fsr2l,c
 21022  0076EC  0E02               	movlw	high (_loRa+168)
 21023  0076EE  20F4               	addwfc	prodh,w,c
 21024  0076F0  6EDA               	movwf	fsr2h,c
 21025  0076F2  50DF               	movf	indf2,w,c
 21026  0076F4  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21027  0076F6  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21028  0076F8  5160               	movf	??_CountfOptsLength& (0+255),w,b
 21029  0076FA  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21030  0076FC  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21031  0076FE  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21032  007700  0E27               	movlw	low _macEndDevCmdReplyLen
 21033  007702  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21034  007704  6EF6               	movwf	tblptrl,c
 21035  007706  0EFF               	movlw	high _macEndDevCmdReplyLen
 21036  007708  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21037  00770A  6EF7               	movwf	tblptrh,c
 21038  00770C                     	if	1	;There are 3 active tblptr bytes
 21039  00770C  6AF8               	clrf	tblptru,c
 21040  00770E  0E00               	movlw	low (__mediumconst shr (0+16))
 21041  007710  22F8               	addwfc	tblptru,f,c
 21042  007712                     	endif
 21043  007712  0008               	tblrd		*
 21044  007714  50F5               	movf	tablat,w,c
 21045  007716  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 21046  007718                     l19284:
 21047                           
 21048                           ; BSR set to: 0
 21049  007718  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 21050  00771A                     l19286:
 21051                           
 21052                           ; BSR set to: 0
 21053  00771A  0102               	movlb	2	; () banked
 21054  00771C  51AC               	movf	(_loRa+167)& (0+255),w,b
 21055  00771E  0100               	movlb	0	; () banked
 21056  007720  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 21057  007722  A0D8               	btfss	status,0,c
 21058  007724  D7A3               	goto	l19278
 21059  007726                     u20760:
 21060  007726                     l19288:
 21061                           
 21062                           ; BSR set to: 0
 21063                           ;lorawan.c: 2149: };lorawan.c: 2150: };lorawan.c: 2151: };lorawan.c: 2153: return macCom
      +                          mandLength;
 21064  007726  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 21065                           
 21066                           ; BSR set to: 0
 21067  007728  0012               	return		;funcret
 21068  00772A                     __end_of_CountfOptsLength:
 21069                           	opt callstack 0
 21070                           
 21071 ;; *************** function _ExtractMic *****************
 21072 ;; Defined at:
 21073 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21074 ;; Parameters:    Size  Location     Type
 21075 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 21076 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21077 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 21078 ;; Auto vars:     Size  Location     Type
 21079 ;;  mic             4   17[BANK0 ] unsigned long 
 21080 ;; Return value:  Size  Location     Type
 21081 ;;                  4   11[BANK0 ] unsigned long 
 21082 ;; Registers used:
 21083 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21084 ;; Tracked objects:
 21085 ;;		On entry : 0/0
 21086 ;;		On exit  : 0/0
 21087 ;;		Unchanged: 0/0
 21088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21089 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21090 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21091 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21092 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21093 ;;Total ram usage:       10 bytes
 21094 ;; Hardware stack levels used:    1
 21095 ;; Hardware stack levels required when called:    8
 21096 ;; This function calls:
 21097 ;;		_memcpy
 21098 ;; This function is called by:
 21099 ;;		_LORAWAN_RxDone
 21100 ;; This function uses a non-reentrant model
 21101 ;;
 21102                           
 21103                           	psect	text96
 21104  009592                     __ptext96:
 21105                           	opt callstack 0
 21106  009592                     _ExtractMic:
 21107                           	opt callstack 16
 21108                           
 21109                           ;lorawan.c: 2189: uint32_t mic = 0;
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;incstack = 0
 21113  009592  0E00               	movlw	0
 21114  009594  0100               	movlb	0	; () banked
 21115  009596  6F71               	movwf	ExtractMic@mic& (0+255),b
 21116  009598  0E00               	movlw	0
 21117  00959A  6F72               	movwf	(ExtractMic@mic+1)& (0+255),b
 21118  00959C  0E00               	movlw	0
 21119  00959E  6F73               	movwf	(ExtractMic@mic+2)& (0+255),b
 21120  0095A0  0E00               	movlw	0
 21121  0095A2  6F74               	movwf	(ExtractMic@mic+3)& (0+255),b
 21122                           
 21123                           ; BSR set to: 0
 21124                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 21125  0095A4  0E71               	movlw	low ExtractMic@mic
 21126  0095A6  6F60               	movwf	memcpy@d1& (0+255),b
 21127  0095A8  0E00               	movlw	high ExtractMic@mic
 21128  0095AA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21129  0095AC  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 21130  0095AE  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 21131  0095B0  6F6F               	movwf	??_ExtractMic& (0+255),b
 21132  0095B2  0E00               	movlw	0
 21133  0095B4  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 21134  0095B6  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 21135  0095B8  0EFC               	movlw	252
 21136  0095BA  256F               	addwf	??_ExtractMic& (0+255),w,b
 21137  0095BC  6F62               	movwf	memcpy@s1& (0+255),b
 21138  0095BE  0EFF               	movlw	255
 21139  0095C0  2170               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 21140  0095C2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21141  0095C4  0E00               	movlw	0
 21142  0095C6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21143  0095C8  0E04               	movlw	4
 21144  0095CA  6F64               	movwf	memcpy@n& (0+255),b
 21145  0095CC  ECEC  F047         	call	_memcpy	;wreg free
 21146                           
 21147                           ;lorawan.c: 2191: return mic;
 21148  0095D0  C071  F06B         	movff	ExtractMic@mic,?_ExtractMic
 21149  0095D4  C072  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 21150  0095D8  C073  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 21151  0095DC  C074  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 21152  0095E0  0012               	return		;funcret
 21153  0095E2                     __end_of_ExtractMic:
 21154                           	opt callstack 0
 21155                           
 21156 ;; *************** function _ComputeSessionKeys *****************
 21157 ;; Defined at:
 21158 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21159 ;; Parameters:    Size  Location     Type
 21160 ;;  joinAcceptBu    2   50[BANK0 ] PTR struct .
 21161 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21162 ;; Auto vars:     Size  Location     Type
 21163 ;;		None
 21164 ;; Return value:  Size  Location     Type
 21165 ;;                  1    wreg      void 
 21166 ;; Registers used:
 21167 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21168 ;; Tracked objects:
 21169 ;;		On entry : 0/0
 21170 ;;		On exit  : 0/0
 21171 ;;		Unchanged: 0/0
 21172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21176 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21177 ;;Total ram usage:        2 bytes
 21178 ;; Hardware stack levels used:    1
 21179 ;; Hardware stack levels required when called:   10
 21180 ;; This function calls:
 21181 ;;		_AESEncodeLoRa
 21182 ;;		_PrepareSessionKeys
 21183 ;; This function is called by:
 21184 ;;		_LORAWAN_RxDone
 21185 ;; This function uses a non-reentrant model
 21186 ;;
 21187                           
 21188                           	psect	text97
 21189  008422                     __ptext97:
 21190                           	opt callstack 0
 21191  008422                     _ComputeSessionKeys:
 21192                           	opt callstack 14
 21193                           
 21194                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21195                           
 21196                           ;incstack = 0
 21197  008422  0E37               	movlw	low (_loRa+50)
 21198  008424  0100               	movlb	0	; () banked
 21199  008426  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21200  008428  0E02               	movlw	high (_loRa+50)
 21201  00842A  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21202  00842C  0E01               	movlw	1
 21203  00842E  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21204  008430  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21205  008432  0E00               	movlw	0
 21206  008434  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21207  008436  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21208  008438  0E04               	movlw	4
 21209  00843A  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21210  00843C  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21211  00843E  0E00               	movlw	0
 21212  008440  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21213  008442  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21214  008444  EC27  F040         	call	_PrepareSessionKeys	;wreg free
 21215                           
 21216                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 21217  008448  0E02               	movlw	2
 21218  00844A  0102               	movlb	2	; () banked
 21219  00844C  6F37               	movwf	(_loRa+50)& (0+255),b
 21220                           
 21221                           ; BSR set to: 2
 21222                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 21223  00844E  0E37               	movlw	low (_loRa+50)
 21224  008450  0100               	movlb	0	; () banked
 21225  008452  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 21226  008454  0E02               	movlw	high (_loRa+50)
 21227  008456  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21228  008458  0E47               	movlw	low (_loRa+66)
 21229  00845A  6F80               	movwf	AESEncodeLoRa@key& (0+255),b
 21230  00845C  0E02               	movlw	high (_loRa+66)
 21231  00845E  6F81               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21232  008460  EC17  F04E         	call	_AESEncodeLoRa	;wreg free
 21233                           
 21234                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21235  008464  0E27               	movlw	low (_loRa+34)
 21236  008466  0100               	movlb	0	; () banked
 21237  008468  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21238  00846A  0E02               	movlw	high (_loRa+34)
 21239  00846C  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21240  00846E  0E01               	movlw	1
 21241  008470  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21242  008472  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21243  008474  0E00               	movlw	0
 21244  008476  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21245  008478  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21246  00847A  0E04               	movlw	4
 21247  00847C  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21248  00847E  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21249  008480  0E00               	movlw	0
 21250  008482  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21251  008484  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21252  008486  EC27  F040         	call	_PrepareSessionKeys	;wreg free
 21253                           
 21254                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 21255  00848A  0E01               	movlw	1
 21256  00848C  0102               	movlb	2	; () banked
 21257  00848E  6F27               	movwf	(_loRa+34)& (0+255),b
 21258                           
 21259                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 21260  008490  0E27               	movlw	low (_loRa+34)
 21261  008492  0100               	movlb	0	; () banked
 21262  008494  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 21263  008496  0E02               	movlw	high (_loRa+34)
 21264  008498  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21265  00849A  0E47               	movlw	low (_loRa+66)
 21266  00849C  6F80               	movwf	AESEncodeLoRa@key& (0+255),b
 21267  00849E  0E02               	movlw	high (_loRa+66)
 21268  0084A0  6F81               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21269  0084A2  EC17  F04E         	call	_AESEncodeLoRa	;wreg free
 21270  0084A6  0012               	return		;funcret
 21271  0084A8                     __end_of_ComputeSessionKeys:
 21272                           	opt callstack 0
 21273                           
 21274 ;; *************** function _PrepareSessionKeys *****************
 21275 ;; Defined at:
 21276 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21277 ;; Parameters:    Size  Location     Type
 21278 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 21279 ;;		 -> loRa.activationParameters(105), loRa(245), 
 21280 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 21281 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21282 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 21283 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21284 ;; Auto vars:     Size  Location     Type
 21285 ;;  index           1   17[BANK0 ] unsigned char 
 21286 ;; Return value:  Size  Location     Type
 21287 ;;                  1    wreg      void 
 21288 ;; Registers used:
 21289 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21290 ;; Tracked objects:
 21291 ;;		On entry : 0/0
 21292 ;;		On exit  : 0/0
 21293 ;;		Unchanged: 0/0
 21294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21295 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21296 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21298 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21299 ;;Total ram usage:        7 bytes
 21300 ;; Hardware stack levels used:    1
 21301 ;; Hardware stack levels required when called:    8
 21302 ;; This function calls:
 21303 ;;		_memcpy
 21304 ;;		_memset
 21305 ;; This function is called by:
 21306 ;;		_ComputeSessionKeys
 21307 ;; This function uses a non-reentrant model
 21308 ;;
 21309                           
 21310                           	psect	text98
 21311  00804E                     __ptext98:
 21312                           	opt callstack 0
 21313  00804E                     _PrepareSessionKeys:
 21314                           	opt callstack 15
 21315                           
 21316                           ;lorawan.c: 2047: uint8_t index = 0;
 21317                           
 21318                           ;incstack = 0
 21319  00804E  0E00               	movlw	0
 21320  008050  0100               	movlb	0	; () banked
 21321  008052  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 21322                           
 21323                           ; BSR set to: 0
 21324                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 21325  008054  C06B  F060         	movff	PrepareSessionKeys@sessionKey,memset@p1
 21326  008058  C06C  F061         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 21327  00805C  0E00               	movlw	0
 21328  00805E  6F63               	movwf	(memset@c+1)& (0+255),b
 21329  008060  0E00               	movlw	0
 21330  008062  6F62               	movwf	memset@c& (0+255),b
 21331  008064  0E00               	movlw	0
 21332  008066  6F65               	movwf	(memset@n+1)& (0+255),b
 21333  008068  0E10               	movlw	16
 21334  00806A  6F64               	movwf	memset@n& (0+255),b
 21335  00806C  ECCA  F04F         	call	_memset	;wreg free
 21336                           
 21337                           ;lorawan.c: 2050: index ++;
 21338  008070  0100               	movlb	0	; () banked
 21339  008072  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 21340                           
 21341                           ; BSR set to: 0
 21342                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 21343  008074  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21344  008076  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21345  008078  6F60               	movwf	memcpy@d1& (0+255),b
 21346  00807A  0E00               	movlw	0
 21347  00807C  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21348  00807E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21349  008080  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 21350  008084  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 21351  008088  0E00               	movlw	0
 21352  00808A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21353  00808C  0E03               	movlw	3
 21354  00808E  6F64               	movwf	memcpy@n& (0+255),b
 21355  008090  ECEC  F047         	call	_memcpy	;wreg free
 21356                           
 21357                           ;lorawan.c: 2053: index = index + 3;
 21358  008094  0100               	movlb	0	; () banked
 21359  008096  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21360  008098  0F03               	addlw	3
 21361  00809A  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 21362                           
 21363                           ; BSR set to: 0
 21364                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 21365  00809C  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21366  00809E  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21367  0080A0  6F60               	movwf	memcpy@d1& (0+255),b
 21368  0080A2  0E00               	movlw	0
 21369  0080A4  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21370  0080A6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21371  0080A8  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 21372  0080AC  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 21373  0080B0  0E00               	movlw	0
 21374  0080B2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21375  0080B4  0E03               	movlw	3
 21376  0080B6  6F64               	movwf	memcpy@n& (0+255),b
 21377  0080B8  ECEC  F047         	call	_memcpy	;wreg free
 21378                           
 21379                           ;lorawan.c: 2056: index = index + 3;
 21380  0080BC  0100               	movlb	0	; () banked
 21381  0080BE  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21382  0080C0  0F03               	addlw	3
 21383  0080C2  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 21384                           
 21385                           ; BSR set to: 0
 21386                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 21387  0080C4  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21388  0080C6  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21389  0080C8  6F60               	movwf	memcpy@d1& (0+255),b
 21390  0080CA  0E00               	movlw	0
 21391  0080CC  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21392  0080CE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21393  0080D0  0ED7               	movlw	low (_loRa+210)
 21394  0080D2  6F62               	movwf	memcpy@s1& (0+255),b
 21395  0080D4  0E02               	movlw	high (_loRa+210)
 21396  0080D6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21397  0080D8  0E00               	movlw	0
 21398  0080DA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21399  0080DC  0E02               	movlw	2
 21400  0080DE  6F64               	movwf	memcpy@n& (0+255),b
 21401  0080E0  ECEC  F047         	call	_memcpy	;wreg free
 21402  0080E4  0012               	return		;funcret
 21403  0080E6                     __end_of_PrepareSessionKeys:
 21404                           	opt callstack 0
 21405                           
 21406 ;; *************** function _CheckMcastFlags *****************
 21407 ;; Defined at:
 21408 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21409 ;; Parameters:    Size  Location     Type
 21410 ;;  hdr             2    0[BANK0 ] PTR struct .
 21411 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21412 ;; Auto vars:     Size  Location     Type
 21413 ;;		None
 21414 ;; Return value:  Size  Location     Type
 21415 ;;                  1    wreg      unsigned char 
 21416 ;; Registers used:
 21417 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21418 ;; Tracked objects:
 21419 ;;		On entry : 0/0
 21420 ;;		On exit  : 0/0
 21421 ;;		Unchanged: 0/0
 21422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21426 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21427 ;;Total ram usage:        2 bytes
 21428 ;; Hardware stack levels used:    1
 21429 ;; Hardware stack levels required when called:    7
 21430 ;; This function calls:
 21431 ;;		Nothing
 21432 ;; This function is called by:
 21433 ;;		_LORAWAN_RxDone
 21434 ;; This function uses a non-reentrant model
 21435 ;;
 21436                           
 21437                           	psect	text99
 21438  008730                     __ptext99:
 21439                           	opt callstack 0
 21440  008730                     _CheckMcastFlags:
 21441                           	opt callstack 17
 21442                           
 21443                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 21444                           
 21445                           ;incstack = 0
 21446  008730  0100               	movlb	0	; () banked
 21447  008732  EE20 F005          	lfsr	2,5
 21448  008736  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21449  008738  26D9               	addwf	fsr2l,f,c
 21450  00873A  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21451  00873C  22DA               	addwfc	fsr2h,f,c
 21452  00873E  BADF               	btfsc	indf2,5,c
 21453  008740  D012               	goto	u21950
 21454                           
 21455                           ; BSR set to: 0
 21456  008742  EE20 F005          	lfsr	2,5
 21457  008746  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21458  008748  26D9               	addwf	fsr2l,f,c
 21459  00874A  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21460  00874C  22DA               	addwfc	fsr2h,f,c
 21461  00874E  BCDF               	btfsc	indf2,6,c
 21462  008750  D00A               	goto	u21950
 21463                           
 21464                           ; BSR set to: 0
 21465  008752  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 21466  008756  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 21467  00875A  38DF               	swapf	223,w,c
 21468  00875C  32E8               	rrcf	wreg,f,c
 21469  00875E  0B07               	andlw	7
 21470  008760  0A03               	xorlw	3
 21471  008762  B4D8               	btfsc	status,2,c
 21472  008764  D002               	goto	l20136
 21473  008766                     u21950:
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;lorawan.c: 2110: {;lorawan.c: 2111: return 0;
 21477  008766  0E00               	movlw	0
 21478  008768  0012               	return	
 21479  00876A                     l20136:
 21480                           
 21481                           ; BSR set to: 0
 21482                           ;lorawan.c: 2112: };lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 21483  00876A  EE20 F005          	lfsr	2,5
 21484  00876E  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21485  008770  26D9               	addwf	fsr2l,f,c
 21486  008772  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21487  008774  22DA               	addwfc	fsr2h,f,c
 21488  008776  50DF               	movf	223,w,c
 21489  008778  0B0F               	andlw	15
 21490  00877A  0900               	iorlw	0
 21491  00877C  A4D8               	btfss	status,2,c
 21492  00877E  D7F3               	goto	u21950
 21493                           
 21494                           ; BSR set to: 0
 21495                           ;lorawan.c: 2118: else;lorawan.c: 2119: {;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) 
      +                          + 8))
 21496  008780  EE20 F008          	lfsr	2,8
 21497  008784  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21498  008786  26D9               	addwf	fsr2l,f,c
 21499  008788  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21500  00878A  22DA               	addwfc	fsr2h,f,c
 21501  00878C  50DF               	movf	indf2,w,c
 21502  00878E  B4D8               	btfsc	status,2,c
 21503  008790  D7EA               	goto	u21950
 21504                           
 21505                           ; BSR set to: 0
 21506                           ;lorawan.c: 2123: };lorawan.c: 2124: };lorawan.c: 2126: if (hdr->members.fCtrl.fPending 
      +                          == 1)
 21507  008792  EE20 F005          	lfsr	2,5
 21508  008796  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21509  008798  26D9               	addwf	fsr2l,f,c
 21510  00879A  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21511  00879C  22DA               	addwfc	fsr2h,f,c
 21512  00879E  A8DF               	btfss	indf2,4,c
 21513  0087A0  D002               	goto	l20154
 21514                           
 21515                           ; BSR set to: 0
 21516                           ;lorawan.c: 2127: {;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 21517  0087A2  0102               	movlb	2	; () banked
 21518  0087A4  8705               	bsf	_loRa& (0+255),3,b
 21519  0087A6                     l20154:
 21520                           
 21521                           ;lorawan.c: 2129: };lorawan.c: 2131: return 1;
 21522  0087A6  0E01               	movlw	1
 21523  0087A8  0012               	return		;funcret
 21524  0087AA                     __end_of_CheckMcastFlags:
 21525                           	opt callstack 0
 21526                           
 21527 ;; *************** function _CheckFlags *****************
 21528 ;; Defined at:
 21529 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21530 ;; Parameters:    Size  Location     Type
 21531 ;;  hdr             2    0[BANK0 ] PTR struct .
 21532 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21533 ;; Auto vars:     Size  Location     Type
 21534 ;;		None
 21535 ;; Return value:  Size  Location     Type
 21536 ;;                  1    wreg      void 
 21537 ;; Registers used:
 21538 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21539 ;; Tracked objects:
 21540 ;;		On entry : 0/0
 21541 ;;		On exit  : 0/0
 21542 ;;		Unchanged: 0/0
 21543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21544 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21547 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21548 ;;Total ram usage:        2 bytes
 21549 ;; Hardware stack levels used:    1
 21550 ;; Hardware stack levels required when called:    7
 21551 ;; This function calls:
 21552 ;;		Nothing
 21553 ;; This function is called by:
 21554 ;;		_LORAWAN_RxDone
 21555 ;; This function uses a non-reentrant model
 21556 ;;
 21557                           
 21558                           	psect	text100
 21559  009096                     __ptext100:
 21560                           	opt callstack 0
 21561  009096                     _CheckFlags:
 21562                           	opt callstack 17
 21563                           
 21564                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 21565                           
 21566                           ;incstack = 0
 21567  009096  0100               	movlb	0	; () banked
 21568  009098  EE20 F005          	lfsr	2,5
 21569  00909C  5160               	movf	CheckFlags@hdr& (0+255),w,b
 21570  00909E  26D9               	addwf	fsr2l,f,c
 21571  0090A0  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21572  0090A2  22DA               	addwfc	fsr2h,f,c
 21573  0090A4  AEDF               	btfss	indf2,7,c
 21574  0090A6  D002               	goto	l20184
 21575                           
 21576                           ; BSR set to: 0
 21577                           ;lorawan.c: 2077: {;lorawan.c: 2078: loRa.macStatus.adr = 1;
 21578  0090A8  0102               	movlb	2	; () banked
 21579  0090AA  8D07               	bsf	(_loRa+2)& (0+255),6,b
 21580  0090AC                     l20184:
 21581                           
 21582                           ;lorawan.c: 2079: };lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 21583  0090AC  0100               	movlb	0	; () banked
 21584  0090AE  EE20 F005          	lfsr	2,5
 21585  0090B2  5160               	movf	CheckFlags@hdr& (0+255),w,b
 21586  0090B4  26D9               	addwf	fsr2l,f,c
 21587  0090B6  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21588  0090B8  22DA               	addwfc	fsr2h,f,c
 21589  0090BA  A8DF               	btfss	indf2,4,c
 21590  0090BC  D002               	goto	l20188
 21591                           
 21592                           ; BSR set to: 0
 21593                           ;lorawan.c: 2082: {;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 21594  0090BE  0102               	movlb	2	; () banked
 21595  0090C0  8705               	bsf	_loRa& (0+255),3,b
 21596  0090C2                     l20188:
 21597                           
 21598                           ;lorawan.c: 2084: };lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 21599  0090C2  0100               	movlb	0	; () banked
 21600  0090C4  EE20 F005          	lfsr	2,5
 21601  0090C8  5160               	movf	CheckFlags@hdr& (0+255),w,b
 21602  0090CA  26D9               	addwf	fsr2l,f,c
 21603  0090CC  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21604  0090CE  22DA               	addwfc	fsr2h,f,c
 21605  0090D0  ACDF               	btfss	indf2,6,c
 21606  0090D2  D002               	goto	l20192
 21607                           
 21608                           ; BSR set to: 0
 21609                           ;lorawan.c: 2087: {;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 21610  0090D4  0102               	movlb	2	; () banked
 21611  0090D6  8905               	bsf	_loRa& (0+255),4,b
 21612  0090D8                     l20192:
 21613                           
 21614                           ;lorawan.c: 2089: };lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA
      +                          _CONFIRMED_DOWN)
 21615  0090D8  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 21616  0090DC  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 21617  0090E0  0100               	movlb	0	; () banked
 21618  0090E2  38DF               	swapf	223,w,c
 21619  0090E4  32E8               	rrcf	wreg,f,c
 21620  0090E6  0B07               	andlw	7
 21621  0090E8  0A05               	xorlw	5
 21622  0090EA  A4D8               	btfss	status,2,c
 21623  0090EC  0012               	return	
 21624                           
 21625                           ; BSR set to: 0
 21626                           ;lorawan.c: 2092: {;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMess
      +                          age = 1;
 21627  0090EE  0102               	movlb	2	; () banked
 21628  0090F0  8305               	bsf	_loRa& (0+255),1,b
 21629  0090F2  0012               	return		;funcret
 21630  0090F4                     __end_of_CheckFlags:
 21631                           	opt callstack 0
 21632                           
 21633 ;; *************** function _RADIO_FSKPacketSent *****************
 21634 ;; Defined at:
 21635 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 21636 ;; Parameters:    Size  Location     Type
 21637 ;;		None
 21638 ;; Auto vars:     Size  Location     Type
 21639 ;;  timeOnAir       4  119[BANK0 ] unsigned long 
 21640 ;;  irqFlags        1  127[BANK0 ] unsigned char 
 21641 ;; Return value:  Size  Location     Type
 21642 ;;                  1    wreg      void 
 21643 ;; Registers used:
 21644 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21645 ;; Tracked objects:
 21646 ;;		On entry : 0/0
 21647 ;;		On exit  : 0/0
 21648 ;;		Unchanged: 0/0
 21649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21651 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21653 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21654 ;;Total ram usage:        9 bytes
 21655 ;; Hardware stack levels used:    1
 21656 ;; Hardware stack levels required when called:   15
 21657 ;; This function calls:
 21658 ;;		_LORAWAN_TxDone
 21659 ;;		_RADIO_RegisterRead
 21660 ;;		_RADIO_WriteMode
 21661 ;;		_SwTimerReadValue
 21662 ;;		_SwTimerStop
 21663 ;;		___lmul
 21664 ;; This function is called by:
 21665 ;;		_RADIO_DIO0
 21666 ;; This function uses a non-reentrant model
 21667 ;;
 21668                           
 21669                           	psect	text101
 21670  00662C                     __ptext101:
 21671                           	opt callstack 0
 21672  00662C                     _RADIO_FSKPacketSent:
 21673                           	opt callstack 11
 21674                           
 21675                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;;radio_driver_SX1276.c: 1096: uint32_t ti
      +                          meOnAir;;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 21676                           
 21677                           ;incstack = 0
 21678  00662C  0E3F               	movlw	63
 21679  00662E  ECF5  F050         	call	_RADIO_RegisterRead
 21680  006632  0100               	movlb	0	; () banked
 21681  006634  6FDF               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 21682                           
 21683                           ; BSR set to: 0
 21684                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 21685  006636  A7DF               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 21686  006638  0012               	return	
 21687                           
 21688                           ; BSR set to: 0
 21689                           ;radio_driver_SX1276.c: 1100: {;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
 21690  00663A  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 21691  00663E  0E00               	movlw	0
 21692  006640  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 21693  006642  0E00               	movlw	0
 21694  006644  EC1C  F036         	call	_RADIO_WriteMode
 21695                           
 21696                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 21697  006648  0101               	movlb	1	; () banked
 21698  00664A  914C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 21699                           
 21700                           ; BSR set to: 1
 21701                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 21702  00664C  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 21703  00664E  ECD5  F051         	call	_SwTimerStop
 21704                           
 21705                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 21706  006652  0101               	movlb	1	; () banked
 21707  006654  B94C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 21708  006656  0012               	return	
 21709                           
 21710                           ; BSR set to: 1
 21711                           ;radio_driver_SX1276.c: 1107: {;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)2000
      +                          0) - ((SwTimerReadValue(RadioConfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint
      +                          32_t)(SwTimerReadValue(RadioConfiguration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((
      +                          uint32_t)(SwTimerReadValue(RadioConfiguration.t
 21712  006658  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21713  00665A  EC04  F04D         	call	_SwTimerReadValue
 21714  00665E  0100               	movlb	0	; () banked
 21715  006660  518C               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 21716  006662  E108               	bnz	u23600
 21717  006664  0E1F               	movlw	31
 21718  006666  5D89               	subwf	?_SwTimerReadValue& (0+255),w,b
 21719  006668  0EAC               	movlw	172
 21720  00666A  598A               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 21721  00666C  0EDF               	movlw	223
 21722  00666E  598B               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 21723  006670  A0D8               	btfss	status,0,c
 21724  006672  D021               	goto	l21008
 21725  006674                     u23600:
 21726                           
 21727                           ; BSR set to: 0
 21728  006674  0101               	movlb	1	; () banked
 21729  006676  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21730  006678  EC04  F04D         	call	_SwTimerReadValue
 21731  00667C  0E0D               	movlw	13
 21732  00667E  D006               	goto	u23610
 21733  006680                     u23615:
 21734  006680  0100               	movlb	0	; () banked
 21735  006682  90D8               	bcf	status,0,c
 21736  006684  338C               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 21737  006686  338B               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 21738  006688  338A               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 21739  00668A  3389               	rrcf	?_SwTimerReadValue& (0+255),f,b
 21740  00668C                     u23610:
 21741  00668C  2EE8               	decfsz	wreg,f,c
 21742  00668E  D7F8               	goto	u23615
 21743  006690  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 21744  006694  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 21745  006698  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 21746  00669C  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 21747  0066A0  0E7D               	movlw	125
 21748  0066A2  6F96               	movwf	___lmul@multiplicand& (0+255),b
 21749  0066A4  0E00               	movlw	0
 21750  0066A6  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21751  0066A8  0E00               	movlw	0
 21752  0066AA  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21753  0066AC  0E00               	movlw	0
 21754  0066AE  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21755  0066B0  ECD6  F048         	call	___lmul	;wreg free
 21756  0066B4  D021               	goto	L23
 21757  0066B6                     l21008:
 21758                           
 21759                           ; BSR set to: 0
 21760  0066B6  0101               	movlb	1	; () banked
 21761  0066B8  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21762  0066BA  EC04  F04D         	call	_SwTimerReadValue
 21763  0066BE  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 21764  0066C2  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 21765  0066C6  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 21766  0066CA  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 21767  0066CE  0E7D               	movlw	125
 21768  0066D0  0100               	movlb	0	; () banked
 21769  0066D2  6F96               	movwf	___lmul@multiplicand& (0+255),b
 21770  0066D4  0E00               	movlw	0
 21771  0066D6  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21772  0066D8  0E00               	movlw	0
 21773  0066DA  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21774  0066DC  0E00               	movlw	0
 21775  0066DE  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21776  0066E0  ECD6  F048         	call	___lmul	;wreg free
 21777  0066E4  0E0D               	movlw	13
 21778  0066E6  D006               	goto	u23620
 21779  0066E8                     u23625:
 21780  0066E8  0100               	movlb	0	; () banked
 21781  0066EA  90D8               	bcf	status,0,c
 21782  0066EC  3395               	rrcf	(?___lmul+3)& (0+255),f,b
 21783  0066EE  3394               	rrcf	(?___lmul+2)& (0+255),f,b
 21784  0066F0  3393               	rrcf	(?___lmul+1)& (0+255),f,b
 21785  0066F2  3392               	rrcf	?___lmul& (0+255),f,b
 21786  0066F4                     u23620:
 21787  0066F4  2EE8               	decfsz	wreg,f,c
 21788  0066F6  D7F8               	goto	u23625
 21789  0066F8                     L23:
 21790  0066F8  C092  F0DB         	movff	?___lmul,_RADIO_FSKPacketSent$800
 21791  0066FC  C093  F0DC         	movff	?___lmul+1,_RADIO_FSKPacketSent$800+1
 21792  006700  C094  F0DD         	movff	?___lmul+2,_RADIO_FSKPacketSent$800+2
 21793  006704  C095  F0DE         	movff	?___lmul+3,_RADIO_FSKPacketSent$800+3
 21794  006708  0100               	movlb	0	; () banked
 21795  00670A  51DB               	movf	_RADIO_FSKPacketSent$800& (0+255),w,b
 21796  00670C  0820               	sublw	32
 21797  00670E  6FD7               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21798  006710  0E4E               	movlw	78
 21799  006712  55DC               	subfwb	(_RADIO_FSKPacketSent$800+1)& (0+255),w,b
 21800  006714  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21801  006716  0E00               	movlw	0
 21802  006718  55DD               	subfwb	(_RADIO_FSKPacketSent$800+2)& (0+255),w,b
 21803  00671A  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21804  00671C  0E00               	movlw	0
 21805  00671E  55DE               	subfwb	(_RADIO_FSKPacketSent$800+3)& (0+255),w,b
 21806  006720  6FDA               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21810  006722  0101               	movlb	1	; () banked
 21811  006724  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21812  006726  ECD5  F051         	call	_SwTimerStop
 21813                           
 21814                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21815  00672A  C0D7  F0B3         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21816  00672E  C0D8  F0B4         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21817  006732  ECEC  F005         	call	_LORAWAN_TxDone	;wreg free
 21818  006736  0012               	return		;funcret
 21819  006738                     __end_of_RADIO_FSKPacketSent:
 21820                           	opt callstack 0
 21821                           
 21822 ;; *************** function _LORAWAN_TxDone *****************
 21823 ;; Defined at:
 21824 ;;		line 366 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21825 ;; Parameters:    Size  Location     Type
 21826 ;;  timeOnAir       2   83[BANK0 ] unsigned int 
 21827 ;; Auto vars:     Size  Location     Type
 21828 ;;  minim           4  114[BANK0 ] unsigned long 
 21829 ;;  ticks           4  110[BANK0 ] unsigned long 
 21830 ;;  delta           4  102[BANK0 ] unsigned long 
 21831 ;;  i               1  118[BANK0 ] unsigned char 
 21832 ;;  found           1  101[BANK0 ] unsigned char 
 21833 ;; Return value:  Size  Location     Type
 21834 ;;                  1    wreg      void 
 21835 ;; Registers used:
 21836 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21837 ;; Tracked objects:
 21838 ;;		On entry : 0/0
 21839 ;;		On exit  : 0/0
 21840 ;;		Unchanged: 0/0
 21841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21842 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21843 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21844 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21845 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21846 ;;Total ram usage:       36 bytes
 21847 ;; Hardware stack levels used:    1
 21848 ;; Hardware stack levels required when called:   14
 21849 ;; This function calls:
 21850 ;;		_LORAWAN_EnterContinuousReceive
 21851 ;;		_RADIO_GetStatus
 21852 ;;		_RxData
 21853 ;;		_SwTimerIsRunning
 21854 ;;		_SwTimerReadValue
 21855 ;;		_SwTimerSetTimeout
 21856 ;;		_SwTimerStart
 21857 ;;		_SwTimerStop
 21858 ;;		___lldiv
 21859 ;;		___lmul
 21860 ;; This function is called by:
 21861 ;;		_RADIO_TxDone
 21862 ;;		_RADIO_FSKPacketSent
 21863 ;;		_RADIO_WatchdogTimeout
 21864 ;; This function uses a non-reentrant model
 21865 ;;
 21866                           
 21867                           	psect	text102
 21868  000BD8                     __ptext102:
 21869                           	opt callstack 0
 21870  000BD8                     _LORAWAN_TxDone:
 21871                           	opt callstack 11
 21872                           
 21873                           ;lorawan_eu.c: 368: if (loRa.macStatus.macPause == 0)
 21874                           
 21875                           ;incstack = 0
 21876  000BD8  0102               	movlb	2	; () banked
 21877  000BDA  B108               	btfsc	(_loRa+3)& (0+255),0,b
 21878  000BDC  D348               	goto	l20820
 21879                           
 21880                           ; BSR set to: 2
 21881                           ;lorawan_eu.c: 369: {;lorawan_eu.c: 370: bool found = 0;
 21882  000BDE  0E00               	movlw	0
 21883  000BE0  0100               	movlb	0	; () banked
 21884  000BE2  6FC5               	movwf	LORAWAN_TxDone@found& (0+255),b
 21885                           
 21886                           ;lorawan_eu.c: 371: uint8_t i;;lorawan_eu.c: 372: uint32_t delta = 0, minim = (429496729
      +                          5UL), ticks;
 21887  000BE4  0E00               	movlw	0
 21888  000BE6  6FC6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 21889  000BE8  0E00               	movlw	0
 21890  000BEA  6FC7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21891  000BEC  0E00               	movlw	0
 21892  000BEE  6FC8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21893  000BF0  0E00               	movlw	0
 21894  000BF2  6FC9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21895                           
 21896                           ; BSR set to: 0
 21897  000BF4  69D2               	setf	LORAWAN_TxDone@minim& (0+255),b
 21898  000BF6  69D3               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21899  000BF8  69D4               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21900  000BFA  69D5               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21901                           
 21902                           ;lorawan_eu.c: 375: loRa.rx2DelayExpired = 0;
 21903  000BFC  0E00               	movlw	0
 21904  000BFE  0102               	movlb	2	; () banked
 21905  000C00  6FF6               	movwf	(_loRa+241)& (0+255),b
 21906                           
 21907                           ;lorawan_eu.c: 377: loRa.macStatus.macState = BEFORE_RX1;
 21908  000C02  5107               	movf	(_loRa+2)& (0+255),w,b
 21909  000C04  0BF0               	andlw	-16
 21910  000C06  0902               	iorlw	2
 21911  000C08  6F07               	movwf	(_loRa+2)& (0+255),b
 21912                           
 21913                           ; BSR set to: 2
 21914                           ;lorawan_eu.c: 379: i = loRa.lastUsedChannelIndex;
 21915  000C0A  C2DF  F0D6         	movff	_loRa+218,LORAWAN_TxDone@i
 21916                           
 21917                           ; BSR set to: 2
 21918                           ;lorawan_eu.c: 382: if (loRa.lorawanMacStatus.joining == 1)
 21919  000C0E  A505               	btfss	_loRa& (0+255),2,b
 21920  000C10  D0B6               	goto	l20754
 21921                           
 21922                           ; BSR set to: 2
 21923                           ;lorawan_eu.c: 383: {;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( ((
      +                          (uint32_t)(loRa.protocolParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1
      +                          Parameters.dataRate])) << (12)) / 125UL ));
 21924  000C12  0E0F               	movlw	low _rxWindowOffset
 21925  000C14  251C               	addwf	(_loRa+23)& (0+255),w,b
 21926  000C16  6EF6               	movwf	tblptrl,c
 21927  000C18  6AF7               	clrf	tblptrh,c
 21928  000C1A  0EFF               	movlw	high _rxWindowOffset
 21929  000C1C  22F7               	addwfc	tblptrh,f,c
 21930  000C1E                     	if	1	;There are 3 active tblptr bytes
 21931  000C1E  6AF8               	clrf	tblptru,c
 21932  000C20  0E00               	movlw	low (__mediumconst shr (0+16))
 21933  000C22  22F8               	addwfc	tblptru,f,c
 21934  000C24                     	endif
 21935  000C24  0008               	tblrd		*
 21936  000C26  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 21937  000C2A  519D               	movf	(_loRa+152)& (0+255),w,b
 21938  000C2C  0100               	movlb	0	; () banked
 21939  000C2E  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21940  000C30  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21941  000C32  0E00               	movlw	0
 21942  000C34  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21943  000C36  0EFF               	movlw	255
 21944  000C38  0102               	movlb	2	; () banked
 21945  000C3A  219E               	addwfc	(_loRa+153)& (0+255),w,b
 21946  000C3C  0100               	movlb	0	; () banked
 21947  000C3E  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21948  000C40  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21949  000C42  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21950  000C44  0E0C               	movlw	12
 21951  000C46                     u23135:
 21952  000C46  90D8               	bcf	status,0,c
 21953  000C48  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21954  000C4A  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21955  000C4C  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21956  000C4E  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21957  000C50  2EE8               	decfsz	wreg,f,c
 21958  000C52  D7F9               	goto	u23135
 21959  000C54  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21960  000C58  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21961  000C5C  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21962  000C60  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21963  000C64  0E7D               	movlw	125
 21964  000C66  6F64               	movwf	___lldiv@divisor& (0+255),b
 21965  000C68  0E00               	movlw	0
 21966  000C6A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 21967  000C6C  0E00               	movlw	0
 21968  000C6E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 21969  000C70  0E00               	movlw	0
 21970  000C72  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 21971  000C74  EC96  F042         	call	___lldiv	;wreg free
 21972  000C78  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21973  000C7C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21974  000C80  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21975  000C84  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21976  000C88  0102               	movlb	2	; () banked
 21977  000C8A  51E7               	movf	(_loRa+226)& (0+255),w,b
 21978  000C8C  EC7F  F04C         	call	_SwTimerSetTimeout
 21979                           
 21980                           ;lorawan_eu.c: 385: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21981  000C90  0E0F               	movlw	low _rxWindowOffset
 21982  000C92  0102               	movlb	2	; () banked
 21983  000C94  2521               	addwf	(_loRa+28)& (0+255),w,b
 21984  000C96  6EF6               	movwf	tblptrl,c
 21985  000C98  6AF7               	clrf	tblptrh,c
 21986  000C9A  0EFF               	movlw	high _rxWindowOffset
 21987  000C9C  22F7               	addwfc	tblptrh,f,c
 21988  000C9E                     	if	1	;There are 3 active tblptr bytes
 21989  000C9E  6AF8               	clrf	tblptru,c
 21990  000CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 21991  000CA2  22F8               	addwfc	tblptru,f,c
 21992  000CA4                     	endif
 21993  000CA4  0008               	tblrd		*
 21994  000CA6  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 21995  000CAA  519F               	movf	(_loRa+154)& (0+255),w,b
 21996  000CAC  0100               	movlb	0	; () banked
 21997  000CAE  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21998  000CB0  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21999  000CB2  0E00               	movlw	0
 22000  000CB4  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22001  000CB6  0EFF               	movlw	255
 22002  000CB8  0102               	movlb	2	; () banked
 22003  000CBA  21A0               	addwfc	(_loRa+155)& (0+255),w,b
 22004  000CBC  0100               	movlb	0	; () banked
 22005  000CBE  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22006  000CC0  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22007  000CC2  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22008  000CC4  0E0C               	movlw	12
 22009  000CC6                     u23145:
 22010  000CC6  90D8               	bcf	status,0,c
 22011  000CC8  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22012  000CCA  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22013  000CCC  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22014  000CCE  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22015  000CD0  2EE8               	decfsz	wreg,f,c
 22016  000CD2  D7F9               	goto	u23145
 22017  000CD4  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22018  000CD8  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22019  000CDC  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22020  000CE0  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22021  000CE4  0E7D               	movlw	125
 22022  000CE6  6F64               	movwf	___lldiv@divisor& (0+255),b
 22023  000CE8  0E00               	movlw	0
 22024  000CEA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22025  000CEC  0E00               	movlw	0
 22026  000CEE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22027  000CF0  0E00               	movlw	0
 22028  000CF2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22029  000CF4  EC96  F042         	call	___lldiv	;wreg free
 22030  000CF8  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22031  000CFC  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22032  000D00  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22033  000D04  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22034  000D08  0102               	movlb	2	; () banked
 22035  000D0A  51E8               	movf	(_loRa+227)& (0+255),w,b
 22036  000D0C  EC7F  F04C         	call	_SwTimerSetTimeout
 22037                           
 22038                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept1TimerId);
 22039  000D10  0102               	movlb	2	; () banked
 22040  000D12  51E7               	movf	(_loRa+226)& (0+255),w,b
 22041  000D14  EC73  F040         	call	_SwTimerStart
 22042                           
 22043                           ;lorawan_eu.c: 387: SwTimerStart(loRa.joinAccept2TimerId);
 22044  000D18  0102               	movlb	2	; () banked
 22045  000D1A  51E8               	movf	(_loRa+227)& (0+255),w,b
 22046  000D1C  EC73  F040         	call	_SwTimerStart
 22047                           
 22048                           ;lorawan_eu.c: 389: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 22049  000D20  C2E0  F092         	movff	_loRa+219,___lmul@multiplier
 22050  000D24  C2E1  F093         	movff	_loRa+220,___lmul@multiplier+1
 22051  000D28  0100               	movlb	0	; () banked
 22052  000D2A  6B94               	clrf	(___lmul@multiplier+2)& (0+255),b
 22053  000D2C  6B95               	clrf	(___lmul@multiplier+3)& (0+255),b
 22054  000D2E  0ED6               	movlw	214
 22055  000D30  6F96               	movwf	___lmul@multiplicand& (0+255),b
 22056  000D32  0E0B               	movlw	11
 22057  000D34  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22058  000D36  0E00               	movlw	0
 22059  000D38  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22060  000D3A  0E00               	movlw	0
 22061  000D3C  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22062  000D3E  ECD6  F048         	call	___lmul	;wreg free
 22063  000D42  0EFF               	movlw	255
 22064  000D44  0100               	movlb	0	; () banked
 22065  000D46  2592               	addwf	?___lmul& (0+255),w,b
 22066  000D48  6FCA               	movwf	_LORAWAN_TxDone$6895& (0+255),b
 22067  000D4A  0EFF               	movlw	255
 22068  000D4C  2193               	addwfc	(?___lmul+1)& (0+255),w,b
 22069  000D4E  6FCB               	movwf	(_LORAWAN_TxDone$6895+1)& (0+255),b
 22070  000D50  0EFF               	movlw	255
 22071  000D52  2194               	addwfc	(?___lmul+2)& (0+255),w,b
 22072  000D54  6FCC               	movwf	(_LORAWAN_TxDone$6895+2)& (0+255),b
 22073  000D56  0EFF               	movlw	255
 22074  000D58  2195               	addwfc	(?___lmul+3)& (0+255),w,b
 22075  000D5A  6FCD               	movwf	(_LORAWAN_TxDone$6895+3)& (0+255),b
 22076                           
 22077                           ; BSR set to: 0
 22078                           ;lorawan_eu.c: 389: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 22079  000D5C  C0CA  F092         	movff	_LORAWAN_TxDone$6895,___lmul@multiplier
 22080  000D60  C0CB  F093         	movff	_LORAWAN_TxDone$6895+1,___lmul@multiplier+1
 22081  000D64  C0CC  F094         	movff	_LORAWAN_TxDone$6895+2,___lmul@multiplier+2
 22082  000D68  C0CD  F095         	movff	_LORAWAN_TxDone$6895+3,___lmul@multiplier+3
 22083  000D6C  C0B3  F096         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 22084  000D70  C0B4  F097         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 22085  000D74  6B98               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22086  000D76  6B99               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22087  000D78  ECD6  F048         	call	___lmul	;wreg free
 22088  000D7C  D0CE               	goto	L24
 22089  000D7E                     l20754:
 22090                           
 22091                           ; BSR set to: 2
 22092                           ;lorawan_eu.c: 391: else;lorawan_eu.c: 392: {;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.
      +                          receiveWindow1TimerId, ( (((uint32_t)(loRa.protocolParameters.receiveDelay1 + rxWindowOf
      +                          fset[loRa.receiveWindow1Parameters.dataRate])) << (12)) / 125UL ));
 22093  000D7E  0E0F               	movlw	low _rxWindowOffset
 22094  000D80  251C               	addwf	(_loRa+23)& (0+255),w,b
 22095  000D82  6EF6               	movwf	tblptrl,c
 22096  000D84  6AF7               	clrf	tblptrh,c
 22097  000D86  0EFF               	movlw	high _rxWindowOffset
 22098  000D88  22F7               	addwfc	tblptrh,f,c
 22099  000D8A                     	if	1	;There are 3 active tblptr bytes
 22100  000D8A  6AF8               	clrf	tblptru,c
 22101  000D8C  0E00               	movlw	low (__mediumconst shr (0+16))
 22102  000D8E  22F8               	addwfc	tblptru,f,c
 22103  000D90                     	endif
 22104  000D90  0008               	tblrd		*
 22105  000D92  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 22106  000D96  5199               	movf	(_loRa+148)& (0+255),w,b
 22107  000D98  0100               	movlb	0	; () banked
 22108  000D9A  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22109  000D9C  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22110  000D9E  0E00               	movlw	0
 22111  000DA0  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22112  000DA2  0EFF               	movlw	255
 22113  000DA4  0102               	movlb	2	; () banked
 22114  000DA6  219A               	addwfc	(_loRa+149)& (0+255),w,b
 22115  000DA8  0100               	movlb	0	; () banked
 22116  000DAA  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22117  000DAC  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22118  000DAE  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22119  000DB0  0E0C               	movlw	12
 22120  000DB2                     u23155:
 22121  000DB2  90D8               	bcf	status,0,c
 22122  000DB4  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22123  000DB6  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22124  000DB8  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22125  000DBA  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22126  000DBC  2EE8               	decfsz	wreg,f,c
 22127  000DBE  D7F9               	goto	u23155
 22128  000DC0  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22129  000DC4  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22130  000DC8  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22131  000DCC  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22132  000DD0  0E7D               	movlw	125
 22133  000DD2  6F64               	movwf	___lldiv@divisor& (0+255),b
 22134  000DD4  0E00               	movlw	0
 22135  000DD6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22136  000DD8  0E00               	movlw	0
 22137  000DDA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22138  000DDC  0E00               	movlw	0
 22139  000DDE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22140  000DE0  EC96  F042         	call	___lldiv	;wreg free
 22141  000DE4  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22142  000DE8  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22143  000DEC  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22144  000DF0  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22145  000DF4  0102               	movlb	2	; () banked
 22146  000DF6  51E9               	movf	(_loRa+228)& (0+255),w,b
 22147  000DF8  EC7F  F04C         	call	_SwTimerSetTimeout
 22148                           
 22149                           ;lorawan_eu.c: 394: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22150  000DFC  0E0F               	movlw	low _rxWindowOffset
 22151  000DFE  0102               	movlb	2	; () banked
 22152  000E00  2521               	addwf	(_loRa+28)& (0+255),w,b
 22153  000E02  6EF6               	movwf	tblptrl,c
 22154  000E04  6AF7               	clrf	tblptrh,c
 22155  000E06  0EFF               	movlw	high _rxWindowOffset
 22156  000E08  22F7               	addwfc	tblptrh,f,c
 22157  000E0A                     	if	1	;There are 3 active tblptr bytes
 22158  000E0A  6AF8               	clrf	tblptru,c
 22159  000E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 22160  000E0E  22F8               	addwfc	tblptru,f,c
 22161  000E10                     	endif
 22162  000E10  0008               	tblrd		*
 22163  000E12  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 22164  000E16  519B               	movf	(_loRa+150)& (0+255),w,b
 22165  000E18  0100               	movlb	0	; () banked
 22166  000E1A  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22167  000E1C  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22168  000E1E  0E00               	movlw	0
 22169  000E20  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22170  000E22  0EFF               	movlw	255
 22171  000E24  0102               	movlb	2	; () banked
 22172  000E26  219C               	addwfc	(_loRa+151)& (0+255),w,b
 22173  000E28  0100               	movlb	0	; () banked
 22174  000E2A  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22175  000E2C  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22176  000E2E  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22177  000E30  0E0C               	movlw	12
 22178  000E32                     u23165:
 22179  000E32  90D8               	bcf	status,0,c
 22180  000E34  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22181  000E36  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22182  000E38  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22183  000E3A  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22184  000E3C  2EE8               	decfsz	wreg,f,c
 22185  000E3E  D7F9               	goto	u23165
 22186  000E40  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22187  000E44  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22188  000E48  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22189  000E4C  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22190  000E50  0E7D               	movlw	125
 22191  000E52  6F64               	movwf	___lldiv@divisor& (0+255),b
 22192  000E54  0E00               	movlw	0
 22193  000E56  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22194  000E58  0E00               	movlw	0
 22195  000E5A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22196  000E5C  0E00               	movlw	0
 22197  000E5E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22198  000E60  EC96  F042         	call	___lldiv	;wreg free
 22199  000E64  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22200  000E68  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22201  000E6C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22202  000E70  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22203  000E74  0102               	movlb	2	; () banked
 22204  000E76  51EA               	movf	(_loRa+229)& (0+255),w,b
 22205  000E78  EC7F  F04C         	call	_SwTimerSetTimeout
 22206                           
 22207                           ;lorawan_eu.c: 395: SwTimerStart(loRa.receiveWindow1TimerId);
 22208  000E7C  0102               	movlb	2	; () banked
 22209  000E7E  51E9               	movf	(_loRa+228)& (0+255),w,b
 22210  000E80  EC73  F040         	call	_SwTimerStart
 22211                           
 22212                           ;lorawan_eu.c: 396: if (CLASS_A == loRa.deviceClass)
 22213  000E84  0102               	movlb	2	; () banked
 22214  000E86  5117               	movf	(_loRa+18)& (0+255),w,b
 22215  000E88  A4D8               	btfss	status,2,c
 22216  000E8A  D003               	goto	l1040
 22217                           
 22218                           ; BSR set to: 2
 22219                           ;lorawan_eu.c: 397: {;lorawan_eu.c: 398: SwTimerStart(loRa.receiveWindow2TimerId);
 22220  000E8C  51EA               	movf	(_loRa+229)& (0+255),w,b
 22221  000E8E  EC73  F040         	call	_SwTimerStart
 22222  000E92                     l1040:
 22223                           
 22224                           ;lorawan_eu.c: 399: };lorawan_eu.c: 401: Channels[i].channelTimer = ((uint32_t)timeOnAir
      +                          ) * (((uint32_t)Channels[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 22225  000E92  0100               	movlb	0	; () banked
 22226  000E94  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22227  000E96  0D0E               	mullw	14
 22228  000E98  0E1A               	movlw	low (_Channels+6)
 22229  000E9A  24F3               	addwf	prodl,w,c
 22230  000E9C  6ED9               	movwf	fsr2l,c
 22231  000E9E  0E04               	movlw	high (_Channels+6)
 22232  000EA0  20F4               	addwfc	prodh,w,c
 22233  000EA2  6EDA               	movwf	fsr2h,c
 22234  000EA4  CFDE F0B5          	movff	postinc2,??_LORAWAN_TxDone
 22235  000EA8  CFDD F0B6          	movff	postdec2,??_LORAWAN_TxDone+1
 22236  000EAC  51B5               	movf	??_LORAWAN_TxDone& (0+255),w,b
 22237  000EAE  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22238  000EB0  51B6               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22239  000EB2  6FB8               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22240  000EB4  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22241  000EB6  6BBA               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 22242  000EB8  0E01               	movlw	1
 22243  000EBA  25B7               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22244  000EBC  6F92               	movwf	___lmul@multiplier& (0+255),b
 22245  000EBE  0E00               	movlw	0
 22246  000EC0  21B8               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22247  000EC2  6F93               	movwf	(___lmul@multiplier+1)& (0+255),b
 22248  000EC4  0E00               	movlw	0
 22249  000EC6  21B9               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 22250  000EC8  6F94               	movwf	(___lmul@multiplier+2)& (0+255),b
 22251  000ECA  0E00               	movlw	0
 22252  000ECC  21BA               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 22253  000ECE  6F95               	movwf	(___lmul@multiplier+3)& (0+255),b
 22254  000ED0  C2E0  F096         	movff	_loRa+219,___lmul@multiplicand
 22255  000ED4  C2E1  F097         	movff	_loRa+220,___lmul@multiplicand+1
 22256  000ED8  6B98               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22257  000EDA  6B99               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22258  000EDC  ECD6  F048         	call	___lmul	;wreg free
 22259  000EE0  0EFF               	movlw	255
 22260  000EE2  0100               	movlb	0	; () banked
 22261  000EE4  2592               	addwf	?___lmul& (0+255),w,b
 22262  000EE6  6FCA               	movwf	_LORAWAN_TxDone$6895& (0+255),b
 22263  000EE8  0EFF               	movlw	255
 22264  000EEA  2193               	addwfc	(?___lmul+1)& (0+255),w,b
 22265  000EEC  6FCB               	movwf	(_LORAWAN_TxDone$6895+1)& (0+255),b
 22266  000EEE  0EFF               	movlw	255
 22267  000EF0  2194               	addwfc	(?___lmul+2)& (0+255),w,b
 22268  000EF2  6FCC               	movwf	(_LORAWAN_TxDone$6895+2)& (0+255),b
 22269  000EF4  0EFF               	movlw	255
 22270  000EF6  2195               	addwfc	(?___lmul+3)& (0+255),w,b
 22271  000EF8  6FCD               	movwf	(_LORAWAN_TxDone$6895+3)& (0+255),b
 22272                           
 22273                           ;lorawan_eu.c: 399: };lorawan_eu.c: 401: Channels[i].channelTimer = ((uint32_t)timeOnAir
      +                          ) * (((uint32_t)Channels[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 22274  000EFA  C0CA  F092         	movff	_LORAWAN_TxDone$6895,___lmul@multiplier
 22275  000EFE  C0CB  F093         	movff	_LORAWAN_TxDone$6895+1,___lmul@multiplier+1
 22276  000F02  C0CC  F094         	movff	_LORAWAN_TxDone$6895+2,___lmul@multiplier+2
 22277  000F06  C0CD  F095         	movff	_LORAWAN_TxDone$6895+3,___lmul@multiplier+3
 22278  000F0A  C0B3  F096         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 22279  000F0E  C0B4  F097         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 22280  000F12  6B98               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22281  000F14  6B99               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22282  000F16  ECD6  F048         	call	___lmul	;wreg free
 22283  000F1A                     L24:
 22284  000F1A  0100               	movlb	0	; () banked
 22285  000F1C  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22286  000F1E  0D0E               	mullw	14
 22287  000F20  0E1C               	movlw	low (_Channels+8)
 22288  000F22  24F3               	addwf	prodl,w,c
 22289  000F24  6ED9               	movwf	fsr2l,c
 22290  000F26  0E04               	movlw	high (_Channels+8)
 22291  000F28  20F4               	addwfc	prodh,w,c
 22292  000F2A  6EDA               	movwf	fsr2h,c
 22293  000F2C  C092  FFDE         	movff	?___lmul,postinc2
 22294  000F30  C093  FFDE         	movff	?___lmul+1,postinc2
 22295  000F34  C094  FFDE         	movff	?___lmul+2,postinc2
 22296  000F38  C095  FFDE         	movff	?___lmul+3,postinc2
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;lorawan_eu.c: 402: };lorawan_eu.c: 404: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 22300  000F3C  0102               	movlb	2	; () banked
 22301  000F3E  51EE               	movf	(_loRa+233)& (0+255),w,b
 22302  000F40  EC40  F051         	call	_SwTimerIsRunning
 22303  000F44  0900               	iorlw	0
 22304  000F46  B4D8               	btfsc	status,2,c
 22305  000F48  D078               	goto	l20772
 22306                           
 22307                           ;lorawan_eu.c: 405: {;lorawan_eu.c: 406: SwTimerStop(loRa.dutyCycleTimerId);
 22308  000F4A  0102               	movlb	2	; () banked
 22309  000F4C  51EE               	movf	(_loRa+233)& (0+255),w,b
 22310  000F4E  ECD5  F051         	call	_SwTimerStop
 22311                           
 22312                           ;lorawan_eu.c: 408: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 22313  000F52  0102               	movlb	2	; () banked
 22314  000F54  51EE               	movf	(_loRa+233)& (0+255),w,b
 22315  000F56  EC04  F04D         	call	_SwTimerReadValue
 22316  000F5A  C089  F0CE         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 22317  000F5E  C08A  F0CF         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 22318  000F62  C08B  F0D0         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 22319  000F66  C08C  F0D1         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 22320                           
 22321                           ;lorawan_eu.c: 409: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 22322  000F6A  0100               	movlb	0	; () banked
 22323  000F6C  51D1               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 22324  000F6E  E108               	bnz	u23190
 22325  000F70  0E1F               	movlw	31
 22326  000F72  5DCE               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 22327  000F74  0EAC               	movlw	172
 22328  000F76  59CF               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 22329  000F78  0EDF               	movlw	223
 22330  000F7A  59D0               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 22331  000F7C  A0D8               	btfss	status,0,c
 22332  000F7E  D024               	goto	l20768
 22333  000F80                     u23190:
 22334                           
 22335                           ; BSR set to: 0
 22336  000F80  C0CE  F0B5         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 22337  000F84  C0CF  F0B6         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 22338  000F88  C0D0  F0B7         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 22339  000F8C  C0D1  F0B8         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 22340  000F90  0E0D               	movlw	13
 22341  000F92  D005               	goto	u23200
 22342  000F94                     u23205:
 22343  000F94  90D8               	bcf	status,0,c
 22344  000F96  33B8               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22345  000F98  33B7               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22346  000F9A  33B6               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22347  000F9C  33B5               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 22348  000F9E                     u23200:
 22349  000F9E  2EE8               	decfsz	wreg,f,c
 22350  000FA0  D7F9               	goto	u23205
 22351  000FA2  C0B5  F092         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 22352  000FA6  C0B6  F093         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 22353  000FAA  C0B7  F094         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 22354  000FAE  C0B8  F095         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 22355  000FB2  0E7D               	movlw	125
 22356  000FB4  6F96               	movwf	___lmul@multiplicand& (0+255),b
 22357  000FB6  0E00               	movlw	0
 22358  000FB8  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22359  000FBA  0E00               	movlw	0
 22360  000FBC  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22361  000FBE  0E00               	movlw	0
 22362  000FC0  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22363  000FC2  ECD6  F048         	call	___lmul	;wreg free
 22364  000FC6  D01C               	goto	L25
 22365  000FC8                     l20768:
 22366                           
 22367                           ; BSR set to: 0
 22368  000FC8  C0CE  F092         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 22369  000FCC  C0CF  F093         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 22370  000FD0  C0D0  F094         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 22371  000FD4  C0D1  F095         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 22372  000FD8  0E7D               	movlw	125
 22373  000FDA  6F96               	movwf	___lmul@multiplicand& (0+255),b
 22374  000FDC  0E00               	movlw	0
 22375  000FDE  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22376  000FE0  0E00               	movlw	0
 22377  000FE2  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22378  000FE4  0E00               	movlw	0
 22379  000FE6  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22380  000FE8  ECD6  F048         	call	___lmul	;wreg free
 22381  000FEC  0E0D               	movlw	13
 22382  000FEE  D006               	goto	u23210
 22383  000FF0                     u23215:
 22384  000FF0  0100               	movlb	0	; () banked
 22385  000FF2  90D8               	bcf	status,0,c
 22386  000FF4  3395               	rrcf	(?___lmul+3)& (0+255),f,b
 22387  000FF6  3394               	rrcf	(?___lmul+2)& (0+255),f,b
 22388  000FF8  3393               	rrcf	(?___lmul+1)& (0+255),f,b
 22389  000FFA  3392               	rrcf	?___lmul& (0+255),f,b
 22390  000FFC                     u23210:
 22391  000FFC  2EE8               	decfsz	wreg,f,c
 22392  000FFE  D7F8               	goto	u23215
 22393  001000                     L25:
 22394  001000  C092  F0BD         	movff	?___lmul,_LORAWAN_TxDone$1673
 22395  001004  C093  F0BE         	movff	?___lmul+1,_LORAWAN_TxDone$1673+1
 22396  001008  C094  F0BF         	movff	?___lmul+2,_LORAWAN_TxDone$1673+2
 22397  00100C  C095  F0C0         	movff	?___lmul+3,_LORAWAN_TxDone$1673+3
 22398  001010  0100               	movlb	0	; () banked
 22399  001012  51BD               	movf	_LORAWAN_TxDone$1673& (0+255),w,b
 22400  001014  0102               	movlb	2	; () banked
 22401  001016  5DCD               	subwf	(_loRa+200)& (0+255),w,b
 22402  001018  0100               	movlb	0	; () banked
 22403  00101A  6FC6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 22404  00101C  51BE               	movf	(_LORAWAN_TxDone$1673+1)& (0+255),w,b
 22405  00101E  0102               	movlb	2	; () banked
 22406  001020  59CE               	subwfb	(_loRa+201)& (0+255),w,b
 22407  001022  0100               	movlb	0	; () banked
 22408  001024  6FC7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 22409  001026  51BF               	movf	(_LORAWAN_TxDone$1673+2)& (0+255),w,b
 22410  001028  0102               	movlb	2	; () banked
 22411  00102A  59CF               	subwfb	(_loRa+202)& (0+255),w,b
 22412  00102C  0100               	movlb	0	; () banked
 22413  00102E  6FC8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 22414  001030  51C0               	movf	(_LORAWAN_TxDone$1673+3)& (0+255),w,b
 22415  001032  0102               	movlb	2	; () banked
 22416  001034  59D0               	subwfb	(_loRa+203)& (0+255),w,b
 22417  001036  0100               	movlb	0	; () banked
 22418  001038  6FC9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 22419  00103A                     l20772:
 22420                           
 22421                           ;lorawan_eu.c: 410: };lorawan_eu.c: 412: for (i=0; i < 16; i++)
 22422  00103A  0E00               	movlw	0
 22423  00103C  0100               	movlb	0	; () banked
 22424  00103E  6FD6               	movwf	LORAWAN_TxDone@i& (0+255),b
 22425  001040                     l20778:
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;lorawan_eu.c: 413: {;lorawan_eu.c: 414: if ((Channels[i].status == 1) && ( Channels[i].
      +                          channelTimer != 0 ))
 22429  001040  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22430  001042  0D0E               	mullw	14
 22431  001044  0E18               	movlw	low (_Channels+4)
 22432  001046  24F3               	addwf	prodl,w,c
 22433  001048  6ED9               	movwf	fsr2l,c
 22434  00104A  0E04               	movlw	high (_Channels+4)
 22435  00104C  20F4               	addwfc	prodh,w,c
 22436  00104E  6EDA               	movwf	fsr2h,c
 22437  001050  04DE               	decf	postinc2,w,c
 22438  001052  A4D8               	btfss	status,2,c
 22439  001054  D092               	goto	l20796
 22440                           
 22441                           ; BSR set to: 0
 22442  001056  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22443  001058  0D0E               	mullw	14
 22444  00105A  0E1C               	movlw	low (_Channels+8)
 22445  00105C  24F3               	addwf	prodl,w,c
 22446  00105E  6ED9               	movwf	fsr2l,c
 22447  001060  0E04               	movlw	high (_Channels+8)
 22448  001062  20F4               	addwfc	prodh,w,c
 22449  001064  6EDA               	movwf	fsr2h,c
 22450  001066  50DE               	movf	postinc2,w,c
 22451  001068  10DE               	iorwf	postinc2,w,c
 22452  00106A  10DE               	iorwf	postinc2,w,c
 22453  00106C  10DE               	iorwf	postinc2,w,c
 22454  00106E  B4D8               	btfsc	status,2,c
 22455  001070  D084               	goto	l20796
 22456                           
 22457                           ; BSR set to: 0
 22458                           ;lorawan_eu.c: 415: {;lorawan_eu.c: 416: if( i != loRa.lastUsedChannelIndex )
 22459  001072  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22460  001074  0102               	movlb	2	; () banked
 22461  001076  19DF               	xorwf	(_loRa+218)& (0+255),w,b
 22462  001078  B4D8               	btfsc	status,2,c
 22463  00107A  D04C               	goto	l1049
 22464                           
 22465                           ; BSR set to: 2
 22466                           ;lorawan_eu.c: 417: {;lorawan_eu.c: 418: if (Channels[i].channelTimer > delta)
 22467  00107C  0100               	movlb	0	; () banked
 22468  00107E  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22469  001080  0D0E               	mullw	14
 22470  001082  0E1C               	movlw	low (_Channels+8)
 22471  001084  24F3               	addwf	prodl,w,c
 22472  001086  6ED9               	movwf	fsr2l,c
 22473  001088  0E04               	movlw	high (_Channels+8)
 22474  00108A  20F4               	addwfc	prodh,w,c
 22475  00108C  6EDA               	movwf	fsr2h,c
 22476  00108E  50DE               	movf	postinc2,w,c
 22477  001090  5DC6               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 22478  001092  50DE               	movf	postinc2,w,c
 22479  001094  59C7               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22480  001096  50DE               	movf	postinc2,w,c
 22481  001098  59C8               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22482  00109A  50DE               	movf	postinc2,w,c
 22483  00109C  59C9               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22484  00109E  B0D8               	btfsc	status,0,c
 22485  0010A0  D02D               	goto	l20788
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;lorawan_eu.c: 419: {;lorawan_eu.c: 420: Channels[i].channelTimer = Channels[i].channelT
      +                          imer - delta;
 22489  0010A2  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22490  0010A4  0D0E               	mullw	14
 22491  0010A6  0E1C               	movlw	low (_Channels+8)
 22492  0010A8  24F3               	addwf	prodl,w,c
 22493  0010AA  6ED9               	movwf	fsr2l,c
 22494  0010AC  0E04               	movlw	high (_Channels+8)
 22495  0010AE  20F4               	addwfc	prodh,w,c
 22496  0010B0  6EDA               	movwf	fsr2h,c
 22497  0010B2  CFDE F0B5          	movff	postinc2,??_LORAWAN_TxDone
 22498  0010B6  CFDE F0B6          	movff	postinc2,??_LORAWAN_TxDone+1
 22499  0010BA  CFDE F0B7          	movff	postinc2,??_LORAWAN_TxDone+2
 22500  0010BE  CFDE F0B8          	movff	postinc2,??_LORAWAN_TxDone+3
 22501  0010C2  51C6               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22502  0010C4  5DB5               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22503  0010C6  6FB9               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22504  0010C8  51C7               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22505  0010CA  59B6               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22506  0010CC  6FBA               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22507  0010CE  51C8               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22508  0010D0  59B7               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22509  0010D2  6FBB               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22510  0010D4  51C9               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22511  0010D6  59B8               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22512  0010D8  6FBC               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22513  0010DA  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22514  0010DC  0D0E               	mullw	14
 22515  0010DE  0E1C               	movlw	low (_Channels+8)
 22516  0010E0  24F3               	addwf	prodl,w,c
 22517  0010E2  6ED9               	movwf	fsr2l,c
 22518  0010E4  0E04               	movlw	high (_Channels+8)
 22519  0010E6  20F4               	addwfc	prodh,w,c
 22520  0010E8  6EDA               	movwf	fsr2h,c
 22521  0010EA  C0B9  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22522  0010EE  C0BA  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22523  0010F2  C0BB  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22524  0010F6  C0BC  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22525                           
 22526                           ;lorawan_eu.c: 421: }
 22527  0010FA  D00C               	goto	l1049
 22528  0010FC                     l20788:
 22529                           
 22530                           ; BSR set to: 0
 22531                           ;lorawan_eu.c: 422: else;lorawan_eu.c: 423: {;lorawan_eu.c: 424: Channels[i].channelTime
      +                          r = 0;
 22532  0010FC  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22533  0010FE  0D0E               	mullw	14
 22534  001100  0E1C               	movlw	low (_Channels+8)
 22535  001102  24F3               	addwf	prodl,w,c
 22536  001104  6ED9               	movwf	fsr2l,c
 22537  001106  0E04               	movlw	high (_Channels+8)
 22538  001108  20F4               	addwfc	prodh,w,c
 22539  00110A  6EDA               	movwf	fsr2h,c
 22540  00110C  6ADE               	clrf	postinc2,c
 22541  00110E  6ADE               	clrf	postinc2,c
 22542  001110  6ADE               	clrf	postinc2,c
 22543  001112  6ADD               	clrf	postdec2,c
 22544  001114                     l1049:
 22545                           
 22546                           ;lorawan_eu.c: 425: };lorawan_eu.c: 426: };lorawan_eu.c: 427: if ( (Channels[i].channelT
      +                          imer <= minim) && (Channels[i].channelTimer !=0) )
 22547  001114  0100               	movlb	0	; () banked
 22548  001116  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22549  001118  0D0E               	mullw	14
 22550  00111A  0E1C               	movlw	low (_Channels+8)
 22551  00111C  24F3               	addwf	prodl,w,c
 22552  00111E  6ED9               	movwf	fsr2l,c
 22553  001120  0E04               	movlw	high (_Channels+8)
 22554  001122  20F4               	addwfc	prodh,w,c
 22555  001124  6EDA               	movwf	fsr2h,c
 22556  001126  50DE               	movf	postinc2,w,c
 22557  001128  5DD2               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22558  00112A  50DE               	movf	postinc2,w,c
 22559  00112C  59D3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22560  00112E  50DE               	movf	postinc2,w,c
 22561  001130  59D4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22562  001132  50DE               	movf	postinc2,w,c
 22563  001134  59D5               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22564  001136  A0D8               	btfss	status,0,c
 22565  001138  D020               	goto	l20796
 22566                           
 22567                           ; BSR set to: 0
 22568  00113A  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22569  00113C  0D0E               	mullw	14
 22570  00113E  0E1C               	movlw	low (_Channels+8)
 22571  001140  24F3               	addwf	prodl,w,c
 22572  001142  6ED9               	movwf	fsr2l,c
 22573  001144  0E04               	movlw	high (_Channels+8)
 22574  001146  20F4               	addwfc	prodh,w,c
 22575  001148  6EDA               	movwf	fsr2h,c
 22576  00114A  50DE               	movf	postinc2,w,c
 22577  00114C  10DE               	iorwf	postinc2,w,c
 22578  00114E  10DE               	iorwf	postinc2,w,c
 22579  001150  10DE               	iorwf	postinc2,w,c
 22580  001152  B4D8               	btfsc	status,2,c
 22581  001154  D012               	goto	l20796
 22582                           
 22583                           ; BSR set to: 0
 22584                           ;lorawan_eu.c: 428: {;lorawan_eu.c: 429: minim = Channels[i].channelTimer;
 22585  001156  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22586  001158  0D0E               	mullw	14
 22587  00115A  0E1C               	movlw	low (_Channels+8)
 22588  00115C  24F3               	addwf	prodl,w,c
 22589  00115E  6ED9               	movwf	fsr2l,c
 22590  001160  0E04               	movlw	high (_Channels+8)
 22591  001162  20F4               	addwfc	prodh,w,c
 22592  001164  6EDA               	movwf	fsr2h,c
 22593  001166  CFDE F0D2          	movff	postinc2,LORAWAN_TxDone@minim
 22594  00116A  CFDE F0D3          	movff	postinc2,LORAWAN_TxDone@minim+1
 22595  00116E  CFDE F0D4          	movff	postinc2,LORAWAN_TxDone@minim+2
 22596  001172  CFDE F0D5          	movff	postinc2,LORAWAN_TxDone@minim+3
 22597                           
 22598                           ; BSR set to: 0
 22599                           ;lorawan_eu.c: 430: found = 1;
 22600  001176  0E01               	movlw	1
 22601  001178  6FC5               	movwf	LORAWAN_TxDone@found& (0+255),b
 22602  00117A                     l20796:
 22603                           
 22604                           ; BSR set to: 0
 22605  00117A  2BD6               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22606                           
 22607                           ; BSR set to: 0
 22608  00117C  0E0F               	movlw	15
 22609  00117E  65D6               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22610  001180  D75F               	goto	l20778
 22611                           
 22612                           ; BSR set to: 0
 22613                           ;lorawan_eu.c: 431: };lorawan_eu.c: 432: };lorawan_eu.c: 433: };lorawan_eu.c: 434: if (f
      +                          ound == 1)
 22614  001182  05C5               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22615  001184  A4D8               	btfss	status,2,c
 22616  001186  D067               	goto	l20814
 22617                           
 22618                           ; BSR set to: 0
 22619                           ;lorawan_eu.c: 435: {;lorawan_eu.c: 436: loRa.lastTimerValue = minim;
 22620  001188  C0D2  F2CD         	movff	LORAWAN_TxDone@minim,_loRa+200
 22621  00118C  C0D3  F2CE         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22622  001190  C0D4  F2CF         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22623  001194  C0D5  F2D0         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22624                           
 22625                           ; BSR set to: 0
 22626                           ;lorawan_eu.c: 437: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22627  001198  51D5               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22628  00119A  E107               	bnz	u23300
 22629  00119C  29D2               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22630  00119E  0EFF               	movlw	255
 22631  0011A0  59D3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22632  0011A2  0E0F               	movlw	15
 22633  0011A4  59D4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22634  0011A6  A0D8               	btfss	status,0,c
 22635  0011A8  D01C               	goto	l20808
 22636  0011AA                     u23300:
 22637                           
 22638                           ; BSR set to: 0
 22639  0011AA  C0D2  F060         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22640  0011AE  C0D3  F061         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22641  0011B2  C0D4  F062         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22642  0011B6  C0D5  F063         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22643  0011BA  0E7D               	movlw	125
 22644  0011BC  6F64               	movwf	___lldiv@divisor& (0+255),b
 22645  0011BE  0E00               	movlw	0
 22646  0011C0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22647  0011C2  0E00               	movlw	0
 22648  0011C4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22649  0011C6  0E00               	movlw	0
 22650  0011C8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22651  0011CA  EC96  F042         	call	___lldiv	;wreg free
 22652  0011CE  0E0C               	movlw	12
 22653  0011D0                     u23315:
 22654  0011D0  90D8               	bcf	status,0,c
 22655  0011D2  0100               	movlb	0	; () banked
 22656  0011D4  3760               	rlcf	?___lldiv& (0+255),f,b
 22657  0011D6  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 22658  0011D8  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 22659  0011DA  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 22660  0011DC  2EE8               	decfsz	wreg,f,c
 22661  0011DE  D7F8               	goto	u23315
 22662  0011E0  D022               	goto	L26
 22663  0011E2                     l20808:
 22664                           
 22665                           ; BSR set to: 0
 22666  0011E2  C0D2  F0B5         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22667  0011E6  C0D3  F0B6         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22668  0011EA  C0D4  F0B7         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22669  0011EE  C0D5  F0B8         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22670  0011F2  0E0C               	movlw	12
 22671  0011F4                     u23325:
 22672  0011F4  90D8               	bcf	status,0,c
 22673  0011F6  37B5               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22674  0011F8  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22675  0011FA  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22676  0011FC  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22677  0011FE  2EE8               	decfsz	wreg,f,c
 22678  001200  D7F9               	goto	u23325
 22679  001202  C0B5  F060         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22680  001206  C0B6  F061         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22681  00120A  C0B7  F062         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22682  00120E  C0B8  F063         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22683  001212  0E7D               	movlw	125
 22684  001214  6F64               	movwf	___lldiv@divisor& (0+255),b
 22685  001216  0E00               	movlw	0
 22686  001218  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22687  00121A  0E00               	movlw	0
 22688  00121C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22689  00121E  0E00               	movlw	0
 22690  001220  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22691  001222  EC96  F042         	call	___lldiv	;wreg free
 22692  001226                     L26:
 22693  001226  C060  F0C1         	movff	?___lldiv,_LORAWAN_TxDone$1674
 22694  00122A  C061  F0C2         	movff	?___lldiv+1,_LORAWAN_TxDone$1674+1
 22695  00122E  C062  F0C3         	movff	?___lldiv+2,_LORAWAN_TxDone$1674+2
 22696  001232  C063  F0C4         	movff	?___lldiv+3,_LORAWAN_TxDone$1674+3
 22697  001236  C0C1  F06D         	movff	_LORAWAN_TxDone$1674,SwTimerSetTimeout@timeout
 22698  00123A  C0C2  F06E         	movff	_LORAWAN_TxDone$1674+1,SwTimerSetTimeout@timeout+1
 22699  00123E  C0C3  F06F         	movff	_LORAWAN_TxDone$1674+2,SwTimerSetTimeout@timeout+2
 22700  001242  C0C4  F070         	movff	_LORAWAN_TxDone$1674+3,SwTimerSetTimeout@timeout+3
 22701  001246  0102               	movlb	2	; () banked
 22702  001248  51EE               	movf	(_loRa+233)& (0+255),w,b
 22703  00124A  EC7F  F04C         	call	_SwTimerSetTimeout
 22704                           
 22705                           ;lorawan_eu.c: 438: SwTimerStart (loRa.dutyCycleTimerId);
 22706  00124E  0102               	movlb	2	; () banked
 22707  001250  51EE               	movf	(_loRa+233)& (0+255),w,b
 22708  001252  EC73  F040         	call	_SwTimerStart
 22709  001256                     l20814:
 22710                           
 22711                           ;lorawan_eu.c: 439: };lorawan_eu.c: 440: if (CLASS_C == loRa.deviceClass)
 22712  001256  0E02               	movlw	2
 22713  001258  0102               	movlb	2	; () banked
 22714  00125A  1917               	xorwf	(_loRa+18)& (0+255),w,b
 22715  00125C  A4D8               	btfss	status,2,c
 22716  00125E  0012               	return	
 22717                           
 22718                           ; BSR set to: 2
 22719                           ;lorawan_eu.c: 441: {;lorawan_eu.c: 442: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22720  001260  5107               	movf	(_loRa+2)& (0+255),w,b
 22721  001262  0BF0               	andlw	-16
 22722  001264  0908               	iorlw	8
 22723  001266  6F07               	movwf	(_loRa+2)& (0+255),b
 22724                           
 22725                           ; BSR set to: 2
 22726                           ;lorawan_eu.c: 443: LORAWAN_EnterContinuousReceive();
 22727  001268  ECD5  F043         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 22728  00126C  0012               	return	
 22729  00126E                     l20820:
 22730                           
 22731                           ; BSR set to: 2
 22732                           ;lorawan_eu.c: 446: else;lorawan_eu.c: 447: {;lorawan_eu.c: 448: if ((RADIO_GetStatus() 
      +                          & (1 << (4))) != 0)
 22733  00126E  EC53  F054         	call	_RADIO_GetStatus	;wreg free
 22734  001272  0100               	movlb	0	; () banked
 22735  001274  6FB5               	movwf	??_LORAWAN_TxDone& (0+255),b
 22736  001276  A9B5               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22737  001278  D014               	goto	l20824
 22738                           
 22739                           ; BSR set to: 0
 22740                           ;lorawan_eu.c: 449: {;lorawan_eu.c: 451: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22741  00127A  0E00               	movlw	0
 22742  00127C  6F60               	movwf	RxData@pData& (0+255),b
 22743  00127E  0E00               	movlw	0
 22744  001280  6F61               	movwf	(RxData@pData+1)& (0+255),b
 22745  001282  0E00               	movlw	0
 22746  001284  6F62               	movwf	RxData@dataLength& (0+255),b
 22747  001286  0E02               	movlw	2
 22748  001288  6F63               	movwf	RxData@status& (0+255),b
 22749  00128A  D801               	call	u23358
 22750  00128C  0012               	return	
 22751  00128E                     u23358:
 22752  00128E  0005               	push	
 22753  001290  6EFA               	movwf	pclath,c
 22754  001292  0101               	movlb	1	; () banked
 22755  001294  510E               	movf	_rxPayload& (0+255),w,b
 22756  001296  6EFD               	movwf	tosl,c
 22757  001298  510F               	movf	(_rxPayload+1)& (0+255),w,b
 22758  00129A  6EFE               	movwf	tosh,c
 22759  00129C  6AFF               	clrf	tosu,c
 22760  00129E  50FA               	movf	pclath,w,c
 22761  0012A0  0012               	return		;indir
 22762  0012A2                     l20824:
 22763                           
 22764                           ; BSR set to: 0
 22765                           ;lorawan_eu.c: 453: else;lorawan_eu.c: 454: {;lorawan_eu.c: 456: if ( rxPayload.RxAppDat
      +                          a != (0) )
 22766  0012A2  0101               	movlb	1	; () banked
 22767  0012A4  510E               	movf	_rxPayload& (0+255),w,b
 22768  0012A6  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 22769  0012A8  B4D8               	btfsc	status,2,c
 22770  0012AA  0012               	return	
 22771                           
 22772                           ; BSR set to: 1
 22773                           ;lorawan_eu.c: 457: {;lorawan_eu.c: 458: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22774  0012AC  0E00               	movlw	0
 22775  0012AE  0100               	movlb	0	; () banked
 22776  0012B0  6F60               	movwf	RxData@pData& (0+255),b
 22777  0012B2  0E00               	movlw	0
 22778  0012B4  6F61               	movwf	(RxData@pData+1)& (0+255),b
 22779  0012B6  0E00               	movlw	0
 22780  0012B8  6F62               	movwf	RxData@dataLength& (0+255),b
 22781  0012BA  0E03               	movlw	3
 22782  0012BC  6F63               	movwf	RxData@status& (0+255),b
 22783  0012BE  D801               	call	u23378
 22784  0012C0  0012               	return	
 22785  0012C2                     u23378:
 22786  0012C2  0005               	push	
 22787  0012C4  6EFA               	movwf	pclath,c
 22788  0012C6  0101               	movlb	1	; () banked
 22789  0012C8  510E               	movf	_rxPayload& (0+255),w,b
 22790  0012CA  6EFD               	movwf	tosl,c
 22791  0012CC  510F               	movf	(_rxPayload+1)& (0+255),w,b
 22792  0012CE  6EFE               	movwf	tosh,c
 22793  0012D0  6AFF               	clrf	tosu,c
 22794  0012D2  50FA               	movf	pclath,w,c
 22795  0012D4  0012               	return		;indir
 22796  0012D6                     __end_of_LORAWAN_TxDone:
 22797                           	opt callstack 0
 22798                           
 22799 ;; *************** function _SwTimerReadValue *****************
 22800 ;; Defined at:
 22801 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22802 ;; Parameters:    Size  Location     Type
 22803 ;;  timerId         1    wreg     unsigned char 
 22804 ;; Auto vars:     Size  Location     Type
 22805 ;;  timerId         1   49[BANK0 ] unsigned char 
 22806 ;;  ticksCount      4   45[BANK0 ] unsigned long 
 22807 ;; Return value:  Size  Location     Type
 22808 ;;                  4   41[BANK0 ] unsigned long 
 22809 ;; Registers used:
 22810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22811 ;; Tracked objects:
 22812 ;;		On entry : 0/0
 22813 ;;		On exit  : 0/0
 22814 ;;		Unchanged: 0/0
 22815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22817 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22819 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22820 ;;Total ram usage:        9 bytes
 22821 ;; Hardware stack levels used:    1
 22822 ;; Hardware stack levels required when called:   10
 22823 ;; This function calls:
 22824 ;;		_SwTimersInterrupt
 22825 ;; This function is called by:
 22826 ;;		_RADIO_TxDone
 22827 ;;		_RADIO_FSKPacketSent
 22828 ;;		_LORAWAN_TxDone
 22829 ;;		_LORAWAN_Pause
 22830 ;; This function uses a non-reentrant model
 22831 ;;
 22832                           
 22833                           	psect	text103
 22834  009A08                     __ptext103:
 22835                           	opt callstack 0
 22836  009A08                     _SwTimerReadValue:
 22837                           	opt callstack 14
 22838                           
 22839                           ;incstack = 0
 22840                           ;SwTimerReadValue@timerId stored from wreg
 22841  009A08  0100               	movlb	0	; () banked
 22842  009A0A  6F91               	movwf	SwTimerReadValue@timerId& (0+255),b
 22843                           
 22844                           ;sw_timer.c: 195: uint32_t ticksCount;;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22845  009A0C  9EF2               	bcf	4082,7,c	;volatile
 22846                           
 22847                           ;sw_timer.c: 200: SwTimersInterrupt();
 22848  009A0E  EC1F  F035         	call	_SwTimersInterrupt	;wreg free
 22849                           
 22850                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22851  009A12  0100               	movlb	0	; () banked
 22852  009A14  5191               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22853  009A16  0D08               	mullw	8
 22854  009A18  0E00               	movlw	low _swTimers
 22855  009A1A  24F3               	addwf	prodl,w,c
 22856  009A1C  6ED9               	movwf	fsr2l,c
 22857  009A1E  0E03               	movlw	high _swTimers
 22858  009A20  20F4               	addwfc	prodh,w,c
 22859  009A22  6EDA               	movwf	fsr2h,c
 22860  009A24  CFDE F08D          	movff	postinc2,SwTimerReadValue@ticksCount
 22861  009A28  CFDE F08E          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22862  009A2C  CFDE F08F          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22863  009A30  CFDE F090          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22864                           
 22865                           ; BSR set to: 0
 22866                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22867  009A34  8EF2               	bsf	4082,7,c	;volatile
 22868                           
 22869                           ; BSR set to: 0
 22870                           ;sw_timer.c: 204: return ticksCount;
 22871  009A36  C08D  F089         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22872  009A3A  C08E  F08A         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22873  009A3E  C08F  F08B         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22874  009A42  C090  F08C         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22875                           
 22876                           ; BSR set to: 0
 22877  009A46  0012               	return		;funcret
 22878  009A48                     __end_of_SwTimerReadValue:
 22879                           	opt callstack 0
 22880                           
 22881 ;; *************** function _SwTimerIsRunning *****************
 22882 ;; Defined at:
 22883 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22884 ;; Parameters:    Size  Location     Type
 22885 ;;  timerId         1    wreg     unsigned char 
 22886 ;; Auto vars:     Size  Location     Type
 22887 ;;  timerId         1    0[BANK0 ] unsigned char 
 22888 ;;  isRunning       1    1[BANK0 ] unsigned char 
 22889 ;; Return value:  Size  Location     Type
 22890 ;;                  1    wreg      unsigned char 
 22891 ;; Registers used:
 22892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22893 ;; Tracked objects:
 22894 ;;		On entry : 0/0
 22895 ;;		On exit  : 0/0
 22896 ;;		Unchanged: 0/0
 22897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22899 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22901 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22902 ;;Total ram usage:        2 bytes
 22903 ;; Hardware stack levels used:    1
 22904 ;; Hardware stack levels required when called:    7
 22905 ;; This function calls:
 22906 ;;		Nothing
 22907 ;; This function is called by:
 22908 ;;		_LORAWAN_TxDone
 22909 ;; This function uses a non-reentrant model
 22910 ;;
 22911                           
 22912                           	psect	text104
 22913  00A280                     __ptext104:
 22914                           	opt callstack 0
 22915  00A280                     _SwTimerIsRunning:
 22916                           	opt callstack 17
 22917                           
 22918                           ; BSR set to: 0
 22919                           ;incstack = 0
 22920                           ;SwTimerIsRunning@timerId stored from wreg
 22921  00A280  0100               	movlb	0	; () banked
 22922  00A282  6F60               	movwf	SwTimerIsRunning@timerId& (0+255),b
 22923                           
 22924                           ;sw_timer.c: 209: uint8_t isRunning;;sw_timer.c: 211: (INTCONbits.GIE = 0);
 22925  00A284  9EF2               	bcf	4082,7,c	;volatile
 22926                           
 22927                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 22928  00A286  0100               	movlb	0	; () banked
 22929  00A288  5160               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 22930  00A28A  0D08               	mullw	8
 22931  00A28C  0E04               	movlw	low (_swTimers+4)
 22932  00A28E  24F3               	addwf	prodl,w,c
 22933  00A290  6ED9               	movwf	fsr2l,c
 22934  00A292  0E03               	movlw	high (_swTimers+4)
 22935  00A294  20F4               	addwfc	prodh,w,c
 22936  00A296  6EDA               	movwf	fsr2h,c
 22937  00A298  50DF               	movf	indf2,w,c
 22938  00A29A  6F61               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 22939                           
 22940                           ; BSR set to: 0
 22941                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 22942  00A29C  8EF2               	bsf	4082,7,c	;volatile
 22943                           
 22944                           ; BSR set to: 0
 22945                           ;sw_timer.c: 215: return isRunning;
 22946  00A29E  5161               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 22947                           
 22948                           ; BSR set to: 0
 22949  00A2A0  0012               	return		;funcret
 22950  00A2A2                     __end_of_SwTimerIsRunning:
 22951                           	opt callstack 0
 22952                           
 22953 ;; *************** function _RADIO_GetStatus *****************
 22954 ;; Defined at:
 22955 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22956 ;; Parameters:    Size  Location     Type
 22957 ;;		None
 22958 ;; Auto vars:     Size  Location     Type
 22959 ;;		None
 22960 ;; Return value:  Size  Location     Type
 22961 ;;                  1    wreg      unsigned char 
 22962 ;; Registers used:
 22963 ;;		wreg, status,2
 22964 ;; Tracked objects:
 22965 ;;		On entry : 0/0
 22966 ;;		On exit  : 0/0
 22967 ;;		Unchanged: 0/0
 22968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22973 ;;Total ram usage:        0 bytes
 22974 ;; Hardware stack levels used:    1
 22975 ;; Hardware stack levels required when called:    7
 22976 ;; This function calls:
 22977 ;;		Nothing
 22978 ;; This function is called by:
 22979 ;;		_LORAWAN_TxDone
 22980 ;;		_LORAWAN_ReceiveWindow2Callback
 22981 ;;		_LORAWAN_RxDone
 22982 ;; This function uses a non-reentrant model
 22983 ;;
 22984                           
 22985                           	psect	text105
 22986  00A8A6                     __ptext105:
 22987                           	opt callstack 0
 22988  00A8A6                     _RADIO_GetStatus:
 22989                           	opt callstack 17
 22990                           
 22991                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 22992                           
 22993                           ; BSR set to: 0
 22994                           ;incstack = 0
 22995  00A8A6  0101               	movlb	1	; () banked
 22996  00A8A8  514C               	movf	(_RadioConfiguration+35)& (0+255),w,b
 22997                           
 22998                           ; BSR set to: 1
 22999  00A8AA  0012               	return		;funcret
 23000  00A8AC                     __end_of_RADIO_GetStatus:
 23001                           	opt callstack 0
 23002                           
 23003 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 23004 ;; Defined at:
 23005 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23006 ;; Parameters:    Size  Location     Type
 23007 ;;		None
 23008 ;; Auto vars:     Size  Location     Type
 23009 ;;		None
 23010 ;; Return value:  Size  Location     Type
 23011 ;;                  1    wreg      void 
 23012 ;; Registers used:
 23013 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23014 ;; Tracked objects:
 23015 ;;		On entry : 0/0
 23016 ;;		On exit  : 0/0
 23017 ;;		Unchanged: 0/0
 23018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23023 ;;Total ram usage:        0 bytes
 23024 ;; Hardware stack levels used:    1
 23025 ;; Hardware stack levels required when called:   13
 23026 ;; This function calls:
 23027 ;;		_ConfigureRadioRx
 23028 ;;		_RADIO_ReceiveStart
 23029 ;;		_RADIO_ReceiveStop
 23030 ;;		_RADIO_ReleaseData
 23031 ;;		_ResetParametersForConfirmedTransmission
 23032 ;;		_ResetParametersForUnconfirmedTransmission
 23033 ;;		_RxData
 23034 ;; This function is called by:
 23035 ;;		_LORAWAN_TxDone
 23036 ;;		_LORAWAN_ReceiveWindow2Callback
 23037 ;;		_LORAWAN_RxDone
 23038 ;;		_SetReceptionNotOkState
 23039 ;; This function uses a non-reentrant model
 23040 ;;
 23041                           
 23042                           	psect	text106
 23043  0087AA                     __ptext106:
 23044                           	opt callstack 0
 23045  0087AA                     _LORAWAN_EnterContinuousReceive:
 23046                           	opt callstack 11
 23047                           
 23048                           ;lorawan.c: 917: RADIO_ReceiveStop();
 23049                           
 23050                           ; BSR set to: 1
 23051                           ;incstack = 0
 23052  0087AA  ECB5  F051         	call	_RADIO_ReceiveStop	;wreg free
 23053                           
 23054                           ;lorawan.c: 918: RADIO_ReleaseData();
 23055  0087AE  EC56  F054         	call	_RADIO_ReleaseData	;wreg free
 23056                           
 23057                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 23058  0087B2  C21D  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 23059  0087B6  C21E  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 23060  0087BA  C21F  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 23061  0087BE  C220  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 23062  0087C2  0102               	movlb	2	; () banked
 23063  0087C4  5121               	movf	(_loRa+28)& (0+255),w,b
 23064  0087C6  EC66  F050         	call	_ConfigureRadioRx
 23065                           
 23066                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 23067  0087CA  0E00               	movlw	0
 23068  0087CC  0100               	movlb	0	; () banked
 23069  0087CE  6FAA               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 23070  0087D0  0E00               	movlw	0
 23071  0087D2  6FA9               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 23072  0087D4  ECEE  F01D         	call	_RADIO_ReceiveStart	;wreg free
 23073  0087D8  0100               	movlb	0	; () banked
 23074  0087DA  51A9               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 23075  0087DC  11AA               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 23076  0087DE  B4D8               	btfsc	status,2,c
 23077  0087E0  0012               	return	
 23078                           
 23079                           ; BSR set to: 0
 23080                           ;lorawan.c: 923: {;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 23081  0087E2  EC98  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23082                           
 23083                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 23084  0087E6  EC68  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 23085                           
 23086                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 23087  0087EA  0EF0               	movlw	-16
 23088  0087EC  0102               	movlb	2	; () banked
 23089  0087EE  1707               	andwf	(_loRa+2)& (0+255),f,b
 23090                           
 23091                           ; BSR set to: 2
 23092                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 23093  0087F0  0101               	movlb	1	; () banked
 23094  0087F2  510E               	movf	_rxPayload& (0+255),w,b
 23095  0087F4  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 23096  0087F6  B4D8               	btfsc	status,2,c
 23097  0087F8  0012               	return	
 23098                           
 23099                           ; BSR set to: 1
 23100                           ;lorawan.c: 928: {;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 23101  0087FA  0E00               	movlw	0
 23102  0087FC  0100               	movlb	0	; () banked
 23103  0087FE  6F60               	movwf	RxData@pData& (0+255),b
 23104  008800  0E00               	movlw	0
 23105  008802  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23106  008804  0E00               	movlw	0
 23107  008806  6F62               	movwf	RxData@dataLength& (0+255),b
 23108  008808  0E00               	movlw	0
 23109  00880A  6F63               	movwf	RxData@status& (0+255),b
 23110  00880C  D801               	call	u21048
 23111  00880E  0012               	return	
 23112  008810                     u21048:
 23113  008810  0005               	push	
 23114  008812  6EFA               	movwf	pclath,c
 23115  008814  0101               	movlb	1	; () banked
 23116  008816  510E               	movf	_rxPayload& (0+255),w,b
 23117  008818  6EFD               	movwf	tosl,c
 23118  00881A  510F               	movf	(_rxPayload+1)& (0+255),w,b
 23119  00881C  6EFE               	movwf	tosh,c
 23120  00881E  6AFF               	clrf	tosu,c
 23121  008820  50FA               	movf	pclath,w,c
 23122  008822  0012               	return		;indir
 23123  008824                     __end_of_LORAWAN_EnterContinuousReceive:
 23124                           	opt callstack 0
 23125                           
 23126 ;; *************** function _RxData *****************
 23127 ;; Defined at:
 23128 ;;		line 73 in file "main.c"
 23129 ;; Parameters:    Size  Location     Type
 23130 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 23131 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 23132 ;;  dataLength      1    2[BANK0 ] unsigned char 
 23133 ;;  status          1    3[BANK0 ] enum E6285
 23134 ;; Auto vars:     Size  Location     Type
 23135 ;;		None
 23136 ;; Return value:  Size  Location     Type
 23137 ;;                  1    wreg      void 
 23138 ;; Registers used:
 23139 ;;		None
 23140 ;; Tracked objects:
 23141 ;;		On entry : 0/0
 23142 ;;		On exit  : 0/0
 23143 ;;		Unchanged: 0/0
 23144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23148 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23149 ;;Total ram usage:        4 bytes
 23150 ;; Hardware stack levels used:    1
 23151 ;; Hardware stack levels required when called:    7
 23152 ;; This function calls:
 23153 ;;		Nothing
 23154 ;; This function is called by:
 23155 ;;		_main
 23156 ;;		_LORAWAN_EnterContinuousReceive
 23157 ;;		_LORAWAN_ReceiveWindow2Callback
 23158 ;;		_SetReceptionNotOkState
 23159 ;;		_LORAWAN_RxDone
 23160 ;;		_LORAWAN_RxTimeout
 23161 ;;		_LORAWAN_TxDone
 23162 ;;		_AckRetransmissionCallback
 23163 ;;		_UnconfirmedTransmissionCallback
 23164 ;; This function uses a non-reentrant model
 23165 ;;
 23166                           
 23167                           	psect	text107
 23168  00A8F4                     __ptext107:
 23169                           	opt callstack 0
 23170  00A8F4                     _RxData:
 23171                           	opt callstack 18
 23172                           
 23173                           ;incstack = 0
 23174  00A8F4  0012               	return		;funcret
 23175  00A8F6                     __end_of_RxData:
 23176                           	opt callstack 0
 23177                           
 23178 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 23179 ;; Defined at:
 23180 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23181 ;; Parameters:    Size  Location     Type
 23182 ;;		None
 23183 ;; Auto vars:     Size  Location     Type
 23184 ;;		None
 23185 ;; Return value:  Size  Location     Type
 23186 ;;                  1    wreg      void 
 23187 ;; Registers used:
 23188 ;;		wreg, status,2
 23189 ;; Tracked objects:
 23190 ;;		On entry : 0/0
 23191 ;;		On exit  : 0/0
 23192 ;;		Unchanged: 0/0
 23193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23198 ;;Total ram usage:        0 bytes
 23199 ;; Hardware stack levels used:    1
 23200 ;; Hardware stack levels required when called:    7
 23201 ;; This function calls:
 23202 ;;		Nothing
 23203 ;; This function is called by:
 23204 ;;		_LORAWAN_RxTimeout
 23205 ;;		_LORAWAN_ReceiveWindow2Callback
 23206 ;;		_LORAWAN_EnterContinuousReceive
 23207 ;;		_UnconfirmedTransmissionCallback
 23208 ;; This function uses a non-reentrant model
 23209 ;;
 23210                           
 23211                           	psect	text108
 23212  00A6D0                     __ptext108:
 23213                           	opt callstack 0
 23214  00A6D0                     _ResetParametersForUnconfirmedTransmission:
 23215                           	opt callstack 18
 23216                           
 23217                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 23218                           
 23219                           ;incstack = 0
 23220  00A6D0  0EF0               	movlw	-16
 23221  00A6D2  0102               	movlb	2	; () banked
 23222  00A6D4  1707               	andwf	(_loRa+2)& (0+255),f,b
 23223                           
 23224                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 23225  00A6D6  0E01               	movlw	1
 23226  00A6D8  6FDD               	movwf	(_loRa+216)& (0+255),b
 23227                           
 23228                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 23229  00A6DA  0E00               	movlw	0
 23230  00A6DC  6FAC               	movwf	(_loRa+167)& (0+255),b
 23231                           
 23232                           ; BSR set to: 2
 23233  00A6DE  0012               	return		;funcret
 23234  00A6E0                     __end_of_ResetParametersForUnconfirmedTransmission:
 23235                           	opt callstack 0
 23236                           
 23237 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 23238 ;; Defined at:
 23239 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23240 ;; Parameters:    Size  Location     Type
 23241 ;;		None
 23242 ;; Auto vars:     Size  Location     Type
 23243 ;;		None
 23244 ;; Return value:  Size  Location     Type
 23245 ;;                  1    wreg      void 
 23246 ;; Registers used:
 23247 ;;		wreg, status,2
 23248 ;; Tracked objects:
 23249 ;;		On entry : 0/0
 23250 ;;		On exit  : 0/0
 23251 ;;		Unchanged: 0/0
 23252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23257 ;;Total ram usage:        0 bytes
 23258 ;; Hardware stack levels used:    1
 23259 ;; Hardware stack levels required when called:    7
 23260 ;; This function calls:
 23261 ;;		Nothing
 23262 ;; This function is called by:
 23263 ;;		_LORAWAN_RxTimeout
 23264 ;;		_LORAWAN_ReceiveWindow2Callback
 23265 ;;		_LORAWAN_EnterContinuousReceive
 23266 ;;		_AckRetransmissionCallback
 23267 ;; This function uses a non-reentrant model
 23268 ;;
 23269                           
 23270                           	psect	text109
 23271  00A730                     __ptext109:
 23272                           	opt callstack 0
 23273  00A730                     _ResetParametersForConfirmedTransmission:
 23274                           	opt callstack 16
 23275                           
 23276                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23277                           
 23278                           ; BSR set to: 2
 23279                           ;incstack = 0
 23280  00A730  0EF0               	movlw	-16
 23281  00A732  0102               	movlb	2	; () banked
 23282  00A734  1707               	andwf	(_loRa+2)& (0+255),f,b
 23283                           
 23284                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23285  00A736  0E01               	movlw	1
 23286  00A738  6FDE               	movwf	(_loRa+217)& (0+255),b
 23287                           
 23288                           ; BSR set to: 2
 23289                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23290  00A73A  9105               	bcf	_loRa& (0+255),0,b
 23291                           
 23292                           ; BSR set to: 2
 23293  00A73C  0012               	return		;funcret
 23294  00A73E                     __end_of_ResetParametersForConfirmedTransmission:
 23295                           	opt callstack 0
 23296                           
 23297 ;; *************** function _RADIO_ReleaseData *****************
 23298 ;; Defined at:
 23299 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23300 ;; Parameters:    Size  Location     Type
 23301 ;;		None
 23302 ;; Auto vars:     Size  Location     Type
 23303 ;;		None
 23304 ;; Return value:  Size  Location     Type
 23305 ;;                  1    wreg      void 
 23306 ;; Registers used:
 23307 ;;		status,2, status,0
 23308 ;; Tracked objects:
 23309 ;;		On entry : 0/0
 23310 ;;		On exit  : 0/0
 23311 ;;		Unchanged: 0/0
 23312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23317 ;;Total ram usage:        0 bytes
 23318 ;; Hardware stack levels used:    1
 23319 ;; Hardware stack levels required when called:    7
 23320 ;; This function calls:
 23321 ;;		Nothing
 23322 ;; This function is called by:
 23323 ;;		_LORAWAN_ReceiveWindow1Callback
 23324 ;;		_LORAWAN_ReceiveWindow2Callback
 23325 ;;		_LORAWAN_EnterContinuousReceive
 23326 ;;		_LORAWAN_RxDone
 23327 ;; This function uses a non-reentrant model
 23328 ;;
 23329                           
 23330                           	psect	text110
 23331  00A8AC                     __ptext110:
 23332                           	opt callstack 0
 23333  00A8AC                     _RADIO_ReleaseData:
 23334                           	opt callstack 16
 23335                           
 23336                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23337                           
 23338                           ; BSR set to: 2
 23339                           ;incstack = 0
 23340  00A8AC  0101               	movlb	1	; () banked
 23341  00A8AE  954C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23342                           
 23343                           ; BSR set to: 1
 23344  00A8B0  0012               	return		;funcret
 23345  00A8B2                     __end_of_RADIO_ReleaseData:
 23346                           	opt callstack 0
 23347                           
 23348 ;; *************** function _RADIO_ReceiveStop *****************
 23349 ;; Defined at:
 23350 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23351 ;; Parameters:    Size  Location     Type
 23352 ;;		None
 23353 ;; Auto vars:     Size  Location     Type
 23354 ;;		None
 23355 ;; Return value:  Size  Location     Type
 23356 ;;                  1    wreg      void 
 23357 ;; Registers used:
 23358 ;;		wreg, status,2, status,0, cstack
 23359 ;; Tracked objects:
 23360 ;;		On entry : 0/0
 23361 ;;		On exit  : 0/0
 23362 ;;		Unchanged: 0/0
 23363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23368 ;;Total ram usage:        0 bytes
 23369 ;; Hardware stack levels used:    1
 23370 ;; Hardware stack levels required when called:   11
 23371 ;; This function calls:
 23372 ;;		_RADIO_WriteMode
 23373 ;; This function is called by:
 23374 ;;		_LORAWAN_Send
 23375 ;;		_LORAWAN_ReceiveWindow1Callback
 23376 ;;		_LORAWAN_ReceiveWindow2Callback
 23377 ;;		_LORAWAN_EnterContinuousReceive
 23378 ;;		_LORAWAN_SetClass
 23379 ;; This function uses a non-reentrant model
 23380 ;;
 23381                           
 23382                           	psect	text111
 23383  00A36A                     __ptext111:
 23384                           	opt callstack 0
 23385  00A36A                     _RADIO_ReceiveStop:
 23386                           	opt callstack 16
 23387                           
 23388                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23389                           
 23390                           ; BSR set to: 1
 23391                           ;incstack = 0
 23392  00A36A  0E02               	movlw	2
 23393  00A36C  0101               	movlb	1	; () banked
 23394  00A36E  194C               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23395  00A370  A4D8               	btfss	status,2,c
 23396  00A372  0012               	return	
 23397                           
 23398                           ; BSR set to: 1
 23399                           ;radio_driver_SX1276.c: 954: {;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, R
      +                          adioConfiguration.modulation, 0);
 23400  00A374  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23401  00A378  0E00               	movlw	0
 23402  00A37A  0100               	movlb	0	; () banked
 23403  00A37C  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23404  00A37E  0E00               	movlw	0
 23405  00A380  EC1C  F036         	call	_RADIO_WriteMode
 23406                           
 23407                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23408  00A384  0101               	movlb	1	; () banked
 23409  00A386  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23410                           
 23411                           ; BSR set to: 1
 23412  00A388  0012               	return		;funcret
 23413  00A38A                     __end_of_RADIO_ReceiveStop:
 23414                           	opt callstack 0
 23415                           
 23416 ;; *************** function _RADIO_ReceiveStart *****************
 23417 ;; Defined at:
 23418 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23419 ;; Parameters:    Size  Location     Type
 23420 ;;  rxWindowSize    2   73[BANK0 ] unsigned int 
 23421 ;; Auto vars:     Size  Location     Type
 23422 ;;		None
 23423 ;; Return value:  Size  Location     Type
 23424 ;;                  2   73[BANK0 ] enum E5907
 23425 ;; Registers used:
 23426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23427 ;; Tracked objects:
 23428 ;;		On entry : 0/0
 23429 ;;		On exit  : 0/0
 23430 ;;		Unchanged: 0/0
 23431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23432 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23433 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23434 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23435 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23436 ;;Total ram usage:       10 bytes
 23437 ;; Hardware stack levels used:    1
 23438 ;; Hardware stack levels required when called:   12
 23439 ;; This function calls:
 23440 ;;		_RADIO_RegisterWrite
 23441 ;;		_RADIO_WriteConfiguration
 23442 ;;		_RADIO_WriteMode
 23443 ;;		_SwTimerSetTimeout
 23444 ;;		_SwTimerStart
 23445 ;;		___lldiv
 23446 ;; This function is called by:
 23447 ;;		_LORAWAN_ReceiveWindow1Callback
 23448 ;;		_LORAWAN_ReceiveWindow2Callback
 23449 ;;		_LORAWAN_EnterContinuousReceive
 23450 ;; This function uses a non-reentrant model
 23451 ;;
 23452                           
 23453                           	psect	text112
 23454  003BDC                     __ptext112:
 23455                           	opt callstack 0
 23456  003BDC                     _RADIO_ReceiveStart:
 23457                           	opt callstack 11
 23458                           
 23459                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23460                           
 23461                           ; BSR set to: 1
 23462                           ;incstack = 0
 23463  003BDC  0101               	movlb	1	; () banked
 23464  003BDE  A54C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23465  003BE0  D006               	goto	l18910
 23466                           
 23467                           ; BSR set to: 1
 23468                           ;radio_driver_SX1276.c: 878: {;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23469  003BE2  0E80               	movlw	128
 23470  003BE4  0100               	movlb	0	; () banked
 23471  003BE6  6FAA               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23472  003BE8  0E03               	movlw	3
 23473  003BEA  6FA9               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23474  003BEC  0012               	return	
 23475  003BEE                     l18910:
 23476                           
 23477                           ; BSR set to: 1
 23478                           ;radio_driver_SX1276.c: 880: };radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags
      +                           & ((1 << (0)) | (1 << (1)))) != 0)
 23479  003BEE  C14C  F0AB         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23480  003BF2  0E03               	movlw	3
 23481  003BF4  0100               	movlb	0	; () banked
 23482  003BF6  17AB               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23483  003BF8  B4D8               	btfsc	status,2,c
 23484  003BFA  D005               	goto	l18916
 23485                           
 23486                           ; BSR set to: 0
 23487                           ;radio_driver_SX1276.c: 883: {;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23488  003BFC  0E80               	movlw	128
 23489  003BFE  6FAA               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23490  003C00  0E04               	movlw	4
 23491  003C02  6FA9               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23492  003C04  0012               	return	
 23493  003C06                     l18916:
 23494                           
 23495                           ; BSR set to: 0
 23496                           ;radio_driver_SX1276.c: 885: };radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23497  003C06  51A9               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23498  003C08  11AA               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23499  003C0A  A4D8               	btfss	status,2,c
 23500  003C0C  D007               	goto	l18920
 23501                           
 23502                           ; BSR set to: 0
 23503                           ;radio_driver_SX1276.c: 888: {;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23504  003C0E  0E00               	movlw	0
 23505  003C10  6F9F               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23506  003C12  0E04               	movlw	4
 23507  003C14  6F9E               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23508  003C16  EC6B  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23509                           
 23510                           ;radio_driver_SX1276.c: 890: }
 23511  003C1A  D006               	goto	l18922
 23512  003C1C                     l18920:
 23513                           
 23514                           ; BSR set to: 0
 23515                           ;radio_driver_SX1276.c: 891: else;radio_driver_SX1276.c: 892: {;radio_driver_SX1276.c: 8
      +                          93: RADIO_WriteConfiguration(rxWindowSize);
 23516  003C1C  C0A9  F09E         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23517  003C20  C0AA  F09F         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23518  003C24  EC6B  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23519  003C28                     l18922:
 23520                           
 23521                           ;radio_driver_SX1276.c: 894: };radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioC
      +                          onfiguration.modulation)
 23522  003C28  0101               	movlb	1	; () banked
 23523  003C2A  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23524  003C2C  A4D8               	btfss	status,2,c
 23525  003C2E  D013               	goto	l18926
 23526                           
 23527                           ; BSR set to: 1
 23528                           ;radio_driver_SX1276.c: 897: {;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x0
      +                          1);
 23529  003C30  0E01               	movlw	1
 23530  003C32  0100               	movlb	0	; () banked
 23531  003C34  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23532  003C36  0E22               	movlw	34
 23533  003C38  ECC5  F051         	call	_RADIO_RegisterWrite
 23534                           
 23535                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23536  003C3C  0E00               	movlw	0
 23537  003C3E  0100               	movlb	0	; () banked
 23538  003C40  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23539  003C42  0E40               	movlw	64
 23540  003C44  ECC5  F051         	call	_RADIO_RegisterWrite
 23541                           
 23542                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23543  003C48  0E00               	movlw	0
 23544  003C4A  0100               	movlb	0	; () banked
 23545  003C4C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23546  003C4E  0E41               	movlw	65
 23547  003C50  ECC5  F051         	call	_RADIO_RegisterWrite
 23548                           
 23549                           ;radio_driver_SX1276.c: 908: }
 23550  003C54  D016               	goto	l18928
 23551  003C56                     l18926:
 23552                           
 23553                           ; BSR set to: 1
 23554                           ;radio_driver_SX1276.c: 909: else;radio_driver_SX1276.c: 910: {;radio_driver_SX1276.c: 9
      +                          11: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23555  003C56  C15D  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23556  003C5A  0E12               	movlw	18
 23557  003C5C  ECC5  F051         	call	_RADIO_RegisterWrite
 23558                           
 23559                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23560  003C60  C15E  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23561  003C64  0E13               	movlw	19
 23562  003C66  ECC5  F051         	call	_RADIO_RegisterWrite
 23563                           
 23564                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23565  003C6A  0E00               	movlw	0
 23566  003C6C  0100               	movlb	0	; () banked
 23567  003C6E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23568  003C70  0E40               	movlw	64
 23569  003C72  ECC5  F051         	call	_RADIO_RegisterWrite
 23570                           
 23571                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23572  003C76  0E00               	movlw	0
 23573  003C78  0100               	movlb	0	; () banked
 23574  003C7A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23575  003C7C  0E41               	movlw	65
 23576  003C7E  ECC5  F051         	call	_RADIO_RegisterWrite
 23577  003C82                     l18928:
 23578                           
 23579                           ;radio_driver_SX1276.c: 917: };radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (
      +                          1 << (1));
 23580  003C82  0101               	movlb	1	; () banked
 23581  003C84  834C               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23582                           
 23583                           ; BSR set to: 1
 23584                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23585  003C86  0EE7               	movlw	231
 23586  003C88  174C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23587                           
 23588                           ; BSR set to: 1
 23589                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23590  003C8A  0100               	movlb	0	; () banked
 23591  003C8C  51A9               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23592  003C8E  11AA               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23593  003C90  A4D8               	btfss	status,2,c
 23594  003C92  D008               	goto	l18936
 23595                           
 23596                           ; BSR set to: 0
 23597                           ;radio_driver_SX1276.c: 925: {;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, 
      +                          RadioConfiguration.modulation, 0);
 23598  003C94  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23599  003C98  0E00               	movlw	0
 23600  003C9A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23601  003C9C  0E05               	movlw	5
 23602  003C9E  EC1C  F036         	call	_RADIO_WriteMode
 23603                           
 23604                           ;radio_driver_SX1276.c: 927: }
 23605  003CA2  D046               	goto	l18946
 23606  003CA4                     l18936:
 23607                           
 23608                           ; BSR set to: 0
 23609                           ;radio_driver_SX1276.c: 928: else;radio_driver_SX1276.c: 929: {;radio_driver_SX1276.c: 9
      +                          30: if (MODULATION_LORA == RadioConfiguration.modulation)
 23610  003CA4  0101               	movlb	1	; () banked
 23611  003CA6  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23612  003CA8  A4D8               	btfss	status,2,c
 23613  003CAA  D009               	goto	l18940
 23614                           
 23615                           ; BSR set to: 1
 23616                           ;radio_driver_SX1276.c: 931: {;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE
      +                          , MODULATION_LORA, 0);
 23617  003CAC  0E01               	movlw	1
 23618  003CAE  0100               	movlb	0	; () banked
 23619  003CB0  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23620  003CB2  0E00               	movlw	0
 23621  003CB4  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23622  003CB6  0E06               	movlw	6
 23623  003CB8  EC1C  F036         	call	_RADIO_WriteMode
 23624                           
 23625                           ;radio_driver_SX1276.c: 933: }
 23626  003CBC  D039               	goto	l18946
 23627  003CBE                     l18940:
 23628                           
 23629                           ; BSR set to: 1
 23630                           ;radio_driver_SX1276.c: 934: else;radio_driver_SX1276.c: 935: {;radio_driver_SX1276.c: 9
      +                          36: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23631  003CBE  0E00               	movlw	0
 23632  003CC0  0100               	movlb	0	; () banked
 23633  003CC2  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23634  003CC4  0E00               	movlw	0
 23635  003CC6  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23636  003CC8  0E05               	movlw	5
 23637  003CCA  EC1C  F036         	call	_RADIO_WriteMode
 23638                           
 23639                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23640  003CCE  0100               	movlb	0	; () banked
 23641  003CD0  51A9               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23642  003CD2  6FAB               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23643  003CD4  51AA               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23644  003CD6  6FAC               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23645  003CD8  6BAD               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23646  003CDA  6BAE               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23647  003CDC  0E0C               	movlw	12
 23648  003CDE                     u20155:
 23649  003CDE  90D8               	bcf	status,0,c
 23650  003CE0  37AB               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23651  003CE2  37AC               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23652  003CE4  37AD               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23653  003CE6  37AE               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23654  003CE8  2EE8               	decfsz	wreg,f,c
 23655  003CEA  D7F9               	goto	u20155
 23656  003CEC  C0AB  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23657  003CF0  C0AC  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23658  003CF4  C0AD  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23659  003CF8  C0AE  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23660  003CFC  0E7D               	movlw	125
 23661  003CFE  6F64               	movwf	___lldiv@divisor& (0+255),b
 23662  003D00  0E00               	movlw	0
 23663  003D02  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23664  003D04  0E00               	movlw	0
 23665  003D06  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23666  003D08  0E00               	movlw	0
 23667  003D0A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23668  003D0C  EC96  F042         	call	___lldiv	;wreg free
 23669  003D10  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23670  003D14  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23671  003D18  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23672  003D1C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23673  003D20  0101               	movlb	1	; () banked
 23674  003D22  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23675  003D24  EC7F  F04C         	call	_SwTimerSetTimeout
 23676                           
 23677                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23678  003D28  0101               	movlb	1	; () banked
 23679  003D2A  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23680  003D2C  EC73  F040         	call	_SwTimerStart
 23681  003D30                     l18946:
 23682                           
 23683                           ;radio_driver_SX1276.c: 939: };radio_driver_SX1276.c: 940: };radio_driver_SX1276.c: 942:
      +                           if (0 != RadioConfiguration.watchdogTimerTimeout)
 23684  003D30  0101               	movlb	1	; () banked
 23685  003D32  5153               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23686  003D34  1154               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23687  003D36  1155               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23688  003D38  1156               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23689  003D3A  B4D8               	btfsc	status,2,c
 23690  003D3C  D061               	goto	l18958
 23691                           
 23692                           ; BSR set to: 1
 23693                           ;radio_driver_SX1276.c: 943: {;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfig
      +                          uration.watchdogTimerId, ((RadioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (
      +                          ((uint32_t)(RadioConfiguration.watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t
      +                          )(RadioConfiguration.watchdogTimerTimeout)) /
 23694  003D3E  5156               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23695  003D40  E107               	bnz	u20170
 23696  003D42  2953               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23697  003D44  0EFF               	movlw	255
 23698  003D46  5954               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23699  003D48  0E0F               	movlw	15
 23700  003D4A  5955               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23701  003D4C  A0D8               	btfss	status,0,c
 23702  003D4E  D01D               	goto	l18952
 23703  003D50                     u20170:
 23704                           
 23705                           ; BSR set to: 1
 23706  003D50  C153  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 23707  003D54  C154  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23708  003D58  C155  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23709  003D5C  C156  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23710  003D60  0E7D               	movlw	125
 23711  003D62  0100               	movlb	0	; () banked
 23712  003D64  6F64               	movwf	___lldiv@divisor& (0+255),b
 23713  003D66  0E00               	movlw	0
 23714  003D68  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23715  003D6A  0E00               	movlw	0
 23716  003D6C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23717  003D6E  0E00               	movlw	0
 23718  003D70  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23719  003D72  EC96  F042         	call	___lldiv	;wreg free
 23720  003D76  0E0C               	movlw	12
 23721  003D78                     u20185:
 23722  003D78  90D8               	bcf	status,0,c
 23723  003D7A  0100               	movlb	0	; () banked
 23724  003D7C  3760               	rlcf	?___lldiv& (0+255),f,b
 23725  003D7E  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 23726  003D80  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 23727  003D82  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 23728  003D84  2EE8               	decfsz	wreg,f,c
 23729  003D86  D7F8               	goto	u20185
 23730  003D88  D023               	goto	L27
 23731  003D8A                     l18952:
 23732                           
 23733                           ; BSR set to: 1
 23734  003D8A  C153  F0AB         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23735  003D8E  C154  F0AC         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23736  003D92  C155  F0AD         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23737  003D96  C156  F0AE         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23738  003D9A  0E0C               	movlw	12
 23739  003D9C                     u20195:
 23740  003D9C  90D8               	bcf	status,0,c
 23741  003D9E  0100               	movlb	0	; () banked
 23742  003DA0  37AB               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23743  003DA2  37AC               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23744  003DA4  37AD               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23745  003DA6  37AE               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23746  003DA8  2EE8               	decfsz	wreg,f,c
 23747  003DAA  D7F8               	goto	u20195
 23748  003DAC  C0AB  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23749  003DB0  C0AC  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23750  003DB4  C0AD  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23751  003DB8  C0AE  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23752  003DBC  0E7D               	movlw	125
 23753  003DBE  6F64               	movwf	___lldiv@divisor& (0+255),b
 23754  003DC0  0E00               	movlw	0
 23755  003DC2  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23756  003DC4  0E00               	movlw	0
 23757  003DC6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23758  003DC8  0E00               	movlw	0
 23759  003DCA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23760  003DCC  EC96  F042         	call	___lldiv	;wreg free
 23761  003DD0                     L27:
 23762  003DD0  C060  F0AF         	movff	?___lldiv,_RADIO_ReceiveStart$784
 23763  003DD4  C061  F0B0         	movff	?___lldiv+1,_RADIO_ReceiveStart$784+1
 23764  003DD8  C062  F0B1         	movff	?___lldiv+2,_RADIO_ReceiveStart$784+2
 23765  003DDC  C063  F0B2         	movff	?___lldiv+3,_RADIO_ReceiveStart$784+3
 23766  003DE0  C0AF  F06D         	movff	_RADIO_ReceiveStart$784,SwTimerSetTimeout@timeout
 23767  003DE4  C0B0  F06E         	movff	_RADIO_ReceiveStart$784+1,SwTimerSetTimeout@timeout+1
 23768  003DE8  C0B1  F06F         	movff	_RADIO_ReceiveStart$784+2,SwTimerSetTimeout@timeout+2
 23769  003DEC  C0B2  F070         	movff	_RADIO_ReceiveStart$784+3,SwTimerSetTimeout@timeout+3
 23770  003DF0  0101               	movlb	1	; () banked
 23771  003DF2  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23772  003DF4  EC7F  F04C         	call	_SwTimerSetTimeout
 23773                           
 23774                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23775  003DF8  0101               	movlb	1	; () banked
 23776  003DFA  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23777  003DFC  EC73  F040         	call	_SwTimerStart
 23778  003E00                     l18958:
 23779                           
 23780                           ;radio_driver_SX1276.c: 946: };radio_driver_SX1276.c: 947: return ERR_NONE;
 23781  003E00  0E00               	movlw	0
 23782  003E02  0100               	movlb	0	; () banked
 23783  003E04  6FAA               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23784  003E06  0E00               	movlw	0
 23785  003E08  6FA9               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23786                           
 23787                           ; BSR set to: 0
 23788  003E0A  0012               	return		;funcret
 23789  003E0C                     __end_of_RADIO_ReceiveStart:
 23790                           	opt callstack 0
 23791                           
 23792 ;; *************** function _ConfigureRadioRx *****************
 23793 ;; Defined at:
 23794 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23795 ;; Parameters:    Size  Location     Type
 23796 ;;  dataRate        1    wreg     unsigned char 
 23797 ;;  freq            4   19[BANK0 ] unsigned long 
 23798 ;; Auto vars:     Size  Location     Type
 23799 ;;  dataRate        1   23[BANK0 ] unsigned char 
 23800 ;; Return value:  Size  Location     Type
 23801 ;;                  1    wreg      void 
 23802 ;; Registers used:
 23803 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23804 ;; Tracked objects:
 23805 ;;		On entry : 0/0
 23806 ;;		On exit  : 0/0
 23807 ;;		Unchanged: 0/0
 23808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23810 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23812 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23813 ;;Total ram usage:        5 bytes
 23814 ;; Hardware stack levels used:    1
 23815 ;; Hardware stack levels required when called:   10
 23816 ;; This function calls:
 23817 ;;		_ConfigureRadio
 23818 ;;		_RADIO_SetCRC
 23819 ;;		_RADIO_SetIQInverted
 23820 ;; This function is called by:
 23821 ;;		_LORAWAN_ReceiveWindow1Callback
 23822 ;;		_LORAWAN_ReceiveWindow2Callback
 23823 ;;		_LORAWAN_EnterContinuousReceive
 23824 ;; This function uses a non-reentrant model
 23825 ;;
 23826                           
 23827                           	psect	text113
 23828  00A0CC                     __ptext113:
 23829                           	opt callstack 0
 23830  00A0CC                     _ConfigureRadioRx:
 23831                           	opt callstack 13
 23832                           
 23833                           ; BSR set to: 0
 23834                           ;incstack = 0
 23835                           ;ConfigureRadioRx@dataRate stored from wreg
 23836  00A0CC  0100               	movlb	0	; () banked
 23837  00A0CE  6F77               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 23838                           
 23839                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 23840  00A0D0  C073  F06E         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 23841  00A0D4  C074  F06F         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 23842  00A0D8  C075  F070         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 23843  00A0DC  C076  F071         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 23844  00A0E0  0100               	movlb	0	; () banked
 23845  00A0E2  5177               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 23846  00A0E4  ECDA  F03F         	call	_ConfigureRadio
 23847                           
 23848                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 23849  00A0E8  0E00               	movlw	0
 23850  00A0EA  EC14  F054         	call	_RADIO_SetCRC
 23851                           
 23852                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 23853  00A0EE  0E01               	movlw	1
 23854  00A0F0  EC0F  F054         	call	_RADIO_SetIQInverted
 23855  00A0F4  0012               	return		;funcret
 23856  00A0F6                     __end_of_ConfigureRadioRx:
 23857                           	opt callstack 0
 23858                           
 23859 ;; *************** function _INTERRUPT_GetDioStatus *****************
 23860 ;; Defined at:
 23861 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 23862 ;; Parameters:    Size  Location     Type
 23863 ;;		None
 23864 ;; Auto vars:     Size  Location     Type
 23865 ;;  a               1    0[BANK0 ] unsigned char 
 23866 ;; Return value:  Size  Location     Type
 23867 ;;                  1    wreg      unsigned char 
 23868 ;; Registers used:
 23869 ;;		wreg, status,2
 23870 ;; Tracked objects:
 23871 ;;		On entry : 0/0
 23872 ;;		On exit  : 0/0
 23873 ;;		Unchanged: 0/0
 23874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23878 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23879 ;;Total ram usage:        1 bytes
 23880 ;; Hardware stack levels used:    1
 23881 ;; Hardware stack levels required when called:    7
 23882 ;; This function calls:
 23883 ;;		Nothing
 23884 ;; This function is called by:
 23885 ;;		_LORAWAN_Mainloop
 23886 ;; This function uses a non-reentrant model
 23887 ;;
 23888                           
 23889                           	psect	text114
 23890  00A678                     __ptext114:
 23891                           	opt callstack 0
 23892  00A678                     _INTERRUPT_GetDioStatus:
 23893                           	opt callstack 20
 23894                           
 23895                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;;interrupt_manager_lora_addons.c: 51: (I
      +                          NTCONbits.GIE = 0);
 23896                           
 23897                           ;incstack = 0
 23898  00A678  9EF2               	bcf	4082,7,c	;volatile
 23899                           
 23900                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 23901  00A67A  C045  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 23902                           
 23903                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 23904  00A67E  0E00               	movlw	0
 23905  00A680  6E45               	movwf	_dioStatus,c	;volatile
 23906                           
 23907                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 23908  00A682  8EF2               	bsf	4082,7,c	;volatile
 23909                           
 23910                           ;interrupt_manager_lora_addons.c: 55: return a;
 23911  00A684  0100               	movlb	0	; () banked
 23912  00A686  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 23913                           
 23914                           ; BSR set to: 0
 23915  00A688  0012               	return		;funcret
 23916  00A68A                     __end_of_INTERRUPT_GetDioStatus:
 23917                           	opt callstack 0
 23918                           
 23919 ;; *************** function _lightSensAcquisition *****************
 23920 ;; Defined at:
 23921 ;;		line 304 in file "acuadori.c"
 23922 ;; Parameters:    Size  Location     Type
 23923 ;;		None
 23924 ;; Auto vars:     Size  Location     Type
 23925 ;;		None
 23926 ;; Return value:  Size  Location     Type
 23927 ;;                  1    wreg      void 
 23928 ;; Registers used:
 23929 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 23930 ;; Tracked objects:
 23931 ;;		On entry : 0/0
 23932 ;;		On exit  : 0/0
 23933 ;;		Unchanged: 0/0
 23934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23939 ;;Total ram usage:        0 bytes
 23940 ;; Hardware stack levels used:    1
 23941 ;; Hardware stack levels required when called:   11
 23942 ;; This function calls:
 23943 ;;		_GPIODigitalWrite
 23944 ;;		_acquisitionData
 23945 ;;		_adaptString
 23946 ;;		_rn2483_delaysec
 23947 ;; This function is called by:
 23948 ;;		_acuadoriApp
 23949 ;; This function uses a non-reentrant model
 23950 ;;
 23951                           
 23952                           	psect	text115
 23953  0095E2                     __ptext115:
 23954                           	opt callstack 0
 23955  0095E2                     _lightSensAcquisition:
 23956                           	opt callstack 18
 23957                           
 23958                           ;acuadori.c: 307: GPIODigitalWrite(0xFF, 1);
 23959                           
 23960                           ; BSR set to: 0
 23961                           ;incstack = 0
 23962  0095E2  0E01               	movlw	1
 23963  0095E4  0100               	movlb	0	; () banked
 23964  0095E6  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 23965  0095E8  0EFF               	movlw	255
 23966  0095EA  EC18  F037         	call	_GPIODigitalWrite
 23967                           
 23968                           ;acuadori.c: 309: rn2483_delaysec(1);
 23969  0095EE  0E00               	movlw	0
 23970  0095F0  0100               	movlb	0	; () banked
 23971  0095F2  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
 23972  0095F4  0E01               	movlw	1
 23973  0095F6  6F60               	movwf	rn2483_delaysec@length& (0+255),b
 23974  0095F8  EC24  F04D         	call	_rn2483_delaysec	;wreg free
 23975                           
 23976                           ;acuadori.c: 310: acquisitionData(0x03, stringValue);
 23977  0095FC  0E6F               	movlw	low _stringValue
 23978  0095FE  0100               	movlb	0	; () banked
 23979  009600  6FAB               	movwf	acquisitionData@string& (0+255),b
 23980  009602  0E01               	movlw	high _stringValue
 23981  009604  6FAC               	movwf	(acquisitionData@string+1)& (0+255),b
 23982  009606  0E03               	movlw	3
 23983  009608  EC51  F051         	call	_acquisitionData
 23984                           
 23985                           ;acuadori.c: 311: stringValueLength = adaptString(stringValue, 5);
 23986  00960C  0E6F               	movlw	low _stringValue
 23987  00960E  0100               	movlb	0	; () banked
 23988  009610  6F60               	movwf	adaptString@string& (0+255),b
 23989  009612  0E01               	movlw	high _stringValue
 23990  009614  6F61               	movwf	(adaptString@string+1)& (0+255),b
 23991  009616  0E05               	movlw	5
 23992  009618  6F62               	movwf	adaptString@length& (0+255),b
 23993  00961A  EC8B  F044         	call	_adaptString	;wreg free
 23994  00961E  0101               	movlb	1	; () banked
 23995  009620  6FF9               	movwf	_stringValueLength& (0+255),b
 23996                           
 23997                           ; BSR set to: 1
 23998                           ;acuadori.c: 315: GPIODigitalWrite(0xFF, 0);
 23999  009622  0E00               	movlw	0
 24000  009624  0100               	movlb	0	; () banked
 24001  009626  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 24002  009628  0EFF               	movlw	255
 24003  00962A  EC18  F037         	call	_GPIODigitalWrite
 24004  00962E  0012               	return		;funcret
 24005  009630                     __end_of_lightSensAcquisition:
 24006                           	opt callstack 0
 24007                           
 24008 ;; *************** function _rn2483_delaysec *****************
 24009 ;; Defined at:
 24010 ;;		line 37 in file "rn2483APP.c"
 24011 ;; Parameters:    Size  Location     Type
 24012 ;;  length          2    0[BANK0 ] unsigned int 
 24013 ;; Auto vars:     Size  Location     Type
 24014 ;;  counter         2    3[BANK0 ] unsigned int 
 24015 ;; Return value:  Size  Location     Type
 24016 ;;                  1    wreg      void 
 24017 ;; Registers used:
 24018 ;;		wreg, status,2, status,0
 24019 ;; Tracked objects:
 24020 ;;		On entry : 0/0
 24021 ;;		On exit  : 0/0
 24022 ;;		Unchanged: 0/0
 24023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24027 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24028 ;;Total ram usage:        5 bytes
 24029 ;; Hardware stack levels used:    1
 24030 ;; Hardware stack levels required when called:    7
 24031 ;; This function calls:
 24032 ;;		Nothing
 24033 ;; This function is called by:
 24034 ;;		_acuadoriApp
 24035 ;;		_lightSensAcquisition
 24036 ;; This function uses a non-reentrant model
 24037 ;;
 24038                           
 24039                           	psect	text116
 24040  009A48                     __ptext116:
 24041                           	opt callstack 0
 24042  009A48                     _rn2483_delaysec:
 24043                           	opt callstack 22
 24044                           
 24045                           ;rn2483APP.c: 39: uint16_t counter;;rn2483APP.c: 40: while(length){
 24046                           
 24047                           ;incstack = 0
 24048  009A48  D019               	goto	l16126
 24049  009A4A                     l16114:
 24050                           
 24051                           ; BSR set to: 0
 24052                           ;rn2483APP.c: 41: for(counter = 0; counter < 1000; counter++)
 24053  009A4A  0E00               	movlw	0
 24054  009A4C  6F64               	movwf	(rn2483_delaysec@counter+1)& (0+255),b
 24055  009A4E  0E00               	movlw	0
 24056  009A50  6F63               	movwf	rn2483_delaysec@counter& (0+255),b
 24057  009A52                     l16120:
 24058                           
 24059                           ; BSR set to: 0
 24060                           ;rn2483APP.c: 42: {;rn2483APP.c: 43: _delay((unsigned long)((1)*(16000000/4000.0)));
 24061  009A52  0E06               	movlw	6
 24062  009A54  0100               	movlb	0	; () banked
 24063  009A56  6F62               	movwf	??_rn2483_delaysec& (0+255),b
 24064  009A58  0E30               	movlw	48
 24065  009A5A                     u25247:
 24066  009A5A  2EE8               	decfsz	wreg,f,c
 24067  009A5C  D7FE               	bra	u25247
 24068  009A5E  2F62               	decfsz	??_rn2483_delaysec& (0+255),f,b
 24069  009A60  D7FC               	bra	u25247
 24070  009A62  F000               	nop	
 24071  009A64  0100               	movlb	0	; () banked
 24072  009A66  4B63               	infsnz	rn2483_delaysec@counter& (0+255),f,b
 24073  009A68  2B64               	incf	(rn2483_delaysec@counter+1)& (0+255),f,b
 24074  009A6A  0EE8               	movlw	232
 24075  009A6C  5D63               	subwf	rn2483_delaysec@counter& (0+255),w,b
 24076  009A6E  0E03               	movlw	3
 24077  009A70  5964               	subwfb	(rn2483_delaysec@counter+1)& (0+255),w,b
 24078  009A72  A0D8               	btfss	status,0,c
 24079  009A74  D7EE               	goto	l16120
 24080                           
 24081                           ; BSR set to: 0
 24082                           ;rn2483APP.c: 44: };rn2483APP.c: 45: length--;
 24083  009A76  0760               	decf	rn2483_delaysec@length& (0+255),f,b
 24084  009A78  A0D8               	btfss	status,0,c
 24085  009A7A  0761               	decf	(rn2483_delaysec@length+1)& (0+255),f,b
 24086  009A7C                     l16126:
 24087  009A7C  0100               	movlb	0	; () banked
 24088  009A7E  5160               	movf	rn2483_delaysec@length& (0+255),w,b
 24089  009A80  1161               	iorwf	(rn2483_delaysec@length+1)& (0+255),w,b
 24090  009A82  B4D8               	btfsc	status,2,c
 24091  009A84  0012               	return	
 24092  009A86  D7E1               	goto	l16114
 24093  009A88                     __end_of_rn2483_delaysec:
 24094                           	opt callstack 0
 24095                           
 24096 ;; *************** function _leafSensAcquisition *****************
 24097 ;; Defined at:
 24098 ;;		line 319 in file "acuadori.c"
 24099 ;; Parameters:    Size  Location     Type
 24100 ;;		None
 24101 ;; Auto vars:     Size  Location     Type
 24102 ;;		None
 24103 ;; Return value:  Size  Location     Type
 24104 ;;                  1    wreg      void 
 24105 ;; Registers used:
 24106 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 24107 ;; Tracked objects:
 24108 ;;		On entry : 0/0
 24109 ;;		On exit  : 0/0
 24110 ;;		Unchanged: 0/0
 24111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24116 ;;Total ram usage:        0 bytes
 24117 ;; Hardware stack levels used:    1
 24118 ;; Hardware stack levels required when called:   11
 24119 ;; This function calls:
 24120 ;;		_acquisitionData
 24121 ;;		_adaptString
 24122 ;; This function is called by:
 24123 ;;		_acuadoriApp
 24124 ;; This function uses a non-reentrant model
 24125 ;;
 24126                           
 24127                           	psect	text117
 24128  00A1C2                     __ptext117:
 24129                           	opt callstack 0
 24130  00A1C2                     _leafSensAcquisition:
 24131                           	opt callstack 18
 24132                           
 24133                           ;acuadori.c: 320: acquisitionData(0x01, stringValue);
 24134                           
 24135                           ; BSR set to: 0
 24136                           ;incstack = 0
 24137  00A1C2  0E6F               	movlw	low _stringValue
 24138  00A1C4  0100               	movlb	0	; () banked
 24139  00A1C6  6FAB               	movwf	acquisitionData@string& (0+255),b
 24140  00A1C8  0E01               	movlw	high _stringValue
 24141  00A1CA  6FAC               	movwf	(acquisitionData@string+1)& (0+255),b
 24142  00A1CC  0E01               	movlw	1
 24143  00A1CE  EC51  F051         	call	_acquisitionData
 24144                           
 24145                           ;acuadori.c: 321: stringValueLength = adaptString(stringValue, 5);
 24146  00A1D2  0E6F               	movlw	low _stringValue
 24147  00A1D4  0100               	movlb	0	; () banked
 24148  00A1D6  6F60               	movwf	adaptString@string& (0+255),b
 24149  00A1D8  0E01               	movlw	high _stringValue
 24150  00A1DA  6F61               	movwf	(adaptString@string+1)& (0+255),b
 24151  00A1DC  0E05               	movlw	5
 24152  00A1DE  6F62               	movwf	adaptString@length& (0+255),b
 24153  00A1E0  EC8B  F044         	call	_adaptString	;wreg free
 24154  00A1E4  0101               	movlb	1	; () banked
 24155  00A1E6  6FF9               	movwf	_stringValueLength& (0+255),b
 24156                           
 24157                           ; BSR set to: 1
 24158  00A1E8  0012               	return		;funcret
 24159  00A1EA                     __end_of_leafSensAcquisition:
 24160                           	opt callstack 0
 24161                           
 24162 ;; *************** function _acquisitionData *****************
 24163 ;; Defined at:
 24164 ;;		line 313 in file "rn2483APP.c"
 24165 ;; Parameters:    Size  Location     Type
 24166 ;;  GPIO            1    wreg     unsigned char 
 24167 ;;  string          2   75[BANK0 ] PTR unsigned char 
 24168 ;;		 -> stringValue(5), 
 24169 ;; Auto vars:     Size  Location     Type
 24170 ;;  GPIO            1   77[BANK0 ] unsigned char 
 24171 ;; Return value:  Size  Location     Type
 24172 ;;                  1    wreg      void 
 24173 ;; Registers used:
 24174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24175 ;; Tracked objects:
 24176 ;;		On entry : 0/0
 24177 ;;		On exit  : 0/0
 24178 ;;		Unchanged: 0/0
 24179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24180 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24181 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24183 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24184 ;;Total ram usage:        3 bytes
 24185 ;; Hardware stack levels used:    1
 24186 ;; Hardware stack levels required when called:   10
 24187 ;; This function calls:
 24188 ;;		_GPIOAverageRead
 24189 ;;		_uint16ToString
 24190 ;; This function is called by:
 24191 ;;		_lightSensAcquisition
 24192 ;;		_leafSensAcquisition
 24193 ;; This function uses a non-reentrant model
 24194 ;;
 24195                           
 24196                           	psect	text118
 24197  00A2A2                     __ptext118:
 24198                           	opt callstack 0
 24199  00A2A2                     _acquisitionData:
 24200                           	opt callstack 18
 24201                           
 24202                           ; BSR set to: 1
 24203                           ;incstack = 0
 24204                           ;acquisitionData@GPIO stored from wreg
 24205  00A2A2  0100               	movlb	0	; () banked
 24206  00A2A4  6FAD               	movwf	acquisitionData@GPIO& (0+255),b
 24207                           
 24208                           ;rn2483APP.c: 315: uint16ToString(GPIOAverageRead(GPIO), string);
 24209  00A2A6  0100               	movlb	0	; () banked
 24210  00A2A8  51AD               	movf	acquisitionData@GPIO& (0+255),w,b
 24211  00A2AA  EC12  F044         	call	_GPIOAverageRead
 24212  00A2AE  C06D  F0A5         	movff	?_GPIOAverageRead,uint16ToString@value
 24213  00A2B2  C06E  F0A6         	movff	?_GPIOAverageRead+1,uint16ToString@value+1
 24214  00A2B6  C0AB  F0A7         	movff	acquisitionData@string,uint16ToString@output
 24215  00A2BA  C0AC  F0A8         	movff	acquisitionData@string+1,uint16ToString@output+1
 24216  00A2BE  ECB8  F02C         	call	_uint16ToString	;wreg free
 24217  00A2C2  0012               	return		;funcret
 24218  00A2C4                     __end_of_acquisitionData:
 24219                           	opt callstack 0
 24220                           
 24221 ;; *************** function _GPIOAverageRead *****************
 24222 ;; Defined at:
 24223 ;;		line 300 in file "rn2483APP.c"
 24224 ;; Parameters:    Size  Location     Type
 24225 ;;  GPIO            1    wreg     unsigned char 
 24226 ;; Auto vars:     Size  Location     Type
 24227 ;;  GPIO            1   18[BANK0 ] unsigned char 
 24228 ;;  i               2   19[BANK0 ] unsigned int 
 24229 ;;  finalValue      3   21[BANK0 ] unsigned um
 24230 ;; Return value:  Size  Location     Type
 24231 ;;                  2   13[BANK0 ] unsigned int 
 24232 ;; Registers used:
 24233 ;;		wreg, status,2, status,0, cstack
 24234 ;; Tracked objects:
 24235 ;;		On entry : 0/0
 24236 ;;		On exit  : 0/0
 24237 ;;		Unchanged: 0/0
 24238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24239 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24240 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24241 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24242 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24243 ;;Total ram usage:       11 bytes
 24244 ;; Hardware stack levels used:    1
 24245 ;; Hardware stack levels required when called:    9
 24246 ;; This function calls:
 24247 ;;		_GPIOAnalogRead
 24248 ;;		___ltdiv
 24249 ;; This function is called by:
 24250 ;;		_acquisitionData
 24251 ;;		_tempSensAcquisition
 24252 ;; This function uses a non-reentrant model
 24253 ;;
 24254                           
 24255                           	psect	text119
 24256  008824                     __ptext119:
 24257                           	opt callstack 0
 24258  008824                     _GPIOAverageRead:
 24259                           	opt callstack 19
 24260                           
 24261                           ;incstack = 0
 24262                           ;GPIOAverageRead@GPIO stored from wreg
 24263  008824  0100               	movlb	0	; () banked
 24264  008826  6F72               	movwf	GPIOAverageRead@GPIO& (0+255),b
 24265                           
 24266                           ;rn2483APP.c: 302: uint24_t finalValue = 0;
 24267  008828  0E00               	movlw	0
 24268  00882A  0100               	movlb	0	; () banked
 24269  00882C  6F75               	movwf	GPIOAverageRead@finalValue& (0+255),b
 24270  00882E  0E00               	movlw	0
 24271  008830  6F76               	movwf	(GPIOAverageRead@finalValue+1)& (0+255),b
 24272  008832  0E00               	movlw	0
 24273  008834  6F77               	movwf	(GPIOAverageRead@finalValue+2)& (0+255),b
 24274                           
 24275                           ;rn2483APP.c: 304: for(uint16_t i=0; i<(1000); i++){
 24276  008836  0E00               	movlw	0
 24277  008838  6F74               	movwf	(GPIOAverageRead@i+1)& (0+255),b
 24278  00883A  0E00               	movlw	0
 24279  00883C  6F73               	movwf	GPIOAverageRead@i& (0+255),b
 24280  00883E                     l15530:
 24281                           
 24282                           ; BSR set to: 0
 24283                           ;rn2483APP.c: 305: finalValue += GPIOAnalogRead(GPIO);
 24284  00883E  5172               	movf	GPIOAverageRead@GPIO& (0+255),w,b
 24285  008840  EC45  F052         	call	_GPIOAnalogRead
 24286  008844  0100               	movlb	0	; () banked
 24287  008846  C068  F06F         	movff	?_GPIOAnalogRead,??_GPIOAverageRead
 24288  00884A  C069  F070         	movff	?_GPIOAnalogRead+1,??_GPIOAverageRead+1
 24289  00884E  6B71               	clrf	(??_GPIOAverageRead+2)& (0+255),b
 24290  008850  516F               	movf	??_GPIOAverageRead& (0+255),w,b
 24291  008852  2775               	addwf	GPIOAverageRead@finalValue& (0+255),f,b
 24292  008854  5170               	movf	(??_GPIOAverageRead+1)& (0+255),w,b
 24293  008856  2376               	addwfc	(GPIOAverageRead@finalValue+1)& (0+255),f,b
 24294  008858  5171               	movf	(??_GPIOAverageRead+2)& (0+255),w,b
 24295  00885A  2377               	addwfc	(GPIOAverageRead@finalValue+2)& (0+255),f,b
 24296                           
 24297                           ; BSR set to: 0
 24298  00885C  4B73               	infsnz	GPIOAverageRead@i& (0+255),f,b
 24299  00885E  2B74               	incf	(GPIOAverageRead@i+1)& (0+255),f,b
 24300                           
 24301                           ; BSR set to: 0
 24302  008860  0EE8               	movlw	232
 24303  008862  5D73               	subwf	GPIOAverageRead@i& (0+255),w,b
 24304  008864  0E03               	movlw	3
 24305  008866  5974               	subwfb	(GPIOAverageRead@i+1)& (0+255),w,b
 24306  008868  A0D8               	btfss	status,0,c
 24307  00886A  D7E9               	goto	l15530
 24308                           
 24309                           ; BSR set to: 0
 24310                           ;rn2483APP.c: 306: };rn2483APP.c: 307: finalValue/= 1000;
 24311  00886C  C075  F060         	movff	GPIOAverageRead@finalValue,___ltdiv@dividend
 24312  008870  C076  F061         	movff	GPIOAverageRead@finalValue+1,___ltdiv@dividend+1
 24313  008874  C077  F062         	movff	GPIOAverageRead@finalValue+2,___ltdiv@dividend+2
 24314  008878  0EE8               	movlw	232
 24315  00887A  6F63               	movwf	___ltdiv@divisor& (0+255),b
 24316  00887C  0E03               	movlw	3
 24317  00887E  6F64               	movwf	(___ltdiv@divisor+1)& (0+255),b
 24318  008880  0E00               	movlw	0
 24319  008882  6F65               	movwf	(___ltdiv@divisor+2)& (0+255),b
 24320  008884  ECEA  F045         	call	___ltdiv	;wreg free
 24321  008888  C060  F075         	movff	?___ltdiv,GPIOAverageRead@finalValue
 24322  00888C  C061  F076         	movff	?___ltdiv+1,GPIOAverageRead@finalValue+1
 24323  008890  C062  F077         	movff	?___ltdiv+2,GPIOAverageRead@finalValue+2
 24324                           
 24325                           ;rn2483APP.c: 308: return finalValue;
 24326  008894  C075  F06D         	movff	GPIOAverageRead@finalValue,?_GPIOAverageRead
 24327  008898  C076  F06E         	movff	GPIOAverageRead@finalValue+1,?_GPIOAverageRead+1
 24328  00889C  0012               	return		;funcret
 24329  00889E                     __end_of_GPIOAverageRead:
 24330                           	opt callstack 0
 24331                           
 24332 ;; *************** function _GPIOAnalogRead *****************
 24333 ;; Defined at:
 24334 ;;		line 321 in file "rn2483APP.c"
 24335 ;; Parameters:    Size  Location     Type
 24336 ;;  GPIO            1    wreg     unsigned char 
 24337 ;; Auto vars:     Size  Location     Type
 24338 ;;  GPIO            1   12[BANK0 ] unsigned char 
 24339 ;;  result          2   10[BANK0 ] unsigned int 
 24340 ;; Return value:  Size  Location     Type
 24341 ;;                  2    8[BANK0 ] unsigned int 
 24342 ;; Registers used:
 24343 ;;		wreg, status,2, status,0, cstack
 24344 ;; Tracked objects:
 24345 ;;		On entry : 0/0
 24346 ;;		On exit  : 0/0
 24347 ;;		Unchanged: 0/0
 24348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24349 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24350 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24352 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24353 ;;Total ram usage:        5 bytes
 24354 ;; Hardware stack levels used:    1
 24355 ;; Hardware stack levels required when called:    8
 24356 ;; This function calls:
 24357 ;;		_ADC_GetConversion
 24358 ;; This function is called by:
 24359 ;;		_GPIOAverageRead
 24360 ;; This function uses a non-reentrant model
 24361 ;;
 24362                           
 24363                           	psect	text120
 24364  00A48A                     __ptext120:
 24365                           	opt callstack 0
 24366  00A48A                     _GPIOAnalogRead:
 24367                           	opt callstack 19
 24368                           
 24369                           ;incstack = 0
 24370                           ;GPIOAnalogRead@GPIO stored from wreg
 24371  00A48A  0100               	movlb	0	; () banked
 24372  00A48C  6F6C               	movwf	GPIOAnalogRead@GPIO& (0+255),b
 24373                           
 24374                           ;rn2483APP.c: 323: adc_result_t result;;rn2483APP.c: 325: result = ADC_GetConversion(GPI
      +                          O);
 24375  00A48E  0100               	movlb	0	; () banked
 24376  00A490  516C               	movf	GPIOAnalogRead@GPIO& (0+255),w,b
 24377  00A492  EC57  F049         	call	_ADC_GetConversion
 24378  00A496  C060  F06A         	movff	?_ADC_GetConversion,GPIOAnalogRead@result
 24379  00A49A  C061  F06B         	movff	?_ADC_GetConversion+1,GPIOAnalogRead@result+1
 24380                           
 24381                           ;rn2483APP.c: 327: return result;
 24382  00A49E  C06A  F068         	movff	GPIOAnalogRead@result,?_GPIOAnalogRead
 24383  00A4A2  C06B  F069         	movff	GPIOAnalogRead@result+1,?_GPIOAnalogRead+1
 24384  00A4A6  0012               	return		;funcret
 24385  00A4A8                     __end_of_GPIOAnalogRead:
 24386                           	opt callstack 0
 24387                           
 24388 ;; *************** function _ADC_GetConversion *****************
 24389 ;; Defined at:
 24390 ;;		line 110 in file "mcc_generated_files/adc.c"
 24391 ;; Parameters:    Size  Location     Type
 24392 ;;  channel         1    wreg     enum E5859
 24393 ;; Auto vars:     Size  Location     Type
 24394 ;;  channel         1    7[BANK0 ] enum E5859
 24395 ;;  result          2    5[BANK0 ] unsigned int 
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  2    0[BANK0 ] unsigned int 
 24398 ;; Registers used:
 24399 ;;		wreg, status,2, status,0
 24400 ;; Tracked objects:
 24401 ;;		On entry : 0/0
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24405 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24406 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24407 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24408 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24409 ;;Total ram usage:        8 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; Hardware stack levels required when called:    7
 24412 ;; This function calls:
 24413 ;;		Nothing
 24414 ;; This function is called by:
 24415 ;;		_GPIOAnalogRead
 24416 ;; This function uses a non-reentrant model
 24417 ;;
 24418                           
 24419                           	psect	text121
 24420  0092AE                     __ptext121:
 24421                           	opt callstack 0
 24422  0092AE                     _ADC_GetConversion:
 24423                           	opt callstack 19
 24424                           
 24425                           ;incstack = 0
 24426                           ;ADC_GetConversion@channel stored from wreg
 24427  0092AE  0100               	movlb	0	; () banked
 24428  0092B0  6F67               	movwf	ADC_GetConversion@channel& (0+255),b
 24429                           
 24430                           ;adc.c: 113: ADCON0bits.CHS = channel;
 24431  0092B2  C067  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 24432  0092B6  0100               	movlb	0	; () banked
 24433  0092B8  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 24434  0092BA  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 24435  0092BC  50C2               	movf	4034,w,c	;volatile
 24436  0092BE  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 24437  0092C0  0B83               	andlw	-125
 24438  0092C2  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 24439  0092C4  6EC2               	movwf	4034,c	;volatile
 24440                           
 24441                           ; BSR set to: 0
 24442                           ;adc.c: 116: ADCON0bits.ADON = 1;
 24443  0092C6  80C2               	bsf	4034,0,c	;volatile
 24444                           
 24445                           ; BSR set to: 0
 24446                           ;adc.c: 119: ADCON0bits.GO_nDONE = 1;
 24447  0092C8  82C2               	bsf	4034,1,c	;volatile
 24448  0092CA                     l2528:
 24449  0092CA  B2C2               	btfsc	4034,1,c	;volatile
 24450  0092CC  D7FE               	goto	l2528
 24451                           
 24452                           ;adc.c: 124: };adc.c: 127: adc_result_t result = ((adc_result_t)((ADRESH << 8) + ADRESL)
      +                          );
 24453  0092CE  50C4               	movf	4036,w,c	;volatile
 24454  0092D0  0100               	movlb	0	; () banked
 24455  0092D2  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 24456  0092D4  6B62               	clrf	??_ADC_GetConversion& (0+255),b
 24457  0092D6  50C3               	movf	4035,w,c	;volatile
 24458  0092D8  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
 24459  0092DA  6F65               	movwf	ADC_GetConversion@result& (0+255),b
 24460  0092DC  0E00               	movlw	0
 24461  0092DE  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 24462  0092E0  6F66               	movwf	(ADC_GetConversion@result+1)& (0+255),b
 24463                           
 24464                           ;adc.c: 128: return result>>6;
 24465  0092E2  C065  F062         	movff	ADC_GetConversion@result,??_ADC_GetConversion
 24466  0092E6  C066  F063         	movff	ADC_GetConversion@result+1,??_ADC_GetConversion+1
 24467  0092EA  0E06               	movlw	6
 24468  0092EC  6F64               	movwf	(??_ADC_GetConversion+2)& (0+255),b
 24469  0092EE                     u13985:
 24470  0092EE  90D8               	bcf	status,0,c
 24471  0092F0  3363               	rrcf	(??_ADC_GetConversion+1)& (0+255),f,b
 24472  0092F2  3362               	rrcf	??_ADC_GetConversion& (0+255),f,b
 24473  0092F4  2F64               	decfsz	(??_ADC_GetConversion+2)& (0+255),f,b
 24474  0092F6  D7FB               	goto	u13985
 24475  0092F8  C062  F060         	movff	??_ADC_GetConversion,?_ADC_GetConversion
 24476  0092FC  C063  F061         	movff	??_ADC_GetConversion+1,?_ADC_GetConversion+1
 24477                           
 24478                           ; BSR set to: 0
 24479  009300  0012               	return		;funcret
 24480  009302                     __end_of_ADC_GetConversion:
 24481                           	opt callstack 0
 24482                           
 24483 ;; *************** function _impedenceAcquisition *****************
 24484 ;; Defined at:
 24485 ;;		line 325 in file "acuadori.c"
 24486 ;; Parameters:    Size  Location     Type
 24487 ;;		None
 24488 ;; Auto vars:     Size  Location     Type
 24489 ;;		None
 24490 ;; Return value:  Size  Location     Type
 24491 ;;                  1    wreg      void 
 24492 ;; Registers used:
 24493 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24494 ;; Tracked objects:
 24495 ;;		On entry : 0/0
 24496 ;;		On exit  : 0/0
 24497 ;;		Unchanged: 0/0
 24498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24503 ;;Total ram usage:        0 bytes
 24504 ;; Hardware stack levels used:    1
 24505 ;; Hardware stack levels required when called:   11
 24506 ;; This function calls:
 24507 ;;		_adaptString
 24508 ;;		_averageMeasure
 24509 ;;		_sinGenStart
 24510 ;;		_uint16ToString
 24511 ;; This function is called by:
 24512 ;;		_acuadoriApp
 24513 ;; This function uses a non-reentrant model
 24514 ;;
 24515                           
 24516                           	psect	text122
 24517  009BF8                     __ptext122:
 24518                           	opt callstack 0
 24519  009BF8                     _impedenceAcquisition:
 24520                           	opt callstack 18
 24521                           
 24522                           ;acuadori.c: 326: sinGenStart();
 24523                           
 24524                           ; BSR set to: 0
 24525                           ;incstack = 0
 24526  009BF8  ECF7  F02D         	call	_sinGenStart	;wreg free
 24527                           
 24528                           ;acuadori.c: 327: uint16ToString(averageMeasure(), stringValue);
 24529  009BFC  EC8A  F041         	call	_averageMeasure	;wreg free
 24530  009C00  C06A  F0A5         	movff	?_averageMeasure,uint16ToString@value
 24531  009C04  C06B  F0A6         	movff	?_averageMeasure+1,uint16ToString@value+1
 24532  009C08  0E6F               	movlw	low _stringValue
 24533  009C0A  0100               	movlb	0	; () banked
 24534  009C0C  6FA7               	movwf	uint16ToString@output& (0+255),b
 24535  009C0E  0E01               	movlw	high _stringValue
 24536  009C10  6FA8               	movwf	(uint16ToString@output+1)& (0+255),b
 24537  009C12  ECB8  F02C         	call	_uint16ToString	;wreg free
 24538                           
 24539                           ;acuadori.c: 328: stringValueLength = adaptString(stringValue, 5);
 24540  009C16  0E6F               	movlw	low _stringValue
 24541  009C18  0100               	movlb	0	; () banked
 24542  009C1A  6F60               	movwf	adaptString@string& (0+255),b
 24543  009C1C  0E01               	movlw	high _stringValue
 24544  009C1E  6F61               	movwf	(adaptString@string+1)& (0+255),b
 24545  009C20  0E05               	movlw	5
 24546  009C22  6F62               	movwf	adaptString@length& (0+255),b
 24547  009C24  EC8B  F044         	call	_adaptString	;wreg free
 24548  009C28  0101               	movlb	1	; () banked
 24549  009C2A  6FF9               	movwf	_stringValueLength& (0+255),b
 24550                           
 24551                           ; BSR set to: 1
 24552  009C2C  0012               	return		;funcret
 24553  009C2E                     __end_of_impedenceAcquisition:
 24554                           	opt callstack 0
 24555                           
 24556 ;; *************** function _uint16ToString *****************
 24557 ;; Defined at:
 24558 ;;		line 270 in file "rn2483APP.c"
 24559 ;; Parameters:    Size  Location     Type
 24560 ;;  value           2   69[BANK0 ] unsigned int 
 24561 ;;  output          2   71[BANK0 ] PTR unsigned char 
 24562 ;;		 -> stringValue(5), 
 24563 ;; Auto vars:     Size  Location     Type
 24564 ;;  position        2    0        unsigned int 
 24565 ;; Return value:  Size  Location     Type
 24566 ;;                  1    wreg      void 
 24567 ;; Registers used:
 24568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24569 ;; Tracked objects:
 24570 ;;		On entry : 0/0
 24571 ;;		On exit  : 0/0
 24572 ;;		Unchanged: 0/0
 24573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24574 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24575 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24577 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24578 ;;Total ram usage:        6 bytes
 24579 ;; Hardware stack levels used:    1
 24580 ;; Hardware stack levels required when called:    8
 24581 ;; This function calls:
 24582 ;;		___lwdiv
 24583 ;;		___lwmod
 24584 ;; This function is called by:
 24585 ;;		_acquisitionData
 24586 ;;		_tempSensAcquisition
 24587 ;;		_impedenceAcquisition
 24588 ;; This function uses a non-reentrant model
 24589 ;;
 24590                           
 24591                           	psect	text123
 24592  005970                     __ptext123:
 24593                           	opt callstack 0
 24594  005970                     _uint16ToString:
 24595                           	opt callstack 20
 24596                           
 24597                           ;rn2483APP.c: 284: output[position + 4] = '0' + (value % 10);
 24598                           
 24599                           ; BSR set to: 1
 24600                           ;incstack = 0
 24601  005970  0100               	movlb	0	; () banked
 24602  005972  EE20 F004          	lfsr	2,4
 24603  005976  51A7               	movf	uint16ToString@output& (0+255),w,b
 24604  005978  26D9               	addwf	fsr2l,f,c
 24605  00597A  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24606  00597C  22DA               	addwfc	fsr2h,f,c
 24607  00597E  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24608  005982  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24609  005986  0E00               	movlw	0
 24610  005988  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24611  00598A  0E0A               	movlw	10
 24612  00598C  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24613  00598E  EC5D  F04C         	call	___lwmod	;wreg free
 24614  005992  0100               	movlb	0	; () banked
 24615  005994  51A0               	movf	?___lwmod& (0+255),w,b
 24616  005996  0F30               	addlw	48
 24617  005998  6EDF               	movwf	indf2,c
 24618                           
 24619                           ; BSR set to: 0
 24620                           ;rn2483APP.c: 285: value /= 10;
 24621  00599A  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24622  00599E  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24623  0059A2  0E00               	movlw	0
 24624  0059A4  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24625  0059A6  0E0A               	movlw	10
 24626  0059A8  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24627  0059AA  EC81  F049         	call	___lwdiv	;wreg free
 24628  0059AE  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24629  0059B2  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24630                           
 24631                           ;rn2483APP.c: 286: output[position + 3] = '0' + (value % 10);
 24632  0059B6  0100               	movlb	0	; () banked
 24633  0059B8  EE20 F003          	lfsr	2,3
 24634  0059BC  51A7               	movf	uint16ToString@output& (0+255),w,b
 24635  0059BE  26D9               	addwf	fsr2l,f,c
 24636  0059C0  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24637  0059C2  22DA               	addwfc	fsr2h,f,c
 24638  0059C4  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24639  0059C8  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24640  0059CC  0E00               	movlw	0
 24641  0059CE  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24642  0059D0  0E0A               	movlw	10
 24643  0059D2  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24644  0059D4  EC5D  F04C         	call	___lwmod	;wreg free
 24645  0059D8  0100               	movlb	0	; () banked
 24646  0059DA  51A0               	movf	?___lwmod& (0+255),w,b
 24647  0059DC  0F30               	addlw	48
 24648  0059DE  6EDF               	movwf	indf2,c
 24649                           
 24650                           ; BSR set to: 0
 24651                           ;rn2483APP.c: 287: value /= 10;
 24652  0059E0  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24653  0059E4  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24654  0059E8  0E00               	movlw	0
 24655  0059EA  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24656  0059EC  0E0A               	movlw	10
 24657  0059EE  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24658  0059F0  EC81  F049         	call	___lwdiv	;wreg free
 24659  0059F4  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24660  0059F8  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24661                           
 24662                           ;rn2483APP.c: 288: output[position + 2] = '0' + (value % 10);
 24663  0059FC  0100               	movlb	0	; () banked
 24664  0059FE  EE20 F002          	lfsr	2,2
 24665  005A02  51A7               	movf	uint16ToString@output& (0+255),w,b
 24666  005A04  26D9               	addwf	fsr2l,f,c
 24667  005A06  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24668  005A08  22DA               	addwfc	fsr2h,f,c
 24669  005A0A  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24670  005A0E  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24671  005A12  0E00               	movlw	0
 24672  005A14  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24673  005A16  0E0A               	movlw	10
 24674  005A18  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24675  005A1A  EC5D  F04C         	call	___lwmod	;wreg free
 24676  005A1E  0100               	movlb	0	; () banked
 24677  005A20  51A0               	movf	?___lwmod& (0+255),w,b
 24678  005A22  0F30               	addlw	48
 24679  005A24  6EDF               	movwf	indf2,c
 24680                           
 24681                           ; BSR set to: 0
 24682                           ;rn2483APP.c: 289: value /= 10;
 24683  005A26  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24684  005A2A  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24685  005A2E  0E00               	movlw	0
 24686  005A30  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24687  005A32  0E0A               	movlw	10
 24688  005A34  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24689  005A36  EC81  F049         	call	___lwdiv	;wreg free
 24690  005A3A  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24691  005A3E  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24692                           
 24693                           ;rn2483APP.c: 290: output[position + 1] = '0' + (value % 10);
 24694  005A42  0100               	movlb	0	; () banked
 24695  005A44  EE20 F001          	lfsr	2,1
 24696  005A48  51A7               	movf	uint16ToString@output& (0+255),w,b
 24697  005A4A  26D9               	addwf	fsr2l,f,c
 24698  005A4C  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24699  005A4E  22DA               	addwfc	fsr2h,f,c
 24700  005A50  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24701  005A54  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24702  005A58  0E00               	movlw	0
 24703  005A5A  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24704  005A5C  0E0A               	movlw	10
 24705  005A5E  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24706  005A60  EC5D  F04C         	call	___lwmod	;wreg free
 24707  005A64  0100               	movlb	0	; () banked
 24708  005A66  51A0               	movf	?___lwmod& (0+255),w,b
 24709  005A68  0F30               	addlw	48
 24710  005A6A  6EDF               	movwf	indf2,c
 24711                           
 24712                           ; BSR set to: 0
 24713                           ;rn2483APP.c: 291: value /= 10;
 24714  005A6C  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24715  005A70  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24716  005A74  0E00               	movlw	0
 24717  005A76  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24718  005A78  0E0A               	movlw	10
 24719  005A7A  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24720  005A7C  EC81  F049         	call	___lwdiv	;wreg free
 24721  005A80  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24722  005A84  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24723                           
 24724                           ;rn2483APP.c: 292: output[position] = '0' + (value % 10);
 24725  005A88  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24726  005A8C  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24727  005A90  0E00               	movlw	0
 24728  005A92  0100               	movlb	0	; () banked
 24729  005A94  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24730  005A96  0E0A               	movlw	10
 24731  005A98  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24732  005A9A  EC5D  F04C         	call	___lwmod	;wreg free
 24733  005A9E  0100               	movlb	0	; () banked
 24734  005AA0  51A0               	movf	?___lwmod& (0+255),w,b
 24735  005AA2  0F30               	addlw	48
 24736  005AA4  C0A7  FFD9         	movff	uint16ToString@output,fsr2l
 24737  005AA8  C0A8  FFDA         	movff	uint16ToString@output+1,fsr2h
 24738  005AAC  6EDF               	movwf	indf2,c
 24739                           
 24740                           ; BSR set to: 0
 24741  005AAE  0012               	return		;funcret
 24742  005AB0                     __end_of_uint16ToString:
 24743                           	opt callstack 0
 24744                           
 24745 ;; *************** function ___lwdiv *****************
 24746 ;; Defined at:
 24747 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 24748 ;; Parameters:    Size  Location     Type
 24749 ;;  dividend        2    0[BANK0 ] unsigned int 
 24750 ;;  divisor         2    2[BANK0 ] unsigned int 
 24751 ;; Auto vars:     Size  Location     Type
 24752 ;;  quotient        2    4[BANK0 ] unsigned int 
 24753 ;;  counter         1    6[BANK0 ] unsigned char 
 24754 ;; Return value:  Size  Location     Type
 24755 ;;                  2    0[BANK0 ] unsigned int 
 24756 ;; Registers used:
 24757 ;;		wreg, status,2, status,0
 24758 ;; Tracked objects:
 24759 ;;		On entry : 0/0
 24760 ;;		On exit  : 0/0
 24761 ;;		Unchanged: 0/0
 24762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24763 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24764 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24766 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24767 ;;Total ram usage:        7 bytes
 24768 ;; Hardware stack levels used:    1
 24769 ;; Hardware stack levels required when called:    7
 24770 ;; This function calls:
 24771 ;;		Nothing
 24772 ;; This function is called by:
 24773 ;;		_uint16ToString
 24774 ;; This function uses a non-reentrant model
 24775 ;;
 24776                           
 24777                           	psect	text124
 24778  009302                     __ptext124:
 24779                           	opt callstack 0
 24780  009302                     ___lwdiv:
 24781                           	opt callstack 20
 24782                           
 24783                           ; BSR set to: 0
 24784                           ;incstack = 0
 24785  009302  0E00               	movlw	0
 24786  009304  0100               	movlb	0	; () banked
 24787  009306  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 24788  009308  0E00               	movlw	0
 24789  00930A  6F64               	movwf	___lwdiv@quotient& (0+255),b
 24790                           
 24791                           ; BSR set to: 0
 24792  00930C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 24793  00930E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 24794  009310  B4D8               	btfsc	status,2,c
 24795  009312  D01C               	goto	l4022
 24796                           
 24797                           ; BSR set to: 0
 24798  009314  0E01               	movlw	1
 24799  009316  6F66               	movwf	___lwdiv@counter& (0+255),b
 24800  009318  D004               	goto	l15228
 24801  00931A                     l15226:
 24802                           
 24803                           ; BSR set to: 0
 24804  00931A  90D8               	bcf	status,0,c
 24805  00931C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 24806  00931E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 24807  009320  2B66               	incf	___lwdiv@counter& (0+255),f,b
 24808  009322                     l15228:
 24809                           
 24810                           ; BSR set to: 0
 24811  009322  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 24812  009324  D7FA               	goto	l15226
 24813  009326                     u15610:
 24814                           
 24815                           ; BSR set to: 0
 24816  009326  90D8               	bcf	status,0,c
 24817  009328  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 24818  00932A  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 24819                           
 24820                           ; BSR set to: 0
 24821  00932C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 24822  00932E  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 24823  009330  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24824  009332  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 24825  009334  A0D8               	btfss	status,0,c
 24826  009336  D005               	goto	l15238
 24827                           
 24828                           ; BSR set to: 0
 24829  009338  5162               	movf	___lwdiv@divisor& (0+255),w,b
 24830  00933A  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 24831  00933C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24832  00933E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 24833                           
 24834                           ; BSR set to: 0
 24835  009340  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 24836  009342                     l15238:
 24837                           
 24838                           ; BSR set to: 0
 24839  009342  90D8               	bcf	status,0,c
 24840  009344  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 24841  009346  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 24842                           
 24843                           ; BSR set to: 0
 24844  009348  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 24845  00934A  D7ED               	goto	u15610
 24846  00934C                     l4022:
 24847                           
 24848                           ; BSR set to: 0
 24849  00934C  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 24850  009350  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 24851                           
 24852                           ; BSR set to: 0
 24853  009354  0012               	return		;funcret
 24854  009356                     __end_of___lwdiv:
 24855                           	opt callstack 0
 24856                           
 24857 ;; *************** function _sinGenStart *****************
 24858 ;; Defined at:
 24859 ;;		line 154 in file "acuadori.c"
 24860 ;; Parameters:    Size  Location     Type
 24861 ;;		None
 24862 ;; Auto vars:     Size  Location     Type
 24863 ;;  i               2    8[BANK0 ] int 
 24864 ;;  t               1   13[BANK0 ] unsigned char 
 24865 ;;  i               1   12[BANK0 ] char 
 24866 ;;  d               2   10[BANK0 ] unsigned int 
 24867 ;; Return value:  Size  Location     Type
 24868 ;;                  1    wreg      void 
 24869 ;; Registers used:
 24870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24871 ;; Tracked objects:
 24872 ;;		On entry : 0/0
 24873 ;;		On exit  : 0/0
 24874 ;;		Unchanged: 0/0
 24875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24877 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24879 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24880 ;;Total ram usage:        8 bytes
 24881 ;; Hardware stack levels used:    1
 24882 ;; Hardware stack levels required when called:   10
 24883 ;; This function calls:
 24884 ;;		_TMR3_StartTimer
 24885 ;;		_TMR3_StopTimer
 24886 ;;		_TMR5_StartTimer
 24887 ;;		_TMR5_StopTimer
 24888 ;;		_i2c_sendData
 24889 ;;		_i2c_stop
 24890 ;;		_i2c_waitACK
 24891 ;; This function is called by:
 24892 ;;		_impedenceAcquisition
 24893 ;; This function uses a non-reentrant model
 24894 ;;
 24895                           
 24896                           	psect	text125
 24897  005BEE                     __ptext125:
 24898                           	opt callstack 0
 24899  005BEE                     _sinGenStart:
 24900                           	opt callstack 18
 24901                           
 24902                           ;acuadori.c: 156: for(uint16_t d=0; d<200; d++){
 24903                           
 24904                           ; BSR set to: 0
 24905                           ;incstack = 0
 24906  005BEE  0E00               	movlw	0
 24907  005BF0  0100               	movlb	0	; () banked
 24908  005BF2  6F6B               	movwf	(sinGenStart@d+1)& (0+255),b
 24909  005BF4  0E00               	movlw	0
 24910  005BF6  6F6A               	movwf	sinGenStart@d& (0+255),b
 24911  005BF8                     l16162:
 24912                           
 24913                           ; BSR set to: 0
 24914                           ;acuadori.c: 158: TMR5_StopTimer();
 24915  005BF8  EC59  F054         	call	_TMR5_StopTimer	;wreg free
 24916                           
 24917                           ;acuadori.c: 159: TMR3_StartTimer();
 24918  005BFC  EC66  F054         	call	_TMR3_StartTimer	;wreg free
 24919  005C00                     l3341:
 24920  005C00  A084               	btfss	3972,0,c	;volatile
 24921  005C02  D7FE               	goto	l3341
 24922                           
 24923                           ;acuadori.c: 165: LATE &= ~0x2;
 24924  005C04  928D               	bcf	3981,1,c	;volatile
 24925                           
 24926                           ;acuadori.c: 167: for(int8_t i = 7; i > -1; i--){
 24927  005C06  0E07               	movlw	7
 24928  005C08  0100               	movlb	0	; () banked
 24929  005C0A  6F6C               	movwf	sinGenStart@i& (0+255),b
 24930  005C0C                     l16172:
 24931                           
 24932                           ; BSR set to: 0
 24933                           ;acuadori.c: 168: if(flag){
 24934  005C0C  5041               	movf	_flag,w,c
 24935  005C0E  B4D8               	btfsc	status,2,c
 24936  005C10  D002               	goto	u16820
 24937  005C12                     u16810:
 24938  005C12  A084               	btfss	3972,0,c	;volatile
 24939  005C14  D7FE               	goto	u16810
 24940  005C16                     u16820:
 24941  005C16  B084               	btfsc	3972,0,c	;volatile
 24942  005C18  D7FE               	goto	u16820
 24943                           
 24944                           ;acuadori.c: 176: if(address & (1 << i)){
 24945  005C1A  C06C  F066         	movff	sinGenStart@i,??_sinGenStart
 24946  005C1E  0E01               	movlw	1
 24947  005C20  0100               	movlb	0	; () banked
 24948  005C22  6F67               	movwf	(??_sinGenStart+1)& (0+255),b
 24949  005C24  2B66               	incf	??_sinGenStart& (0+255),f,b
 24950  005C26  D002               	goto	u16844
 24951  005C28                     u16845:
 24952  005C28  90D8               	bcf	status,0,c
 24953  005C2A  3767               	rlcf	(??_sinGenStart+1)& (0+255),f,b
 24954  005C2C                     u16844:
 24955  005C2C  2F66               	decfsz	??_sinGenStart& (0+255),f,b
 24956  005C2E  D7FC               	goto	u16845
 24957  005C30  0E90               	movlw	144
 24958  005C32  0100               	movlb	0	; () banked
 24959  005C34  1767               	andwf	(??_sinGenStart+1)& (0+255),f,b
 24960  005C36  B4D8               	btfsc	status,2,c
 24961  005C38  D002               	goto	l16180
 24962                           
 24963                           ; BSR set to: 0
 24964                           ;acuadori.c: 178: LATE |= 0x2;
 24965  005C3A  828D               	bsf	3981,1,c	;volatile
 24966                           
 24967                           ;acuadori.c: 180: }
 24968  005C3C  D001               	goto	l16182
 24969  005C3E                     l16180:
 24970                           
 24971                           ; BSR set to: 0
 24972                           ;acuadori.c: 181: else{;acuadori.c: 183: LATE &= ~ 0x2;
 24973  005C3E  928D               	bcf	3981,1,c	;volatile
 24974  005C40                     l16182:
 24975                           
 24976                           ; BSR set to: 0
 24977                           ;acuadori.c: 185: };acuadori.c: 186: flag = 1;
 24978  005C40  0E01               	movlw	1
 24979  005C42  6E41               	movwf	_flag,c
 24980                           
 24981                           ; BSR set to: 0
 24982  005C44  076C               	decf	sinGenStart@i& (0+255),f,b
 24983                           
 24984                           ; BSR set to: 0
 24985  005C46  AF6C               	btfss	sinGenStart@i& (0+255),7,b
 24986  005C48  D7E1               	goto	l16172
 24987  005C4A                     u16860:
 24988  005C4A  A084               	btfss	3972,0,c	;volatile
 24989  005C4C  D7FE               	goto	u16860
 24990  005C4E                     u16870:
 24991  005C4E  B084               	btfsc	3972,0,c	;volatile
 24992  005C50  D7FE               	goto	u16870
 24993                           
 24994                           ;acuadori.c: 191: if(!i2c_waitACK() || 1){
 24995  005C52  ECD3  F052         	call	_i2c_waitACK	;wreg free
 24996                           
 24997                           ;acuadori.c: 194: for(uint8_t t=0; t<2; t++){
 24998  005C56  0E00               	movlw	0
 24999  005C58  0100               	movlb	0	; () banked
 25000  005C5A  6F6D               	movwf	sinGenStart@t& (0+255),b
 25001  005C5C                     l16196:
 25002                           
 25003                           ; BSR set to: 0
 25004                           ;acuadori.c: 196: i2c_sendData(pulseSignal[t]);
 25005  005C5C  516D               	movf	sinGenStart@t& (0+255),w,b
 25006  005C5E  0D02               	mullw	2
 25007  005C60  0EF3               	movlw	low _pulseSignal
 25008  005C62  24F3               	addwf	prodl,w,c
 25009  005C64  6ED9               	movwf	fsr2l,c
 25010  005C66  0E01               	movlw	high _pulseSignal
 25011  005C68  20F4               	addwfc	prodh,w,c
 25012  005C6A  6EDA               	movwf	fsr2h,c
 25013  005C6C  CFDE F064          	movff	postinc2,i2c_sendData@data
 25014  005C70  CFDD F065          	movff	postdec2,i2c_sendData@data+1
 25015  005C74  ECF8  F04E         	call	_i2c_sendData	;wreg free
 25016  005C78  0100               	movlb	0	; () banked
 25017  005C7A  2B6D               	incf	sinGenStart@t& (0+255),f,b
 25018                           
 25019                           ; BSR set to: 0
 25020  005C7C  0E01               	movlw	1
 25021  005C7E  656D               	cpfsgt	sinGenStart@t& (0+255),b
 25022  005C80  D7ED               	goto	l16196
 25023                           
 25024                           ; BSR set to: 0
 25025                           ;acuadori.c: 199: };acuadori.c: 200: TMR3_StopTimer();
 25026  005C82  EC64  F054         	call	_TMR3_StopTimer	;wreg free
 25027                           
 25028                           ;acuadori.c: 202: for(int i=0; i<70; i++){
 25029  005C86  0E00               	movlw	0
 25030  005C88  0100               	movlb	0	; () banked
 25031  005C8A  6F69               	movwf	(sinGenStart@i_5414+1)& (0+255),b
 25032  005C8C  0E00               	movlw	0
 25033  005C8E  6F68               	movwf	sinGenStart@i_5414& (0+255),b
 25034  005C90                     l3366:
 25035                           
 25036                           ; BSR set to: 0
 25037                           ;acuadori.c: 203: _delay((unsigned long)((1)*(16000000/4000000.0)));
 25038  005C90  D000               	nop2		;2 cycle nop
 25039  005C92  D000               	nop2		;2 cycle nop
 25040  005C94  0100               	movlb	0	; () banked
 25041  005C96  4B68               	infsnz	sinGenStart@i_5414& (0+255),f,b
 25042  005C98  2B69               	incf	(sinGenStart@i_5414+1)& (0+255),f,b
 25043                           
 25044                           ; BSR set to: 0
 25045  005C9A  BF69               	btfsc	(sinGenStart@i_5414+1)& (0+255),7,b
 25046  005C9C  D7F9               	goto	l3366
 25047  005C9E  5169               	movf	(sinGenStart@i_5414+1)& (0+255),w,b
 25048  005CA0  E104               	bnz	u16900
 25049  005CA2  0E46               	movlw	70
 25050  005CA4  5D68               	subwf	sinGenStart@i_5414& (0+255),w,b
 25051  005CA6  A0D8               	btfss	status,0,c
 25052  005CA8  D7F3               	goto	l3366
 25053  005CAA                     u16900:
 25054                           
 25055                           ; BSR set to: 0
 25056                           ;acuadori.c: 204: };acuadori.c: 208: ADCON0bits.CHS = 0x02;
 25057  005CAA  50C2               	movf	4034,w,c	;volatile
 25058  005CAC  0B83               	andlw	-125
 25059  005CAE  0908               	iorlw	8
 25060  005CB0  6EC2               	movwf	4034,c	;volatile
 25061                           
 25062                           ; BSR set to: 0
 25063                           ;acuadori.c: 211: ADCON0bits.ADON = 1;
 25064  005CB2  80C2               	bsf	4034,0,c	;volatile
 25065                           
 25066                           ; BSR set to: 0
 25067                           ;acuadori.c: 214: ADCON0bits.GO_nDONE = 1;
 25068  005CB4  82C2               	bsf	4034,1,c	;volatile
 25069  005CB6                     l3368:
 25070  005CB6  B2C2               	btfsc	4034,1,c	;volatile
 25071  005CB8  D7FE               	goto	l3368
 25072                           
 25073                           ;acuadori.c: 219: };acuadori.c: 222: result = ((adc_result_t)((ADRESH << 8) + ADRESL));
 25074  005CBA  50C4               	movf	4036,w,c	;volatile
 25075  005CBC  0100               	movlb	0	; () banked
 25076  005CBE  6F67               	movwf	(??_sinGenStart+1)& (0+255),b
 25077  005CC0  6B66               	clrf	??_sinGenStart& (0+255),b
 25078  005CC2  50C3               	movf	4035,w,c	;volatile
 25079  005CC4  2566               	addwf	??_sinGenStart& (0+255),w,b
 25080  005CC6  0101               	movlb	1	; () banked
 25081  005CC8  6F18               	movwf	_result& (0+255),b
 25082  005CCA  0E00               	movlw	0
 25083  005CCC  0100               	movlb	0	; () banked
 25084  005CCE  2167               	addwfc	(??_sinGenStart+1)& (0+255),w,b
 25085  005CD0  0101               	movlb	1	; () banked
 25086  005CD2  6F19               	movwf	(_result+1)& (0+255),b
 25087                           
 25088                           ;acuadori.c: 223: result>>=6;
 25089  005CD4  0E06               	movlw	6
 25090  005CD6  0100               	movlb	0	; () banked
 25091  005CD8  6F66               	movwf	??_sinGenStart& (0+255),b
 25092  005CDA                     u16925:
 25093  005CDA  90D8               	bcf	status,0,c
 25094  005CDC  0101               	movlb	1	; () banked
 25095  005CDE  3319               	rrcf	(_result+1)& (0+255),f,b
 25096  005CE0  3318               	rrcf	_result& (0+255),f,b
 25097  005CE2  0100               	movlb	0	; () banked
 25098  005CE4  2F66               	decfsz	??_sinGenStart& (0+255),f,b
 25099  005CE6  D7F9               	goto	u16925
 25100                           
 25101                           ; BSR set to: 0
 25102                           ;acuadori.c: 224: capValues[d] = result;
 25103  005CE8  90D8               	bcf	status,0,c
 25104  005CEA  356A               	rlcf	sinGenStart@d& (0+255),w,b
 25105  005CEC  6ED9               	movwf	fsr2l,c
 25106  005CEE  356B               	rlcf	(sinGenStart@d+1)& (0+255),w,b
 25107  005CF0  6EDA               	movwf	fsr2h,c
 25108  005CF2  0E28               	movlw	low _capValues
 25109  005CF4  26D9               	addwf	fsr2l,f,c
 25110  005CF6  0E05               	movlw	high _capValues
 25111  005CF8  22DA               	addwfc	fsr2h,f,c
 25112  005CFA  C118  FFDE         	movff	_result,postinc2
 25113  005CFE  C119  FFDD         	movff	_result+1,postdec2
 25114                           
 25115                           ; BSR set to: 0
 25116                           ;acuadori.c: 225: TMR3_StartTimer();
 25117  005D02  EC66  F054         	call	_TMR3_StartTimer	;wreg free
 25118                           
 25119                           ;acuadori.c: 226: };acuadori.c: 228: i2c_stop();
 25120  005D06  ECE0  F04E         	call	_i2c_stop	;wreg free
 25121                           
 25122                           ;acuadori.c: 229: TMR3_StopTimer();
 25123  005D0A  EC64  F054         	call	_TMR3_StopTimer	;wreg free
 25124                           
 25125                           ;acuadori.c: 230: TMR5_StartTimer();
 25126  005D0E  EC5C  F054         	call	_TMR5_StartTimer	;wreg free
 25127  005D12  0100               	movlb	0	; () banked
 25128  005D14  4B6A               	infsnz	sinGenStart@d& (0+255),f,b
 25129  005D16  2B6B               	incf	(sinGenStart@d+1)& (0+255),f,b
 25130                           
 25131                           ; BSR set to: 0
 25132  005D18  516B               	movf	(sinGenStart@d+1)& (0+255),w,b
 25133  005D1A  E105               	bnz	u16930
 25134  005D1C  0EC8               	movlw	200
 25135  005D1E  5D6A               	subwf	sinGenStart@d& (0+255),w,b
 25136  005D20  B0D8               	btfsc	status,0,c
 25137  005D22  0012               	return	
 25138  005D24  D769               	goto	l16162
 25139  005D26                     u16930:
 25140                           
 25141                           ; BSR set to: 0
 25142  005D26  0012               	return		;funcret
 25143  005D28                     __end_of_sinGenStart:
 25144                           	opt callstack 0
 25145                           
 25146 ;; *************** function _i2c_stop *****************
 25147 ;; Defined at:
 25148 ;;		line 38 in file "I2C.c"
 25149 ;; Parameters:    Size  Location     Type
 25150 ;;		None
 25151 ;; Auto vars:     Size  Location     Type
 25152 ;;		None
 25153 ;; Return value:  Size  Location     Type
 25154 ;;                  1    wreg      void 
 25155 ;; Registers used:
 25156 ;;		wreg, status,2, status,0, cstack
 25157 ;; Tracked objects:
 25158 ;;		On entry : 0/0
 25159 ;;		On exit  : 0/0
 25160 ;;		Unchanged: 0/0
 25161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25166 ;;Total ram usage:        0 bytes
 25167 ;; Hardware stack levels used:    1
 25168 ;; Hardware stack levels required when called:    9
 25169 ;; This function calls:
 25170 ;;		_GPIODigitalRead
 25171 ;;		_i2c_usdelay
 25172 ;;		_resetSDA
 25173 ;;		_setSDA
 25174 ;; This function is called by:
 25175 ;;		_sinGenStart
 25176 ;; This function uses a non-reentrant model
 25177 ;;
 25178                           
 25179                           	psect	text126
 25180  009DC0                     __ptext126:
 25181                           	opt callstack 0
 25182  009DC0                     _i2c_stop:
 25183                           	opt callstack 18
 25184                           
 25185                           ;I2C.c: 40: resetSDA();
 25186                           
 25187                           ; BSR set to: 0
 25188                           ;incstack = 0
 25189  009DC0  ECA6  F053         	call	_resetSDA	;wreg free
 25190  009DC4                     l15556:
 25191  009DC4  0E05               	movlw	5
 25192  009DC6  EC1D  F03D         	call	_GPIODigitalRead
 25193  009DCA  0900               	iorlw	0
 25194  009DCC  B4D8               	btfsc	status,2,c
 25195  009DCE  D7FA               	goto	l15556
 25196                           
 25197                           ;I2C.c: 43: setSDA();
 25198  009DD0  EC9F  F053         	call	_setSDA	;wreg free
 25199                           
 25200                           ;I2C.c: 44: i2c_usdelay(1);
 25201  009DD4  0E00               	movlw	0
 25202  009DD6  0100               	movlb	0	; () banked
 25203  009DD8  6F61               	movwf	(i2c_usdelay@time+1)& (0+255),b
 25204  009DDA  0E01               	movlw	1
 25205  009DDC  6F60               	movwf	i2c_usdelay@time& (0+255),b
 25206  009DDE  EC2E  F051         	call	_i2c_usdelay	;wreg free
 25207  009DE2                     l15560:
 25208  009DE2  0E05               	movlw	5
 25209  009DE4  EC1D  F03D         	call	_GPIODigitalRead
 25210  009DE8  0900               	iorlw	0
 25211  009DEA  B4D8               	btfsc	status,2,c
 25212  009DEC  0012               	return	
 25213  009DEE  D7F9               	goto	l15560
 25214  009DF0                     __end_of_i2c_stop:
 25215                           	opt callstack 0
 25216                           
 25217 ;; *************** function _setSDA *****************
 25218 ;; Defined at:
 25219 ;;		line 161 in file "I2C.c"
 25220 ;; Parameters:    Size  Location     Type
 25221 ;;		None
 25222 ;; Auto vars:     Size  Location     Type
 25223 ;;		None
 25224 ;; Return value:  Size  Location     Type
 25225 ;;                  1    wreg      void 
 25226 ;; Registers used:
 25227 ;;		wreg, status,2, status,0, cstack
 25228 ;; Tracked objects:
 25229 ;;		On entry : 0/0
 25230 ;;		On exit  : 0/0
 25231 ;;		Unchanged: 0/0
 25232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25237 ;;Total ram usage:        0 bytes
 25238 ;; Hardware stack levels used:    1
 25239 ;; Hardware stack levels required when called:    8
 25240 ;; This function calls:
 25241 ;;		_GPIODigitalWrite
 25242 ;; This function is called by:
 25243 ;;		_i2c_stop
 25244 ;; This function uses a non-reentrant model
 25245 ;;
 25246                           
 25247                           	psect	text127
 25248  00A73E                     __ptext127:
 25249                           	opt callstack 0
 25250  00A73E                     _setSDA:
 25251                           	opt callstack 18
 25252                           
 25253                           ;I2C.c: 162: GPIODigitalWrite(0x06, 1);
 25254                           
 25255                           ;incstack = 0
 25256  00A73E  0E01               	movlw	1
 25257  00A740  0100               	movlb	0	; () banked
 25258  00A742  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 25259  00A744  0E06               	movlw	6
 25260  00A746  EC18  F037         	call	_GPIODigitalWrite
 25261  00A74A  0012               	return		;funcret
 25262  00A74C                     __end_of_setSDA:
 25263                           	opt callstack 0
 25264                           
 25265 ;; *************** function _resetSDA *****************
 25266 ;; Defined at:
 25267 ;;		line 168 in file "I2C.c"
 25268 ;; Parameters:    Size  Location     Type
 25269 ;;		None
 25270 ;; Auto vars:     Size  Location     Type
 25271 ;;		None
 25272 ;; Return value:  Size  Location     Type
 25273 ;;                  1    wreg      void 
 25274 ;; Registers used:
 25275 ;;		wreg, status,2, status,0, cstack
 25276 ;; Tracked objects:
 25277 ;;		On entry : 0/0
 25278 ;;		On exit  : 0/0
 25279 ;;		Unchanged: 0/0
 25280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25285 ;;Total ram usage:        0 bytes
 25286 ;; Hardware stack levels used:    1
 25287 ;; Hardware stack levels required when called:    8
 25288 ;; This function calls:
 25289 ;;		_GPIODigitalWrite
 25290 ;; This function is called by:
 25291 ;;		_i2c_stop
 25292 ;; This function uses a non-reentrant model
 25293 ;;
 25294                           
 25295                           	psect	text128
 25296  00A74C                     __ptext128:
 25297                           	opt callstack 0
 25298  00A74C                     _resetSDA:
 25299                           	opt callstack 18
 25300                           
 25301                           ;I2C.c: 169: GPIODigitalWrite(0x06, 0);
 25302                           
 25303                           ;incstack = 0
 25304  00A74C  0E00               	movlw	0
 25305  00A74E  0100               	movlb	0	; () banked
 25306  00A750  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 25307  00A752  0E06               	movlw	6
 25308  00A754  EC18  F037         	call	_GPIODigitalWrite
 25309  00A758  0012               	return		;funcret
 25310  00A75A                     __end_of_resetSDA:
 25311                           	opt callstack 0
 25312                           
 25313 ;; *************** function _i2c_usdelay *****************
 25314 ;; Defined at:
 25315 ;;		line 155 in file "I2C.c"
 25316 ;; Parameters:    Size  Location     Type
 25317 ;;  time            2    0[BANK0 ] unsigned int 
 25318 ;; Auto vars:     Size  Location     Type
 25319 ;;  i               2    2[BANK0 ] int 
 25320 ;; Return value:  Size  Location     Type
 25321 ;;                  1    wreg      void 
 25322 ;; Registers used:
 25323 ;;		wreg, status,2, status,0
 25324 ;; Tracked objects:
 25325 ;;		On entry : 0/0
 25326 ;;		On exit  : 0/0
 25327 ;;		Unchanged: 0/0
 25328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25330 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25332 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25333 ;;Total ram usage:        4 bytes
 25334 ;; Hardware stack levels used:    1
 25335 ;; Hardware stack levels required when called:    7
 25336 ;; This function calls:
 25337 ;;		Nothing
 25338 ;; This function is called by:
 25339 ;;		_i2c_stop
 25340 ;; This function uses a non-reentrant model
 25341 ;;
 25342                           
 25343                           	psect	text129
 25344  00A25C                     __ptext129:
 25345                           	opt callstack 0
 25346  00A25C                     _i2c_usdelay:
 25347                           	opt callstack 19
 25348                           
 25349                           ;I2C.c: 156: for (int i=0; i< time; i++){
 25350                           
 25351                           ;incstack = 0
 25352  00A25C  0E00               	movlw	0
 25353  00A25E  0100               	movlb	0	; () banked
 25354  00A260  6F63               	movwf	(i2c_usdelay@i+1)& (0+255),b
 25355  00A262  0E00               	movlw	0
 25356  00A264  6F62               	movwf	i2c_usdelay@i& (0+255),b
 25357  00A266  D005               	goto	l15172
 25358  00A268                     l3526:
 25359                           
 25360                           ; BSR set to: 0
 25361                           ;I2C.c: 157: _delay((unsigned long)((1)*(16000000/4000000.0)));
 25362  00A268  D000               	nop2		;2 cycle nop
 25363  00A26A  D000               	nop2		;2 cycle nop
 25364  00A26C  0100               	movlb	0	; () banked
 25365  00A26E  4B62               	infsnz	i2c_usdelay@i& (0+255),f,b
 25366  00A270  2B63               	incf	(i2c_usdelay@i+1)& (0+255),f,b
 25367  00A272                     l15172:
 25368                           
 25369                           ; BSR set to: 0
 25370  00A272  5160               	movf	i2c_usdelay@time& (0+255),w,b
 25371  00A274  5D62               	subwf	i2c_usdelay@i& (0+255),w,b
 25372  00A276  5161               	movf	(i2c_usdelay@time+1)& (0+255),w,b
 25373  00A278  5963               	subwfb	(i2c_usdelay@i+1)& (0+255),w,b
 25374  00A27A  B0D8               	btfsc	status,0,c
 25375  00A27C  0012               	return	
 25376  00A27E  D7F4               	goto	l3526
 25377  00A280                     __end_of_i2c_usdelay:
 25378                           	opt callstack 0
 25379                           
 25380 ;; *************** function _GPIODigitalRead *****************
 25381 ;; Defined at:
 25382 ;;		line 186 in file "rn2483APP.c"
 25383 ;; Parameters:    Size  Location     Type
 25384 ;;  GPIO            1    wreg     unsigned char 
 25385 ;; Auto vars:     Size  Location     Type
 25386 ;;  GPIO            1    0[BANK0 ] unsigned char 
 25387 ;; Return value:  Size  Location     Type
 25388 ;;                  1    wreg      unsigned char 
 25389 ;; Registers used:
 25390 ;;		wreg, status,2, status,0
 25391 ;; Tracked objects:
 25392 ;;		On entry : 0/0
 25393 ;;		On exit  : 0/0
 25394 ;;		Unchanged: 0/0
 25395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25397 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25399 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25400 ;;Total ram usage:        1 bytes
 25401 ;; Hardware stack levels used:    1
 25402 ;; Hardware stack levels required when called:    7
 25403 ;; This function calls:
 25404 ;;		Nothing
 25405 ;; This function is called by:
 25406 ;;		_i2c_stop
 25407 ;; This function uses a non-reentrant model
 25408 ;;
 25409                           
 25410                           	psect	text130
 25411  007A3A                     __ptext130:
 25412                           	opt callstack 0
 25413  007A3A                     _GPIODigitalRead:
 25414                           	opt callstack 19
 25415                           
 25416                           ; BSR set to: 0
 25417                           ;incstack = 0
 25418                           ;GPIODigitalRead@GPIO stored from wreg
 25419  007A3A  0100               	movlb	0	; () banked
 25420  007A3C  6F60               	movwf	GPIODigitalRead@GPIO& (0+255),b
 25421                           
 25422                           ;rn2483APP.c: 187: switch(GPIO){
 25423  007A3E  D035               	goto	l15156
 25424  007A40                     l15082:
 25425                           
 25426                           ; BSR set to: 0
 25427                           ;rn2483APP.c: 189: return ((PORTA & 0x1) >> 0x0);
 25428  007A40  5080               	movf	3968,w,c	;volatile
 25429  007A42  0B01               	andlw	1
 25430  007A44  0012               	return	
 25431  007A46                     l15088:
 25432                           
 25433                           ; BSR set to: 0
 25434                           ;rn2483APP.c: 192: return ((PORTA & 0x2) >> 0x1);
 25435  007A46  90D8               	bcf	status,0,c
 25436  007A48  3080               	rrcf	3968,w,c	;volatile
 25437  007A4A  0B01               	andlw	1
 25438  007A4C  0012               	return	
 25439  007A4E                     l15094:
 25440                           
 25441                           ; BSR set to: 0
 25442                           ;rn2483APP.c: 195: return ((PORTA & 0x4) >> 0x2);
 25443  007A4E  4080               	rrncf	3968,w,c	;volatile
 25444  007A50  42E8               	rrncf	wreg,f,c
 25445  007A52  0B3F               	andlw	63
 25446  007A54  0B01               	andlw	1
 25447  007A56  0012               	return	
 25448  007A58                     l15100:
 25449                           
 25450                           ; BSR set to: 0
 25451                           ;rn2483APP.c: 198: return ((PORTA & 0x8) >> 0x3);
 25452  007A58  3880               	swapf	3968,w,c	;volatile
 25453  007A5A  46E8               	rlncf	wreg,f,c
 25454  007A5C  0B1F               	andlw	31
 25455  007A5E  0B01               	andlw	1
 25456  007A60  0012               	return	
 25457  007A62                     l15106:
 25458                           
 25459                           ; BSR set to: 0
 25460                           ;rn2483APP.c: 201: return ((PORTA & 0x10) >> 0x4);
 25461  007A62  3880               	swapf	3968,w,c	;volatile
 25462  007A64  0B0F               	andlw	15
 25463  007A66  0B01               	andlw	1
 25464  007A68  0012               	return	
 25465  007A6A                     l15112:
 25466                           
 25467                           ; BSR set to: 0
 25468                           ;rn2483APP.c: 204: return ((PORTA & 0x20) >> 0x5);
 25469  007A6A  3880               	swapf	3968,w,c	;volatile
 25470  007A6C  42E8               	rrncf	wreg,f,c
 25471  007A6E  0B07               	andlw	7
 25472  007A70  0B01               	andlw	1
 25473  007A72  0012               	return	
 25474  007A74                     l15118:
 25475                           
 25476                           ; BSR set to: 0
 25477                           ;rn2483APP.c: 207: return ((PORTE & 0x1) >> 0x0);
 25478  007A74  5084               	movf	3972,w,c	;volatile
 25479  007A76  0B01               	andlw	1
 25480  007A78  0012               	return	
 25481  007A7A                     l15124:
 25482                           
 25483                           ; BSR set to: 0
 25484                           ;rn2483APP.c: 210: return ((PORTE & 0x2) >> 0x1);
 25485  007A7A  90D8               	bcf	status,0,c
 25486  007A7C  3084               	rrcf	3972,w,c	;volatile
 25487  007A7E  0B01               	andlw	1
 25488  007A80  0012               	return	
 25489  007A82                     l15130:
 25490                           
 25491                           ; BSR set to: 0
 25492                           ;rn2483APP.c: 213: return ((PORTD & 0x4) >> 0x2);
 25493  007A82  4083               	rrncf	3971,w,c	;volatile
 25494  007A84  42E8               	rrncf	wreg,f,c
 25495  007A86  0B3F               	andlw	63
 25496  007A88  0B01               	andlw	1
 25497  007A8A  0012               	return	
 25498  007A8C                     l15136:
 25499                           
 25500                           ; BSR set to: 0
 25501                           ;rn2483APP.c: 216: return ((PORTE & 0x4) >> 0x2);
 25502  007A8C  4084               	rrncf	3972,w,c	;volatile
 25503  007A8E  42E8               	rrncf	wreg,f,c
 25504  007A90  0B3F               	andlw	63
 25505  007A92  0B01               	andlw	1
 25506  007A94  0012               	return	
 25507  007A96                     l15142:
 25508                           
 25509                           ; BSR set to: 0
 25510                           ;rn2483APP.c: 219: return ((PORTC & 0x20) >> 0x5);
 25511  007A96  3882               	swapf	3970,w,c	;volatile
 25512  007A98  42E8               	rrncf	wreg,f,c
 25513  007A9A  0B07               	andlw	7
 25514  007A9C  0B01               	andlw	1
 25515  007A9E  0012               	return	
 25516  007AA0                     l15148:
 25517                           
 25518                           ; BSR set to: 0
 25519                           ;rn2483APP.c: 222: return ((PORTD & 0x20) >> 0x5);
 25520  007AA0  3883               	swapf	3971,w,c	;volatile
 25521  007AA2  42E8               	rrncf	wreg,f,c
 25522  007AA4  0B07               	andlw	7
 25523  007AA6  0B01               	andlw	1
 25524  007AA8  0012               	return	
 25525  007AAA                     l15156:
 25526  007AAA  0100               	movlb	0	; () banked
 25527  007AAC  5160               	movf	GPIODigitalRead@GPIO& (0+255),w,b
 25528                           
 25529                           ; Switch size 1, requested type "simple"
 25530                           ; Number of cases is 12, Range of values is 0 to 255
 25531                           ; switch strategies available:
 25532                           ; Name         Instructions Cycles
 25533                           ; simple_byte           37    19 (average)
 25534                           ;	Chosen strategy is simple_byte
 25535  007AAE  0A00               	xorlw	0	; case 0
 25536  007AB0  B4D8               	btfsc	status,2,c
 25537  007AB2  D7C6               	goto	l15082
 25538  007AB4  0A01               	xorlw	1	; case 1
 25539  007AB6  B4D8               	btfsc	status,2,c
 25540  007AB8  D7C6               	goto	l15088
 25541  007ABA  0A03               	xorlw	3	; case 2
 25542  007ABC  B4D8               	btfsc	status,2,c
 25543  007ABE  D7C7               	goto	l15094
 25544  007AC0  0A01               	xorlw	1	; case 3
 25545  007AC2  B4D8               	btfsc	status,2,c
 25546  007AC4  D7C9               	goto	l15100
 25547  007AC6  0A07               	xorlw	7	; case 4
 25548  007AC8  B4D8               	btfsc	status,2,c
 25549  007ACA  D7CF               	goto	l15112
 25550  007ACC  0A01               	xorlw	1	; case 5
 25551  007ACE  B4D8               	btfsc	status,2,c
 25552  007AD0  D7D1               	goto	l15118
 25553  007AD2  0A03               	xorlw	3	; case 6
 25554  007AD4  B4D8               	btfsc	status,2,c
 25555  007AD6  D7D1               	goto	l15124
 25556  007AD8  0A01               	xorlw	1	; case 7
 25557  007ADA  B4D8               	btfsc	status,2,c
 25558  007ADC  D7D7               	goto	l15136
 25559  007ADE  0A16               	xorlw	22	; case 17
 25560  007AE0  B4D8               	btfsc	status,2,c
 25561  007AE2  D7D9               	goto	l15142
 25562  007AE4  0A07               	xorlw	7	; case 22
 25563  007AE6  B4D8               	btfsc	status,2,c
 25564  007AE8  D7CC               	goto	l15130
 25565  007AEA  0A0F               	xorlw	15	; case 25
 25566  007AEC  B4D8               	btfsc	status,2,c
 25567  007AEE  D7D8               	goto	l15148
 25568  007AF0  0AE6               	xorlw	230	; case 255
 25569  007AF2  A4D8               	btfss	status,2,c
 25570  007AF4  0012               	return	
 25571  007AF6  D7B5               	goto	l15106
 25572  007AF8                     __end_of_GPIODigitalRead:
 25573                           	opt callstack 0
 25574                           
 25575 ;; *************** function _i2c_sendData *****************
 25576 ;; Defined at:
 25577 ;;		line 134 in file "I2C.c"
 25578 ;; Parameters:    Size  Location     Type
 25579 ;;  data            2    4[BANK0 ] unsigned int 
 25580 ;; Auto vars:     Size  Location     Type
 25581 ;;		None
 25582 ;; Return value:  Size  Location     Type
 25583 ;;                  1    wreg      unsigned char 
 25584 ;; Registers used:
 25585 ;;		wreg, status,2, status,0, cstack
 25586 ;; Tracked objects:
 25587 ;;		On entry : 0/0
 25588 ;;		On exit  : 0/0
 25589 ;;		Unchanged: 0/0
 25590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25594 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25595 ;;Total ram usage:        2 bytes
 25596 ;; Hardware stack levels used:    1
 25597 ;; Hardware stack levels required when called:    9
 25598 ;; This function calls:
 25599 ;;		_i2c_sdaWrite
 25600 ;; This function is called by:
 25601 ;;		_sinGenStart
 25602 ;; This function uses a non-reentrant model
 25603 ;;
 25604                           
 25605                           	psect	text131
 25606  009DF0                     __ptext131:
 25607                           	opt callstack 0
 25608  009DF0                     _i2c_sendData:
 25609                           	opt callstack 18
 25610                           
 25611                           ;I2C.c: 136: data <<= 2;
 25612                           
 25613                           ; BSR set to: 0
 25614                           ;incstack = 0
 25615  009DF0  0100               	movlb	0	; () banked
 25616  009DF2  90D8               	bcf	status,0,c
 25617  009DF4  3764               	rlcf	i2c_sendData@data& (0+255),f,b
 25618  009DF6  3765               	rlcf	(i2c_sendData@data+1)& (0+255),f,b
 25619  009DF8  90D8               	bcf	status,0,c
 25620  009DFA  3764               	rlcf	i2c_sendData@data& (0+255),f,b
 25621  009DFC  3765               	rlcf	(i2c_sendData@data+1)& (0+255),f,b
 25622                           
 25623                           ; BSR set to: 0
 25624                           ;I2C.c: 137: data &= 0x0FFC;
 25625  009DFE  0EFC               	movlw	252
 25626  009E00  1764               	andwf	i2c_sendData@data& (0+255),f,b
 25627  009E02  0E0F               	movlw	15
 25628  009E04  1765               	andwf	(i2c_sendData@data+1)& (0+255),f,b
 25629                           
 25630                           ; BSR set to: 0
 25631                           ;I2C.c: 138: high = data >>8;
 25632  009E06  5165               	movf	(i2c_sendData@data+1)& (0+255),w,b
 25633  009E08  0101               	movlb	1	; () banked
 25634  009E0A  6F22               	movwf	_high& (0+255),b
 25635                           
 25636                           ; BSR set to: 1
 25637                           ;I2C.c: 139: low = data & 0x00FF;
 25638  009E0C  C064  F121         	movff	i2c_sendData@data,_low
 25639                           
 25640                           ; BSR set to: 1
 25641                           ;I2C.c: 140: i2c_sdaWrite(high);
 25642  009E10  5122               	movf	_high& (0+255),w,b
 25643  009E12  EC7A  F048         	call	_i2c_sdaWrite
 25644                           
 25645                           ;I2C.c: 141: i2c_sdaWrite(low);
 25646  009E16  0101               	movlb	1	; () banked
 25647  009E18  5121               	movf	_low& (0+255),w,b
 25648  009E1A  EC7A  F048         	call	_i2c_sdaWrite
 25649  009E1E  0012               	return		;funcret
 25650  009E20                     __end_of_i2c_sendData:
 25651                           	opt callstack 0
 25652                           
 25653 ;; *************** function _i2c_sdaWrite *****************
 25654 ;; Defined at:
 25655 ;;		line 53 in file "I2C.c"
 25656 ;; Parameters:    Size  Location     Type
 25657 ;;  data            1    wreg     unsigned char 
 25658 ;; Auto vars:     Size  Location     Type
 25659 ;;  data            1    2[BANK0 ] unsigned char 
 25660 ;;  i               1    3[BANK0 ] char 
 25661 ;; Return value:  Size  Location     Type
 25662 ;;                  1    wreg      unsigned char 
 25663 ;; Registers used:
 25664 ;;		wreg, status,2, status,0, cstack
 25665 ;; Tracked objects:
 25666 ;;		On entry : 0/0
 25667 ;;		On exit  : 0/0
 25668 ;;		Unchanged: 0/0
 25669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25671 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25672 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25673 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25674 ;;Total ram usage:        4 bytes
 25675 ;; Hardware stack levels used:    1
 25676 ;; Hardware stack levels required when called:    8
 25677 ;; This function calls:
 25678 ;;		_i2c_waitACK
 25679 ;; This function is called by:
 25680 ;;		_i2c_sendData
 25681 ;; This function uses a non-reentrant model
 25682 ;;
 25683                           
 25684                           	psect	text132
 25685  0090F4                     __ptext132:
 25686                           	opt callstack 0
 25687  0090F4                     _i2c_sdaWrite:
 25688                           	opt callstack 18
 25689                           
 25690                           ;incstack = 0
 25691                           ;i2c_sdaWrite@data stored from wreg
 25692  0090F4  0100               	movlb	0	; () banked
 25693  0090F6  6F62               	movwf	i2c_sdaWrite@data& (0+255),b
 25694                           
 25695                           ;I2C.c: 55: flag = 0;
 25696  0090F8  0E00               	movlw	0
 25697  0090FA  6E40               	movwf	I2C@flag,c
 25698                           
 25699                           ;I2C.c: 57: for(int8_t i = 7; i > -1; i--){
 25700  0090FC  0E07               	movlw	7
 25701  0090FE  0100               	movlb	0	; () banked
 25702  009100  6F63               	movwf	i2c_sdaWrite@i& (0+255),b
 25703  009102                     l15180:
 25704                           
 25705                           ; BSR set to: 0
 25706                           ;I2C.c: 58: if(flag){
 25707  009102  5040               	movf	I2C@flag,w,c
 25708  009104  B4D8               	btfsc	status,2,c
 25709  009106  D002               	goto	u15500
 25710  009108                     u15490:
 25711  009108  A084               	btfss	3972,0,c	;volatile
 25712  00910A  D7FE               	goto	u15490
 25713  00910C                     u15500:
 25714  00910C  B084               	btfsc	3972,0,c	;volatile
 25715  00910E  D7FE               	goto	u15500
 25716                           
 25717                           ;I2C.c: 63: if(data & (1 << i)){
 25718  009110  C063  F060         	movff	i2c_sdaWrite@i,??_i2c_sdaWrite
 25719  009114  0E01               	movlw	1
 25720  009116  0100               	movlb	0	; () banked
 25721  009118  6F61               	movwf	(??_i2c_sdaWrite+1)& (0+255),b
 25722  00911A  2B60               	incf	??_i2c_sdaWrite& (0+255),f,b
 25723  00911C  D002               	goto	u15524
 25724  00911E                     u15525:
 25725  00911E  90D8               	bcf	status,0,c
 25726  009120  3761               	rlcf	(??_i2c_sdaWrite+1)& (0+255),f,b
 25727  009122                     u15524:
 25728  009122  2F60               	decfsz	??_i2c_sdaWrite& (0+255),f,b
 25729  009124  D7FC               	goto	u15525
 25730  009126  0100               	movlb	0	; () banked
 25731  009128  5161               	movf	(??_i2c_sdaWrite+1)& (0+255),w,b
 25732  00912A  1562               	andwf	i2c_sdaWrite@data& (0+255),w,b
 25733  00912C  0900               	iorlw	0
 25734  00912E  B4D8               	btfsc	status,2,c
 25735  009130  D002               	goto	l15188
 25736                           
 25737                           ; BSR set to: 0
 25738                           ;I2C.c: 64: LATE |= 0x2;
 25739  009132  828D               	bsf	3981,1,c	;volatile
 25740                           
 25741                           ;I2C.c: 65: }
 25742  009134  D001               	goto	l15190
 25743  009136                     l15188:
 25744                           
 25745                           ; BSR set to: 0
 25746                           ;I2C.c: 66: else{;I2C.c: 67: LATE &= ~0x2;
 25747  009136  928D               	bcf	3981,1,c	;volatile
 25748  009138                     l15190:
 25749                           
 25750                           ; BSR set to: 0
 25751                           ;I2C.c: 68: };I2C.c: 69: flag = 1;
 25752  009138  0E01               	movlw	1
 25753  00913A  6E40               	movwf	I2C@flag,c
 25754                           
 25755                           ; BSR set to: 0
 25756  00913C  0763               	decf	i2c_sdaWrite@i& (0+255),f,b
 25757                           
 25758                           ; BSR set to: 0
 25759  00913E  AF63               	btfss	i2c_sdaWrite@i& (0+255),7,b
 25760  009140  D7E0               	goto	l15180
 25761  009142                     u15540:
 25762  009142  A084               	btfss	3972,0,c	;volatile
 25763  009144  D7FE               	goto	u15540
 25764  009146                     u15550:
 25765  009146  B084               	btfsc	3972,0,c	;volatile
 25766  009148  D7FE               	goto	u15550
 25767                           
 25768                           ;I2C.c: 73: return i2c_waitACK();;	Return value of _i2c_sdaWrite is never used
 25769  00914A  ECD3  F052         	call	_i2c_waitACK	;wreg free
 25770  00914E  0012               	return		;funcret
 25771  009150                     __end_of_i2c_sdaWrite:
 25772                           	opt callstack 0
 25773                           
 25774 ;; *************** function _i2c_waitACK *****************
 25775 ;; Defined at:
 25776 ;;		line 112 in file "I2C.c"
 25777 ;; Parameters:    Size  Location     Type
 25778 ;;		None
 25779 ;; Auto vars:     Size  Location     Type
 25780 ;;		None
 25781 ;; Return value:  Size  Location     Type
 25782 ;;                  1    wreg      unsigned char 
 25783 ;; Registers used:
 25784 ;;		wreg, status,2, status,0
 25785 ;; Tracked objects:
 25786 ;;		On entry : 0/0
 25787 ;;		On exit  : 0/0
 25788 ;;		Unchanged: 0/0
 25789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25794 ;;Total ram usage:        0 bytes
 25795 ;; Hardware stack levels used:    1
 25796 ;; Hardware stack levels required when called:    7
 25797 ;; This function calls:
 25798 ;;		Nothing
 25799 ;; This function is called by:
 25800 ;;		_sinGenStart
 25801 ;;		_i2c_sdaWrite
 25802 ;;		_i2c_sdaAddress
 25803 ;; This function uses a non-reentrant model
 25804 ;;
 25805                           
 25806                           	psect	text133
 25807  00A5A6                     __ptext133:
 25808                           	opt callstack 0
 25809  00A5A6                     _i2c_waitACK:
 25810                           	opt callstack 20
 25811                           
 25812                           ;I2C.c: 118: TRISE |= (0x2);
 25813                           
 25814                           ;incstack = 0
 25815  00A5A6  8296               	bsf	3990,1,c	;volatile
 25816  00A5A8                     l3507:
 25817  00A5A8  A084               	btfss	3972,0,c	;volatile
 25818  00A5AA  D7FE               	goto	l3507
 25819                           
 25820                           ;I2C.c: 125: nACK = (PORTE & 0x2);
 25821  00A5AC  5084               	movf	3972,w,c	;volatile
 25822  00A5AE  0B02               	andlw	2
 25823  00A5B0  0101               	movlb	1	; () banked
 25824  00A5B2  6F20               	movwf	_nACK& (0+255),b
 25825                           
 25826                           ; BSR set to: 1
 25827                           ;I2C.c: 127: TRISE &= ~(0x2);
 25828  00A5B4  9296               	bcf	3990,1,c	;volatile
 25829  00A5B6                     l3510:
 25830  00A5B6  B084               	btfsc	3972,0,c	;volatile
 25831  00A5B8  D7FE               	goto	l3510
 25832                           
 25833                           ;I2C.c: 131: return nACK;
 25834  00A5BA  0101               	movlb	1	; () banked
 25835  00A5BC  5120               	movf	_nACK& (0+255),w,b
 25836                           
 25837                           ; BSR set to: 1
 25838  00A5BE  0012               	return		;funcret
 25839  00A5C0                     __end_of_i2c_waitACK:
 25840                           	opt callstack 0
 25841                           
 25842 ;; *************** function _TMR5_StopTimer *****************
 25843 ;; Defined at:
 25844 ;;		line 104 in file "mcc_generated_files/tmr5.c"
 25845 ;; Parameters:    Size  Location     Type
 25846 ;;		None
 25847 ;; Auto vars:     Size  Location     Type
 25848 ;;		None
 25849 ;; Return value:  Size  Location     Type
 25850 ;;                  1    wreg      void 
 25851 ;; Registers used:
 25852 ;;		None
 25853 ;; Tracked objects:
 25854 ;;		On entry : 0/0
 25855 ;;		On exit  : 0/0
 25856 ;;		Unchanged: 0/0
 25857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25862 ;;Total ram usage:        0 bytes
 25863 ;; Hardware stack levels used:    1
 25864 ;; Hardware stack levels required when called:    7
 25865 ;; This function calls:
 25866 ;;		Nothing
 25867 ;; This function is called by:
 25868 ;;		_sinGenStart
 25869 ;; This function uses a non-reentrant model
 25870 ;;
 25871                           
 25872                           	psect	text134
 25873  00A8B2                     __ptext134:
 25874                           	opt callstack 0
 25875  00A8B2                     _TMR5_StopTimer:
 25876                           	opt callstack 20
 25877                           
 25878                           ;tmr5.c: 107: T5CONbits.TMR5ON = 0;
 25879                           
 25880                           ; BSR set to: 1
 25881                           ;incstack = 0
 25882  00A8B2  010F               	movlb	15	; () banked
 25883  00A8B4  914E               	bcf	78,0,b	;volatile
 25884                           
 25885                           ; BSR set to: 15
 25886  00A8B6  0012               	return		;funcret
 25887  00A8B8                     __end_of_TMR5_StopTimer:
 25888                           	opt callstack 0
 25889                           
 25890 ;; *************** function _TMR5_StartTimer *****************
 25891 ;; Defined at:
 25892 ;;		line 97 in file "mcc_generated_files/tmr5.c"
 25893 ;; Parameters:    Size  Location     Type
 25894 ;;		None
 25895 ;; Auto vars:     Size  Location     Type
 25896 ;;		None
 25897 ;; Return value:  Size  Location     Type
 25898 ;;                  1    wreg      void 
 25899 ;; Registers used:
 25900 ;;		None
 25901 ;; Tracked objects:
 25902 ;;		On entry : 0/0
 25903 ;;		On exit  : 0/0
 25904 ;;		Unchanged: 0/0
 25905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25910 ;;Total ram usage:        0 bytes
 25911 ;; Hardware stack levels used:    1
 25912 ;; Hardware stack levels required when called:    7
 25913 ;; This function calls:
 25914 ;;		Nothing
 25915 ;; This function is called by:
 25916 ;;		_main
 25917 ;;		_sinGenStart
 25918 ;; This function uses a non-reentrant model
 25919 ;;
 25920                           
 25921                           	psect	text135
 25922  00A8B8                     __ptext135:
 25923                           	opt callstack 0
 25924  00A8B8                     _TMR5_StartTimer:
 25925                           	opt callstack 20
 25926                           
 25927                           ;tmr5.c: 100: T5CONbits.TMR5ON = 1;
 25928                           
 25929                           ; BSR set to: 15
 25930                           ;incstack = 0
 25931  00A8B8  010F               	movlb	15	; () banked
 25932  00A8BA  814E               	bsf	78,0,b	;volatile
 25933                           
 25934                           ; BSR set to: 15
 25935  00A8BC  0012               	return		;funcret
 25936  00A8BE                     __end_of_TMR5_StartTimer:
 25937                           	opt callstack 0
 25938                           
 25939 ;; *************** function _TMR3_StopTimer *****************
 25940 ;; Defined at:
 25941 ;;		line 101 in file "mcc_generated_files/tmr3.c"
 25942 ;; Parameters:    Size  Location     Type
 25943 ;;		None
 25944 ;; Auto vars:     Size  Location     Type
 25945 ;;		None
 25946 ;; Return value:  Size  Location     Type
 25947 ;;                  1    wreg      void 
 25948 ;; Registers used:
 25949 ;;		None
 25950 ;; Tracked objects:
 25951 ;;		On entry : 0/0
 25952 ;;		On exit  : 0/0
 25953 ;;		Unchanged: 0/0
 25954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25959 ;;Total ram usage:        0 bytes
 25960 ;; Hardware stack levels used:    1
 25961 ;; Hardware stack levels required when called:    7
 25962 ;; This function calls:
 25963 ;;		Nothing
 25964 ;; This function is called by:
 25965 ;;		_sinGenStart
 25966 ;;		_i2c_sclStop
 25967 ;; This function uses a non-reentrant model
 25968 ;;
 25969                           
 25970                           	psect	text136
 25971  00A8C8                     __ptext136:
 25972                           	opt callstack 0
 25973  00A8C8                     _TMR3_StopTimer:
 25974                           	opt callstack 20
 25975                           
 25976                           ;tmr3.c: 104: T3CONbits.TMR3ON = 0;
 25977                           
 25978                           ; BSR set to: 15
 25979                           ;incstack = 0
 25980  00A8C8  90B1               	bcf	4017,0,c	;volatile
 25981  00A8CA  0012               	return		;funcret
 25982  00A8CC                     __end_of_TMR3_StopTimer:
 25983                           	opt callstack 0
 25984                           
 25985 ;; *************** function _TMR3_StartTimer *****************
 25986 ;; Defined at:
 25987 ;;		line 95 in file "mcc_generated_files/tmr3.c"
 25988 ;; Parameters:    Size  Location     Type
 25989 ;;		None
 25990 ;; Auto vars:     Size  Location     Type
 25991 ;;		None
 25992 ;; Return value:  Size  Location     Type
 25993 ;;                  1    wreg      void 
 25994 ;; Registers used:
 25995 ;;		None
 25996 ;; Tracked objects:
 25997 ;;		On entry : 0/0
 25998 ;;		On exit  : 0/0
 25999 ;;		Unchanged: 0/0
 26000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26005 ;;Total ram usage:        0 bytes
 26006 ;; Hardware stack levels used:    1
 26007 ;; Hardware stack levels required when called:    7
 26008 ;; This function calls:
 26009 ;;		Nothing
 26010 ;; This function is called by:
 26011 ;;		_sinGenStart
 26012 ;;		_i2c_sclStart
 26013 ;; This function uses a non-reentrant model
 26014 ;;
 26015                           
 26016                           	psect	text137
 26017  00A8CC                     __ptext137:
 26018                           	opt callstack 0
 26019  00A8CC                     _TMR3_StartTimer:
 26020                           	opt callstack 20
 26021                           
 26022                           ;tmr3.c: 98: T3CONbits.TMR3ON = 1;
 26023                           
 26024                           ;incstack = 0
 26025  00A8CC  80B1               	bsf	4017,0,c	;volatile
 26026  00A8CE  0012               	return		;funcret
 26027  00A8D0                     __end_of_TMR3_StartTimer:
 26028                           	opt callstack 0
 26029                           
 26030 ;; *************** function _averageMeasure *****************
 26031 ;; Defined at:
 26032 ;;		line 435 in file "acuadori.c"
 26033 ;; Parameters:    Size  Location     Type
 26034 ;;		None
 26035 ;; Auto vars:     Size  Location     Type
 26036 ;;  i               2   20[BANK0 ] unsigned int 
 26037 ;;  value           3   17[BANK0 ] unsigned um
 26038 ;; Return value:  Size  Location     Type
 26039 ;;                  2   10[BANK0 ] unsigned int 
 26040 ;; Registers used:
 26041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26042 ;; Tracked objects:
 26043 ;;		On entry : 0/0
 26044 ;;		On exit  : 0/0
 26045 ;;		Unchanged: 0/0
 26046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26047 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26048 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26049 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26050 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26051 ;;Total ram usage:       12 bytes
 26052 ;; Hardware stack levels used:    1
 26053 ;; Hardware stack levels required when called:    8
 26054 ;; This function calls:
 26055 ;;		___ltdiv
 26056 ;; This function is called by:
 26057 ;;		_impedenceAcquisition
 26058 ;; This function uses a non-reentrant model
 26059 ;;
 26060                           
 26061                           	psect	text138
 26062  008314                     __ptext138:
 26063                           	opt callstack 0
 26064  008314                     _averageMeasure:
 26065                           	opt callstack 20
 26066                           
 26067                           ;acuadori.c: 436: uint24_t value = 0;
 26068                           
 26069                           ;incstack = 0
 26070  008314  0E00               	movlw	0
 26071  008316  0100               	movlb	0	; () banked
 26072  008318  6F71               	movwf	averageMeasure@value& (0+255),b
 26073  00831A  0E00               	movlw	0
 26074  00831C  6F72               	movwf	(averageMeasure@value+1)& (0+255),b
 26075  00831E  0E00               	movlw	0
 26076  008320  6F73               	movwf	(averageMeasure@value+2)& (0+255),b
 26077                           
 26078                           ;acuadori.c: 437: for(uint16_t i=0; i<(200); i++){
 26079  008322  0E00               	movlw	0
 26080  008324  6F75               	movwf	(averageMeasure@i+1)& (0+255),b
 26081  008326  0E00               	movlw	0
 26082  008328  6F74               	movwf	averageMeasure@i& (0+255),b
 26083  00832A                     l16288:
 26084                           
 26085                           ; BSR set to: 0
 26086                           ;acuadori.c: 438: value += capValues[i];
 26087  00832A  90D8               	bcf	status,0,c
 26088  00832C  3574               	rlcf	averageMeasure@i& (0+255),w,b
 26089  00832E  6ED9               	movwf	fsr2l,c
 26090  008330  3575               	rlcf	(averageMeasure@i+1)& (0+255),w,b
 26091  008332  6EDA               	movwf	fsr2h,c
 26092  008334  0E28               	movlw	low _capValues
 26093  008336  26D9               	addwf	fsr2l,f,c
 26094  008338  0E05               	movlw	high _capValues
 26095  00833A  22DA               	addwfc	fsr2h,f,c
 26096  00833C  CFDE F06C          	movff	postinc2,??_averageMeasure
 26097  008340  CFDD F06D          	movff	postdec2,??_averageMeasure+1
 26098  008344  C06C  F06E         	movff	??_averageMeasure,??_averageMeasure+2
 26099  008348  C06D  F06F         	movff	??_averageMeasure+1,??_averageMeasure+3
 26100  00834C  6B70               	clrf	(??_averageMeasure+4)& (0+255),b
 26101  00834E  516E               	movf	(??_averageMeasure+2)& (0+255),w,b
 26102  008350  2771               	addwf	averageMeasure@value& (0+255),f,b
 26103  008352  516F               	movf	(??_averageMeasure+3)& (0+255),w,b
 26104  008354  2372               	addwfc	(averageMeasure@value+1)& (0+255),f,b
 26105  008356  5170               	movf	(??_averageMeasure+4)& (0+255),w,b
 26106  008358  2373               	addwfc	(averageMeasure@value+2)& (0+255),f,b
 26107                           
 26108                           ; BSR set to: 0
 26109  00835A  4B74               	infsnz	averageMeasure@i& (0+255),f,b
 26110  00835C  2B75               	incf	(averageMeasure@i+1)& (0+255),f,b
 26111                           
 26112                           ; BSR set to: 0
 26113  00835E  5175               	movf	(averageMeasure@i+1)& (0+255),w,b
 26114  008360  E104               	bnz	u16950
 26115  008362  0EC8               	movlw	200
 26116  008364  5D74               	subwf	averageMeasure@i& (0+255),w,b
 26117  008366  A0D8               	btfss	status,0,c
 26118  008368  D7E0               	goto	l16288
 26119  00836A                     u16950:
 26120                           
 26121                           ; BSR set to: 0
 26122                           ;acuadori.c: 439: };acuadori.c: 440: value/= 200;
 26123  00836A  C071  F060         	movff	averageMeasure@value,___ltdiv@dividend
 26124  00836E  C072  F061         	movff	averageMeasure@value+1,___ltdiv@dividend+1
 26125  008372  C073  F062         	movff	averageMeasure@value+2,___ltdiv@dividend+2
 26126  008376  0EC8               	movlw	200
 26127  008378  6F63               	movwf	___ltdiv@divisor& (0+255),b
 26128  00837A  0E00               	movlw	0
 26129  00837C  6F64               	movwf	(___ltdiv@divisor+1)& (0+255),b
 26130  00837E  0E00               	movlw	0
 26131  008380  6F65               	movwf	(___ltdiv@divisor+2)& (0+255),b
 26132  008382  ECEA  F045         	call	___ltdiv	;wreg free
 26133  008386  C060  F071         	movff	?___ltdiv,averageMeasure@value
 26134  00838A  C061  F072         	movff	?___ltdiv+1,averageMeasure@value+1
 26135  00838E  C062  F073         	movff	?___ltdiv+2,averageMeasure@value+2
 26136                           
 26137                           ;acuadori.c: 441: return value;
 26138  008392  C071  F06A         	movff	averageMeasure@value,?_averageMeasure
 26139  008396  C072  F06B         	movff	averageMeasure@value+1,?_averageMeasure+1
 26140  00839A  0012               	return		;funcret
 26141  00839C                     __end_of_averageMeasure:
 26142                           	opt callstack 0
 26143                           
 26144 ;; *************** function ___ltdiv *****************
 26145 ;; Defined at:
 26146 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ltdiv.c"
 26147 ;; Parameters:    Size  Location     Type
 26148 ;;  dividend        3    0[BANK0 ] unsigned um
 26149 ;;  divisor         3    3[BANK0 ] unsigned um
 26150 ;; Auto vars:     Size  Location     Type
 26151 ;;  quotient        3    6[BANK0 ] unsigned um
 26152 ;;  counter         1    9[BANK0 ] unsigned char 
 26153 ;; Return value:  Size  Location     Type
 26154 ;;                  3    0[BANK0 ] unsigned um
 26155 ;; Registers used:
 26156 ;;		wreg, status,2, status,0
 26157 ;; Tracked objects:
 26158 ;;		On entry : 0/0
 26159 ;;		On exit  : 0/0
 26160 ;;		Unchanged: 0/0
 26161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26162 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26163 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26165 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26166 ;;Total ram usage:       10 bytes
 26167 ;; Hardware stack levels used:    1
 26168 ;; Hardware stack levels required when called:    7
 26169 ;; This function calls:
 26170 ;;		Nothing
 26171 ;; This function is called by:
 26172 ;;		_GPIOAverageRead
 26173 ;;		_averageMeasure
 26174 ;; This function uses a non-reentrant model
 26175 ;;
 26176                           
 26177                           	psect	text139
 26178  008BD4                     __ptext139:
 26179                           	opt callstack 0
 26180  008BD4                     ___ltdiv:
 26181                           	opt callstack 20
 26182                           
 26183                           ;incstack = 0
 26184  008BD4  0E00               	movlw	0
 26185  008BD6  0100               	movlb	0	; () banked
 26186  008BD8  6F66               	movwf	___ltdiv@quotient& (0+255),b
 26187  008BDA  0E00               	movlw	0
 26188  008BDC  6F67               	movwf	(___ltdiv@quotient+1)& (0+255),b
 26189  008BDE  0E00               	movlw	0
 26190  008BE0  6F68               	movwf	(___ltdiv@quotient+2)& (0+255),b
 26191                           
 26192                           ; BSR set to: 0
 26193  008BE2  5163               	movf	___ltdiv@divisor& (0+255),w,b
 26194  008BE4  1164               	iorwf	(___ltdiv@divisor+1)& (0+255),w,b
 26195  008BE6  1165               	iorwf	(___ltdiv@divisor+2)& (0+255),w,b
 26196  008BE8  B4D8               	btfsc	status,2,c
 26197  008BEA  D023               	goto	l3997
 26198                           
 26199                           ; BSR set to: 0
 26200  008BEC  0E01               	movlw	1
 26201  008BEE  6F69               	movwf	___ltdiv@counter& (0+255),b
 26202  008BF0  D005               	goto	l15208
 26203  008BF2                     l15206:
 26204                           
 26205                           ; BSR set to: 0
 26206  008BF2  90D8               	bcf	status,0,c
 26207  008BF4  3763               	rlcf	___ltdiv@divisor& (0+255),f,b
 26208  008BF6  3764               	rlcf	(___ltdiv@divisor+1)& (0+255),f,b
 26209  008BF8  3765               	rlcf	(___ltdiv@divisor+2)& (0+255),f,b
 26210  008BFA  2B69               	incf	___ltdiv@counter& (0+255),f,b
 26211  008BFC                     l15208:
 26212                           
 26213                           ; BSR set to: 0
 26214  008BFC  AF65               	btfss	(___ltdiv@divisor+2)& (0+255),7,b
 26215  008BFE  D7F9               	goto	l15206
 26216  008C00                     u15580:
 26217                           
 26218                           ; BSR set to: 0
 26219  008C00  90D8               	bcf	status,0,c
 26220  008C02  3766               	rlcf	___ltdiv@quotient& (0+255),f,b
 26221  008C04  3767               	rlcf	(___ltdiv@quotient+1)& (0+255),f,b
 26222  008C06  3768               	rlcf	(___ltdiv@quotient+2)& (0+255),f,b
 26223                           
 26224                           ; BSR set to: 0
 26225  008C08  5163               	movf	___ltdiv@divisor& (0+255),w,b
 26226  008C0A  5D60               	subwf	___ltdiv@dividend& (0+255),w,b
 26227  008C0C  5164               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 26228  008C0E  5961               	subwfb	(___ltdiv@dividend+1)& (0+255),w,b
 26229  008C10  5165               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 26230  008C12  5962               	subwfb	(___ltdiv@dividend+2)& (0+255),w,b
 26231  008C14  A0D8               	btfss	status,0,c
 26232  008C16  D007               	goto	l4002
 26233                           
 26234                           ; BSR set to: 0
 26235  008C18  5163               	movf	___ltdiv@divisor& (0+255),w,b
 26236  008C1A  5F60               	subwf	___ltdiv@dividend& (0+255),f,b
 26237  008C1C  5164               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 26238  008C1E  5B61               	subwfb	(___ltdiv@dividend+1)& (0+255),f,b
 26239  008C20  5165               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 26240  008C22  5B62               	subwfb	(___ltdiv@dividend+2)& (0+255),f,b
 26241                           
 26242                           ; BSR set to: 0
 26243  008C24  8166               	bsf	___ltdiv@quotient& (0+255),0,b
 26244  008C26                     l4002:
 26245                           
 26246                           ; BSR set to: 0
 26247  008C26  90D8               	bcf	status,0,c
 26248  008C28  3365               	rrcf	(___ltdiv@divisor+2)& (0+255),f,b
 26249  008C2A  3364               	rrcf	(___ltdiv@divisor+1)& (0+255),f,b
 26250  008C2C  3363               	rrcf	___ltdiv@divisor& (0+255),f,b
 26251                           
 26252                           ; BSR set to: 0
 26253  008C2E  2F69               	decfsz	___ltdiv@counter& (0+255),f,b
 26254  008C30  D7E7               	goto	u15580
 26255  008C32                     l3997:
 26256                           
 26257                           ; BSR set to: 0
 26258  008C32  C066  F060         	movff	___ltdiv@quotient,?___ltdiv
 26259  008C36  C067  F061         	movff	___ltdiv@quotient+1,?___ltdiv+1
 26260  008C3A  C068  F062         	movff	___ltdiv@quotient+2,?___ltdiv+2
 26261                           
 26262                           ; BSR set to: 0
 26263  008C3E  0012               	return		;funcret
 26264  008C40                     __end_of___ltdiv:
 26265                           	opt callstack 0
 26266                           
 26267 ;; *************** function _adaptString *****************
 26268 ;; Defined at:
 26269 ;;		line 376 in file "rn2483APP.c"
 26270 ;; Parameters:    Size  Location     Type
 26271 ;;  string          2    0[BANK0 ] PTR unsigned char 
 26272 ;;		 -> stringValue(5), 
 26273 ;;  length          1    2[BANK0 ] unsigned char 
 26274 ;; Auto vars:     Size  Location     Type
 26275 ;;  i               1    7[BANK0 ] unsigned char 
 26276 ;;  deleteElem      1    6[BANK0 ] unsigned char 
 26277 ;;  flag            1    5[BANK0 ] unsigned char 
 26278 ;; Return value:  Size  Location     Type
 26279 ;;                  1    wreg      unsigned char 
 26280 ;; Registers used:
 26281 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 26282 ;; Tracked objects:
 26283 ;;		On entry : 0/0
 26284 ;;		On exit  : 0/0
 26285 ;;		Unchanged: 0/0
 26286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26287 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26288 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26289 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26290 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26291 ;;Total ram usage:        8 bytes
 26292 ;; Hardware stack levels used:    1
 26293 ;; Hardware stack levels required when called:    7
 26294 ;; This function calls:
 26295 ;;		Nothing
 26296 ;; This function is called by:
 26297 ;;		_tempSensAcquisition
 26298 ;;		_lightSensAcquisition
 26299 ;;		_leafSensAcquisition
 26300 ;;		_impedenceAcquisition
 26301 ;; This function uses a non-reentrant model
 26302 ;;
 26303                           
 26304                           	psect	text140
 26305  008916                     __ptext140:
 26306                           	opt callstack 0
 26307  008916                     _adaptString:
 26308                           	opt callstack 21
 26309                           
 26310                           ;rn2483APP.c: 377: uint8_t deleteElem = 0;
 26311                           
 26312                           ; BSR set to: 0
 26313                           ;incstack = 0
 26314  008916  0E00               	movlw	0
 26315  008918  0100               	movlb	0	; () banked
 26316  00891A  6F66               	movwf	adaptString@deleteElem& (0+255),b
 26317                           
 26318                           ;rn2483APP.c: 378: bool flag = 0;
 26319  00891C  0E00               	movlw	0
 26320  00891E  6F65               	movwf	adaptString@flag& (0+255),b
 26321                           
 26322                           ;rn2483APP.c: 380: for(uint8_t i = 0; i<length; i++){
 26323  008920  0E00               	movlw	0
 26324  008922  6F67               	movwf	adaptString@i& (0+255),b
 26325  008924  D027               	goto	l16144
 26326  008926                     l16132:
 26327                           
 26328                           ; BSR set to: 0
 26329                           ;rn2483APP.c: 381: if(string[i]== 0x30 && !flag){
 26330  008926  5167               	movf	adaptString@i& (0+255),w,b
 26331  008928  2560               	addwf	adaptString@string& (0+255),w,b
 26332  00892A  6ED9               	movwf	fsr2l,c
 26333  00892C  0E00               	movlw	0
 26334  00892E  2161               	addwfc	(adaptString@string+1)& (0+255),w,b
 26335  008930  6EDA               	movwf	fsr2h,c
 26336  008932  0E30               	movlw	48
 26337  008934  18DE               	xorwf	postinc2,w,c
 26338  008936  A4D8               	btfss	status,2,c
 26339  008938  D005               	goto	l16138
 26340                           
 26341                           ; BSR set to: 0
 26342  00893A  5165               	movf	adaptString@flag& (0+255),w,b
 26343  00893C  A4D8               	btfss	status,2,c
 26344  00893E  D002               	goto	l16138
 26345                           
 26346                           ; BSR set to: 0
 26347                           ;rn2483APP.c: 382: deleteElem++;
 26348  008940  2B66               	incf	adaptString@deleteElem& (0+255),f,b
 26349                           
 26350                           ;rn2483APP.c: 383: }
 26351  008942  D017               	goto	l16142
 26352  008944                     l16138:
 26353                           
 26354                           ; BSR set to: 0
 26355                           ;rn2483APP.c: 384: else{;rn2483APP.c: 385: string[i-deleteElem] = string[i];
 26356  008944  5167               	movf	adaptString@i& (0+255),w,b
 26357  008946  2560               	addwf	adaptString@string& (0+255),w,b
 26358  008948  6ED9               	movwf	fsr2l,c
 26359  00894A  0E00               	movlw	0
 26360  00894C  2161               	addwfc	(adaptString@string+1)& (0+255),w,b
 26361  00894E  6EDA               	movwf	fsr2h,c
 26362  008950  5167               	movf	adaptString@i& (0+255),w,b
 26363  008952  2560               	addwf	adaptString@string& (0+255),w,b
 26364  008954  6F63               	movwf	??_adaptString& (0+255),b
 26365  008956  0E00               	movlw	0
 26366  008958  2161               	addwfc	(adaptString@string+1)& (0+255),w,b
 26367  00895A  6F64               	movwf	(??_adaptString+1)& (0+255),b
 26368  00895C  5166               	movf	adaptString@deleteElem& (0+255),w,b
 26369  00895E  5D63               	subwf	??_adaptString& (0+255),w,b
 26370  008960  6EE9               	movwf	fsr0l,c
 26371  008962  5164               	movf	(??_adaptString+1)& (0+255),w,b
 26372  008964  A0D8               	btfss	status,0,c
 26373  008966  0564               	decf	(??_adaptString+1)& (0+255),w,b
 26374  008968  6EEA               	movwf	fsr0h,c
 26375  00896A  CFDF FFEF          	movff	indf2,indf0
 26376                           
 26377                           ; BSR set to: 0
 26378                           ;rn2483APP.c: 386: flag=1;
 26379  00896E  0E01               	movlw	1
 26380  008970  6F65               	movwf	adaptString@flag& (0+255),b
 26381  008972                     l16142:
 26382                           
 26383                           ; BSR set to: 0
 26384  008972  2B67               	incf	adaptString@i& (0+255),f,b
 26385  008974                     l16144:
 26386                           
 26387                           ; BSR set to: 0
 26388  008974  5162               	movf	adaptString@length& (0+255),w,b
 26389  008976  5D67               	subwf	adaptString@i& (0+255),w,b
 26390  008978  A0D8               	btfss	status,0,c
 26391  00897A  D7D5               	goto	l16132
 26392                           
 26393                           ; BSR set to: 0
 26394                           ;rn2483APP.c: 387: };rn2483APP.c: 388: };rn2483APP.c: 390: if (deleteElem == length){
 26395  00897C  5162               	movf	adaptString@length& (0+255),w,b
 26396  00897E  1966               	xorwf	adaptString@deleteElem& (0+255),w,b
 26397  008980  A4D8               	btfss	status,2,c
 26398  008982  D002               	goto	l16152
 26399                           
 26400                           ; BSR set to: 0
 26401                           ;rn2483APP.c: 391: return 1;
 26402  008984  0E01               	movlw	1
 26403  008986  0012               	return	
 26404  008988                     l16152:
 26405                           
 26406                           ; BSR set to: 0
 26407                           ;rn2483APP.c: 392: };rn2483APP.c: 393: return length-deleteElem;
 26408  008988  5166               	movf	adaptString@deleteElem& (0+255),w,b
 26409  00898A  5D62               	subwf	adaptString@length& (0+255),w,b
 26410                           
 26411                           ; BSR set to: 0
 26412  00898C  0012               	return		;funcret
 26413  00898E                     __end_of_adaptString:
 26414                           	opt callstack 0
 26415                           
 26416 ;; *************** function _LORAWAN_SetUplinkCounter *****************
 26417 ;; Defined at:
 26418 ;;		line 486 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26419 ;; Parameters:    Size  Location     Type
 26420 ;;  ctr             4    0[BANK0 ] unsigned long 
 26421 ;; Auto vars:     Size  Location     Type
 26422 ;;		None
 26423 ;; Return value:  Size  Location     Type
 26424 ;;                  1    wreg      void 
 26425 ;; Registers used:
 26426 ;;		None
 26427 ;; Tracked objects:
 26428 ;;		On entry : 0/0
 26429 ;;		On exit  : 0/0
 26430 ;;		Unchanged: 0/0
 26431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26432 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26435 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26436 ;;Total ram usage:        4 bytes
 26437 ;; Hardware stack levels used:    1
 26438 ;; Hardware stack levels required when called:    7
 26439 ;; This function calls:
 26440 ;;		Nothing
 26441 ;; This function is called by:
 26442 ;;		_acuadoriApp
 26443 ;; This function uses a non-reentrant model
 26444 ;;
 26445                           
 26446                           	psect	text141
 26447  00A68A                     __ptext141:
 26448                           	opt callstack 0
 26449  00A68A                     _LORAWAN_SetUplinkCounter:
 26450                           	opt callstack 22
 26451                           
 26452                           ;lorawan.c: 488: loRa.fCntUp.value = ctr;
 26453                           
 26454                           ; BSR set to: 0
 26455                           ;incstack = 0
 26456  00A68A  C060  F20B         	movff	LORAWAN_SetUplinkCounter@ctr,_loRa+6
 26457  00A68E  C061  F20C         	movff	LORAWAN_SetUplinkCounter@ctr+1,_loRa+7
 26458  00A692  C062  F20D         	movff	LORAWAN_SetUplinkCounter@ctr+2,_loRa+8
 26459  00A696  C063  F20E         	movff	LORAWAN_SetUplinkCounter@ctr+3,_loRa+9
 26460  00A69A  0012               	return		;funcret
 26461  00A69C                     __end_of_LORAWAN_SetUplinkCounter:
 26462                           	opt callstack 0
 26463                           
 26464 ;; *************** function _LORAWAN_GetUplinkCounter *****************
 26465 ;; Defined at:
 26466 ;;		line 491 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26467 ;; Parameters:    Size  Location     Type
 26468 ;;		None
 26469 ;; Auto vars:     Size  Location     Type
 26470 ;;		None
 26471 ;; Return value:  Size  Location     Type
 26472 ;;                  4    0[BANK0 ] unsigned long 
 26473 ;; Registers used:
 26474 ;;		None
 26475 ;; Tracked objects:
 26476 ;;		On entry : 0/0
 26477 ;;		On exit  : 0/0
 26478 ;;		Unchanged: 0/0
 26479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26480 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26483 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26484 ;;Total ram usage:        4 bytes
 26485 ;; Hardware stack levels used:    1
 26486 ;; Hardware stack levels required when called:    7
 26487 ;; This function calls:
 26488 ;;		Nothing
 26489 ;; This function is called by:
 26490 ;;		_acuadoriApp
 26491 ;; This function uses a non-reentrant model
 26492 ;;
 26493                           
 26494                           	psect	text142
 26495  00A69C                     __ptext142:
 26496                           	opt callstack 0
 26497  00A69C                     _LORAWAN_GetUplinkCounter:
 26498                           	opt callstack 22
 26499                           
 26500                           ;lorawan.c: 493: return loRa.fCntUp.value;
 26501                           
 26502                           ;incstack = 0
 26503  00A69C  C20B  F060         	movff	_loRa+6,?_LORAWAN_GetUplinkCounter
 26504  00A6A0  C20C  F061         	movff	_loRa+7,?_LORAWAN_GetUplinkCounter+1
 26505  00A6A4  C20D  F062         	movff	_loRa+8,?_LORAWAN_GetUplinkCounter+2
 26506  00A6A8  C20E  F063         	movff	_loRa+9,?_LORAWAN_GetUplinkCounter+3
 26507  00A6AC  0012               	return		;funcret
 26508  00A6AE                     __end_of_LORAWAN_GetUplinkCounter:
 26509                           	opt callstack 0
 26510                           
 26511 ;; *************** function _SYSTEM_Initialize *****************
 26512 ;; Defined at:
 26513 ;;		line 50 in file "mcc_generated_files/mcc.c"
 26514 ;; Parameters:    Size  Location     Type
 26515 ;;		None
 26516 ;; Auto vars:     Size  Location     Type
 26517 ;;		None
 26518 ;; Return value:  Size  Location     Type
 26519 ;;                  1    wreg      void 
 26520 ;; Registers used:
 26521 ;;		wreg, status,2, status,0, cstack
 26522 ;; Tracked objects:
 26523 ;;		On entry : 0/0
 26524 ;;		On exit  : 0/0
 26525 ;;		Unchanged: 0/0
 26526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26531 ;;Total ram usage:        0 bytes
 26532 ;; Hardware stack levels used:    1
 26533 ;; Hardware stack levels required when called:   10
 26534 ;; This function calls:
 26535 ;;		_ADC_Initialize
 26536 ;;		_EUSART2_Initialize
 26537 ;;		_EXT_INT_Initialize
 26538 ;;		_INTERRUPT_Initialize
 26539 ;;		_LORAWAN_PlatformInit
 26540 ;;		_OSCILLATOR_Initialize
 26541 ;;		_PIN_MANAGER_Initialize
 26542 ;;		_SPI2_Initialize
 26543 ;;		_TMR1_Initialize
 26544 ;;		_TMR3_Initialize
 26545 ;;		_TMR5_Initialize
 26546 ;; This function is called by:
 26547 ;;		_main
 26548 ;; This function uses a non-reentrant model
 26549 ;;
 26550                           
 26551                           	psect	text143
 26552  009EAE                     __ptext143:
 26553                           	opt callstack 0
 26554  009EAE                     _SYSTEM_Initialize:
 26555                           	opt callstack 20
 26556                           
 26557                           ;mcc.c: 53: INTERRUPT_Initialize();
 26558                           
 26559                           ;incstack = 0
 26560  009EAE  EC68  F054         	call	_INTERRUPT_Initialize	;wreg free
 26561                           
 26562                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 26563  009EB2  ECAB  F049         	call	_PIN_MANAGER_Initialize	;wreg free
 26564                           
 26565                           ;mcc.c: 55: OSCILLATOR_Initialize();
 26566  009EB6  ECB4  F053         	call	_OSCILLATOR_Initialize	;wreg free
 26567                           
 26568                           ;mcc.c: 56: SPI2_Initialize();
 26569  009EBA  ECAD  F053         	call	_SPI2_Initialize	;wreg free
 26570                           
 26571                           ;mcc.c: 57: ADC_Initialize();
 26572  009EBE  EC12  F053         	call	_ADC_Initialize	;wreg free
 26573                           
 26574                           ;mcc.c: 58: TMR3_Initialize();
 26575  009EC2  EC3B  F050         	call	_TMR3_Initialize	;wreg free
 26576                           
 26577                           ;mcc.c: 59: TMR5_Initialize();
 26578  009EC6  EC7F  F04E         	call	_TMR5_Initialize	;wreg free
 26579                           
 26580                           ;mcc.c: 60: EXT_INT_Initialize();
 26581  009ECA  EC7B  F050         	call	_EXT_INT_Initialize	;wreg free
 26582                           
 26583                           ;mcc.c: 61: TMR1_Initialize();
 26584  009ECE  EC6E  F04F         	call	_TMR1_Initialize	;wreg free
 26585                           
 26586                           ;mcc.c: 62: EUSART2_Initialize();
 26587  009ED2  EC17  F04C         	call	_EUSART2_Initialize	;wreg free
 26588                           
 26589                           ;mcc.c: 63: LORAWAN_PlatformInit();
 26590  009ED6  EC62  F051         	call	_LORAWAN_PlatformInit	;wreg free
 26591  009EDA  0012               	return		;funcret
 26592  009EDC                     __end_of_SYSTEM_Initialize:
 26593                           	opt callstack 0
 26594                           
 26595 ;; *************** function _TMR5_Initialize *****************
 26596 ;; Defined at:
 26597 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 26598 ;; Parameters:    Size  Location     Type
 26599 ;;		None
 26600 ;; Auto vars:     Size  Location     Type
 26601 ;;		None
 26602 ;; Return value:  Size  Location     Type
 26603 ;;                  1    wreg      void 
 26604 ;; Registers used:
 26605 ;;		wreg, status,2, status,0, cstack
 26606 ;; Tracked objects:
 26607 ;;		On entry : 0/0
 26608 ;;		On exit  : 0/0
 26609 ;;		Unchanged: 0/0
 26610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26615 ;;Total ram usage:        0 bytes
 26616 ;; Hardware stack levels used:    1
 26617 ;; Hardware stack levels required when called:    8
 26618 ;; This function calls:
 26619 ;;		_TMR5_SetInterruptHandler
 26620 ;; This function is called by:
 26621 ;;		_SYSTEM_Initialize
 26622 ;; This function uses a non-reentrant model
 26623 ;;
 26624                           
 26625                           	psect	text144
 26626  009CFE                     __ptext144:
 26627                           	opt callstack 0
 26628  009CFE                     _TMR5_Initialize:
 26629                           	opt callstack 21
 26630                           
 26631                           ;tmr5.c: 71: T5GCON = 0x00;
 26632                           
 26633                           ;incstack = 0
 26634  009CFE  0E00               	movlw	0
 26635  009D00  010F               	movlb	15	; () banked
 26636  009D02  6F4D               	movwf	77,b	;volatile
 26637                           
 26638                           ;tmr5.c: 74: TMR5H = 0xFE;
 26639  009D04  0EFE               	movlw	254
 26640  009D06  6F50               	movwf	80,b	;volatile
 26641                           
 26642                           ;tmr5.c: 77: TMR5L = 0x0C;
 26643  009D08  0E0C               	movlw	12
 26644  009D0A  6F4F               	movwf	79,b	;volatile
 26645                           
 26646                           ; BSR set to: 15
 26647                           ;tmr5.c: 80: timer5ReloadVal=TMR5;
 26648  009D0C  CF4F F1DF          	movff	3919,_timer5ReloadVal	;volatile
 26649  009D10  CF50 F1E0          	movff	3920,_timer5ReloadVal+1	;volatile
 26650                           
 26651                           ; BSR set to: 15
 26652                           ;tmr5.c: 83: PIR5bits.TMR5IF = 0;
 26653  009D14  927E               	bcf	3966,1,c	;volatile
 26654                           
 26655                           ; BSR set to: 15
 26656                           ;tmr5.c: 86: PIE5bits.TMR5IE = 1;
 26657  009D16  827D               	bsf	3965,1,c	;volatile
 26658                           
 26659                           ; BSR set to: 15
 26660                           ;tmr5.c: 88: IPR5bits.TMR5IP = 0;
 26661  009D18  927F               	bcf	3967,1,c	;volatile
 26662                           
 26663                           ; BSR set to: 15
 26664                           ;tmr5.c: 91: TMR5_SetInterruptHandler(TMR5_InterruptTicker);
 26665  009D1A  0E64               	movlw	low _TMR5_InterruptTicker
 26666  009D1C  0100               	movlb	0	; () banked
 26667  009D1E  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 26668  009D20  0EA8               	movlw	high _TMR5_InterruptTicker
 26669  009D22  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 26670  009D24  ECDD  F053         	call	_TMR5_SetInterruptHandler	;wreg free
 26671                           
 26672                           ;tmr5.c: 94: T5CON = 0x35;
 26673  009D28  0E35               	movlw	53
 26674  009D2A  010F               	movlb	15	; () banked
 26675  009D2C  6F4E               	movwf	78,b	;volatile
 26676                           
 26677                           ; BSR set to: 15
 26678  009D2E  0012               	return		;funcret
 26679  009D30                     __end_of_TMR5_Initialize:
 26680                           	opt callstack 0
 26681                           
 26682 ;; *************** function _TMR5_SetInterruptHandler *****************
 26683 ;; Defined at:
 26684 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 26685 ;; Parameters:    Size  Location     Type
 26686 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 26687 ;;		 -> TMR5_InterruptTicker(1), 
 26688 ;; Auto vars:     Size  Location     Type
 26689 ;;		None
 26690 ;; Return value:  Size  Location     Type
 26691 ;;                  1    wreg      void 
 26692 ;; Registers used:
 26693 ;;		wreg, status,2, status,0
 26694 ;; Tracked objects:
 26695 ;;		On entry : 0/0
 26696 ;;		On exit  : 0/0
 26697 ;;		Unchanged: 0/0
 26698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26699 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26702 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26703 ;;Total ram usage:        2 bytes
 26704 ;; Hardware stack levels used:    1
 26705 ;; Hardware stack levels required when called:    7
 26706 ;; This function calls:
 26707 ;;		Nothing
 26708 ;; This function is called by:
 26709 ;;		_TMR5_Initialize
 26710 ;; This function uses a non-reentrant model
 26711 ;;
 26712                           
 26713                           	psect	text145
 26714  00A7BA                     __ptext145:
 26715                           	opt callstack 0
 26716  00A7BA                     _TMR5_SetInterruptHandler:
 26717                           	opt callstack 21
 26718                           
 26719                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
 26720                           
 26721                           ; BSR set to: 15
 26722                           ;incstack = 0
 26723  00A7BA  C060  F1DD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 26724  00A7BE  C061  F1DE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 26725  00A7C2  0012               	return		;funcret
 26726  00A7C4                     __end_of_TMR5_SetInterruptHandler:
 26727                           	opt callstack 0
 26728                           
 26729 ;; *************** function _TMR3_Initialize *****************
 26730 ;; Defined at:
 26731 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 26732 ;; Parameters:    Size  Location     Type
 26733 ;;		None
 26734 ;; Auto vars:     Size  Location     Type
 26735 ;;		None
 26736 ;; Return value:  Size  Location     Type
 26737 ;;                  1    wreg      void 
 26738 ;; Registers used:
 26739 ;;		wreg, status,2, status,0, cstack
 26740 ;; Tracked objects:
 26741 ;;		On entry : 0/0
 26742 ;;		On exit  : 0/0
 26743 ;;		Unchanged: 0/0
 26744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26749 ;;Total ram usage:        0 bytes
 26750 ;; Hardware stack levels used:    1
 26751 ;; Hardware stack levels required when called:    8
 26752 ;; This function calls:
 26753 ;;		_TMR3_SetInterruptHandler
 26754 ;; This function is called by:
 26755 ;;		_SYSTEM_Initialize
 26756 ;;		_enableClockPeripherals
 26757 ;; This function uses a non-reentrant model
 26758 ;;
 26759                           
 26760                           	psect	text146
 26761  00A076                     __ptext146:
 26762                           	opt callstack 0
 26763  00A076                     _TMR3_Initialize:
 26764                           	opt callstack 21
 26765                           
 26766                           ;tmr3.c: 69: T3GCON = 0x00;
 26767                           
 26768                           ;incstack = 0
 26769  00A076  0E00               	movlw	0
 26770  00A078  6EB4               	movwf	4020,c	;volatile
 26771                           
 26772                           ;tmr3.c: 72: TMR3H = 0xFF;
 26773  00A07A  68B3               	setf	4019,c	;volatile
 26774                           
 26775                           ;tmr3.c: 75: TMR3L = 0xC4;
 26776  00A07C  0EC4               	movlw	196
 26777  00A07E  6EB2               	movwf	4018,c	;volatile
 26778                           
 26779                           ;tmr3.c: 78: timer3ReloadVal=TMR3;
 26780  00A080  CFB2 F1E3          	movff	4018,_timer3ReloadVal	;volatile
 26781  00A084  CFB3 F1E4          	movff	4019,_timer3ReloadVal+1	;volatile
 26782                           
 26783                           ;tmr3.c: 81: PIR2bits.TMR3IF = 0;
 26784  00A088  92A1               	bcf	4001,1,c	;volatile
 26785                           
 26786                           ;tmr3.c: 84: PIE2bits.TMR3IE = 1;
 26787  00A08A  82A0               	bsf	4000,1,c	;volatile
 26788                           
 26789                           ;tmr3.c: 86: IPR2bits.TMR3IP = 1;
 26790  00A08C  82A2               	bsf	4002,1,c	;volatile
 26791                           
 26792                           ;tmr3.c: 89: TMR3_SetInterruptHandler(TMR3ISRClock);
 26793  00A08E  0EBE               	movlw	low _TMR3ISRClock
 26794  00A090  0100               	movlb	0	; () banked
 26795  00A092  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 26796  00A094  0EA8               	movlw	high _TMR3ISRClock
 26797  00A096  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 26798  00A098  ECE2  F053         	call	_TMR3_SetInterruptHandler	;wreg free
 26799                           
 26800                           ;tmr3.c: 92: T3CON = 0x10;
 26801  00A09C  0E10               	movlw	16
 26802  00A09E  6EB1               	movwf	4017,c	;volatile
 26803  00A0A0  0012               	return		;funcret
 26804  00A0A2                     __end_of_TMR3_Initialize:
 26805                           	opt callstack 0
 26806                           
 26807 ;; *************** function _TMR3_SetInterruptHandler *****************
 26808 ;; Defined at:
 26809 ;;		line 174 in file "mcc_generated_files/tmr3.c"
 26810 ;; Parameters:    Size  Location     Type
 26811 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 26812 ;;		 -> TMR3ISRClock(1), 
 26813 ;; Auto vars:     Size  Location     Type
 26814 ;;		None
 26815 ;; Return value:  Size  Location     Type
 26816 ;;                  1    wreg      void 
 26817 ;; Registers used:
 26818 ;;		wreg, status,2, status,0
 26819 ;; Tracked objects:
 26820 ;;		On entry : 0/0
 26821 ;;		On exit  : 0/0
 26822 ;;		Unchanged: 0/0
 26823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26824 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26827 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26828 ;;Total ram usage:        2 bytes
 26829 ;; Hardware stack levels used:    1
 26830 ;; Hardware stack levels required when called:    7
 26831 ;; This function calls:
 26832 ;;		Nothing
 26833 ;; This function is called by:
 26834 ;;		_TMR3_Initialize
 26835 ;; This function uses a non-reentrant model
 26836 ;;
 26837                           
 26838                           	psect	text147
 26839  00A7C4                     __ptext147:
 26840                           	opt callstack 0
 26841  00A7C4                     _TMR3_SetInterruptHandler:
 26842                           	opt callstack 21
 26843                           
 26844                           ;tmr3.c: 175: TMR3_InterruptHandler = InterruptHandler;
 26845                           
 26846                           ;incstack = 0
 26847  00A7C4  C060  F1E1         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 26848  00A7C8  C061  F1E2         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 26849  00A7CC  0012               	return		;funcret
 26850  00A7CE                     __end_of_TMR3_SetInterruptHandler:
 26851                           	opt callstack 0
 26852                           
 26853 ;; *************** function _TMR1_Initialize *****************
 26854 ;; Defined at:
 26855 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 26856 ;; Parameters:    Size  Location     Type
 26857 ;;		None
 26858 ;; Auto vars:     Size  Location     Type
 26859 ;;		None
 26860 ;; Return value:  Size  Location     Type
 26861 ;;                  1    wreg      void 
 26862 ;; Registers used:
 26863 ;;		wreg, status,2, status,0, cstack
 26864 ;; Tracked objects:
 26865 ;;		On entry : 0/0
 26866 ;;		On exit  : 0/0
 26867 ;;		Unchanged: 0/0
 26868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26873 ;;Total ram usage:        0 bytes
 26874 ;; Hardware stack levels used:    1
 26875 ;; Hardware stack levels required when called:    8
 26876 ;; This function calls:
 26877 ;;		_TMR1_SetInterruptHandler
 26878 ;; This function is called by:
 26879 ;;		_SYSTEM_Initialize
 26880 ;; This function uses a non-reentrant model
 26881 ;;
 26882                           
 26883                           	psect	text148
 26884  009EDC                     __ptext148:
 26885                           	opt callstack 0
 26886  009EDC                     _TMR1_Initialize:
 26887                           	opt callstack 21
 26888                           
 26889                           ;tmr1.c: 69: T1GCON = 0x00;
 26890                           
 26891                           ;incstack = 0
 26892  009EDC  0E00               	movlw	0
 26893  009EDE  6ECC               	movwf	4044,c	;volatile
 26894                           
 26895                           ;tmr1.c: 72: TMR1H = 0x00;
 26896  009EE0  0E00               	movlw	0
 26897  009EE2  6ECF               	movwf	4047,c	;volatile
 26898                           
 26899                           ;tmr1.c: 75: TMR1L = 0x00;
 26900  009EE4  0E00               	movlw	0
 26901  009EE6  6ECE               	movwf	4046,c	;volatile
 26902                           
 26903                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
 26904  009EE8  CFCE F1E7          	movff	4046,_timer1ReloadVal	;volatile
 26905  009EEC  CFCF F1E8          	movff	4047,_timer1ReloadVal+1	;volatile
 26906                           
 26907                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
 26908  009EF0  909E               	bcf	3998,0,c	;volatile
 26909                           
 26910                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
 26911  009EF2  809D               	bsf	3997,0,c	;volatile
 26912                           
 26913                           ;tmr1.c: 86: IPR1bits.TMR1IP = 0;
 26914  009EF4  909F               	bcf	3999,0,c	;volatile
 26915                           
 26916                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 26917  009EF6  0EFC               	movlw	low _TMR1_DefaultInterruptHandler
 26918  009EF8  0100               	movlb	0	; () banked
 26919  009EFA  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 26920  009EFC  0EA8               	movlw	high _TMR1_DefaultInterruptHandler
 26921  009EFE  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 26922  009F00  ECE7  F053         	call	_TMR1_SetInterruptHandler	;wreg free
 26923                           
 26924                           ;tmr1.c: 92: T1CON = 0x8D;
 26925  009F04  0E8D               	movlw	141
 26926  009F06  6ECD               	movwf	4045,c	;volatile
 26927  009F08  0012               	return		;funcret
 26928  009F0A                     __end_of_TMR1_Initialize:
 26929                           	opt callstack 0
 26930                           
 26931 ;; *************** function _SPI2_Initialize *****************
 26932 ;; Defined at:
 26933 ;;		line 65 in file "mcc_generated_files/spi2.c"
 26934 ;; Parameters:    Size  Location     Type
 26935 ;;		None
 26936 ;; Auto vars:     Size  Location     Type
 26937 ;;		None
 26938 ;; Return value:  Size  Location     Type
 26939 ;;                  1    wreg      void 
 26940 ;; Registers used:
 26941 ;;		wreg, status,2
 26942 ;; Tracked objects:
 26943 ;;		On entry : 0/0
 26944 ;;		On exit  : 0/0
 26945 ;;		Unchanged: 0/0
 26946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26951 ;;Total ram usage:        0 bytes
 26952 ;; Hardware stack levels used:    1
 26953 ;; Hardware stack levels required when called:    7
 26954 ;; This function calls:
 26955 ;;		Nothing
 26956 ;; This function is called by:
 26957 ;;		_SYSTEM_Initialize
 26958 ;; This function uses a non-reentrant model
 26959 ;;
 26960                           
 26961                           	psect	text149
 26962  00A75A                     __ptext149:
 26963                           	opt callstack 0
 26964  00A75A                     _SPI2_Initialize:
 26965                           	opt callstack 22
 26966                           
 26967                           ;spi2.c: 70: SSP2STAT = 0x40;
 26968                           
 26969                           ;incstack = 0
 26970  00A75A  0E40               	movlw	64
 26971  00A75C  6E6D               	movwf	3949,c	;volatile
 26972                           
 26973                           ;spi2.c: 73: SSP2CON1 = 0x20;
 26974  00A75E  0E20               	movlw	32
 26975  00A760  6E6C               	movwf	3948,c	;volatile
 26976                           
 26977                           ;spi2.c: 76: SSP2ADD = 0x00;
 26978  00A762  0E00               	movlw	0
 26979  00A764  6E6E               	movwf	3950,c	;volatile
 26980  00A766  0012               	return		;funcret
 26981  00A768                     __end_of_SPI2_Initialize:
 26982                           	opt callstack 0
 26983                           
 26984 ;; *************** function _PIN_MANAGER_Initialize *****************
 26985 ;; Defined at:
 26986 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 26987 ;; Parameters:    Size  Location     Type
 26988 ;;		None
 26989 ;; Auto vars:     Size  Location     Type
 26990 ;;		None
 26991 ;; Return value:  Size  Location     Type
 26992 ;;                  1    wreg      void 
 26993 ;; Registers used:
 26994 ;;		wreg, status,2, status,0, cstack
 26995 ;; Tracked objects:
 26996 ;;		On entry : 0/0
 26997 ;;		On exit  : 0/0
 26998 ;;		Unchanged: 0/0
 26999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27004 ;;Total ram usage:        0 bytes
 27005 ;; Hardware stack levels used:    1
 27006 ;; Hardware stack levels required when called:    8
 27007 ;; This function calls:
 27008 ;;		_IOCB4_SetInterruptHandler
 27009 ;; This function is called by:
 27010 ;;		_SYSTEM_Initialize
 27011 ;; This function uses a non-reentrant model
 27012 ;;
 27013                           
 27014                           	psect	text150
 27015  009356                     __ptext150:
 27016                           	opt callstack 0
 27017  009356                     _PIN_MANAGER_Initialize:
 27018                           	opt callstack 21
 27019                           
 27020                           ;pin_manager.c: 62: LATE = 0x00;
 27021                           
 27022                           ;incstack = 0
 27023  009356  0E00               	movlw	0
 27024  009358  6E8D               	movwf	3981,c	;volatile
 27025                           
 27026                           ;pin_manager.c: 63: LATD = 0x00;
 27027  00935A  0E00               	movlw	0
 27028  00935C  6E8C               	movwf	3980,c	;volatile
 27029                           
 27030                           ;pin_manager.c: 64: LATA = 0x00;
 27031  00935E  0E00               	movlw	0
 27032  009360  6E89               	movwf	3977,c	;volatile
 27033                           
 27034                           ;pin_manager.c: 65: LATB = 0x00;
 27035  009362  0E00               	movlw	0
 27036  009364  6E8A               	movwf	3978,c	;volatile
 27037                           
 27038                           ;pin_manager.c: 66: LATC = 0x00;
 27039  009366  0E00               	movlw	0
 27040  009368  6E8B               	movwf	3979,c	;volatile
 27041                           
 27042                           ;pin_manager.c: 71: TRISE = 0x07;
 27043  00936A  0E07               	movlw	7
 27044  00936C  6E96               	movwf	3990,c	;volatile
 27045                           
 27046                           ;pin_manager.c: 72: TRISA = 0xFF;
 27047  00936E  6892               	setf	3986,c	;volatile
 27048                           
 27049                           ;pin_manager.c: 73: TRISB = 0xFF;
 27050  009370  6893               	setf	3987,c	;volatile
 27051                           
 27052                           ;pin_manager.c: 74: TRISC = 0xFE;
 27053  009372  0EFE               	movlw	254
 27054  009374  6E94               	movwf	3988,c	;volatile
 27055                           
 27056                           ;pin_manager.c: 75: TRISD = 0xE6;
 27057  009376  0EE6               	movlw	230
 27058  009378  6E95               	movwf	3989,c	;volatile
 27059                           
 27060                           ;pin_manager.c: 80: ANSELD = 0xE4;
 27061  00937A  0EE4               	movlw	228
 27062  00937C  010F               	movlb	15	; () banked
 27063  00937E  6F3B               	movwf	59,b	;volatile
 27064                           
 27065                           ;pin_manager.c: 81: ANSELC = 0xF8;
 27066  009380  0EF8               	movlw	248
 27067  009382  6F3A               	movwf	58,b	;volatile
 27068                           
 27069                           ;pin_manager.c: 82: ANSELB = 0x28;
 27070  009384  0E28               	movlw	40
 27071  009386  6F39               	movwf	57,b	;volatile
 27072                           
 27073                           ;pin_manager.c: 83: ANSELE = 0x07;
 27074  009388  0E07               	movlw	7
 27075  00938A  6F3C               	movwf	60,b	;volatile
 27076                           
 27077                           ;pin_manager.c: 84: ANSELA = 0x2F;
 27078  00938C  0E2F               	movlw	47
 27079  00938E  6F38               	movwf	56,b	;volatile
 27080                           
 27081                           ;pin_manager.c: 89: WPUB = 0x17;
 27082  009390  0E17               	movlw	23
 27083  009392  6E61               	movwf	3937,c	;volatile
 27084                           
 27085                           ; BSR set to: 15
 27086                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
 27087  009394  8EF1               	bsf	4081,7,c	;volatile
 27088                           
 27089                           ; BSR set to: 15
 27090                           ;pin_manager.c: 99: IOCBbits.IOCB4 = 1;
 27091  009396  8862               	bsf	3938,4,c	;volatile
 27092                           
 27093                           ; BSR set to: 15
 27094                           ;pin_manager.c: 104: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
 27095  009398  0EFE               	movlw	low _IOCB4_DefaultInterruptHandler
 27096  00939A  0100               	movlb	0	; () banked
 27097  00939C  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 27098  00939E  0EA8               	movlw	high _IOCB4_DefaultInterruptHandler
 27099  0093A0  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27100  0093A2  ECEC  F053         	call	_IOCB4_SetInterruptHandler	;wreg free
 27101                           
 27102                           ;pin_manager.c: 107: INTCONbits.RBIE = 1;
 27103  0093A6  86F2               	bsf	4082,3,c	;volatile
 27104  0093A8  0012               	return		;funcret
 27105  0093AA                     __end_of_PIN_MANAGER_Initialize:
 27106                           	opt callstack 0
 27107                           
 27108 ;; *************** function _OSCILLATOR_Initialize *****************
 27109 ;; Defined at:
 27110 ;;		line 66 in file "mcc_generated_files/mcc.c"
 27111 ;; Parameters:    Size  Location     Type
 27112 ;;		None
 27113 ;; Auto vars:     Size  Location     Type
 27114 ;;		None
 27115 ;; Return value:  Size  Location     Type
 27116 ;;                  1    wreg      void 
 27117 ;; Registers used:
 27118 ;;		wreg, status,2
 27119 ;; Tracked objects:
 27120 ;;		On entry : 0/0
 27121 ;;		On exit  : 0/0
 27122 ;;		Unchanged: 0/0
 27123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27128 ;;Total ram usage:        0 bytes
 27129 ;; Hardware stack levels used:    1
 27130 ;; Hardware stack levels required when called:    7
 27131 ;; This function calls:
 27132 ;;		Nothing
 27133 ;; This function is called by:
 27134 ;;		_SYSTEM_Initialize
 27135 ;; This function uses a non-reentrant model
 27136 ;;
 27137                           
 27138                           	psect	text151
 27139  00A768                     __ptext151:
 27140                           	opt callstack 0
 27141  00A768                     _OSCILLATOR_Initialize:
 27142                           	opt callstack 22
 27143                           
 27144                           ;mcc.c: 69: OSCCON = 0x70;
 27145                           
 27146                           ;incstack = 0
 27147  00A768  0E70               	movlw	112
 27148  00A76A  6ED3               	movwf	4051,c	;volatile
 27149                           
 27150                           ;mcc.c: 71: OSCCON2 = 0x04;
 27151  00A76C  0E04               	movlw	4
 27152  00A76E  6ED2               	movwf	4050,c	;volatile
 27153                           
 27154                           ;mcc.c: 73: OSCTUNE = 0x00;
 27155  00A770  0E00               	movlw	0
 27156  00A772  6E9B               	movwf	3995,c	;volatile
 27157  00A774  0012               	return		;funcret
 27158  00A776                     __end_of_OSCILLATOR_Initialize:
 27159                           	opt callstack 0
 27160                           
 27161 ;; *************** function _LORAWAN_PlatformInit *****************
 27162 ;; Defined at:
 27163 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27164 ;; Parameters:    Size  Location     Type
 27165 ;;		None
 27166 ;; Auto vars:     Size  Location     Type
 27167 ;;		None
 27168 ;; Return value:  Size  Location     Type
 27169 ;;                  1    wreg      void 
 27170 ;; Registers used:
 27171 ;;		wreg, status,2, status,0, cstack
 27172 ;; Tracked objects:
 27173 ;;		On entry : 0/0
 27174 ;;		On exit  : 0/0
 27175 ;;		Unchanged: 0/0
 27176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27181 ;;Total ram usage:        0 bytes
 27182 ;; Hardware stack levels used:    1
 27183 ;; Hardware stack levels required when called:    9
 27184 ;; This function calls:
 27185 ;;		_DIO0_ISR_Lora_Init
 27186 ;;		_DIO1_ISR_Lora_Init
 27187 ;;		_DIO2_ISR_Lora_Init
 27188 ;;		_DIO3_ISR_Lora_Init
 27189 ;;		_DIO4_ISR_Lora_Init
 27190 ;;		_DIO5_ISR_Lora_Init
 27191 ;;		_SystemTimerInit
 27192 ;;		_TMR_ISR_Lora_Init
 27193 ;; This function is called by:
 27194 ;;		_SYSTEM_Initialize
 27195 ;; This function uses a non-reentrant model
 27196 ;;
 27197                           
 27198                           	psect	text152
 27199  00A2C4                     __ptext152:
 27200                           	opt callstack 0
 27201  00A2C4                     _LORAWAN_PlatformInit:
 27202                           	opt callstack 20
 27203                           
 27204                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
 27205                           
 27206                           ;incstack = 0
 27207  00A2C4  EC70  F053         	call	_TMR_ISR_Lora_Init	;wreg free
 27208                           
 27209                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
 27210  00A2C8  EC88  F053         	call	_DIO0_ISR_Lora_Init	;wreg free
 27211                           
 27212                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
 27213  00A2CC  EC80  F053         	call	_DIO1_ISR_Lora_Init	;wreg free
 27214                           
 27215                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
 27216  00A2D0  EC78  F053         	call	_DIO2_ISR_Lora_Init	;wreg free
 27217                           
 27218                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
 27219  00A2D4  EC7D  F054         	call	_DIO3_ISR_Lora_Init	;wreg free
 27220                           
 27221                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
 27222  00A2D8  EC7C  F054         	call	_DIO4_ISR_Lora_Init	;wreg free
 27223                           
 27224                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
 27225  00A2DC  EC7B  F054         	call	_DIO5_ISR_Lora_Init	;wreg free
 27226                           
 27227                           ;lorawan_init.c: 81: SystemTimerInit();
 27228  00A2E0  EC40  F054         	call	_SystemTimerInit	;wreg free
 27229  00A2E4  0012               	return		;funcret
 27230  00A2E6                     __end_of_LORAWAN_PlatformInit:
 27231                           	opt callstack 0
 27232                           
 27233 ;; *************** function _TMR_ISR_Lora_Init *****************
 27234 ;; Defined at:
 27235 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 27236 ;; Parameters:    Size  Location     Type
 27237 ;;		None
 27238 ;; Auto vars:     Size  Location     Type
 27239 ;;		None
 27240 ;; Return value:  Size  Location     Type
 27241 ;;                  1    wreg      void 
 27242 ;; Registers used:
 27243 ;;		wreg, status,2, status,0, cstack
 27244 ;; Tracked objects:
 27245 ;;		On entry : 0/0
 27246 ;;		On exit  : 0/0
 27247 ;;		Unchanged: 0/0
 27248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27253 ;;Total ram usage:        0 bytes
 27254 ;; Hardware stack levels used:    1
 27255 ;; Hardware stack levels required when called:    8
 27256 ;; This function calls:
 27257 ;;		_TMR1_SetInterruptHandler
 27258 ;; This function is called by:
 27259 ;;		_LORAWAN_PlatformInit
 27260 ;; This function uses a non-reentrant model
 27261 ;;
 27262                           
 27263                           	psect	text153
 27264  00A6E0                     __ptext153:
 27265                           	opt callstack 0
 27266  00A6E0                     _TMR_ISR_Lora_Init:
 27267                           	opt callstack 20
 27268                           
 27269                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
 27270                           
 27271                           ;incstack = 0
 27272  00A6E0  0E04               	movlw	low _TMR_ISR_lora
 27273  00A6E2  0100               	movlb	0	; () banked
 27274  00A6E4  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 27275  00A6E6  0E92               	movlw	high _TMR_ISR_lora
 27276  00A6E8  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27277  00A6EA  ECE7  F053         	call	_TMR1_SetInterruptHandler	;wreg free
 27278  00A6EE  0012               	return		;funcret
 27279  00A6F0                     __end_of_TMR_ISR_Lora_Init:
 27280                           	opt callstack 0
 27281                           
 27282 ;; *************** function _TMR1_SetInterruptHandler *****************
 27283 ;; Defined at:
 27284 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 27285 ;; Parameters:    Size  Location     Type
 27286 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27287 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
 27288 ;; Auto vars:     Size  Location     Type
 27289 ;;		None
 27290 ;; Return value:  Size  Location     Type
 27291 ;;                  1    wreg      void 
 27292 ;; Registers used:
 27293 ;;		wreg, status,2, status,0
 27294 ;; Tracked objects:
 27295 ;;		On entry : 0/0
 27296 ;;		On exit  : 0/0
 27297 ;;		Unchanged: 0/0
 27298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27299 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27302 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27303 ;;Total ram usage:        2 bytes
 27304 ;; Hardware stack levels used:    1
 27305 ;; Hardware stack levels required when called:    7
 27306 ;; This function calls:
 27307 ;;		Nothing
 27308 ;; This function is called by:
 27309 ;;		_TMR_ISR_Lora_Init
 27310 ;;		_TMR1_Initialize
 27311 ;; This function uses a non-reentrant model
 27312 ;;
 27313                           
 27314                           	psect	text154
 27315  00A7CE                     __ptext154:
 27316                           	opt callstack 0
 27317  00A7CE                     _TMR1_SetInterruptHandler:
 27318                           	opt callstack 21
 27319                           
 27320                           ;tmr1.c: 183: TMR1_InterruptHandler = InterruptHandler;
 27321                           
 27322                           ;incstack = 0
 27323  00A7CE  C060  F1E5         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 27324  00A7D2  C061  F1E6         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 27325  00A7D6  0012               	return		;funcret
 27326  00A7D8                     __end_of_TMR1_SetInterruptHandler:
 27327                           	opt callstack 0
 27328                           
 27329 ;; *************** function _SystemTimerInit *****************
 27330 ;; Defined at:
 27331 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 27332 ;; Parameters:    Size  Location     Type
 27333 ;;		None
 27334 ;; Auto vars:     Size  Location     Type
 27335 ;;		None
 27336 ;; Return value:  Size  Location     Type
 27337 ;;                  1    wreg      void 
 27338 ;; Registers used:
 27339 ;;		wreg, status,2
 27340 ;; Tracked objects:
 27341 ;;		On entry : 0/0
 27342 ;;		On exit  : 0/0
 27343 ;;		Unchanged: 0/0
 27344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27349 ;;Total ram usage:        0 bytes
 27350 ;; Hardware stack levels used:    1
 27351 ;; Hardware stack levels required when called:    7
 27352 ;; This function calls:
 27353 ;;		Nothing
 27354 ;; This function is called by:
 27355 ;;		_LORAWAN_PlatformInit
 27356 ;; This function uses a non-reentrant model
 27357 ;;
 27358                           
 27359                           	psect	text155
 27360  00A880                     __ptext155:
 27361                           	opt callstack 0
 27362  00A880                     _SystemTimerInit:
 27363                           	opt callstack 21
 27364                           
 27365                           ;sw_timer.c: 137: allocatedTimers = 0;
 27366                           
 27367                           ;incstack = 0
 27368  00A880  0E00               	movlw	0
 27369  00A882  0101               	movlb	1	; () banked
 27370  00A884  6F28               	movwf	_allocatedTimers& (0+255),b	;volatile
 27371                           
 27372                           ; BSR set to: 1
 27373  00A886  0012               	return		;funcret
 27374  00A888                     __end_of_SystemTimerInit:
 27375                           	opt callstack 0
 27376                           
 27377 ;; *************** function _DIO5_ISR_Lora_Init *****************
 27378 ;; Defined at:
 27379 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27380 ;; Parameters:    Size  Location     Type
 27381 ;;		None
 27382 ;; Auto vars:     Size  Location     Type
 27383 ;;		None
 27384 ;; Return value:  Size  Location     Type
 27385 ;;                  1    wreg      void 
 27386 ;; Registers used:
 27387 ;;		None
 27388 ;; Tracked objects:
 27389 ;;		On entry : 0/0
 27390 ;;		On exit  : 0/0
 27391 ;;		Unchanged: 0/0
 27392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27397 ;;Total ram usage:        0 bytes
 27398 ;; Hardware stack levels used:    1
 27399 ;; Hardware stack levels required when called:    7
 27400 ;; This function calls:
 27401 ;;		Nothing
 27402 ;; This function is called by:
 27403 ;;		_LORAWAN_PlatformInit
 27404 ;; This function uses a non-reentrant model
 27405 ;;
 27406                           
 27407                           	psect	text156
 27408  00A8F6                     __ptext156:
 27409                           	opt callstack 0
 27410  00A8F6                     _DIO5_ISR_Lora_Init:
 27411                           	opt callstack 21
 27412                           
 27413                           ; BSR set to: 1
 27414                           ;incstack = 0
 27415  00A8F6  0012               	return		;funcret
 27416  00A8F8                     __end_of_DIO5_ISR_Lora_Init:
 27417                           	opt callstack 0
 27418                           
 27419 ;; *************** function _DIO4_ISR_Lora_Init *****************
 27420 ;; Defined at:
 27421 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27422 ;; Parameters:    Size  Location     Type
 27423 ;;		None
 27424 ;; Auto vars:     Size  Location     Type
 27425 ;;		None
 27426 ;; Return value:  Size  Location     Type
 27427 ;;                  1    wreg      void 
 27428 ;; Registers used:
 27429 ;;		None
 27430 ;; Tracked objects:
 27431 ;;		On entry : 0/0
 27432 ;;		On exit  : 0/0
 27433 ;;		Unchanged: 0/0
 27434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27439 ;;Total ram usage:        0 bytes
 27440 ;; Hardware stack levels used:    1
 27441 ;; Hardware stack levels required when called:    7
 27442 ;; This function calls:
 27443 ;;		Nothing
 27444 ;; This function is called by:
 27445 ;;		_LORAWAN_PlatformInit
 27446 ;; This function uses a non-reentrant model
 27447 ;;
 27448                           
 27449                           	psect	text157
 27450  00A8F8                     __ptext157:
 27451                           	opt callstack 0
 27452  00A8F8                     _DIO4_ISR_Lora_Init:
 27453                           	opt callstack 21
 27454                           
 27455                           ;incstack = 0
 27456  00A8F8  0012               	return		;funcret
 27457  00A8FA                     __end_of_DIO4_ISR_Lora_Init:
 27458                           	opt callstack 0
 27459                           
 27460 ;; *************** function _DIO3_ISR_Lora_Init *****************
 27461 ;; Defined at:
 27462 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27463 ;; Parameters:    Size  Location     Type
 27464 ;;		None
 27465 ;; Auto vars:     Size  Location     Type
 27466 ;;		None
 27467 ;; Return value:  Size  Location     Type
 27468 ;;                  1    wreg      void 
 27469 ;; Registers used:
 27470 ;;		None
 27471 ;; Tracked objects:
 27472 ;;		On entry : 0/0
 27473 ;;		On exit  : 0/0
 27474 ;;		Unchanged: 0/0
 27475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27480 ;;Total ram usage:        0 bytes
 27481 ;; Hardware stack levels used:    1
 27482 ;; Hardware stack levels required when called:    7
 27483 ;; This function calls:
 27484 ;;		Nothing
 27485 ;; This function is called by:
 27486 ;;		_LORAWAN_PlatformInit
 27487 ;; This function uses a non-reentrant model
 27488 ;;
 27489                           
 27490                           	psect	text158
 27491  00A8FA                     __ptext158:
 27492                           	opt callstack 0
 27493  00A8FA                     _DIO3_ISR_Lora_Init:
 27494                           	opt callstack 21
 27495                           
 27496                           ;incstack = 0
 27497  00A8FA  0012               	return		;funcret
 27498  00A8FC                     __end_of_DIO3_ISR_Lora_Init:
 27499                           	opt callstack 0
 27500                           
 27501 ;; *************** function _DIO2_ISR_Lora_Init *****************
 27502 ;; Defined at:
 27503 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27504 ;; Parameters:    Size  Location     Type
 27505 ;;		None
 27506 ;; Auto vars:     Size  Location     Type
 27507 ;;		None
 27508 ;; Return value:  Size  Location     Type
 27509 ;;                  1    wreg      void 
 27510 ;; Registers used:
 27511 ;;		wreg, status,2, status,0, cstack
 27512 ;; Tracked objects:
 27513 ;;		On entry : 0/0
 27514 ;;		On exit  : 0/0
 27515 ;;		Unchanged: 0/0
 27516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27521 ;;Total ram usage:        0 bytes
 27522 ;; Hardware stack levels used:    1
 27523 ;; Hardware stack levels required when called:    8
 27524 ;; This function calls:
 27525 ;;		_IOCB4_SetInterruptHandler
 27526 ;; This function is called by:
 27527 ;;		_LORAWAN_PlatformInit
 27528 ;; This function uses a non-reentrant model
 27529 ;;
 27530                           
 27531                           	psect	text159
 27532  00A6F0                     __ptext159:
 27533                           	opt callstack 0
 27534  00A6F0                     _DIO2_ISR_Lora_Init:
 27535                           	opt callstack 20
 27536                           
 27537                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
 27538                           
 27539                           ;incstack = 0
 27540  00A6F0  0EE4               	movlw	low _DIO2_ISR_Lora
 27541  00A6F2  0100               	movlb	0	; () banked
 27542  00A6F4  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 27543  00A6F6  0EA8               	movlw	high _DIO2_ISR_Lora
 27544  00A6F8  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27545  00A6FA  ECEC  F053         	call	_IOCB4_SetInterruptHandler	;wreg free
 27546  00A6FE  0012               	return		;funcret
 27547  00A700                     __end_of_DIO2_ISR_Lora_Init:
 27548                           	opt callstack 0
 27549                           
 27550 ;; *************** function _IOCB4_SetInterruptHandler *****************
 27551 ;; Defined at:
 27552 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
 27553 ;; Parameters:    Size  Location     Type
 27554 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27555 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
 27556 ;; Auto vars:     Size  Location     Type
 27557 ;;		None
 27558 ;; Return value:  Size  Location     Type
 27559 ;;                  1    wreg      void 
 27560 ;; Registers used:
 27561 ;;		wreg, status,2, status,0
 27562 ;; Tracked objects:
 27563 ;;		On entry : 0/0
 27564 ;;		On exit  : 0/0
 27565 ;;		Unchanged: 0/0
 27566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27567 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27570 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27571 ;;Total ram usage:        2 bytes
 27572 ;; Hardware stack levels used:    1
 27573 ;; Hardware stack levels required when called:    7
 27574 ;; This function calls:
 27575 ;;		Nothing
 27576 ;; This function is called by:
 27577 ;;		_DIO2_ISR_Lora_Init
 27578 ;;		_PIN_MANAGER_Initialize
 27579 ;; This function uses a non-reentrant model
 27580 ;;
 27581                           
 27582                           	psect	text160
 27583  00A7D8                     __ptext160:
 27584                           	opt callstack 0
 27585  00A7D8                     _IOCB4_SetInterruptHandler:
 27586                           	opt callstack 21
 27587                           
 27588                           ;pin_manager.c: 140: IOCB4_InterruptHandler = InterruptHandler;
 27589                           
 27590                           ;incstack = 0
 27591  00A7D8  C060  F1E9         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 27592  00A7DC  C061  F1EA         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 27593  00A7E0  0012               	return		;funcret
 27594  00A7E2                     __end_of_IOCB4_SetInterruptHandler:
 27595                           	opt callstack 0
 27596                           
 27597 ;; *************** function _DIO1_ISR_Lora_Init *****************
 27598 ;; Defined at:
 27599 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27600 ;; Parameters:    Size  Location     Type
 27601 ;;		None
 27602 ;; Auto vars:     Size  Location     Type
 27603 ;;		None
 27604 ;; Return value:  Size  Location     Type
 27605 ;;                  1    wreg      void 
 27606 ;; Registers used:
 27607 ;;		wreg, status,2, status,0, cstack
 27608 ;; Tracked objects:
 27609 ;;		On entry : 0/0
 27610 ;;		On exit  : 0/0
 27611 ;;		Unchanged: 0/0
 27612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27617 ;;Total ram usage:        0 bytes
 27618 ;; Hardware stack levels used:    1
 27619 ;; Hardware stack levels required when called:    8
 27620 ;; This function calls:
 27621 ;;		_INT2_SetInterruptHandler
 27622 ;; This function is called by:
 27623 ;;		_LORAWAN_PlatformInit
 27624 ;; This function uses a non-reentrant model
 27625 ;;
 27626                           
 27627                           	psect	text161
 27628  00A700                     __ptext161:
 27629                           	opt callstack 0
 27630  00A700                     _DIO1_ISR_Lora_Init:
 27631                           	opt callstack 20
 27632                           
 27633                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
 27634                           
 27635                           ;incstack = 0
 27636  00A700  0EE8               	movlw	low _DIO1_ISR_Lora
 27637  00A702  0100               	movlb	0	; () banked
 27638  00A704  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 27639  00A706  0EA8               	movlw	high _DIO1_ISR_Lora
 27640  00A708  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27641  00A70A  ECF1  F053         	call	_INT2_SetInterruptHandler	;wreg free
 27642  00A70E  0012               	return		;funcret
 27643  00A710                     __end_of_DIO1_ISR_Lora_Init:
 27644                           	opt callstack 0
 27645                           
 27646 ;; *************** function _DIO0_ISR_Lora_Init *****************
 27647 ;; Defined at:
 27648 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27649 ;; Parameters:    Size  Location     Type
 27650 ;;		None
 27651 ;; Auto vars:     Size  Location     Type
 27652 ;;		None
 27653 ;; Return value:  Size  Location     Type
 27654 ;;                  1    wreg      void 
 27655 ;; Registers used:
 27656 ;;		wreg, status,2, status,0, cstack
 27657 ;; Tracked objects:
 27658 ;;		On entry : 0/0
 27659 ;;		On exit  : 0/0
 27660 ;;		Unchanged: 0/0
 27661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27666 ;;Total ram usage:        0 bytes
 27667 ;; Hardware stack levels used:    1
 27668 ;; Hardware stack levels required when called:    8
 27669 ;; This function calls:
 27670 ;;		_INT1_SetInterruptHandler
 27671 ;; This function is called by:
 27672 ;;		_LORAWAN_PlatformInit
 27673 ;; This function uses a non-reentrant model
 27674 ;;
 27675                           
 27676                           	psect	text162
 27677  00A710                     __ptext162:
 27678                           	opt callstack 0
 27679  00A710                     _DIO0_ISR_Lora_Init:
 27680                           	opt callstack 20
 27681                           
 27682                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
 27683                           
 27684                           ;incstack = 0
 27685  00A710  0EEC               	movlw	low _DIO0_ISR_Lora
 27686  00A712  0100               	movlb	0	; () banked
 27687  00A714  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 27688  00A716  0EA8               	movlw	high _DIO0_ISR_Lora
 27689  00A718  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27690  00A71A  ECF6  F053         	call	_INT1_SetInterruptHandler	;wreg free
 27691  00A71E  0012               	return		;funcret
 27692  00A720                     __end_of_DIO0_ISR_Lora_Init:
 27693                           	opt callstack 0
 27694                           
 27695 ;; *************** function _INTERRUPT_Initialize *****************
 27696 ;; Defined at:
 27697 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 27698 ;; Parameters:    Size  Location     Type
 27699 ;;		None
 27700 ;; Auto vars:     Size  Location     Type
 27701 ;;		None
 27702 ;; Return value:  Size  Location     Type
 27703 ;;                  1    wreg      void 
 27704 ;; Registers used:
 27705 ;;		None
 27706 ;; Tracked objects:
 27707 ;;		On entry : 0/0
 27708 ;;		On exit  : 0/0
 27709 ;;		Unchanged: 0/0
 27710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27715 ;;Total ram usage:        0 bytes
 27716 ;; Hardware stack levels used:    1
 27717 ;; Hardware stack levels required when called:    7
 27718 ;; This function calls:
 27719 ;;		Nothing
 27720 ;; This function is called by:
 27721 ;;		_SYSTEM_Initialize
 27722 ;; This function uses a non-reentrant model
 27723 ;;
 27724                           
 27725                           	psect	text163
 27726  00A8D0                     __ptext163:
 27727                           	opt callstack 0
 27728  00A8D0                     _INTERRUPT_Initialize:
 27729                           	opt callstack 22
 27730                           
 27731                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
 27732                           
 27733                           ;incstack = 0
 27734  00A8D0  9ED0               	bcf	4048,7,c	;volatile
 27735  00A8D2  0012               	return		;funcret
 27736  00A8D4                     __end_of_INTERRUPT_Initialize:
 27737                           	opt callstack 0
 27738                           
 27739 ;; *************** function _EXT_INT_Initialize *****************
 27740 ;; Defined at:
 27741 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 27742 ;; Parameters:    Size  Location     Type
 27743 ;;		None
 27744 ;; Auto vars:     Size  Location     Type
 27745 ;;		None
 27746 ;; Return value:  Size  Location     Type
 27747 ;;                  1    wreg      void 
 27748 ;; Registers used:
 27749 ;;		wreg, status,2, status,0, cstack
 27750 ;; Tracked objects:
 27751 ;;		On entry : 0/0
 27752 ;;		On exit  : 0/0
 27753 ;;		Unchanged: 0/0
 27754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27759 ;;Total ram usage:        0 bytes
 27760 ;; Hardware stack levels used:    1
 27761 ;; Hardware stack levels required when called:    8
 27762 ;; This function calls:
 27763 ;;		_INT1_SetInterruptHandler
 27764 ;;		_INT2_SetInterruptHandler
 27765 ;; This function is called by:
 27766 ;;		_SYSTEM_Initialize
 27767 ;; This function uses a non-reentrant model
 27768 ;;
 27769                           
 27770                           	psect	text164
 27771  00A0F6                     __ptext164:
 27772                           	opt callstack 0
 27773  00A0F6                     _EXT_INT_Initialize:
 27774                           	opt callstack 21
 27775                           
 27776                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
 27777                           
 27778                           ;incstack = 0
 27779  00A0F6  90F0               	bcf	4080,0,c	;volatile
 27780                           
 27781                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
 27782  00A0F8  8AF1               	bsf	4081,5,c	;volatile
 27783                           
 27784                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 27785  00A0FA  0E02               	movlw	low _INT1_DefaultInterruptHandler
 27786  00A0FC  0100               	movlb	0	; () banked
 27787  00A0FE  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 27788  00A100  0EA9               	movlw	high _INT1_DefaultInterruptHandler
 27789  00A102  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27790  00A104  ECF6  F053         	call	_INT1_SetInterruptHandler	;wreg free
 27791                           
 27792                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
 27793  00A108  86F0               	bsf	4080,3,c	;volatile
 27794                           
 27795                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
 27796  00A10A  92F0               	bcf	4080,1,c	;volatile
 27797                           
 27798                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
 27799  00A10C  88F1               	bsf	4081,4,c	;volatile
 27800                           
 27801                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 27802  00A10E  0E00               	movlw	low _INT2_DefaultInterruptHandler
 27803  00A110  0100               	movlb	0	; () banked
 27804  00A112  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 27805  00A114  0EA9               	movlw	high _INT2_DefaultInterruptHandler
 27806  00A116  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27807  00A118  ECF1  F053         	call	_INT2_SetInterruptHandler	;wreg free
 27808                           
 27809                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
 27810  00A11C  88F0               	bsf	4080,4,c	;volatile
 27811  00A11E  0012               	return		;funcret
 27812  00A120                     __end_of_EXT_INT_Initialize:
 27813                           	opt callstack 0
 27814                           
 27815 ;; *************** function _INT2_SetInterruptHandler *****************
 27816 ;; Defined at:
 27817 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 27818 ;; Parameters:    Size  Location     Type
 27819 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27820 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
 27821 ;; Auto vars:     Size  Location     Type
 27822 ;;		None
 27823 ;; Return value:  Size  Location     Type
 27824 ;;                  1    wreg      void 
 27825 ;; Registers used:
 27826 ;;		wreg, status,2, status,0
 27827 ;; Tracked objects:
 27828 ;;		On entry : 0/0
 27829 ;;		On exit  : 0/0
 27830 ;;		Unchanged: 0/0
 27831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27835 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27836 ;;Total ram usage:        2 bytes
 27837 ;; Hardware stack levels used:    1
 27838 ;; Hardware stack levels required when called:    7
 27839 ;; This function calls:
 27840 ;;		Nothing
 27841 ;; This function is called by:
 27842 ;;		_DIO1_ISR_Lora_Init
 27843 ;;		_EXT_INT_Initialize
 27844 ;; This function uses a non-reentrant model
 27845 ;;
 27846                           
 27847                           	psect	text165
 27848  00A7E2                     __ptext165:
 27849                           	opt callstack 0
 27850  00A7E2                     _INT2_SetInterruptHandler:
 27851                           	opt callstack 20
 27852                           
 27853                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 27854                           
 27855                           ;incstack = 0
 27856  00A7E2  C060  F1EB         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 27857  00A7E6  C061  F1EC         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 27858  00A7EA  0012               	return		;funcret
 27859  00A7EC                     __end_of_INT2_SetInterruptHandler:
 27860                           	opt callstack 0
 27861                           
 27862 ;; *************** function _INT1_SetInterruptHandler *****************
 27863 ;; Defined at:
 27864 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 27865 ;; Parameters:    Size  Location     Type
 27866 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27867 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
 27868 ;; Auto vars:     Size  Location     Type
 27869 ;;		None
 27870 ;; Return value:  Size  Location     Type
 27871 ;;                  1    wreg      void 
 27872 ;; Registers used:
 27873 ;;		wreg, status,2, status,0
 27874 ;; Tracked objects:
 27875 ;;		On entry : 0/0
 27876 ;;		On exit  : 0/0
 27877 ;;		Unchanged: 0/0
 27878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27879 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27882 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27883 ;;Total ram usage:        2 bytes
 27884 ;; Hardware stack levels used:    1
 27885 ;; Hardware stack levels required when called:    7
 27886 ;; This function calls:
 27887 ;;		Nothing
 27888 ;; This function is called by:
 27889 ;;		_DIO0_ISR_Lora_Init
 27890 ;;		_EXT_INT_Initialize
 27891 ;; This function uses a non-reentrant model
 27892 ;;
 27893                           
 27894                           	psect	text166
 27895  00A7EC                     __ptext166:
 27896                           	opt callstack 0
 27897  00A7EC                     _INT1_SetInterruptHandler:
 27898                           	opt callstack 20
 27899                           
 27900                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 27901                           
 27902                           ;incstack = 0
 27903  00A7EC  C060  F1ED         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 27904  00A7F0  C061  F1EE         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 27905  00A7F4  0012               	return		;funcret
 27906  00A7F6                     __end_of_INT1_SetInterruptHandler:
 27907                           	opt callstack 0
 27908                           
 27909 ;; *************** function _EUSART2_Initialize *****************
 27910 ;; Defined at:
 27911 ;;		line 65 in file "mcc_generated_files/eusart2.c"
 27912 ;; Parameters:    Size  Location     Type
 27913 ;;		None
 27914 ;; Auto vars:     Size  Location     Type
 27915 ;;		None
 27916 ;; Return value:  Size  Location     Type
 27917 ;;                  1    wreg      void 
 27918 ;; Registers used:
 27919 ;;		wreg, status,2, status,0, cstack
 27920 ;; Tracked objects:
 27921 ;;		On entry : 0/0
 27922 ;;		On exit  : 0/0
 27923 ;;		Unchanged: 0/0
 27924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27929 ;;Total ram usage:        0 bytes
 27930 ;; Hardware stack levels used:    1
 27931 ;; Hardware stack levels required when called:    8
 27932 ;; This function calls:
 27933 ;;		_EUSART2_SetErrorHandler
 27934 ;;		_EUSART2_SetFramingErrorHandler
 27935 ;;		_EUSART2_SetOverrunErrorHandler
 27936 ;; This function is called by:
 27937 ;;		_SYSTEM_Initialize
 27938 ;; This function uses a non-reentrant model
 27939 ;;
 27940                           
 27941                           	psect	text167
 27942  00982E                     __ptext167:
 27943                           	opt callstack 0
 27944  00982E                     _EUSART2_Initialize:
 27945                           	opt callstack 21
 27946                           
 27947                           ;eusart2.c: 70: BAUDCON2 = 0x08;
 27948                           
 27949                           ;incstack = 0
 27950  00982E  0E08               	movlw	8
 27951  009830  6E70               	movwf	3952,c	;volatile
 27952                           
 27953                           ;eusart2.c: 73: RCSTA2 = 0x80;
 27954  009832  0E80               	movlw	128
 27955  009834  6E71               	movwf	3953,c	;volatile
 27956                           
 27957                           ;eusart2.c: 76: TXSTA2 = 0x04;
 27958  009836  0E04               	movlw	4
 27959  009838  6E72               	movwf	3954,c	;volatile
 27960                           
 27961                           ;eusart2.c: 79: SPBRG2 = 0xA0;
 27962  00983A  0EA0               	movlw	160
 27963  00983C  6E75               	movwf	3957,c	;volatile
 27964                           
 27965                           ;eusart2.c: 82: SPBRGH2 = 0x01;
 27966  00983E  0E01               	movlw	1
 27967  009840  6E76               	movwf	3958,c	;volatile
 27968                           
 27969                           ;eusart2.c: 85: EUSART2_SetFramingErrorHandler(EUSART2_DefaultFramingErrorHandler);
 27970  009842  0E00               	movlw	0
 27971  009844  0100               	movlb	0	; () banked
 27972  009846  6F60               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler& (0+255),b
 27973  009848  0E00               	movlw	0
 27974  00984A  6F61               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 27975  00984C  EC00  F054         	call	_EUSART2_SetFramingErrorHandler	;wreg free
 27976                           
 27977                           ;eusart2.c: 86: EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOverrunErrorHandler);
 27978  009850  0E00               	movlw	0
 27979  009852  0100               	movlb	0	; () banked
 27980  009854  6F60               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler& (0+255),b
 27981  009856  0E00               	movlw	0
 27982  009858  6F61               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 27983  00985A  ECFB  F053         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
 27984                           
 27985                           ;eusart2.c: 87: EUSART2_SetErrorHandler(EUSART2_DefaultErrorHandler);
 27986  00985E  0E00               	movlw	0
 27987  009860  0100               	movlb	0	; () banked
 27988  009862  6F60               	movwf	EUSART2_SetErrorHandler@interruptHandler& (0+255),b
 27989  009864  0E00               	movlw	0
 27990  009866  6F61               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)& (0+255),b
 27991  009868  EC05  F054         	call	_EUSART2_SetErrorHandler	;wreg free
 27992                           
 27993                           ;eusart2.c: 89: eusart2RxLastError.status = 0;
 27994  00986C  0E00               	movlw	0
 27995  00986E  0101               	movlb	1	; () banked
 27996  009870  6F26               	movwf	_eusart2RxLastError& (0+255),b	;volatile
 27997                           
 27998                           ; BSR set to: 1
 27999  009872  0012               	return		;funcret
 28000  009874                     __end_of_EUSART2_Initialize:
 28001                           	opt callstack 0
 28002                           
 28003 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 28004 ;; Defined at:
 28005 ;;		line 160 in file "mcc_generated_files/eusart2.c"
 28006 ;; Parameters:    Size  Location     Type
 28007 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 28008 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 28009 ;; Auto vars:     Size  Location     Type
 28010 ;;		None
 28011 ;; Return value:  Size  Location     Type
 28012 ;;                  1    wreg      void 
 28013 ;; Registers used:
 28014 ;;		wreg, status,2, status,0
 28015 ;; Tracked objects:
 28016 ;;		On entry : 0/0
 28017 ;;		On exit  : 0/0
 28018 ;;		Unchanged: 0/0
 28019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28020 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28023 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28024 ;;Total ram usage:        2 bytes
 28025 ;; Hardware stack levels used:    1
 28026 ;; Hardware stack levels required when called:    7
 28027 ;; This function calls:
 28028 ;;		Nothing
 28029 ;; This function is called by:
 28030 ;;		_EUSART2_Initialize
 28031 ;; This function uses a non-reentrant model
 28032 ;;
 28033                           
 28034                           	psect	text168
 28035  00A7F6                     __ptext168:
 28036                           	opt callstack 0
 28037  00A7F6                     _EUSART2_SetOverrunErrorHandler:
 28038                           	opt callstack 21
 28039                           
 28040                           ;eusart2.c: 161: EUSART2_OverrunErrorHandler = interruptHandler;
 28041                           
 28042                           ; BSR set to: 1
 28043                           ;incstack = 0
 28044  00A7F6  C060  F2FC         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
 28045  00A7FA  C061  F2FD         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
 28046  00A7FE  0012               	return		;funcret
 28047  00A800                     __end_of_EUSART2_SetOverrunErrorHandler:
 28048                           	opt callstack 0
 28049                           
 28050 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 28051 ;; Defined at:
 28052 ;;		line 156 in file "mcc_generated_files/eusart2.c"
 28053 ;; Parameters:    Size  Location     Type
 28054 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 28055 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 28056 ;; Auto vars:     Size  Location     Type
 28057 ;;		None
 28058 ;; Return value:  Size  Location     Type
 28059 ;;                  1    wreg      void 
 28060 ;; Registers used:
 28061 ;;		wreg, status,2, status,0
 28062 ;; Tracked objects:
 28063 ;;		On entry : 0/0
 28064 ;;		On exit  : 0/0
 28065 ;;		Unchanged: 0/0
 28066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28067 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28070 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28071 ;;Total ram usage:        2 bytes
 28072 ;; Hardware stack levels used:    1
 28073 ;; Hardware stack levels required when called:    7
 28074 ;; This function calls:
 28075 ;;		Nothing
 28076 ;; This function is called by:
 28077 ;;		_EUSART2_Initialize
 28078 ;; This function uses a non-reentrant model
 28079 ;;
 28080                           
 28081                           	psect	text169
 28082  00A800                     __ptext169:
 28083                           	opt callstack 0
 28084  00A800                     _EUSART2_SetFramingErrorHandler:
 28085                           	opt callstack 21
 28086                           
 28087                           ;eusart2.c: 157: EUSART2_FramingErrorHandler = interruptHandler;
 28088                           
 28089                           ;incstack = 0
 28090  00A800  C060  F2FE         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
 28091  00A804  C061  F2FF         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
 28092  00A808  0012               	return		;funcret
 28093  00A80A                     __end_of_EUSART2_SetFramingErrorHandler:
 28094                           	opt callstack 0
 28095                           
 28096 ;; *************** function _EUSART2_SetErrorHandler *****************
 28097 ;; Defined at:
 28098 ;;		line 164 in file "mcc_generated_files/eusart2.c"
 28099 ;; Parameters:    Size  Location     Type
 28100 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 28101 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 28102 ;; Auto vars:     Size  Location     Type
 28103 ;;		None
 28104 ;; Return value:  Size  Location     Type
 28105 ;;                  1    wreg      void 
 28106 ;; Registers used:
 28107 ;;		wreg, status,2, status,0
 28108 ;; Tracked objects:
 28109 ;;		On entry : 0/0
 28110 ;;		On exit  : 0/0
 28111 ;;		Unchanged: 0/0
 28112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28116 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28117 ;;Total ram usage:        2 bytes
 28118 ;; Hardware stack levels used:    1
 28119 ;; Hardware stack levels required when called:    7
 28120 ;; This function calls:
 28121 ;;		Nothing
 28122 ;; This function is called by:
 28123 ;;		_EUSART2_Initialize
 28124 ;; This function uses a non-reentrant model
 28125 ;;
 28126                           
 28127                           	psect	text170
 28128  00A80A                     __ptext170:
 28129                           	opt callstack 0
 28130  00A80A                     _EUSART2_SetErrorHandler:
 28131                           	opt callstack 21
 28132                           
 28133                           ;eusart2.c: 165: EUSART2_ErrorHandler = interruptHandler;
 28134                           
 28135                           ;incstack = 0
 28136  00A80A  C060  F2FA         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
 28137  00A80E  C061  F2FB         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
 28138  00A812  0012               	return		;funcret
 28139  00A814                     __end_of_EUSART2_SetErrorHandler:
 28140                           	opt callstack 0
 28141                           
 28142 ;; *************** function _ADC_Initialize *****************
 28143 ;; Defined at:
 28144 ;;		line 60 in file "mcc_generated_files/adc.c"
 28145 ;; Parameters:    Size  Location     Type
 28146 ;;		None
 28147 ;; Auto vars:     Size  Location     Type
 28148 ;;		None
 28149 ;; Return value:  Size  Location     Type
 28150 ;;                  1    wreg      void 
 28151 ;; Registers used:
 28152 ;;		wreg, status,2
 28153 ;; Tracked objects:
 28154 ;;		On entry : 0/0
 28155 ;;		On exit  : 0/0
 28156 ;;		Unchanged: 0/0
 28157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28162 ;;Total ram usage:        0 bytes
 28163 ;; Hardware stack levels used:    1
 28164 ;; Hardware stack levels required when called:    7
 28165 ;; This function calls:
 28166 ;;		Nothing
 28167 ;; This function is called by:
 28168 ;;		_SYSTEM_Initialize
 28169 ;;		_enableClockPeripherals
 28170 ;; This function uses a non-reentrant model
 28171 ;;
 28172                           
 28173                           	psect	text171
 28174  00A624                     __ptext171:
 28175                           	opt callstack 0
 28176  00A624                     _ADC_Initialize:
 28177                           	opt callstack 22
 28178                           
 28179                           ;adc.c: 65: ADCON0 = 0x01;
 28180                           
 28181                           ;incstack = 0
 28182  00A624  0E01               	movlw	1
 28183  00A626  6EC2               	movwf	4034,c	;volatile
 28184                           
 28185                           ;adc.c: 68: ADCON1 = 0x00;
 28186  00A628  0E00               	movlw	0
 28187  00A62A  6EC1               	movwf	4033,c	;volatile
 28188                           
 28189                           ;adc.c: 71: ADCON2 = 0x00;
 28190  00A62C  0E00               	movlw	0
 28191  00A62E  6EC0               	movwf	4032,c	;volatile
 28192                           
 28193                           ;adc.c: 74: ADRESL = 0x00;
 28194  00A630  0E00               	movlw	0
 28195  00A632  6EC3               	movwf	4035,c	;volatile
 28196                           
 28197                           ;adc.c: 77: ADRESH = 0x00;
 28198  00A634  0E00               	movlw	0
 28199  00A636  6EC4               	movwf	4036,c	;volatile
 28200                           
 28201                           ;adc.c: 80: PIE1bits.ADIE = 1;
 28202  00A638  8C9D               	bsf	3997,6,c	;volatile
 28203  00A63A  0012               	return		;funcret
 28204  00A63C                     __end_of_ADC_Initialize:
 28205                           	opt callstack 0
 28206                           
 28207 ;; *************** function _LORAWAN_SetDeviceEui *****************
 28208 ;; Defined at:
 28209 ;;		line 337 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28210 ;; Parameters:    Size  Location     Type
 28211 ;;  deviceEuiNew    2   11[BANK0 ] PTR unsigned char 
 28212 ;;		 -> deviceEui(8), 
 28213 ;; Auto vars:     Size  Location     Type
 28214 ;;		None
 28215 ;; Return value:  Size  Location     Type
 28216 ;;                  1    wreg      void 
 28217 ;; Registers used:
 28218 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28219 ;; Tracked objects:
 28220 ;;		On entry : 0/0
 28221 ;;		On exit  : 0/0
 28222 ;;		Unchanged: 0/0
 28223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28227 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28228 ;;Total ram usage:        2 bytes
 28229 ;; Hardware stack levels used:    1
 28230 ;; Hardware stack levels required when called:    8
 28231 ;; This function calls:
 28232 ;;		_memcpy
 28233 ;; This function is called by:
 28234 ;;		_main
 28235 ;; This function uses a non-reentrant model
 28236 ;;
 28237                           
 28238                           	psect	text172
 28239  009F0A                     __ptext172:
 28240                           	opt callstack 0
 28241  009F0A                     _LORAWAN_SetDeviceEui:
 28242                           	opt callstack 22
 28243                           
 28244                           ;lorawan.c: 339: if (deviceEuiNew != (0))
 28245                           
 28246                           ;incstack = 0
 28247  009F0A  0100               	movlb	0	; () banked
 28248  009F0C  516B               	movf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),w,b
 28249  009F0E  116C               	iorwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),w,b
 28250  009F10  B4D8               	btfsc	status,2,c
 28251  009F12  0012               	return	
 28252                           
 28253                           ; BSR set to: 0
 28254                           ;lorawan.c: 340: {;lorawan.c: 341: memcpy(loRa.activationParameters.deviceEui.buffer, de
      +                          viceEuiNew, sizeof(loRa.activationParameters.deviceEui) );
 28255  009F14  0E5F               	movlw	low (_loRa+90)
 28256  009F16  6F60               	movwf	memcpy@d1& (0+255),b
 28257  009F18  0E02               	movlw	high (_loRa+90)
 28258  009F1A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28259  009F1C  C06B  F062         	movff	LORAWAN_SetDeviceEui@deviceEuiNew,memcpy@s1
 28260  009F20  C06C  F063         	movff	LORAWAN_SetDeviceEui@deviceEuiNew+1,memcpy@s1+1
 28261  009F24  0E00               	movlw	0
 28262  009F26  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28263  009F28  0E08               	movlw	8
 28264  009F2A  6F64               	movwf	memcpy@n& (0+255),b
 28265  009F2C  ECEC  F047         	call	_memcpy	;wreg free
 28266                           
 28267                           ;lorawan.c: 342: loRa.macKeys.deviceEui = 1;
 28268  009F30  0102               	movlb	2	; () banked
 28269  009F32  81AA               	bsf	(_loRa+165)& (0+255),0,b
 28270                           
 28271                           ; BSR set to: 2
 28272                           ;lorawan.c: 343: loRa.macStatus.networkJoined = 0;
 28273  009F34  9907               	bcf	(_loRa+2)& (0+255),4,b
 28274  009F36  0012               	return		;funcret
 28275  009F38                     __end_of_LORAWAN_SetDeviceEui:
 28276                           	opt callstack 0
 28277                           
 28278 ;; *************** function _LORAWAN_SetApplicationKey *****************
 28279 ;; Defined at:
 28280 ;;		line 409 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28281 ;; Parameters:    Size  Location     Type
 28282 ;;  applicationK    2   11[BANK0 ] PTR unsigned char 
 28283 ;;		 -> appKey(16), 
 28284 ;; Auto vars:     Size  Location     Type
 28285 ;;		None
 28286 ;; Return value:  Size  Location     Type
 28287 ;;                  1    wreg      void 
 28288 ;; Registers used:
 28289 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28290 ;; Tracked objects:
 28291 ;;		On entry : 0/0
 28292 ;;		On exit  : 0/0
 28293 ;;		Unchanged: 0/0
 28294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28295 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28298 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28299 ;;Total ram usage:        2 bytes
 28300 ;; Hardware stack levels used:    1
 28301 ;; Hardware stack levels required when called:    8
 28302 ;; This function calls:
 28303 ;;		_memcpy
 28304 ;; This function is called by:
 28305 ;;		_main
 28306 ;; This function uses a non-reentrant model
 28307 ;;
 28308                           
 28309                           	psect	text173
 28310  009F38                     __ptext173:
 28311                           	opt callstack 0
 28312  009F38                     _LORAWAN_SetApplicationKey:
 28313                           	opt callstack 22
 28314                           
 28315                           ;lorawan.c: 411: if (applicationKeyNew != (0))
 28316                           
 28317                           ;incstack = 0
 28318  009F38  0100               	movlb	0	; () banked
 28319  009F3A  516B               	movf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),w,b
 28320  009F3C  116C               	iorwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),w,b
 28321  009F3E  B4D8               	btfsc	status,2,c
 28322  009F40  0012               	return	
 28323                           
 28324                           ; BSR set to: 0
 28325                           ;lorawan.c: 412: {;lorawan.c: 413: memcpy( loRa.activationParameters.applicationKey, app
      +                          licationKeyNew, 16);
 28326  009F42  0E47               	movlw	low (_loRa+66)
 28327  009F44  6F60               	movwf	memcpy@d1& (0+255),b
 28328  009F46  0E02               	movlw	high (_loRa+66)
 28329  009F48  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28330  009F4A  C06B  F062         	movff	LORAWAN_SetApplicationKey@applicationKeyNew,memcpy@s1
 28331  009F4E  C06C  F063         	movff	LORAWAN_SetApplicationKey@applicationKeyNew+1,memcpy@s1+1
 28332  009F52  0E00               	movlw	0
 28333  009F54  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28334  009F56  0E10               	movlw	16
 28335  009F58  6F64               	movwf	memcpy@n& (0+255),b
 28336  009F5A  ECEC  F047         	call	_memcpy	;wreg free
 28337                           
 28338                           ;lorawan.c: 414: loRa.macKeys.applicationKey = 1;
 28339  009F5E  0102               	movlb	2	; () banked
 28340  009F60  87AA               	bsf	(_loRa+165)& (0+255),3,b
 28341                           
 28342                           ; BSR set to: 2
 28343                           ;lorawan.c: 415: loRa.macStatus.networkJoined = 0;
 28344  009F62  9907               	bcf	(_loRa+2)& (0+255),4,b
 28345  009F64  0012               	return		;funcret
 28346  009F66                     __end_of_LORAWAN_SetApplicationKey:
 28347                           	opt callstack 0
 28348                           
 28349 ;; *************** function _LORAWAN_SetApplicationEui *****************
 28350 ;; Defined at:
 28351 ;;		line 352 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28352 ;; Parameters:    Size  Location     Type
 28353 ;;  applicationE    2   11[BANK0 ] PTR unsigned char 
 28354 ;;		 -> appEui(8), 
 28355 ;; Auto vars:     Size  Location     Type
 28356 ;;		None
 28357 ;; Return value:  Size  Location     Type
 28358 ;;                  1    wreg      void 
 28359 ;; Registers used:
 28360 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28361 ;; Tracked objects:
 28362 ;;		On entry : 0/0
 28363 ;;		On exit  : 0/0
 28364 ;;		Unchanged: 0/0
 28365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28369 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28370 ;;Total ram usage:        2 bytes
 28371 ;; Hardware stack levels used:    1
 28372 ;; Hardware stack levels required when called:    8
 28373 ;; This function calls:
 28374 ;;		_memcpy
 28375 ;; This function is called by:
 28376 ;;		_main
 28377 ;; This function uses a non-reentrant model
 28378 ;;
 28379                           
 28380                           	psect	text174
 28381  009F66                     __ptext174:
 28382                           	opt callstack 0
 28383  009F66                     _LORAWAN_SetApplicationEui:
 28384                           	opt callstack 22
 28385                           
 28386                           ;lorawan.c: 354: if (applicationEuiNew != (0))
 28387                           
 28388                           ;incstack = 0
 28389  009F66  0100               	movlb	0	; () banked
 28390  009F68  516B               	movf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),w,b
 28391  009F6A  116C               	iorwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),w,b
 28392  009F6C  B4D8               	btfsc	status,2,c
 28393  009F6E  0012               	return	
 28394                           
 28395                           ; BSR set to: 0
 28396                           ;lorawan.c: 355: {;lorawan.c: 356: memcpy(loRa.activationParameters.applicationEui.buffe
      +                          r, applicationEuiNew, 8);
 28397  009F70  0E57               	movlw	low (_loRa+82)
 28398  009F72  6F60               	movwf	memcpy@d1& (0+255),b
 28399  009F74  0E02               	movlw	high (_loRa+82)
 28400  009F76  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28401  009F78  C06B  F062         	movff	LORAWAN_SetApplicationEui@applicationEuiNew,memcpy@s1
 28402  009F7C  C06C  F063         	movff	LORAWAN_SetApplicationEui@applicationEuiNew+1,memcpy@s1+1
 28403  009F80  0E00               	movlw	0
 28404  009F82  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28405  009F84  0E08               	movlw	8
 28406  009F86  6F64               	movwf	memcpy@n& (0+255),b
 28407  009F88  ECEC  F047         	call	_memcpy	;wreg free
 28408                           
 28409                           ;lorawan.c: 357: loRa.macKeys.applicationEui = 1;
 28410  009F8C  0102               	movlb	2	; () banked
 28411  009F8E  83AA               	bsf	(_loRa+165)& (0+255),1,b
 28412                           
 28413                           ; BSR set to: 2
 28414                           ;lorawan.c: 358: loRa.macStatus.networkJoined = 0;
 28415  009F90  9907               	bcf	(_loRa+2)& (0+255),4,b
 28416  009F92  0012               	return		;funcret
 28417  009F94                     __end_of_LORAWAN_SetApplicationEui:
 28418                           	opt callstack 0
 28419                           
 28420 ;; *************** function _LORAWAN_Join *****************
 28421 ;; Defined at:
 28422 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28423 ;; Parameters:    Size  Location     Type
 28424 ;;  activationTy    1    wreg     enum E6082
 28425 ;; Auto vars:     Size  Location     Type
 28426 ;;  activationTy    1  124[BANK0 ] enum E6082
 28427 ;;  result          1  123[BANK0 ] enum E6059
 28428 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 28429 ;; Return value:  Size  Location     Type
 28430 ;;                  1    wreg      enum E6059
 28431 ;; Registers used:
 28432 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28433 ;; Tracked objects:
 28434 ;;		On entry : 0/0
 28435 ;;		On exit  : 0/0
 28436 ;;		Unchanged: 0/0
 28437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28439 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28441 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28442 ;;Total ram usage:        3 bytes
 28443 ;; Hardware stack levels used:    1
 28444 ;; Hardware stack levels required when called:   14
 28445 ;; This function calls:
 28446 ;;		_PrepareJoinRequestFrame
 28447 ;;		_RADIO_Transmit
 28448 ;;		_SelectChannelForTransmission
 28449 ;;		_SwTimerSetTimeout
 28450 ;;		_SwTimerStart
 28451 ;;		_UpdateJoinInProgress
 28452 ;; This function is called by:
 28453 ;;		_main
 28454 ;; This function uses a non-reentrant model
 28455 ;;
 28456                           
 28457                           	psect	text175
 28458  007DD4                     __ptext175:
 28459                           	opt callstack 0
 28460  007DD4                     _LORAWAN_Join:
 28461                           	opt callstack 16
 28462                           
 28463                           ;incstack = 0
 28464                           ;LORAWAN_Join@activationTypeNew stored from wreg
 28465  007DD4  0100               	movlb	0	; () banked
 28466  007DD6  6FDC               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 28467                           
 28468                           ;lorawan.c: 117: uint8_t bufferIndex;;lorawan.c: 118: LorawanError_t result;;lorawan.c: 
      +                          120: if (loRa.macStatus.macPause == 1)
 28469  007DD8  0102               	movlb	2	; () banked
 28470  007DDA  B108               	btfsc	(_loRa+3)& (0+255),0,b
 28471  007DDC  0012               	return	
 28472                           
 28473                           ; BSR set to: 2
 28474                           ;lorawan.c: 123: };lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 28475  007DDE  BF07               	btfsc	(_loRa+2)& (0+255),7,b
 28476  007DE0  0012               	return	
 28477                           
 28478                           ; BSR set to: 2
 28479                           ;lorawan.c: 128: };lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 28480  007DE2  5107               	movf	(_loRa+2)& (0+255),w,b
 28481  007DE4  0B0F               	andlw	15
 28482  007DE6  0900               	iorlw	0
 28483  007DE8  A4D8               	btfss	status,2,c
 28484  007DEA  0012               	return	
 28485                           
 28486                           ; BSR set to: 2
 28487                           ;lorawan.c: 133: };lorawan.c: 135: loRa.activationParameters.activationType = activation
      +                          TypeNew;
 28488  007DEC  C0DC  F222         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 28489                           
 28490                           ; BSR set to: 2
 28491                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 28492  007DF0  0100               	movlb	0	; () banked
 28493  007DF2  51DC               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 28494  007DF4  A4D8               	btfss	status,2,c
 28495  007DF6  D024               	goto	l1511
 28496                           
 28497                           ; BSR set to: 0
 28498                           ;lorawan.c: 138: {;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.a
      +                          pplicationEui == 0) || (loRa.macKeys.applicationKey == 0) )
 28499  007DF8  0102               	movlb	2	; () banked
 28500  007DFA  A1AA               	btfss	(_loRa+165)& (0+255),0,b
 28501  007DFC  0012               	return	
 28502                           
 28503                           ; BSR set to: 2
 28504  007DFE  A3AA               	btfss	(_loRa+165)& (0+255),1,b
 28505  007E00  0012               	return	
 28506                           
 28507                           ; BSR set to: 2
 28508  007E02  A7AA               	btfss	(_loRa+165)& (0+255),3,b
 28509  007E04  0012               	return	
 28510                           
 28511                           ; BSR set to: 2
 28512                           ;lorawan.c: 144: else;lorawan.c: 145: {;lorawan.c: 146: bufferIndex = PrepareJoinRequest
      +                          Frame ();
 28513  007E06  EC6E  F02B         	call	_PrepareJoinRequestFrame	;wreg free
 28514  007E0A  0100               	movlb	0	; () banked
 28515  007E0C  6FDA               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 28516                           
 28517                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 28518  007E0E  0E00               	movlw	0
 28519  007E10  EC8A  F046         	call	_SelectChannelForTransmission
 28520  007E14  0100               	movlb	0	; () banked
 28521  007E16  6FDB               	movwf	LORAWAN_Join@result& (0+255),b
 28522                           
 28523                           ; BSR set to: 0
 28524                           ;lorawan.c: 149: if (result == OK)
 28525  007E18  51DB               	movf	LORAWAN_Join@result& (0+255),w,b
 28526  007E1A  A4D8               	btfss	status,2,c
 28527  007E1C  0012               	return	
 28528                           
 28529                           ; BSR set to: 0
 28530                           ;lorawan.c: 150: {;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 28531  007E1E  0EB8               	movlw	low _macBuffer
 28532  007E20  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 28533  007E22  0E06               	movlw	high _macBuffer
 28534  007E24  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 28535  007E26  C0DA  F0AB         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 28536  007E2A  EC06  F01F         	call	_RADIO_Transmit	;wreg free
 28537  007E2E  0100               	movlb	0	; () banked
 28538  007E30  51A9               	movf	?_RADIO_Transmit& (0+255),w,b
 28539  007E32  11AA               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 28540  007E34  A4D8               	btfss	status,2,c
 28541  007E36  0012               	return	
 28542                           
 28543                           ; BSR set to: 0
 28544                           ;lorawan.c: 152: {;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 28545  007E38  0E01               	movlw	1
 28546  007E3A  ECE0  F052         	call	_UpdateJoinInProgress
 28547  007E3E  0012               	return	
 28548  007E40                     l1511:
 28549                           
 28550                           ; BSR set to: 0
 28551                           ;lorawan.c: 167: else;lorawan.c: 168: {;lorawan.c: 170: if ( (loRa.macKeys.applicationSe
      +                          ssionKey == 0) || (loRa.macKeys.networkSessionKey == 0) || (loRa.macKeys.deviceAddress =
      +                          = 0) )
 28552  007E40  0102               	movlb	2	; () banked
 28553  007E42  ABAA               	btfss	(_loRa+165)& (0+255),5,b
 28554  007E44  0012               	return	
 28555                           
 28556                           ; BSR set to: 2
 28557  007E46  A9AA               	btfss	(_loRa+165)& (0+255),4,b
 28558  007E48  0012               	return	
 28559                           
 28560                           ; BSR set to: 2
 28561  007E4A  A5AA               	btfss	(_loRa+165)& (0+255),2,b
 28562  007E4C  0012               	return	
 28563                           
 28564                           ; BSR set to: 2
 28565                           ;lorawan.c: 174: else;lorawan.c: 175: {;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 28566  007E4E  0E07               	movlw	7
 28567  007E50  ECE0  F052         	call	_UpdateJoinInProgress
 28568                           
 28569                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 28570  007E54  0E8F               	movlw	143
 28571  007E56  0100               	movlb	0	; () banked
 28572  007E58  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 28573  007E5A  0E02               	movlw	2
 28574  007E5C  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 28575  007E5E  0E00               	movlw	0
 28576  007E60  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 28577  007E62  0E00               	movlw	0
 28578  007E64  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 28579  007E66  0102               	movlb	2	; () banked
 28580  007E68  51F8               	movf	(_loRa+243)& (0+255),w,b
 28581  007E6A  EC7F  F04C         	call	_SwTimerSetTimeout
 28582                           
 28583                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 28584  007E6E  0102               	movlb	2	; () banked
 28585  007E70  51F8               	movf	(_loRa+243)& (0+255),w,b
 28586  007E72  EC73  F040         	call	_SwTimerStart
 28587  007E76  0012               	return		;funcret
 28588  007E78                     __end_of_LORAWAN_Join:
 28589                           	opt callstack 0
 28590                           
 28591 ;; *************** function _UpdateJoinInProgress *****************
 28592 ;; Defined at:
 28593 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28594 ;; Parameters:    Size  Location     Type
 28595 ;;  state           1    wreg     unsigned char 
 28596 ;; Auto vars:     Size  Location     Type
 28597 ;;  state           1    0[BANK0 ] unsigned char 
 28598 ;; Return value:  Size  Location     Type
 28599 ;;                  1    wreg      void 
 28600 ;; Registers used:
 28601 ;;		wreg, status,2, status,0
 28602 ;; Tracked objects:
 28603 ;;		On entry : 0/0
 28604 ;;		On exit  : 0/0
 28605 ;;		Unchanged: 0/0
 28606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28611 ;;Total ram usage:        1 bytes
 28612 ;; Hardware stack levels used:    1
 28613 ;; Hardware stack levels required when called:    7
 28614 ;; This function calls:
 28615 ;;		Nothing
 28616 ;; This function is called by:
 28617 ;;		_LORAWAN_Join
 28618 ;; This function uses a non-reentrant model
 28619 ;;
 28620                           
 28621                           	psect	text176
 28622  00A5C0                     __ptext176:
 28623                           	opt callstack 0
 28624  00A5C0                     _UpdateJoinInProgress:
 28625                           	opt callstack 22
 28626                           
 28627                           ;incstack = 0
 28628                           ;UpdateJoinInProgress@state stored from wreg
 28629  00A5C0  0100               	movlb	0	; () banked
 28630  00A5C2  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 28631                           
 28632                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 28633  00A5C4  0102               	movlb	2	; () banked
 28634  00A5C6  9907               	bcf	(_loRa+2)& (0+255),4,b
 28635                           
 28636                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 28637  00A5C8  8505               	bsf	_loRa& (0+255),2,b
 28638                           
 28639                           ; BSR set to: 2
 28640                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 28641  00A5CA  5107               	movf	(_loRa+2)& (0+255),w,b
 28642  00A5CC  0100               	movlb	0	; () banked
 28643  00A5CE  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28644  00A5D0  0BF0               	andlw	-16
 28645  00A5D2  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28646  00A5D4  0102               	movlb	2	; () banked
 28647  00A5D6  6F07               	movwf	(_loRa+2)& (0+255),b
 28648                           
 28649                           ; BSR set to: 2
 28650  00A5D8  0012               	return		;funcret
 28651  00A5DA                     __end_of_UpdateJoinInProgress:
 28652                           	opt callstack 0
 28653                           
 28654 ;; *************** function _SelectChannelForTransmission *****************
 28655 ;; Defined at:
 28656 ;;		line 920 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28657 ;; Parameters:    Size  Location     Type
 28658 ;;  transmission    1    wreg     unsigned char 
 28659 ;; Auto vars:     Size  Location     Type
 28660 ;;  transmission    1   83[BANK0 ] unsigned char 
 28661 ;;  channelIndex    1   85[BANK0 ] unsigned char 
 28662 ;;  result          1   84[BANK0 ] enum E6118
 28663 ;; Return value:  Size  Location     Type
 28664 ;;                  1    wreg      enum E6118
 28665 ;; Registers used:
 28666 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28667 ;; Tracked objects:
 28668 ;;		On entry : 0/0
 28669 ;;		On exit  : 0/0
 28670 ;;		Unchanged: 0/0
 28671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28673 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28675 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28676 ;;Total ram usage:        3 bytes
 28677 ;; Hardware stack levels used:    1
 28678 ;; Hardware stack levels required when called:   11
 28679 ;; This function calls:
 28680 ;;		_ConfigureRadioTx
 28681 ;;		_SearchAvailableChannel
 28682 ;; This function is called by:
 28683 ;;		_LORAWAN_RxTimeout
 28684 ;;		_LORAWAN_Join
 28685 ;;		_LORAWAN_Send
 28686 ;;		_AckRetransmissionCallback
 28687 ;;		_UnconfirmedTransmissionCallback
 28688 ;; This function uses a non-reentrant model
 28689 ;;
 28690                           
 28691                           	psect	text177
 28692  008D14                     __ptext177:
 28693                           	opt callstack 0
 28694  008D14                     _SelectChannelForTransmission:
 28695                           	opt callstack 16
 28696                           
 28697                           ; BSR set to: 2
 28698                           ;incstack = 0
 28699                           ;SelectChannelForTransmission@transmissionType stored from wreg
 28700  008D14  0100               	movlb	0	; () banked
 28701  008D16  6FB3               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 28702                           
 28703                           ;lorawan_eu.c: 923: uint8_t channelIndex;;lorawan_eu.c: 925: result = SearchAvailableCha
      +                          nnel (16, transmissionType, &channelIndex);
 28704  008D18  C0B3  F0A7         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 28705  008D1C  0EB5               	movlw	low SelectChannelForTransmission@channelIndex
 28706  008D1E  0100               	movlb	0	; () banked
 28707  008D20  6FA8               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 28708  008D22  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 28709  008D24  6FA9               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 28710  008D26  0E10               	movlw	16
 28711  008D28  EC1E  F034         	call	_SearchAvailableChannel
 28712  008D2C  0100               	movlb	0	; () banked
 28713  008D2E  6FB4               	movwf	SelectChannelForTransmission@result& (0+255),b
 28714                           
 28715                           ; BSR set to: 0
 28716                           ;lorawan_eu.c: 927: if (result == OK)
 28717  008D30  51B4               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28718  008D32  A4D8               	btfss	status,2,c
 28719  008D34  D020               	goto	l19524
 28720                           
 28721                           ; BSR set to: 0
 28722                           ;lorawan_eu.c: 928: {;lorawan_eu.c: 929: loRa.lastUsedChannelIndex = channelIndex;
 28723  008D36  C0B5  F2DF         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 28724                           
 28725                           ; BSR set to: 0
 28726                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 28727  008D3A  51B5               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 28728  008D3C  0D0E               	mullw	14
 28729  008D3E  0E14               	movlw	low _Channels
 28730  008D40  24F3               	addwf	prodl,w,c
 28731  008D42  6ED9               	movwf	fsr2l,c
 28732  008D44  0E04               	movlw	high _Channels
 28733  008D46  20F4               	addwfc	prodh,w,c
 28734  008D48  6EDA               	movwf	fsr2h,c
 28735  008D4A  CFDE F218          	movff	postinc2,_loRa+19
 28736  008D4E  CFDE F219          	movff	postinc2,_loRa+20
 28737  008D52  CFDE F21A          	movff	postinc2,_loRa+21
 28738  008D56  CFDE F21B          	movff	postinc2,_loRa+22
 28739                           
 28740                           ; BSR set to: 0
 28741                           ;lorawan_eu.c: 931: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 28742  008D5A  C2E4  F21C         	movff	_loRa+223,_loRa+23
 28743                           
 28744                           ; BSR set to: 0
 28745                           ;lorawan_eu.c: 933: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 28746  008D5E  C218  F073         	movff	_loRa+19,ConfigureRadioTx@freq
 28747  008D62  C219  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
 28748  008D66  C21A  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
 28749  008D6A  C21B  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
 28750  008D6E  0102               	movlb	2	; () banked
 28751  008D70  511C               	movf	(_loRa+23)& (0+255),w,b
 28752  008D72  EC3E  F04B         	call	_ConfigureRadioTx
 28753  008D76                     l19524:
 28754                           
 28755                           ;lorawan_eu.c: 934: };lorawan_eu.c: 935: return result;
 28756  008D76  0100               	movlb	0	; () banked
 28757  008D78  51B4               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28758                           
 28759                           ; BSR set to: 0
 28760  008D7A  0012               	return		;funcret
 28761  008D7C                     __end_of_SelectChannelForTransmission:
 28762                           	opt callstack 0
 28763                           
 28764 ;; *************** function _SearchAvailableChannel *****************
 28765 ;; Defined at:
 28766 ;;		line 779 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28767 ;; Parameters:    Size  Location     Type
 28768 ;;  maxChannels     1    wreg     unsigned char 
 28769 ;;  transmission    1   71[BANK0 ] unsigned char 
 28770 ;;  channelIndex    2   72[BANK0 ] PTR unsigned char 
 28771 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 28772 ;; Auto vars:     Size  Location     Type
 28773 ;;  maxChannels     1   80[BANK0 ] unsigned char 
 28774 ;;  i               1   82[BANK0 ] unsigned char 
 28775 ;;  randomNumber    1   81[BANK0 ] unsigned char 
 28776 ;;  result          1   79[BANK0 ] enum E6118
 28777 ;;  randomNumber    1   78[BANK0 ] unsigned char 
 28778 ;; Return value:  Size  Location     Type
 28779 ;;                  1    wreg      enum E6118
 28780 ;; Registers used:
 28781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28782 ;; Tracked objects:
 28783 ;;		On entry : 0/0
 28784 ;;		On exit  : 0/0
 28785 ;;		Unchanged: 0/0
 28786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28787 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28788 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28789 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28790 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28791 ;;Total ram usage:       12 bytes
 28792 ;; Hardware stack levels used:    1
 28793 ;; Hardware stack levels required when called:   10
 28794 ;; This function calls:
 28795 ;;		_Random
 28796 ;; This function is called by:
 28797 ;;		_SelectChannelForTransmission
 28798 ;;		_LORAWAN_RxDone
 28799 ;; This function uses a non-reentrant model
 28800 ;;
 28801                           
 28802                           	psect	text178
 28803  00683C                     __ptext178:
 28804                           	opt callstack 0
 28805  00683C                     _SearchAvailableChannel:
 28806                           	opt callstack 16
 28807                           
 28808                           ; BSR set to: 0
 28809                           ;incstack = 0
 28810                           ;SearchAvailableChannel@maxChannels stored from wreg
 28811  00683C  0100               	movlb	0	; () banked
 28812  00683E  6FB0               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 28813                           
 28814                           ;lorawan_eu.c: 781: uint8_t randomNumberCopy, randomNumber, i;;lorawan_eu.c: 782: Lorawa
      +                          nError_t result = OK;
 28815  006840  0E00               	movlw	0
 28816  006842  0100               	movlb	0	; () banked
 28817  006844  6FAF               	movwf	SearchAvailableChannel@result& (0+255),b
 28818                           
 28819                           ; BSR set to: 0
 28820                           ;lorawan_eu.c: 784: randomNumber = Random (maxChannels) + 1;
 28821  006846  C0B0  F0A5         	movff	SearchAvailableChannel@maxChannels,Random@max
 28822  00684A  6BA6               	clrf	(Random@max+1)& (0+255),b
 28823  00684C  EC73  F051         	call	_Random	;wreg free
 28824  006850  0100               	movlb	0	; () banked
 28825  006852  29A5               	incf	?_Random& (0+255),w,b
 28826  006854  6FB1               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 28827                           
 28828                           ; BSR set to: 0
 28829                           ;lorawan_eu.c: 785: randomNumberCopy = randomNumber;
 28830  006856  C0B1  F0AE         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 28831                           
 28832                           ;lorawan_eu.c: 787: while (randomNumber)
 28833  00685A  D060               	goto	l19160
 28834  00685C                     l19134:
 28835                           
 28836                           ; BSR set to: 0
 28837                           ;lorawan_eu.c: 788: {;lorawan_eu.c: 789: for (i=0; (i < maxChannels) && (randomNumber !=
      +                           0) ; i++)
 28838  00685C  0E00               	movlw	0
 28839  00685E  6FB2               	movwf	SearchAvailableChannel@i& (0+255),b
 28840  006860  D04F               	goto	l19152
 28841  006862                     l19136:
 28842                           
 28843                           ; BSR set to: 0
 28844                           ;lorawan_eu.c: 790: {;lorawan_eu.c: 791: if ( ( Channels[i].status == 1 ) && ( Channels[
      +                          i].channelTimer == 0 ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loR
      +                          a.currentDataRate <= Channels[i].dataRange.max ) )
 28845  006862  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28846  006864  0D0E               	mullw	14
 28847  006866  0E18               	movlw	low (_Channels+4)
 28848  006868  24F3               	addwf	prodl,w,c
 28849  00686A  6ED9               	movwf	fsr2l,c
 28850  00686C  0E04               	movlw	high (_Channels+4)
 28851  00686E  20F4               	addwfc	prodh,w,c
 28852  006870  6EDA               	movwf	fsr2h,c
 28853  006872  04DE               	decf	postinc2,w,c
 28854  006874  A4D8               	btfss	status,2,c
 28855  006876  D042               	goto	l1154
 28856                           
 28857                           ; BSR set to: 0
 28858  006878  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28859  00687A  0D0E               	mullw	14
 28860  00687C  0E1C               	movlw	low (_Channels+8)
 28861  00687E  24F3               	addwf	prodl,w,c
 28862  006880  6ED9               	movwf	fsr2l,c
 28863  006882  0E04               	movlw	high (_Channels+8)
 28864  006884  20F4               	addwfc	prodh,w,c
 28865  006886  6EDA               	movwf	fsr2h,c
 28866  006888  50DE               	movf	postinc2,w,c
 28867  00688A  10DE               	iorwf	postinc2,w,c
 28868  00688C  10DE               	iorwf	postinc2,w,c
 28869  00688E  10DE               	iorwf	postinc2,w,c
 28870  006890  A4D8               	btfss	status,2,c
 28871  006892  D034               	goto	l1154
 28872                           
 28873                           ; BSR set to: 0
 28874  006894  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28875  006896  0D0E               	mullw	14
 28876  006898  0E19               	movlw	low (_Channels+5)
 28877  00689A  24F3               	addwf	prodl,w,c
 28878  00689C  6ED9               	movwf	fsr2l,c
 28879  00689E  0E04               	movlw	high (_Channels+5)
 28880  0068A0  20F4               	addwfc	prodh,w,c
 28881  0068A2  6EDA               	movwf	fsr2h,c
 28882  0068A4  0104               	movlb	4	; () banked
 28883  0068A6  50DF               	movf	223,w,c
 28884  0068A8  0B0F               	andlw	15
 28885  0068AA  0100               	movlb	0	; () banked
 28886  0068AC  6FAA               	movwf	??_SearchAvailableChannel& (0+255),b
 28887  0068AE  51AA               	movf	??_SearchAvailableChannel& (0+255),w,b
 28888  0068B0  0102               	movlb	2	; () banked
 28889  0068B2  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 28890  0068B4  A0D8               	btfss	status,0,c
 28891  0068B6  D022               	goto	l1154
 28892                           
 28893                           ; BSR set to: 2
 28894  0068B8  0100               	movlb	0	; () banked
 28895  0068BA  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28896  0068BC  0D0E               	mullw	14
 28897  0068BE  0E19               	movlw	low (_Channels+5)
 28898  0068C0  24F3               	addwf	prodl,w,c
 28899  0068C2  6ED9               	movwf	fsr2l,c
 28900  0068C4  0E04               	movlw	high (_Channels+5)
 28901  0068C6  20F4               	addwfc	prodh,w,c
 28902  0068C8  6EDA               	movwf	fsr2h,c
 28903  0068CA  0104               	movlb	4	; () banked
 28904  0068CC  38DF               	swapf	223,w,c
 28905  0068CE  0B0F               	andlw	15
 28906  0068D0  0100               	movlb	0	; () banked
 28907  0068D2  6FAA               	movwf	??_SearchAvailableChannel& (0+255),b
 28908  0068D4  0102               	movlb	2	; () banked
 28909  0068D6  51E4               	movf	(_loRa+223)& (0+255),w,b
 28910  0068D8  0100               	movlb	0	; () banked
 28911  0068DA  5DAA               	subwf	??_SearchAvailableChannel& (0+255),w,b
 28912  0068DC  A0D8               	btfss	status,0,c
 28913  0068DE  D00E               	goto	l1154
 28914                           
 28915                           ; BSR set to: 0
 28916                           ;lorawan_eu.c: 792: {;lorawan_eu.c: 793: if (transmissionType == 0)
 28917  0068E0  51A7               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 28918  0068E2  A4D8               	btfss	status,2,c
 28919  0068E4  D00A               	goto	u20530
 28920                           
 28921                           ; BSR set to: 0
 28922                           ;lorawan_eu.c: 794: {;lorawan_eu.c: 795: if ( Channels[i].joinRequestChannel == 1 )
 28923  0068E6  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28924  0068E8  0D0E               	mullw	14
 28925  0068EA  0E20               	movlw	low (_Channels+12)
 28926  0068EC  24F3               	addwf	prodl,w,c
 28927  0068EE  6ED9               	movwf	fsr2l,c
 28928  0068F0  0E04               	movlw	high (_Channels+12)
 28929  0068F2  20F4               	addwfc	prodh,w,c
 28930  0068F4  6EDA               	movwf	fsr2h,c
 28931  0068F6  04DE               	decf	postinc2,w,c
 28932  0068F8  B4D8               	btfsc	status,2,c
 28933  0068FA                     u20530:
 28934                           
 28935                           ; BSR set to: 0
 28936                           ;lorawan_eu.c: 796: {;lorawan_eu.c: 797: randomNumber --;
 28937  0068FA  07B1               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 28938  0068FC                     l1154:
 28939  0068FC  0100               	movlb	0	; () banked
 28940  0068FE  2BB2               	incf	SearchAvailableChannel@i& (0+255),f,b
 28941  006900                     l19152:
 28942                           
 28943                           ; BSR set to: 0
 28944  006900  51B0               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 28945  006902  5DB2               	subwf	SearchAvailableChannel@i& (0+255),w,b
 28946  006904  B0D8               	btfsc	status,0,c
 28947  006906  D003               	goto	u20550
 28948                           
 28949                           ; BSR set to: 0
 28950  006908  51B1               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28951  00690A  A4D8               	btfss	status,2,c
 28952  00690C  D7AA               	goto	l19136
 28953  00690E                     u20550:
 28954                           
 28955                           ; BSR set to: 0
 28956                           ;lorawan_eu.c: 803: };lorawan_eu.c: 804: };lorawan_eu.c: 805: };lorawan_eu.c: 807: if ( 
      +                          randomNumber == randomNumberCopy )
 28957  00690E  51AE               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 28958  006910  19B1               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28959  006912  A4D8               	btfss	status,2,c
 28960  006914  D003               	goto	l19160
 28961                           
 28962                           ; BSR set to: 0
 28963                           ;lorawan_eu.c: 808: {;lorawan_eu.c: 809: result = NO_CHANNELS_FOUND;
 28964  006916  0E09               	movlw	9
 28965  006918  6FAF               	movwf	SearchAvailableChannel@result& (0+255),b
 28966                           
 28967                           ;lorawan_eu.c: 810: break;
 28968  00691A  D003               	goto	u20570
 28969  00691C                     l19160:
 28970                           
 28971                           ; BSR set to: 0
 28972  00691C  51B1               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28973  00691E  A4D8               	btfss	status,2,c
 28974  006920  D79D               	goto	l19134
 28975  006922                     u20570:
 28976                           
 28977                           ; BSR set to: 0
 28978                           ;lorawan_eu.c: 811: };lorawan_eu.c: 812: };lorawan_eu.c: 814: if ( i != 0)
 28979  006922  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28980  006924  B4D8               	btfsc	status,2,c
 28981  006926  D007               	goto	l19166
 28982                           
 28983                           ; BSR set to: 0
 28984                           ;lorawan_eu.c: 815: {;lorawan_eu.c: 816: *channelIndex = i - 1;
 28985  006928  05B2               	decf	SearchAvailableChannel@i& (0+255),w,b
 28986  00692A  C0A8  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 28987  00692E  C0A9  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 28988  006932  6EDF               	movwf	indf2,c
 28989                           
 28990                           ;lorawan_eu.c: 817: }
 28991  006934  D002               	goto	l1164
 28992  006936                     l19166:
 28993                           
 28994                           ; BSR set to: 0
 28995                           ;lorawan_eu.c: 818: else;lorawan_eu.c: 819: {;lorawan_eu.c: 820: result = NO_CHANNELS_FO
      +                          UND;
 28996  006936  0E09               	movlw	9
 28997  006938  6FAF               	movwf	SearchAvailableChannel@result& (0+255),b
 28998  00693A                     l1164:
 28999                           
 29000                           ; BSR set to: 0
 29001                           ;lorawan_eu.c: 821: };lorawan_eu.c: 822: return result;
 29002  00693A  51AF               	movf	SearchAvailableChannel@result& (0+255),w,b
 29003                           
 29004                           ; BSR set to: 0
 29005  00693C  0012               	return		;funcret
 29006  00693E                     __end_of_SearchAvailableChannel:
 29007                           	opt callstack 0
 29008                           
 29009 ;; *************** function _ConfigureRadioTx *****************
 29010 ;; Defined at:
 29011 ;;		line 1256 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29012 ;; Parameters:    Size  Location     Type
 29013 ;;  dataRate        1    wreg     unsigned char 
 29014 ;;  freq            4   19[BANK0 ] unsigned long 
 29015 ;; Auto vars:     Size  Location     Type
 29016 ;;  dataRate        1   23[BANK0 ] unsigned char 
 29017 ;;  txPower         1   24[BANK0 ] char 
 29018 ;; Return value:  Size  Location     Type
 29019 ;;                  1    wreg      void 
 29020 ;; Registers used:
 29021 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29022 ;; Tracked objects:
 29023 ;;		On entry : 0/0
 29024 ;;		On exit  : 0/0
 29025 ;;		Unchanged: 0/0
 29026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29027 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29030 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29031 ;;Total ram usage:        6 bytes
 29032 ;; Hardware stack levels used:    1
 29033 ;; Hardware stack levels required when called:   10
 29034 ;; This function calls:
 29035 ;;		_ConfigureRadio
 29036 ;;		_RADIO_SetCRC
 29037 ;;		_RADIO_SetIQInverted
 29038 ;;		_RADIO_SetOutputPower
 29039 ;; This function is called by:
 29040 ;;		_SelectChannelForTransmission
 29041 ;; This function uses a non-reentrant model
 29042 ;;
 29043                           
 29044                           	psect	text179
 29045  00967C                     __ptext179:
 29046                           	opt callstack 0
 29047  00967C                     _ConfigureRadioTx:
 29048                           	opt callstack 16
 29049                           
 29050                           ; BSR set to: 0
 29051                           ;incstack = 0
 29052                           ;ConfigureRadioTx@dataRate stored from wreg
 29053  00967C  0100               	movlb	0	; () banked
 29054  00967E  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 29055                           
 29056                           ;lorawan_eu.c: 1258: int8_t txPower;;lorawan_eu.c: 1260: ConfigureRadio(dataRate, freq);
 29057  009680  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 29058  009684  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 29059  009688  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 29060  00968C  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 29061  009690  0100               	movlb	0	; () banked
 29062  009692  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 29063  009694  ECDA  F03F         	call	_ConfigureRadio
 29064                           
 29065                           ;lorawan_eu.c: 1263: {;lorawan_eu.c: 1264: txPower = txPower868[loRa.txPower];
 29066  009698  0E42               	movlw	low _txPower868
 29067  00969A  0102               	movlb	2	; () banked
 29068  00969C  25E6               	addwf	(_loRa+225)& (0+255),w,b
 29069  00969E  6EF6               	movwf	tblptrl,c
 29070  0096A0  6AF7               	clrf	tblptrh,c
 29071  0096A2  0EFF               	movlw	high _txPower868
 29072  0096A4  22F7               	addwfc	tblptrh,f,c
 29073  0096A6                     	if	1	;There are 3 active tblptr bytes
 29074  0096A6  6AF8               	clrf	tblptru,c
 29075  0096A8  0E00               	movlw	low (__mediumconst shr (0+16))
 29076  0096AA  22F8               	addwfc	tblptru,f,c
 29077  0096AC                     	endif
 29078  0096AC  0008               	tblrd		*
 29079  0096AE  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
 29080                           
 29081                           ; BSR set to: 2
 29082                           ;lorawan_eu.c: 1269: };lorawan_eu.c: 1271: RADIO_SetOutputPower (txPower);
 29083                           
 29084                           ;lorawan_eu.c: 1265: }
 29085  0096B2  0100               	movlb	0	; () banked
 29086  0096B4  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 29087  0096B6  EC0A  F054         	call	_RADIO_SetOutputPower
 29088                           
 29089                           ;lorawan_eu.c: 1273: RADIO_SetCRC(1);
 29090  0096BA  0E01               	movlw	1
 29091  0096BC  EC14  F054         	call	_RADIO_SetCRC
 29092                           
 29093                           ;lorawan_eu.c: 1274: RADIO_SetIQInverted(0);
 29094  0096C0  0E00               	movlw	0
 29095  0096C2  EC0F  F054         	call	_RADIO_SetIQInverted
 29096  0096C6  0012               	return		;funcret
 29097  0096C8                     __end_of_ConfigureRadioTx:
 29098                           	opt callstack 0
 29099                           
 29100 ;; *************** function _RADIO_SetOutputPower *****************
 29101 ;; Defined at:
 29102 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29103 ;; Parameters:    Size  Location     Type
 29104 ;;  power           1    wreg     char 
 29105 ;; Auto vars:     Size  Location     Type
 29106 ;;  power           1    0[BANK0 ] char 
 29107 ;; Return value:  Size  Location     Type
 29108 ;;                  1    wreg      void 
 29109 ;; Registers used:
 29110 ;;		wreg
 29111 ;; Tracked objects:
 29112 ;;		On entry : 0/0
 29113 ;;		On exit  : 0/0
 29114 ;;		Unchanged: 0/0
 29115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29119 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29120 ;;Total ram usage:        1 bytes
 29121 ;; Hardware stack levels used:    1
 29122 ;; Hardware stack levels required when called:    7
 29123 ;; This function calls:
 29124 ;;		Nothing
 29125 ;; This function is called by:
 29126 ;;		_ConfigureRadioTx
 29127 ;; This function uses a non-reentrant model
 29128 ;;
 29129                           
 29130                           	psect	text180
 29131  00A814                     __ptext180:
 29132                           	opt callstack 0
 29133  00A814                     _RADIO_SetOutputPower:
 29134                           	opt callstack 18
 29135                           
 29136                           ;incstack = 0
 29137                           ;RADIO_SetOutputPower@power stored from wreg
 29138  00A814  0100               	movlb	0	; () banked
 29139  00A816  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 29140                           
 29141                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 29142  00A818  C060  F144         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 29143  00A81C  0012               	return		;funcret
 29144  00A81E                     __end_of_RADIO_SetOutputPower:
 29145                           	opt callstack 0
 29146                           
 29147 ;; *************** function _RADIO_SetIQInverted *****************
 29148 ;; Defined at:
 29149 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29150 ;; Parameters:    Size  Location     Type
 29151 ;;  iqInverted      1    wreg     unsigned char 
 29152 ;; Auto vars:     Size  Location     Type
 29153 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 29154 ;; Return value:  Size  Location     Type
 29155 ;;                  1    wreg      void 
 29156 ;; Registers used:
 29157 ;;		wreg
 29158 ;; Tracked objects:
 29159 ;;		On entry : 0/0
 29160 ;;		On exit  : 0/0
 29161 ;;		Unchanged: 0/0
 29162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29166 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29167 ;;Total ram usage:        1 bytes
 29168 ;; Hardware stack levels used:    1
 29169 ;; Hardware stack levels required when called:    7
 29170 ;; This function calls:
 29171 ;;		Nothing
 29172 ;; This function is called by:
 29173 ;;		_ConfigureRadioTx
 29174 ;;		_ConfigureRadioRx
 29175 ;; This function uses a non-reentrant model
 29176 ;;
 29177                           
 29178                           	psect	text181
 29179  00A81E                     __ptext181:
 29180                           	opt callstack 0
 29181  00A81E                     _RADIO_SetIQInverted:
 29182                           	opt callstack 18
 29183                           
 29184                           ;incstack = 0
 29185                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 29186  00A81E  0100               	movlb	0	; () banked
 29187  00A820  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 29188                           
 29189                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 29190  00A822  C060  F149         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 29191  00A826  0012               	return		;funcret
 29192  00A828                     __end_of_RADIO_SetIQInverted:
 29193                           	opt callstack 0
 29194                           
 29195 ;; *************** function _RADIO_SetCRC *****************
 29196 ;; Defined at:
 29197 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29198 ;; Parameters:    Size  Location     Type
 29199 ;;  crc             1    wreg     unsigned char 
 29200 ;; Auto vars:     Size  Location     Type
 29201 ;;  crc             1    0[BANK0 ] unsigned char 
 29202 ;; Return value:  Size  Location     Type
 29203 ;;                  1    wreg      void 
 29204 ;; Registers used:
 29205 ;;		wreg
 29206 ;; Tracked objects:
 29207 ;;		On entry : 0/0
 29208 ;;		On exit  : 0/0
 29209 ;;		Unchanged: 0/0
 29210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29214 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29215 ;;Total ram usage:        1 bytes
 29216 ;; Hardware stack levels used:    1
 29217 ;; Hardware stack levels required when called:    7
 29218 ;; This function calls:
 29219 ;;		Nothing
 29220 ;; This function is called by:
 29221 ;;		_ConfigureRadioTx
 29222 ;;		_ConfigureRadioRx
 29223 ;; This function uses a non-reentrant model
 29224 ;;
 29225                           
 29226                           	psect	text182
 29227  00A828                     __ptext182:
 29228                           	opt callstack 0
 29229  00A828                     _RADIO_SetCRC:
 29230                           	opt callstack 18
 29231                           
 29232                           ;incstack = 0
 29233                           ;RADIO_SetCRC@crc stored from wreg
 29234  00A828  0100               	movlb	0	; () banked
 29235  00A82A  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 29236                           
 29237                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 29238  00A82C  C060  F145         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 29239  00A830  0012               	return		;funcret
 29240  00A832                     __end_of_RADIO_SetCRC:
 29241                           	opt callstack 0
 29242                           
 29243 ;; *************** function _ConfigureRadio *****************
 29244 ;; Defined at:
 29245 ;;		line 864 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29246 ;; Parameters:    Size  Location     Type
 29247 ;;  dataRate        1    wreg     unsigned char 
 29248 ;;  freq            4   14[BANK0 ] unsigned long 
 29249 ;; Auto vars:     Size  Location     Type
 29250 ;;  dataRate        1   18[BANK0 ] unsigned char 
 29251 ;; Return value:  Size  Location     Type
 29252 ;;                  1    wreg      void 
 29253 ;; Registers used:
 29254 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29255 ;; Tracked objects:
 29256 ;;		On entry : 0/0
 29257 ;;		On exit  : 0/0
 29258 ;;		Unchanged: 0/0
 29259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29260 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29261 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29263 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29264 ;;Total ram usage:        5 bytes
 29265 ;; Hardware stack levels used:    1
 29266 ;; Hardware stack levels required when called:    9
 29267 ;; This function calls:
 29268 ;;		_RADIO_SetBandwidth
 29269 ;;		_RADIO_SetChannelFrequency
 29270 ;;		_RADIO_SetFSKSyncWord
 29271 ;;		_RADIO_SetFrequencyHopPeriod
 29272 ;;		_RADIO_SetLoRaSyncWord
 29273 ;;		_RADIO_SetModulation
 29274 ;;		_RADIO_SetSpreadingFactor
 29275 ;; This function is called by:
 29276 ;;		_ConfigureRadioTx
 29277 ;;		_ConfigureRadioRx
 29278 ;; This function uses a non-reentrant model
 29279 ;;
 29280                           
 29281                           	psect	text183
 29282  007FB4                     __ptext183:
 29283                           	opt callstack 0
 29284  007FB4                     _ConfigureRadio:
 29285                           	opt callstack 16
 29286                           
 29287                           ;incstack = 0
 29288                           ;ConfigureRadio@dataRate stored from wreg
 29289  007FB4  0100               	movlb	0	; () banked
 29290  007FB6  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
 29291                           
 29292                           ;lorawan_eu.c: 866: RADIO_SetModulation (modulation[dataRate]);
 29293  007FB8  0E07               	movlw	low _modulation
 29294  007FBA  0100               	movlb	0	; () banked
 29295  007FBC  2572               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 29296  007FBE  6EF6               	movwf	tblptrl,c
 29297  007FC0  6AF7               	clrf	tblptrh,c
 29298  007FC2  0EFF               	movlw	high _modulation
 29299  007FC4  22F7               	addwfc	tblptrh,f,c
 29300  007FC6                     	if	1	;There are 3 active tblptr bytes
 29301  007FC6  6AF8               	clrf	tblptru,c
 29302  007FC8  0E00               	movlw	low (__mediumconst shr (0+16))
 29303  007FCA  22F8               	addwfc	tblptru,f,c
 29304  007FCC                     	endif
 29305  007FCC  0008               	tblrd		*
 29306  007FCE  50F5               	movf	tablat,w,c
 29307  007FD0  EC1E  F054         	call	_RADIO_SetModulation
 29308                           
 29309                           ;lorawan_eu.c: 867: RADIO_SetChannelFrequency (freq);
 29310  007FD4  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 29311  007FD8  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 29312  007FDC  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 29313  007FE0  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 29314  007FE4  EC45  F041         	call	_RADIO_SetChannelFrequency	;wreg free
 29315                           
 29316                           ;lorawan_eu.c: 868: RADIO_SetFrequencyHopPeriod (0);
 29317  007FE8  0E00               	movlw	0
 29318  007FEA  0100               	movlb	0	; () banked
 29319  007FEC  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 29320  007FEE  0E00               	movlw	0
 29321  007FF0  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 29322  007FF2  EC23  F054         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 29323                           
 29324                           ;lorawan_eu.c: 870: if (dataRate <= 6)
 29325  007FF6  0E07               	movlw	7
 29326  007FF8  0100               	movlb	0	; () banked
 29327  007FFA  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 29328  007FFC  D020               	goto	l18698
 29329                           
 29330                           ; BSR set to: 0
 29331                           ;lorawan_eu.c: 871: {;lorawan_eu.c: 873: RADIO_SetSpreadingFactor (spreadingFactor[dataR
      +                          ate]);
 29332  007FFE  0E35               	movlw	low _spreadingFactor
 29333  008000  2572               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 29334  008002  6EF6               	movwf	tblptrl,c
 29335  008004  6AF7               	clrf	tblptrh,c
 29336  008006  0EFF               	movlw	high _spreadingFactor
 29337  008008  22F7               	addwfc	tblptrh,f,c
 29338  00800A                     	if	1	;There are 3 active tblptr bytes
 29339  00800A  6AF8               	clrf	tblptru,c
 29340  00800C  0E00               	movlw	low (__mediumconst shr (0+16))
 29341  00800E  22F8               	addwfc	tblptru,f,c
 29342  008010                     	endif
 29343  008010  0008               	tblrd		*
 29344  008012  50F5               	movf	tablat,w,c
 29345  008014  EC19  F054         	call	_RADIO_SetSpreadingFactor
 29346                           
 29347                           ;lorawan_eu.c: 874: RADIO_SetBandwidth (bandwidth[dataRate]);
 29348  008018  0E2E               	movlw	low _bandwidth
 29349  00801A  0100               	movlb	0	; () banked
 29350  00801C  2572               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 29351  00801E  6EF6               	movwf	tblptrl,c
 29352  008020  6AF7               	clrf	tblptrh,c
 29353  008022  0EFF               	movlw	high _bandwidth
 29354  008024  22F7               	addwfc	tblptrh,f,c
 29355  008026                     	if	1	;There are 3 active tblptr bytes
 29356  008026  6AF8               	clrf	tblptru,c
 29357  008028  0E00               	movlw	low (__mediumconst shr (0+16))
 29358  00802A  22F8               	addwfc	tblptru,f,c
 29359  00802C                     	endif
 29360  00802C  0008               	tblrd		*
 29361  00802E  50F5               	movf	tablat,w,c
 29362  008030  EC28  F054         	call	_RADIO_SetBandwidth
 29363                           
 29364                           ;lorawan_eu.c: 875: RADIO_SetLoRaSyncWord(loRa.syncWord);
 29365  008034  0102               	movlb	2	; () banked
 29366  008036  51F9               	movf	(_loRa+244)& (0+255),w,b
 29367  008038  EC2D  F054         	call	_RADIO_SetLoRaSyncWord
 29368                           
 29369                           ;lorawan_eu.c: 876: }
 29370  00803C  0012               	return	
 29371  00803E                     l18698:
 29372                           
 29373                           ; BSR set to: 0
 29374                           ;lorawan_eu.c: 877: else;lorawan_eu.c: 878: {;lorawan_eu.c: 880: RADIO_SetFSKSyncWord(si
      +                          zeof(FskSyncWordBuff) / sizeof(FskSyncWordBuff[0]), (uint8_t*)FskSyncWordBuff);
 29375  00803E  0EF2               	movlw	low _FskSyncWordBuff
 29376  008040  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 29377  008042  0EFF               	movlw	high _FskSyncWordBuff
 29378  008044  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 29379  008046  0E03               	movlw	3
 29380  008048  EC10  F04F         	call	_RADIO_SetFSKSyncWord
 29381  00804C  0012               	return		;funcret
 29382  00804E                     __end_of_ConfigureRadio:
 29383                           	opt callstack 0
 29384                           
 29385 ;; *************** function _RADIO_SetSpreadingFactor *****************
 29386 ;; Defined at:
 29387 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29388 ;; Parameters:    Size  Location     Type
 29389 ;;  spreadingFac    1    wreg     enum E5863
 29390 ;; Auto vars:     Size  Location     Type
 29391 ;;  spreadingFac    1    0[BANK0 ] enum E5863
 29392 ;; Return value:  Size  Location     Type
 29393 ;;                  1    wreg      void 
 29394 ;; Registers used:
 29395 ;;		wreg
 29396 ;; Tracked objects:
 29397 ;;		On entry : 0/0
 29398 ;;		On exit  : 0/0
 29399 ;;		Unchanged: 0/0
 29400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29402 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29404 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29405 ;;Total ram usage:        1 bytes
 29406 ;; Hardware stack levels used:    1
 29407 ;; Hardware stack levels required when called:    7
 29408 ;; This function calls:
 29409 ;;		Nothing
 29410 ;; This function is called by:
 29411 ;;		_ConfigureRadio
 29412 ;; This function uses a non-reentrant model
 29413 ;;
 29414                           
 29415                           	psect	text184
 29416  00A832                     __ptext184:
 29417                           	opt callstack 0
 29418  00A832                     _RADIO_SetSpreadingFactor:
 29419                           	opt callstack 17
 29420                           
 29421                           ;incstack = 0
 29422                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 29423  00A832  0100               	movlb	0	; () banked
 29424  00A834  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 29425                           
 29426                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 29427  00A836  C060  F142         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 29428  00A83A  0012               	return		;funcret
 29429  00A83C                     __end_of_RADIO_SetSpreadingFactor:
 29430                           	opt callstack 0
 29431                           
 29432 ;; *************** function _RADIO_SetModulation *****************
 29433 ;; Defined at:
 29434 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29435 ;; Parameters:    Size  Location     Type
 29436 ;;  modulation      1    wreg     enum E5853
 29437 ;; Auto vars:     Size  Location     Type
 29438 ;;  modulation      1    0[BANK0 ] enum E5853
 29439 ;; Return value:  Size  Location     Type
 29440 ;;                  1    wreg      void 
 29441 ;; Registers used:
 29442 ;;		wreg
 29443 ;; Tracked objects:
 29444 ;;		On entry : 0/0
 29445 ;;		On exit  : 0/0
 29446 ;;		Unchanged: 0/0
 29447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29451 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29452 ;;Total ram usage:        1 bytes
 29453 ;; Hardware stack levels used:    1
 29454 ;; Hardware stack levels required when called:    7
 29455 ;; This function calls:
 29456 ;;		Nothing
 29457 ;; This function is called by:
 29458 ;;		_ConfigureRadio
 29459 ;; This function uses a non-reentrant model
 29460 ;;
 29461                           
 29462                           	psect	text185
 29463  00A83C                     __ptext185:
 29464                           	opt callstack 0
 29465  00A83C                     _RADIO_SetModulation:
 29466                           	opt callstack 17
 29467                           
 29468                           ;incstack = 0
 29469                           ;RADIO_SetModulation@modulation stored from wreg
 29470  00A83C  0100               	movlb	0	; () banked
 29471  00A83E  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 29472                           
 29473                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 29474  00A840  C060  F141         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 29475  00A844  0012               	return		;funcret
 29476  00A846                     __end_of_RADIO_SetModulation:
 29477                           	opt callstack 0
 29478                           
 29479 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 29480 ;; Defined at:
 29481 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29482 ;; Parameters:    Size  Location     Type
 29483 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 29484 ;; Auto vars:     Size  Location     Type
 29485 ;;		None
 29486 ;; Return value:  Size  Location     Type
 29487 ;;                  1    wreg      void 
 29488 ;; Registers used:
 29489 ;;		None
 29490 ;; Tracked objects:
 29491 ;;		On entry : 0/0
 29492 ;;		On exit  : 0/0
 29493 ;;		Unchanged: 0/0
 29494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29499 ;;Total ram usage:        2 bytes
 29500 ;; Hardware stack levels used:    1
 29501 ;; Hardware stack levels required when called:    7
 29502 ;; This function calls:
 29503 ;;		Nothing
 29504 ;; This function is called by:
 29505 ;;		_ConfigureRadio
 29506 ;; This function uses a non-reentrant model
 29507 ;;
 29508                           
 29509                           	psect	text186
 29510  00A846                     __ptext186:
 29511                           	opt callstack 0
 29512  00A846                     _RADIO_SetFrequencyHopPeriod:
 29513                           	opt callstack 17
 29514                           
 29515                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 29516                           
 29517                           ;incstack = 0
 29518  00A846  C060  F147         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 29519  00A84A  C061  F148         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 29520  00A84E  0012               	return		;funcret
 29521  00A850                     __end_of_RADIO_SetFrequencyHopPeriod:
 29522                           	opt callstack 0
 29523                           
 29524 ;; *************** function _RADIO_SetFSKSyncWord *****************
 29525 ;; Defined at:
 29526 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29527 ;; Parameters:    Size  Location     Type
 29528 ;;  syncWordLen     1    wreg     unsigned char 
 29529 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 29530 ;;		 -> FskSyncWordBuff(3), 
 29531 ;; Auto vars:     Size  Location     Type
 29532 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 29533 ;; Return value:  Size  Location     Type
 29534 ;;                  1    wreg      void 
 29535 ;; Registers used:
 29536 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29537 ;; Tracked objects:
 29538 ;;		On entry : 0/0
 29539 ;;		On exit  : 0/0
 29540 ;;		Unchanged: 0/0
 29541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29542 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29543 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29545 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29546 ;;Total ram usage:        3 bytes
 29547 ;; Hardware stack levels used:    1
 29548 ;; Hardware stack levels required when called:    8
 29549 ;; This function calls:
 29550 ;;		_memcpy
 29551 ;; This function is called by:
 29552 ;;		_ConfigureRadio
 29553 ;; This function uses a non-reentrant model
 29554 ;;
 29555                           
 29556                           	psect	text187
 29557  009E20                     __ptext187:
 29558                           	opt callstack 0
 29559  009E20                     _RADIO_SetFSKSyncWord:
 29560                           	opt callstack 16
 29561                           
 29562                           ;incstack = 0
 29563                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 29564  009E20  0100               	movlb	0	; () banked
 29565  009E22  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29566                           
 29567                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 29568  009E24  0E08               	movlw	8
 29569  009E26  0100               	movlb	0	; () banked
 29570  009E28  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29571  009E2A  D002               	goto	l18370
 29572                           
 29573                           ; BSR set to: 0
 29574                           ;radio_driver_SX1276.c: 1627: {;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 29575  009E2C  0E08               	movlw	8
 29576  009E2E  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29577  009E30                     l18370:
 29578                           
 29579                           ; BSR set to: 0
 29580                           ;radio_driver_SX1276.c: 1629: };radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.s
      +                          yncWord, syncWord, syncWordLen);
 29581  009E30  0E38               	movlw	low (_RadioConfiguration+15)
 29582  009E32  6F60               	movwf	memcpy@d1& (0+255),b
 29583  009E34  0E01               	movlw	high (_RadioConfiguration+15)
 29584  009E36  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29585  009E38  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 29586  009E3C  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 29587  009E40  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 29588  009E44  6B65               	clrf	(memcpy@n+1)& (0+255),b
 29589  009E46  ECEC  F047         	call	_memcpy	;wreg free
 29590                           
 29591                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 29592  009E4A  C06D  F140         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 29593  009E4E  0012               	return		;funcret
 29594  009E50                     __end_of_RADIO_SetFSKSyncWord:
 29595                           	opt callstack 0
 29596                           
 29597 ;; *************** function _RADIO_SetChannelFrequency *****************
 29598 ;; Defined at:
 29599 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29600 ;; Parameters:    Size  Location     Type
 29601 ;;  frequency       4    0[BANK0 ] unsigned long 
 29602 ;; Auto vars:     Size  Location     Type
 29603 ;;		None
 29604 ;; Return value:  Size  Location     Type
 29605 ;;                  2    0[BANK0 ] enum E5907
 29606 ;; Registers used:
 29607 ;;		wreg, status,2, status,0
 29608 ;; Tracked objects:
 29609 ;;		On entry : 0/0
 29610 ;;		On exit  : 0/0
 29611 ;;		Unchanged: 0/0
 29612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29616 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29617 ;;Total ram usage:        4 bytes
 29618 ;; Hardware stack levels used:    1
 29619 ;; Hardware stack levels required when called:    7
 29620 ;; This function calls:
 29621 ;;		Nothing
 29622 ;; This function is called by:
 29623 ;;		_ConfigureRadio
 29624 ;; This function uses a non-reentrant model
 29625 ;;
 29626                           
 29627                           	psect	text188
 29628  00828A                     __ptext188:
 29629                           	opt callstack 0
 29630  00828A                     _RADIO_SetChannelFrequency:
 29631                           	opt callstack 17
 29632                           
 29633                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||;
      +                          radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 29634                           
 29635                           ;incstack = 0
 29636  00828A  0E40               	movlw	64
 29637  00828C  0100               	movlb	0	; () banked
 29638  00828E  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29639  008290  0E74               	movlw	116
 29640  008292  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29641  008294  0E2A               	movlw	42
 29642  008296  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29643  008298  0E08               	movlw	8
 29644  00829A  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29645  00829C  A0D8               	btfss	status,0,c
 29646  00829E  D00A               	goto	u19310
 29647                           
 29648                           ; BSR set to: 0
 29649  0082A0  0EC1               	movlw	193
 29650  0082A2  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29651  0082A4  0E49               	movlw	73
 29652  0082A6  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29653  0082A8  0E6E               	movlw	110
 29654  0082AA  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29655  0082AC  0E0A               	movlw	10
 29656  0082AE  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29657  0082B0  A0D8               	btfss	status,0,c
 29658  0082B2  D027               	goto	u19350
 29659  0082B4                     u19310:
 29660                           
 29661                           ; BSR set to: 0
 29662  0082B4  0E80               	movlw	128
 29663  0082B6  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29664  0082B8  0E1A               	movlw	26
 29665  0082BA  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29666  0082BC  0E70               	movlw	112
 29667  0082BE  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29668  0082C0  0E18               	movlw	24
 29669  0082C2  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29670  0082C4  A0D8               	btfss	status,0,c
 29671  0082C6  D00A               	goto	u19330
 29672                           
 29673                           ; BSR set to: 0
 29674  0082C8  0E41               	movlw	65
 29675  0082CA  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29676  0082CC  0EDD               	movlw	221
 29677  0082CE  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29678  0082D0  0E4A               	movlw	74
 29679  0082D2  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29680  0082D4  0E1F               	movlw	31
 29681  0082D6  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29682  0082D8  A0D8               	btfss	status,0,c
 29683  0082DA  D013               	goto	u19350
 29684  0082DC                     u19330:
 29685                           
 29686                           ; BSR set to: 0
 29687  0082DC  0E80               	movlw	128
 29688  0082DE  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29689  0082E0  0E13               	movlw	19
 29690  0082E2  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29691  0082E4  0E61               	movlw	97
 29692  0082E6  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29693  0082E8  0E33               	movlw	51
 29694  0082EA  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29695  0082EC  A0D8               	btfss	status,0,c
 29696  0082EE  0012               	return	
 29697                           
 29698                           ; BSR set to: 0
 29699  0082F0  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29700  0082F2  0EF7               	movlw	247
 29701  0082F4  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29702  0082F6  0ECB               	movlw	203
 29703  0082F8  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29704  0082FA  0E3C               	movlw	60
 29705  0082FC  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29706  0082FE  B0D8               	btfsc	status,0,c
 29707  008300  0012               	return	
 29708  008302                     u19350:
 29709                           
 29710                           ; BSR set to: 0
 29711                           ;radio_driver_SX1276.c: 1449: {;radio_driver_SX1276.c: 1450: RadioConfiguration.frequenc
      +                          y = frequency;
 29712  008302  C060  F129         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 29713  008306  C061  F12A         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 29714  00830A  C062  F12B         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 29715  00830E  C063  F12C         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 29716                           
 29717                           ; BSR set to: 0
 29718                           
 29719                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;;	Return value of _RADIO_SetChannelFrequen
      +                          cy is never used
 29720  008312  0012               	return		;funcret
 29721  008314                     __end_of_RADIO_SetChannelFrequency:
 29722                           	opt callstack 0
 29723                           
 29724 ;; *************** function _RADIO_SetBandwidth *****************
 29725 ;; Defined at:
 29726 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29727 ;; Parameters:    Size  Location     Type
 29728 ;;  bandwidth       1    wreg     enum E5871
 29729 ;; Auto vars:     Size  Location     Type
 29730 ;;  bandwidth       1    0[BANK0 ] enum E5871
 29731 ;; Return value:  Size  Location     Type
 29732 ;;                  1    wreg      void 
 29733 ;; Registers used:
 29734 ;;		wreg
 29735 ;; Tracked objects:
 29736 ;;		On entry : 0/0
 29737 ;;		On exit  : 0/0
 29738 ;;		Unchanged: 0/0
 29739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29741 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29743 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29744 ;;Total ram usage:        1 bytes
 29745 ;; Hardware stack levels used:    1
 29746 ;; Hardware stack levels required when called:    7
 29747 ;; This function calls:
 29748 ;;		Nothing
 29749 ;; This function is called by:
 29750 ;;		_ConfigureRadio
 29751 ;; This function uses a non-reentrant model
 29752 ;;
 29753                           
 29754                           	psect	text189
 29755  00A850                     __ptext189:
 29756                           	opt callstack 0
 29757  00A850                     _RADIO_SetBandwidth:
 29758                           	opt callstack 17
 29759                           
 29760                           ; BSR set to: 0
 29761                           ;incstack = 0
 29762                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 29763  00A850  0100               	movlb	0	; () banked
 29764  00A852  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 29765                           
 29766                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 29767  00A854  C060  F143         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 29768  00A858  0012               	return		;funcret
 29769  00A85A                     __end_of_RADIO_SetBandwidth:
 29770                           	opt callstack 0
 29771                           
 29772 ;; *************** function _RADIO_Transmit *****************
 29773 ;; Defined at:
 29774 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29775 ;; Parameters:    Size  Location     Type
 29776 ;;  buffer          2   73[BANK0 ] PTR unsigned char 
 29777 ;;		 -> macBuffer(271), 
 29778 ;;  bufferLen       1   75[BANK0 ] unsigned char 
 29779 ;; Auto vars:     Size  Location     Type
 29780 ;;  i               1   89[BANK0 ] unsigned char 
 29781 ;;  regValue        1   88[BANK0 ] unsigned char 
 29782 ;; Return value:  Size  Location     Type
 29783 ;;                  2   73[BANK0 ] enum E5907
 29784 ;; Registers used:
 29785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29786 ;; Tracked objects:
 29787 ;;		On entry : 0/0
 29788 ;;		On exit  : 0/0
 29789 ;;		Unchanged: 0/0
 29790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29791 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29792 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29793 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29794 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29795 ;;Total ram usage:       17 bytes
 29796 ;; Hardware stack levels used:    1
 29797 ;; Hardware stack levels required when called:   12
 29798 ;; This function calls:
 29799 ;;		_HALSPICSAssert
 29800 ;;		_HALSPICSDeassert
 29801 ;;		_HALSPISend
 29802 ;;		_RADIO_RegisterRead
 29803 ;;		_RADIO_RegisterWrite
 29804 ;;		_RADIO_WriteConfiguration
 29805 ;;		_RADIO_WriteMode
 29806 ;;		_SwTimerSetTimeout
 29807 ;;		_SwTimerStart
 29808 ;;		_SwTimerStop
 29809 ;;		___lldiv
 29810 ;; This function is called by:
 29811 ;;		_LORAWAN_RxTimeout
 29812 ;;		_LORAWAN_Join
 29813 ;;		_LORAWAN_Send
 29814 ;;		_AckRetransmissionCallback
 29815 ;;		_UnconfirmedTransmissionCallback
 29816 ;; This function uses a non-reentrant model
 29817 ;;
 29818                           
 29819                           	psect	text190
 29820  003E0C                     __ptext190:
 29821                           	opt callstack 0
 29822  003E0C                     _RADIO_Transmit:
 29823                           	opt callstack 15
 29824                           
 29825                           ;radio_driver_SX1276.c: 788: uint8_t regValue;;radio_driver_SX1276.c: 789: uint8_t i;;ra
      +                          dio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 29826                           
 29827                           ;incstack = 0
 29828  003E0C  0101               	movlb	1	; () banked
 29829  003E0E  A54C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 29830  003E10  D006               	goto	l19406
 29831                           
 29832                           ; BSR set to: 1
 29833                           ;radio_driver_SX1276.c: 792: {;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 29834  003E12  0E80               	movlw	128
 29835  003E14  0100               	movlb	0	; () banked
 29836  003E16  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29837  003E18  0E03               	movlw	3
 29838  003E1A  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 29839  003E1C  0012               	return	
 29840  003E1E                     l19406:
 29841                           
 29842                           ; BSR set to: 1
 29843                           ;radio_driver_SX1276.c: 794: };radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags
      +                           & ((1 << (0)) | (1 << (1)))) != 0)
 29844  003E1E  C14C  F0AC         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 29845  003E22  0E03               	movlw	3
 29846  003E24  0100               	movlb	0	; () banked
 29847  003E26  17AC               	andwf	??_RADIO_Transmit& (0+255),f,b
 29848  003E28  B4D8               	btfsc	status,2,c
 29849  003E2A  D005               	goto	l19412
 29850                           
 29851                           ; BSR set to: 0
 29852                           ;radio_driver_SX1276.c: 797: {;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 29853  003E2C  0E80               	movlw	128
 29854  003E2E  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29855  003E30  0E04               	movlw	4
 29856  003E32  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 29857  003E34  0012               	return	
 29858  003E36                     l19412:
 29859                           
 29860                           ; BSR set to: 0
 29861                           ;radio_driver_SX1276.c: 799: };radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioC
      +                          onfiguration.modulation) && (bufferLen > 64))
 29862  003E36  0101               	movlb	1	; () banked
 29863  003E38  5141               	movf	(_RadioConfiguration+24)& (0+255),w,b
 29864  003E3A  A4D8               	btfss	status,2,c
 29865  003E3C  D009               	goto	l19420
 29866                           
 29867                           ; BSR set to: 1
 29868  003E3E  0E40               	movlw	64
 29869  003E40  0100               	movlb	0	; () banked
 29870  003E42  65AB               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 29871  003E44  D005               	goto	l19420
 29872                           
 29873                           ; BSR set to: 0
 29874                           ;radio_driver_SX1276.c: 802: {;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 29875  003E46  0E80               	movlw	128
 29876  003E48  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29877  003E4A  0E02               	movlw	2
 29878  003E4C  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 29879  003E4E  0012               	return	
 29880  003E50                     l19420:
 29881                           
 29882                           ;radio_driver_SX1276.c: 804: };radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguratio
      +                          n.timeOnAirTimerId);
 29883  003E50  0101               	movlb	1	; () banked
 29884  003E52  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 29885  003E54  ECD5  F051         	call	_SwTimerStop
 29886                           
 29887                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 29888  003E58  0E00               	movlw	0
 29889  003E5A  0100               	movlb	0	; () banked
 29890  003E5C  6F9F               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 29891  003E5E  0E04               	movlw	4
 29892  003E60  6F9E               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 29893  003E62  EC6B  F009         	call	_RADIO_WriteConfiguration	;wreg free
 29894                           
 29895                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 29896  003E66  0101               	movlb	1	; () banked
 29897  003E68  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 29898  003E6A  A4D8               	btfss	status,2,c
 29899  003E6C  D027               	goto	l19440
 29900                           
 29901                           ; BSR set to: 1
 29902                           ;radio_driver_SX1276.c: 813: {;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, buf
      +                          ferLen);
 29903  003E6E  C0AB  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 29904  003E72  0E22               	movlw	34
 29905  003E74  ECC5  F051         	call	_RADIO_RegisterWrite
 29906                           
 29907                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 29908  003E78  0E0A               	movlw	10
 29909  003E7A  ECF5  F050         	call	_RADIO_RegisterRead
 29910  003E7E  0100               	movlb	0	; () banked
 29911  003E80  6FB8               	movwf	RADIO_Transmit@regValue& (0+255),b
 29912                           
 29913                           ; BSR set to: 0
 29914                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 29915  003E82  0EF0               	movlw	240
 29916  003E84  17B8               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 29917                           
 29918                           ; BSR set to: 0
 29919                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 29920  003E86  87B8               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 29921                           
 29922                           ; BSR set to: 0
 29923                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 29924  003E88  C0B8  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 29925  003E8C  0E0A               	movlw	10
 29926  003E8E  ECC5  F051         	call	_RADIO_RegisterWrite
 29927                           
 29928                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 29929  003E92  0E40               	movlw	64
 29930  003E94  0100               	movlb	0	; () banked
 29931  003E96  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29932  003E98  0E40               	movlw	64
 29933  003E9A  ECC5  F051         	call	_RADIO_RegisterWrite
 29934                           
 29935                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 29936  003E9E  0E00               	movlw	0
 29937  003EA0  0100               	movlb	0	; () banked
 29938  003EA2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29939  003EA4  0E41               	movlw	65
 29940  003EA6  ECC5  F051         	call	_RADIO_RegisterWrite
 29941                           
 29942                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 29943  003EAA  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 29944  003EAE  0E01               	movlw	1
 29945  003EB0  0100               	movlb	0	; () banked
 29946  003EB2  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 29947  003EB4  0E01               	movlw	1
 29948  003EB6  EC1C  F036         	call	_RADIO_WriteMode
 29949                           
 29950                           ;radio_driver_SX1276.c: 828: }
 29951  003EBA  D00C               	goto	l19442
 29952  003EBC                     l19440:
 29953                           
 29954                           ; BSR set to: 1
 29955                           ;radio_driver_SX1276.c: 829: else;radio_driver_SX1276.c: 830: {;radio_driver_SX1276.c: 8
      +                          32: RADIO_RegisterWrite(0x40, 0x00);
 29956  003EBC  0E00               	movlw	0
 29957  003EBE  0100               	movlb	0	; () banked
 29958  003EC0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29959  003EC2  0E40               	movlw	64
 29960  003EC4  ECC5  F051         	call	_RADIO_RegisterWrite
 29961                           
 29962                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 29963  003EC8  0E00               	movlw	0
 29964  003ECA  0100               	movlb	0	; () banked
 29965  003ECC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29966  003ECE  0E41               	movlw	65
 29967  003ED0  ECC5  F051         	call	_RADIO_RegisterWrite
 29968  003ED4                     l19442:
 29969                           
 29970                           ;radio_driver_SX1276.c: 834: };radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioCo
      +                          nfiguration.modulation)
 29971  003ED4  0101               	movlb	1	; () banked
 29972  003ED6  5141               	movf	(_RadioConfiguration+24)& (0+255),w,b
 29973  003ED8  A4D8               	btfss	status,2,c
 29974  003EDA  D005               	goto	l19446
 29975                           
 29976                           ; BSR set to: 1
 29977                           ;radio_driver_SX1276.c: 837: {;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, buf
      +                          ferLen);
 29978  003EDC  C0AB  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 29979  003EE0  0E00               	movlw	0
 29980  003EE2  ECC5  F051         	call	_RADIO_RegisterWrite
 29981  003EE6                     l19446:
 29982                           
 29983                           ;radio_driver_SX1276.c: 840: };radio_driver_SX1276.c: 842: HALSPICSAssert();
 29984  003EE6  EC6C  F054         	call	_HALSPICSAssert	;wreg free
 29985                           
 29986                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 29987  003EEA  0E80               	movlw	128
 29988  003EEC  ECBB  F053         	call	_HALSPISend
 29989                           
 29990                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 29991  003EF0  0E00               	movlw	0
 29992  003EF2  0100               	movlb	0	; () banked
 29993  003EF4  6FB9               	movwf	RADIO_Transmit@i& (0+255),b
 29994  003EF6  D00B               	goto	l19456
 29995  003EF8                     l19452:
 29996                           
 29997                           ; BSR set to: 0
 29998                           ;radio_driver_SX1276.c: 846: {;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 29999  003EF8  51B9               	movf	RADIO_Transmit@i& (0+255),w,b
 30000  003EFA  25A9               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 30001  003EFC  6ED9               	movwf	fsr2l,c
 30002  003EFE  0E00               	movlw	0
 30003  003F00  21AA               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 30004  003F02  6EDA               	movwf	fsr2h,c
 30005  003F04  50DF               	movf	indf2,w,c
 30006  003F06  ECBB  F053         	call	_HALSPISend
 30007  003F0A  0100               	movlb	0	; () banked
 30008  003F0C  2BB9               	incf	RADIO_Transmit@i& (0+255),f,b
 30009  003F0E                     l19456:
 30010                           
 30011                           ; BSR set to: 0
 30012  003F0E  51AB               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 30013  003F10  5DB9               	subwf	RADIO_Transmit@i& (0+255),w,b
 30014  003F12  A0D8               	btfss	status,0,c
 30015  003F14  D7F1               	goto	l19452
 30016                           
 30017                           ; BSR set to: 0
 30018                           ;radio_driver_SX1276.c: 848: };radio_driver_SX1276.c: 849: HALSPICSDeassert();
 30019  003F16  EC6A  F054         	call	_HALSPICSDeassert	;wreg free
 30020                           
 30021                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 30022  003F1A  0101               	movlb	1	; () banked
 30023  003F1C  814C               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 30024                           
 30025                           ; BSR set to: 1
 30026                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 30027  003F1E  0EE7               	movlw	231
 30028  003F20  174C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 30029                           
 30030                           ; BSR set to: 1
 30031                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 30032  003F22  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30033  003F26  0E00               	movlw	0
 30034  003F28  0100               	movlb	0	; () banked
 30035  003F2A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30036  003F2C  0E03               	movlw	3
 30037  003F2E  EC1C  F036         	call	_RADIO_WriteMode
 30038                           
 30039                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 30040  003F32  0E00               	movlw	0
 30041  003F34  0100               	movlb	0	; () banked
 30042  003F36  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 30043  003F38  0E00               	movlw	0
 30044  003F3A  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 30045  003F3C  0E0A               	movlw	10
 30046  003F3E  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 30047  003F40  0E00               	movlw	0
 30048  003F42  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 30049  003F44  0101               	movlb	1	; () banked
 30050  003F46  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30051  003F48  EC7F  F04C         	call	_SwTimerSetTimeout
 30052                           
 30053                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 30054  003F4C  0101               	movlb	1	; () banked
 30055  003F4E  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30056  003F50  EC73  F040         	call	_SwTimerStart
 30057                           
 30058                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 30059  003F54  0101               	movlb	1	; () banked
 30060  003F56  5153               	movf	(_RadioConfiguration+42)& (0+255),w,b
 30061  003F58  1154               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 30062  003F5A  1155               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 30063  003F5C  1156               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 30064  003F5E  B4D8               	btfsc	status,2,c
 30065  003F60  D061               	goto	l19486
 30066                           
 30067                           ; BSR set to: 1
 30068                           ;radio_driver_SX1276.c: 866: {;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfig
      +                          uration.watchdogTimerId, ((RadioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (
      +                          ((uint32_t)(RadioConfiguration.watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t
      +                          )(RadioConfiguration.watchdogTimerTimeout)) /
 30069  003F62  5156               	movf	(_RadioConfiguration+45)& (0+255),w,b
 30070  003F64  E107               	bnz	u20990
 30071  003F66  2953               	incf	(_RadioConfiguration+42)& (0+255),w,b
 30072  003F68  0EFF               	movlw	255
 30073  003F6A  5954               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 30074  003F6C  0E0F               	movlw	15
 30075  003F6E  5955               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 30076  003F70  A0D8               	btfss	status,0,c
 30077  003F72  D01D               	goto	l19480
 30078  003F74                     u20990:
 30079                           
 30080                           ; BSR set to: 1
 30081  003F74  C153  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 30082  003F78  C154  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 30083  003F7C  C155  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 30084  003F80  C156  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 30085  003F84  0E7D               	movlw	125
 30086  003F86  0100               	movlb	0	; () banked
 30087  003F88  6F64               	movwf	___lldiv@divisor& (0+255),b
 30088  003F8A  0E00               	movlw	0
 30089  003F8C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30090  003F8E  0E00               	movlw	0
 30091  003F90  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30092  003F92  0E00               	movlw	0
 30093  003F94  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30094  003F96  EC96  F042         	call	___lldiv	;wreg free
 30095  003F9A  0E0C               	movlw	12
 30096  003F9C                     u21005:
 30097  003F9C  90D8               	bcf	status,0,c
 30098  003F9E  0100               	movlb	0	; () banked
 30099  003FA0  3760               	rlcf	?___lldiv& (0+255),f,b
 30100  003FA2  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 30101  003FA4  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 30102  003FA6  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 30103  003FA8  2EE8               	decfsz	wreg,f,c
 30104  003FAA  D7F8               	goto	u21005
 30105  003FAC  D023               	goto	L28
 30106  003FAE                     l19480:
 30107                           
 30108                           ; BSR set to: 1
 30109  003FAE  C153  F0AC         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 30110  003FB2  C154  F0AD         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 30111  003FB6  C155  F0AE         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 30112  003FBA  C156  F0AF         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 30113  003FBE  0E0C               	movlw	12
 30114  003FC0                     u21015:
 30115  003FC0  90D8               	bcf	status,0,c
 30116  003FC2  0100               	movlb	0	; () banked
 30117  003FC4  37AC               	rlcf	??_RADIO_Transmit& (0+255),f,b
 30118  003FC6  37AD               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 30119  003FC8  37AE               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 30120  003FCA  37AF               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 30121  003FCC  2EE8               	decfsz	wreg,f,c
 30122  003FCE  D7F8               	goto	u21015
 30123  003FD0  C0AC  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 30124  003FD4  C0AD  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 30125  003FD8  C0AE  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 30126  003FDC  C0AF  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 30127  003FE0  0E7D               	movlw	125
 30128  003FE2  6F64               	movwf	___lldiv@divisor& (0+255),b
 30129  003FE4  0E00               	movlw	0
 30130  003FE6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30131  003FE8  0E00               	movlw	0
 30132  003FEA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30133  003FEC  0E00               	movlw	0
 30134  003FEE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30135  003FF0  EC96  F042         	call	___lldiv	;wreg free
 30136  003FF4                     L28:
 30137  003FF4  C060  F0B4         	movff	?___lldiv,_RADIO_Transmit$781
 30138  003FF8  C061  F0B5         	movff	?___lldiv+1,_RADIO_Transmit$781+1
 30139  003FFC  C062  F0B6         	movff	?___lldiv+2,_RADIO_Transmit$781+2
 30140  004000  C063  F0B7         	movff	?___lldiv+3,_RADIO_Transmit$781+3
 30141  004004  C0B4  F06D         	movff	_RADIO_Transmit$781,SwTimerSetTimeout@timeout
 30142  004008  C0B5  F06E         	movff	_RADIO_Transmit$781+1,SwTimerSetTimeout@timeout+1
 30143  00400C  C0B6  F06F         	movff	_RADIO_Transmit$781+2,SwTimerSetTimeout@timeout+2
 30144  004010  C0B7  F070         	movff	_RADIO_Transmit$781+3,SwTimerSetTimeout@timeout+3
 30145  004014  0101               	movlb	1	; () banked
 30146  004016  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30147  004018  EC7F  F04C         	call	_SwTimerSetTimeout
 30148                           
 30149                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 30150  00401C  0101               	movlb	1	; () banked
 30151  00401E  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30152  004020  EC73  F040         	call	_SwTimerStart
 30153  004024                     l19486:
 30154                           
 30155                           ;radio_driver_SX1276.c: 869: };radio_driver_SX1276.c: 871: return ERR_NONE;
 30156  004024  0E00               	movlw	0
 30157  004026  0100               	movlb	0	; () banked
 30158  004028  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30159  00402A  0E00               	movlw	0
 30160  00402C  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 30161                           
 30162                           ; BSR set to: 0
 30163  00402E  0012               	return		;funcret
 30164  004030                     __end_of_RADIO_Transmit:
 30165                           	opt callstack 0
 30166                           
 30167 ;; *************** function _RADIO_WriteConfiguration *****************
 30168 ;; Defined at:
 30169 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 30170 ;; Parameters:    Size  Location     Type
 30171 ;;  symbolTimeou    2   62[BANK0 ] unsigned int 
 30172 ;; Auto vars:     Size  Location     Type
 30173 ;;  tempValue       4   68[BANK0 ] unsigned long 
 30174 ;;  regValue        1   72[BANK0 ] unsigned char 
 30175 ;;  i               1   67[BANK0 ] unsigned char 
 30176 ;; Return value:  Size  Location     Type
 30177 ;;                  1    wreg      void 
 30178 ;; Registers used:
 30179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30180 ;; Tracked objects:
 30181 ;;		On entry : 0/0
 30182 ;;		On exit  : 0/0
 30183 ;;		Unchanged: 0/0
 30184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30185 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30186 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30187 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30188 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30189 ;;Total ram usage:       11 bytes
 30190 ;; Hardware stack levels used:    1
 30191 ;; Hardware stack levels required when called:   11
 30192 ;; This function calls:
 30193 ;;		_RADIO_RegisterRead
 30194 ;;		_RADIO_RegisterWrite
 30195 ;;		_RADIO_WriteFSKBitRate
 30196 ;;		_RADIO_WriteFSKFrequencyDeviation
 30197 ;;		_RADIO_WriteFrequency
 30198 ;;		_RADIO_WriteMode
 30199 ;;		_RADIO_WritePower
 30200 ;;		___lmul
 30201 ;; This function is called by:
 30202 ;;		_RADIO_Transmit
 30203 ;;		_RADIO_ReceiveStart
 30204 ;;		_RADIO_TransmitCW
 30205 ;; This function uses a non-reentrant model
 30206 ;;
 30207                           
 30208                           	psect	text191
 30209  0012D6                     __ptext191:
 30210                           	opt callstack 0
 30211  0012D6                     _RADIO_WriteConfiguration:
 30212                           	opt callstack 15
 30213                           
 30214                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;;radio_driver_SX1276.c: 536: uint8_t reg
      +                          Value;;radio_driver_SX1276.c: 537: uint8_t i;;radio_driver_SX1276.c: 540: RADIO_WriteMod
      +                          e(MODE_SLEEP, RadioConfiguration.modulation, 0);
 30215                           
 30216                           ; BSR set to: 0
 30217                           ;incstack = 0
 30218  0012D6  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30219  0012DA  0E00               	movlw	0
 30220  0012DC  0100               	movlb	0	; () banked
 30221  0012DE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30222  0012E0  0E00               	movlw	0
 30223  0012E2  EC1C  F036         	call	_RADIO_WriteMode
 30224                           
 30225                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 30226  0012E6  C129  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 30227  0012EA  C12A  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 30228  0012EE  C12B  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 30229  0012F2  C12C  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 30230  0012F6  EC8B  F038         	call	_RADIO_WriteFrequency	;wreg free
 30231                           
 30232                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 30233  0012FA  0101               	movlb	1	; () banked
 30234  0012FC  5144               	movf	(_RadioConfiguration+27)& (0+255),w,b
 30235  0012FE  EC03  F039         	call	_RADIO_WritePower
 30236                           
 30237                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 30238  001302  0101               	movlb	1	; () banked
 30239  001304  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 30240  001306  A4D8               	btfss	status,2,c
 30241  001308  D1EC               	goto	l18624
 30242                           
 30243                           ; BSR set to: 1
 30244                           ;radio_driver_SX1276.c: 545: {;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, Rad
      +                          ioConfiguration.syncWordLoRa);
 30245  00130A  C137  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 30246  00130E  0E39               	movlw	57
 30247  001310  ECC5  F051         	call	_RADIO_RegisterWrite
 30248                           
 30249                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,;radio_driver_SX1276.c: 549: (Radi
      +                          oConfiguration.bandWidth << (4)) |;radio_driver_SX1276.c: 550: (RadioConfiguration.error
      +                          CodingRate << (1)) |;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode 
      +                          & 0x01));
 30250  001314  C14B  F0A0         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 30251  001318  0E01               	movlw	1
 30252  00131A  0100               	movlb	0	; () banked
 30253  00131C  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30254  00131E  0101               	movlb	1	; () banked
 30255  001320  90D8               	bcf	status,0,c
 30256  001322  354A               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 30257  001324  0100               	movlb	0	; () banked
 30258  001326  6FA1               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30259  001328  0101               	movlb	1	; () banked
 30260  00132A  3943               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 30261  00132C  0BF0               	andlw	240
 30262  00132E  0100               	movlb	0	; () banked
 30263  001330  11A1               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 30264  001332  11A0               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30265  001334  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30266  001336  0E1D               	movlw	29
 30267  001338  ECC5  F051         	call	_RADIO_RegisterWrite
 30268                           
 30269                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,;radio_driver_SX1276.c: 554: (Radi
      +                          oConfiguration.dataRate << (4)) |;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn
      +                           & 0x01) << (2)) |;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 30270  00133C  C09E  F0A0         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 30271  001340  C09F  F0A1         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 30272  001344  C0A1  F0A0         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 30273  001348  0100               	movlb	0	; () banked
 30274  00134A  6BA1               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30275  00134C  0E03               	movlw	3
 30276  00134E  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30277  001350  C145  F0A2         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 30278  001354  0E01               	movlw	1
 30279  001356  17A2               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30280  001358  90D8               	bcf	status,0,c
 30281  00135A  37A2               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30282  00135C  90D8               	bcf	status,0,c
 30283  00135E  37A2               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30284  001360  0101               	movlb	1	; () banked
 30285  001362  3942               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 30286  001364  0BF0               	andlw	240
 30287  001366  0100               	movlb	0	; () banked
 30288  001368  11A2               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 30289  00136A  11A0               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30290  00136C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30291  00136E  0E1E               	movlw	30
 30292  001370  ECC5  F051         	call	_RADIO_RegisterWrite
 30293                           
 30294                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 30295  001374  0101               	movlb	1	; () banked
 30296  001376  5147               	movf	(_RadioConfiguration+30)& (0+255),w,b
 30297  001378  1148               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 30298  00137A  B4D8               	btfsc	status,2,c
 30299  00137C  D06F               	goto	l18514
 30300                           
 30301                           ; BSR set to: 1
 30302                           ;radio_driver_SX1276.c: 561: {;radio_driver_SX1276.c: 562: tempValue = RadioConfiguratio
      +                          n.frequencyHopPeriod;
 30303  00137E  C147  F0A4         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 30304  001382  C148  F0A5         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 30305  001386  0100               	movlb	0	; () banked
 30306  001388  6BA6               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30307  00138A  6BA7               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30308                           
 30309                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 30310  00138C  D04E               	goto	l18510
 30311  00138E                     l18500:
 30312                           
 30313                           ; BSR set to: 1
 30314                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 30315  00138E  C0A4  F092         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30316  001392  C0A5  F093         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30317  001396  C0A6  F094         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30318  00139A  C0A7  F095         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30319  00139E  0E7D               	movlw	125
 30320  0013A0  0100               	movlb	0	; () banked
 30321  0013A2  6F96               	movwf	___lmul@multiplicand& (0+255),b
 30322  0013A4  0E00               	movlw	0
 30323  0013A6  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30324  0013A8  0E00               	movlw	0
 30325  0013AA  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30326  0013AC  0E00               	movlw	0
 30327  0013AE  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30328  0013B0  ECD6  F048         	call	___lmul	;wreg free
 30329  0013B4  D027               	goto	L30
 30330  0013B6                     l18502:
 30331                           
 30332                           ; BSR set to: 1
 30333                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 30334  0013B6  C0A4  F092         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30335  0013BA  C0A5  F093         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30336  0013BE  C0A6  F094         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30337  0013C2  C0A7  F095         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30338  0013C6  0EFA               	movlw	250
 30339  0013C8  0100               	movlb	0	; () banked
 30340  0013CA  6F96               	movwf	___lmul@multiplicand& (0+255),b
 30341  0013CC  0E00               	movlw	0
 30342  0013CE  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30343  0013D0  0E00               	movlw	0
 30344  0013D2  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30345  0013D4  0E00               	movlw	0
 30346  0013D6  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30347  0013D8  ECD6  F048         	call	___lmul	;wreg free
 30348  0013DC  D013               	goto	L30
 30349  0013DE                     l18504:
 30350                           
 30351                           ; BSR set to: 1
 30352                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 30353  0013DE  C0A4  F092         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30354  0013E2  C0A5  F093         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30355  0013E6  C0A6  F094         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30356  0013EA  C0A7  F095         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30357  0013EE  0EF4               	movlw	244
 30358  0013F0  0100               	movlb	0	; () banked
 30359  0013F2  6F96               	movwf	___lmul@multiplicand& (0+255),b
 30360  0013F4  0E01               	movlw	1
 30361  0013F6  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30362  0013F8  0E00               	movlw	0
 30363  0013FA  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30364  0013FC  0E00               	movlw	0
 30365  0013FE  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30366  001400  ECD6  F048         	call	___lmul	;wreg free
 30367  001404                     L30:
 30368  001404  C092  F0A4         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 30369  001408  C093  F0A5         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 30370  00140C  C094  F0A6         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 30371  001410  C095  F0A7         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 30372                           
 30373                           ;radio_driver_SX1276.c: 574: break;
 30374  001414  D016               	goto	l18512
 30375  001416                     l18506:
 30376                           
 30377                           ; BSR set to: 1
 30378                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 30379  001416  0E00               	movlw	0
 30380  001418  0100               	movlb	0	; () banked
 30381  00141A  6FA4               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30382  00141C  0E00               	movlw	0
 30383  00141E  6FA5               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30384  001420  0E00               	movlw	0
 30385  001422  6FA6               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30386  001424  0E00               	movlw	0
 30387  001426  6FA7               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30388                           
 30389                           ;radio_driver_SX1276.c: 578: break;
 30390  001428  D00C               	goto	l18512
 30391  00142A                     l18510:
 30392                           
 30393                           ; BSR set to: 0
 30394  00142A  0101               	movlb	1	; () banked
 30395  00142C  5143               	movf	(_RadioConfiguration+26)& (0+255),w,b
 30396                           
 30397                           ; Switch size 1, requested type "simple"
 30398                           ; Number of cases is 3, Range of values is 7 to 9
 30399                           ; switch strategies available:
 30400                           ; Name         Instructions Cycles
 30401                           ; simple_byte           10     6 (average)
 30402                           ;	Chosen strategy is simple_byte
 30403  00142E  0A07               	xorlw	7	; case 7
 30404  001430  B4D8               	btfsc	status,2,c
 30405  001432  D7AD               	goto	l18500
 30406  001434  0A0F               	xorlw	15	; case 8
 30407  001436  B4D8               	btfsc	status,2,c
 30408  001438  D7BE               	goto	l18502
 30409  00143A  0A01               	xorlw	1	; case 9
 30410  00143C  B4D8               	btfsc	status,2,c
 30411  00143E  D7CF               	goto	l18504
 30412  001440  D7EA               	goto	l18506
 30413  001442                     l18512:
 30414                           
 30415                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 30416  001442  0101               	movlb	1	; () banked
 30417  001444  2942               	incf	(_RadioConfiguration+25)& (0+255),w,b
 30418  001446  0100               	movlb	0	; () banked
 30419  001448  6FA0               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 30420  00144A  D005               	goto	u19560
 30421  00144C                     u19565:
 30422  00144C  90D8               	bcf	status,0,c
 30423  00144E  33A7               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 30424  001450  33A6               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 30425  001452  33A5               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 30426  001454  33A4               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 30427  001456                     u19560:
 30428  001456  2FA0               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 30429  001458  D7F9               	goto	u19565
 30430                           
 30431                           ;radio_driver_SX1276.c: 582: }
 30432  00145A  D009               	goto	l18516
 30433  00145C                     l18514:
 30434                           
 30435                           ; BSR set to: 1
 30436                           ;radio_driver_SX1276.c: 583: else;radio_driver_SX1276.c: 584: {;radio_driver_SX1276.c: 5
      +                          85: tempValue = 0;
 30437  00145C  0E00               	movlw	0
 30438  00145E  0100               	movlb	0	; () banked
 30439  001460  6FA4               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30440  001462  0E00               	movlw	0
 30441  001464  6FA5               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30442  001466  0E00               	movlw	0
 30443  001468  6FA6               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30444  00146A  0E00               	movlw	0
 30445  00146C  6FA7               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30446  00146E                     l18516:
 30447                           
 30448                           ;radio_driver_SX1276.c: 586: };radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (ui
      +                          nt8_t)tempValue);
 30449  00146E  C0A4  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 30450  001472  0E24               	movlw	36
 30451  001474  ECC5  F051         	call	_RADIO_RegisterWrite
 30452                           
 30453                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 30454  001478  C09E  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 30455  00147C  0E1F               	movlw	31
 30456  00147E  ECC5  F051         	call	_RADIO_RegisterWrite
 30457                           
 30458                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 30459  001482  0E26               	movlw	38
 30460  001484  ECF5  F050         	call	_RADIO_RegisterRead
 30461  001488  0100               	movlb	0	; () banked
 30462  00148A  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30463                           
 30464                           ; BSR set to: 0
 30465                           ;radio_driver_SX1276.c: 596: if (;radio_driver_SX1276.c: 597: (;radio_driver_SX1276.c: 5
      +                          98: (SF_12 == RadioConfiguration.dataRate) &&;radio_driver_SX1276.c: 599: ((BW_125KHZ ==
      +                           RadioConfiguration.bandWidth) || (BW_250KHZ == RadioConfiguration.bandWidth));radio_dri
      +                          ver_SX1276.c: 600: ) ||;radio_driver_SX1276.c: 601: (;radio_driver_SX1276.c: 602: (SF_11
      +                           == RadioConfiguration.dataRate) &&;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfi
      +                          guration.bandWidth);radio_driver_SX1276.c: 604: );radio_driver_SX1276.c: 605: )
 30466  00148C  0E0C               	movlw	12
 30467  00148E  0101               	movlb	1	; () banked
 30468  001490  1942               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30469  001492  A4D8               	btfss	status,2,c
 30470  001494  D008               	goto	u19590
 30471                           
 30472                           ; BSR set to: 1
 30473  001496  0E07               	movlw	7
 30474  001498  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30475  00149A  B4D8               	btfsc	status,2,c
 30476  00149C  D00C               	goto	u19610
 30477                           
 30478                           ; BSR set to: 1
 30479  00149E  0E08               	movlw	8
 30480  0014A0  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30481  0014A2  B4D8               	btfsc	status,2,c
 30482  0014A4  D008               	goto	u19610
 30483  0014A6                     u19590:
 30484                           
 30485                           ; BSR set to: 1
 30486  0014A6  0E0B               	movlw	11
 30487  0014A8  1942               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30488  0014AA  A4D8               	btfss	status,2,c
 30489  0014AC  D007               	goto	l18534
 30490                           
 30491                           ; BSR set to: 1
 30492  0014AE  0E07               	movlw	7
 30493  0014B0  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30494  0014B2  A4D8               	btfss	status,2,c
 30495  0014B4  D003               	goto	l18534
 30496  0014B6                     u19610:
 30497                           
 30498                           ; BSR set to: 1
 30499                           ;radio_driver_SX1276.c: 606: {;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 30500  0014B6  0100               	movlb	0	; () banked
 30501  0014B8  87A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30502                           
 30503                           ;radio_driver_SX1276.c: 608: }
 30504  0014BA  D002               	goto	l478
 30505  0014BC                     l18534:
 30506                           
 30507                           ; BSR set to: 1
 30508                           ;radio_driver_SX1276.c: 609: else;radio_driver_SX1276.c: 610: {;radio_driver_SX1276.c: 6
      +                          11: regValue &= ~(1 << (3));
 30509  0014BC  0100               	movlb	0	; () banked
 30510  0014BE  97A8               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30511  0014C0                     l478:
 30512                           
 30513                           ; BSR set to: 0
 30514                           ;radio_driver_SX1276.c: 612: };radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 30515  0014C0  85A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 30516                           
 30517                           ; BSR set to: 0
 30518                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 30519  0014C2  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30520  0014C6  0E26               	movlw	38
 30521  0014C8  ECC5  F051         	call	_RADIO_RegisterWrite
 30522                           
 30523                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 30524  0014CC  0E31               	movlw	49
 30525  0014CE  ECF5  F050         	call	_RADIO_RegisterRead
 30526  0014D2  0100               	movlb	0	; () banked
 30527  0014D4  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30528                           
 30529                           ; BSR set to: 0
 30530                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 30531  0014D6  0EF8               	movlw	248
 30532  0014D8  17A8               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30533                           
 30534                           ; BSR set to: 0
 30535                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 30536  0014DA  0E03               	movlw	3
 30537  0014DC  13A8               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30538                           
 30539                           ; BSR set to: 0
 30540                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 30541  0014DE  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30542  0014E2  0E31               	movlw	49
 30543  0014E4  ECC5  F051         	call	_RADIO_RegisterWrite
 30544                           
 30545                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 30546  0014E8  0E0A               	movlw	10
 30547  0014EA  0100               	movlb	0	; () banked
 30548  0014EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30549  0014EE  0E37               	movlw	55
 30550  0014F0  ECC5  F051         	call	_RADIO_RegisterWrite
 30551                           
 30552                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 30553  0014F4  0E12               	movlw	18
 30554  0014F6  0101               	movlb	1	; () banked
 30555  0014F8  195A               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30556  0014FA  A4D8               	btfss	status,2,c
 30557  0014FC  D02F               	goto	l18572
 30558                           
 30559                           ; BSR set to: 1
 30560                           ;radio_driver_SX1276.c: 626: {;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfi
      +                          guration.bandWidth) ||;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.band
      +                          Width) )
 30561  0014FE  0E07               	movlw	7
 30562  001500  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30563  001502  B4D8               	btfsc	status,2,c
 30564  001504  D004               	goto	u19640
 30565                           
 30566                           ; BSR set to: 1
 30567  001506  0E08               	movlw	8
 30568  001508  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30569  00150A  A4D8               	btfss	status,2,c
 30570  00150C  D017               	goto	l18564
 30571  00150E                     u19640:
 30572                           
 30573                           ; BSR set to: 1
 30574                           ;radio_driver_SX1276.c: 631: {;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead
      +                          (0x31);
 30575  00150E  0E31               	movlw	49
 30576  001510  ECF5  F050         	call	_RADIO_RegisterRead
 30577  001514  0100               	movlb	0	; () banked
 30578  001516  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30579                           
 30580                           ; BSR set to: 0
 30581                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 30582  001518  9FA8               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30583                           
 30584                           ; BSR set to: 0
 30585                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 30586  00151A  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30587  00151E  0E31               	movlw	49
 30588  001520  ECC5  F051         	call	_RADIO_RegisterWrite
 30589                           
 30590                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 30591  001524  0E40               	movlw	64
 30592  001526  0100               	movlb	0	; () banked
 30593  001528  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30594  00152A  0E2F               	movlw	47
 30595  00152C  ECC5  F051         	call	_RADIO_RegisterWrite
 30596                           
 30597                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 30598  001530  0E00               	movlw	0
 30599  001532  0100               	movlb	0	; () banked
 30600  001534  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30601  001536  0E30               	movlw	48
 30602  001538  ECC5  F051         	call	_RADIO_RegisterWrite
 30603  00153C                     l18564:
 30604                           
 30605                           ;radio_driver_SX1276.c: 637: };radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfigu
      +                          ration.bandWidth)
 30606  00153C  0E09               	movlw	9
 30607  00153E  0101               	movlb	1	; () banked
 30608  001540  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30609  001542  A4D8               	btfss	status,2,c
 30610  001544  D00B               	goto	l18572
 30611                           
 30612                           ; BSR set to: 1
 30613                           ;radio_driver_SX1276.c: 640: {;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead
      +                          (0x31);
 30614  001546  0E31               	movlw	49
 30615  001548  ECF5  F050         	call	_RADIO_RegisterRead
 30616  00154C  0100               	movlb	0	; () banked
 30617  00154E  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30618                           
 30619                           ; BSR set to: 0
 30620                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 30621  001550  8FA8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30622                           
 30623                           ; BSR set to: 0
 30624                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 30625  001552  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30626  001556  0E31               	movlw	49
 30627  001558  ECC5  F051         	call	_RADIO_RegisterWrite
 30628  00155C                     l18572:
 30629                           
 30630                           ;radio_driver_SX1276.c: 644: };radio_driver_SX1276.c: 645: };radio_driver_SX1276.c: 647:
      +                           regValue = RADIO_RegisterRead(0x33);
 30631  00155C  0E33               	movlw	51
 30632  00155E  ECF5  F050         	call	_RADIO_RegisterRead
 30633  001562  0100               	movlb	0	; () banked
 30634  001564  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30635                           
 30636                           ; BSR set to: 0
 30637                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 30638  001566  9DA8               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 30639                           
 30640                           ; BSR set to: 0
 30641                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 30642  001568  81A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 30643                           
 30644                           ; BSR set to: 0
 30645                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 30646  00156A  C149  F0A0         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30647  00156E  0E01               	movlw	1
 30648  001570  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30649  001572  0E06               	movlw	6
 30650  001574  6FA1               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30651  001576                     u19665:
 30652  001576  90D8               	bcf	status,0,c
 30653  001578  37A0               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30654  00157A  2FA1               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 30655  00157C  D7FC               	goto	u19665
 30656  00157E  51A0               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 30657  001580  13A8               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30658                           
 30659                           ; BSR set to: 0
 30660                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 30661  001582  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30662  001586  0E33               	movlw	51
 30663  001588  ECC5  F051         	call	_RADIO_RegisterWrite
 30664                           
 30665                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 30666  00158C  C149  F0A0         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30667  001590  0E01               	movlw	1
 30668  001592  0100               	movlb	0	; () banked
 30669  001594  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30670  001596  90D8               	bcf	status,0,c
 30671  001598  37A0               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30672  00159A  90D8               	bcf	status,0,c
 30673  00159C  35A0               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 30674  00159E  0AFF               	xorlw	255
 30675  0015A0  0B1D               	andlw	29
 30676  0015A2  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30677                           
 30678                           ; BSR set to: 0
 30679                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 30680  0015A4  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30681  0015A8  0E3B               	movlw	59
 30682  0015AA  ECC5  F051         	call	_RADIO_RegisterWrite
 30683                           
 30684                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 30685  0015AE  0101               	movlb	1	; () banked
 30686  0015B0  5136               	movf	(_RadioConfiguration+13)& (0+255),w,b
 30687  0015B2  0100               	movlb	0	; () banked
 30688  0015B4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30689  0015B6  0E20               	movlw	32
 30690  0015B8  ECC5  F051         	call	_RADIO_RegisterWrite
 30691                           
 30692                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 30693  0015BC  C135  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 30694  0015C0  0E21               	movlw	33
 30695  0015C2  ECC5  F051         	call	_RADIO_RegisterWrite
 30696                           
 30697                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 30698  0015C6  0E00               	movlw	0
 30699  0015C8  0100               	movlb	0	; () banked
 30700  0015CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30701  0015CC  0E0D               	movlw	13
 30702  0015CE  ECC5  F051         	call	_RADIO_RegisterWrite
 30703                           
 30704                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 30705  0015D2  0E00               	movlw	0
 30706  0015D4  0100               	movlb	0	; () banked
 30707  0015D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30708  0015D8  0E0E               	movlw	14
 30709  0015DA  ECC5  F051         	call	_RADIO_RegisterWrite
 30710                           
 30711                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 30712  0015DE  0E00               	movlw	0
 30713  0015E0  0100               	movlb	0	; () banked
 30714  0015E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30715  0015E4  0E0F               	movlw	15
 30716  0015E6  ECC5  F051         	call	_RADIO_RegisterWrite
 30717                           
 30718                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 30719  0015EA  0E12               	movlw	18
 30720  0015EC  0101               	movlb	1	; () banked
 30721  0015EE  195A               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30722  0015F0  A4D8               	btfss	status,2,c
 30723  0015F2  D070               	goto	l484
 30724                           
 30725                           ; BSR set to: 1
 30726                           ;radio_driver_SX1276.c: 665: {;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfi
      +                          guration.bandWidth) &&;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 8620
      +                          00000) &&;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000);radio
      +                          _driver_SX1276.c: 669: )
 30727  0015F4  0E09               	movlw	9
 30728  0015F6  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30729  0015F8  A4D8               	btfss	status,2,c
 30730  0015FA  D020               	goto	l18606
 30731                           
 30732                           ; BSR set to: 1
 30733  0015FC  0E80               	movlw	128
 30734  0015FE  5D29               	subwf	_RadioConfiguration& (0+255),w,b
 30735  001600  0E13               	movlw	19
 30736  001602  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30737  001604  0E61               	movlw	97
 30738  001606  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30739  001608  0E33               	movlw	51
 30740  00160A  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30741  00160C  A0D8               	btfss	status,0,c
 30742  00160E  D016               	goto	l18606
 30743                           
 30744                           ; BSR set to: 1
 30745  001610  0529               	decf	_RadioConfiguration& (0+255),w,b
 30746  001612  0EF7               	movlw	247
 30747  001614  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30748  001616  0ECB               	movlw	203
 30749  001618  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30750  00161A  0E3C               	movlw	60
 30751  00161C  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30752  00161E  B0D8               	btfsc	status,0,c
 30753  001620  D00D               	goto	l18606
 30754                           
 30755                           ; BSR set to: 1
 30756                           ;radio_driver_SX1276.c: 670: {;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x0
      +                          2);
 30757  001622  0E02               	movlw	2
 30758  001624  0100               	movlb	0	; () banked
 30759  001626  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30760  001628  0E36               	movlw	54
 30761  00162A  ECC5  F051         	call	_RADIO_RegisterWrite
 30762                           
 30763                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 30764  00162E  0E64               	movlw	100
 30765  001630  0100               	movlb	0	; () banked
 30766  001632  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30767  001634  0E3A               	movlw	58
 30768  001636  ECC5  F051         	call	_RADIO_RegisterWrite
 30769                           
 30770                           ;radio_driver_SX1276.c: 673: }
 30771  00163A  D02B               	goto	l18616
 30772  00163C                     l18606:
 30773                           
 30774                           ; BSR set to: 1
 30775                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&;ra
      +                          dio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&;radio_driver_SX
      +                          1276.c: 676: (RadioConfiguration.frequency <= 525000000);radio_driver_SX1276.c: 677: )
 30776  00163C  0E09               	movlw	9
 30777  00163E  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30778  001640  A4D8               	btfss	status,2,c
 30779  001642  D021               	goto	l18614
 30780                           
 30781                           ; BSR set to: 1
 30782  001644  0E80               	movlw	128
 30783  001646  5D29               	subwf	_RadioConfiguration& (0+255),w,b
 30784  001648  0E1A               	movlw	26
 30785  00164A  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30786  00164C  0E70               	movlw	112
 30787  00164E  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30788  001650  0E18               	movlw	24
 30789  001652  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30790  001654  A0D8               	btfss	status,0,c
 30791  001656  D017               	goto	l18614
 30792                           
 30793                           ; BSR set to: 1
 30794  001658  0E41               	movlw	65
 30795  00165A  5D29               	subwf	_RadioConfiguration& (0+255),w,b
 30796  00165C  0EDD               	movlw	221
 30797  00165E  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30798  001660  0E4A               	movlw	74
 30799  001662  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30800  001664  0E1F               	movlw	31
 30801  001666  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30802  001668  B0D8               	btfsc	status,0,c
 30803  00166A  D00D               	goto	l18614
 30804                           
 30805                           ; BSR set to: 1
 30806                           ;radio_driver_SX1276.c: 678: {;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x0
      +                          2);
 30807  00166C  0E02               	movlw	2
 30808  00166E  0100               	movlb	0	; () banked
 30809  001670  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30810  001672  0E36               	movlw	54
 30811  001674  ECC5  F051         	call	_RADIO_RegisterWrite
 30812                           
 30813                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 30814  001678  0E7F               	movlw	127
 30815  00167A  0100               	movlb	0	; () banked
 30816  00167C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30817  00167E  0E3A               	movlw	58
 30818  001680  ECC5  F051         	call	_RADIO_RegisterWrite
 30819                           
 30820                           ;radio_driver_SX1276.c: 681: }
 30821  001684  D006               	goto	l18616
 30822  001686                     l18614:
 30823                           
 30824                           ; BSR set to: 1
 30825                           ;radio_driver_SX1276.c: 682: else;radio_driver_SX1276.c: 683: {;radio_driver_SX1276.c: 6
      +                          84: RADIO_RegisterWrite(0x36, 0x03);
 30826  001686  0E03               	movlw	3
 30827  001688  0100               	movlb	0	; () banked
 30828  00168A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30829  00168C  0E36               	movlw	54
 30830  00168E  ECC5  F051         	call	_RADIO_RegisterWrite
 30831  001692                     l18616:
 30832                           
 30833                           ;radio_driver_SX1276.c: 685: };radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfig
      +                          uration.bandWidth) && (1 == RadioConfiguration.iqInverted))
 30834  001692  0E09               	movlw	9
 30835  001694  0101               	movlb	1	; () banked
 30836  001696  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30837  001698  A4D8               	btfss	status,2,c
 30838  00169A  D010               	goto	l18622
 30839                           
 30840                           ; BSR set to: 1
 30841  00169C  0549               	decf	(_RadioConfiguration+32)& (0+255),w,b
 30842  00169E  A4D8               	btfss	status,2,c
 30843  0016A0  D00D               	goto	l18622
 30844                           
 30845                           ; BSR set to: 1
 30846                           ;radio_driver_SX1276.c: 689: {;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x6
      +                          5);
 30847  0016A2  0E65               	movlw	101
 30848  0016A4  0100               	movlb	0	; () banked
 30849  0016A6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30850  0016A8  0E3A               	movlw	58
 30851  0016AA  ECC5  F051         	call	_RADIO_RegisterWrite
 30852                           
 30853                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 30854  0016AE  0E19               	movlw	25
 30855  0016B0  0100               	movlb	0	; () banked
 30856  0016B2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30857  0016B4  0E3B               	movlw	59
 30858  0016B6  ECC5  F051         	call	_RADIO_RegisterWrite
 30859                           
 30860                           ;radio_driver_SX1276.c: 692: }
 30861  0016BA  D00C               	goto	l484
 30862  0016BC                     l18622:
 30863                           
 30864                           ; BSR set to: 1
 30865                           ;radio_driver_SX1276.c: 693: else;radio_driver_SX1276.c: 694: {;radio_driver_SX1276.c: 6
      +                          95: RADIO_RegisterWrite(0x3A, 0x65);
 30866  0016BC  0E65               	movlw	101
 30867  0016BE  0100               	movlb	0	; () banked
 30868  0016C0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30869  0016C2  0E3A               	movlw	58
 30870  0016C4  ECC5  F051         	call	_RADIO_RegisterWrite
 30871                           
 30872                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 30873  0016C8  0E1D               	movlw	29
 30874  0016CA  0100               	movlb	0	; () banked
 30875  0016CC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30876  0016CE  0E3B               	movlw	59
 30877  0016D0  ECC5  F051         	call	_RADIO_RegisterWrite
 30878  0016D4                     l484:
 30879                           
 30880                           ;radio_driver_SX1276.c: 697: };radio_driver_SX1276.c: 698: };radio_driver_SX1276.c: 701:
      +                           RADIO_RegisterWrite(0x12, 0xFF);
 30881  0016D4  0EFF               	movlw	255
 30882  0016D6  0100               	movlb	0	; () banked
 30883  0016D8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30884  0016DA  0E12               	movlw	18
 30885  0016DC  ECC5  F051         	call	_RADIO_RegisterWrite
 30886                           
 30887                           ;radio_driver_SX1276.c: 702: }
 30888  0016E0  0012               	return	
 30889  0016E2                     l18624:
 30890                           
 30891                           ; BSR set to: 1
 30892                           ;radio_driver_SX1276.c: 703: else;radio_driver_SX1276.c: 704: {;radio_driver_SX1276.c: 7
      +                          06: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequencyDeviation);
 30893  0016E2  C12D  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 30894  0016E6  C12E  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 30895  0016EA  C12F  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 30896  0016EE  C130  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 30897  0016F2  EC55  F046         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 30898                           
 30899                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 30900  0016F6  C131  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 30901  0016FA  C132  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 30902  0016FE  C133  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 30903  001702  C134  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 30904  001706  ECBE  F046         	call	_RADIO_WriteFSKBitRate	;wreg free
 30905                           
 30906                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 30907  00170A  0101               	movlb	1	; () banked
 30908  00170C  5136               	movf	(_RadioConfiguration+13)& (0+255),w,b
 30909  00170E  0100               	movlb	0	; () banked
 30910  001710  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30911  001712  0E25               	movlw	37
 30912  001714  ECC5  F051         	call	_RADIO_RegisterWrite
 30913                           
 30914                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 30915  001718  C135  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 30916  00171C  0E26               	movlw	38
 30917  00171E  ECC5  F051         	call	_RADIO_RegisterWrite
 30918                           
 30919                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 30920  001722  0E0A               	movlw	10
 30921  001724  ECF5  F050         	call	_RADIO_RegisterRead
 30922  001728  0100               	movlb	0	; () banked
 30923  00172A  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30924                           
 30925                           ; BSR set to: 0
 30926                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 30927  00172C  0E9F               	movlw	159
 30928  00172E  17A8               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30929                           
 30930                           ; BSR set to: 0
 30931                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 30932  001730  0101               	movlb	1	; () banked
 30933  001732  395C               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 30934  001734  46E8               	rlncf	wreg,f,c
 30935  001736  0BE0               	andlw	224
 30936  001738  0100               	movlb	0	; () banked
 30937  00173A  13A8               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30938                           
 30939                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 30940  00173C  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30941  001740  0E0A               	movlw	10
 30942  001742  ECC5  F051         	call	_RADIO_RegisterWrite
 30943                           
 30944                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 30945  001746  0EC8               	movlw	200
 30946  001748  0100               	movlb	0	; () banked
 30947  00174A  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30948                           
 30949                           ; BSR set to: 0
 30950                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 30951  00174C  0101               	movlb	1	; () banked
 30952  00174E  5145               	movf	(_RadioConfiguration+28)& (0+255),w,b
 30953  001750  B4D8               	btfsc	status,2,c
 30954  001752  D002               	goto	l18636
 30955                           
 30956                           ; BSR set to: 1
 30957                           ;radio_driver_SX1276.c: 722: {;radio_driver_SX1276.c: 723: regValue |= 0x10;
 30958  001754  0100               	movlb	0	; () banked
 30959  001756  89A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 30960  001758                     l18636:
 30961                           
 30962                           ;radio_driver_SX1276.c: 724: };radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, reg
      +                          Value);
 30963  001758  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30964  00175C  0E30               	movlw	48
 30965  00175E  ECC5  F051         	call	_RADIO_RegisterWrite
 30966                           
 30967                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 30968  001762  0E00               	movlw	0
 30969  001764  0100               	movlb	0	; () banked
 30970  001766  6FA3               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 30971  001768  D00E               	goto	l18644
 30972  00176A                     l18640:
 30973                           
 30974                           ; BSR set to: 0
 30975                           ;radio_driver_SX1276.c: 729: {;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i,
      +                           RadioConfiguration.syncWord[i]);
 30976  00176A  0E38               	movlw	low (_RadioConfiguration+15)
 30977  00176C  25A3               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 30978  00176E  6ED9               	movwf	fsr2l,c
 30979  001770  6ADA               	clrf	fsr2h,c
 30980  001772  0E01               	movlw	high (_RadioConfiguration+15)
 30981  001774  22DA               	addwfc	fsr2h,f,c
 30982  001776  50DF               	movf	indf2,w,c
 30983  001778  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30984  00177A  51A3               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 30985  00177C  0F28               	addlw	40
 30986  00177E  ECC5  F051         	call	_RADIO_RegisterWrite
 30987  001782  0100               	movlb	0	; () banked
 30988  001784  2BA3               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 30989  001786                     l18644:
 30990                           
 30991                           ; BSR set to: 0
 30992  001786  0101               	movlb	1	; () banked
 30993  001788  5140               	movf	(_RadioConfiguration+23)& (0+255),w,b
 30994  00178A  0100               	movlb	0	; () banked
 30995  00178C  5DA3               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 30996  00178E  A0D8               	btfss	status,0,c
 30997  001790  D7EC               	goto	l18640
 30998                           
 30999                           ; BSR set to: 0
 31000                           ;radio_driver_SX1276.c: 733: };radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWo
      +                          rdLen != 0)
 31001  001792  0101               	movlb	1	; () banked
 31002  001794  5140               	movf	(_RadioConfiguration+23)& (0+255),w,b
 31003  001796  B4D8               	btfsc	status,2,c
 31004  001798  D008               	goto	l18650
 31005                           
 31006                           ; BSR set to: 1
 31007                           ;radio_driver_SX1276.c: 737: {;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x1
      +                          0 | (RadioConfiguration.syncWordLen - 1));
 31008  00179A  0540               	decf	(_RadioConfiguration+23)& (0+255),w,b
 31009  00179C  0910               	iorlw	16
 31010  00179E  0100               	movlb	0	; () banked
 31011  0017A0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31012  0017A2  0E27               	movlw	39
 31013  0017A4  ECC5  F051         	call	_RADIO_RegisterWrite
 31014                           
 31015                           ;radio_driver_SX1276.c: 739: }
 31016  0017A8  D006               	goto	l497
 31017  0017AA                     l18650:
 31018                           
 31019                           ; BSR set to: 1
 31020                           ;radio_driver_SX1276.c: 740: else;radio_driver_SX1276.c: 741: {;radio_driver_SX1276.c: 7
      +                          42: RADIO_RegisterWrite(0x27, 0x00);
 31021  0017AA  0E00               	movlw	0
 31022  0017AC  0100               	movlb	0	; () banked
 31023  0017AE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31024  0017B0  0E27               	movlw	39
 31025  0017B2  ECC5  F051         	call	_RADIO_RegisterWrite
 31026  0017B6                     l497:
 31027                           
 31028                           ;radio_driver_SX1276.c: 743: };radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xF
      +                          F);
 31029  0017B6  0EFF               	movlw	255
 31030  0017B8  0100               	movlb	0	; () banked
 31031  0017BA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31032  0017BC  0E3E               	movlw	62
 31033  0017BE  ECC5  F051         	call	_RADIO_RegisterWrite
 31034                           
 31035                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 31036  0017C2  0EFF               	movlw	255
 31037  0017C4  0100               	movlb	0	; () banked
 31038  0017C6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31039  0017C8  0E3F               	movlw	63
 31040  0017CA  ECC5  F051         	call	_RADIO_RegisterWrite
 31041  0017CE  0012               	return		;funcret
 31042  0017D0                     __end_of_RADIO_WriteConfiguration:
 31043                           	opt callstack 0
 31044                           
 31045 ;; *************** function _RADIO_WritePower *****************
 31046 ;; Defined at:
 31047 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31048 ;; Parameters:    Size  Location     Type
 31049 ;;  power           1    wreg     char 
 31050 ;; Auto vars:     Size  Location     Type
 31051 ;;  power           1    6[BANK0 ] char 
 31052 ;;  paDac           1    5[BANK0 ] unsigned char 
 31053 ;;  ocp             1    4[BANK0 ] unsigned char 
 31054 ;; Return value:  Size  Location     Type
 31055 ;;                  1    wreg      void 
 31056 ;; Registers used:
 31057 ;;		wreg, status,2, status,0, cstack
 31058 ;; Tracked objects:
 31059 ;;		On entry : 0/0
 31060 ;;		On exit  : 0/0
 31061 ;;		Unchanged: 0/0
 31062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31064 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31066 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31067 ;;Total ram usage:        3 bytes
 31068 ;; Hardware stack levels used:    1
 31069 ;; Hardware stack levels required when called:   10
 31070 ;; This function calls:
 31071 ;;		_RADIO_RegisterRead
 31072 ;;		_RADIO_RegisterWrite
 31073 ;; This function is called by:
 31074 ;;		_RADIO_WriteConfiguration
 31075 ;; This function uses a non-reentrant model
 31076 ;;
 31077                           
 31078                           	psect	text192
 31079  007206                     __ptext192:
 31080                           	opt callstack 0
 31081  007206                     _RADIO_WritePower:
 31082                           	opt callstack 15
 31083                           
 31084                           ;incstack = 0
 31085                           ;RADIO_WritePower@power stored from wreg
 31086  007206  0100               	movlb	0	; () banked
 31087  007208  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31088                           
 31089                           ;radio_driver_SX1276.c: 344: uint8_t paDac;;radio_driver_SX1276.c: 345: uint8_t ocp;;rad
      +                          io_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 31090  00720A  0101               	movlb	1	; () banked
 31091  00720C  5146               	movf	(_RadioConfiguration+29)& (0+255),w,b
 31092  00720E  A4D8               	btfss	status,2,c
 31093  007210  D02F               	goto	l18304
 31094                           
 31095                           ; BSR set to: 1
 31096                           ;radio_driver_SX1276.c: 348: {;radio_driver_SX1276.c: 350: if (power < -3)
 31097  007212  0100               	movlb	0	; () banked
 31098  007214  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31099  007216  0A80               	xorlw	128
 31100  007218  0F83               	addlw	131
 31101  00721A  B0D8               	btfsc	status,0,c
 31102  00721C  D002               	goto	l18284
 31103                           
 31104                           ; BSR set to: 0
 31105                           ;radio_driver_SX1276.c: 351: {;radio_driver_SX1276.c: 352: power = -3;
 31106  00721E  0EFD               	movlw	253
 31107  007220  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31108  007222                     l18284:
 31109                           
 31110                           ; BSR set to: 0
 31111                           ;radio_driver_SX1276.c: 353: };radio_driver_SX1276.c: 354: if (power > 15)
 31112  007222  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31113  007224  0A80               	xorlw	128
 31114  007226  0F70               	addlw	-144
 31115  007228  A0D8               	btfss	status,0,c
 31116  00722A  D002               	goto	l18288
 31117                           
 31118                           ; BSR set to: 0
 31119                           ;radio_driver_SX1276.c: 355: {;radio_driver_SX1276.c: 356: power = 15;
 31120  00722C  0E0F               	movlw	15
 31121  00722E  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31122  007230                     l18288:
 31123                           
 31124                           ; BSR set to: 0
 31125                           ;radio_driver_SX1276.c: 357: };radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x
      +                          4D);
 31126  007230  0E4D               	movlw	77
 31127  007232  ECF5  F050         	call	_RADIO_RegisterRead
 31128  007236  0100               	movlb	0	; () banked
 31129  007238  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 31130                           
 31131                           ; BSR set to: 0
 31132                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 31133  00723A  0EF8               	movlw	248
 31134  00723C  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31135                           
 31136                           ; BSR set to: 0
 31137                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 31138  00723E  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31139                           
 31140                           ; BSR set to: 0
 31141                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 31142  007240  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31143  007244  0E4D               	movlw	77
 31144  007246  ECC5  F051         	call	_RADIO_RegisterWrite
 31145                           
 31146                           ;radio_driver_SX1276.c: 364: if (power < 0)
 31147  00724A  0100               	movlb	0	; () banked
 31148  00724C  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 31149  00724E  D009               	goto	l18302
 31150                           
 31151                           ; BSR set to: 0
 31152                           ;radio_driver_SX1276.c: 365: {;radio_driver_SX1276.c: 369: power += 3;
 31153  007250  0E03               	movlw	3
 31154  007252  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 31155                           
 31156                           ; BSR set to: 0
 31157                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 31158  007254  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31159  007256  0920               	iorlw	32
 31160  007258  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31161  00725A  0E09               	movlw	9
 31162  00725C  ECC5  F051         	call	_RADIO_RegisterWrite
 31163                           
 31164                           ;radio_driver_SX1276.c: 371: }
 31165  007260  0012               	return	
 31166  007262                     l18302:
 31167                           
 31168                           ; BSR set to: 0
 31169                           ;radio_driver_SX1276.c: 372: else;radio_driver_SX1276.c: 373: {;radio_driver_SX1276.c: 3
      +                          77: RADIO_RegisterWrite(0x09, 0x70 | power);
 31170  007262  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31171  007264  0970               	iorlw	112
 31172  007266  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31173  007268  0E09               	movlw	9
 31174  00726A  ECC5  F051         	call	_RADIO_RegisterWrite
 31175  00726E  0012               	return	
 31176  007270                     l18304:
 31177                           
 31178                           ; BSR set to: 1
 31179                           ;radio_driver_SX1276.c: 380: else;radio_driver_SX1276.c: 381: {;radio_driver_SX1276.c: 3
      +                          85: if (power < 2)
 31180  007270  0100               	movlb	0	; () banked
 31181  007272  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31182  007274  0A80               	xorlw	128
 31183  007276  0F7E               	addlw	-130
 31184  007278  B0D8               	btfsc	status,0,c
 31185  00727A  D002               	goto	l18308
 31186                           
 31187                           ; BSR set to: 0
 31188                           ;radio_driver_SX1276.c: 386: {;radio_driver_SX1276.c: 387: power = 2;
 31189  00727C  0E02               	movlw	2
 31190  00727E  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31191  007280                     l18308:
 31192                           
 31193                           ; BSR set to: 0
 31194                           ;radio_driver_SX1276.c: 388: };radio_driver_SX1276.c: 391: if (power >= 20)
 31195  007280  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31196  007282  0A80               	xorlw	128
 31197  007284  0F6C               	addlw	-148
 31198  007286  A0D8               	btfss	status,0,c
 31199  007288  D002               	goto	l18312
 31200                           
 31201                           ; BSR set to: 0
 31202                           ;radio_driver_SX1276.c: 392: {;radio_driver_SX1276.c: 393: power = 20;
 31203  00728A  0E14               	movlw	20
 31204  00728C  D006               	goto	L31
 31205  00728E                     l18312:
 31206                           
 31207                           ; BSR set to: 0
 31208                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 31209  00728E  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31210  007290  0A80               	xorlw	128
 31211  007292  0F6E               	addlw	-146
 31212  007294  A0D8               	btfss	status,0,c
 31213  007296  D002               	goto	l18316
 31214                           
 31215                           ; BSR set to: 0
 31216                           ;radio_driver_SX1276.c: 396: {;radio_driver_SX1276.c: 397: power = 17;
 31217  007298  0E11               	movlw	17
 31218  00729A                     L31:
 31219  00729A  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31220  00729C                     l18316:
 31221                           
 31222                           ; BSR set to: 0
 31223                           ;radio_driver_SX1276.c: 398: };radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B
      +                          );
 31224  00729C  0E0B               	movlw	11
 31225  00729E  ECF5  F050         	call	_RADIO_RegisterRead
 31226  0072A2  0100               	movlb	0	; () banked
 31227  0072A4  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 31228                           
 31229                           ; BSR set to: 0
 31230                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 31231  0072A6  0E4D               	movlw	77
 31232  0072A8  ECF5  F050         	call	_RADIO_RegisterRead
 31233  0072AC  0100               	movlb	0	; () banked
 31234  0072AE  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 31235                           
 31236                           ; BSR set to: 0
 31237                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 31238  0072B0  0EF8               	movlw	248
 31239  0072B2  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31240                           
 31241                           ; BSR set to: 0
 31242                           ;radio_driver_SX1276.c: 403: if (power == 20)
 31243  0072B4  0E14               	movlw	20
 31244  0072B6  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 31245  0072B8  A4D8               	btfss	status,2,c
 31246  0072BA  D006               	goto	l18330
 31247                           
 31248                           ; BSR set to: 0
 31249                           ;radio_driver_SX1276.c: 404: {;radio_driver_SX1276.c: 405: paDac |= 0x07;
 31250  0072BC  0E07               	movlw	7
 31251  0072BE  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 31252                           
 31253                           ; BSR set to: 0
 31254                           ;radio_driver_SX1276.c: 406: power = 15;
 31255  0072C0  0E0F               	movlw	15
 31256  0072C2  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31257                           
 31258                           ; BSR set to: 0
 31259                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 31260  0072C4  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 31261                           
 31262                           ;radio_driver_SX1276.c: 408: }
 31263  0072C6  D004               	goto	l18336
 31264  0072C8                     l18330:
 31265                           
 31266                           ; BSR set to: 0
 31267                           ;radio_driver_SX1276.c: 409: else;radio_driver_SX1276.c: 410: {;radio_driver_SX1276.c: 4
      +                          11: paDac |= 0x04;
 31268  0072C8  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31269                           
 31270                           ; BSR set to: 0
 31271                           ;radio_driver_SX1276.c: 412: power -= 2;
 31272  0072CA  0EFE               	movlw	254
 31273  0072CC  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 31274                           
 31275                           ; BSR set to: 0
 31276                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 31277  0072CE  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 31278  0072D0                     l18336:
 31279                           
 31280                           ; BSR set to: 0
 31281                           ;radio_driver_SX1276.c: 414: };radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paD
      +                          ac);
 31282  0072D0  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31283  0072D4  0E4D               	movlw	77
 31284  0072D6  ECC5  F051         	call	_RADIO_RegisterWrite
 31285                           
 31286                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 31287  0072DA  0100               	movlb	0	; () banked
 31288  0072DC  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31289  0072DE  0980               	iorlw	128
 31290  0072E0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31291  0072E2  0E09               	movlw	9
 31292  0072E4  ECC5  F051         	call	_RADIO_RegisterWrite
 31293                           
 31294                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 31295  0072E8  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 31296  0072EC  0E0B               	movlw	11
 31297  0072EE  ECC5  F051         	call	_RADIO_RegisterWrite
 31298  0072F2  0012               	return		;funcret
 31299  0072F4                     __end_of_RADIO_WritePower:
 31300                           	opt callstack 0
 31301                           
 31302 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 31303 ;; Defined at:
 31304 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31305 ;; Parameters:    Size  Location     Type
 31306 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 31307 ;; Auto vars:     Size  Location     Type
 31308 ;;  num             4   17[BANK0 ] unsigned long 
 31309 ;; Return value:  Size  Location     Type
 31310 ;;                  1    wreg      void 
 31311 ;; Registers used:
 31312 ;;		wreg, status,2, status,0, cstack
 31313 ;; Tracked objects:
 31314 ;;		On entry : 0/0
 31315 ;;		On exit  : 0/0
 31316 ;;		Unchanged: 0/0
 31317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31318 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31319 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31321 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31322 ;;Total ram usage:        8 bytes
 31323 ;; Hardware stack levels used:    1
 31324 ;; Hardware stack levels required when called:   10
 31325 ;; This function calls:
 31326 ;;		_RADIO_RegisterWrite
 31327 ;;		___lldiv
 31328 ;; This function is called by:
 31329 ;;		_RADIO_WriteConfiguration
 31330 ;; This function uses a non-reentrant model
 31331 ;;
 31332                           
 31333                           	psect	text193
 31334  008CAA                     __ptext193:
 31335                           	opt callstack 0
 31336  008CAA                     _RADIO_WriteFSKFrequencyDeviation:
 31337                           	opt callstack 15
 31338                           
 31339                           ;radio_driver_SX1276.c: 296: uint32_t num;;radio_driver_SX1276.c: 303: num = frequencyDe
      +                          viation;
 31340                           
 31341                           ;incstack = 0
 31342  008CAA  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 31343  008CAE  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 31344  008CB2  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 31345  008CB6  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 31346                           
 31347                           ;radio_driver_SX1276.c: 304: num <<= (8);
 31348  008CBA  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 31349  008CBE  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 31350  008CC2  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 31351  008CC6  0100               	movlb	0	; () banked
 31352  008CC8  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 31353                           
 31354                           ; BSR set to: 0
 31355                           ;radio_driver_SX1276.c: 305: num /= 15625;
 31356  008CCA  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 31357  008CCE  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 31358  008CD2  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 31359  008CD6  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 31360  008CDA  0E09               	movlw	9
 31361  008CDC  6F64               	movwf	___lldiv@divisor& (0+255),b
 31362  008CDE  0E3D               	movlw	61
 31363  008CE0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 31364  008CE2  0E00               	movlw	0
 31365  008CE4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 31366  008CE6  0E00               	movlw	0
 31367  008CE8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 31368  008CEA  EC96  F042         	call	___lldiv	;wreg free
 31369  008CEE  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 31370  008CF2  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 31371  008CF6  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 31372  008CFA  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 31373                           
 31374                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 31375  008CFE  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 31376  008D02  0E04               	movlw	4
 31377  008D04  ECC5  F051         	call	_RADIO_RegisterWrite
 31378                           
 31379                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 31380  008D08  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 31381  008D0C  0E05               	movlw	5
 31382  008D0E  ECC5  F051         	call	_RADIO_RegisterWrite
 31383  008D12  0012               	return		;funcret
 31384  008D14                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 31385                           	opt callstack 0
 31386                           
 31387 ;; *************** function _RADIO_WriteFSKBitRate *****************
 31388 ;; Defined at:
 31389 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31390 ;; Parameters:    Size  Location     Type
 31391 ;;  bitRate         4   13[BANK0 ] unsigned long 
 31392 ;; Auto vars:     Size  Location     Type
 31393 ;;  num             4   17[BANK0 ] unsigned long 
 31394 ;; Return value:  Size  Location     Type
 31395 ;;                  1    wreg      void 
 31396 ;; Registers used:
 31397 ;;		wreg, status,2, status,0, cstack
 31398 ;; Tracked objects:
 31399 ;;		On entry : 0/0
 31400 ;;		On exit  : 0/0
 31401 ;;		Unchanged: 0/0
 31402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31403 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31406 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31407 ;;Total ram usage:        8 bytes
 31408 ;; Hardware stack levels used:    1
 31409 ;; Hardware stack levels required when called:   10
 31410 ;; This function calls:
 31411 ;;		_RADIO_RegisterWrite
 31412 ;;		___lldiv
 31413 ;; This function is called by:
 31414 ;;		_RADIO_WriteConfiguration
 31415 ;; This function uses a non-reentrant model
 31416 ;;
 31417                           
 31418                           	psect	text194
 31419  008D7C                     __ptext194:
 31420                           	opt callstack 0
 31421  008D7C                     _RADIO_WriteFSKBitRate:
 31422                           	opt callstack 15
 31423                           
 31424                           ;radio_driver_SX1276.c: 318: uint32_t num;;radio_driver_SX1276.c: 320: num = 32000000;
 31425                           
 31426                           ;incstack = 0
 31427  008D7C  0E00               	movlw	0
 31428  008D7E  0100               	movlb	0	; () banked
 31429  008D80  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 31430  008D82  0E48               	movlw	72
 31431  008D84  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 31432  008D86  0EE8               	movlw	232
 31433  008D88  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 31434  008D8A  0E01               	movlw	1
 31435  008D8C  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 31436                           
 31437                           ; BSR set to: 0
 31438                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 31439  008D8E  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 31440  008D92  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 31441  008D96  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 31442  008D9A  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 31443  008D9E  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 31444  008DA2  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 31445  008DA6  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 31446  008DAA  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 31447  008DAE  EC96  F042         	call	___lldiv	;wreg free
 31448  008DB2  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 31449  008DB6  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 31450  008DBA  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 31451  008DBE  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 31452                           
 31453                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 31454  008DC2  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 31455  008DC6  0E02               	movlw	2
 31456  008DC8  ECC5  F051         	call	_RADIO_RegisterWrite
 31457                           
 31458                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 31459  008DCC  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 31460  008DD0  0E03               	movlw	3
 31461  008DD2  ECC5  F051         	call	_RADIO_RegisterWrite
 31462                           
 31463                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 31464  008DD6  0E00               	movlw	0
 31465  008DD8  0100               	movlb	0	; () banked
 31466  008DDA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31467  008DDC  0E5D               	movlw	93
 31468  008DDE  ECC5  F051         	call	_RADIO_RegisterWrite
 31469  008DE2  0012               	return		;funcret
 31470  008DE4                     __end_of_RADIO_WriteFSKBitRate:
 31471                           	opt callstack 0
 31472                           
 31473 ;; *************** function _PrepareJoinRequestFrame *****************
 31474 ;; Defined at:
 31475 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31476 ;; Parameters:    Size  Location     Type
 31477 ;;		None
 31478 ;; Auto vars:     Size  Location     Type
 31479 ;;  mic             4  115[BANK0 ] unsigned long 
 31480 ;;  bufferIndex     1  121[BANK0 ] unsigned char 
 31481 ;;  iCtr            1  120[BANK0 ] unsigned char 
 31482 ;;  mhdr            1  119[BANK0 ] struct .
 31483 ;; Return value:  Size  Location     Type
 31484 ;;                  1    wreg      unsigned char 
 31485 ;; Registers used:
 31486 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31487 ;; Tracked objects:
 31488 ;;		On entry : 0/0
 31489 ;;		On exit  : 0/0
 31490 ;;		Unchanged: 0/0
 31491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31493 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31494 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31495 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31496 ;;Total ram usage:        9 bytes
 31497 ;; Hardware stack levels used:    1
 31498 ;; Hardware stack levels required when called:   13
 31499 ;; This function calls:
 31500 ;;		_ComputeMic
 31501 ;;		_Random
 31502 ;;		_memcpy
 31503 ;;		_memset
 31504 ;; This function is called by:
 31505 ;;		_LORAWAN_Join
 31506 ;; This function uses a non-reentrant model
 31507 ;;
 31508                           
 31509                           	psect	text195
 31510  0056DC                     __ptext195:
 31511                           	opt callstack 0
 31512  0056DC                     _PrepareJoinRequestFrame:
 31513                           	opt callstack 16
 31514                           
 31515                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 31516                           
 31517                           ;incstack = 0
 31518  0056DC  0E00               	movlw	0
 31519  0056DE  0100               	movlb	0	; () banked
 31520  0056E0  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31521                           
 31522                           ; BSR set to: 0
 31523                           ;lorawan.c: 1809: Mhdr_t mhdr;;lorawan.c: 1810: uint32_t mic;;lorawan.c: 1812: memset (m
      +                          acBuffer, 0, sizeof(macBuffer) );
 31524  0056E2  0EB8               	movlw	low _macBuffer
 31525  0056E4  6F60               	movwf	memset@p1& (0+255),b
 31526  0056E6  0E06               	movlw	high _macBuffer
 31527  0056E8  6F61               	movwf	(memset@p1+1)& (0+255),b
 31528  0056EA  0E00               	movlw	0
 31529  0056EC  6F63               	movwf	(memset@c+1)& (0+255),b
 31530  0056EE  0E00               	movlw	0
 31531  0056F0  6F62               	movwf	memset@c& (0+255),b
 31532  0056F2  0E01               	movlw	1
 31533  0056F4  6F65               	movwf	(memset@n+1)& (0+255),b
 31534  0056F6  0E0F               	movlw	15
 31535  0056F8  6F64               	movwf	memset@n& (0+255),b
 31536  0056FA  ECCA  F04F         	call	_memset	;wreg free
 31537                           
 31538                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 31539  0056FE  0E1F               	movlw	-225
 31540  005700  0100               	movlb	0	; () banked
 31541  005702  17D7               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31542                           
 31543                           ; BSR set to: 0
 31544                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 31545  005704  0EFC               	movlw	-4
 31546  005706  17D7               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31547                           
 31548                           ; BSR set to: 0
 31549                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 31550  005708  0EE3               	movlw	-29
 31551  00570A  17D7               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31552                           
 31553                           ; BSR set to: 0
 31554                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 31555  00570C  EE26  F0B8         	lfsr	2,_macBuffer
 31556  005710  C0D7  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 31557                           
 31558                           ; BSR set to: 0
 31559  005714  2BD9               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 31560                           
 31561                           ; BSR set to: 0
 31562                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 31563  005716  0E00               	movlw	0
 31564  005718  6FD8               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 31565  00571A                     l21664:
 31566                           
 31567                           ; BSR set to: 0
 31568                           ;lorawan.c: 1821: {;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationPara
      +                          meters.applicationEui.buffer[7 - iCtr];
 31569  00571A  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31570  00571C  085E               	sublw	low (_loRa+89)
 31571  00571E  6ED9               	movwf	fsr2l,c
 31572  005720  0E00               	movlw	0
 31573  005722  A0D8               	btfss	status,0,c
 31574  005724  2AE8               	incf	wreg,f,c
 31575  005726  0802               	sublw	high (_loRa+89)
 31576  005728  6EDA               	movwf	fsr2h,c
 31577  00572A  0EB8               	movlw	low _macBuffer
 31578  00572C  6FD1               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 31579  00572E  0E06               	movlw	high _macBuffer
 31580  005730  6FD2               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 31581  005732  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31582  005734  27D1               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 31583  005736  0E00               	movlw	0
 31584  005738  23D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 31585  00573A  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31586  00573C  25D1               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 31587  00573E  6EE9               	movwf	fsr0l,c
 31588  005740  0E00               	movlw	0
 31589  005742  21D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 31590  005744  6EEA               	movwf	fsr0h,c
 31591  005746  CFDF FFEF          	movff	indf2,indf0
 31592                           
 31593                           ; BSR set to: 0
 31594  00574A  2BD8               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 31595                           
 31596                           ; BSR set to: 0
 31597  00574C  0E07               	movlw	7
 31598  00574E  65D8               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 31599  005750  D7E4               	goto	l21664
 31600                           
 31601                           ; BSR set to: 0
 31602                           ;lorawan.c: 1823: };lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationP
      +                          arameters.applicationEui);
 31603  005752  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31604  005754  0F08               	addlw	8
 31605  005756  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31606                           
 31607                           ; BSR set to: 0
 31608                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 31609  005758  0E00               	movlw	0
 31610  00575A  6FD8               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 31611  00575C                     l21678:
 31612                           
 31613                           ; BSR set to: 0
 31614                           ;lorawan.c: 1828: {;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationPara
      +                          meters.deviceEui.buffer[7 - iCtr];
 31615  00575C  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31616  00575E  0866               	sublw	low (_loRa+97)
 31617  005760  6ED9               	movwf	fsr2l,c
 31618  005762  0E00               	movlw	0
 31619  005764  A0D8               	btfss	status,0,c
 31620  005766  2AE8               	incf	wreg,f,c
 31621  005768  0802               	sublw	high (_loRa+97)
 31622  00576A  6EDA               	movwf	fsr2h,c
 31623  00576C  0EB8               	movlw	low _macBuffer
 31624  00576E  6FD1               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 31625  005770  0E06               	movlw	high _macBuffer
 31626  005772  6FD2               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 31627  005774  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31628  005776  27D1               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 31629  005778  0E00               	movlw	0
 31630  00577A  23D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 31631  00577C  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31632  00577E  25D1               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 31633  005780  6EE9               	movwf	fsr0l,c
 31634  005782  0E00               	movlw	0
 31635  005784  21D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 31636  005786  6EEA               	movwf	fsr0h,c
 31637  005788  CFDF FFEF          	movff	indf2,indf0
 31638                           
 31639                           ; BSR set to: 0
 31640  00578C  2BD8               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 31641                           
 31642                           ; BSR set to: 0
 31643  00578E  0E07               	movlw	7
 31644  005790  65D8               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 31645  005792  D7E4               	goto	l21678
 31646                           
 31647                           ; BSR set to: 0
 31648                           ;lorawan.c: 1830: };lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activation
      +                          Parameters.deviceEui );
 31649  005794  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31650  005796  0F08               	addlw	8
 31651  005798  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31652                           
 31653                           ; BSR set to: 0
 31654                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 31655  00579A  0EFF               	movlw	255
 31656  00579C  6FA6               	movwf	(Random@max+1)& (0+255),b
 31657  00579E  69A5               	setf	Random@max& (0+255),b
 31658  0057A0  EC73  F051         	call	_Random	;wreg free
 31659  0057A4  C0A5  F2D7         	movff	?_Random,_loRa+210
 31660  0057A8  C0A6  F2D8         	movff	?_Random+1,_loRa+211
 31661                           
 31662                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 31663  0057AC  0EB8               	movlw	low _macBuffer
 31664  0057AE  0100               	movlb	0	; () banked
 31665  0057B0  25D9               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31666  0057B2  6F60               	movwf	memcpy@d1& (0+255),b
 31667  0057B4  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 31668  0057B6  0E06               	movlw	high _macBuffer
 31669  0057B8  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 31670  0057BA  0ED7               	movlw	low (_loRa+210)
 31671  0057BC  6F62               	movwf	memcpy@s1& (0+255),b
 31672  0057BE  0E02               	movlw	high (_loRa+210)
 31673  0057C0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31674  0057C2  0E00               	movlw	0
 31675  0057C4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31676  0057C6  0E02               	movlw	2
 31677  0057C8  6F64               	movwf	memcpy@n& (0+255),b
 31678  0057CA  ECEC  F047         	call	_memcpy	;wreg free
 31679                           
 31680                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 31681  0057CE  0100               	movlb	0	; () banked
 31682  0057D0  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31683  0057D2  0F02               	addlw	2
 31684  0057D4  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31685                           
 31686                           ; BSR set to: 0
 31687                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 31688  0057D6  0E47               	movlw	low (_loRa+66)
 31689  0057D8  6FC8               	movwf	ComputeMic@key& (0+255),b
 31690  0057DA  0E02               	movlw	high (_loRa+66)
 31691  0057DC  6FC9               	movwf	(ComputeMic@key+1)& (0+255),b
 31692  0057DE  0EB8               	movlw	low _macBuffer
 31693  0057E0  6FCA               	movwf	ComputeMic@buffer& (0+255),b
 31694  0057E2  0E06               	movlw	high _macBuffer
 31695  0057E4  6FCB               	movwf	(ComputeMic@buffer+1)& (0+255),b
 31696  0057E6  C0D9  F0CC         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 31697  0057EA  EC8A  F047         	call	_ComputeMic	;wreg free
 31698  0057EE  C0C8  F0D3         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 31699  0057F2  C0C9  F0D4         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 31700  0057F6  C0CA  F0D5         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 31701  0057FA  C0CB  F0D6         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 31702                           
 31703                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 31704  0057FE  0EB8               	movlw	low _macBuffer
 31705  005800  0100               	movlb	0	; () banked
 31706  005802  25D9               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31707  005804  6F60               	movwf	memcpy@d1& (0+255),b
 31708  005806  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 31709  005808  0E06               	movlw	high _macBuffer
 31710  00580A  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 31711  00580C  0ED3               	movlw	low PrepareJoinRequestFrame@mic
 31712  00580E  6F62               	movwf	memcpy@s1& (0+255),b
 31713  005810  0E00               	movlw	high PrepareJoinRequestFrame@mic
 31714  005812  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31715  005814  0E00               	movlw	0
 31716  005816  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31717  005818  0E04               	movlw	4
 31718  00581A  6F64               	movwf	memcpy@n& (0+255),b
 31719  00581C  ECEC  F047         	call	_memcpy	;wreg free
 31720                           
 31721                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 31722  005820  0100               	movlb	0	; () banked
 31723  005822  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31724  005824  0F04               	addlw	4
 31725  005826  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31726                           
 31727                           ; BSR set to: 0
 31728                           ;lorawan.c: 1842: return bufferIndex;
 31729  005828  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31730                           
 31731                           ; BSR set to: 0
 31732  00582A  0012               	return		;funcret
 31733  00582C                     __end_of_PrepareJoinRequestFrame:
 31734                           	opt callstack 0
 31735                           
 31736 ;; *************** function _Random *****************
 31737 ;; Defined at:
 31738 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31739 ;; Parameters:    Size  Location     Type
 31740 ;;  max             2   69[BANK0 ] unsigned int 
 31741 ;; Auto vars:     Size  Location     Type
 31742 ;;		None
 31743 ;; Return value:  Size  Location     Type
 31744 ;;                  2   69[BANK0 ] unsigned int 
 31745 ;; Registers used:
 31746 ;;		wreg, status,2, status,0, cstack
 31747 ;; Tracked objects:
 31748 ;;		On entry : 0/0
 31749 ;;		On exit  : 0/0
 31750 ;;		Unchanged: 0/0
 31751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31752 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31755 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31756 ;;Total ram usage:        2 bytes
 31757 ;; Hardware stack levels used:    1
 31758 ;; Hardware stack levels required when called:    9
 31759 ;; This function calls:
 31760 ;;		___lwmod
 31761 ;;		_rand
 31762 ;; This function is called by:
 31763 ;;		_SearchAvailableChannel
 31764 ;;		_PrepareJoinRequestFrame
 31765 ;; This function uses a non-reentrant model
 31766 ;;
 31767                           
 31768                           	psect	text196
 31769  00A2E6                     __ptext196:
 31770                           	opt callstack 0
 31771  00A2E6                     _Random:
 31772                           	opt callstack 16
 31773                           
 31774                           ;lorawan.c: 1118: return (rand () % max);
 31775                           
 31776                           ; BSR set to: 0
 31777                           ;incstack = 0
 31778  00A2E6  ECA8  F048         	call	_rand	;wreg free
 31779  00A2EA  C09E  F0A0         	movff	?_rand,___lwmod@dividend
 31780  00A2EE  C09F  F0A1         	movff	?_rand+1,___lwmod@dividend+1
 31781  00A2F2  C0A5  F0A2         	movff	Random@max,___lwmod@divisor
 31782  00A2F6  C0A6  F0A3         	movff	Random@max+1,___lwmod@divisor+1
 31783  00A2FA  EC5D  F04C         	call	___lwmod	;wreg free
 31784  00A2FE  C0A0  F0A5         	movff	?___lwmod,?_Random
 31785  00A302  C0A1  F0A6         	movff	?___lwmod+1,?_Random+1
 31786  00A306  0012               	return		;funcret
 31787  00A308                     __end_of_Random:
 31788                           	opt callstack 0
 31789                           
 31790 ;; *************** function _rand *****************
 31791 ;; Defined at:
 31792 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 31793 ;; Parameters:    Size  Location     Type
 31794 ;;		None
 31795 ;; Auto vars:     Size  Location     Type
 31796 ;;		None
 31797 ;; Return value:  Size  Location     Type
 31798 ;;                  2   62[BANK0 ] int 
 31799 ;; Registers used:
 31800 ;;		wreg, status,2, status,0, cstack
 31801 ;; Tracked objects:
 31802 ;;		On entry : 0/0
 31803 ;;		On exit  : 0/0
 31804 ;;		Unchanged: 0/0
 31805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31806 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31809 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31810 ;;Total ram usage:        2 bytes
 31811 ;; Hardware stack levels used:    1
 31812 ;; Hardware stack levels required when called:    8
 31813 ;; This function calls:
 31814 ;;		___lmul
 31815 ;; This function is called by:
 31816 ;;		_Random
 31817 ;; This function uses a non-reentrant model
 31818 ;;
 31819                           
 31820                           	psect	text197
 31821  009150                     __ptext197:
 31822                           	opt callstack 0
 31823  009150                     _rand:
 31824                           	opt callstack 16
 31825                           
 31826                           ;incstack = 0
 31827  009150  C1EF  F092         	movff	_randx,___lmul@multiplier
 31828  009154  C1F0  F093         	movff	_randx+1,___lmul@multiplier+1
 31829  009158  C1F1  F094         	movff	_randx+2,___lmul@multiplier+2
 31830  00915C  C1F2  F095         	movff	_randx+3,___lmul@multiplier+3
 31831  009160  0E6D               	movlw	109
 31832  009162  0100               	movlb	0	; () banked
 31833  009164  6F96               	movwf	___lmul@multiplicand& (0+255),b
 31834  009166  0E4E               	movlw	78
 31835  009168  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31836  00916A  0EC6               	movlw	198
 31837  00916C  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31838  00916E  0E41               	movlw	65
 31839  009170  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31840  009172  ECD6  F048         	call	___lmul	;wreg free
 31841  009176  C092  F1EF         	movff	?___lmul,_randx
 31842  00917A  C093  F1F0         	movff	?___lmul+1,_randx+1
 31843  00917E  C094  F1F1         	movff	?___lmul+2,_randx+2
 31844  009182  C095  F1F2         	movff	?___lmul+3,_randx+3
 31845  009186  0E39               	movlw	57
 31846  009188  0101               	movlb	1	; () banked
 31847  00918A  27EF               	addwf	_randx& (0+255),f,b
 31848  00918C  0E30               	movlw	48
 31849  00918E  23F0               	addwfc	(_randx+1)& (0+255),f,b
 31850  009190  0E00               	movlw	0
 31851  009192  23F1               	addwfc	(_randx+2)& (0+255),f,b
 31852  009194  0E00               	movlw	0
 31853  009196  23F2               	addwfc	(_randx+3)& (0+255),f,b
 31854                           
 31855                           ; BSR set to: 1
 31856  009198  0EFF               	movlw	255
 31857  00919A  15F1               	andwf	(_randx+2)& (0+255),w,b
 31858  00919C  0100               	movlb	0	; () banked
 31859  00919E  6F9E               	movwf	?_rand& (0+255),b
 31860  0091A0  0E7F               	movlw	127
 31861  0091A2  0101               	movlb	1	; () banked
 31862  0091A4  15F2               	andwf	(_randx+3)& (0+255),w,b
 31863  0091A6  0100               	movlb	0	; () banked
 31864  0091A8  6F9F               	movwf	(?_rand+1)& (0+255),b
 31865                           
 31866                           ; BSR set to: 0
 31867  0091AA  0012               	return		;funcret
 31868  0091AC                     __end_of_rand:
 31869                           	opt callstack 0
 31870                           
 31871 ;; *************** function ___lwmod *****************
 31872 ;; Defined at:
 31873 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 31874 ;; Parameters:    Size  Location     Type
 31875 ;;  dividend        2   64[BANK0 ] unsigned int 
 31876 ;;  divisor         2   66[BANK0 ] unsigned int 
 31877 ;; Auto vars:     Size  Location     Type
 31878 ;;  counter         1   68[BANK0 ] unsigned char 
 31879 ;; Return value:  Size  Location     Type
 31880 ;;                  2   64[BANK0 ] unsigned int 
 31881 ;; Registers used:
 31882 ;;		wreg, status,2, status,0
 31883 ;; Tracked objects:
 31884 ;;		On entry : 0/0
 31885 ;;		On exit  : 0/0
 31886 ;;		Unchanged: 0/0
 31887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31888 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31891 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31892 ;;Total ram usage:        5 bytes
 31893 ;; Hardware stack levels used:    1
 31894 ;; Hardware stack levels required when called:    7
 31895 ;; This function calls:
 31896 ;;		Nothing
 31897 ;; This function is called by:
 31898 ;;		_Random
 31899 ;;		_uint16ToString
 31900 ;; This function uses a non-reentrant model
 31901 ;;
 31902                           
 31903                           	psect	text198
 31904  0098BA                     __ptext198:
 31905                           	opt callstack 0
 31906  0098BA                     ___lwmod:
 31907                           	opt callstack 20
 31908                           
 31909                           ; BSR set to: 0
 31910                           ;incstack = 0
 31911  0098BA  0100               	movlb	0	; () banked
 31912  0098BC  51A2               	movf	___lwmod@divisor& (0+255),w,b
 31913  0098BE  11A3               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 31914  0098C0  B4D8               	btfsc	status,2,c
 31915  0098C2  D018               	goto	l4032
 31916                           
 31917                           ; BSR set to: 0
 31918  0098C4  0E01               	movlw	1
 31919  0098C6  6FA4               	movwf	___lwmod@counter& (0+255),b
 31920  0098C8  D004               	goto	l18416
 31921  0098CA                     l18414:
 31922                           
 31923                           ; BSR set to: 0
 31924  0098CA  90D8               	bcf	status,0,c
 31925  0098CC  37A2               	rlcf	___lwmod@divisor& (0+255),f,b
 31926  0098CE  37A3               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 31927  0098D0  2BA4               	incf	___lwmod@counter& (0+255),f,b
 31928  0098D2                     l18416:
 31929                           
 31930                           ; BSR set to: 0
 31931  0098D2  AFA3               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 31932  0098D4  D7FA               	goto	l18414
 31933  0098D6                     u19460:
 31934                           
 31935                           ; BSR set to: 0
 31936  0098D6  51A2               	movf	___lwmod@divisor& (0+255),w,b
 31937  0098D8  5DA0               	subwf	___lwmod@dividend& (0+255),w,b
 31938  0098DA  51A3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 31939  0098DC  59A1               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 31940  0098DE  A0D8               	btfss	status,0,c
 31941  0098E0  D004               	goto	l18422
 31942                           
 31943                           ; BSR set to: 0
 31944  0098E2  51A2               	movf	___lwmod@divisor& (0+255),w,b
 31945  0098E4  5FA0               	subwf	___lwmod@dividend& (0+255),f,b
 31946  0098E6  51A3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 31947  0098E8  5BA1               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 31948  0098EA                     l18422:
 31949                           
 31950                           ; BSR set to: 0
 31951  0098EA  90D8               	bcf	status,0,c
 31952  0098EC  33A3               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 31953  0098EE  33A2               	rrcf	___lwmod@divisor& (0+255),f,b
 31954                           
 31955                           ; BSR set to: 0
 31956  0098F0  2FA4               	decfsz	___lwmod@counter& (0+255),f,b
 31957  0098F2  D7F1               	goto	u19460
 31958  0098F4                     l4032:
 31959                           
 31960                           ; BSR set to: 0
 31961  0098F4  C0A0  F0A0         	movff	___lwmod@dividend,?___lwmod
 31962  0098F8  C0A1  F0A1         	movff	___lwmod@dividend+1,?___lwmod+1
 31963                           
 31964                           ; BSR set to: 0
 31965  0098FC  0012               	return		;funcret
 31966  0098FE                     __end_of___lwmod:
 31967                           	opt callstack 0
 31968                           
 31969 ;; *************** function _ComputeMic *****************
 31970 ;; Defined at:
 31971 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31972 ;; Parameters:    Size  Location     Type
 31973 ;;  key             2  104[BANK0 ] PTR unsigned char 
 31974 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31975 ;;  buffer          2  106[BANK0 ] PTR unsigned char 
 31976 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 31977 ;;  bufferLength    1  108[BANK0 ] unsigned char 
 31978 ;; Auto vars:     Size  Location     Type
 31979 ;;  mic             4  109[BANK0 ] unsigned long 
 31980 ;; Return value:  Size  Location     Type
 31981 ;;                  4  104[BANK0 ] unsigned long 
 31982 ;; Registers used:
 31983 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31984 ;; Tracked objects:
 31985 ;;		On entry : 0/0
 31986 ;;		On exit  : 0/0
 31987 ;;		Unchanged: 0/0
 31988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31989 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31990 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31992 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31993 ;;Total ram usage:        9 bytes
 31994 ;; Hardware stack levels used:    1
 31995 ;; Hardware stack levels required when called:   12
 31996 ;; This function calls:
 31997 ;;		_AESCmac
 31998 ;;		_memcpy
 31999 ;; This function is called by:
 32000 ;;		_LORAWAN_RxDone
 32001 ;;		_PrepareJoinRequestFrame
 32002 ;; This function uses a non-reentrant model
 32003 ;;
 32004                           
 32005                           	psect	text199
 32006  008F14                     __ptext199:
 32007                           	opt callstack 0
 32008  008F14                     _ComputeMic:
 32009                           	opt callstack 12
 32010                           
 32011                           ;lorawan.c: 2196: uint32_t mic = 0;
 32012                           
 32013                           ; BSR set to: 0
 32014                           ;incstack = 0
 32015  008F14  0E00               	movlw	0
 32016  008F16  0100               	movlb	0	; () banked
 32017  008F18  6FCD               	movwf	ComputeMic@mic& (0+255),b
 32018  008F1A  0E00               	movlw	0
 32019  008F1C  6FCE               	movwf	(ComputeMic@mic+1)& (0+255),b
 32020  008F1E  0E00               	movlw	0
 32021  008F20  6FCF               	movwf	(ComputeMic@mic+2)& (0+255),b
 32022  008F22  0E00               	movlw	0
 32023  008F24  6FD0               	movwf	(ComputeMic@mic+3)& (0+255),b
 32024                           
 32025                           ; BSR set to: 0
 32026                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 32027  008F26  C0C8  F0BA         	movff	ComputeMic@key,AESCmac@key
 32028  008F2A  C0C9  F0BB         	movff	ComputeMic@key+1,AESCmac@key+1
 32029  008F2E  0E5F               	movlw	low _aesBuffer
 32030  008F30  6FBC               	movwf	AESCmac@output& (0+255),b
 32031  008F32  0E01               	movlw	high _aesBuffer
 32032  008F34  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 32033  008F36  C0CA  F0BE         	movff	ComputeMic@buffer,AESCmac@input
 32034  008F3A  C0CB  F0BF         	movff	ComputeMic@buffer+1,AESCmac@input+1
 32035  008F3E  C0CC  F0C0         	movff	ComputeMic@bufferLength,AESCmac@size
 32036  008F42  ECAD  F00D         	call	_AESCmac	;wreg free
 32037                           
 32038                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 32039  008F46  0ECD               	movlw	low ComputeMic@mic
 32040  008F48  0100               	movlb	0	; () banked
 32041  008F4A  6F60               	movwf	memcpy@d1& (0+255),b
 32042  008F4C  0E00               	movlw	high ComputeMic@mic
 32043  008F4E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32044  008F50  0E5F               	movlw	low _aesBuffer
 32045  008F52  6F62               	movwf	memcpy@s1& (0+255),b
 32046  008F54  0E01               	movlw	high _aesBuffer
 32047  008F56  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32048  008F58  0E00               	movlw	0
 32049  008F5A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32050  008F5C  0E04               	movlw	4
 32051  008F5E  6F64               	movwf	memcpy@n& (0+255),b
 32052  008F60  ECEC  F047         	call	_memcpy	;wreg free
 32053                           
 32054                           ;lorawan.c: 2202: return mic;
 32055  008F64  C0CD  F0C8         	movff	ComputeMic@mic,?_ComputeMic
 32056  008F68  C0CE  F0C9         	movff	ComputeMic@mic+1,?_ComputeMic+1
 32057  008F6C  C0CF  F0CA         	movff	ComputeMic@mic+2,?_ComputeMic+2
 32058  008F70  C0D0  F0CB         	movff	ComputeMic@mic+3,?_ComputeMic+3
 32059  008F74  0012               	return		;funcret
 32060  008F76                     __end_of_ComputeMic:
 32061                           	opt callstack 0
 32062                           
 32063 ;; *************** function _AESCmac *****************
 32064 ;; Defined at:
 32065 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32066 ;; Parameters:    Size  Location     Type
 32067 ;;  key             2   90[BANK0 ] PTR unsigned char 
 32068 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32069 ;;  output          2   92[BANK0 ] PTR unsigned char 
 32070 ;;		 -> aesBuffer(16), 
 32071 ;;  input           2   94[BANK0 ] PTR unsigned char 
 32072 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32073 ;;  size            1   96[BANK0 ] unsigned char 
 32074 ;; Auto vars:     Size  Location     Type
 32075 ;;  x              16   80[BANK1 ] unsigned char [16]
 32076 ;;  y              16   64[BANK1 ] unsigned char [16]
 32077 ;;  padded         16   48[BANK1 ] unsigned char [16]
 32078 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 32079 ;;  k1             16   16[BANK1 ] unsigned char [16]
 32080 ;;  k2             16    0[BANK1 ] unsigned char [16]
 32081 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 32082 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 32083 ;;  i               1  101[BANK1 ] unsigned char 
 32084 ;;  j               1  100[BANK1 ] unsigned char 
 32085 ;;  n               1   99[BANK1 ] unsigned char 
 32086 ;;  flag            1   98[BANK1 ] unsigned char 
 32087 ;; Return value:  Size  Location     Type
 32088 ;;                  1    wreg      void 
 32089 ;; Registers used:
 32090 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32091 ;; Tracked objects:
 32092 ;;		On entry : 0/0
 32093 ;;		On exit  : 0/0
 32094 ;;		Unchanged: 0/0
 32095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32096 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32097 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32098 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32099 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32100 ;;Total ram usage:      116 bytes
 32101 ;; Hardware stack levels used:    1
 32102 ;; Hardware stack levels required when called:   11
 32103 ;; This function calls:
 32104 ;;		_AESEncodeLoRa
 32105 ;;		_GenerateSubkey
 32106 ;;		_memcpy
 32107 ;;		_memset
 32108 ;; This function is called by:
 32109 ;;		_LORAWAN_RxDone
 32110 ;;		_AssemblePacket
 32111 ;;		_ComputeMic
 32112 ;; This function uses a non-reentrant model
 32113 ;;
 32114                           
 32115                           	psect	text200
 32116  001B5A                     __ptext200:
 32117                           	opt callstack 0
 32118  001B5A                     _AESCmac:
 32119                           	opt callstack 15
 32120                           
 32121                           ;incstack = 0
 32122  001B5A  0E00               	movlw	0
 32123  001B5C  0101               	movlb	1	; () banked
 32124  001B5E  6FD9               	movwf	AESCmac@i& (0+255),b
 32125  001B60  0E00               	movlw	0
 32126  001B62  6FD8               	movwf	AESCmac@j& (0+255),b
 32127                           
 32128                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 32129  001B64  0E00               	movlw	0
 32130  001B66  6FD6               	movwf	AESCmac@flag& (0+255),b
 32131                           
 32132                           ; BSR set to: 1
 32133                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 32134                           
 32135                           ; BSR set to: 1
 32136  001B68  C0BA  F092         	movff	AESCmac@key,GenerateSubkey@key
 32137  001B6C  C0BB  F093         	movff	AESCmac@key+1,GenerateSubkey@key+1
 32138  001B70  0E84               	movlw	low AESCmac@k1
 32139  001B72  0100               	movlb	0	; () banked
 32140  001B74  6F94               	movwf	GenerateSubkey@k1& (0+255),b
 32141  001B76  0E01               	movlw	high AESCmac@k1
 32142  001B78  6F95               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 32143  001B7A  0E74               	movlw	low AESCmac@k2
 32144  001B7C  6F96               	movwf	GenerateSubkey@k2& (0+255),b
 32145  001B7E  0E01               	movlw	high AESCmac@k2
 32146  001B80  6F97               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 32147  001B82  EC31  F02F         	call	_GenerateSubkey	;wreg free
 32148                           
 32149                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 32150  001B86  0100               	movlb	0	; () banked
 32151  001B88  51C0               	movf	AESCmac@size& (0+255),w,b
 32152  001B8A  6FC1               	movwf	??_AESCmac& (0+255),b
 32153  001B8C  6BC2               	clrf	(??_AESCmac+1)& (0+255),b
 32154  001B8E  0E0F               	movlw	15
 32155  001B90  27C1               	addwf	??_AESCmac& (0+255),f,b
 32156  001B92  0E00               	movlw	0
 32157  001B94  23C2               	addwfc	(??_AESCmac+1)& (0+255),f,b
 32158  001B96  0E04               	movlw	4
 32159  001B98  6FC3               	movwf	(??_AESCmac+2)& (0+255),b
 32160  001B9A                     u19965:
 32161  001B9A  35C2               	rlcf	(??_AESCmac+1)& (0+255),w,b
 32162  001B9C  33C2               	rrcf	(??_AESCmac+1)& (0+255),f,b
 32163  001B9E  33C1               	rrcf	??_AESCmac& (0+255),f,b
 32164  001BA0  2FC3               	decfsz	(??_AESCmac+2)& (0+255),f,b
 32165  001BA2  D7FB               	goto	u19965
 32166  001BA4  51C1               	movf	??_AESCmac& (0+255),w,b
 32167  001BA6  0101               	movlb	1	; () banked
 32168  001BA8  6FD7               	movwf	AESCmac@n& (0+255),b
 32169                           
 32170                           ; BSR set to: 1
 32171                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 32172  001BAA  51D7               	movf	AESCmac@n& (0+255),w,b
 32173  001BAC  A4D8               	btfss	status,2,c
 32174  001BAE  D004               	goto	l18814
 32175                           
 32176                           ; BSR set to: 1
 32177                           ;lorawan_aes_cmac.c: 53: {;lorawan_aes_cmac.c: 54: n = 1;
 32178  001BB0  0E01               	movlw	1
 32179  001BB2  6FD7               	movwf	AESCmac@n& (0+255),b
 32180                           
 32181                           ;lorawan_aes_cmac.c: 55: flag = 0;
 32182  001BB4  0E00               	movlw	0
 32183  001BB6  D00B               	goto	L32
 32184  001BB8                     l18814:
 32185                           
 32186                           ; BSR set to: 1
 32187                           ;lorawan_aes_cmac.c: 57: else;lorawan_aes_cmac.c: 58: {;lorawan_aes_cmac.c: 59: flag = !
      +                          (size % 16);
 32188  001BB8  C0C0  F0C1         	movff	AESCmac@size,??_AESCmac
 32189  001BBC  0E0F               	movlw	15
 32190  001BBE  0100               	movlb	0	; () banked
 32191  001BC0  17C1               	andwf	??_AESCmac& (0+255),f,b
 32192  001BC2  A4D8               	btfss	status,2,c
 32193  001BC4  D002               	goto	u19980
 32194  001BC6  0E01               	movlw	1
 32195  001BC8  D001               	goto	u19990
 32196  001BCA                     u19980:
 32197  001BCA  0E00               	movlw	0
 32198  001BCC                     u19990:
 32199  001BCC  0101               	movlb	1	; () banked
 32200  001BCE                     L32:
 32201  001BCE  6FD6               	movwf	AESCmac@flag& (0+255),b
 32202                           
 32203                           ; BSR set to: 1
 32204                           ;lorawan_aes_cmac.c: 60: };lorawan_aes_cmac.c: 62: if ( flag == 1 )
 32205  001BD0  05D6               	decf	AESCmac@flag& (0+255),w,b
 32206  001BD2  A4D8               	btfss	status,2,c
 32207  001BD4  D045               	goto	l18828
 32208                           
 32209                           ; BSR set to: 1
 32210                           ;lorawan_aes_cmac.c: 63: {;lorawan_aes_cmac.c: 64: j = 0;
 32211  001BD6  0E00               	movlw	0
 32212  001BD8  6FD8               	movwf	AESCmac@j& (0+255),b
 32213                           
 32214                           ; BSR set to: 1
 32215                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 32216  001BDA  51D7               	movf	AESCmac@n& (0+255),w,b
 32217  001BDC  0D10               	mullw	16
 32218  001BDE  50F3               	movf	prodl,w,c
 32219  001BE0  0FF0               	addlw	240
 32220  001BE2  6FD9               	movwf	AESCmac@i& (0+255),b
 32221  001BE4  D020               	goto	l18826
 32222  001BE6                     l18820:
 32223                           
 32224                           ; BSR set to: 0
 32225                           ;lorawan_aes_cmac.c: 66: {;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 32226  001BE6  0E94               	movlw	low AESCmac@mLast
 32227  001BE8  0101               	movlb	1	; () banked
 32228  001BEA  25D8               	addwf	AESCmac@j& (0+255),w,b
 32229  001BEC  6ED9               	movwf	fsr2l,c
 32230  001BEE  6ADA               	clrf	fsr2h,c
 32231  001BF0  0E01               	movlw	high AESCmac@mLast
 32232  001BF2  22DA               	addwfc	fsr2h,f,c
 32233  001BF4  0E84               	movlw	low AESCmac@k1
 32234  001BF6  25D8               	addwf	AESCmac@j& (0+255),w,b
 32235  001BF8  6EE9               	movwf	fsr0l,c
 32236  001BFA  6AEA               	clrf	fsr0h,c
 32237  001BFC  0E01               	movlw	high AESCmac@k1
 32238  001BFE  22EA               	addwfc	fsr0h,f,c
 32239  001C00  50EF               	movf	indf0,w,c
 32240  001C02  0100               	movlb	0	; () banked
 32241  001C04  6FC1               	movwf	??_AESCmac& (0+255),b
 32242  001C06  0101               	movlb	1	; () banked
 32243  001C08  51D9               	movf	AESCmac@i& (0+255),w,b
 32244  001C0A  0100               	movlb	0	; () banked
 32245  001C0C  25BE               	addwf	AESCmac@input& (0+255),w,b
 32246  001C0E  6EE9               	movwf	fsr0l,c
 32247  001C10  0101               	movlb	1	; () banked
 32248  001C12  0E00               	movlw	0
 32249  001C14  0100               	movlb	0	; () banked
 32250  001C16  21BF               	addwfc	(AESCmac@input+1)& (0+255),w,b
 32251  001C18  6EEA               	movwf	fsr0h,c
 32252  001C1A  50EF               	movf	indf0,w,c
 32253  001C1C  19C1               	xorwf	??_AESCmac& (0+255),w,b
 32254  001C1E  6EDF               	movwf	indf2,c
 32255                           
 32256                           ; BSR set to: 0
 32257                           ;lorawan_aes_cmac.c: 68: j++;
 32258  001C20  0101               	movlb	1	; () banked
 32259  001C22  2BD8               	incf	AESCmac@j& (0+255),f,b
 32260                           
 32261                           ; BSR set to: 1
 32262  001C24  2BD9               	incf	AESCmac@i& (0+255),f,b
 32263  001C26                     l18826:
 32264                           
 32265                           ; BSR set to: 1
 32266  001C26  51D7               	movf	AESCmac@n& (0+255),w,b
 32267  001C28  0100               	movlb	0	; () banked
 32268  001C2A  6FC1               	movwf	??_AESCmac& (0+255),b
 32269  001C2C  6BC2               	clrf	(??_AESCmac+1)& (0+255),b
 32270  001C2E  3BC1               	swapf	??_AESCmac& (0+255),f,b
 32271  001C30  3BC2               	swapf	(??_AESCmac+1)& (0+255),f,b
 32272  001C32  0EF0               	movlw	240
 32273  001C34  17C2               	andwf	(??_AESCmac+1)& (0+255),f,b
 32274  001C36  51C1               	movf	??_AESCmac& (0+255),w,b
 32275  001C38  0B0F               	andlw	15
 32276  001C3A  13C2               	iorwf	(??_AESCmac+1)& (0+255),f,b
 32277  001C3C  0EF0               	movlw	240
 32278  001C3E  17C1               	andwf	??_AESCmac& (0+255),f,b
 32279  001C40  0101               	movlb	1	; () banked
 32280  001C42  51D9               	movf	AESCmac@i& (0+255),w,b
 32281  001C44  0100               	movlb	0	; () banked
 32282  001C46  6FC3               	movwf	(??_AESCmac+2)& (0+255),b
 32283  001C48  6BC4               	clrf	(??_AESCmac+3)& (0+255),b
 32284  001C4A  51C1               	movf	??_AESCmac& (0+255),w,b
 32285  001C4C  5DC3               	subwf	(??_AESCmac+2)& (0+255),w,b
 32286  001C4E  51C4               	movf	(??_AESCmac+3)& (0+255),w,b
 32287  001C50  0A80               	xorlw	128
 32288  001C52  6FC5               	movwf	(??_AESCmac+4)& (0+255),b
 32289  001C54  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32290  001C56  0A80               	xorlw	128
 32291  001C58  59C5               	subwfb	(??_AESCmac+4)& (0+255),w,b
 32292  001C5A  B0D8               	btfsc	status,0,c
 32293  001C5C  D069               	goto	u20050
 32294  001C5E  D7C3               	goto	l18820
 32295  001C60                     l18828:
 32296                           
 32297                           ; BSR set to: 1
 32298                           ;lorawan_aes_cmac.c: 71: else;lorawan_aes_cmac.c: 72: {;lorawan_aes_cmac.c: 74: ptr = &i
      +                          nput[size - (size%16)];
 32299  001C60  0100               	movlb	0	; () banked
 32300  001C62  51C0               	movf	AESCmac@size& (0+255),w,b
 32301  001C64  25BE               	addwf	AESCmac@input& (0+255),w,b
 32302  001C66  6FC1               	movwf	??_AESCmac& (0+255),b
 32303  001C68  0E00               	movlw	0
 32304  001C6A  21BF               	addwfc	(AESCmac@input+1)& (0+255),w,b
 32305  001C6C  6FC2               	movwf	(??_AESCmac+1)& (0+255),b
 32306  001C6E  C0C0  F0C3         	movff	AESCmac@size,??_AESCmac+2
 32307  001C72  0E0F               	movlw	15
 32308  001C74  17C3               	andwf	(??_AESCmac+2)& (0+255),f,b
 32309  001C76  51C3               	movf	(??_AESCmac+2)& (0+255),w,b
 32310  001C78  5DC1               	subwf	??_AESCmac& (0+255),w,b
 32311  001C7A  0101               	movlb	1	; () banked
 32312  001C7C  6FD4               	movwf	AESCmac@ptr& (0+255),b
 32313  001C7E  0100               	movlb	0	; () banked
 32314  001C80  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32315  001C82  A0D8               	btfss	status,0,c
 32316  001C84  05C2               	decf	(??_AESCmac+1)& (0+255),w,b
 32317  001C86  0101               	movlb	1	; () banked
 32318  001C88  6FD5               	movwf	(AESCmac@ptr+1)& (0+255),b
 32319                           
 32320                           ; BSR set to: 1
 32321                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 32322  001C8A  0E00               	movlw	0
 32323  001C8C  6FD9               	movwf	AESCmac@i& (0+255),b
 32324  001C8E                     l18836:
 32325                           
 32326                           ; BSR set to: 1
 32327                           ;lorawan_aes_cmac.c: 76: {;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 32328  001C8E  0100               	movlb	0	; () banked
 32329  001C90  51C0               	movf	AESCmac@size& (0+255),w,b
 32330  001C92  0B0F               	andlw	15
 32331  001C94  0101               	movlb	1	; () banked
 32332  001C96  61D9               	cpfslt	AESCmac@i& (0+255),b
 32333  001C98  D00F               	goto	l18840
 32334                           
 32335                           ; BSR set to: 1
 32336                           ;lorawan_aes_cmac.c: 78: {;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 32337  001C9A  51D9               	movf	AESCmac@i& (0+255),w,b
 32338  001C9C  25D4               	addwf	AESCmac@ptr& (0+255),w,b
 32339  001C9E  6ED9               	movwf	fsr2l,c
 32340  001CA0  0E00               	movlw	0
 32341  001CA2  21D5               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 32342  001CA4  6EDA               	movwf	fsr2h,c
 32343  001CA6  0EA4               	movlw	low AESCmac@padded
 32344  001CA8  25D9               	addwf	AESCmac@i& (0+255),w,b
 32345  001CAA  6EE9               	movwf	fsr0l,c
 32346  001CAC  6AEA               	clrf	fsr0h,c
 32347  001CAE  0E01               	movlw	high AESCmac@padded
 32348  001CB0  22EA               	addwfc	fsr0h,f,c
 32349  001CB2  CFDF FFEF          	movff	indf2,indf0
 32350                           
 32351                           ;lorawan_aes_cmac.c: 80: }
 32352  001CB6  D017               	goto	l18846
 32353  001CB8                     l18840:
 32354                           
 32355                           ; BSR set to: 1
 32356                           ;lorawan_aes_cmac.c: 81: else;lorawan_aes_cmac.c: 82: {;lorawan_aes_cmac.c: 83: if ( i =
      +                          = (size%16) )
 32357  001CB8  0100               	movlb	0	; () banked
 32358  001CBA  51C0               	movf	AESCmac@size& (0+255),w,b
 32359  001CBC  0B0F               	andlw	15
 32360  001CBE  0101               	movlb	1	; () banked
 32361  001CC0  19D9               	xorwf	AESCmac@i& (0+255),w,b
 32362  001CC2  A4D8               	btfss	status,2,c
 32363  001CC4  D008               	goto	l18844
 32364                           
 32365                           ; BSR set to: 1
 32366                           ;lorawan_aes_cmac.c: 84: {;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 32367  001CC6  0EA4               	movlw	low AESCmac@padded
 32368  001CC8  25D9               	addwf	AESCmac@i& (0+255),w,b
 32369  001CCA  6ED9               	movwf	fsr2l,c
 32370  001CCC  6ADA               	clrf	fsr2h,c
 32371  001CCE  0E01               	movlw	high AESCmac@padded
 32372  001CD0  22DA               	addwfc	fsr2h,f,c
 32373  001CD2  0E80               	movlw	128
 32374  001CD4  D007               	goto	L33
 32375  001CD6                     l18844:
 32376                           
 32377                           ; BSR set to: 1
 32378                           ;lorawan_aes_cmac.c: 87: else;lorawan_aes_cmac.c: 88: {;lorawan_aes_cmac.c: 89: padded[i
      +                          ] = 0x00;
 32379  001CD6  0EA4               	movlw	low AESCmac@padded
 32380  001CD8  25D9               	addwf	AESCmac@i& (0+255),w,b
 32381  001CDA  6ED9               	movwf	fsr2l,c
 32382  001CDC  6ADA               	clrf	fsr2h,c
 32383  001CDE  0E01               	movlw	high AESCmac@padded
 32384  001CE0  22DA               	addwfc	fsr2h,f,c
 32385  001CE2  0E00               	movlw	0
 32386  001CE4                     L33:
 32387  001CE4  6EDF               	movwf	indf2,c
 32388  001CE6                     l18846:
 32389                           
 32390                           ; BSR set to: 1
 32391  001CE6  2BD9               	incf	AESCmac@i& (0+255),f,b
 32392                           
 32393                           ; BSR set to: 1
 32394  001CE8  0E0F               	movlw	15
 32395  001CEA  65D9               	cpfsgt	AESCmac@i& (0+255),b
 32396  001CEC  D7D0               	goto	l18836
 32397                           
 32398                           ; BSR set to: 1
 32399                           ;lorawan_aes_cmac.c: 90: };lorawan_aes_cmac.c: 91: };lorawan_aes_cmac.c: 92: };lorawan_a
      +                          es_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 32400  001CEE  0E00               	movlw	0
 32401  001CF0  6FD9               	movwf	AESCmac@i& (0+255),b
 32402  001CF2                     l18856:
 32403                           
 32404                           ; BSR set to: 1
 32405                           ;lorawan_aes_cmac.c: 96: {;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 32406  001CF2  0E94               	movlw	low AESCmac@mLast
 32407  001CF4  25D9               	addwf	AESCmac@i& (0+255),w,b
 32408  001CF6  6ED9               	movwf	fsr2l,c
 32409  001CF8  6ADA               	clrf	fsr2h,c
 32410  001CFA  0E01               	movlw	high AESCmac@mLast
 32411  001CFC  22DA               	addwfc	fsr2h,f,c
 32412  001CFE  0E74               	movlw	low AESCmac@k2
 32413  001D00  25D9               	addwf	AESCmac@i& (0+255),w,b
 32414  001D02  6EE9               	movwf	fsr0l,c
 32415  001D04  6AEA               	clrf	fsr0h,c
 32416  001D06  0E01               	movlw	high AESCmac@k2
 32417  001D08  22EA               	addwfc	fsr0h,f,c
 32418  001D0A  50EF               	movf	indf0,w,c
 32419  001D0C  0100               	movlb	0	; () banked
 32420  001D0E  6FC1               	movwf	??_AESCmac& (0+255),b
 32421  001D10  0EA4               	movlw	low AESCmac@padded
 32422  001D12  0101               	movlb	1	; () banked
 32423  001D14  25D9               	addwf	AESCmac@i& (0+255),w,b
 32424  001D16  6EE9               	movwf	fsr0l,c
 32425  001D18  6AEA               	clrf	fsr0h,c
 32426  001D1A  0E01               	movlw	high AESCmac@padded
 32427  001D1C  22EA               	addwfc	fsr0h,f,c
 32428  001D1E  50EF               	movf	indf0,w,c
 32429  001D20  0100               	movlb	0	; () banked
 32430  001D22  19C1               	xorwf	??_AESCmac& (0+255),w,b
 32431  001D24  6EDF               	movwf	indf2,c
 32432                           
 32433                           ; BSR set to: 0
 32434  001D26  0101               	movlb	1	; () banked
 32435  001D28  2BD9               	incf	AESCmac@i& (0+255),f,b
 32436                           
 32437                           ; BSR set to: 1
 32438  001D2A  0E0F               	movlw	15
 32439  001D2C  65D9               	cpfsgt	AESCmac@i& (0+255),b
 32440  001D2E  D7E1               	goto	l18856
 32441  001D30                     u20050:
 32442                           
 32443                           ;lorawan_aes_cmac.c: 98: };lorawan_aes_cmac.c: 99: };lorawan_aes_cmac.c: 101: memset(x, 
      +                          0, sizeof(x));
 32444  001D30  0EC4               	movlw	low AESCmac@x
 32445  001D32  0100               	movlb	0	; () banked
 32446  001D34  6F60               	movwf	memset@p1& (0+255),b
 32447  001D36  0E01               	movlw	high AESCmac@x
 32448  001D38  6F61               	movwf	(memset@p1+1)& (0+255),b
 32449  001D3A  0E00               	movlw	0
 32450  001D3C  6F63               	movwf	(memset@c+1)& (0+255),b
 32451  001D3E  0E00               	movlw	0
 32452  001D40  6F62               	movwf	memset@c& (0+255),b
 32453  001D42  0E00               	movlw	0
 32454  001D44  6F65               	movwf	(memset@n+1)& (0+255),b
 32455  001D46  0E10               	movlw	16
 32456  001D48  6F64               	movwf	memset@n& (0+255),b
 32457  001D4A  ECCA  F04F         	call	_memset	;wreg free
 32458                           
 32459                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 32460  001D4E  0E00               	movlw	0
 32461  001D50  0101               	movlb	1	; () banked
 32462  001D52  6FD9               	movwf	AESCmac@i& (0+255),b
 32463  001D54  D056               	goto	l18882
 32464  001D56                     l18866:
 32465                           
 32466                           ; BSR set to: 0
 32467                           ;lorawan_aes_cmac.c: 104: {;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 32468  001D56  0E00               	movlw	0
 32469  001D58  0101               	movlb	1	; () banked
 32470  001D5A  6FD8               	movwf	AESCmac@j& (0+255),b
 32471  001D5C                     l18872:
 32472                           
 32473                           ; BSR set to: 1
 32474                           ;lorawan_aes_cmac.c: 106: {;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 32475  001D5C  0EB4               	movlw	low AESCmac@y
 32476  001D5E  25D8               	addwf	AESCmac@j& (0+255),w,b
 32477  001D60  6ED9               	movwf	fsr2l,c
 32478  001D62  6ADA               	clrf	fsr2h,c
 32479  001D64  0E01               	movlw	high AESCmac@y
 32480  001D66  22DA               	addwfc	fsr2h,f,c
 32481  001D68  51D9               	movf	AESCmac@i& (0+255),w,b
 32482  001D6A  0100               	movlb	0	; () banked
 32483  001D6C  6FC1               	movwf	??_AESCmac& (0+255),b
 32484  001D6E  6BC2               	clrf	(??_AESCmac+1)& (0+255),b
 32485  001D70  3BC1               	swapf	??_AESCmac& (0+255),f,b
 32486  001D72  3BC2               	swapf	(??_AESCmac+1)& (0+255),f,b
 32487  001D74  0EF0               	movlw	240
 32488  001D76  17C2               	andwf	(??_AESCmac+1)& (0+255),f,b
 32489  001D78  51C1               	movf	??_AESCmac& (0+255),w,b
 32490  001D7A  0B0F               	andlw	15
 32491  001D7C  13C2               	iorwf	(??_AESCmac+1)& (0+255),f,b
 32492  001D7E  0EF0               	movlw	240
 32493  001D80  17C1               	andwf	??_AESCmac& (0+255),f,b
 32494  001D82  C0BE  F0C3         	movff	AESCmac@input,??_AESCmac+2
 32495  001D86  C0BF  F0C4         	movff	AESCmac@input+1,??_AESCmac+3
 32496  001D8A  51C1               	movf	??_AESCmac& (0+255),w,b
 32497  001D8C  27C3               	addwf	(??_AESCmac+2)& (0+255),f,b
 32498  001D8E  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32499  001D90  23C4               	addwfc	(??_AESCmac+3)& (0+255),f,b
 32500  001D92  0101               	movlb	1	; () banked
 32501  001D94  51D8               	movf	AESCmac@j& (0+255),w,b
 32502  001D96  0100               	movlb	0	; () banked
 32503  001D98  25C3               	addwf	(??_AESCmac+2)& (0+255),w,b
 32504  001D9A  6EE9               	movwf	fsr0l,c
 32505  001D9C  0101               	movlb	1	; () banked
 32506  001D9E  0E00               	movlw	0
 32507  001DA0  0100               	movlb	0	; () banked
 32508  001DA2  21C4               	addwfc	(??_AESCmac+3)& (0+255),w,b
 32509  001DA4  6EEA               	movwf	fsr0h,c
 32510  001DA6  50EF               	movf	indf0,w,c
 32511  001DA8  6FC5               	movwf	(??_AESCmac+4)& (0+255),b
 32512  001DAA  0EC4               	movlw	low AESCmac@x
 32513  001DAC  0101               	movlb	1	; () banked
 32514  001DAE  25D8               	addwf	AESCmac@j& (0+255),w,b
 32515  001DB0  6EE9               	movwf	fsr0l,c
 32516  001DB2  6AEA               	clrf	fsr0h,c
 32517  001DB4  0E01               	movlw	high AESCmac@x
 32518  001DB6  22EA               	addwfc	fsr0h,f,c
 32519  001DB8  50EF               	movf	indf0,w,c
 32520  001DBA  0100               	movlb	0	; () banked
 32521  001DBC  19C5               	xorwf	(??_AESCmac+4)& (0+255),w,b
 32522  001DBE  6EDF               	movwf	indf2,c
 32523                           
 32524                           ; BSR set to: 0
 32525  001DC0  0101               	movlb	1	; () banked
 32526  001DC2  2BD8               	incf	AESCmac@j& (0+255),f,b
 32527                           
 32528                           ; BSR set to: 1
 32529  001DC4  0E0F               	movlw	15
 32530  001DC6  65D8               	cpfsgt	AESCmac@j& (0+255),b
 32531  001DC8  D7C9               	goto	l18872
 32532                           
 32533                           ; BSR set to: 1
 32534                           ;lorawan_aes_cmac.c: 108: };lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 32535  001DCA  0EC4               	movlw	low AESCmac@x
 32536  001DCC  0100               	movlb	0	; () banked
 32537  001DCE  6F60               	movwf	memcpy@d1& (0+255),b
 32538  001DD0  0E01               	movlw	high AESCmac@x
 32539  001DD2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32540  001DD4  0EB4               	movlw	low AESCmac@y
 32541  001DD6  6F62               	movwf	memcpy@s1& (0+255),b
 32542  001DD8  0E01               	movlw	high AESCmac@y
 32543  001DDA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32544  001DDC  0E00               	movlw	0
 32545  001DDE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32546  001DE0  0E10               	movlw	16
 32547  001DE2  6F64               	movwf	memcpy@n& (0+255),b
 32548  001DE4  ECEC  F047         	call	_memcpy	;wreg free
 32549                           
 32550                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 32551  001DE8  0EC4               	movlw	low AESCmac@x
 32552  001DEA  0100               	movlb	0	; () banked
 32553  001DEC  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 32554  001DEE  0E01               	movlw	high AESCmac@x
 32555  001DF0  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32556  001DF2  C0BA  F080         	movff	AESCmac@key,AESEncodeLoRa@key
 32557  001DF6  C0BB  F081         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 32558  001DFA  EC17  F04E         	call	_AESEncodeLoRa	;wreg free
 32559  001DFE  0101               	movlb	1	; () banked
 32560  001E00  2BD9               	incf	AESCmac@i& (0+255),f,b
 32561  001E02                     l18882:
 32562                           
 32563                           ; BSR set to: 1
 32564  001E02  0EFF               	movlw	255
 32565  001E04  0100               	movlb	0	; () banked
 32566  001E06  6FC1               	movwf	??_AESCmac& (0+255),b
 32567  001E08  0EFF               	movlw	255
 32568  001E0A  6FC2               	movwf	(??_AESCmac+1)& (0+255),b
 32569  001E0C  0101               	movlb	1	; () banked
 32570  001E0E  51D7               	movf	AESCmac@n& (0+255),w,b
 32571  001E10  0100               	movlb	0	; () banked
 32572  001E12  6FC3               	movwf	(??_AESCmac+2)& (0+255),b
 32573  001E14  6BC4               	clrf	(??_AESCmac+3)& (0+255),b
 32574  001E16  51C1               	movf	??_AESCmac& (0+255),w,b
 32575  001E18  27C3               	addwf	(??_AESCmac+2)& (0+255),f,b
 32576  001E1A  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32577  001E1C  23C4               	addwfc	(??_AESCmac+3)& (0+255),f,b
 32578  001E1E  0101               	movlb	1	; () banked
 32579  001E20  51D9               	movf	AESCmac@i& (0+255),w,b
 32580  001E22  0100               	movlb	0	; () banked
 32581  001E24  6FC5               	movwf	(??_AESCmac+4)& (0+255),b
 32582  001E26  6BC6               	clrf	(??_AESCmac+5)& (0+255),b
 32583  001E28  51C3               	movf	(??_AESCmac+2)& (0+255),w,b
 32584  001E2A  5DC5               	subwf	(??_AESCmac+4)& (0+255),w,b
 32585  001E2C  51C6               	movf	(??_AESCmac+5)& (0+255),w,b
 32586  001E2E  0A80               	xorlw	128
 32587  001E30  6FC7               	movwf	(??_AESCmac+6)& (0+255),b
 32588  001E32  51C4               	movf	(??_AESCmac+3)& (0+255),w,b
 32589  001E34  0A80               	xorlw	128
 32590  001E36  59C7               	subwfb	(??_AESCmac+6)& (0+255),w,b
 32591  001E38  A0D8               	btfss	status,0,c
 32592  001E3A  D78D               	goto	l18866
 32593                           
 32594                           ; BSR set to: 0
 32595                           ;lorawan_aes_cmac.c: 111: };lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 32596  001E3C  0E00               	movlw	0
 32597  001E3E  0101               	movlb	1	; () banked
 32598  001E40  6FD9               	movwf	AESCmac@i& (0+255),b
 32599  001E42                     l18890:
 32600                           
 32601                           ; BSR set to: 1
 32602                           ;lorawan_aes_cmac.c: 114: {;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 32603  001E42  0EB4               	movlw	low AESCmac@y
 32604  001E44  25D9               	addwf	AESCmac@i& (0+255),w,b
 32605  001E46  6ED9               	movwf	fsr2l,c
 32606  001E48  6ADA               	clrf	fsr2h,c
 32607  001E4A  0E01               	movlw	high AESCmac@y
 32608  001E4C  22DA               	addwfc	fsr2h,f,c
 32609  001E4E  0E94               	movlw	low AESCmac@mLast
 32610  001E50  25D9               	addwf	AESCmac@i& (0+255),w,b
 32611  001E52  6EE9               	movwf	fsr0l,c
 32612  001E54  6AEA               	clrf	fsr0h,c
 32613  001E56  0E01               	movlw	high AESCmac@mLast
 32614  001E58  22EA               	addwfc	fsr0h,f,c
 32615  001E5A  50EF               	movf	indf0,w,c
 32616  001E5C  0100               	movlb	0	; () banked
 32617  001E5E  6FC1               	movwf	??_AESCmac& (0+255),b
 32618  001E60  0EC4               	movlw	low AESCmac@x
 32619  001E62  0101               	movlb	1	; () banked
 32620  001E64  25D9               	addwf	AESCmac@i& (0+255),w,b
 32621  001E66  6EE9               	movwf	fsr0l,c
 32622  001E68  6AEA               	clrf	fsr0h,c
 32623  001E6A  0E01               	movlw	high AESCmac@x
 32624  001E6C  22EA               	addwfc	fsr0h,f,c
 32625  001E6E  50EF               	movf	indf0,w,c
 32626  001E70  0100               	movlb	0	; () banked
 32627  001E72  19C1               	xorwf	??_AESCmac& (0+255),w,b
 32628  001E74  6EDF               	movwf	indf2,c
 32629                           
 32630                           ; BSR set to: 0
 32631  001E76  0101               	movlb	1	; () banked
 32632  001E78  2BD9               	incf	AESCmac@i& (0+255),f,b
 32633                           
 32634                           ; BSR set to: 1
 32635  001E7A  0E0F               	movlw	15
 32636  001E7C  65D9               	cpfsgt	AESCmac@i& (0+255),b
 32637  001E7E  D7E1               	goto	l18890
 32638                           
 32639                           ; BSR set to: 1
 32640                           ;lorawan_aes_cmac.c: 116: };lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 32641  001E80  0EB4               	movlw	low AESCmac@y
 32642  001E82  0100               	movlb	0	; () banked
 32643  001E84  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 32644  001E86  0E01               	movlw	high AESCmac@y
 32645  001E88  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32646  001E8A  C0BA  F080         	movff	AESCmac@key,AESEncodeLoRa@key
 32647  001E8E  C0BB  F081         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 32648  001E92  EC17  F04E         	call	_AESEncodeLoRa	;wreg free
 32649                           
 32650                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 32651  001E96  C0BC  F060         	movff	AESCmac@output,memcpy@d1
 32652  001E9A  C0BD  F061         	movff	AESCmac@output+1,memcpy@d1+1
 32653  001E9E  0EB4               	movlw	low AESCmac@y
 32654  001EA0  0100               	movlb	0	; () banked
 32655  001EA2  6F62               	movwf	memcpy@s1& (0+255),b
 32656  001EA4  0E01               	movlw	high AESCmac@y
 32657  001EA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32658  001EA8  0E00               	movlw	0
 32659  001EAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32660  001EAC  0E10               	movlw	16
 32661  001EAE  6F64               	movwf	memcpy@n& (0+255),b
 32662  001EB0  ECEC  F047         	call	_memcpy	;wreg free
 32663  001EB4  0012               	return		;funcret
 32664  001EB6                     __end_of_AESCmac:
 32665                           	opt callstack 0
 32666                           
 32667 ;; *************** function _GenerateSubkey *****************
 32668 ;; Defined at:
 32669 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32670 ;; Parameters:    Size  Location     Type
 32671 ;;  key             2   50[BANK0 ] PTR unsigned char 
 32672 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32673 ;;  k1              2   52[BANK0 ] PTR unsigned char 
 32674 ;;		 -> AESCmac@k1(16), 
 32675 ;;  k2              2   54[BANK0 ] PTR unsigned char 
 32676 ;;		 -> AESCmac@k2(16), 
 32677 ;; Auto vars:     Size  Location     Type
 32678 ;;  l              16   73[BANK0 ] unsigned char [16]
 32679 ;;  const_Rb       16   57[BANK0 ] unsigned char [16]
 32680 ;;  i               1   89[BANK0 ] unsigned char 
 32681 ;; Return value:  Size  Location     Type
 32682 ;;                  1    wreg      void 
 32683 ;; Registers used:
 32684 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32685 ;; Tracked objects:
 32686 ;;		On entry : 0/0
 32687 ;;		On exit  : 0/0
 32688 ;;		Unchanged: 0/0
 32689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32690 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32691 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32692 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32693 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32694 ;;Total ram usage:       40 bytes
 32695 ;; Hardware stack levels used:    1
 32696 ;; Hardware stack levels required when called:   10
 32697 ;; This function calls:
 32698 ;;		_AESEncodeLoRa
 32699 ;;		_FillSubKey
 32700 ;;		_memset
 32701 ;; This function is called by:
 32702 ;;		_AESCmac
 32703 ;; This function uses a non-reentrant model
 32704 ;;
 32705                           
 32706                           	psect	text201
 32707  005E62                     __ptext201:
 32708                           	opt callstack 0
 32709  005E62                     _GenerateSubkey:
 32710                           	opt callstack 15
 32711                           
 32712                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] =
      +                           {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0
      +                          x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 32713                           
 32714                           ;incstack = 0
 32715  005E62  EE23  F0D0         	lfsr	2,GenerateSubkey@F5972
 32716  005E66  EE00  F099         	lfsr	0,GenerateSubkey@const_Rb
 32717  005E6A  0E0F               	movlw	15
 32718  005E6C                     u19481:
 32719  005E6C  CFDB FFEB          	movff	plusw2,plusw0
 32720  005E70  06E8               	decf	wreg,f,c
 32721  005E72  E2FC               	bc	u19481
 32722                           
 32723                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 32724  005E74  0EA9               	movlw	low GenerateSubkey@l
 32725  005E76  0100               	movlb	0	; () banked
 32726  005E78  6F60               	movwf	memset@p1& (0+255),b
 32727  005E7A  0E00               	movlw	high GenerateSubkey@l
 32728  005E7C  6F61               	movwf	(memset@p1+1)& (0+255),b
 32729  005E7E  0E00               	movlw	0
 32730  005E80  6F63               	movwf	(memset@c+1)& (0+255),b
 32731  005E82  0E00               	movlw	0
 32732  005E84  6F62               	movwf	memset@c& (0+255),b
 32733  005E86  0E00               	movlw	0
 32734  005E88  6F65               	movwf	(memset@n+1)& (0+255),b
 32735  005E8A  0E10               	movlw	16
 32736  005E8C  6F64               	movwf	memset@n& (0+255),b
 32737  005E8E  ECCA  F04F         	call	_memset	;wreg free
 32738                           
 32739                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 32740  005E92  0EA9               	movlw	low GenerateSubkey@l
 32741  005E94  0100               	movlb	0	; () banked
 32742  005E96  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 32743  005E98  0E00               	movlw	high GenerateSubkey@l
 32744  005E9A  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32745  005E9C  C092  F080         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 32746  005EA0  C093  F081         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 32747  005EA4  EC17  F04E         	call	_AESEncodeLoRa	;wreg free
 32748                           
 32749                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 32750  005EA8  0100               	movlb	0	; () banked
 32751  005EAA  BFA9               	btfsc	GenerateSubkey@l& (0+255),7,b
 32752  005EAC  D00D               	goto	l18438
 32753                           
 32754                           ; BSR set to: 0
 32755                           ;lorawan_aes_cmac.c: 138: {;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 32756  005EAE  0EA9               	movlw	low GenerateSubkey@l
 32757  005EB0  6F60               	movwf	FillSubKey@source& (0+255),b
 32758  005EB2  0E00               	movlw	high GenerateSubkey@l
 32759  005EB4  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 32760  005EB6  C094  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 32761  005EBA  C095  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 32762  005EBE  0E10               	movlw	16
 32763  005EC0  6F64               	movwf	FillSubKey@size& (0+255),b
 32764  005EC2  ECD5  F049         	call	_FillSubKey	;wreg free
 32765                           
 32766                           ;lorawan_aes_cmac.c: 140: }
 32767  005EC6  D023               	goto	u19500
 32768  005EC8                     l18438:
 32769                           
 32770                           ; BSR set to: 0
 32771                           ;lorawan_aes_cmac.c: 141: else;lorawan_aes_cmac.c: 142: {;lorawan_aes_cmac.c: 143: FillS
      +                          ubKey( l, k1, (sizeof(l) ) );
 32772  005EC8  0EA9               	movlw	low GenerateSubkey@l
 32773  005ECA  6F60               	movwf	FillSubKey@source& (0+255),b
 32774  005ECC  0E00               	movlw	high GenerateSubkey@l
 32775  005ECE  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 32776  005ED0  C094  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 32777  005ED4  C095  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 32778  005ED8  0E10               	movlw	16
 32779  005EDA  6F64               	movwf	FillSubKey@size& (0+255),b
 32780  005EDC  ECD5  F049         	call	_FillSubKey	;wreg free
 32781                           
 32782                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 32783  005EE0  0E00               	movlw	0
 32784  005EE2  0100               	movlb	0	; () banked
 32785  005EE4  6FB9               	movwf	GenerateSubkey@i& (0+255),b
 32786  005EE6                     l18446:
 32787                           
 32788                           ; BSR set to: 0
 32789                           ;lorawan_aes_cmac.c: 146: {;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 32790  005EE6  0E99               	movlw	low GenerateSubkey@const_Rb
 32791  005EE8  25B9               	addwf	GenerateSubkey@i& (0+255),w,b
 32792  005EEA  6ED9               	movwf	fsr2l,c
 32793  005EEC  6ADA               	clrf	fsr2h,c
 32794  005EEE  0E00               	movlw	high GenerateSubkey@const_Rb
 32795  005EF0  22DA               	addwfc	fsr2h,f,c
 32796  005EF2  50DF               	movf	indf2,w,c
 32797  005EF4  6F98               	movwf	??_GenerateSubkey& (0+255),b
 32798  005EF6  51B9               	movf	GenerateSubkey@i& (0+255),w,b
 32799  005EF8  2594               	addwf	GenerateSubkey@k1& (0+255),w,b
 32800  005EFA  6ED9               	movwf	fsr2l,c
 32801  005EFC  0E00               	movlw	0
 32802  005EFE  2195               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 32803  005F00  6EDA               	movwf	fsr2h,c
 32804  005F02  5198               	movf	??_GenerateSubkey& (0+255),w,b
 32805  005F04  1ADF               	xorwf	indf2,f,c
 32806                           
 32807                           ; BSR set to: 0
 32808  005F06  2BB9               	incf	GenerateSubkey@i& (0+255),f,b
 32809                           
 32810                           ; BSR set to: 0
 32811  005F08  0E0F               	movlw	15
 32812  005F0A  65B9               	cpfsgt	GenerateSubkey@i& (0+255),b
 32813  005F0C  D7EC               	goto	l18446
 32814  005F0E                     u19500:
 32815                           
 32816                           ;lorawan_aes_cmac.c: 148: };lorawan_aes_cmac.c: 149: };lorawan_aes_cmac.c: 152: if ( (k1
      +                          [0] & 0x80) == 0x00 )
 32817  005F0E  C094  FFD9         	movff	GenerateSubkey@k1,fsr2l
 32818  005F12  C095  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 32819  005F16  0100               	movlb	0	; () banked
 32820  005F18  BEDF               	btfsc	indf2,7,c
 32821  005F1A  D00D               	goto	l18456
 32822                           
 32823                           ; BSR set to: 0
 32824                           ;lorawan_aes_cmac.c: 153: {;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 32825  005F1C  C094  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 32826  005F20  C095  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 32827  005F24  C096  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 32828  005F28  C097  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 32829  005F2C  0E10               	movlw	16
 32830  005F2E  6F64               	movwf	FillSubKey@size& (0+255),b
 32831  005F30  ECD5  F049         	call	_FillSubKey	;wreg free
 32832                           
 32833                           ;lorawan_aes_cmac.c: 155: }
 32834  005F34  0012               	return	
 32835  005F36                     l18456:
 32836                           
 32837                           ; BSR set to: 0
 32838                           ;lorawan_aes_cmac.c: 156: else;lorawan_aes_cmac.c: 157: {;lorawan_aes_cmac.c: 158: FillS
      +                          ubKey( k1, k2, (sizeof(l) ) );
 32839  005F36  C094  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 32840  005F3A  C095  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 32841  005F3E  C096  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 32842  005F42  C097  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 32843  005F46  0E10               	movlw	16
 32844  005F48  6F64               	movwf	FillSubKey@size& (0+255),b
 32845  005F4A  ECD5  F049         	call	_FillSubKey	;wreg free
 32846                           
 32847                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 32848  005F4E  0E00               	movlw	0
 32849  005F50  0100               	movlb	0	; () banked
 32850  005F52  6FB9               	movwf	GenerateSubkey@i& (0+255),b
 32851  005F54                     l18464:
 32852                           
 32853                           ; BSR set to: 0
 32854                           ;lorawan_aes_cmac.c: 161: {;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 32855  005F54  51B9               	movf	GenerateSubkey@i& (0+255),w,b
 32856  005F56  2596               	addwf	GenerateSubkey@k2& (0+255),w,b
 32857  005F58  6ED9               	movwf	fsr2l,c
 32858  005F5A  0E00               	movlw	0
 32859  005F5C  2197               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 32860  005F5E  6EDA               	movwf	fsr2h,c
 32861  005F60  0E99               	movlw	low GenerateSubkey@const_Rb
 32862  005F62  25B9               	addwf	GenerateSubkey@i& (0+255),w,b
 32863  005F64  6EE9               	movwf	fsr0l,c
 32864  005F66  6AEA               	clrf	fsr0h,c
 32865  005F68  0E00               	movlw	high GenerateSubkey@const_Rb
 32866  005F6A  22EA               	addwfc	fsr0h,f,c
 32867  005F6C  50EF               	movf	indf0,w,c
 32868  005F6E  6F98               	movwf	??_GenerateSubkey& (0+255),b
 32869  005F70  51B9               	movf	GenerateSubkey@i& (0+255),w,b
 32870  005F72  2596               	addwf	GenerateSubkey@k2& (0+255),w,b
 32871  005F74  6EE9               	movwf	fsr0l,c
 32872  005F76  0E00               	movlw	0
 32873  005F78  2197               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 32874  005F7A  6EEA               	movwf	fsr0h,c
 32875  005F7C  50EF               	movf	indf0,w,c
 32876  005F7E  1998               	xorwf	??_GenerateSubkey& (0+255),w,b
 32877  005F80  6EDF               	movwf	indf2,c
 32878                           
 32879                           ; BSR set to: 0
 32880  005F82  2BB9               	incf	GenerateSubkey@i& (0+255),f,b
 32881                           
 32882                           ; BSR set to: 0
 32883  005F84  0E0F               	movlw	15
 32884  005F86  65B9               	cpfsgt	GenerateSubkey@i& (0+255),b
 32885  005F88  D7E5               	goto	l18464
 32886  005F8A  0012               	return	
 32887  005F8C                     __end_of_GenerateSubkey:
 32888                           	opt callstack 0
 32889                           
 32890 ;; *************** function _FillSubKey *****************
 32891 ;; Defined at:
 32892 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32893 ;; Parameters:    Size  Location     Type
 32894 ;;  source          2    0[BANK0 ] PTR unsigned char 
 32895 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 32896 ;;  key             2    2[BANK0 ] PTR unsigned char 
 32897 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 32898 ;;  size            1    4[BANK0 ] unsigned char 
 32899 ;; Auto vars:     Size  Location     Type
 32900 ;;  i               1    7[BANK0 ] unsigned char 
 32901 ;;  carry           1    6[BANK0 ] unsigned char 
 32902 ;; Return value:  Size  Location     Type
 32903 ;;                  1    wreg      void 
 32904 ;; Registers used:
 32905 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 32906 ;; Tracked objects:
 32907 ;;		On entry : 0/0
 32908 ;;		On exit  : 0/0
 32909 ;;		Unchanged: 0/0
 32910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32911 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32912 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32913 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32914 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32915 ;;Total ram usage:        8 bytes
 32916 ;; Hardware stack levels used:    1
 32917 ;; Hardware stack levels required when called:    7
 32918 ;; This function calls:
 32919 ;;		Nothing
 32920 ;; This function is called by:
 32921 ;;		_GenerateSubkey
 32922 ;; This function uses a non-reentrant model
 32923 ;;
 32924                           
 32925                           	psect	text202
 32926  0093AA                     __ptext202:
 32927                           	opt callstack 0
 32928  0093AA                     _FillSubKey:
 32929                           	opt callstack 17
 32930                           
 32931                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 32932                           
 32933                           ;incstack = 0
 32934  0093AA  0E00               	movlw	0
 32935  0093AC  0100               	movlb	0	; () banked
 32936  0093AE  6F66               	movwf	FillSubKey@carry& (0+255),b
 32937                           
 32938                           ; BSR set to: 0
 32939                           ;lorawan_aes_cmac.c: 172: i=size;
 32940  0093B0  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 32941                           
 32942                           ;lorawan_aes_cmac.c: 174: while(i--)
 32943  0093B4  D01E               	goto	l18146
 32944  0093B6                     l18142:
 32945                           
 32946                           ; BSR set to: 0
 32947                           ;lorawan_aes_cmac.c: 175: {;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry
      +                          ;
 32948  0093B6  5167               	movf	FillSubKey@i& (0+255),w,b
 32949  0093B8  2562               	addwf	FillSubKey@key& (0+255),w,b
 32950  0093BA  6ED9               	movwf	fsr2l,c
 32951  0093BC  0E00               	movlw	0
 32952  0093BE  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 32953  0093C0  6EDA               	movwf	fsr2h,c
 32954  0093C2  5167               	movf	FillSubKey@i& (0+255),w,b
 32955  0093C4  2560               	addwf	FillSubKey@source& (0+255),w,b
 32956  0093C6  6EE9               	movwf	fsr0l,c
 32957  0093C8  0E00               	movlw	0
 32958  0093CA  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 32959  0093CC  6EEA               	movwf	fsr0h,c
 32960  0093CE  50EF               	movf	indf0,w,c
 32961  0093D0  6F65               	movwf	??_FillSubKey& (0+255),b
 32962  0093D2  90D8               	bcf	status,0,c
 32963  0093D4  3565               	rlcf	??_FillSubKey& (0+255),w,b
 32964  0093D6  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 32965  0093D8  6EDF               	movwf	indf2,c
 32966                           
 32967                           ; BSR set to: 0
 32968                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 32969  0093DA  5167               	movf	FillSubKey@i& (0+255),w,b
 32970  0093DC  2560               	addwf	FillSubKey@source& (0+255),w,b
 32971  0093DE  6ED9               	movwf	fsr2l,c
 32972  0093E0  0E00               	movlw	0
 32973  0093E2  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 32974  0093E4  6EDA               	movwf	fsr2h,c
 32975  0093E6  AEDF               	btfss	indf2,7,c
 32976  0093E8  D002               	goto	u18990
 32977  0093EA  0E01               	movlw	1
 32978  0093EC  D001               	goto	u19000
 32979  0093EE                     u18990:
 32980  0093EE  0E00               	movlw	0
 32981  0093F0                     u19000:
 32982  0093F0  6F66               	movwf	FillSubKey@carry& (0+255),b
 32983  0093F2                     l18146:
 32984                           
 32985                           ; BSR set to: 0
 32986  0093F2  0767               	decf	FillSubKey@i& (0+255),f,b
 32987  0093F4  2967               	incf	FillSubKey@i& (0+255),w,b
 32988  0093F6  B4D8               	btfsc	status,2,c
 32989  0093F8  0012               	return	
 32990  0093FA  D7DD               	goto	l18142
 32991  0093FC                     __end_of_FillSubKey:
 32992                           	opt callstack 0
 32993                           
 32994 ;; *************** function _AESEncodeLoRa *****************
 32995 ;; Defined at:
 32996 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 32997 ;; Parameters:    Size  Location     Type
 32998 ;;  block           2   30[BANK0 ] PTR unsigned char 
 32999 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 33000 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 33001 ;;  key             2   32[BANK0 ] PTR unsigned char 
 33002 ;;		 -> loRa.activationParameters(105), loRa(245), 
 33003 ;; Auto vars:     Size  Location     Type
 33004 ;;  useKey         16   34[BANK0 ] unsigned char [16]
 33005 ;; Return value:  Size  Location     Type
 33006 ;;                  1    wreg      void 
 33007 ;; Registers used:
 33008 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33009 ;; Tracked objects:
 33010 ;;		On entry : 0/0
 33011 ;;		On exit  : 0/0
 33012 ;;		Unchanged: 0/0
 33013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33015 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33017 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33018 ;;Total ram usage:       20 bytes
 33019 ;; Hardware stack levels used:    1
 33020 ;; Hardware stack levels required when called:    9
 33021 ;; This function calls:
 33022 ;;		_AESEncode
 33023 ;;		_memcpy
 33024 ;; This function is called by:
 33025 ;;		_AESCmac
 33026 ;;		_GenerateSubkey
 33027 ;;		_LORAWAN_RxDone
 33028 ;;		_ComputeSessionKeys
 33029 ;;		_EncryptFRMPayload
 33030 ;; This function uses a non-reentrant model
 33031 ;;
 33032                           
 33033                           	psect	text203
 33034  009C2E                     __ptext203:
 33035                           	opt callstack 0
 33036  009C2E                     _AESEncodeLoRa:
 33037                           	opt callstack 16
 33038                           
 33039                           ;lorawan_aes.c: 36: uint8_t useKey[16];;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(us
      +                          eKey));
 33040                           
 33041                           ; BSR set to: 0
 33042                           ;incstack = 0
 33043  009C2E  0E82               	movlw	low AESEncodeLoRa@useKey
 33044  009C30  0100               	movlb	0	; () banked
 33045  009C32  6F60               	movwf	memcpy@d1& (0+255),b
 33046  009C34  0E00               	movlw	high AESEncodeLoRa@useKey
 33047  009C36  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 33048  009C38  C080  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 33049  009C3C  C081  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 33050  009C40  0E00               	movlw	0
 33051  009C42  6F65               	movwf	(memcpy@n+1)& (0+255),b
 33052  009C44  0E10               	movlw	16
 33053  009C46  6F64               	movwf	memcpy@n& (0+255),b
 33054  009C48  ECEC  F047         	call	_memcpy	;wreg free
 33055                           
 33056                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 33057  009C4C  C07E  F067         	movff	AESEncodeLoRa@block,AESEncode@block
 33058  009C50  C07F  F068         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 33059  009C54  0E82               	movlw	low AESEncodeLoRa@useKey
 33060  009C56  0100               	movlb	0	; () banked
 33061  009C58  6F69               	movwf	AESEncode@key& (0+255),b
 33062  009C5A  0E00               	movlw	high AESEncodeLoRa@useKey
 33063  009C5C  6F6A               	movwf	(AESEncode@key+1)& (0+255),b
 33064  009C5E  ECBE  F018         	call	_AESEncode	;wreg free
 33065  009C62  0012               	return		;funcret
 33066  009C64                     __end_of_AESEncodeLoRa:
 33067                           	opt callstack 0
 33068                           
 33069 ;; *************** function _AESEncode *****************
 33070 ;; Defined at:
 33071 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 33072 ;; Parameters:    Size  Location     Type
 33073 ;;  block           2    7[BANK0 ] PTR unsigned char 
 33074 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 33075 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 33076 ;;  key             2    9[BANK0 ] PTR unsigned char 
 33077 ;;		 -> AESEncodeLoRa@useKey(16), 
 33078 ;; Auto vars:     Size  Location     Type
 33079 ;;  aux3            1   28[BANK0 ] unsigned char 
 33080 ;;  aux1            1   27[BANK0 ] unsigned char 
 33081 ;;  aux2            1   26[BANK0 ] unsigned char 
 33082 ;;  aux             1   25[BANK0 ] unsigned char 
 33083 ;;  i               1   29[BANK0 ] unsigned char 
 33084 ;;  temp            1    0        unsigned char 
 33085 ;; Return value:  Size  Location     Type
 33086 ;;                  1    wreg      void 
 33087 ;; Registers used:
 33088 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33089 ;; Tracked objects:
 33090 ;;		On entry : 0/0
 33091 ;;		On exit  : 0/0
 33092 ;;		Unchanged: 0/0
 33093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33094 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33095 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33096 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33097 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33098 ;;Total ram usage:       23 bytes
 33099 ;; Hardware stack levels used:    1
 33100 ;; Hardware stack levels required when called:    8
 33101 ;; This function calls:
 33102 ;;		_EncKeySchedule
 33103 ;;		_EncodeShiftRow
 33104 ;; This function is called by:
 33105 ;;		_AESEncodeLoRa
 33106 ;; This function uses a non-reentrant model
 33107 ;;
 33108                           
 33109                           	psect	text204
 33110  00317C                     __ptext204:
 33111                           	opt callstack 0
 33112  00317C                     _AESEncode:
 33113                           	opt callstack 16
 33114                           
 33115                           ;AES.c: 250: unsigned char i;;AES.c: 251: unsigned char temp;;AES.c: 254: _roundCounter 
      +                          = 10;
 33116                           
 33117                           ;incstack = 0
 33118  00317C  0E0A               	movlw	10
 33119  00317E  6E43               	movwf	__roundCounter,c
 33120                           
 33121                           ;AES.c: 256: _rcon = 0x01;
 33122  003180  0E01               	movlw	1
 33123  003182  6E42               	movwf	__rcon,c
 33124                           
 33125                           ;AES.c: 259: for(i=0;i<16;i++)
 33126  003184  0E00               	movlw	0
 33127  003186  0100               	movlb	0	; () banked
 33128  003188  6F7D               	movwf	AESEncode@i& (0+255),b
 33129  00318A                     l17980:
 33130                           
 33131                           ; BSR set to: 0
 33132                           ;AES.c: 260: {;AES.c: 261: block[i] ^= key[i];
 33133  00318A  517D               	movf	AESEncode@i& (0+255),w,b
 33134  00318C  2569               	addwf	AESEncode@key& (0+255),w,b
 33135  00318E  6ED9               	movwf	fsr2l,c
 33136  003190  0E00               	movlw	0
 33137  003192  216A               	addwfc	(AESEncode@key+1)& (0+255),w,b
 33138  003194  6EDA               	movwf	fsr2h,c
 33139  003196  50DF               	movf	indf2,w,c
 33140  003198  6F6B               	movwf	??_AESEncode& (0+255),b
 33141  00319A  517D               	movf	AESEncode@i& (0+255),w,b
 33142  00319C  2567               	addwf	AESEncode@block& (0+255),w,b
 33143  00319E  6ED9               	movwf	fsr2l,c
 33144  0031A0  0E00               	movlw	0
 33145  0031A2  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33146  0031A4  6EDA               	movwf	fsr2h,c
 33147  0031A6  516B               	movf	??_AESEncode& (0+255),w,b
 33148  0031A8  1ADF               	xorwf	indf2,f,c
 33149                           
 33150                           ; BSR set to: 0
 33151  0031AA  2B7D               	incf	AESEncode@i& (0+255),f,b
 33152                           
 33153                           ; BSR set to: 0
 33154  0031AC  0E0F               	movlw	15
 33155  0031AE  657D               	cpfsgt	AESEncode@i& (0+255),b
 33156  0031B0  D7EC               	goto	l17980
 33157  0031B2                     u18810:
 33158                           
 33159                           ; BSR set to: 0
 33160                           ;AES.c: 265: {;AES.c: 268: for(i=0;i<16;i++)
 33161  0031B2  0E00               	movlw	0
 33162  0031B4  6F7D               	movwf	AESEncode@i& (0+255),b
 33163  0031B6                     l17992:
 33164                           
 33165                           ; BSR set to: 0
 33166                           ;AES.c: 269: {;AES.c: 270: block[i]=STable[block[i]];
 33167  0031B6  517D               	movf	AESEncode@i& (0+255),w,b
 33168  0031B8  2567               	addwf	AESEncode@block& (0+255),w,b
 33169  0031BA  6ED9               	movwf	fsr2l,c
 33170  0031BC  0E00               	movlw	0
 33171  0031BE  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33172  0031C0  6EDA               	movwf	fsr2h,c
 33173  0031C2  50DF               	movf	indf2,w,c
 33174  0031C4  6F6B               	movwf	??_AESEncode& (0+255),b
 33175  0031C6  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33176  0031C8  0E07               	movlw	low _STable
 33177  0031CA  256B               	addwf	??_AESEncode& (0+255),w,b
 33178  0031CC  6EF6               	movwf	tblptrl,c
 33179  0031CE  0EFE               	movlw	high _STable
 33180  0031D0  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33181  0031D2  6EF7               	movwf	tblptrh,c
 33182  0031D4                     	if	1	;There are 3 active tblptr bytes
 33183  0031D4  6AF8               	clrf	tblptru,c
 33184  0031D6  0E00               	movlw	low (__mediumconst shr (0+16))
 33185  0031D8  22F8               	addwfc	tblptru,f,c
 33186  0031DA                     	endif
 33187  0031DA  517D               	movf	AESEncode@i& (0+255),w,b
 33188  0031DC  2567               	addwf	AESEncode@block& (0+255),w,b
 33189  0031DE  6ED9               	movwf	fsr2l,c
 33190  0031E0  0E00               	movlw	0
 33191  0031E2  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33192  0031E4  6EDA               	movwf	fsr2h,c
 33193  0031E6  0008               	tblrd		*
 33194  0031E8  CFF5 FFDF          	movff	tablat,indf2
 33195                           
 33196                           ; BSR set to: 0
 33197  0031EC  2B7D               	incf	AESEncode@i& (0+255),f,b
 33198                           
 33199                           ; BSR set to: 0
 33200  0031EE  0E0F               	movlw	15
 33201  0031F0  657D               	cpfsgt	AESEncode@i& (0+255),b
 33202  0031F2  D7E1               	goto	l17992
 33203                           
 33204                           ; BSR set to: 0
 33205                           ;AES.c: 271: };AES.c: 274: EncodeShiftRow(block);
 33206  0031F4  C067  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 33207  0031F8  C068  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 33208  0031FC  EC09  F028         	call	_EncodeShiftRow	;wreg free
 33209                           
 33210                           ;AES.c: 277: if(_roundCounter != 1)
 33211  003200  0443               	decf	__roundCounter,w,c
 33212  003202  B4D8               	btfsc	status,2,c
 33213  003204  D119               	goto	u18870
 33214                           
 33215                           ;AES.c: 278: {;AES.c: 279: unsigned char aux,aux1,aux2,aux3;;AES.c: 281: for(i=0;i<16;i+
      +                          =4)
 33216  003206  0E00               	movlw	0
 33217  003208  0100               	movlb	0	; () banked
 33218  00320A  6F7D               	movwf	AESEncode@i& (0+255),b
 33219  00320C                     l18008:
 33220                           
 33221                           ; BSR set to: 0
 33222                           ;AES.c: 282: {;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 33223  00320C  517D               	movf	AESEncode@i& (0+255),w,b
 33224  00320E  2567               	addwf	AESEncode@block& (0+255),w,b
 33225  003210  6F6B               	movwf	??_AESEncode& (0+255),b
 33226  003212  0E00               	movlw	0
 33227  003214  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33228  003216  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33229  003218  0E01               	movlw	1
 33230  00321A  256B               	addwf	??_AESEncode& (0+255),w,b
 33231  00321C  6ED9               	movwf	fsr2l,c
 33232  00321E  0E00               	movlw	0
 33233  003220  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33234  003222  6EDA               	movwf	fsr2h,c
 33235  003224  50DF               	movf	indf2,w,c
 33236  003226  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33237  003228  517D               	movf	AESEncode@i& (0+255),w,b
 33238  00322A  2567               	addwf	AESEncode@block& (0+255),w,b
 33239  00322C  6ED9               	movwf	fsr2l,c
 33240  00322E  0E00               	movlw	0
 33241  003230  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33242  003232  6EDA               	movwf	fsr2h,c
 33243  003234  50DF               	movf	indf2,w,c
 33244  003236  196D               	xorwf	(??_AESEncode+2)& (0+255),w,b
 33245  003238  6F7B               	movwf	AESEncode@aux1& (0+255),b
 33246                           
 33247                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 33248  00323A  517D               	movf	AESEncode@i& (0+255),w,b
 33249  00323C  2567               	addwf	AESEncode@block& (0+255),w,b
 33250  00323E  6F6B               	movwf	??_AESEncode& (0+255),b
 33251  003240  0E00               	movlw	0
 33252  003242  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33253  003244  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33254  003246  0E03               	movlw	3
 33255  003248  256B               	addwf	??_AESEncode& (0+255),w,b
 33256  00324A  6ED9               	movwf	fsr2l,c
 33257  00324C  0E00               	movlw	0
 33258  00324E  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33259  003250  6EDA               	movwf	fsr2h,c
 33260  003252  50DF               	movf	indf2,w,c
 33261  003254  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33262  003256  517D               	movf	AESEncode@i& (0+255),w,b
 33263  003258  2567               	addwf	AESEncode@block& (0+255),w,b
 33264  00325A  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33265  00325C  0E00               	movlw	0
 33266  00325E  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33267  003260  6F6F               	movwf	(??_AESEncode+4)& (0+255),b
 33268  003262  0E02               	movlw	2
 33269  003264  256E               	addwf	(??_AESEncode+3)& (0+255),w,b
 33270  003266  6ED9               	movwf	fsr2l,c
 33271  003268  0E00               	movlw	0
 33272  00326A  216F               	addwfc	(??_AESEncode+4)& (0+255),w,b
 33273  00326C  6EDA               	movwf	fsr2h,c
 33274  00326E  50DF               	movf	indf2,w,c
 33275  003270  196D               	xorwf	(??_AESEncode+2)& (0+255),w,b
 33276  003272  6F7C               	movwf	AESEncode@aux3& (0+255),b
 33277                           
 33278                           ; BSR set to: 0
 33279                           ;AES.c: 285: aux = aux1 ^ aux3;
 33280  003274  517B               	movf	AESEncode@aux1& (0+255),w,b
 33281  003276  197C               	xorwf	AESEncode@aux3& (0+255),w,b
 33282  003278  6F79               	movwf	AESEncode@aux& (0+255),b
 33283                           
 33284                           ; BSR set to: 0
 33285                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 33286  00327A  517D               	movf	AESEncode@i& (0+255),w,b
 33287  00327C  2567               	addwf	AESEncode@block& (0+255),w,b
 33288  00327E  6F6B               	movwf	??_AESEncode& (0+255),b
 33289  003280  0E00               	movlw	0
 33290  003282  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33291  003284  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33292  003286  0E01               	movlw	1
 33293  003288  256B               	addwf	??_AESEncode& (0+255),w,b
 33294  00328A  6ED9               	movwf	fsr2l,c
 33295  00328C  0E00               	movlw	0
 33296  00328E  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33297  003290  6EDA               	movwf	fsr2h,c
 33298  003292  50DF               	movf	indf2,w,c
 33299  003294  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33300  003296  517D               	movf	AESEncode@i& (0+255),w,b
 33301  003298  2567               	addwf	AESEncode@block& (0+255),w,b
 33302  00329A  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33303  00329C  0E00               	movlw	0
 33304  00329E  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33305  0032A0  6F6F               	movwf	(??_AESEncode+4)& (0+255),b
 33306  0032A2  0E02               	movlw	2
 33307  0032A4  256E               	addwf	(??_AESEncode+3)& (0+255),w,b
 33308  0032A6  6ED9               	movwf	fsr2l,c
 33309  0032A8  0E00               	movlw	0
 33310  0032AA  216F               	addwfc	(??_AESEncode+4)& (0+255),w,b
 33311  0032AC  6EDA               	movwf	fsr2h,c
 33312  0032AE  50DF               	movf	indf2,w,c
 33313  0032B0  196D               	xorwf	(??_AESEncode+2)& (0+255),w,b
 33314  0032B2  6F7A               	movwf	AESEncode@aux2& (0+255),b
 33315                           
 33316                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 33317  0032B4  0E7F               	movlw	127
 33318  0032B6  657B               	cpfsgt	AESEncode@aux1& (0+255),b
 33319  0032B8  D00C               	goto	l18016
 33320                           
 33321                           ; BSR set to: 0
 33322  0032BA  0E1B               	movlw	27
 33323  0032BC  C07B  F06B         	movff	AESEncode@aux1,??_AESEncode
 33324  0032C0  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33325  0032C2  90D8               	bcf	status,0,c
 33326  0032C4  376B               	rlcf	??_AESEncode& (0+255),f,b
 33327  0032C6  376C               	rlcf	(??_AESEncode+1)& (0+255),f,b
 33328  0032C8  196B               	xorwf	??_AESEncode& (0+255),w,b
 33329  0032CA  6F73               	movwf	_AESEncode$516& (0+255),b
 33330  0032CC  516C               	movf	(??_AESEncode+1)& (0+255),w,b
 33331  0032CE  6F74               	movwf	(_AESEncode$516+1)& (0+255),b
 33332  0032D0  D005               	goto	l18018
 33333  0032D2                     l18016:
 33334                           
 33335                           ; BSR set to: 0
 33336  0032D2  90D8               	bcf	status,0,c
 33337  0032D4  357B               	rlcf	AESEncode@aux1& (0+255),w,b
 33338  0032D6  6F73               	movwf	_AESEncode$516& (0+255),b
 33339  0032D8  6B74               	clrf	(_AESEncode$516+1)& (0+255),b
 33340  0032DA  3774               	rlcf	(_AESEncode$516+1)& (0+255),f,b
 33341  0032DC                     l18018:
 33342                           
 33343                           ; BSR set to: 0
 33344  0032DC  C073  F07B         	movff	_AESEncode$516,AESEncode@aux1
 33345                           
 33346                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 33347  0032E0  0E7F               	movlw	127
 33348  0032E2  657A               	cpfsgt	AESEncode@aux2& (0+255),b
 33349  0032E4  D00C               	goto	l18022
 33350                           
 33351                           ; BSR set to: 0
 33352  0032E6  0E1B               	movlw	27
 33353  0032E8  C07A  F06B         	movff	AESEncode@aux2,??_AESEncode
 33354  0032EC  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33355  0032EE  90D8               	bcf	status,0,c
 33356  0032F0  376B               	rlcf	??_AESEncode& (0+255),f,b
 33357  0032F2  376C               	rlcf	(??_AESEncode+1)& (0+255),f,b
 33358  0032F4  196B               	xorwf	??_AESEncode& (0+255),w,b
 33359  0032F6  6F75               	movwf	_AESEncode$517& (0+255),b
 33360  0032F8  516C               	movf	(??_AESEncode+1)& (0+255),w,b
 33361  0032FA  6F76               	movwf	(_AESEncode$517+1)& (0+255),b
 33362  0032FC  D005               	goto	l18024
 33363  0032FE                     l18022:
 33364                           
 33365                           ; BSR set to: 0
 33366  0032FE  90D8               	bcf	status,0,c
 33367  003300  357A               	rlcf	AESEncode@aux2& (0+255),w,b
 33368  003302  6F75               	movwf	_AESEncode$517& (0+255),b
 33369  003304  6B76               	clrf	(_AESEncode$517+1)& (0+255),b
 33370  003306  3776               	rlcf	(_AESEncode$517+1)& (0+255),f,b
 33371  003308                     l18024:
 33372                           
 33373                           ; BSR set to: 0
 33374  003308  C075  F07A         	movff	_AESEncode$517,AESEncode@aux2
 33375                           
 33376                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 33377  00330C  0E7F               	movlw	127
 33378  00330E  657C               	cpfsgt	AESEncode@aux3& (0+255),b
 33379  003310  D00C               	goto	l18028
 33380                           
 33381                           ; BSR set to: 0
 33382  003312  0E1B               	movlw	27
 33383  003314  C07C  F06B         	movff	AESEncode@aux3,??_AESEncode
 33384  003318  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33385  00331A  90D8               	bcf	status,0,c
 33386  00331C  376B               	rlcf	??_AESEncode& (0+255),f,b
 33387  00331E  376C               	rlcf	(??_AESEncode+1)& (0+255),f,b
 33388  003320  196B               	xorwf	??_AESEncode& (0+255),w,b
 33389  003322  6F77               	movwf	_AESEncode$518& (0+255),b
 33390  003324  516C               	movf	(??_AESEncode+1)& (0+255),w,b
 33391  003326  6F78               	movwf	(_AESEncode$518+1)& (0+255),b
 33392  003328  D005               	goto	l18030
 33393  00332A                     l18028:
 33394                           
 33395                           ; BSR set to: 0
 33396  00332A  90D8               	bcf	status,0,c
 33397  00332C  357C               	rlcf	AESEncode@aux3& (0+255),w,b
 33398  00332E  6F77               	movwf	_AESEncode$518& (0+255),b
 33399  003330  6B78               	clrf	(_AESEncode$518+1)& (0+255),b
 33400  003332  3778               	rlcf	(_AESEncode$518+1)& (0+255),f,b
 33401  003334                     l18030:
 33402                           
 33403                           ; BSR set to: 0
 33404  003334  C077  F07C         	movff	_AESEncode$518,AESEncode@aux3
 33405                           
 33406                           ; BSR set to: 0
 33407                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 33408  003338  517D               	movf	AESEncode@i& (0+255),w,b
 33409  00333A  2567               	addwf	AESEncode@block& (0+255),w,b
 33410  00333C  6ED9               	movwf	fsr2l,c
 33411  00333E  0E00               	movlw	0
 33412  003340  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33413  003342  6EDA               	movwf	fsr2h,c
 33414  003344  517D               	movf	AESEncode@i& (0+255),w,b
 33415  003346  2567               	addwf	AESEncode@block& (0+255),w,b
 33416  003348  6EE9               	movwf	fsr0l,c
 33417  00334A  0E00               	movlw	0
 33418  00334C  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33419  00334E  6EEA               	movwf	fsr0h,c
 33420  003350  50EF               	movf	indf0,w,c
 33421  003352  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33422  003354  197B               	xorwf	AESEncode@aux1& (0+255),w,b
 33423  003356  6EDF               	movwf	indf2,c
 33424                           
 33425                           ; BSR set to: 0
 33426                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 33427  003358  517D               	movf	AESEncode@i& (0+255),w,b
 33428  00335A  2567               	addwf	AESEncode@block& (0+255),w,b
 33429  00335C  6F6B               	movwf	??_AESEncode& (0+255),b
 33430  00335E  0E00               	movlw	0
 33431  003360  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33432  003362  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33433  003364  0E01               	movlw	1
 33434  003366  256B               	addwf	??_AESEncode& (0+255),w,b
 33435  003368  6ED9               	movwf	fsr2l,c
 33436  00336A  0E00               	movlw	0
 33437  00336C  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33438  00336E  6EDA               	movwf	fsr2h,c
 33439  003370  517D               	movf	AESEncode@i& (0+255),w,b
 33440  003372  2567               	addwf	AESEncode@block& (0+255),w,b
 33441  003374  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33442  003376  0E00               	movlw	0
 33443  003378  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33444  00337A  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33445  00337C  0E01               	movlw	1
 33446  00337E  256D               	addwf	(??_AESEncode+2)& (0+255),w,b
 33447  003380  6EE9               	movwf	fsr0l,c
 33448  003382  0E00               	movlw	0
 33449  003384  216E               	addwfc	(??_AESEncode+3)& (0+255),w,b
 33450  003386  6EEA               	movwf	fsr0h,c
 33451  003388  50EF               	movf	indf0,w,c
 33452  00338A  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33453  00338C  197A               	xorwf	AESEncode@aux2& (0+255),w,b
 33454  00338E  6EDF               	movwf	indf2,c
 33455                           
 33456                           ; BSR set to: 0
 33457                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 33458  003390  517D               	movf	AESEncode@i& (0+255),w,b
 33459  003392  2567               	addwf	AESEncode@block& (0+255),w,b
 33460  003394  6F6B               	movwf	??_AESEncode& (0+255),b
 33461  003396  0E00               	movlw	0
 33462  003398  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33463  00339A  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33464  00339C  0E02               	movlw	2
 33465  00339E  256B               	addwf	??_AESEncode& (0+255),w,b
 33466  0033A0  6ED9               	movwf	fsr2l,c
 33467  0033A2  0E00               	movlw	0
 33468  0033A4  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33469  0033A6  6EDA               	movwf	fsr2h,c
 33470  0033A8  517D               	movf	AESEncode@i& (0+255),w,b
 33471  0033AA  2567               	addwf	AESEncode@block& (0+255),w,b
 33472  0033AC  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33473  0033AE  0E00               	movlw	0
 33474  0033B0  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33475  0033B2  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33476  0033B4  0E02               	movlw	2
 33477  0033B6  256D               	addwf	(??_AESEncode+2)& (0+255),w,b
 33478  0033B8  6EE9               	movwf	fsr0l,c
 33479  0033BA  0E00               	movlw	0
 33480  0033BC  216E               	addwfc	(??_AESEncode+3)& (0+255),w,b
 33481  0033BE  6EEA               	movwf	fsr0h,c
 33482  0033C0  50EF               	movf	indf0,w,c
 33483  0033C2  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33484  0033C4  197C               	xorwf	AESEncode@aux3& (0+255),w,b
 33485  0033C6  6EDF               	movwf	indf2,c
 33486                           
 33487                           ; BSR set to: 0
 33488                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 33489  0033C8  517D               	movf	AESEncode@i& (0+255),w,b
 33490  0033CA  2567               	addwf	AESEncode@block& (0+255),w,b
 33491  0033CC  6F6B               	movwf	??_AESEncode& (0+255),b
 33492  0033CE  0E00               	movlw	0
 33493  0033D0  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33494  0033D2  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33495  0033D4  0E03               	movlw	3
 33496  0033D6  256B               	addwf	??_AESEncode& (0+255),w,b
 33497  0033D8  6ED9               	movwf	fsr2l,c
 33498  0033DA  0E00               	movlw	0
 33499  0033DC  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33500  0033DE  6EDA               	movwf	fsr2h,c
 33501  0033E0  517D               	movf	AESEncode@i& (0+255),w,b
 33502  0033E2  2567               	addwf	AESEncode@block& (0+255),w,b
 33503  0033E4  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33504  0033E6  0E00               	movlw	0
 33505  0033E8  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33506  0033EA  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33507  0033EC  0E02               	movlw	2
 33508  0033EE  256D               	addwf	(??_AESEncode+2)& (0+255),w,b
 33509  0033F0  6EE9               	movwf	fsr0l,c
 33510  0033F2  0E00               	movlw	0
 33511  0033F4  216E               	addwfc	(??_AESEncode+3)& (0+255),w,b
 33512  0033F6  6EEA               	movwf	fsr0h,c
 33513  0033F8  50EF               	movf	indf0,w,c
 33514  0033FA  6F6F               	movwf	(??_AESEncode+4)& (0+255),b
 33515  0033FC  517D               	movf	AESEncode@i& (0+255),w,b
 33516  0033FE  2567               	addwf	AESEncode@block& (0+255),w,b
 33517  003400  6F70               	movwf	(??_AESEncode+5)& (0+255),b
 33518  003402  0E00               	movlw	0
 33519  003404  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33520  003406  6F71               	movwf	(??_AESEncode+6)& (0+255),b
 33521  003408  0E01               	movlw	1
 33522  00340A  2570               	addwf	(??_AESEncode+5)& (0+255),w,b
 33523  00340C  6EE9               	movwf	fsr0l,c
 33524  00340E  0E00               	movlw	0
 33525  003410  2171               	addwfc	(??_AESEncode+6)& (0+255),w,b
 33526  003412  6EEA               	movwf	fsr0h,c
 33527  003414  50EF               	movf	indf0,w,c
 33528  003416  6F72               	movwf	(??_AESEncode+7)& (0+255),b
 33529  003418  517D               	movf	AESEncode@i& (0+255),w,b
 33530  00341A  2567               	addwf	AESEncode@block& (0+255),w,b
 33531  00341C  6EE9               	movwf	fsr0l,c
 33532  00341E  0E00               	movlw	0
 33533  003420  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33534  003422  6EEA               	movwf	fsr0h,c
 33535  003424  50EF               	movf	indf0,w,c
 33536  003426  1972               	xorwf	(??_AESEncode+7)& (0+255),w,b
 33537  003428  196F               	xorwf	(??_AESEncode+4)& (0+255),w,b
 33538  00342A  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33539  00342C  6EDF               	movwf	indf2,c
 33540  00342E  0E04               	movlw	4
 33541  003430  277D               	addwf	AESEncode@i& (0+255),f,b
 33542  003432  0E0F               	movlw	15
 33543  003434  657D               	cpfsgt	AESEncode@i& (0+255),b
 33544  003436  D6EA               	goto	l18008
 33545  003438                     u18870:
 33546                           
 33547                           ;AES.c: 296: };AES.c: 297: };AES.c: 299: EncKeySchedule(key);
 33548  003438  C069  F060         	movff	AESEncode@key,EncKeySchedule@key
 33549  00343C  C06A  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 33550  003440  EC3E  F01A         	call	_EncKeySchedule	;wreg free
 33551                           
 33552                           ;AES.c: 302: for(i=0;i<16;i++)
 33553  003444  0E00               	movlw	0
 33554  003446  0100               	movlb	0	; () banked
 33555  003448  6F7D               	movwf	AESEncode@i& (0+255),b
 33556  00344A                     l18048:
 33557                           
 33558                           ; BSR set to: 0
 33559                           ;AES.c: 303: {;AES.c: 304: block[i] ^= key[i];
 33560  00344A  517D               	movf	AESEncode@i& (0+255),w,b
 33561  00344C  2569               	addwf	AESEncode@key& (0+255),w,b
 33562  00344E  6ED9               	movwf	fsr2l,c
 33563  003450  0E00               	movlw	0
 33564  003452  216A               	addwfc	(AESEncode@key+1)& (0+255),w,b
 33565  003454  6EDA               	movwf	fsr2h,c
 33566  003456  50DF               	movf	indf2,w,c
 33567  003458  6F6B               	movwf	??_AESEncode& (0+255),b
 33568  00345A  517D               	movf	AESEncode@i& (0+255),w,b
 33569  00345C  2567               	addwf	AESEncode@block& (0+255),w,b
 33570  00345E  6ED9               	movwf	fsr2l,c
 33571  003460  0E00               	movlw	0
 33572  003462  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33573  003464  6EDA               	movwf	fsr2h,c
 33574  003466  516B               	movf	??_AESEncode& (0+255),w,b
 33575  003468  1ADF               	xorwf	indf2,f,c
 33576                           
 33577                           ; BSR set to: 0
 33578  00346A  2B7D               	incf	AESEncode@i& (0+255),f,b
 33579                           
 33580                           ; BSR set to: 0
 33581  00346C  0E0F               	movlw	15
 33582  00346E  657D               	cpfsgt	AESEncode@i& (0+255),b
 33583  003470  D7EC               	goto	l18048
 33584                           
 33585                           ; BSR set to: 0
 33586                           ;AES.c: 305: };AES.c: 307: _roundCounter--;
 33587  003472  0643               	decf	__roundCounter,f,c
 33588                           
 33589                           ; BSR set to: 0
 33590                           ;AES.c: 308: };AES.c: 309: while(_roundCounter !=0);
 33591  003474  5043               	movf	__roundCounter,w,c
 33592  003476  B4D8               	btfsc	status,2,c
 33593  003478  0012               	return	
 33594  00347A  D69B               	goto	u18810
 33595  00347C                     __end_of_AESEncode:
 33596                           	opt callstack 0
 33597                           
 33598 ;; *************** function _EncodeShiftRow *****************
 33599 ;; Defined at:
 33600 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 33601 ;; Parameters:    Size  Location     Type
 33602 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 33603 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 33604 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 33605 ;; Auto vars:     Size  Location     Type
 33606 ;;  temp            1    2[BANK0 ] unsigned char 
 33607 ;; Return value:  Size  Location     Type
 33608 ;;                  1    wreg      void 
 33609 ;; Registers used:
 33610 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 33611 ;; Tracked objects:
 33612 ;;		On entry : 0/0
 33613 ;;		On exit  : 0/0
 33614 ;;		Unchanged: 0/0
 33615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33616 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33617 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33619 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33620 ;;Total ram usage:        3 bytes
 33621 ;; Hardware stack levels used:    1
 33622 ;; Hardware stack levels required when called:    7
 33623 ;; This function calls:
 33624 ;;		Nothing
 33625 ;; This function is called by:
 33626 ;;		_AESEncode
 33627 ;; This function uses a non-reentrant model
 33628 ;;
 33629                           
 33630                           	psect	text205
 33631  005012                     __ptext205:
 33632                           	opt callstack 0
 33633  005012                     _EncodeShiftRow:
 33634                           	opt callstack 16
 33635                           
 33636                           ;AES.c: 387: unsigned char temp;;AES.c: 392: temp=stateTable[1];
 33637                           
 33638                           ; BSR set to: 0
 33639                           ;incstack = 0
 33640  005012  0100               	movlb	0	; () banked
 33641  005014  EE20 F001          	lfsr	2,1
 33642  005018  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33643  00501A  26D9               	addwf	fsr2l,f,c
 33644  00501C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33645  00501E  22DA               	addwfc	fsr2h,f,c
 33646  005020  50DF               	movf	indf2,w,c
 33647  005022  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33648                           
 33649                           ; BSR set to: 0
 33650                           ;AES.c: 393: stateTable[1]=stateTable[5];
 33651  005024  EE20 F005          	lfsr	2,5
 33652  005028  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33653  00502A  26D9               	addwf	fsr2l,f,c
 33654  00502C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33655  00502E  22DA               	addwfc	fsr2h,f,c
 33656  005030  EE00 F001          	lfsr	0,1
 33657  005034  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33658  005036  26E9               	addwf	fsr0l,f,c
 33659  005038  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33660  00503A  22EA               	addwfc	fsr0h,f,c
 33661  00503C  CFDF FFEF          	movff	indf2,indf0
 33662                           
 33663                           ; BSR set to: 0
 33664                           ;AES.c: 394: stateTable[5]=stateTable[9];
 33665  005040  EE20 F009          	lfsr	2,9
 33666  005044  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33667  005046  26D9               	addwf	fsr2l,f,c
 33668  005048  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33669  00504A  22DA               	addwfc	fsr2h,f,c
 33670  00504C  EE00 F005          	lfsr	0,5
 33671  005050  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33672  005052  26E9               	addwf	fsr0l,f,c
 33673  005054  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33674  005056  22EA               	addwfc	fsr0h,f,c
 33675  005058  CFDF FFEF          	movff	indf2,indf0
 33676                           
 33677                           ; BSR set to: 0
 33678                           ;AES.c: 395: stateTable[9]=stateTable[13];
 33679  00505C  EE20 F00D          	lfsr	2,13
 33680  005060  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33681  005062  26D9               	addwf	fsr2l,f,c
 33682  005064  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33683  005066  22DA               	addwfc	fsr2h,f,c
 33684  005068  EE00 F009          	lfsr	0,9
 33685  00506C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33686  00506E  26E9               	addwf	fsr0l,f,c
 33687  005070  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33688  005072  22EA               	addwfc	fsr0h,f,c
 33689  005074  CFDF FFEF          	movff	indf2,indf0
 33690                           
 33691                           ; BSR set to: 0
 33692                           ;AES.c: 396: stateTable[13]=temp;
 33693  005078  EE20 F00D          	lfsr	2,13
 33694  00507C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33695  00507E  26D9               	addwf	fsr2l,f,c
 33696  005080  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33697  005082  22DA               	addwfc	fsr2h,f,c
 33698  005084  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33699                           
 33700                           ; BSR set to: 0
 33701                           ;AES.c: 399: temp=stateTable[2];
 33702  005088  EE20 F002          	lfsr	2,2
 33703  00508C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33704  00508E  26D9               	addwf	fsr2l,f,c
 33705  005090  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33706  005092  22DA               	addwfc	fsr2h,f,c
 33707  005094  50DF               	movf	indf2,w,c
 33708  005096  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33709                           
 33710                           ; BSR set to: 0
 33711                           ;AES.c: 400: stateTable[2]=stateTable[10];
 33712  005098  EE20 F00A          	lfsr	2,10
 33713  00509C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33714  00509E  26D9               	addwf	fsr2l,f,c
 33715  0050A0  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33716  0050A2  22DA               	addwfc	fsr2h,f,c
 33717  0050A4  EE00 F002          	lfsr	0,2
 33718  0050A8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33719  0050AA  26E9               	addwf	fsr0l,f,c
 33720  0050AC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33721  0050AE  22EA               	addwfc	fsr0h,f,c
 33722  0050B0  CFDF FFEF          	movff	indf2,indf0
 33723                           
 33724                           ;AES.c: 401: stateTable[10]=temp;
 33725  0050B4  EE20 F00A          	lfsr	2,10
 33726  0050B8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33727  0050BA  26D9               	addwf	fsr2l,f,c
 33728  0050BC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33729  0050BE  22DA               	addwfc	fsr2h,f,c
 33730  0050C0  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33731                           
 33732                           ;AES.c: 402: temp=stateTable[14];
 33733  0050C4  EE20 F00E          	lfsr	2,14
 33734  0050C8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33735  0050CA  26D9               	addwf	fsr2l,f,c
 33736  0050CC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33737  0050CE  22DA               	addwfc	fsr2h,f,c
 33738  0050D0  50DF               	movf	indf2,w,c
 33739  0050D2  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33740                           
 33741                           ; BSR set to: 0
 33742                           ;AES.c: 403: stateTable[14]=stateTable[6];
 33743  0050D4  EE20 F006          	lfsr	2,6
 33744  0050D8  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33745  0050DA  26D9               	addwf	fsr2l,f,c
 33746  0050DC  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33747  0050DE  22DA               	addwfc	fsr2h,f,c
 33748  0050E0  EE00 F00E          	lfsr	0,14
 33749  0050E4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33750  0050E6  26E9               	addwf	fsr0l,f,c
 33751  0050E8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33752  0050EA  22EA               	addwfc	fsr0h,f,c
 33753  0050EC  CFDF FFEF          	movff	indf2,indf0
 33754                           
 33755                           ; BSR set to: 0
 33756                           ;AES.c: 404: stateTable[6]=temp;
 33757  0050F0  EE20 F006          	lfsr	2,6
 33758  0050F4  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33759  0050F6  26D9               	addwf	fsr2l,f,c
 33760  0050F8  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33761  0050FA  22DA               	addwfc	fsr2h,f,c
 33762  0050FC  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33763                           
 33764                           ; BSR set to: 0
 33765                           ;AES.c: 407: temp=stateTable[3];
 33766  005100  EE20 F003          	lfsr	2,3
 33767  005104  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33768  005106  26D9               	addwf	fsr2l,f,c
 33769  005108  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33770  00510A  22DA               	addwfc	fsr2h,f,c
 33771  00510C  50DF               	movf	indf2,w,c
 33772  00510E  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33773                           
 33774                           ; BSR set to: 0
 33775                           ;AES.c: 408: stateTable[3]=stateTable[15];
 33776  005110  EE20 F00F          	lfsr	2,15
 33777  005114  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33778  005116  26D9               	addwf	fsr2l,f,c
 33779  005118  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33780  00511A  22DA               	addwfc	fsr2h,f,c
 33781  00511C  EE00 F003          	lfsr	0,3
 33782  005120  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33783  005122  26E9               	addwf	fsr0l,f,c
 33784  005124  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33785  005126  22EA               	addwfc	fsr0h,f,c
 33786  005128  CFDF FFEF          	movff	indf2,indf0
 33787                           
 33788                           ; BSR set to: 0
 33789                           ;AES.c: 409: stateTable[15]=stateTable[11];
 33790  00512C  EE20 F00B          	lfsr	2,11
 33791  005130  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33792  005132  26D9               	addwf	fsr2l,f,c
 33793  005134  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33794  005136  22DA               	addwfc	fsr2h,f,c
 33795  005138  EE00 F00F          	lfsr	0,15
 33796  00513C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33797  00513E  26E9               	addwf	fsr0l,f,c
 33798  005140  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33799  005142  22EA               	addwfc	fsr0h,f,c
 33800  005144  CFDF FFEF          	movff	indf2,indf0
 33801                           
 33802                           ; BSR set to: 0
 33803                           ;AES.c: 410: stateTable[11]=stateTable[7];
 33804  005148  EE20 F007          	lfsr	2,7
 33805  00514C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33806  00514E  26D9               	addwf	fsr2l,f,c
 33807  005150  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33808  005152  22DA               	addwfc	fsr2h,f,c
 33809  005154  EE00 F00B          	lfsr	0,11
 33810  005158  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33811  00515A  26E9               	addwf	fsr0l,f,c
 33812  00515C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33813  00515E  22EA               	addwfc	fsr0h,f,c
 33814  005160  CFDF FFEF          	movff	indf2,indf0
 33815                           
 33816                           ;AES.c: 411: stateTable[7]=temp;
 33817  005164  EE20 F007          	lfsr	2,7
 33818  005168  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33819  00516A  26D9               	addwf	fsr2l,f,c
 33820  00516C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33821  00516E  22DA               	addwfc	fsr2h,f,c
 33822  005170  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33823                           
 33824                           ; BSR set to: 0
 33825  005174  0012               	return		;funcret
 33826  005176                     __end_of_EncodeShiftRow:
 33827                           	opt callstack 0
 33828                           
 33829 ;; *************** function _EncKeySchedule *****************
 33830 ;; Defined at:
 33831 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 33832 ;; Parameters:    Size  Location     Type
 33833 ;;  key             2    0[BANK0 ] PTR unsigned char 
 33834 ;;		 -> AESEncodeLoRa@useKey(16), 
 33835 ;; Auto vars:     Size  Location     Type
 33836 ;;		None
 33837 ;; Return value:  Size  Location     Type
 33838 ;;                  1    wreg      void 
 33839 ;; Registers used:
 33840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33841 ;; Tracked objects:
 33842 ;;		On entry : 0/0
 33843 ;;		On exit  : 0/0
 33844 ;;		Unchanged: 0/0
 33845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33847 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33848 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33849 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33850 ;;Total ram usage:        7 bytes
 33851 ;; Hardware stack levels used:    1
 33852 ;; Hardware stack levels required when called:    7
 33853 ;; This function calls:
 33854 ;;		Nothing
 33855 ;; This function is called by:
 33856 ;;		_AESEncode
 33857 ;; This function uses a non-reentrant model
 33858 ;;
 33859                           
 33860                           	psect	text206
 33861  00347C                     __ptext206:
 33862                           	opt callstack 0
 33863  00347C                     _EncKeySchedule:
 33864                           	opt callstack 16
 33865                           
 33866                           ;AES.c: 340: key[0]^=STable[key[13]];
 33867                           
 33868                           ; BSR set to: 0
 33869                           ;incstack = 0
 33870  00347C  0100               	movlb	0	; () banked
 33871  00347E  EE20 F00D          	lfsr	2,13
 33872  003482  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33873  003484  26D9               	addwf	fsr2l,f,c
 33874  003486  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33875  003488  22DA               	addwfc	fsr2h,f,c
 33876  00348A  50DF               	movf	indf2,w,c
 33877  00348C  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33878  00348E  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33879  003490  0E07               	movlw	low _STable
 33880  003492  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33881  003494  6EF6               	movwf	tblptrl,c
 33882  003496  0EFE               	movlw	high _STable
 33883  003498  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33884  00349A  6EF7               	movwf	tblptrh,c
 33885  00349C                     	if	1	;There are 3 active tblptr bytes
 33886  00349C  6AF8               	clrf	tblptru,c
 33887  00349E  0E00               	movlw	low (__mediumconst shr (0+16))
 33888  0034A0  22F8               	addwfc	tblptru,f,c
 33889  0034A2                     	endif
 33890  0034A2  0008               	tblrd		*
 33891  0034A4  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 33892  0034A8  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 33893  0034AC  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 33894  0034B0  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 33895  0034B2  1ADF               	xorwf	indf2,f,c
 33896                           
 33897                           ;AES.c: 341: key[1]^=STable[key[14]];
 33898  0034B4  EE20 F00E          	lfsr	2,14
 33899  0034B8  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33900  0034BA  26D9               	addwf	fsr2l,f,c
 33901  0034BC  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33902  0034BE  22DA               	addwfc	fsr2h,f,c
 33903  0034C0  50DF               	movf	indf2,w,c
 33904  0034C2  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33905  0034C4  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33906  0034C6  0E07               	movlw	low _STable
 33907  0034C8  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33908  0034CA  6EF6               	movwf	tblptrl,c
 33909  0034CC  0EFE               	movlw	high _STable
 33910  0034CE  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33911  0034D0  6EF7               	movwf	tblptrh,c
 33912  0034D2                     	if	1	;There are 3 active tblptr bytes
 33913  0034D2  6AF8               	clrf	tblptru,c
 33914  0034D4  0E00               	movlw	low (__mediumconst shr (0+16))
 33915  0034D6  22F8               	addwfc	tblptru,f,c
 33916  0034D8                     	endif
 33917  0034D8  0008               	tblrd		*
 33918  0034DA  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 33919  0034DE  EE20 F001          	lfsr	2,1
 33920  0034E2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33921  0034E4  26D9               	addwf	fsr2l,f,c
 33922  0034E6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33923  0034E8  22DA               	addwfc	fsr2h,f,c
 33924  0034EA  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 33925  0034EC  1ADF               	xorwf	indf2,f,c
 33926                           
 33927                           ;AES.c: 342: key[2]^=STable[key[15]];
 33928  0034EE  EE20 F00F          	lfsr	2,15
 33929  0034F2  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33930  0034F4  26D9               	addwf	fsr2l,f,c
 33931  0034F6  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33932  0034F8  22DA               	addwfc	fsr2h,f,c
 33933  0034FA  50DF               	movf	indf2,w,c
 33934  0034FC  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33935  0034FE  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33936  003500  0E07               	movlw	low _STable
 33937  003502  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33938  003504  6EF6               	movwf	tblptrl,c
 33939  003506  0EFE               	movlw	high _STable
 33940  003508  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33941  00350A  6EF7               	movwf	tblptrh,c
 33942  00350C                     	if	1	;There are 3 active tblptr bytes
 33943  00350C  6AF8               	clrf	tblptru,c
 33944  00350E  0E00               	movlw	low (__mediumconst shr (0+16))
 33945  003510  22F8               	addwfc	tblptru,f,c
 33946  003512                     	endif
 33947  003512  0008               	tblrd		*
 33948  003514  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 33949  003518  EE20 F002          	lfsr	2,2
 33950  00351C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33951  00351E  26D9               	addwf	fsr2l,f,c
 33952  003520  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33953  003522  22DA               	addwfc	fsr2h,f,c
 33954  003524  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 33955  003526  1ADF               	xorwf	indf2,f,c
 33956                           
 33957                           ;AES.c: 343: key[3]^=STable[key[12]];
 33958  003528  EE20 F00C          	lfsr	2,12
 33959  00352C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33960  00352E  26D9               	addwf	fsr2l,f,c
 33961  003530  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33962  003532  22DA               	addwfc	fsr2h,f,c
 33963  003534  50DF               	movf	indf2,w,c
 33964  003536  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33965  003538  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33966  00353A  0E07               	movlw	low _STable
 33967  00353C  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33968  00353E  6EF6               	movwf	tblptrl,c
 33969  003540  0EFE               	movlw	high _STable
 33970  003542  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33971  003544  6EF7               	movwf	tblptrh,c
 33972  003546                     	if	1	;There are 3 active tblptr bytes
 33973  003546  6AF8               	clrf	tblptru,c
 33974  003548  0E00               	movlw	low (__mediumconst shr (0+16))
 33975  00354A  22F8               	addwfc	tblptru,f,c
 33976  00354C                     	endif
 33977  00354C  0008               	tblrd		*
 33978  00354E  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 33979  003552  EE20 F003          	lfsr	2,3
 33980  003556  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33981  003558  26D9               	addwf	fsr2l,f,c
 33982  00355A  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33983  00355C  22DA               	addwfc	fsr2h,f,c
 33984  00355E  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 33985  003560  1ADF               	xorwf	indf2,f,c
 33986                           
 33987                           ; BSR set to: 0
 33988                           ;AES.c: 345: key[0]^=_rcon;
 33989  003562  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 33990  003566  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 33991  00356A  5042               	movf	__rcon,w,c
 33992  00356C  1ADF               	xorwf	indf2,f,c
 33993                           
 33994                           ; BSR set to: 0
 33995                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 33996  00356E  0E7F               	movlw	127
 33997  003570  6442               	cpfsgt	__rcon,c
 33998  003572  D00C               	goto	l17888
 33999                           
 34000                           ; BSR set to: 0
 34001  003574  0E1B               	movlw	27
 34002  003576  C042  F062         	movff	__rcon,??_EncKeySchedule
 34003  00357A  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 34004  00357C  90D8               	bcf	status,0,c
 34005  00357E  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 34006  003580  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 34007  003582  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 34008  003584  6F65               	movwf	_EncKeySchedule$521& (0+255),b
 34009  003586  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 34010  003588  6F66               	movwf	(_EncKeySchedule$521+1)& (0+255),b
 34011  00358A  D005               	goto	l17890
 34012  00358C                     l17888:
 34013                           
 34014                           ; BSR set to: 0
 34015  00358C  90D8               	bcf	status,0,c
 34016  00358E  3442               	rlcf	__rcon,w,c
 34017  003590  6F65               	movwf	_EncKeySchedule$521& (0+255),b
 34018  003592  6B66               	clrf	(_EncKeySchedule$521+1)& (0+255),b
 34019  003594  3766               	rlcf	(_EncKeySchedule$521+1)& (0+255),f,b
 34020  003596                     l17890:
 34021                           
 34022                           ; BSR set to: 0
 34023  003596  C065  F042         	movff	_EncKeySchedule$521,__rcon
 34024                           
 34025                           ; BSR set to: 0
 34026                           ;AES.c: 349: key[4]^=key[0];
 34027  00359A  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 34028  00359E  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 34029  0035A2  50DF               	movf	indf2,w,c
 34030  0035A4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34031  0035A6  EE20 F004          	lfsr	2,4
 34032  0035AA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34033  0035AC  26D9               	addwf	fsr2l,f,c
 34034  0035AE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34035  0035B0  22DA               	addwfc	fsr2h,f,c
 34036  0035B2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34037  0035B4  1ADF               	xorwf	indf2,f,c
 34038                           
 34039                           ; BSR set to: 0
 34040                           ;AES.c: 350: key[5]^=key[1];
 34041  0035B6  EE20 F001          	lfsr	2,1
 34042  0035BA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34043  0035BC  26D9               	addwf	fsr2l,f,c
 34044  0035BE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34045  0035C0  22DA               	addwfc	fsr2h,f,c
 34046  0035C2  50DF               	movf	indf2,w,c
 34047  0035C4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34048  0035C6  EE20 F005          	lfsr	2,5
 34049  0035CA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34050  0035CC  26D9               	addwf	fsr2l,f,c
 34051  0035CE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34052  0035D0  22DA               	addwfc	fsr2h,f,c
 34053  0035D2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34054  0035D4  1ADF               	xorwf	indf2,f,c
 34055                           
 34056                           ; BSR set to: 0
 34057                           ;AES.c: 351: key[6]^=key[2];
 34058  0035D6  EE20 F002          	lfsr	2,2
 34059  0035DA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34060  0035DC  26D9               	addwf	fsr2l,f,c
 34061  0035DE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34062  0035E0  22DA               	addwfc	fsr2h,f,c
 34063  0035E2  50DF               	movf	indf2,w,c
 34064  0035E4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34065  0035E6  EE20 F006          	lfsr	2,6
 34066  0035EA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34067  0035EC  26D9               	addwf	fsr2l,f,c
 34068  0035EE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34069  0035F0  22DA               	addwfc	fsr2h,f,c
 34070  0035F2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34071  0035F4  1ADF               	xorwf	indf2,f,c
 34072                           
 34073                           ; BSR set to: 0
 34074                           ;AES.c: 352: key[7]^=key[3];
 34075  0035F6  EE20 F003          	lfsr	2,3
 34076  0035FA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34077  0035FC  26D9               	addwf	fsr2l,f,c
 34078  0035FE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34079  003600  22DA               	addwfc	fsr2h,f,c
 34080  003602  50DF               	movf	indf2,w,c
 34081  003604  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34082  003606  EE20 F007          	lfsr	2,7
 34083  00360A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34084  00360C  26D9               	addwf	fsr2l,f,c
 34085  00360E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34086  003610  22DA               	addwfc	fsr2h,f,c
 34087  003612  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34088  003614  1ADF               	xorwf	indf2,f,c
 34089                           
 34090                           ; BSR set to: 0
 34091                           ;AES.c: 355: key[8]^=key[4];
 34092  003616  EE20 F004          	lfsr	2,4
 34093  00361A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34094  00361C  26D9               	addwf	fsr2l,f,c
 34095  00361E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34096  003620  22DA               	addwfc	fsr2h,f,c
 34097  003622  50DF               	movf	indf2,w,c
 34098  003624  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34099  003626  EE20 F008          	lfsr	2,8
 34100  00362A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34101  00362C  26D9               	addwf	fsr2l,f,c
 34102  00362E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34103  003630  22DA               	addwfc	fsr2h,f,c
 34104  003632  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34105  003634  1ADF               	xorwf	indf2,f,c
 34106                           
 34107                           ; BSR set to: 0
 34108                           ;AES.c: 356: key[9]^=key[5];
 34109  003636  EE20 F005          	lfsr	2,5
 34110  00363A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34111  00363C  26D9               	addwf	fsr2l,f,c
 34112  00363E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34113  003640  22DA               	addwfc	fsr2h,f,c
 34114  003642  50DF               	movf	indf2,w,c
 34115  003644  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34116  003646  EE20 F009          	lfsr	2,9
 34117  00364A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34118  00364C  26D9               	addwf	fsr2l,f,c
 34119  00364E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34120  003650  22DA               	addwfc	fsr2h,f,c
 34121  003652  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34122  003654  1ADF               	xorwf	indf2,f,c
 34123                           
 34124                           ; BSR set to: 0
 34125                           ;AES.c: 357: key[10]^=key[6];
 34126  003656  EE20 F006          	lfsr	2,6
 34127  00365A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34128  00365C  26D9               	addwf	fsr2l,f,c
 34129  00365E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34130  003660  22DA               	addwfc	fsr2h,f,c
 34131  003662  50DF               	movf	indf2,w,c
 34132  003664  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34133  003666  EE20 F00A          	lfsr	2,10
 34134  00366A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34135  00366C  26D9               	addwf	fsr2l,f,c
 34136  00366E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34137  003670  22DA               	addwfc	fsr2h,f,c
 34138  003672  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34139  003674  1ADF               	xorwf	indf2,f,c
 34140                           
 34141                           ; BSR set to: 0
 34142                           ;AES.c: 358: key[11]^=key[7];
 34143  003676  EE20 F007          	lfsr	2,7
 34144  00367A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34145  00367C  26D9               	addwf	fsr2l,f,c
 34146  00367E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34147  003680  22DA               	addwfc	fsr2h,f,c
 34148  003682  50DF               	movf	indf2,w,c
 34149  003684  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34150  003686  EE20 F00B          	lfsr	2,11
 34151  00368A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34152  00368C  26D9               	addwf	fsr2l,f,c
 34153  00368E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34154  003690  22DA               	addwfc	fsr2h,f,c
 34155  003692  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34156  003694  1ADF               	xorwf	indf2,f,c
 34157                           
 34158                           ; BSR set to: 0
 34159                           ;AES.c: 361: key[12]^=key[8];
 34160  003696  EE20 F008          	lfsr	2,8
 34161  00369A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34162  00369C  26D9               	addwf	fsr2l,f,c
 34163  00369E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34164  0036A0  22DA               	addwfc	fsr2h,f,c
 34165  0036A2  50DF               	movf	indf2,w,c
 34166  0036A4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34167  0036A6  EE20 F00C          	lfsr	2,12
 34168  0036AA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34169  0036AC  26D9               	addwf	fsr2l,f,c
 34170  0036AE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34171  0036B0  22DA               	addwfc	fsr2h,f,c
 34172  0036B2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34173  0036B4  1ADF               	xorwf	indf2,f,c
 34174                           
 34175                           ; BSR set to: 0
 34176                           ;AES.c: 362: key[13]^=key[9];
 34177  0036B6  EE20 F009          	lfsr	2,9
 34178  0036BA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34179  0036BC  26D9               	addwf	fsr2l,f,c
 34180  0036BE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34181  0036C0  22DA               	addwfc	fsr2h,f,c
 34182  0036C2  50DF               	movf	indf2,w,c
 34183  0036C4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34184  0036C6  EE20 F00D          	lfsr	2,13
 34185  0036CA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34186  0036CC  26D9               	addwf	fsr2l,f,c
 34187  0036CE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34188  0036D0  22DA               	addwfc	fsr2h,f,c
 34189  0036D2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34190  0036D4  1ADF               	xorwf	indf2,f,c
 34191                           
 34192                           ; BSR set to: 0
 34193                           ;AES.c: 363: key[14]^=key[10];
 34194  0036D6  EE20 F00A          	lfsr	2,10
 34195  0036DA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34196  0036DC  26D9               	addwf	fsr2l,f,c
 34197  0036DE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34198  0036E0  22DA               	addwfc	fsr2h,f,c
 34199  0036E2  50DF               	movf	indf2,w,c
 34200  0036E4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34201  0036E6  EE20 F00E          	lfsr	2,14
 34202  0036EA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34203  0036EC  26D9               	addwf	fsr2l,f,c
 34204  0036EE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34205  0036F0  22DA               	addwfc	fsr2h,f,c
 34206  0036F2  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34207  0036F4  1ADF               	xorwf	indf2,f,c
 34208                           
 34209                           ; BSR set to: 0
 34210                           ;AES.c: 364: key[15]^=key[11];
 34211  0036F6  EE20 F00B          	lfsr	2,11
 34212  0036FA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34213  0036FC  26D9               	addwf	fsr2l,f,c
 34214  0036FE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34215  003700  22DA               	addwfc	fsr2h,f,c
 34216  003702  50DF               	movf	indf2,w,c
 34217  003704  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34218  003706  EE20 F00F          	lfsr	2,15
 34219  00370A  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34220  00370C  26D9               	addwf	fsr2l,f,c
 34221  00370E  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34222  003710  22DA               	addwfc	fsr2h,f,c
 34223  003712  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34224  003714  1ADF               	xorwf	indf2,f,c
 34225                           
 34226                           ; BSR set to: 0
 34227  003716  0012               	return		;funcret
 34228  003718                     __end_of_EncKeySchedule:
 34229                           	opt callstack 0
 34230                           
 34231 ;; *************** function _LORAWAN_Init *****************
 34232 ;; Defined at:
 34233 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34234 ;; Parameters:    Size  Location     Type
 34235 ;;  RxPayload       2   74[BANK0 ] PTR FTN(PTR unsigned cha
 34236 ;;		 -> RxData(1), 
 34237 ;;  RxJoinRespon    2   76[BANK0 ] PTR FTN(unsigned char ,)
 34238 ;;		 -> RxJoinResponse(1), 
 34239 ;; Auto vars:     Size  Location     Type
 34240 ;;		None
 34241 ;; Return value:  Size  Location     Type
 34242 ;;                  1    wreg      void 
 34243 ;; Registers used:
 34244 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34245 ;; Tracked objects:
 34246 ;;		On entry : 0/0
 34247 ;;		On exit  : 0/0
 34248 ;;		Unchanged: 0/0
 34249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34253 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34254 ;;Total ram usage:        4 bytes
 34255 ;; Hardware stack levels used:    1
 34256 ;; Hardware stack levels required when called:   13
 34257 ;; This function calls:
 34258 ;;		_CreateAllSoftwareTimers
 34259 ;;		_LORAWAN_Reset
 34260 ;;		_RADIO_Init
 34261 ;;		_RADIO_ReadRandom
 34262 ;;		_SetCallbackSoftwareTimers
 34263 ;;		_StopAllSoftwareTimers
 34264 ;;		_srand
 34265 ;; This function is called by:
 34266 ;;		_main
 34267 ;; This function uses a non-reentrant model
 34268 ;;
 34269                           
 34270                           	psect	text207
 34271  008F76                     __ptext207:
 34272                           	opt callstack 0
 34273  008F76                     _LORAWAN_Init:
 34274                           	opt callstack 17
 34275                           
 34276                           ;lorawan_eu.c: 127: if (loRa.macInitialized == 0)
 34277                           
 34278                           ; BSR set to: 0
 34279                           ;incstack = 0
 34280  008F76  0102               	movlb	2	; () banked
 34281  008F78  51F5               	movf	(_loRa+240)& (0+255),w,b
 34282  008F7A  A4D8               	btfss	status,2,c
 34283  008F7C  D008               	goto	l21762
 34284                           
 34285                           ; BSR set to: 2
 34286                           ;lorawan_eu.c: 128: {;lorawan_eu.c: 129: CreateAllSoftwareTimers ();
 34287  008F7E  EC27  F04A         	call	_CreateAllSoftwareTimers	;wreg free
 34288                           
 34289                           ;lorawan_eu.c: 130: SetCallbackSoftwareTimers ();
 34290  008F82  ECEC  F039         	call	_SetCallbackSoftwareTimers	;wreg free
 34291                           
 34292                           ;lorawan_eu.c: 131: loRa.macInitialized = 1;
 34293  008F86  0E01               	movlw	1
 34294  008F88  0102               	movlb	2	; () banked
 34295  008F8A  6FF5               	movwf	(_loRa+240)& (0+255),b
 34296                           
 34297                           ;lorawan_eu.c: 132: }
 34298  008F8C  D002               	goto	l21764
 34299  008F8E                     l21762:
 34300                           
 34301                           ; BSR set to: 2
 34302                           ;lorawan_eu.c: 133: else;lorawan_eu.c: 134: {;lorawan_eu.c: 135: StopAllSoftwareTimers (
      +                          );
 34303  008F8E  ECFE  F049         	call	_StopAllSoftwareTimers	;wreg free
 34304  008F92                     l21764:
 34305                           
 34306                           ;lorawan_eu.c: 136: };lorawan_eu.c: 138: rxPayload.RxAppData = RxPayload;
 34307  008F92  C0AA  F10E         	movff	LORAWAN_Init@RxPayload,_rxPayload
 34308  008F96  C0AB  F10F         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 34309                           
 34310                           ;lorawan_eu.c: 139: rxPayload.RxJoinResponse = RxJoinResponse;
 34311  008F9A  C0AC  F110         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 34312  008F9E  C0AD  F111         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 34313                           
 34314                           ;lorawan_eu.c: 141: RADIO_Init(&radioBuffer[16], (868100000));
 34315  008FA2  0ED7               	movlw	low (_radioBuffer+16)
 34316  008FA4  0100               	movlb	0	; () banked
 34317  008FA6  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34318  008FA8  0E07               	movlw	high (_radioBuffer+16)
 34319  008FAA  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34320  008FAC  0EA0               	movlw	160
 34321  008FAE  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34322  008FB0  0E27               	movlw	39
 34323  008FB2  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34324  008FB4  0EBE               	movlw	190
 34325  008FB6  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34326  008FB8  0E33               	movlw	51
 34327  008FBA  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34328  008FBC  ECE7  F024         	call	_RADIO_Init	;wreg free
 34329                           
 34330                           ;lorawan_eu.c: 143: srand (RADIO_ReadRandom ());
 34331  008FC0  EC3C  F03F         	call	_RADIO_ReadRandom	;wreg free
 34332  008FC4  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 34333  008FC8  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 34334  008FCC  EC90  F053         	call	_srand	;wreg free
 34335                           
 34336                           ;lorawan_eu.c: 145: LORAWAN_Reset (ISM_EU868);
 34337  008FD0  0E00               	movlw	0
 34338  008FD2  EC1C  F023         	call	_LORAWAN_Reset
 34339  008FD6  0012               	return		;funcret
 34340  008FD8                     __end_of_LORAWAN_Init:
 34341                           	opt callstack 0
 34342                           
 34343 ;; *************** function _srand *****************
 34344 ;; Defined at:
 34345 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 34346 ;; Parameters:    Size  Location     Type
 34347 ;;  x               2   18[BANK0 ] unsigned int 
 34348 ;; Auto vars:     Size  Location     Type
 34349 ;;		None
 34350 ;; Return value:  Size  Location     Type
 34351 ;;                  1    wreg      void 
 34352 ;; Registers used:
 34353 ;;		status,2
 34354 ;; Tracked objects:
 34355 ;;		On entry : 0/0
 34356 ;;		On exit  : 0/0
 34357 ;;		Unchanged: 0/0
 34358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34359 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34362 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34363 ;;Total ram usage:        2 bytes
 34364 ;; Hardware stack levels used:    1
 34365 ;; Hardware stack levels required when called:    7
 34366 ;; This function calls:
 34367 ;;		Nothing
 34368 ;; This function is called by:
 34369 ;;		_LORAWAN_Init
 34370 ;; This function uses a non-reentrant model
 34371 ;;
 34372                           
 34373                           	psect	text208
 34374  00A720                     __ptext208:
 34375                           	opt callstack 0
 34376  00A720                     _srand:
 34377                           	opt callstack 22
 34378                           
 34379                           ;incstack = 0
 34380  00A720  C072  F1EF         	movff	srand@x,_randx
 34381  00A724  C073  F1F0         	movff	srand@x+1,_randx+1
 34382  00A728  0101               	movlb	1	; () banked
 34383  00A72A  6BF1               	clrf	(_randx+2)& (0+255),b
 34384  00A72C  6BF2               	clrf	(_randx+3)& (0+255),b
 34385                           
 34386                           ; BSR set to: 1
 34387  00A72E  0012               	return		;funcret
 34388  00A730                     __end_of_srand:
 34389                           	opt callstack 0
 34390                           
 34391 ;; *************** function _SetCallbackSoftwareTimers *****************
 34392 ;; Defined at:
 34393 ;;		line 952 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34394 ;; Parameters:    Size  Location     Type
 34395 ;;		None
 34396 ;; Auto vars:     Size  Location     Type
 34397 ;;		None
 34398 ;; Return value:  Size  Location     Type
 34399 ;;                  1    wreg      void 
 34400 ;; Registers used:
 34401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34402 ;; Tracked objects:
 34403 ;;		On entry : 0/0
 34404 ;;		On exit  : 0/0
 34405 ;;		Unchanged: 0/0
 34406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34411 ;;Total ram usage:        0 bytes
 34412 ;; Hardware stack levels used:    1
 34413 ;; Hardware stack levels required when called:    8
 34414 ;; This function calls:
 34415 ;;		_SwTimerSetCallback
 34416 ;; This function is called by:
 34417 ;;		_LORAWAN_Init
 34418 ;; This function uses a non-reentrant model
 34419 ;;
 34420                           
 34421                           	psect	text209
 34422  0073D8                     __ptext209:
 34423                           	opt callstack 0
 34424  0073D8                     _SetCallbackSoftwareTimers:
 34425                           	opt callstack 21
 34426                           
 34427                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 34428                           
 34429                           ; BSR set to: 1
 34430                           ;incstack = 0
 34431  0073D8  0EB4               	movlw	low _LORAWAN_ReceiveWindow1Callback
 34432  0073DA  0100               	movlb	0	; () banked
 34433  0073DC  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34434  0073DE  0E7B               	movlw	high _LORAWAN_ReceiveWindow1Callback
 34435  0073E0  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34436  0073E2  0E00               	movlw	0
 34437  0073E4  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34438  0073E6  0102               	movlb	2	; () banked
 34439  0073E8  51E7               	movf	(_loRa+226)& (0+255),w,b
 34440  0073EA  EC4C  F04E         	call	_SwTimerSetCallback
 34441                           
 34442                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 34443  0073EE  0EB6               	movlw	low _LORAWAN_ReceiveWindow2Callback
 34444  0073F0  0100               	movlb	0	; () banked
 34445  0073F2  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34446  0073F4  0E74               	movlw	high _LORAWAN_ReceiveWindow2Callback
 34447  0073F6  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34448  0073F8  0E00               	movlw	0
 34449  0073FA  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34450  0073FC  0102               	movlb	2	; () banked
 34451  0073FE  51E8               	movf	(_loRa+227)& (0+255),w,b
 34452  007400  EC4C  F04E         	call	_SwTimerSetCallback
 34453                           
 34454                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 34455  007404  0EA6               	movlw	low _LORAWAN_LinkCheckCallback
 34456  007406  0100               	movlb	0	; () banked
 34457  007408  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34458  00740A  0E4E               	movlw	high _LORAWAN_LinkCheckCallback
 34459  00740C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34460  00740E  0E00               	movlw	0
 34461  007410  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34462  007412  0102               	movlb	2	; () banked
 34463  007414  51EC               	movf	(_loRa+231)& (0+255),w,b
 34464  007416  EC4C  F04E         	call	_SwTimerSetCallback
 34465                           
 34466                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 34467  00741A  0EB4               	movlw	low _LORAWAN_ReceiveWindow1Callback
 34468  00741C  0100               	movlb	0	; () banked
 34469  00741E  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34470  007420  0E7B               	movlw	high _LORAWAN_ReceiveWindow1Callback
 34471  007422  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34472  007424  0E00               	movlw	0
 34473  007426  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34474  007428  0102               	movlb	2	; () banked
 34475  00742A  51E9               	movf	(_loRa+228)& (0+255),w,b
 34476  00742C  EC4C  F04E         	call	_SwTimerSetCallback
 34477                           
 34478                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 34479  007430  0EB6               	movlw	low _LORAWAN_ReceiveWindow2Callback
 34480  007432  0100               	movlb	0	; () banked
 34481  007434  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34482  007436  0E74               	movlw	high _LORAWAN_ReceiveWindow2Callback
 34483  007438  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34484  00743A  0E00               	movlw	0
 34485  00743C  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34486  00743E  0102               	movlb	2	; () banked
 34487  007440  51EA               	movf	(_loRa+229)& (0+255),w,b
 34488  007442  EC4C  F04E         	call	_SwTimerSetCallback
 34489                           
 34490                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 34491  007446  0EB2               	movlw	low _AckRetransmissionCallback
 34492  007448  0100               	movlb	0	; () banked
 34493  00744A  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34494  00744C  0E60               	movlw	high _AckRetransmissionCallback
 34495  00744E  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34496  007450  0E00               	movlw	0
 34497  007452  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34498  007454  0102               	movlb	2	; () banked
 34499  007456  51ED               	movf	(_loRa+232)& (0+255),w,b
 34500  007458  EC4C  F04E         	call	_SwTimerSetCallback
 34501                           
 34502                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 34503  00745C  0E12               	movlw	low _AutomaticReplyCallback
 34504  00745E  0100               	movlb	0	; () banked
 34505  007460  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34506  007462  0EA2               	movlw	high _AutomaticReplyCallback
 34507  007464  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34508  007466  0E00               	movlw	0
 34509  007468  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34510  00746A  0102               	movlb	2	; () banked
 34511  00746C  51EB               	movf	(_loRa+230)& (0+255),w,b
 34512  00746E  EC4C  F04E         	call	_SwTimerSetCallback
 34513                           
 34514                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 34515  007472  0E9E               	movlw	low _UnconfirmedTransmissionCallback
 34516  007474  0100               	movlb	0	; () banked
 34517  007476  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34518  007478  0E88               	movlw	high _UnconfirmedTransmissionCallback
 34519  00747A  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34520  00747C  0E00               	movlw	0
 34521  00747E  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34522  007480  0102               	movlb	2	; () banked
 34523  007482  51EF               	movf	(_loRa+234)& (0+255),w,b
 34524  007484  EC4C  F04E         	call	_SwTimerSetCallback
 34525                           
 34526                           ;lorawan_eu.c: 962: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 34527  007488  0EB0               	movlw	low _UpdateJoinSuccessState
 34528  00748A  0100               	movlb	0	; () banked
 34529  00748C  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34530  00748E  0E5A               	movlw	high _UpdateJoinSuccessState
 34531  007490  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34532  007492  0E00               	movlw	0
 34533  007494  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34534  007496  0102               	movlb	2	; () banked
 34535  007498  51F8               	movf	(_loRa+243)& (0+255),w,b
 34536  00749A  EC4C  F04E         	call	_SwTimerSetCallback
 34537                           
 34538                           ;lorawan_eu.c: 963: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 34539  00749E  0E76               	movlw	low _DutyCycleCallback
 34540  0074A0  0100               	movlb	0	; () banked
 34541  0074A2  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34542  0074A4  0E2B               	movlw	high _DutyCycleCallback
 34543  0074A6  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34544  0074A8  0E00               	movlw	0
 34545  0074AA  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34546  0074AC  0102               	movlb	2	; () banked
 34547  0074AE  51EE               	movf	(_loRa+233)& (0+255),w,b
 34548  0074B0  EC4C  F04E         	call	_SwTimerSetCallback
 34549  0074B4  0012               	return		;funcret
 34550  0074B6                     __end_of_SetCallbackSoftwareTimers:
 34551                           	opt callstack 0
 34552                           
 34553 ;; *************** function _RADIO_ReadRandom *****************
 34554 ;; Defined at:
 34555 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34556 ;; Parameters:    Size  Location     Type
 34557 ;;		None
 34558 ;; Auto vars:     Size  Location     Type
 34559 ;;  retVal          2   15[BANK0 ] unsigned int 
 34560 ;;  i               1   17[BANK0 ] unsigned char 
 34561 ;; Return value:  Size  Location     Type
 34562 ;;                  2   12[BANK0 ] unsigned int 
 34563 ;; Registers used:
 34564 ;;		wreg, status,2, status,0, cstack
 34565 ;; Tracked objects:
 34566 ;;		On entry : 0/0
 34567 ;;		On exit  : 0/0
 34568 ;;		Unchanged: 0/0
 34569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34570 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34571 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34572 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34573 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34574 ;;Total ram usage:        6 bytes
 34575 ;; Hardware stack levels used:    1
 34576 ;; Hardware stack levels required when called:   11
 34577 ;; This function calls:
 34578 ;;		_RADIO_RegisterRead
 34579 ;;		_RADIO_RegisterWrite
 34580 ;;		_RADIO_WriteMode
 34581 ;;		_SystemBlockingWaitMs
 34582 ;; This function is called by:
 34583 ;;		_LORAWAN_Init
 34584 ;; This function uses a non-reentrant model
 34585 ;;
 34586                           
 34587                           	psect	text210
 34588  007E78                     __ptext210:
 34589                           	opt callstack 0
 34590  007E78                     _RADIO_ReadRandom:
 34591                           	opt callstack 18
 34592                           
 34593                           ;radio_driver_SX1276.c: 1369: uint8_t i;;radio_driver_SX1276.c: 1370: uint16_t retVal;;r
      +                          adio_driver_SX1276.c: 1371: retVal = 0;
 34594                           
 34595                           ;incstack = 0
 34596  007E78  0E00               	movlw	0
 34597  007E7A  0100               	movlb	0	; () banked
 34598  007E7C  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 34599  007E7E  0E00               	movlw	0
 34600  007E80  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 34601                           
 34602                           ; BSR set to: 0
 34603                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 34604  007E82  0E01               	movlw	1
 34605  007E84  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34606  007E86  0E01               	movlw	1
 34607  007E88  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34608  007E8A  0E00               	movlw	0
 34609  007E8C  EC1C  F036         	call	_RADIO_WriteMode
 34610                           
 34611                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 34612  007E90  0EFF               	movlw	255
 34613  007E92  0100               	movlb	0	; () banked
 34614  007E94  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34615  007E96  0E11               	movlw	17
 34616  007E98  ECC5  F051         	call	_RADIO_RegisterWrite
 34617                           
 34618                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 34619  007E9C  0E01               	movlw	1
 34620  007E9E  0100               	movlb	0	; () banked
 34621  007EA0  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34622  007EA2  0E01               	movlw	1
 34623  007EA4  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34624  007EA6  0E05               	movlw	5
 34625  007EA8  EC1C  F036         	call	_RADIO_WriteMode
 34626                           
 34627                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 34628  007EAC  0E00               	movlw	0
 34629  007EAE  0100               	movlb	0	; () banked
 34630  007EB0  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 34631  007EB2                     l21524:
 34632                           
 34633                           ; BSR set to: 0
 34634                           ;radio_driver_SX1276.c: 1377: {;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 34635  007EB2  0E01               	movlw	1
 34636  007EB4  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34637  007EB6  0E00               	movlw	0
 34638  007EB8  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34639  007EBA  0E00               	movlw	0
 34640  007EBC  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34641  007EBE  0E00               	movlw	0
 34642  007EC0  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34643  007EC2  EC28  F04F         	call	_SystemBlockingWaitMs	;wreg free
 34644                           
 34645                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 34646  007EC6  0100               	movlb	0	; () banked
 34647  007EC8  90D8               	bcf	status,0,c
 34648  007ECA  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 34649  007ECC  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 34650                           
 34651                           ; BSR set to: 0
 34652                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 34653  007ECE  0E2C               	movlw	44
 34654  007ED0  ECF5  F050         	call	_RADIO_RegisterRead
 34655  007ED4  0100               	movlb	0	; () banked
 34656  007ED6  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 34657  007ED8  0E01               	movlw	1
 34658  007EDA  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 34659  007EDC  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 34660  007EDE  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 34661  007EE0  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 34662                           
 34663                           ; BSR set to: 0
 34664  007EE2  0E0F               	movlw	15
 34665  007EE4  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 34666  007EE6  D7E5               	goto	l21524
 34667                           
 34668                           ; BSR set to: 0
 34669                           ;radio_driver_SX1276.c: 1381: };radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP,
      +                           MODULATION_LORA, 1);
 34670  007EE8  0E01               	movlw	1
 34671  007EEA  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34672  007EEC  0E01               	movlw	1
 34673  007EEE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34674  007EF0  0E00               	movlw	0
 34675  007EF2  EC1C  F036         	call	_RADIO_WriteMode
 34676                           
 34677                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 34678  007EF6  0EFF               	movlw	255
 34679  007EF8  0100               	movlb	0	; () banked
 34680  007EFA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34681  007EFC  0E12               	movlw	18
 34682  007EFE  ECC5  F051         	call	_RADIO_RegisterWrite
 34683                           
 34684                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 34685  007F02  0E00               	movlw	0
 34686  007F04  0100               	movlb	0	; () banked
 34687  007F06  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34688  007F08  0E11               	movlw	17
 34689  007F0A  ECC5  F051         	call	_RADIO_RegisterWrite
 34690                           
 34691                           ;radio_driver_SX1276.c: 1389: return retVal;
 34692  007F0E  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 34693  007F12  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 34694  007F16  0012               	return		;funcret
 34695  007F18                     __end_of_RADIO_ReadRandom:
 34696                           	opt callstack 0
 34697                           
 34698 ;; *************** function _LORAWAN_Reset *****************
 34699 ;; Defined at:
 34700 ;;		line 149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34701 ;; Parameters:    Size  Location     Type
 34702 ;;  ismBandNew      1    wreg     enum E6149
 34703 ;; Auto vars:     Size  Location     Type
 34704 ;;  ismBandNew      1   73[BANK0 ] enum E6149
 34705 ;; Return value:  Size  Location     Type
 34706 ;;                  1    wreg      void 
 34707 ;; Registers used:
 34708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34709 ;; Tracked objects:
 34710 ;;		On entry : 0/0
 34711 ;;		On exit  : 0/0
 34712 ;;		Unchanged: 0/0
 34713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34717 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34718 ;;Total ram usage:        1 bytes
 34719 ;; Hardware stack levels used:    1
 34720 ;; Hardware stack levels required when called:   12
 34721 ;; This function calls:
 34722 ;;		_InitDefault433Channels
 34723 ;;		_InitDefault868Channels
 34724 ;;		_LORAWAN_LinkCheckConfigure
 34725 ;;		_RADIO_Init
 34726 ;;		_RADIO_SetLoRaSyncWord
 34727 ;;		_StopAllSoftwareTimers
 34728 ;;		_UpdateMinMaxChDataRate
 34729 ;;		_memset
 34730 ;; This function is called by:
 34731 ;;		_LORAWAN_Init
 34732 ;;		_main
 34733 ;; This function uses a non-reentrant model
 34734 ;;
 34735                           
 34736                           	psect	text211
 34737  004638                     __ptext211:
 34738                           	opt callstack 0
 34739  004638                     _LORAWAN_Reset:
 34740                           	opt callstack 18
 34741                           
 34742                           ;incstack = 0
 34743                           ;LORAWAN_Reset@ismBandNew stored from wreg
 34744  004638  0100               	movlb	0	; () banked
 34745  00463A  6FA9               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 34746                           
 34747                           ;lorawan_eu.c: 151: if (loRa.macInitialized == 1)
 34748  00463C  0102               	movlb	2	; () banked
 34749  00463E  05F5               	decf	(_loRa+240)& (0+255),w,b
 34750  004640  B4D8               	btfsc	status,2,c
 34751                           
 34752                           ; BSR set to: 2
 34753                           ;lorawan_eu.c: 152: {;lorawan_eu.c: 153: StopAllSoftwareTimers ();
 34754  004642  ECFE  F049         	call	_StopAllSoftwareTimers	;wreg free
 34755                           
 34756                           ;lorawan_eu.c: 154: };lorawan_eu.c: 156: loRa.syncWord = 0x34;
 34757  004646  0E34               	movlw	52
 34758  004648  0102               	movlb	2	; () banked
 34759  00464A  6FF9               	movwf	(_loRa+244)& (0+255),b
 34760                           
 34761                           ; BSR set to: 2
 34762                           ;lorawan_eu.c: 157: RADIO_SetLoRaSyncWord(loRa.syncWord);
 34763  00464C  51F9               	movf	(_loRa+244)& (0+255),w,b
 34764  00464E  EC2D  F054         	call	_RADIO_SetLoRaSyncWord
 34765                           
 34766                           ;lorawan_eu.c: 159: loRa.macStatus.value = 0;
 34767  004652  0E00               	movlw	0
 34768  004654  0102               	movlb	2	; () banked
 34769  004656  6F07               	movwf	(_loRa+2)& (0+255),b
 34770  004658  0E00               	movlw	0
 34771  00465A  6F08               	movwf	(_loRa+3)& (0+255),b
 34772  00465C  0E00               	movlw	0
 34773  00465E  6F09               	movwf	(_loRa+4)& (0+255),b
 34774  004660  0E00               	movlw	0
 34775  004662  6F0A               	movwf	(_loRa+5)& (0+255),b
 34776                           
 34777                           ; BSR set to: 2
 34778                           ;lorawan_eu.c: 160: loRa.linkCheckMargin = 255;
 34779  004664  69E2               	setf	(_loRa+221)& (0+255),b
 34780                           
 34781                           ; BSR set to: 2
 34782                           ;lorawan_eu.c: 161: loRa.linkCheckGwCnt = 0;
 34783  004666  0E00               	movlw	0
 34784  004668  6FE3               	movwf	(_loRa+222)& (0+255),b
 34785                           
 34786                           ; BSR set to: 2
 34787                           ;lorawan_eu.c: 162: loRa.lastTimerValue = 0;
 34788  00466A  0E00               	movlw	0
 34789  00466C  6FCD               	movwf	(_loRa+200)& (0+255),b
 34790  00466E  0E00               	movlw	0
 34791  004670  6FCE               	movwf	(_loRa+201)& (0+255),b
 34792  004672  0E00               	movlw	0
 34793  004674  6FCF               	movwf	(_loRa+202)& (0+255),b
 34794  004676  0E00               	movlw	0
 34795  004678  6FD0               	movwf	(_loRa+203)& (0+255),b
 34796                           
 34797                           ; BSR set to: 2
 34798                           ;lorawan_eu.c: 163: loRa.lastPacketLength = 0;
 34799  00467A  0E00               	movlw	0
 34800  00467C  6FDA               	movwf	(_loRa+213)& (0+255),b
 34801  00467E  0E00               	movlw	0
 34802  004680  6FD9               	movwf	(_loRa+212)& (0+255),b
 34803                           
 34804                           ; BSR set to: 2
 34805                           ;lorawan_eu.c: 164: loRa.fCntDown.value = 0;
 34806  004682  0E00               	movlw	0
 34807  004684  6F0F               	movwf	(_loRa+10)& (0+255),b
 34808  004686  0E00               	movlw	0
 34809  004688  6F10               	movwf	(_loRa+11)& (0+255),b
 34810  00468A  0E00               	movlw	0
 34811  00468C  6F11               	movwf	(_loRa+12)& (0+255),b
 34812  00468E  0E00               	movlw	0
 34813  004690  6F12               	movwf	(_loRa+13)& (0+255),b
 34814                           
 34815                           ; BSR set to: 2
 34816                           ;lorawan_eu.c: 165: loRa.fCntUp.value = 0;
 34817  004692  0E00               	movlw	0
 34818  004694  6F0B               	movwf	(_loRa+6)& (0+255),b
 34819  004696  0E00               	movlw	0
 34820  004698  6F0C               	movwf	(_loRa+7)& (0+255),b
 34821  00469A  0E00               	movlw	0
 34822  00469C  6F0D               	movwf	(_loRa+8)& (0+255),b
 34823  00469E  0E00               	movlw	0
 34824  0046A0  6F0E               	movwf	(_loRa+9)& (0+255),b
 34825                           
 34826                           ; BSR set to: 2
 34827                           ;lorawan_eu.c: 166: loRa.devNonce = 0;
 34828  0046A2  0E00               	movlw	0
 34829  0046A4  6FD8               	movwf	(_loRa+211)& (0+255),b
 34830  0046A6  0E00               	movlw	0
 34831  0046A8  6FD7               	movwf	(_loRa+210)& (0+255),b
 34832                           
 34833                           ; BSR set to: 2
 34834                           ;lorawan_eu.c: 167: loRa.prescaler = 1;
 34835  0046AA  0E00               	movlw	0
 34836  0046AC  6FE1               	movwf	(_loRa+220)& (0+255),b
 34837  0046AE  0E01               	movlw	1
 34838  0046B0  6FE0               	movwf	(_loRa+219)& (0+255),b
 34839                           
 34840                           ; BSR set to: 2
 34841                           ;lorawan_eu.c: 168: loRa.adrAckCnt = 0;
 34842  0046B2  0E00               	movlw	0
 34843  0046B4  6FD6               	movwf	(_loRa+209)& (0+255),b
 34844  0046B6  0E00               	movlw	0
 34845  0046B8  6FD5               	movwf	(_loRa+208)& (0+255),b
 34846                           
 34847                           ; BSR set to: 2
 34848                           ;lorawan_eu.c: 169: loRa.counterAdrAckDelay = 0;
 34849  0046BA  0E00               	movlw	0
 34850  0046BC  6FF3               	movwf	(_loRa+238)& (0+255),b
 34851                           
 34852                           ; BSR set to: 2
 34853                           ;lorawan_eu.c: 170: loRa.offset = 0;
 34854  0046BE  0E00               	movlw	0
 34855  0046C0  6FF4               	movwf	(_loRa+239)& (0+255),b
 34856                           
 34857                           ; BSR set to: 2
 34858                           ;lorawan_eu.c: 171: loRa.lastTimerValue = 0;
 34859  0046C2  0E00               	movlw	0
 34860  0046C4  6FCD               	movwf	(_loRa+200)& (0+255),b
 34861  0046C6  0E00               	movlw	0
 34862  0046C8  6FCE               	movwf	(_loRa+201)& (0+255),b
 34863  0046CA  0E00               	movlw	0
 34864  0046CC  6FCF               	movwf	(_loRa+202)& (0+255),b
 34865  0046CE  0E00               	movlw	0
 34866  0046D0  6FD0               	movwf	(_loRa+203)& (0+255),b
 34867                           
 34868                           ; BSR set to: 2
 34869                           ;lorawan_eu.c: 174: loRa.macStatus.linkCheck = 0;
 34870  0046D2  9508               	bcf	(_loRa+3)& (0+255),2,b
 34871                           
 34872                           ; BSR set to: 2
 34873                           ;lorawan_eu.c: 177: loRa.macStatus.value = 0;
 34874  0046D4  0E00               	movlw	0
 34875  0046D6  6F07               	movwf	(_loRa+2)& (0+255),b
 34876  0046D8  0E00               	movlw	0
 34877  0046DA  6F08               	movwf	(_loRa+3)& (0+255),b
 34878  0046DC  0E00               	movlw	0
 34879  0046DE  6F09               	movwf	(_loRa+4)& (0+255),b
 34880  0046E0  0E00               	movlw	0
 34881  0046E2  6F0A               	movwf	(_loRa+5)& (0+255),b
 34882                           
 34883                           ; BSR set to: 2
 34884                           ;lorawan_eu.c: 178: loRa.lorawanMacStatus.value = 0;
 34885  0046E4  0E00               	movlw	0
 34886  0046E6  6F06               	movwf	(_loRa+1)& (0+255),b
 34887  0046E8  0E00               	movlw	0
 34888  0046EA  6F05               	movwf	_loRa& (0+255),b
 34889                           
 34890                           ; BSR set to: 2
 34891                           ;lorawan_eu.c: 180: loRa.maxRepetitionsConfirmedUplink = 7;
 34892  0046EC  0E07               	movlw	7
 34893  0046EE  6FDC               	movwf	(_loRa+215)& (0+255),b
 34894                           
 34895                           ; BSR set to: 2
 34896                           ;lorawan_eu.c: 181: loRa.maxRepetitionsUnconfirmedUplink = 0;
 34897  0046F0  0E00               	movlw	0
 34898  0046F2  6FDB               	movwf	(_loRa+214)& (0+255),b
 34899                           
 34900                           ; BSR set to: 2
 34901                           ;lorawan_eu.c: 182: loRa.counterRepetitionsConfirmedUplink = 1;
 34902  0046F4  0E01               	movlw	1
 34903  0046F6  6FDE               	movwf	(_loRa+217)& (0+255),b
 34904                           
 34905                           ; BSR set to: 2
 34906                           ;lorawan_eu.c: 183: loRa.counterRepetitionsUnconfirmedUplink = 1;
 34907  0046F8  0E01               	movlw	1
 34908  0046FA  6FDD               	movwf	(_loRa+216)& (0+255),b
 34909                           
 34910                           ; BSR set to: 2
 34911                           ;lorawan_eu.c: 185: loRa.batteryLevel = (0xFF);
 34912  0046FC  69E5               	setf	(_loRa+224)& (0+255),b
 34913                           
 34914                           ; BSR set to: 2
 34915                           ;lorawan_eu.c: 187: loRa.ismBand = ismBandNew;
 34916  0046FE  C0A9  F2A9         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 34917                           
 34918                           ; BSR set to: 2
 34919                           ;lorawan_eu.c: 189: loRa.deviceClass = CLASS_A;
 34920  004702  0E00               	movlw	0
 34921  004704  6F17               	movwf	(_loRa+18)& (0+255),b
 34922                           
 34923                           ; BSR set to: 2
 34924                           ;lorawan_eu.c: 192: loRa.maxChannels = 16;
 34925  004706  0E10               	movlw	16
 34926  004708  6FF2               	movwf	(_loRa+237)& (0+255),b
 34927                           
 34928                           ; BSR set to: 2
 34929                           ;lorawan_eu.c: 193: if(ISM_EU868 == ismBandNew)
 34930  00470A  0100               	movlb	0	; () banked
 34931  00470C  51A9               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 34932  00470E  A4D8               	btfss	status,2,c
 34933  004710  D01B               	goto	l21606
 34934                           
 34935                           ; BSR set to: 0
 34936                           ;lorawan_eu.c: 194: {;lorawan_eu.c: 195: RADIO_Init(&radioBuffer[16], (868100000));
 34937  004712  0ED7               	movlw	low (_radioBuffer+16)
 34938  004714  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34939  004716  0E07               	movlw	high (_radioBuffer+16)
 34940  004718  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34941  00471A  0EA0               	movlw	160
 34942  00471C  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34943  00471E  0E27               	movlw	39
 34944  004720  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34945  004722  0EBE               	movlw	190
 34946  004724  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34947  004726  0E33               	movlw	51
 34948  004728  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34949  00472A  ECE7  F024         	call	_RADIO_Init	;wreg free
 34950                           
 34951                           ;lorawan_eu.c: 197: InitDefault868Channels ();
 34952  00472E  ECC7  F044         	call	_InitDefault868Channels	;wreg free
 34953                           
 34954                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.dataRate = (0);
 34955  004732  0E00               	movlw	0
 34956  004734  0102               	movlb	2	; () banked
 34957  004736  6F21               	movwf	(_loRa+28)& (0+255),b
 34958                           
 34959                           ; BSR set to: 2
 34960                           ;lorawan_eu.c: 200: loRa.receiveWindow2Parameters.frequency = (869525000);
 34961  004738  0E08               	movlw	8
 34962  00473A  6F1D               	movwf	(_loRa+24)& (0+255),b
 34963  00473C  0EE6               	movlw	230
 34964  00473E  6F1E               	movwf	(_loRa+25)& (0+255),b
 34965  004740  0ED3               	movlw	211
 34966  004742  6F1F               	movwf	(_loRa+26)& (0+255),b
 34967  004744  0E33               	movlw	51
 34968  004746  D01A               	goto	L34
 34969  004748                     l21606:
 34970                           
 34971                           ; BSR set to: 0
 34972                           ;lorawan_eu.c: 202: else;lorawan_eu.c: 203: {;lorawan_eu.c: 204: RADIO_Init(&radioBuffer
      +                          [16], (433300000));
 34973  004748  0ED7               	movlw	low (_radioBuffer+16)
 34974  00474A  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34975  00474C  0E07               	movlw	high (_radioBuffer+16)
 34976  00474E  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34977  004750  0E20               	movlw	32
 34978  004752  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34979  004754  0EA2               	movlw	162
 34980  004756  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34981  004758  0ED3               	movlw	211
 34982  00475A  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34983  00475C  0E19               	movlw	25
 34984  00475E  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34985  004760  ECE7  F024         	call	_RADIO_Init	;wreg free
 34986                           
 34987                           ;lorawan_eu.c: 206: InitDefault433Channels ();
 34988  004764  EC03  F045         	call	_InitDefault433Channels	;wreg free
 34989                           
 34990                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.dataRate = (0);
 34991  004768  0E00               	movlw	0
 34992  00476A  0102               	movlb	2	; () banked
 34993  00476C  6F21               	movwf	(_loRa+28)& (0+255),b
 34994                           
 34995                           ; BSR set to: 2
 34996                           ;lorawan_eu.c: 209: loRa.receiveWindow2Parameters.frequency = (434665000);
 34997  00476E  0E28               	movlw	40
 34998  004770  6F1D               	movwf	(_loRa+24)& (0+255),b
 34999  004772  0E76               	movlw	118
 35000  004774  6F1E               	movwf	(_loRa+25)& (0+255),b
 35001  004776  0EE8               	movlw	232
 35002  004778  6F1F               	movwf	(_loRa+26)& (0+255),b
 35003  00477A  0E19               	movlw	25
 35004  00477C                     L34:
 35005  00477C  6F20               	movwf	(_loRa+27)& (0+255),b
 35006                           
 35007                           ; BSR set to: 2
 35008                           ;lorawan_eu.c: 210: };lorawan_eu.c: 212: loRa.txPower = 1;
 35009  00477E  0E01               	movlw	1
 35010  004780  6FE6               	movwf	(_loRa+225)& (0+255),b
 35011                           
 35012                           ; BSR set to: 2
 35013                           ;lorawan_eu.c: 214: loRa.currentDataRate = 0;
 35014  004782  0E00               	movlw	0
 35015  004784  6FE4               	movwf	(_loRa+223)& (0+255),b
 35016                           
 35017                           ; BSR set to: 2
 35018                           ;lorawan_eu.c: 216: UpdateMinMaxChDataRate ();
 35019  004786  EC95  F03B         	call	_UpdateMinMaxChDataRate	;wreg free
 35020                           
 35021                           ;lorawan_eu.c: 219: loRa.macKeys.value = 0;
 35022  00478A  0E00               	movlw	0
 35023  00478C  0102               	movlb	2	; () banked
 35024  00478E  6FAB               	movwf	(_loRa+166)& (0+255),b
 35025  004790  0E00               	movlw	0
 35026  004792  6FAA               	movwf	(_loRa+165)& (0+255),b
 35027                           
 35028                           ; BSR set to: 2
 35029                           ;lorawan_eu.c: 220: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 35030  004794  0E22               	movlw	low (_loRa+29)
 35031  004796  0100               	movlb	0	; () banked
 35032  004798  6F60               	movwf	memset@p1& (0+255),b
 35033  00479A  0E02               	movlw	high (_loRa+29)
 35034  00479C  6F61               	movwf	(memset@p1+1)& (0+255),b
 35035  00479E  0E00               	movlw	0
 35036  0047A0  6F63               	movwf	(memset@c+1)& (0+255),b
 35037  0047A2  0E00               	movlw	0
 35038  0047A4  6F62               	movwf	memset@c& (0+255),b
 35039  0047A6  0E00               	movlw	0
 35040  0047A8  6F65               	movwf	(memset@n+1)& (0+255),b
 35041  0047AA  0E69               	movlw	105
 35042  0047AC  6F64               	movwf	memset@n& (0+255),b
 35043  0047AE  ECCA  F04F         	call	_memset	;wreg free
 35044                           
 35045                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay1 = 1000UL;
 35046  0047B2  0E03               	movlw	3
 35047  0047B4  0102               	movlb	2	; () banked
 35048  0047B6  6F9A               	movwf	(_loRa+149)& (0+255),b
 35049  0047B8  0EE8               	movlw	232
 35050  0047BA  6F99               	movwf	(_loRa+148)& (0+255),b
 35051                           
 35052                           ; BSR set to: 2
 35053                           ;lorawan_eu.c: 224: loRa.protocolParameters.receiveDelay2 = 2000UL;
 35054  0047BC  0E07               	movlw	7
 35055  0047BE  6F9C               	movwf	(_loRa+151)& (0+255),b
 35056  0047C0  0ED0               	movlw	208
 35057  0047C2  6F9B               	movwf	(_loRa+150)& (0+255),b
 35058                           
 35059                           ; BSR set to: 2
 35060                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 35061  0047C4  0E13               	movlw	19
 35062  0047C6  6F9E               	movwf	(_loRa+153)& (0+255),b
 35063  0047C8  0E88               	movlw	136
 35064  0047CA  6F9D               	movwf	(_loRa+152)& (0+255),b
 35065                           
 35066                           ; BSR set to: 2
 35067                           ;lorawan_eu.c: 226: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 35068  0047CC  0E17               	movlw	23
 35069  0047CE  6FA0               	movwf	(_loRa+155)& (0+255),b
 35070  0047D0  0E70               	movlw	112
 35071  0047D2  6F9F               	movwf	(_loRa+154)& (0+255),b
 35072                           
 35073                           ; BSR set to: 2
 35074                           ;lorawan_eu.c: 227: loRa.protocolParameters.ackTimeout = 2000;
 35075  0047D4  0E07               	movlw	7
 35076  0047D6  6FA6               	movwf	(_loRa+161)& (0+255),b
 35077  0047D8  0ED0               	movlw	208
 35078  0047DA  6FA5               	movwf	(_loRa+160)& (0+255),b
 35079                           
 35080                           ; BSR set to: 2
 35081                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckDelay = 32;
 35082  0047DC  0E20               	movlw	32
 35083  0047DE  6FA8               	movwf	(_loRa+163)& (0+255),b
 35084                           
 35085                           ; BSR set to: 2
 35086                           ;lorawan_eu.c: 229: loRa.protocolParameters.adrAckLimit = 64;
 35087  0047E0  0E40               	movlw	64
 35088  0047E2  6FA7               	movwf	(_loRa+162)& (0+255),b
 35089                           
 35090                           ; BSR set to: 2
 35091                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxFcntGap = 16384;
 35092  0047E4  0E40               	movlw	64
 35093  0047E6  6FA2               	movwf	(_loRa+157)& (0+255),b
 35094  0047E8  0E00               	movlw	0
 35095  0047EA  6FA1               	movwf	(_loRa+156)& (0+255),b
 35096                           
 35097                           ; BSR set to: 2
 35098                           ;lorawan_eu.c: 231: loRa.protocolParameters.maxMultiFcntGap = 16384;
 35099  0047EC  0E40               	movlw	64
 35100  0047EE  6FA4               	movwf	(_loRa+159)& (0+255),b
 35101  0047F0  0E00               	movlw	0
 35102  0047F2  6FA3               	movwf	(_loRa+158)& (0+255),b
 35103                           
 35104                           ; BSR set to: 2
 35105                           ;lorawan_eu.c: 233: LORAWAN_LinkCheckConfigure (0);
 35106  0047F4  0E00               	movlw	0
 35107  0047F6  0100               	movlb	0	; () banked
 35108  0047F8  6F9F               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 35109  0047FA  0E00               	movlw	0
 35110  0047FC  6F9E               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 35111  0047FE  ECBB  F028         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 35112  004802  0012               	return		;funcret
 35113  004804                     __end_of_LORAWAN_Reset:
 35114                           	opt callstack 0
 35115                           
 35116 ;; *************** function _UpdateMinMaxChDataRate *****************
 35117 ;; Defined at:
 35118 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35119 ;; Parameters:    Size  Location     Type
 35120 ;;		None
 35121 ;; Auto vars:     Size  Location     Type
 35122 ;;  i               1    1[BANK0 ] unsigned char 
 35123 ;; Return value:  Size  Location     Type
 35124 ;;                  1    wreg      void 
 35125 ;; Registers used:
 35126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35127 ;; Tracked objects:
 35128 ;;		On entry : 0/0
 35129 ;;		On exit  : 0/0
 35130 ;;		Unchanged: 0/0
 35131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35133 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35134 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35136 ;;Total ram usage:        2 bytes
 35137 ;; Hardware stack levels used:    1
 35138 ;; Hardware stack levels required when called:    7
 35139 ;; This function calls:
 35140 ;;		Nothing
 35141 ;; This function is called by:
 35142 ;;		_LORAWAN_Reset
 35143 ;; This function uses a non-reentrant model
 35144 ;;
 35145                           
 35146                           	psect	text212
 35147  00772A                     __ptext212:
 35148                           	opt callstack 0
 35149  00772A                     _UpdateMinMaxChDataRate:
 35150                           	opt callstack 22
 35151                           
 35152                           ;lorawan.c: 1065: uint8_t i;;lorawan.c: 1068: loRa.minDataRate = 7;
 35153                           
 35154                           ;incstack = 0
 35155  00772A  0E07               	movlw	7
 35156  00772C  0102               	movlb	2	; () banked
 35157  00772E  6FF0               	movwf	(_loRa+235)& (0+255),b
 35158                           
 35159                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 35160  007730  0E00               	movlw	0
 35161  007732  6FF1               	movwf	(_loRa+236)& (0+255),b
 35162                           
 35163                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 35164  007734  0E00               	movlw	0
 35165  007736  0100               	movlb	0	; () banked
 35166  007738  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 35167  00773A  D055               	goto	l16014
 35168  00773C                     l16002:
 35169                           
 35170                           ; BSR set to: 0
 35171                           ;lorawan.c: 1072: {;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate)
      +                           && (Channels[i].status == 1) )
 35172  00773C  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35173  00773E  0D0E               	mullw	14
 35174  007740  0E19               	movlw	low (_Channels+5)
 35175  007742  24F3               	addwf	prodl,w,c
 35176  007744  6ED9               	movwf	fsr2l,c
 35177  007746  0E04               	movlw	high (_Channels+5)
 35178  007748  20F4               	addwfc	prodh,w,c
 35179  00774A  6EDA               	movwf	fsr2h,c
 35180  00774C  0104               	movlb	4	; () banked
 35181  00774E  50DF               	movf	223,w,c
 35182  007750  0B0F               	andlw	15
 35183  007752  0100               	movlb	0	; () banked
 35184  007754  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 35185  007756  0102               	movlb	2	; () banked
 35186  007758  51F0               	movf	(_loRa+235)& (0+255),w,b
 35187  00775A  0100               	movlb	0	; () banked
 35188  00775C  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 35189  00775E  B0D8               	btfsc	status,0,c
 35190  007760  D018               	goto	l1888
 35191                           
 35192                           ; BSR set to: 0
 35193  007762  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35194  007764  0D0E               	mullw	14
 35195  007766  0E18               	movlw	low (_Channels+4)
 35196  007768  24F3               	addwf	prodl,w,c
 35197  00776A  6ED9               	movwf	fsr2l,c
 35198  00776C  0E04               	movlw	high (_Channels+4)
 35199  00776E  20F4               	addwfc	prodh,w,c
 35200  007770  6EDA               	movwf	fsr2h,c
 35201  007772  04DE               	decf	postinc2,w,c
 35202  007774  A4D8               	btfss	status,2,c
 35203  007776  D00D               	goto	l1888
 35204                           
 35205                           ; BSR set to: 0
 35206                           ;lorawan.c: 1074: {;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 35207  007778  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35208  00777A  0D0E               	mullw	14
 35209  00777C  0E19               	movlw	low (_Channels+5)
 35210  00777E  24F3               	addwf	prodl,w,c
 35211  007780  6ED9               	movwf	fsr2l,c
 35212  007782  0E04               	movlw	high (_Channels+5)
 35213  007784  20F4               	addwfc	prodh,w,c
 35214  007786  6EDA               	movwf	fsr2h,c
 35215  007788  0104               	movlb	4	; () banked
 35216  00778A  50DF               	movf	223,w,c
 35217  00778C  0B0F               	andlw	15
 35218  00778E  0102               	movlb	2	; () banked
 35219  007790  6FF0               	movwf	(_loRa+235)& (0+255),b
 35220  007792                     l1888:
 35221                           
 35222                           ;lorawan.c: 1076: };lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate)
      +                           && (Channels[i].status == 1) )
 35223  007792  0100               	movlb	0	; () banked
 35224  007794  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35225  007796  0D0E               	mullw	14
 35226  007798  0E19               	movlw	low (_Channels+5)
 35227  00779A  24F3               	addwf	prodl,w,c
 35228  00779C  6ED9               	movwf	fsr2l,c
 35229  00779E  0E04               	movlw	high (_Channels+5)
 35230  0077A0  20F4               	addwfc	prodh,w,c
 35231  0077A2  6EDA               	movwf	fsr2h,c
 35232  0077A4  0104               	movlb	4	; () banked
 35233  0077A6  38DF               	swapf	223,w,c
 35234  0077A8  0B0F               	andlw	15
 35235  0077AA  0102               	movlb	2	; () banked
 35236  0077AC  61F1               	cpfslt	(_loRa+236)& (0+255),b
 35237  0077AE  D019               	goto	l16012
 35238                           
 35239                           ; BSR set to: 2
 35240  0077B0  0100               	movlb	0	; () banked
 35241  0077B2  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35242  0077B4  0D0E               	mullw	14
 35243  0077B6  0E18               	movlw	low (_Channels+4)
 35244  0077B8  24F3               	addwf	prodl,w,c
 35245  0077BA  6ED9               	movwf	fsr2l,c
 35246  0077BC  0E04               	movlw	high (_Channels+4)
 35247  0077BE  20F4               	addwfc	prodh,w,c
 35248  0077C0  6EDA               	movwf	fsr2h,c
 35249  0077C2  04DE               	decf	postinc2,w,c
 35250  0077C4  A4D8               	btfss	status,2,c
 35251  0077C6  D00D               	goto	l16012
 35252                           
 35253                           ; BSR set to: 0
 35254                           ;lorawan.c: 1078: {;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 35255  0077C8  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35256  0077CA  0D0E               	mullw	14
 35257  0077CC  0E19               	movlw	low (_Channels+5)
 35258  0077CE  24F3               	addwf	prodl,w,c
 35259  0077D0  6ED9               	movwf	fsr2l,c
 35260  0077D2  0E04               	movlw	high (_Channels+5)
 35261  0077D4  20F4               	addwfc	prodh,w,c
 35262  0077D6  6EDA               	movwf	fsr2h,c
 35263  0077D8  0104               	movlb	4	; () banked
 35264  0077DA  38DF               	swapf	223,w,c
 35265  0077DC  0B0F               	andlw	15
 35266  0077DE  0102               	movlb	2	; () banked
 35267  0077E0  6FF1               	movwf	(_loRa+236)& (0+255),b
 35268  0077E2                     l16012:
 35269  0077E2  0100               	movlb	0	; () banked
 35270  0077E4  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 35271  0077E6                     l16014:
 35272                           
 35273                           ; BSR set to: 0
 35274  0077E6  0102               	movlb	2	; () banked
 35275  0077E8  51F2               	movf	(_loRa+237)& (0+255),w,b
 35276  0077EA  0100               	movlb	0	; () banked
 35277  0077EC  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35278  0077EE  B0D8               	btfsc	status,0,c
 35279  0077F0  0012               	return	
 35280  0077F2  D7A4               	goto	l16002
 35281  0077F4                     __end_of_UpdateMinMaxChDataRate:
 35282                           	opt callstack 0
 35283                           
 35284 ;; *************** function _StopAllSoftwareTimers *****************
 35285 ;; Defined at:
 35286 ;;		line 966 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35287 ;; Parameters:    Size  Location     Type
 35288 ;;		None
 35289 ;; Auto vars:     Size  Location     Type
 35290 ;;		None
 35291 ;; Return value:  Size  Location     Type
 35292 ;;                  1    wreg      void 
 35293 ;; Registers used:
 35294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35295 ;; Tracked objects:
 35296 ;;		On entry : 0/0
 35297 ;;		On exit  : 0/0
 35298 ;;		Unchanged: 0/0
 35299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35304 ;;Total ram usage:        0 bytes
 35305 ;; Hardware stack levels used:    1
 35306 ;; Hardware stack levels required when called:    8
 35307 ;; This function calls:
 35308 ;;		_SwTimerStop
 35309 ;; This function is called by:
 35310 ;;		_LORAWAN_Init
 35311 ;;		_LORAWAN_Reset
 35312 ;; This function uses a non-reentrant model
 35313 ;;
 35314                           
 35315                           	psect	text213
 35316  0093FC                     __ptext213:
 35317                           	opt callstack 0
 35318  0093FC                     _StopAllSoftwareTimers:
 35319                           	opt callstack 21
 35320                           
 35321                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept1TimerId);
 35322                           
 35323                           ; BSR set to: 0
 35324                           ;incstack = 0
 35325  0093FC  0102               	movlb	2	; () banked
 35326  0093FE  51E7               	movf	(_loRa+226)& (0+255),w,b
 35327  009400  ECD5  F051         	call	_SwTimerStop
 35328                           
 35329                           ;lorawan_eu.c: 969: SwTimerStop(loRa.joinAccept2TimerId);
 35330  009404  0102               	movlb	2	; () banked
 35331  009406  51E8               	movf	(_loRa+227)& (0+255),w,b
 35332  009408  ECD5  F051         	call	_SwTimerStop
 35333                           
 35334                           ;lorawan_eu.c: 970: SwTimerStop(loRa.linkCheckTimerId);
 35335  00940C  0102               	movlb	2	; () banked
 35336  00940E  51EC               	movf	(_loRa+231)& (0+255),w,b
 35337  009410  ECD5  F051         	call	_SwTimerStop
 35338                           
 35339                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow1TimerId);
 35340  009414  0102               	movlb	2	; () banked
 35341  009416  51E9               	movf	(_loRa+228)& (0+255),w,b
 35342  009418  ECD5  F051         	call	_SwTimerStop
 35343                           
 35344                           ;lorawan_eu.c: 972: SwTimerStop(loRa.receiveWindow2TimerId);
 35345  00941C  0102               	movlb	2	; () banked
 35346  00941E  51EA               	movf	(_loRa+229)& (0+255),w,b
 35347  009420  ECD5  F051         	call	_SwTimerStop
 35348                           
 35349                           ;lorawan_eu.c: 973: SwTimerStop(loRa.ackTimeoutTimerId);
 35350  009424  0102               	movlb	2	; () banked
 35351  009426  51ED               	movf	(_loRa+232)& (0+255),w,b
 35352  009428  ECD5  F051         	call	_SwTimerStop
 35353                           
 35354                           ;lorawan_eu.c: 974: SwTimerStop(loRa.automaticReplyTimerId);
 35355  00942C  0102               	movlb	2	; () banked
 35356  00942E  51EB               	movf	(_loRa+230)& (0+255),w,b
 35357  009430  ECD5  F051         	call	_SwTimerStop
 35358                           
 35359                           ;lorawan_eu.c: 975: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 35360  009434  0102               	movlb	2	; () banked
 35361  009436  51EF               	movf	(_loRa+234)& (0+255),w,b
 35362  009438  ECD5  F051         	call	_SwTimerStop
 35363                           
 35364                           ;lorawan_eu.c: 976: SwTimerStop(loRa.abpJoinTimerId);
 35365  00943C  0102               	movlb	2	; () banked
 35366  00943E  51F8               	movf	(_loRa+243)& (0+255),w,b
 35367  009440  ECD5  F051         	call	_SwTimerStop
 35368                           
 35369                           ;lorawan_eu.c: 977: SwTimerStop(loRa.dutyCycleTimerId);
 35370  009444  0102               	movlb	2	; () banked
 35371  009446  51EE               	movf	(_loRa+233)& (0+255),w,b
 35372  009448  ECD5  F051         	call	_SwTimerStop
 35373  00944C  0012               	return		;funcret
 35374  00944E                     __end_of_StopAllSoftwareTimers:
 35375                           	opt callstack 0
 35376                           
 35377 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 35378 ;; Defined at:
 35379 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35380 ;; Parameters:    Size  Location     Type
 35381 ;;  syncWord        1    wreg     unsigned char 
 35382 ;; Auto vars:     Size  Location     Type
 35383 ;;  syncWord        1    0[BANK0 ] unsigned char 
 35384 ;; Return value:  Size  Location     Type
 35385 ;;                  1    wreg      void 
 35386 ;; Registers used:
 35387 ;;		wreg
 35388 ;; Tracked objects:
 35389 ;;		On entry : 0/0
 35390 ;;		On exit  : 0/0
 35391 ;;		Unchanged: 0/0
 35392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35394 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35396 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35397 ;;Total ram usage:        1 bytes
 35398 ;; Hardware stack levels used:    1
 35399 ;; Hardware stack levels required when called:    7
 35400 ;; This function calls:
 35401 ;;		Nothing
 35402 ;; This function is called by:
 35403 ;;		_LORAWAN_Reset
 35404 ;;		_ConfigureRadio
 35405 ;; This function uses a non-reentrant model
 35406 ;;
 35407                           
 35408                           	psect	text214
 35409  00A85A                     __ptext214:
 35410                           	opt callstack 0
 35411  00A85A                     _RADIO_SetLoRaSyncWord:
 35412                           	opt callstack 17
 35413                           
 35414                           ;incstack = 0
 35415                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 35416  00A85A  0100               	movlb	0	; () banked
 35417  00A85C  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 35418                           
 35419                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 35420  00A85E  C060  F137         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 35421  00A862  0012               	return		;funcret
 35422  00A864                     __end_of_RADIO_SetLoRaSyncWord:
 35423                           	opt callstack 0
 35424                           
 35425 ;; *************** function _RADIO_Init *****************
 35426 ;; Defined at:
 35427 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35428 ;; Parameters:    Size  Location     Type
 35429 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 35430 ;;		 -> radioBuffer(271), 
 35431 ;;  frequency       4   27[BANK0 ] unsigned long 
 35432 ;; Auto vars:     Size  Location     Type
 35433 ;;		None
 35434 ;; Return value:  Size  Location     Type
 35435 ;;                  1    wreg      void 
 35436 ;; Registers used:
 35437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35438 ;; Tracked objects:
 35439 ;;		On entry : 0/0
 35440 ;;		On exit  : 0/0
 35441 ;;		Unchanged: 0/0
 35442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35443 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35446 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35447 ;;Total ram usage:        7 bytes
 35448 ;; Hardware stack levels used:    1
 35449 ;; Hardware stack levels required when called:   11
 35450 ;; This function calls:
 35451 ;;		_RADIO_RegisterRead
 35452 ;;		_RADIO_RegisterWrite
 35453 ;;		_RADIO_Reset
 35454 ;;		_RADIO_WriteFrequency
 35455 ;;		_RADIO_WriteMode
 35456 ;;		_SwTimerCreate
 35457 ;;		_SwTimerSetCallback
 35458 ;;		_SwTimerStop
 35459 ;; This function is called by:
 35460 ;;		_LORAWAN_Init
 35461 ;;		_LORAWAN_Reset
 35462 ;; This function uses a non-reentrant model
 35463 ;;
 35464                           
 35465                           	psect	text215
 35466  0049CE                     __ptext215:
 35467                           	opt callstack 0
 35468  0049CE                     _RADIO_Init:
 35469                           	opt callstack 18
 35470                           
 35471                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 35472                           
 35473                           ;incstack = 0
 35474  0049CE  C07B  F129         	movff	RADIO_Init@frequency,_RadioConfiguration
 35475  0049D2  C07C  F12A         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 35476  0049D6  C07D  F12B         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 35477  0049DA  C07E  F12C         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 35478                           
 35479                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 35480  0049DE  0EA8               	movlw	168
 35481  0049E0  0101               	movlb	1	; () banked
 35482  0049E2  6F2D               	movwf	(_RadioConfiguration+4)& (0+255),b
 35483  0049E4  0E61               	movlw	97
 35484  0049E6  6F2E               	movwf	(_RadioConfiguration+5)& (0+255),b
 35485  0049E8  0E00               	movlw	0
 35486  0049EA  6F2F               	movwf	(_RadioConfiguration+6)& (0+255),b
 35487  0049EC  0E00               	movlw	0
 35488  0049EE  6F30               	movwf	(_RadioConfiguration+7)& (0+255),b
 35489                           
 35490                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 35491  0049F0  0E50               	movlw	80
 35492  0049F2  6F31               	movwf	(_RadioConfiguration+8)& (0+255),b
 35493  0049F4  0EC3               	movlw	195
 35494  0049F6  6F32               	movwf	(_RadioConfiguration+9)& (0+255),b
 35495  0049F8  0E00               	movlw	0
 35496  0049FA  6F33               	movwf	(_RadioConfiguration+10)& (0+255),b
 35497  0049FC  0E00               	movlw	0
 35498  0049FE  6F34               	movwf	(_RadioConfiguration+11)& (0+255),b
 35499                           
 35500                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 35501  004A00  0E01               	movlw	1
 35502  004A02  6F41               	movwf	(_RadioConfiguration+24)& (0+255),b
 35503                           
 35504                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 35505  004A04  0E07               	movlw	7
 35506  004A06  6F43               	movwf	(_RadioConfiguration+26)& (0+255),b
 35507                           
 35508                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 35509  004A08  0E01               	movlw	1
 35510  004A0A  6F44               	movwf	(_RadioConfiguration+27)& (0+255),b
 35511                           
 35512                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 35513  004A0C  0E01               	movlw	1
 35514  004A0E  6F4A               	movwf	(_RadioConfiguration+33)& (0+255),b
 35515                           
 35516                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 35517  004A10  0E00               	movlw	0
 35518  004A12  6F4B               	movwf	(_RadioConfiguration+34)& (0+255),b
 35519                           
 35520                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 35521  004A14  0E00               	movlw	0
 35522  004A16  6F36               	movwf	(_RadioConfiguration+13)& (0+255),b
 35523  004A18  0E08               	movlw	8
 35524  004A1A  6F35               	movwf	(_RadioConfiguration+12)& (0+255),b
 35525                           
 35526                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 35527  004A1C  0E0C               	movlw	12
 35528  004A1E  6F42               	movwf	(_RadioConfiguration+25)& (0+255),b
 35529                           
 35530                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 35531  004A20  0E01               	movlw	1
 35532  004A22  6F45               	movwf	(_RadioConfiguration+28)& (0+255),b
 35533                           
 35534                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 35535  004A24  0E00               	movlw	0
 35536  004A26  6F46               	movwf	(_RadioConfiguration+29)& (0+255),b
 35537                           
 35538                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 35539  004A28  0E00               	movlw	0
 35540  004A2A  6F49               	movwf	(_RadioConfiguration+32)& (0+255),b
 35541                           
 35542                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 35543  004A2C  0EC1               	movlw	193
 35544  004A2E  6F38               	movwf	(_RadioConfiguration+15)& (0+255),b
 35545                           
 35546                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 35547  004A30  0E94               	movlw	148
 35548  004A32  6F39               	movwf	(_RadioConfiguration+16)& (0+255),b
 35549                           
 35550                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 35551  004A34  0EC1               	movlw	193
 35552  004A36  6F3A               	movwf	(_RadioConfiguration+17)& (0+255),b
 35553                           
 35554                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 35555  004A38  0E03               	movlw	3
 35556  004A3A  6F40               	movwf	(_RadioConfiguration+23)& (0+255),b
 35557                           
 35558                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 35559  004A3C  0E34               	movlw	52
 35560  004A3E  6F37               	movwf	(_RadioConfiguration+14)& (0+255),b
 35561                           
 35562                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 35563  004A40  0E00               	movlw	0
 35564  004A42  6F4C               	movwf	(_RadioConfiguration+35)& (0+255),b
 35565                           
 35566                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 35567  004A44  0E00               	movlw	0
 35568  004A46  6F4D               	movwf	(_RadioConfiguration+36)& (0+255),b
 35569                           
 35570                           ; BSR set to: 1
 35571                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 35572  004A48  C079  F14E         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 35573  004A4C  C07A  F14F         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 35574                           
 35575                           ; BSR set to: 1
 35576                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 35577  004A50  0E00               	movlw	0
 35578  004A52  6F48               	movwf	(_RadioConfiguration+31)& (0+255),b
 35579  004A54  0E00               	movlw	0
 35580  004A56  6F47               	movwf	(_RadioConfiguration+30)& (0+255),b
 35581                           
 35582                           ; BSR set to: 1
 35583                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 35584  004A58  0E80               	movlw	128
 35585  004A5A  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 35586                           
 35587                           ; BSR set to: 1
 35588                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 35589  004A5C  0E98               	movlw	152
 35590  004A5E  6F53               	movwf	(_RadioConfiguration+42)& (0+255),b
 35591  004A60  0E3A               	movlw	58
 35592  004A62  6F54               	movwf	(_RadioConfiguration+43)& (0+255),b
 35593  004A64  0E00               	movlw	0
 35594  004A66  6F55               	movwf	(_RadioConfiguration+44)& (0+255),b
 35595  004A68  0E00               	movlw	0
 35596  004A6A  6F56               	movwf	(_RadioConfiguration+45)& (0+255),b
 35597                           
 35598                           ; BSR set to: 1
 35599                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 35600  004A6C  0E02               	movlw	2
 35601  004A6E  6F5C               	movwf	(_RadioConfiguration+51)& (0+255),b
 35602                           
 35603                           ; BSR set to: 1
 35604                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 35605  004A70  0E0B               	movlw	11
 35606  004A72  6F5D               	movwf	(_RadioConfiguration+52)& (0+255),b
 35607                           
 35608                           ; BSR set to: 1
 35609                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 35610  004A74  0E12               	movlw	18
 35611  004A76  6F5E               	movwf	(_RadioConfiguration+53)& (0+255),b
 35612                           
 35613                           ; BSR set to: 1
 35614                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 35615  004A78  0E00               	movlw	0
 35616  004A7A  6F58               	movwf	(_RadioConfiguration+47)& (0+255),b
 35617  004A7C  0E00               	movlw	0
 35618  004A7E  6F59               	movwf	(_RadioConfiguration+48)& (0+255),b
 35619                           
 35620                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 35621  004A80  5157               	movf	(_RadioConfiguration+46)& (0+255),w,b
 35622  004A82  A4D8               	btfss	status,2,c
 35623  004A84  D026               	goto	l21400
 35624                           
 35625                           ; BSR set to: 1
 35626                           ;radio_driver_SX1276.c: 457: {;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirT
      +                          imerId = SwTimerCreate();
 35627  004A86  EC3F  F045         	call	_SwTimerCreate	;wreg free
 35628  004A8A  0101               	movlb	1	; () banked
 35629  004A8C  6F50               	movwf	(_RadioConfiguration+39)& (0+255),b
 35630                           
 35631                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 35632  004A8E  EC3F  F045         	call	_SwTimerCreate	;wreg free
 35633  004A92  0101               	movlb	1	; () banked
 35634  004A94  6F51               	movwf	(_RadioConfiguration+40)& (0+255),b
 35635                           
 35636                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 35637  004A96  EC3F  F045         	call	_SwTimerCreate	;wreg free
 35638  004A9A  0101               	movlb	1	; () banked
 35639  004A9C  6F52               	movwf	(_RadioConfiguration+41)& (0+255),b
 35640                           
 35641                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 35642  004A9E  0E44               	movlw	low _RADIO_RxFSKTimeout
 35643  004AA0  0100               	movlb	0	; () banked
 35644  004AA2  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35645  004AA4  0E9B               	movlw	high _RADIO_RxFSKTimeout
 35646  004AA6  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35647  004AA8  0E00               	movlw	0
 35648  004AAA  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35649  004AAC  0101               	movlb	1	; () banked
 35650  004AAE  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 35651  004AB0  EC4C  F04E         	call	_SwTimerSetCallback
 35652                           
 35653                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 35654  004AB4  0EA2               	movlw	low _RADIO_WatchdogTimeout
 35655  004AB6  0100               	movlb	0	; () banked
 35656  004AB8  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35657  004ABA  0E97               	movlw	high _RADIO_WatchdogTimeout
 35658  004ABC  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35659  004ABE  0E00               	movlw	0
 35660  004AC0  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35661  004AC2  0101               	movlb	1	; () banked
 35662  004AC4  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 35663  004AC6  EC4C  F04E         	call	_SwTimerSetCallback
 35664                           
 35665                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 35666  004ACA  0E01               	movlw	1
 35667  004ACC  0101               	movlb	1	; () banked
 35668  004ACE  6F57               	movwf	(_RadioConfiguration+46)& (0+255),b
 35669                           
 35670                           ;radio_driver_SX1276.c: 466: }
 35671  004AD0  D00B               	goto	l21402
 35672  004AD2                     l21400:
 35673                           
 35674                           ; BSR set to: 1
 35675                           ;radio_driver_SX1276.c: 467: else;radio_driver_SX1276.c: 468: {;radio_driver_SX1276.c: 4
      +                          69: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 35676  004AD2  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 35677  004AD4  ECD5  F051         	call	_SwTimerStop
 35678                           
 35679                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 35680  004AD8  0101               	movlb	1	; () banked
 35681  004ADA  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 35682  004ADC  ECD5  F051         	call	_SwTimerStop
 35683                           
 35684                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 35685  004AE0  0101               	movlb	1	; () banked
 35686  004AE2  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 35687  004AE4  ECD5  F051         	call	_SwTimerStop
 35688  004AE8                     l21402:
 35689                           
 35690                           ;radio_driver_SX1276.c: 472: };radio_driver_SX1276.c: 474: RADIO_Reset();
 35691  004AE8  EC3A  F04C         	call	_RADIO_Reset	;wreg free
 35692                           
 35693                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 35694  004AEC  0E00               	movlw	0
 35695  004AEE  0100               	movlb	0	; () banked
 35696  004AF0  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35697  004AF2  0E01               	movlw	1
 35698  004AF4  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35699  004AF6  0E01               	movlw	1
 35700  004AF8  EC1C  F036         	call	_RADIO_WriteMode
 35701                           
 35702                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 35703  004AFC  C129  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 35704  004B00  C12A  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 35705  004B04  C12B  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 35706  004B08  C12C  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 35707  004B0C  EC8B  F038         	call	_RADIO_WriteFrequency	;wreg free
 35708                           
 35709                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 35710  004B10  0E42               	movlw	66
 35711  004B12  0100               	movlb	0	; () banked
 35712  004B14  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35713  004B16  0E3B               	movlw	59
 35714  004B18  ECC5  F051         	call	_RADIO_RegisterWrite
 35715  004B1C                     l21410:
 35716  004B1C  0E3B               	movlw	59
 35717  004B1E  ECF5  F050         	call	_RADIO_RegisterRead
 35718  004B22  0100               	movlb	0	; () banked
 35719  004B24  6F7F               	movwf	??_RADIO_Init& (0+255),b
 35720  004B26  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 35721  004B28  D7F9               	goto	l21410
 35722                           
 35723                           ; BSR set to: 0
 35724                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 35725  004B2A  0E23               	movlw	35
 35726  004B2C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35727  004B2E  0E0C               	movlw	12
 35728  004B30  ECC5  F051         	call	_RADIO_RegisterWrite
 35729                           
 35730                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 35731  004B34  0E1E               	movlw	30
 35732  004B36  0100               	movlb	0	; () banked
 35733  004B38  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35734  004B3A  0E0D               	movlw	13
 35735  004B3C  ECC5  F051         	call	_RADIO_RegisterWrite
 35736                           
 35737                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 35738  004B40  0EAA               	movlw	170
 35739  004B42  0100               	movlb	0	; () banked
 35740  004B44  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35741  004B46  0E1F               	movlw	31
 35742  004B48  ECC5  F051         	call	_RADIO_RegisterWrite
 35743                           
 35744                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 35745  004B4C  0E8F               	movlw	143
 35746  004B4E  0100               	movlb	0	; () banked
 35747  004B50  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35748  004B52  0E35               	movlw	53
 35749  004B54  ECC5  F051         	call	_RADIO_RegisterWrite
 35750                           
 35751                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 35752  004B58  0EFF               	movlw	255
 35753  004B5A  0100               	movlb	0	; () banked
 35754  004B5C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35755  004B5E  0E32               	movlw	50
 35756  004B60  ECC5  F051         	call	_RADIO_RegisterWrite
 35757                           
 35758                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 35759  004B64  0E40               	movlw	64
 35760  004B66  0100               	movlb	0	; () banked
 35761  004B68  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35762  004B6A  0E31               	movlw	49
 35763  004B6C  ECC5  F051         	call	_RADIO_RegisterWrite
 35764                           
 35765                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 35766  004B70  0E01               	movlw	1
 35767  004B72  0100               	movlb	0	; () banked
 35768  004B74  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35769  004B76  0E01               	movlw	1
 35770  004B78  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35771  004B7A  0E00               	movlw	0
 35772  004B7C  EC1C  F036         	call	_RADIO_WriteMode
 35773                           
 35774                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 35775  004B80  0EFF               	movlw	255
 35776  004B82  0100               	movlb	0	; () banked
 35777  004B84  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35778  004B86  0E23               	movlw	35
 35779  004B88  ECC5  F051         	call	_RADIO_RegisterWrite
 35780                           
 35781                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 35782  004B8C  0E42               	movlw	66
 35783  004B8E  ECF5  F050         	call	_RADIO_RegisterRead
 35784  004B92  0101               	movlb	1	; () banked
 35785  004B94  6F5A               	movwf	(_RadioConfiguration+49)& (0+255),b
 35786                           
 35787                           ; BSR set to: 1
 35788  004B96  0012               	return		;funcret
 35789  004B98                     __end_of_RADIO_Init:
 35790                           	opt callstack 0
 35791                           
 35792 ;; *************** function _SwTimerSetCallback *****************
 35793 ;; Defined at:
 35794 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35795 ;; Parameters:    Size  Location     Type
 35796 ;;  timerId         1    wreg     unsigned char 
 35797 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 35798 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 35799 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 35800 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 35801 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 35802 ;; Auto vars:     Size  Location     Type
 35803 ;;  timerId         1    3[BANK0 ] unsigned char 
 35804 ;; Return value:  Size  Location     Type
 35805 ;;                  1    wreg      void 
 35806 ;; Registers used:
 35807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35808 ;; Tracked objects:
 35809 ;;		On entry : 0/0
 35810 ;;		On exit  : 0/0
 35811 ;;		Unchanged: 0/0
 35812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35813 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35816 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35817 ;;Total ram usage:        4 bytes
 35818 ;; Hardware stack levels used:    1
 35819 ;; Hardware stack levels required when called:    7
 35820 ;; This function calls:
 35821 ;;		Nothing
 35822 ;; This function is called by:
 35823 ;;		_RADIO_Init
 35824 ;;		_SetCallbackSoftwareTimers
 35825 ;; This function uses a non-reentrant model
 35826 ;;
 35827                           
 35828                           	psect	text216
 35829  009C98                     __ptext216:
 35830                           	opt callstack 0
 35831  009C98                     _SwTimerSetCallback:
 35832                           	opt callstack 21
 35833                           
 35834                           ; BSR set to: 1
 35835                           ;incstack = 0
 35836                           ;SwTimerSetCallback@timerId stored from wreg
 35837  009C98  0100               	movlb	0	; () banked
 35838  009C9A  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 35839                           
 35840                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 35841  009C9C  0100               	movlb	0	; () banked
 35842  009C9E  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35843  009CA0  0D08               	mullw	8
 35844  009CA2  0E06               	movlw	low (_swTimers+6)
 35845  009CA4  24F3               	addwf	prodl,w,c
 35846  009CA6  6ED9               	movwf	fsr2l,c
 35847  009CA8  0E03               	movlw	high (_swTimers+6)
 35848  009CAA  20F4               	addwfc	prodh,w,c
 35849  009CAC  6EDA               	movwf	fsr2h,c
 35850  009CAE  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 35851  009CB2  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 35852                           
 35853                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 35854  009CB6  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35855  009CB8  0D08               	mullw	8
 35856  009CBA  0E05               	movlw	low (_swTimers+5)
 35857  009CBC  24F3               	addwf	prodl,w,c
 35858  009CBE  6ED9               	movwf	fsr2l,c
 35859  009CC0  0E03               	movlw	high (_swTimers+5)
 35860  009CC2  20F4               	addwfc	prodh,w,c
 35861  009CC4  6EDA               	movwf	fsr2h,c
 35862  009CC6  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 35863                           
 35864                           ; BSR set to: 0
 35865  009CCA  0012               	return		;funcret
 35866  009CCC                     __end_of_SwTimerSetCallback:
 35867                           	opt callstack 0
 35868                           
 35869 ;; *************** function _RADIO_WriteMode *****************
 35870 ;; Defined at:
 35871 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35872 ;; Parameters:    Size  Location     Type
 35873 ;;  newMode         1    wreg     enum E6591
 35874 ;;  newModulatio    1    5[BANK0 ] enum E5853
 35875 ;;  blocking        1    6[BANK0 ] unsigned char 
 35876 ;; Auto vars:     Size  Location     Type
 35877 ;;  newMode         1   10[BANK0 ] enum E6591
 35878 ;;  opMode          1   11[BANK0 ] unsigned char 
 35879 ;;  currentMode     1    9[BANK0 ] enum E6591
 35880 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 35881 ;;  currentModul    1    7[BANK0 ] enum E5853
 35882 ;; Return value:  Size  Location     Type
 35883 ;;                  1    wreg      void 
 35884 ;; Registers used:
 35885 ;;		wreg, status,2, status,0, cstack
 35886 ;; Tracked objects:
 35887 ;;		On entry : 0/0
 35888 ;;		On exit  : 0/0
 35889 ;;		Unchanged: 0/0
 35890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35891 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35892 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35894 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35895 ;;Total ram usage:        7 bytes
 35896 ;; Hardware stack levels used:    1
 35897 ;; Hardware stack levels required when called:   10
 35898 ;; This function calls:
 35899 ;;		_HALDIO5PinValue
 35900 ;;		_RADIO_RegisterRead
 35901 ;;		_RADIO_RegisterWrite
 35902 ;;		_SystemBlockingWaitMs
 35903 ;; This function is called by:
 35904 ;;		_RADIO_Init
 35905 ;;		_RADIO_WriteConfiguration
 35906 ;;		_RADIO_Transmit
 35907 ;;		_RADIO_ReceiveStart
 35908 ;;		_RADIO_ReceiveStop
 35909 ;;		_RADIO_RxDone
 35910 ;;		_RADIO_FSKPayloadReady
 35911 ;;		_RADIO_RxTimeout
 35912 ;;		_RADIO_TxDone
 35913 ;;		_RADIO_FSKPacketSent
 35914 ;;		_RADIO_ReadRandom
 35915 ;;		_RADIO_RxFSKTimeout
 35916 ;;		_RADIO_WatchdogTimeout
 35917 ;;		_RADIO_StopCW
 35918 ;; This function uses a non-reentrant model
 35919 ;;
 35920                           
 35921                           	psect	text217
 35922  006C38                     __ptext217:
 35923                           	opt callstack 0
 35924  006C38                     _RADIO_WriteMode:
 35925                           	opt callstack 16
 35926                           
 35927                           ; BSR set to: 0
 35928                           ;incstack = 0
 35929                           ;RADIO_WriteMode@newMode stored from wreg
 35930  006C38  0100               	movlb	0	; () banked
 35931  006C3A  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 35932                           
 35933                           ;radio_driver_SX1276.c: 149: uint8_t opMode;;radio_driver_SX1276.c: 150: uint8_t dioMapp
      +                          ing;;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;;radio_driver_SX127
      +                          6.c: 152: RadioMode_t currentMode;;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == ne
      +                          wModulation) &&;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == 
      +                          newMode)))
 35934  006C3C  0100               	movlb	0	; () banked
 35935  006C3E  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35936  006C40  A4D8               	btfss	status,2,c
 35937  006C42  D008               	goto	l18186
 35938                           
 35939                           ; BSR set to: 0
 35940  006C44  0E06               	movlw	6
 35941  006C46  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35942  006C48  B4D8               	btfsc	status,2,c
 35943  006C4A  0012               	return	
 35944                           
 35945                           ; BSR set to: 0
 35946  006C4C  0E07               	movlw	7
 35947  006C4E  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35948  006C50  B4D8               	btfsc	status,2,c
 35949  006C52  0012               	return	
 35950  006C54                     l18186:
 35951                           
 35952                           ; BSR set to: 0
 35953                           ;radio_driver_SX1276.c: 159: };radio_driver_SX1276.c: 162: newMode &= 0x07;
 35954  006C54  0E07               	movlw	7
 35955  006C56  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 35956                           
 35957                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 35958  006C58  0E01               	movlw	1
 35959  006C5A  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 35960                           
 35961                           ; BSR set to: 0
 35962                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 35963  006C5C  0E01               	movlw	1
 35964  006C5E  ECF5  F050         	call	_RADIO_RegisterRead
 35965  006C62  0100               	movlb	0	; () banked
 35966  006C64  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 35967                           
 35968                           ; BSR set to: 0
 35969                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 35970  006C66  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 35971  006C68  D002               	goto	l18194
 35972                           
 35973                           ; BSR set to: 0
 35974                           ;radio_driver_SX1276.c: 168: {;radio_driver_SX1276.c: 169: currentModulation = MODULATIO
      +                          N_LORA;
 35975  006C6A  0E01               	movlw	1
 35976  006C6C  D001               	goto	L35
 35977  006C6E                     l18194:
 35978                           
 35979                           ; BSR set to: 0
 35980                           ;radio_driver_SX1276.c: 171: else;radio_driver_SX1276.c: 172: {;radio_driver_SX1276.c: 1
      +                          73: currentModulation = MODULATION_FSK;
 35981  006C6E  0E00               	movlw	0
 35982  006C70                     L35:
 35983  006C70  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 35984                           
 35985                           ; BSR set to: 0
 35986                           ;radio_driver_SX1276.c: 174: };radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 35987  006C72  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35988  006C74  0B07               	andlw	7
 35989  006C76  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 35990                           
 35991                           ; BSR set to: 0
 35992                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 35993  006C78  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 35994  006C7A  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 35995  006C7C  B4D8               	btfsc	status,2,c
 35996  006C7E  D01B               	goto	l18214
 35997                           
 35998                           ; BSR set to: 0
 35999                           ;radio_driver_SX1276.c: 181: {;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode
      +                          )
 36000  006C80  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 36001  006C82  B4D8               	btfsc	status,2,c
 36002  006C84  D009               	goto	l18206
 36003                           
 36004                           ; BSR set to: 0
 36005                           ;radio_driver_SX1276.c: 184: {;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opM
      +                          ode & (~0x07));
 36006  006C86  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36007  006C88  0BF8               	andlw	248
 36008  006C8A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 36009  006C8C  0E01               	movlw	1
 36010  006C8E  ECC5  F051         	call	_RADIO_RegisterWrite
 36011                           
 36012                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 36013  006C92  0E00               	movlw	0
 36014  006C94  0100               	movlb	0	; () banked
 36015  006C96  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 36016  006C98                     l18206:
 36017                           
 36018                           ; BSR set to: 0
 36019                           ;radio_driver_SX1276.c: 188: };radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModu
      +                          lation)
 36020  006C98  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 36021  006C9A  A4D8               	btfss	status,2,c
 36022  006C9C  D003               	goto	l18210
 36023                           
 36024                           ; BSR set to: 0
 36025                           ;radio_driver_SX1276.c: 191: {;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 36026  006C9E  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36027  006CA0  0B78               	andlw	120
 36028  006CA2  D003               	goto	L36
 36029  006CA4                     l18210:
 36030                           
 36031                           ; BSR set to: 0
 36032                           ;radio_driver_SX1276.c: 195: else;radio_driver_SX1276.c: 196: {;radio_driver_SX1276.c: 1
      +                          98: opMode = 0x80 | (opMode & (~0x87));
 36033  006CA4  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 36034  006CA6  0B78               	andlw	120
 36035  006CA8  0980               	iorlw	128
 36036  006CAA                     L36:
 36037  006CAA  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 36038                           
 36039                           ; BSR set to: 0
 36040                           ;radio_driver_SX1276.c: 199: };radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opM
      +                          ode);
 36041  006CAC  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 36042  006CB0  0E01               	movlw	1
 36043  006CB2  ECC5  F051         	call	_RADIO_RegisterWrite
 36044  006CB6                     l18214:
 36045                           
 36046                           ;radio_driver_SX1276.c: 201: };radio_driver_SX1276.c: 207: if (newMode != currentMode)
 36047  006CB6  0100               	movlb	0	; () banked
 36048  006CB8  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 36049  006CBA  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 36050  006CBC  B4D8               	btfsc	status,2,c
 36051  006CBE  0012               	return	
 36052                           
 36053                           ; BSR set to: 0
 36054                           ;radio_driver_SX1276.c: 208: {;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) &
      +                          & (1 == blocking))
 36055  006CC0  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36056  006CC2  B4D8               	btfsc	status,2,c
 36057  006CC4  D015               	goto	l18230
 36058                           
 36059                           ; BSR set to: 0
 36060  006CC6  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 36061  006CC8  A4D8               	btfss	status,2,c
 36062  006CCA  D012               	goto	l18230
 36063                           
 36064                           ; BSR set to: 0
 36065                           ;radio_driver_SX1276.c: 212: {;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRe
      +                          ad(0x41);
 36066  006CCC  0E41               	movlw	65
 36067  006CCE  ECF5  F050         	call	_RADIO_RegisterRead
 36068  006CD2  0100               	movlb	0	; () banked
 36069  006CD4  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 36070                           
 36071                           ; BSR set to: 0
 36072                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 36073  006CD6  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 36074  006CD8  A4D8               	btfss	status,2,c
 36075  006CDA  D003               	goto	l18226
 36076                           
 36077                           ; BSR set to: 0
 36078                           ;radio_driver_SX1276.c: 215: {;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 36079  006CDC  0E30               	movlw	48
 36080  006CDE  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 36081                           
 36082                           ;radio_driver_SX1276.c: 218: }
 36083  006CE0  D002               	goto	l18228
 36084  006CE2                     l18226:
 36085                           
 36086                           ; BSR set to: 0
 36087                           ;radio_driver_SX1276.c: 219: else;radio_driver_SX1276.c: 220: {;radio_driver_SX1276.c: 2
      +                          22: dioMapping &= ~0x30;
 36088  006CE2  0ECF               	movlw	207
 36089  006CE4  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 36090  006CE6                     l18228:
 36091                           
 36092                           ; BSR set to: 0
 36093                           ;radio_driver_SX1276.c: 223: };radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dio
      +                          Mapping);
 36094  006CE6  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 36095  006CEA  0E41               	movlw	65
 36096  006CEC  ECC5  F051         	call	_RADIO_RegisterWrite
 36097  006CF0                     l18230:
 36098                           
 36099                           ;radio_driver_SX1276.c: 225: };radio_driver_SX1276.c: 228: opMode &= ~0x07;
 36100  006CF0  0EF8               	movlw	248
 36101  006CF2  0100               	movlb	0	; () banked
 36102  006CF4  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 36103                           
 36104                           ; BSR set to: 0
 36105                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 36106  006CF6  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36107  006CF8  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 36108                           
 36109                           ; BSR set to: 0
 36110                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 36111  006CFA  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 36112  006CFE  0E01               	movlw	1
 36113  006D00  ECC5  F051         	call	_RADIO_RegisterWrite
 36114                           
 36115                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 36116  006D04  0100               	movlb	0	; () banked
 36117  006D06  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 36118  006D08  A4D8               	btfss	status,2,c
 36119  006D0A  0012               	return	
 36120                           
 36121                           ; BSR set to: 0
 36122                           ;radio_driver_SX1276.c: 234: {;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 36123  006D0C  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36124  006D0E  B4D8               	btfsc	status,2,c
 36125  006D10  D006               	goto	l18242
 36126  006D12                     u19200:
 36127  006D12  ECC8  F053         	call	_HALDIO5PinValue	;wreg free
 36128  006D16  0900               	iorlw	0
 36129  006D18  A4D8               	btfss	status,2,c
 36130  006D1A  0012               	return	
 36131  006D1C  D7FA               	goto	u19200
 36132  006D1E                     l18242:
 36133                           
 36134                           ; BSR set to: 0
 36135                           ;radio_driver_SX1276.c: 240: else;radio_driver_SX1276.c: 241: {;radio_driver_SX1276.c: 2
      +                          42: SystemBlockingWaitMs(1);
 36136  006D1E  0E01               	movlw	1
 36137  006D20  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36138  006D22  0E00               	movlw	0
 36139  006D24  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36140  006D26  0E00               	movlw	0
 36141  006D28  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36142  006D2A  0E00               	movlw	0
 36143  006D2C  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36144  006D2E  EC28  F04F         	call	_SystemBlockingWaitMs	;wreg free
 36145  006D32  0012               	return		;funcret
 36146  006D34                     __end_of_RADIO_WriteMode:
 36147                           	opt callstack 0
 36148                           
 36149 ;; *************** function _RADIO_RegisterRead *****************
 36150 ;; Defined at:
 36151 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36152 ;; Parameters:    Size  Location     Type
 36153 ;;  reg             1    wreg     unsigned char 
 36154 ;; Auto vars:     Size  Location     Type
 36155 ;;  reg             1    2[BANK0 ] unsigned char 
 36156 ;;  readValue       1    3[BANK0 ] unsigned char 
 36157 ;; Return value:  Size  Location     Type
 36158 ;;                  1    wreg      unsigned char 
 36159 ;; Registers used:
 36160 ;;		wreg, status,2, status,0, cstack
 36161 ;; Tracked objects:
 36162 ;;		On entry : 0/0
 36163 ;;		On exit  : 0/0
 36164 ;;		Unchanged: 0/0
 36165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36167 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36169 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36170 ;;Total ram usage:        2 bytes
 36171 ;; Hardware stack levels used:    1
 36172 ;; Hardware stack levels required when called:    9
 36173 ;; This function calls:
 36174 ;;		_HALSPICSAssert
 36175 ;;		_HALSPICSDeassert
 36176 ;;		_HALSPISend
 36177 ;; This function is called by:
 36178 ;;		_RADIO_WriteMode
 36179 ;;		_RADIO_WritePower
 36180 ;;		_RADIO_Init
 36181 ;;		_RADIO_WriteConfiguration
 36182 ;;		_RADIO_Transmit
 36183 ;;		_RADIO_RxDone
 36184 ;;		_RADIO_FSKPayloadReady
 36185 ;;		_RADIO_FSKPacketSent
 36186 ;;		_RADIO_FHSSChangeChannel
 36187 ;;		_RADIO_DIO0
 36188 ;;		_RADIO_DIO1
 36189 ;;		_RADIO_DIO2
 36190 ;;		_RADIO_DIO3
 36191 ;;		_RADIO_DIO4
 36192 ;;		_RADIO_DIO5
 36193 ;;		_RADIO_ReadRandom
 36194 ;;		_RADIO_RxFSKTimeout
 36195 ;; This function uses a non-reentrant model
 36196 ;;
 36197                           
 36198                           	psect	text218
 36199  00A1EA                     __ptext218:
 36200                           	opt callstack 0
 36201  00A1EA                     _RADIO_RegisterRead:
 36202                           	opt callstack 16
 36203                           
 36204                           ;incstack = 0
 36205                           ;RADIO_RegisterRead@reg stored from wreg
 36206  00A1EA  0100               	movlb	0	; () banked
 36207  00A1EC  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 36208                           
 36209                           ;radio_driver_SX1276.c: 136: uint8_t readValue;;radio_driver_SX1276.c: 137: reg &= 0x7F;
 36210  00A1EE  0100               	movlb	0	; () banked
 36211  00A1F0  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 36212                           
 36213                           ; BSR set to: 0
 36214                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 36215  00A1F2  EC6C  F054         	call	_HALSPICSAssert	;wreg free
 36216                           
 36217                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 36218  00A1F6  0100               	movlb	0	; () banked
 36219  00A1F8  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 36220  00A1FA  ECBB  F053         	call	_HALSPISend
 36221                           
 36222                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 36223  00A1FE  0EFF               	movlw	255
 36224  00A200  ECBB  F053         	call	_HALSPISend
 36225  00A204  0100               	movlb	0	; () banked
 36226  00A206  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 36227                           
 36228                           ; BSR set to: 0
 36229                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 36230  00A208  EC6A  F054         	call	_HALSPICSDeassert	;wreg free
 36231                           
 36232                           ;radio_driver_SX1276.c: 142: return readValue;
 36233  00A20C  0100               	movlb	0	; () banked
 36234  00A20E  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 36235                           
 36236                           ; BSR set to: 0
 36237  00A210  0012               	return		;funcret
 36238  00A212                     __end_of_RADIO_RegisterRead:
 36239                           	opt callstack 0
 36240                           
 36241 ;; *************** function _HALDIO5PinValue *****************
 36242 ;; Defined at:
 36243 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36244 ;; Parameters:    Size  Location     Type
 36245 ;;		None
 36246 ;; Auto vars:     Size  Location     Type
 36247 ;;		None
 36248 ;; Return value:  Size  Location     Type
 36249 ;;                  1    wreg      unsigned char 
 36250 ;; Registers used:
 36251 ;;		wreg
 36252 ;; Tracked objects:
 36253 ;;		On entry : 0/0
 36254 ;;		On exit  : 0/0
 36255 ;;		Unchanged: 0/0
 36256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36261 ;;Total ram usage:        0 bytes
 36262 ;; Hardware stack levels used:    1
 36263 ;; Hardware stack levels required when called:    7
 36264 ;; This function calls:
 36265 ;;		Nothing
 36266 ;; This function is called by:
 36267 ;;		_RADIO_WriteMode
 36268 ;; This function uses a non-reentrant model
 36269 ;;
 36270                           
 36271                           	psect	text219
 36272  00A790                     __ptext219:
 36273                           	opt callstack 0
 36274  00A790                     _HALDIO5PinValue:
 36275                           	opt callstack 18
 36276                           
 36277                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 36278                           
 36279                           ; BSR set to: 0
 36280                           ;incstack = 0
 36281  00A790  A081               	btfss	3969,0,c	;volatile
 36282  00A792  D002               	goto	u18770
 36283  00A794  0E01               	movlw	1
 36284  00A796  0012               	return	
 36285  00A798                     u18770:
 36286  00A798  0E00               	movlw	0
 36287  00A79A  0012               	return		;funcret
 36288  00A79C                     __end_of_HALDIO5PinValue:
 36289                           	opt callstack 0
 36290                           
 36291 ;; *************** function _RADIO_WriteFrequency *****************
 36292 ;; Defined at:
 36293 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36294 ;; Parameters:    Size  Location     Type
 36295 ;;  frequency       4   13[BANK0 ] unsigned long 
 36296 ;; Auto vars:     Size  Location     Type
 36297 ;;  num             4   21[BANK0 ] unsigned long 
 36298 ;;  num_mod         4   17[BANK0 ] unsigned long 
 36299 ;; Return value:  Size  Location     Type
 36300 ;;                  1    wreg      void 
 36301 ;; Registers used:
 36302 ;;		wreg, status,2, status,0, cstack
 36303 ;; Tracked objects:
 36304 ;;		On entry : 0/0
 36305 ;;		On exit  : 0/0
 36306 ;;		Unchanged: 0/0
 36307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36308 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36309 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36311 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36312 ;;Total ram usage:       12 bytes
 36313 ;; Hardware stack levels used:    1
 36314 ;; Hardware stack levels required when called:   10
 36315 ;; This function calls:
 36316 ;;		_RADIO_RegisterWrite
 36317 ;;		___lldiv
 36318 ;;		___llmod
 36319 ;; This function is called by:
 36320 ;;		_RADIO_Init
 36321 ;;		_RADIO_WriteConfiguration
 36322 ;;		_RADIO_FHSSChangeChannel
 36323 ;; This function uses a non-reentrant model
 36324 ;;
 36325                           
 36326                           	psect	text220
 36327  007116                     __ptext220:
 36328                           	opt callstack 0
 36329  007116                     _RADIO_WriteFrequency:
 36330                           	opt callstack 15
 36331                           
 36332                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;;radio_driver_SX1276.c: 272: num = fr
      +                          equency / 15625;
 36333                           
 36334                           ;incstack = 0
 36335  007116  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 36336  00711A  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 36337  00711E  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 36338  007122  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 36339  007126  0E09               	movlw	9
 36340  007128  0100               	movlb	0	; () banked
 36341  00712A  6F64               	movwf	___lldiv@divisor& (0+255),b
 36342  00712C  0E3D               	movlw	61
 36343  00712E  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36344  007130  0E00               	movlw	0
 36345  007132  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36346  007134  0E00               	movlw	0
 36347  007136  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36348  007138  EC96  F042         	call	___lldiv	;wreg free
 36349  00713C  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 36350  007140  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 36351  007144  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 36352  007148  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 36353                           
 36354                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 36355  00714C  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 36356  007150  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 36357  007154  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 36358  007158  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 36359  00715C  0E09               	movlw	9
 36360  00715E  0100               	movlb	0	; () banked
 36361  007160  6F64               	movwf	___llmod@divisor& (0+255),b
 36362  007162  0E3D               	movlw	61
 36363  007164  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 36364  007166  0E00               	movlw	0
 36365  007168  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 36366  00716A  0E00               	movlw	0
 36367  00716C  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 36368  00716E  ECF2  F046         	call	___llmod	;wreg free
 36369  007172  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 36370  007176  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 36371  00717A  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 36372  00717E  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 36373                           
 36374                           ;radio_driver_SX1276.c: 277: num <<= (8);
 36375  007182  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 36376  007186  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 36377  00718A  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 36378  00718E  0100               	movlb	0	; () banked
 36379  007190  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 36380                           
 36381                           ; BSR set to: 0
 36382                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 36383  007192  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 36384  007196  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 36385  00719A  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 36386  00719E  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 36387                           
 36388                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 36389  0071A0  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 36390  0071A4  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 36391  0071A8  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 36392  0071AC  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 36393  0071B0  0E09               	movlw	9
 36394  0071B2  6F64               	movwf	___lldiv@divisor& (0+255),b
 36395  0071B4  0E3D               	movlw	61
 36396  0071B6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36397  0071B8  0E00               	movlw	0
 36398  0071BA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36399  0071BC  0E00               	movlw	0
 36400  0071BE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36401  0071C0  EC96  F042         	call	___lldiv	;wreg free
 36402  0071C4  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 36403  0071C8  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 36404  0071CC  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 36405  0071D0  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 36406                           
 36407                           ;radio_driver_SX1276.c: 283: num += num_mod;
 36408  0071D4  0100               	movlb	0	; () banked
 36409  0071D6  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 36410  0071D8  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 36411  0071DA  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 36412  0071DC  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 36413  0071DE  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 36414  0071E0  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 36415  0071E2  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 36416  0071E4  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 36417                           
 36418                           ; BSR set to: 0
 36419                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 36420  0071E6  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 36421  0071EA  0E06               	movlw	6
 36422  0071EC  ECC5  F051         	call	_RADIO_RegisterWrite
 36423                           
 36424                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 36425  0071F0  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 36426  0071F4  0E07               	movlw	7
 36427  0071F6  ECC5  F051         	call	_RADIO_RegisterWrite
 36428                           
 36429                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 36430  0071FA  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 36431  0071FE  0E08               	movlw	8
 36432  007200  ECC5  F051         	call	_RADIO_RegisterWrite
 36433  007204  0012               	return		;funcret
 36434  007206                     __end_of_RADIO_WriteFrequency:
 36435                           	opt callstack 0
 36436                           
 36437 ;; *************** function ___llmod *****************
 36438 ;; Defined at:
 36439 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 36440 ;; Parameters:    Size  Location     Type
 36441 ;;  dividend        4    0[BANK0 ] unsigned long 
 36442 ;;  divisor         4    4[BANK0 ] unsigned long 
 36443 ;; Auto vars:     Size  Location     Type
 36444 ;;  counter         1    8[BANK0 ] unsigned char 
 36445 ;; Return value:  Size  Location     Type
 36446 ;;                  4    0[BANK0 ] unsigned long 
 36447 ;; Registers used:
 36448 ;;		wreg, status,2, status,0
 36449 ;; Tracked objects:
 36450 ;;		On entry : 0/0
 36451 ;;		On exit  : 0/0
 36452 ;;		Unchanged: 0/0
 36453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36454 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36455 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36457 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36458 ;;Total ram usage:        9 bytes
 36459 ;; Hardware stack levels used:    1
 36460 ;; Hardware stack levels required when called:    7
 36461 ;; This function calls:
 36462 ;;		Nothing
 36463 ;; This function is called by:
 36464 ;;		_RADIO_WriteFrequency
 36465 ;; This function uses a non-reentrant model
 36466 ;;
 36467                           
 36468                           	psect	text221
 36469  008DE4                     __ptext221:
 36470                           	opt callstack 0
 36471  008DE4                     ___llmod:
 36472                           	opt callstack 17
 36473                           
 36474                           ;incstack = 0
 36475  008DE4  0100               	movlb	0	; () banked
 36476  008DE6  5164               	movf	___llmod@divisor& (0+255),w,b
 36477  008DE8  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 36478  008DEA  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 36479  008DEC  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 36480  008DEE  B4D8               	btfsc	status,2,c
 36481  008DF0  D024               	goto	l3951
 36482                           
 36483                           ; BSR set to: 0
 36484  008DF2  0E01               	movlw	1
 36485  008DF4  6F68               	movwf	___llmod@counter& (0+255),b
 36486  008DF6  D006               	goto	l18118
 36487  008DF8                     l18116:
 36488                           
 36489                           ; BSR set to: 0
 36490  008DF8  90D8               	bcf	status,0,c
 36491  008DFA  3764               	rlcf	___llmod@divisor& (0+255),f,b
 36492  008DFC  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 36493  008DFE  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 36494  008E00  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 36495  008E02  2B68               	incf	___llmod@counter& (0+255),f,b
 36496  008E04                     l18118:
 36497                           
 36498                           ; BSR set to: 0
 36499  008E04  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 36500  008E06  D7F8               	goto	l18116
 36501  008E08                     u18960:
 36502                           
 36503                           ; BSR set to: 0
 36504  008E08  5164               	movf	___llmod@divisor& (0+255),w,b
 36505  008E0A  5D60               	subwf	___llmod@dividend& (0+255),w,b
 36506  008E0C  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36507  008E0E  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 36508  008E10  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36509  008E12  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 36510  008E14  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36511  008E16  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 36512  008E18  A0D8               	btfss	status,0,c
 36513  008E1A  D008               	goto	l18124
 36514                           
 36515                           ; BSR set to: 0
 36516  008E1C  5164               	movf	___llmod@divisor& (0+255),w,b
 36517  008E1E  5F60               	subwf	___llmod@dividend& (0+255),f,b
 36518  008E20  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36519  008E22  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 36520  008E24  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36521  008E26  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 36522  008E28  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36523  008E2A  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 36524  008E2C                     l18124:
 36525                           
 36526                           ; BSR set to: 0
 36527  008E2C  90D8               	bcf	status,0,c
 36528  008E2E  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 36529  008E30  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 36530  008E32  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 36531  008E34  3364               	rrcf	___llmod@divisor& (0+255),f,b
 36532                           
 36533                           ; BSR set to: 0
 36534  008E36  2F68               	decfsz	___llmod@counter& (0+255),f,b
 36535  008E38  D7E7               	goto	u18960
 36536  008E3A                     l3951:
 36537                           
 36538                           ; BSR set to: 0
 36539  008E3A  C060  F060         	movff	___llmod@dividend,?___llmod
 36540  008E3E  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 36541  008E42  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 36542  008E46  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 36543                           
 36544                           ; BSR set to: 0
 36545  008E4A  0012               	return		;funcret
 36546  008E4C                     __end_of___llmod:
 36547                           	opt callstack 0
 36548                           
 36549 ;; *************** function _RADIO_RegisterWrite *****************
 36550 ;; Defined at:
 36551 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36552 ;; Parameters:    Size  Location     Type
 36553 ;;  reg             1    wreg     unsigned char 
 36554 ;;  value           1    2[BANK0 ] unsigned char 
 36555 ;; Auto vars:     Size  Location     Type
 36556 ;;  reg             1    3[BANK0 ] unsigned char 
 36557 ;; Return value:  Size  Location     Type
 36558 ;;                  1    wreg      void 
 36559 ;; Registers used:
 36560 ;;		wreg, status,2, status,0, cstack
 36561 ;; Tracked objects:
 36562 ;;		On entry : 0/0
 36563 ;;		On exit  : 0/0
 36564 ;;		Unchanged: 0/0
 36565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36566 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36567 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36569 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36570 ;;Total ram usage:        2 bytes
 36571 ;; Hardware stack levels used:    1
 36572 ;; Hardware stack levels required when called:    9
 36573 ;; This function calls:
 36574 ;;		_HALSPICSAssert
 36575 ;;		_HALSPICSDeassert
 36576 ;;		_HALSPISend
 36577 ;; This function is called by:
 36578 ;;		_RADIO_WriteMode
 36579 ;;		_RADIO_WriteFrequency
 36580 ;;		_RADIO_WriteFSKFrequencyDeviation
 36581 ;;		_RADIO_WriteFSKBitRate
 36582 ;;		_RADIO_WritePower
 36583 ;;		_RADIO_Init
 36584 ;;		_RADIO_WriteConfiguration
 36585 ;;		_RADIO_Transmit
 36586 ;;		_RADIO_ReceiveStart
 36587 ;;		_RADIO_RxDone
 36588 ;;		_RADIO_RxTimeout
 36589 ;;		_RADIO_TxDone
 36590 ;;		_RADIO_UnhandledInterrupt
 36591 ;;		_RADIO_FHSSChangeChannel
 36592 ;;		_RADIO_ReadRandom
 36593 ;;		_RADIO_TransmitCW
 36594 ;; This function uses a non-reentrant model
 36595 ;;
 36596                           
 36597                           	psect	text222
 36598  00A38A                     __ptext222:
 36599                           	opt callstack 0
 36600  00A38A                     _RADIO_RegisterWrite:
 36601                           	opt callstack 16
 36602                           
 36603                           ; BSR set to: 0
 36604                           ;incstack = 0
 36605                           ;RADIO_RegisterWrite@reg stored from wreg
 36606  00A38A  0100               	movlb	0	; () banked
 36607  00A38C  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 36608                           
 36609                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 36610  00A38E  EC6C  F054         	call	_HALSPICSAssert	;wreg free
 36611                           
 36612                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 36613  00A392  0100               	movlb	0	; () banked
 36614  00A394  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 36615  00A396  0980               	iorlw	128
 36616  00A398  ECBB  F053         	call	_HALSPISend
 36617                           
 36618                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 36619  00A39C  0100               	movlb	0	; () banked
 36620  00A39E  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 36621  00A3A0  ECBB  F053         	call	_HALSPISend
 36622                           
 36623                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 36624  00A3A4  EC6A  F054         	call	_HALSPICSDeassert	;wreg free
 36625  00A3A8  0012               	return		;funcret
 36626  00A3AA                     __end_of_RADIO_RegisterWrite:
 36627                           	opt callstack 0
 36628                           
 36629 ;; *************** function _HALSPISend *****************
 36630 ;; Defined at:
 36631 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36632 ;; Parameters:    Size  Location     Type
 36633 ;;  data            1    wreg     unsigned char 
 36634 ;; Auto vars:     Size  Location     Type
 36635 ;;  data            1    1[BANK0 ] unsigned char 
 36636 ;; Return value:  Size  Location     Type
 36637 ;;                  1    wreg      unsigned char 
 36638 ;; Registers used:
 36639 ;;		wreg, status,2, cstack
 36640 ;; Tracked objects:
 36641 ;;		On entry : 0/0
 36642 ;;		On exit  : 0/0
 36643 ;;		Unchanged: 0/0
 36644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36649 ;;Total ram usage:        1 bytes
 36650 ;; Hardware stack levels used:    1
 36651 ;; Hardware stack levels required when called:    8
 36652 ;; This function calls:
 36653 ;;		_SPI2_Exchange8bit
 36654 ;; This function is called by:
 36655 ;;		_RADIO_RegisterWrite
 36656 ;;		_RADIO_RegisterRead
 36657 ;;		_RADIO_Transmit
 36658 ;;		_RADIO_RxDone
 36659 ;;		_RADIO_FSKPayloadReady
 36660 ;; This function uses a non-reentrant model
 36661 ;;
 36662                           
 36663                           	psect	text223
 36664  00A776                     __ptext223:
 36665                           	opt callstack 0
 36666  00A776                     _HALSPISend:
 36667                           	opt callstack 16
 36668                           
 36669                           ;incstack = 0
 36670                           ;HALSPISend@data stored from wreg
 36671  00A776  0100               	movlb	0	; () banked
 36672  00A778  6F61               	movwf	HALSPISend@data& (0+255),b
 36673                           
 36674                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 36675  00A77A  0100               	movlb	0	; () banked
 36676  00A77C  5161               	movf	HALSPISend@data& (0+255),w,b
 36677  00A77E  EC57  F053         	call	_SPI2_Exchange8bit
 36678  00A782  0012               	return		;funcret
 36679  00A784                     __end_of_HALSPISend:
 36680                           	opt callstack 0
 36681                           
 36682 ;; *************** function _SPI2_Exchange8bit *****************
 36683 ;; Defined at:
 36684 ;;		line 79 in file "mcc_generated_files/spi2.c"
 36685 ;; Parameters:    Size  Location     Type
 36686 ;;  data            1    wreg     unsigned char 
 36687 ;; Auto vars:     Size  Location     Type
 36688 ;;  data            1    0[BANK0 ] unsigned char 
 36689 ;; Return value:  Size  Location     Type
 36690 ;;                  1    wreg      unsigned char 
 36691 ;; Registers used:
 36692 ;;		wreg, status,2
 36693 ;; Tracked objects:
 36694 ;;		On entry : 0/0
 36695 ;;		On exit  : 0/0
 36696 ;;		Unchanged: 0/0
 36697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36699 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36701 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36702 ;;Total ram usage:        1 bytes
 36703 ;; Hardware stack levels used:    1
 36704 ;; Hardware stack levels required when called:    7
 36705 ;; This function calls:
 36706 ;;		Nothing
 36707 ;; This function is called by:
 36708 ;;		_HALSPISend
 36709 ;;		_SPI2_Exchange8bitBuffer
 36710 ;; This function uses a non-reentrant model
 36711 ;;
 36712                           
 36713                           	psect	text224
 36714  00A6AE                     __ptext224:
 36715                           	opt callstack 0
 36716  00A6AE                     _SPI2_Exchange8bit:
 36717                           	opt callstack 16
 36718                           
 36719                           ;incstack = 0
 36720                           ;SPI2_Exchange8bit@data stored from wreg
 36721  00A6AE  0100               	movlb	0	; () banked
 36722  00A6B0  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 36723                           
 36724                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 36725  00A6B2  9E6C               	bcf	3948,7,c	;volatile
 36726                           
 36727                           ;spi2.c: 84: SSP2BUF = data;
 36728  00A6B4  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 36729  00A6B8                     l2198:
 36730  00A6B8  A06D               	btfss	3949,0,c	;volatile
 36731  00A6BA  D7FE               	goto	l2198
 36732                           
 36733                           ;spi2.c: 88: };spi2.c: 90: return (SSP2BUF);
 36734  00A6BC  506F               	movf	3951,w,c	;volatile
 36735  00A6BE  0012               	return		;funcret
 36736  00A6C0                     __end_of_SPI2_Exchange8bit:
 36737                           	opt callstack 0
 36738                           
 36739 ;; *************** function _HALSPICSDeassert *****************
 36740 ;; Defined at:
 36741 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36742 ;; Parameters:    Size  Location     Type
 36743 ;;		None
 36744 ;; Auto vars:     Size  Location     Type
 36745 ;;		None
 36746 ;; Return value:  Size  Location     Type
 36747 ;;                  1    wreg      void 
 36748 ;; Registers used:
 36749 ;;		None
 36750 ;; Tracked objects:
 36751 ;;		On entry : 0/0
 36752 ;;		On exit  : 0/0
 36753 ;;		Unchanged: 0/0
 36754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36759 ;;Total ram usage:        0 bytes
 36760 ;; Hardware stack levels used:    1
 36761 ;; Hardware stack levels required when called:    7
 36762 ;; This function calls:
 36763 ;;		Nothing
 36764 ;; This function is called by:
 36765 ;;		_RADIO_RegisterWrite
 36766 ;;		_RADIO_RegisterRead
 36767 ;;		_RADIO_Transmit
 36768 ;;		_RADIO_RxDone
 36769 ;;		_RADIO_FSKPayloadReady
 36770 ;; This function uses a non-reentrant model
 36771 ;;
 36772                           
 36773                           	psect	text225
 36774  00A8D4                     __ptext225:
 36775                           	opt callstack 0
 36776  00A8D4                     _HALSPICSDeassert:
 36777                           	opt callstack 17
 36778                           
 36779                           ;incstack = 0
 36780                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 36781  00A8D4  868C               	bsf	3980,3,c	;volatile
 36782  00A8D6  0012               	return		;funcret
 36783  00A8D8                     __end_of_HALSPICSDeassert:
 36784                           	opt callstack 0
 36785                           
 36786 ;; *************** function _HALSPICSAssert *****************
 36787 ;; Defined at:
 36788 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36789 ;; Parameters:    Size  Location     Type
 36790 ;;		None
 36791 ;; Auto vars:     Size  Location     Type
 36792 ;;		None
 36793 ;; Return value:  Size  Location     Type
 36794 ;;                  1    wreg      void 
 36795 ;; Registers used:
 36796 ;;		None
 36797 ;; Tracked objects:
 36798 ;;		On entry : 0/0
 36799 ;;		On exit  : 0/0
 36800 ;;		Unchanged: 0/0
 36801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36806 ;;Total ram usage:        0 bytes
 36807 ;; Hardware stack levels used:    1
 36808 ;; Hardware stack levels required when called:    7
 36809 ;; This function calls:
 36810 ;;		Nothing
 36811 ;; This function is called by:
 36812 ;;		_RADIO_RegisterWrite
 36813 ;;		_RADIO_RegisterRead
 36814 ;;		_RADIO_Transmit
 36815 ;;		_RADIO_RxDone
 36816 ;;		_RADIO_FSKPayloadReady
 36817 ;; This function uses a non-reentrant model
 36818 ;;
 36819                           
 36820                           	psect	text226
 36821  00A8D8                     __ptext226:
 36822                           	opt callstack 0
 36823  00A8D8                     _HALSPICSAssert:
 36824                           	opt callstack 17
 36825                           
 36826                           ;incstack = 0
 36827                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 36828  00A8D8  968C               	bcf	3980,3,c	;volatile
 36829  00A8DA  0012               	return		;funcret
 36830  00A8DC                     __end_of_HALSPICSAssert:
 36831                           	opt callstack 0
 36832                           
 36833 ;; *************** function _RADIO_Reset *****************
 36834 ;; Defined at:
 36835 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36836 ;; Parameters:    Size  Location     Type
 36837 ;;		None
 36838 ;; Auto vars:     Size  Location     Type
 36839 ;;		None
 36840 ;; Return value:  Size  Location     Type
 36841 ;;                  1    wreg      void 
 36842 ;; Registers used:
 36843 ;;		wreg, status,2, status,0, cstack
 36844 ;; Tracked objects:
 36845 ;;		On entry : 0/0
 36846 ;;		On exit  : 0/0
 36847 ;;		Unchanged: 0/0
 36848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36853 ;;Total ram usage:        0 bytes
 36854 ;; Hardware stack levels used:    1
 36855 ;; Hardware stack levels required when called:    8
 36856 ;; This function calls:
 36857 ;;		_HALResetPinMakeInput
 36858 ;;		_HALResetPinMakeOutput
 36859 ;;		_HALResetPinOutputValue
 36860 ;;		_SystemBlockingWaitMs
 36861 ;; This function is called by:
 36862 ;;		_RADIO_Init
 36863 ;; This function uses a non-reentrant model
 36864 ;;
 36865                           
 36866                           	psect	text227
 36867  009874                     __ptext227:
 36868                           	opt callstack 0
 36869  009874                     _RADIO_Reset:
 36870                           	opt callstack 20
 36871                           
 36872                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 36873                           
 36874                           ;incstack = 0
 36875  009874  EC6E  F054         	call	_HALResetPinMakeOutput	;wreg free
 36876                           
 36877                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 36878  009878  0E00               	movlw	0
 36879  00987A  ECED  F052         	call	_HALResetPinOutputValue
 36880                           
 36881                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 36882  00987E  0E01               	movlw	1
 36883  009880  0100               	movlb	0	; () banked
 36884  009882  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36885  009884  0E00               	movlw	0
 36886  009886  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36887  009888  0E00               	movlw	0
 36888  00988A  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36889  00988C  0E00               	movlw	0
 36890  00988E  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36891  009890  EC28  F04F         	call	_SystemBlockingWaitMs	;wreg free
 36892                           
 36893                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 36894  009894  EC70  F054         	call	_HALResetPinMakeInput	;wreg free
 36895                           
 36896                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 36897  009898  0E0A               	movlw	10
 36898  00989A  0100               	movlb	0	; () banked
 36899  00989C  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36900  00989E  0E00               	movlw	0
 36901  0098A0  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36902  0098A2  0E00               	movlw	0
 36903  0098A4  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36904  0098A6  0E00               	movlw	0
 36905  0098A8  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36906  0098AA  EC28  F04F         	call	_SystemBlockingWaitMs	;wreg free
 36907                           
 36908                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 36909  0098AE  0E01               	movlw	1
 36910  0098B0  ECED  F052         	call	_HALResetPinOutputValue
 36911                           
 36912                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 36913  0098B4  EC6E  F054         	call	_HALResetPinMakeOutput	;wreg free
 36914  0098B8  0012               	return		;funcret
 36915  0098BA                     __end_of_RADIO_Reset:
 36916                           	opt callstack 0
 36917                           
 36918 ;; *************** function _SystemBlockingWaitMs *****************
 36919 ;; Defined at:
 36920 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36921 ;; Parameters:    Size  Location     Type
 36922 ;;  ms              4    0[BANK0 ] unsigned long 
 36923 ;; Auto vars:     Size  Location     Type
 36924 ;;		None
 36925 ;; Return value:  Size  Location     Type
 36926 ;;                  1    wreg      void 
 36927 ;; Registers used:
 36928 ;;		wreg, status,2, status,0
 36929 ;; Tracked objects:
 36930 ;;		On entry : 0/0
 36931 ;;		On exit  : 0/0
 36932 ;;		Unchanged: 0/0
 36933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36934 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36936 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36937 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36938 ;;Total ram usage:        5 bytes
 36939 ;; Hardware stack levels used:    1
 36940 ;; Hardware stack levels required when called:    7
 36941 ;; This function calls:
 36942 ;;		Nothing
 36943 ;; This function is called by:
 36944 ;;		_RADIO_WriteMode
 36945 ;;		_RADIO_Reset
 36946 ;;		_RADIO_ReadRandom
 36947 ;;		_RADIO_StopCW
 36948 ;; This function uses a non-reentrant model
 36949 ;;
 36950                           
 36951                           	psect	text228
 36952  009E50                     __ptext228:
 36953                           	opt callstack 0
 36954  009E50                     _SystemBlockingWaitMs:
 36955                           	opt callstack 18
 36956                           
 36957                           ;sw_timer.c: 147: while (ms > 0)
 36958                           
 36959                           ;incstack = 0
 36960  009E50  D00F               	goto	l17972
 36961  009E52                     l17968:
 36962                           
 36963                           ; BSR set to: 0
 36964                           ;sw_timer.c: 148: {;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 36965  009E52  0E06               	movlw	6
 36966  009E54  0100               	movlb	0	; () banked
 36967  009E56  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 36968  009E58  0E30               	movlw	48
 36969  009E5A                     u25257:
 36970  009E5A  2EE8               	decfsz	wreg,f,c
 36971  009E5C  D7FE               	bra	u25257
 36972  009E5E  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 36973  009E60  D7FC               	bra	u25257
 36974  009E62  F000               	nop	
 36975                           
 36976                           ;sw_timer.c: 150: ms--;
 36977  009E64  0100               	movlb	0	; () banked
 36978  009E66  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 36979  009E68  0E00               	movlw	0
 36980  009E6A  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 36981  009E6C  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 36982  009E6E  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 36983  009E70                     l17972:
 36984  009E70  0100               	movlb	0	; () banked
 36985  009E72  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 36986  009E74  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 36987  009E76  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 36988  009E78  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 36989  009E7A  B4D8               	btfsc	status,2,c
 36990  009E7C  0012               	return	
 36991  009E7E  D7E9               	goto	l17968
 36992  009E80                     __end_of_SystemBlockingWaitMs:
 36993                           	opt callstack 0
 36994                           
 36995 ;; *************** function _HALResetPinOutputValue *****************
 36996 ;; Defined at:
 36997 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36998 ;; Parameters:    Size  Location     Type
 36999 ;;  value           1    wreg     unsigned char 
 37000 ;; Auto vars:     Size  Location     Type
 37001 ;;  value           1    0[BANK0 ] unsigned char 
 37002 ;; Return value:  Size  Location     Type
 37003 ;;                  1    wreg      void 
 37004 ;; Registers used:
 37005 ;;		wreg, status,2, status,0
 37006 ;; Tracked objects:
 37007 ;;		On entry : 0/0
 37008 ;;		On exit  : 0/0
 37009 ;;		Unchanged: 0/0
 37010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37012 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37014 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37015 ;;Total ram usage:        1 bytes
 37016 ;; Hardware stack levels used:    1
 37017 ;; Hardware stack levels required when called:    7
 37018 ;; This function calls:
 37019 ;;		Nothing
 37020 ;; This function is called by:
 37021 ;;		_RADIO_Reset
 37022 ;; This function uses a non-reentrant model
 37023 ;;
 37024                           
 37025                           	psect	text229
 37026  00A5DA                     __ptext229:
 37027                           	opt callstack 0
 37028  00A5DA                     _HALResetPinOutputValue:
 37029                           	opt callstack 20
 37030                           
 37031                           ; BSR set to: 0
 37032                           ;incstack = 0
 37033                           ;HALResetPinOutputValue@value stored from wreg
 37034  00A5DA  0100               	movlb	0	; () banked
 37035  00A5DC  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 37036                           
 37037                           ;radio_driver_hal.c: 57: if (value == 0)
 37038  00A5DE  0100               	movlb	0	; () banked
 37039  00A5E0  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 37040  00A5E2  A4D8               	btfss	status,2,c
 37041  00A5E4  D002               	goto	l14728
 37042                           
 37043                           ; BSR set to: 0
 37044                           
 37045                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 37046  00A5E6  948B               	bcf	3979,2,c	;volatile
 37047  00A5E8  0012               	return	
 37048  00A5EA                     l14728:
 37049                           
 37050                           ; BSR set to: 0
 37051                           ;radio_driver_hal.c: 59: else if (value == 1)
 37052  00A5EA  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 37053  00A5EC  A4D8               	btfss	status,2,c
 37054  00A5EE  0012               	return	
 37055                           
 37056                           ; BSR set to: 0
 37057                           
 37058                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 37059  00A5F0  848B               	bsf	3979,2,c	;volatile
 37060                           
 37061                           ; BSR set to: 0
 37062  00A5F2  0012               	return		;funcret
 37063  00A5F4                     __end_of_HALResetPinOutputValue:
 37064                           	opt callstack 0
 37065                           
 37066 ;; *************** function _HALResetPinMakeOutput *****************
 37067 ;; Defined at:
 37068 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37069 ;; Parameters:    Size  Location     Type
 37070 ;;		None
 37071 ;; Auto vars:     Size  Location     Type
 37072 ;;		None
 37073 ;; Return value:  Size  Location     Type
 37074 ;;                  1    wreg      void 
 37075 ;; Registers used:
 37076 ;;		None
 37077 ;; Tracked objects:
 37078 ;;		On entry : 0/0
 37079 ;;		On exit  : 0/0
 37080 ;;		Unchanged: 0/0
 37081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37086 ;;Total ram usage:        0 bytes
 37087 ;; Hardware stack levels used:    1
 37088 ;; Hardware stack levels required when called:    7
 37089 ;; This function calls:
 37090 ;;		Nothing
 37091 ;; This function is called by:
 37092 ;;		_RADIO_Reset
 37093 ;; This function uses a non-reentrant model
 37094 ;;
 37095                           
 37096                           	psect	text230
 37097  00A8DC                     __ptext230:
 37098                           	opt callstack 0
 37099  00A8DC                     _HALResetPinMakeOutput:
 37100                           	opt callstack 20
 37101                           
 37102                           ; BSR set to: 0
 37103                           ;incstack = 0
 37104                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 37105  00A8DC  9494               	bcf	3988,2,c	;volatile
 37106  00A8DE  0012               	return		;funcret
 37107  00A8E0                     __end_of_HALResetPinMakeOutput:
 37108                           	opt callstack 0
 37109                           
 37110 ;; *************** function _HALResetPinMakeInput *****************
 37111 ;; Defined at:
 37112 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37113 ;; Parameters:    Size  Location     Type
 37114 ;;		None
 37115 ;; Auto vars:     Size  Location     Type
 37116 ;;		None
 37117 ;; Return value:  Size  Location     Type
 37118 ;;                  1    wreg      void 
 37119 ;; Registers used:
 37120 ;;		None
 37121 ;; Tracked objects:
 37122 ;;		On entry : 0/0
 37123 ;;		On exit  : 0/0
 37124 ;;		Unchanged: 0/0
 37125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37130 ;;Total ram usage:        0 bytes
 37131 ;; Hardware stack levels used:    1
 37132 ;; Hardware stack levels required when called:    7
 37133 ;; This function calls:
 37134 ;;		Nothing
 37135 ;; This function is called by:
 37136 ;;		_RADIO_Reset
 37137 ;; This function uses a non-reentrant model
 37138 ;;
 37139                           
 37140                           	psect	text231
 37141  00A8E0                     __ptext231:
 37142                           	opt callstack 0
 37143  00A8E0                     _HALResetPinMakeInput:
 37144                           	opt callstack 20
 37145                           
 37146                           ;incstack = 0
 37147                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 37148  00A8E0  8494               	bsf	3988,2,c	;volatile
 37149  00A8E2  0012               	return		;funcret
 37150  00A8E4                     __end_of_HALResetPinMakeInput:
 37151                           	opt callstack 0
 37152                           
 37153 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 37154 ;; Defined at:
 37155 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37156 ;; Parameters:    Size  Location     Type
 37157 ;;  period          2   62[BANK0 ] unsigned int 
 37158 ;; Auto vars:     Size  Location     Type
 37159 ;;  iCtr            1   72[BANK0 ] unsigned char 
 37160 ;; Return value:  Size  Location     Type
 37161 ;;                  1    wreg      void 
 37162 ;; Registers used:
 37163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37164 ;; Tracked objects:
 37165 ;;		On entry : 0/0
 37166 ;;		On exit  : 0/0
 37167 ;;		Unchanged: 0/0
 37168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37169 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37170 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37171 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37172 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37173 ;;Total ram usage:       11 bytes
 37174 ;; Hardware stack levels used:    1
 37175 ;; Hardware stack levels required when called:   11
 37176 ;; This function calls:
 37177 ;;		_SwTimerSetTimeout
 37178 ;;		_SwTimerStart
 37179 ;;		_SwTimerStop
 37180 ;;		___lldiv
 37181 ;;		___lmul
 37182 ;; This function is called by:
 37183 ;;		_LORAWAN_Reset
 37184 ;; This function uses a non-reentrant model
 37185 ;;
 37186                           
 37187                           	psect	text232
 37188  005176                     __ptext232:
 37189                           	opt callstack 0
 37190  005176                     _LORAWAN_LinkCheckConfigure:
 37191                           	opt callstack 18
 37192                           
 37193                           ;lorawan.c: 757: uint8_t iCtr;;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL
      +                          ;
 37194                           
 37195                           ;incstack = 0
 37196  005176  C09E  F092         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 37197  00517A  C09F  F093         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 37198  00517E  0100               	movlb	0	; () banked
 37199  005180  6B94               	clrf	(___lmul@multiplier+2)& (0+255),b
 37200  005182  6B95               	clrf	(___lmul@multiplier+3)& (0+255),b
 37201  005184  0EE8               	movlw	232
 37202  005186  6F96               	movwf	___lmul@multiplicand& (0+255),b
 37203  005188  0E03               	movlw	3
 37204  00518A  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 37205  00518C  0E00               	movlw	0
 37206  00518E  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 37207  005190  0E00               	movlw	0
 37208  005192  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 37209  005194  ECD6  F048         	call	___lmul	;wreg free
 37210  005198  C092  F2D1         	movff	?___lmul,_loRa+204
 37211  00519C  C093  F2D2         	movff	?___lmul+1,_loRa+205
 37212  0051A0  C094  F2D3         	movff	?___lmul+2,_loRa+206
 37213  0051A4  C095  F2D4         	movff	?___lmul+3,_loRa+207
 37214                           
 37215                           ;lorawan.c: 761: if (period == 0)
 37216  0051A8  0100               	movlb	0	; () banked
 37217  0051AA  519E               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 37218  0051AC  119F               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 37219  0051AE  A4D8               	btfss	status,2,c
 37220  0051B0  D02B               	goto	l1786
 37221                           
 37222                           ; BSR set to: 0
 37223                           ;lorawan.c: 762: {;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 37224  0051B2  0102               	movlb	2	; () banked
 37225  0051B4  51EC               	movf	(_loRa+231)& (0+255),w,b
 37226  0051B6  ECD5  F051         	call	_SwTimerStop
 37227                           
 37228                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 37229  0051BA  0102               	movlb	2	; () banked
 37230  0051BC  9508               	bcf	(_loRa+3)& (0+255),2,b
 37231                           
 37232                           ; BSR set to: 2
 37233                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 37234  0051BE  0E00               	movlw	0
 37235  0051C0  0100               	movlb	0	; () banked
 37236  0051C2  6FA8               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 37237  0051C4  D01A               	goto	l21466
 37238  0051C6                     l21458:
 37239                           
 37240                           ; BSR set to: 0
 37241                           ;lorawan.c: 766: {;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_C
      +                          ID)
 37242  0051C6  51A8               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37243  0051C8  0D02               	mullw	2
 37244  0051CA  0EAD               	movlw	low (_loRa+168)
 37245  0051CC  24F3               	addwf	prodl,w,c
 37246  0051CE  6ED9               	movwf	fsr2l,c
 37247  0051D0  0E02               	movlw	high (_loRa+168)
 37248  0051D2  20F4               	addwfc	prodh,w,c
 37249  0051D4  6EDA               	movwf	fsr2h,c
 37250  0051D6  0E02               	movlw	2
 37251  0051D8  18DE               	xorwf	postinc2,w,c
 37252  0051DA  A4D8               	btfss	status,2,c
 37253  0051DC  D00C               	goto	l21464
 37254                           
 37255                           ; BSR set to: 0
 37256                           ;lorawan.c: 768: {;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 37257  0051DE  51A8               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37258  0051E0  0D02               	mullw	2
 37259  0051E2  0EAD               	movlw	low (_loRa+168)
 37260  0051E4  24F3               	addwf	prodl,w,c
 37261  0051E6  6ED9               	movwf	fsr2l,c
 37262  0051E8  0E02               	movlw	high (_loRa+168)
 37263  0051EA  20F4               	addwfc	prodh,w,c
 37264  0051EC  6EDA               	movwf	fsr2h,c
 37265  0051EE  0EFF               	movlw	255
 37266  0051F0  6EDF               	movwf	indf2,c
 37267                           
 37268                           ; BSR set to: 0
 37269                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 37270  0051F2  0102               	movlb	2	; () banked
 37271  0051F4  07AC               	decf	(_loRa+167)& (0+255),f,b
 37272  0051F6                     l21464:
 37273  0051F6  0100               	movlb	0	; () banked
 37274  0051F8  2BA8               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 37275  0051FA                     l21466:
 37276                           
 37277                           ; BSR set to: 0
 37278  0051FA  0102               	movlb	2	; () banked
 37279  0051FC  51AC               	movf	(_loRa+167)& (0+255),w,b
 37280  0051FE  0100               	movlb	0	; () banked
 37281  005200  5DA8               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37282  005202  B0D8               	btfsc	status,0,c
 37283  005204  0012               	return	
 37284  005206  D7DF               	goto	l21458
 37285  005208                     l1786:
 37286                           
 37287                           ; BSR set to: 0
 37288                           ;lorawan.c: 776: else;lorawan.c: 777: {;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 37289  005208  0102               	movlb	2	; () banked
 37290  00520A  8508               	bsf	(_loRa+3)& (0+255),2,b
 37291                           
 37292                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 37293  00520C  A907               	btfss	(_loRa+2)& (0+255),4,b
 37294  00520E  0012               	return	
 37295                           
 37296                           ; BSR set to: 2
 37297                           ;lorawan.c: 782: {;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.perio
      +                          dForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125U
      +                          L ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 37298  005210  51D4               	movf	(_loRa+207)& (0+255),w,b
 37299  005212  E107               	bnz	u24330
 37300  005214  29D1               	incf	(_loRa+204)& (0+255),w,b
 37301  005216  0EFF               	movlw	255
 37302  005218  59D2               	subwfb	(_loRa+205)& (0+255),w,b
 37303  00521A  0E0F               	movlw	15
 37304  00521C  59D3               	subwfb	(_loRa+206)& (0+255),w,b
 37305  00521E  A0D8               	btfss	status,0,c
 37306  005220  D01D               	goto	l21472
 37307  005222                     u24330:
 37308                           
 37309                           ; BSR set to: 2
 37310  005222  C2D1  F060         	movff	_loRa+204,___lldiv@dividend
 37311  005226  C2D2  F061         	movff	_loRa+205,___lldiv@dividend+1
 37312  00522A  C2D3  F062         	movff	_loRa+206,___lldiv@dividend+2
 37313  00522E  C2D4  F063         	movff	_loRa+207,___lldiv@dividend+3
 37314  005232  0E7D               	movlw	125
 37315  005234  0100               	movlb	0	; () banked
 37316  005236  6F64               	movwf	___lldiv@divisor& (0+255),b
 37317  005238  0E00               	movlw	0
 37318  00523A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37319  00523C  0E00               	movlw	0
 37320  00523E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37321  005240  0E00               	movlw	0
 37322  005242  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37323  005244  EC96  F042         	call	___lldiv	;wreg free
 37324  005248  0E0C               	movlw	12
 37325  00524A                     u24345:
 37326  00524A  90D8               	bcf	status,0,c
 37327  00524C  0100               	movlb	0	; () banked
 37328  00524E  3760               	rlcf	?___lldiv& (0+255),f,b
 37329  005250  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 37330  005252  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 37331  005254  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 37332  005256  2EE8               	decfsz	wreg,f,c
 37333  005258  D7F8               	goto	u24345
 37334  00525A  D023               	goto	L37
 37335  00525C                     l21472:
 37336                           
 37337                           ; BSR set to: 2
 37338  00525C  C2D1  F0A0         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 37339  005260  C2D2  F0A1         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 37340  005264  C2D3  F0A2         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 37341  005268  C2D4  F0A3         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 37342  00526C  0E0C               	movlw	12
 37343  00526E                     u24355:
 37344  00526E  90D8               	bcf	status,0,c
 37345  005270  0100               	movlb	0	; () banked
 37346  005272  37A0               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 37347  005274  37A1               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 37348  005276  37A2               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 37349  005278  37A3               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 37350  00527A  2EE8               	decfsz	wreg,f,c
 37351  00527C  D7F8               	goto	u24355
 37352  00527E  C0A0  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 37353  005282  C0A1  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 37354  005286  C0A2  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 37355  00528A  C0A3  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 37356  00528E  0E7D               	movlw	125
 37357  005290  6F64               	movwf	___lldiv@divisor& (0+255),b
 37358  005292  0E00               	movlw	0
 37359  005294  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37360  005296  0E00               	movlw	0
 37361  005298  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37362  00529A  0E00               	movlw	0
 37363  00529C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37364  00529E  EC96  F042         	call	___lldiv	;wreg free
 37365  0052A2                     L37:
 37366  0052A2  C060  F0A4         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2499
 37367  0052A6  C061  F0A5         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2499+1
 37368  0052AA  C062  F0A6         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2499+2
 37369  0052AE  C063  F0A7         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2499+3
 37370  0052B2  C0A4  F06D         	movff	_LORAWAN_LinkCheckConfigure$2499,SwTimerSetTimeout@timeout
 37371  0052B6  C0A5  F06E         	movff	_LORAWAN_LinkCheckConfigure$2499+1,SwTimerSetTimeout@timeout+1
 37372  0052BA  C0A6  F06F         	movff	_LORAWAN_LinkCheckConfigure$2499+2,SwTimerSetTimeout@timeout+2
 37373  0052BE  C0A7  F070         	movff	_LORAWAN_LinkCheckConfigure$2499+3,SwTimerSetTimeout@timeout+3
 37374  0052C2  0102               	movlb	2	; () banked
 37375  0052C4  51EC               	movf	(_loRa+231)& (0+255),w,b
 37376  0052C6  EC7F  F04C         	call	_SwTimerSetTimeout
 37377                           
 37378                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 37379  0052CA  0102               	movlb	2	; () banked
 37380  0052CC  51EC               	movf	(_loRa+231)& (0+255),w,b
 37381  0052CE  EC73  F040         	call	_SwTimerStart
 37382  0052D2  0012               	return		;funcret
 37383  0052D4                     __end_of_LORAWAN_LinkCheckConfigure:
 37384                           	opt callstack 0
 37385                           
 37386 ;; *************** function ___lmul *****************
 37387 ;; Defined at:
 37388 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 37389 ;; Parameters:    Size  Location     Type
 37390 ;;  multiplier      4   50[BANK0 ] unsigned long 
 37391 ;;  multiplicand    4   54[BANK0 ] unsigned long 
 37392 ;; Auto vars:     Size  Location     Type
 37393 ;;  product         4   58[BANK0 ] unsigned long 
 37394 ;; Return value:  Size  Location     Type
 37395 ;;                  4   50[BANK0 ] unsigned long 
 37396 ;; Registers used:
 37397 ;;		wreg, status,2, status,0
 37398 ;; Tracked objects:
 37399 ;;		On entry : 0/0
 37400 ;;		On exit  : 0/0
 37401 ;;		Unchanged: 0/0
 37402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37403 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37404 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37406 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37407 ;;Total ram usage:       12 bytes
 37408 ;; Hardware stack levels used:    1
 37409 ;; Hardware stack levels required when called:    7
 37410 ;; This function calls:
 37411 ;;		Nothing
 37412 ;; This function is called by:
 37413 ;;		_RADIO_WriteConfiguration
 37414 ;;		_RADIO_TxDone
 37415 ;;		_RADIO_FSKPacketSent
 37416 ;;		_LORAWAN_TxDone
 37417 ;;		_ExecuteNewChannel
 37418 ;;		_ExecuteRxParamSetupReq
 37419 ;;		_UpdateCfList
 37420 ;;		_LORAWAN_LinkCheckConfigure
 37421 ;;		_rand
 37422 ;;		_LORAWAN_Pause
 37423 ;; This function uses a non-reentrant model
 37424 ;;
 37425                           
 37426                           	psect	text233
 37427  0091AC                     __ptext233:
 37428                           	opt callstack 0
 37429  0091AC                     ___lmul:
 37430                           	opt callstack 16
 37431                           
 37432                           ;incstack = 0
 37433  0091AC  0E00               	movlw	0
 37434  0091AE  0100               	movlb	0	; () banked
 37435  0091B0  6F9A               	movwf	___lmul@product& (0+255),b
 37436  0091B2  0E00               	movlw	0
 37437  0091B4  6F9B               	movwf	(___lmul@product+1)& (0+255),b
 37438  0091B6  0E00               	movlw	0
 37439  0091B8  6F9C               	movwf	(___lmul@product+2)& (0+255),b
 37440  0091BA  0E00               	movlw	0
 37441  0091BC  6F9D               	movwf	(___lmul@product+3)& (0+255),b
 37442  0091BE                     l18082:
 37443                           
 37444                           ; BSR set to: 0
 37445  0091BE  A192               	btfss	___lmul@multiplier& (0+255),0,b
 37446  0091C0  D008               	goto	l18086
 37447                           
 37448                           ; BSR set to: 0
 37449  0091C2  5196               	movf	___lmul@multiplicand& (0+255),w,b
 37450  0091C4  279A               	addwf	___lmul@product& (0+255),f,b
 37451  0091C6  5197               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 37452  0091C8  239B               	addwfc	(___lmul@product+1)& (0+255),f,b
 37453  0091CA  5198               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 37454  0091CC  239C               	addwfc	(___lmul@product+2)& (0+255),f,b
 37455  0091CE  5199               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 37456  0091D0  239D               	addwfc	(___lmul@product+3)& (0+255),f,b
 37457  0091D2                     l18086:
 37458                           
 37459                           ; BSR set to: 0
 37460  0091D2  90D8               	bcf	status,0,c
 37461  0091D4  3796               	rlcf	___lmul@multiplicand& (0+255),f,b
 37462  0091D6  3797               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 37463  0091D8  3798               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 37464  0091DA  3799               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 37465                           
 37466                           ; BSR set to: 0
 37467  0091DC  90D8               	bcf	status,0,c
 37468  0091DE  3395               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 37469  0091E0  3394               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 37470  0091E2  3393               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 37471  0091E4  3392               	rrcf	___lmul@multiplier& (0+255),f,b
 37472  0091E6  5192               	movf	___lmul@multiplier& (0+255),w,b
 37473  0091E8  1193               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 37474  0091EA  1194               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 37475  0091EC  1195               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 37476  0091EE  A4D8               	btfss	status,2,c
 37477  0091F0  D7E6               	goto	l18082
 37478                           
 37479                           ; BSR set to: 0
 37480  0091F2  C09A  F092         	movff	___lmul@product,?___lmul
 37481  0091F6  C09B  F093         	movff	___lmul@product+1,?___lmul+1
 37482  0091FA  C09C  F094         	movff	___lmul@product+2,?___lmul+2
 37483  0091FE  C09D  F095         	movff	___lmul@product+3,?___lmul+3
 37484                           
 37485                           ; BSR set to: 0
 37486  009202  0012               	return		;funcret
 37487  009204                     __end_of___lmul:
 37488                           	opt callstack 0
 37489                           
 37490 ;; *************** function ___lldiv *****************
 37491 ;; Defined at:
 37492 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 37493 ;; Parameters:    Size  Location     Type
 37494 ;;  dividend        4    0[BANK0 ] unsigned long 
 37495 ;;  divisor         4    4[BANK0 ] unsigned long 
 37496 ;; Auto vars:     Size  Location     Type
 37497 ;;  quotient        4    8[BANK0 ] unsigned long 
 37498 ;;  counter         1   12[BANK0 ] unsigned char 
 37499 ;; Return value:  Size  Location     Type
 37500 ;;                  4    0[BANK0 ] unsigned long 
 37501 ;; Registers used:
 37502 ;;		wreg, status,2, status,0
 37503 ;; Tracked objects:
 37504 ;;		On entry : 0/0
 37505 ;;		On exit  : 0/0
 37506 ;;		Unchanged: 0/0
 37507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37508 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37509 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37511 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37512 ;;Total ram usage:       13 bytes
 37513 ;; Hardware stack levels used:    1
 37514 ;; Hardware stack levels required when called:    7
 37515 ;; This function calls:
 37516 ;;		Nothing
 37517 ;; This function is called by:
 37518 ;;		_RADIO_WriteFrequency
 37519 ;;		_RADIO_WriteFSKFrequencyDeviation
 37520 ;;		_RADIO_WriteFSKBitRate
 37521 ;;		_RADIO_Transmit
 37522 ;;		_RADIO_ReceiveStart
 37523 ;;		_LORAWAN_TxDone
 37524 ;;		_LORAWAN_RxTimeout
 37525 ;;		_StartReTxTimer
 37526 ;;		_DutyCycleCallback
 37527 ;;		_LORAWAN_LinkCheckConfigure
 37528 ;;		_LORAWAN_LinkCheckCallback
 37529 ;;		_UpdateRetransmissionAckTimeoutState
 37530 ;;		_UpdateJoinSuccessState
 37531 ;; This function uses a non-reentrant model
 37532 ;;
 37533                           
 37534                           	psect	text234
 37535  00852C                     __ptext234:
 37536                           	opt callstack 0
 37537  00852C                     ___lldiv:
 37538                           	opt callstack 19
 37539                           
 37540                           ; BSR set to: 0
 37541                           ;incstack = 0
 37542  00852C  0E00               	movlw	0
 37543  00852E  0100               	movlb	0	; () banked
 37544  008530  6F68               	movwf	___lldiv@quotient& (0+255),b
 37545  008532  0E00               	movlw	0
 37546  008534  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 37547  008536  0E00               	movlw	0
 37548  008538  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 37549  00853A  0E00               	movlw	0
 37550  00853C  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 37551                           
 37552                           ; BSR set to: 0
 37553  00853E  5164               	movf	___lldiv@divisor& (0+255),w,b
 37554  008540  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 37555  008542  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 37556  008544  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 37557  008546  B4D8               	btfsc	status,2,c
 37558  008548  D02A               	goto	l3570
 37559                           
 37560                           ; BSR set to: 0
 37561  00854A  0E01               	movlw	1
 37562  00854C  6F6C               	movwf	___lldiv@counter& (0+255),b
 37563  00854E  D006               	goto	l18098
 37564  008550                     l18096:
 37565                           
 37566                           ; BSR set to: 0
 37567  008550  90D8               	bcf	status,0,c
 37568  008552  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 37569  008554  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 37570  008556  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 37571  008558  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 37572  00855A  2B6C               	incf	___lldiv@counter& (0+255),f,b
 37573  00855C                     l18098:
 37574                           
 37575                           ; BSR set to: 0
 37576  00855C  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 37577  00855E  D7F8               	goto	l18096
 37578  008560                     u18930:
 37579                           
 37580                           ; BSR set to: 0
 37581  008560  90D8               	bcf	status,0,c
 37582  008562  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 37583  008564  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 37584  008566  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 37585  008568  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 37586                           
 37587                           ; BSR set to: 0
 37588  00856A  5164               	movf	___lldiv@divisor& (0+255),w,b
 37589  00856C  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 37590  00856E  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37591  008570  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 37592  008572  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37593  008574  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 37594  008576  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37595  008578  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 37596  00857A  A0D8               	btfss	status,0,c
 37597  00857C  D009               	goto	l18108
 37598                           
 37599                           ; BSR set to: 0
 37600  00857E  5164               	movf	___lldiv@divisor& (0+255),w,b
 37601  008580  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 37602  008582  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37603  008584  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 37604  008586  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37605  008588  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 37606  00858A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37607  00858C  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 37608                           
 37609                           ; BSR set to: 0
 37610  00858E  8168               	bsf	___lldiv@quotient& (0+255),0,b
 37611  008590                     l18108:
 37612                           
 37613                           ; BSR set to: 0
 37614  008590  90D8               	bcf	status,0,c
 37615  008592  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 37616  008594  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 37617  008596  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 37618  008598  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 37619                           
 37620                           ; BSR set to: 0
 37621  00859A  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 37622  00859C  D7E1               	goto	u18930
 37623  00859E                     l3570:
 37624                           
 37625                           ; BSR set to: 0
 37626  00859E  C068  F060         	movff	___lldiv@quotient,?___lldiv
 37627  0085A2  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 37628  0085A6  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 37629  0085AA  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 37630                           
 37631                           ; BSR set to: 0
 37632  0085AE  0012               	return		;funcret
 37633  0085B0                     __end_of___lldiv:
 37634                           	opt callstack 0
 37635                           
 37636 ;; *************** function _SwTimerStop *****************
 37637 ;; Defined at:
 37638 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37639 ;; Parameters:    Size  Location     Type
 37640 ;;  timerId         1    wreg     unsigned char 
 37641 ;; Auto vars:     Size  Location     Type
 37642 ;;  timerId         1    0[BANK0 ] unsigned char 
 37643 ;; Return value:  Size  Location     Type
 37644 ;;                  1    wreg      void 
 37645 ;; Registers used:
 37646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37647 ;; Tracked objects:
 37648 ;;		On entry : 0/0
 37649 ;;		On exit  : 0/0
 37650 ;;		Unchanged: 0/0
 37651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37655 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37656 ;;Total ram usage:        1 bytes
 37657 ;; Hardware stack levels used:    1
 37658 ;; Hardware stack levels required when called:    7
 37659 ;; This function calls:
 37660 ;;		Nothing
 37661 ;; This function is called by:
 37662 ;;		_RADIO_Init
 37663 ;;		_RADIO_Transmit
 37664 ;;		_RADIO_RxDone
 37665 ;;		_RADIO_FSKPayloadReady
 37666 ;;		_RADIO_RxTimeout
 37667 ;;		_RADIO_TxDone
 37668 ;;		_RADIO_FSKPacketSent
 37669 ;;		_RADIO_RxFSKTimeout
 37670 ;;		_LORAWAN_TxDone
 37671 ;;		_StopAllSoftwareTimers
 37672 ;;		_LORAWAN_LinkCheckConfigure
 37673 ;;		_LORAWAN_RxDone
 37674 ;; This function uses a non-reentrant model
 37675 ;;
 37676                           
 37677                           	psect	text235
 37678  00A3AA                     __ptext235:
 37679                           	opt callstack 0
 37680  00A3AA                     _SwTimerStop:
 37681                           	opt callstack 19
 37682                           
 37683                           ; BSR set to: 0
 37684                           ;incstack = 0
 37685                           ;SwTimerStop@timerId stored from wreg
 37686  00A3AA  0100               	movlb	0	; () banked
 37687  00A3AC  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 37688                           
 37689                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 37690  00A3AE  9EF2               	bcf	4082,7,c	;volatile
 37691                           
 37692                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 37693  00A3B0  0100               	movlb	0	; () banked
 37694  00A3B2  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 37695  00A3B4  0D08               	mullw	8
 37696  00A3B6  0E04               	movlw	low (_swTimers+4)
 37697  00A3B8  24F3               	addwf	prodl,w,c
 37698  00A3BA  6ED9               	movwf	fsr2l,c
 37699  00A3BC  0E03               	movlw	high (_swTimers+4)
 37700  00A3BE  20F4               	addwfc	prodh,w,c
 37701  00A3C0  6EDA               	movwf	fsr2h,c
 37702  00A3C2  0E00               	movlw	0
 37703  00A3C4  6EDF               	movwf	indf2,c
 37704                           
 37705                           ; BSR set to: 0
 37706                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 37707  00A3C6  8EF2               	bsf	4082,7,c	;volatile
 37708                           
 37709                           ; BSR set to: 0
 37710  00A3C8  0012               	return		;funcret
 37711  00A3CA                     __end_of_SwTimerStop:
 37712                           	opt callstack 0
 37713                           
 37714 ;; *************** function _SwTimerStart *****************
 37715 ;; Defined at:
 37716 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37717 ;; Parameters:    Size  Location     Type
 37718 ;;  timerId         1    wreg     unsigned char 
 37719 ;; Auto vars:     Size  Location     Type
 37720 ;;  timerId         1   49[BANK0 ] unsigned char 
 37721 ;;  ticksRemaini    4   45[BANK0 ] unsigned long 
 37722 ;; Return value:  Size  Location     Type
 37723 ;;                  1    wreg      void 
 37724 ;; Registers used:
 37725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37726 ;; Tracked objects:
 37727 ;;		On entry : 0/0
 37728 ;;		On exit  : 0/0
 37729 ;;		Unchanged: 0/0
 37730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37732 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37733 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37734 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37735 ;;Total ram usage:        9 bytes
 37736 ;; Hardware stack levels used:    1
 37737 ;; Hardware stack levels required when called:   10
 37738 ;; This function calls:
 37739 ;;		_SwTimersInterrupt
 37740 ;;		_TMR_OverrideRemaining
 37741 ;; This function is called by:
 37742 ;;		_RADIO_Transmit
 37743 ;;		_RADIO_ReceiveStart
 37744 ;;		_LORAWAN_TxDone
 37745 ;;		_LORAWAN_RxTimeout
 37746 ;;		_StartReTxTimer
 37747 ;;		_DutyCycleCallback
 37748 ;;		_LORAWAN_Join
 37749 ;;		_LORAWAN_LinkCheckConfigure
 37750 ;;		_LORAWAN_LinkCheckCallback
 37751 ;;		_UpdateRetransmissionAckTimeoutState
 37752 ;;		_UpdateJoinSuccessState
 37753 ;; This function uses a non-reentrant model
 37754 ;;
 37755                           
 37756                           	psect	text236
 37757  0080E6                     __ptext236:
 37758                           	opt callstack 0
 37759  0080E6                     _SwTimerStart:
 37760                           	opt callstack 16
 37761                           
 37762                           ; BSR set to: 0
 37763                           ;incstack = 0
 37764                           ;SwTimerStart@timerId stored from wreg
 37765  0080E6  0100               	movlb	0	; () banked
 37766  0080E8  6F91               	movwf	SwTimerStart@timerId& (0+255),b
 37767                           
 37768                           ;sw_timer.c: 220: uint32_t ticksRemaining;;sw_timer.c: 222: (INTCONbits.GIE = 0);
 37769  0080EA  9EF2               	bcf	4082,7,c	;volatile
 37770                           
 37771                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 37772  0080EC  EC1F  F035         	call	_SwTimersInterrupt	;wreg free
 37773  0080F0  C078  F08D         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 37774  0080F4  C079  F08E         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 37775  0080F8  C07A  F08F         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 37776  0080FC  C07B  F090         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 37777                           
 37778                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 37779  008100  0100               	movlb	0	; () banked
 37780  008102  5191               	movf	SwTimerStart@timerId& (0+255),w,b
 37781  008104  0D08               	mullw	8
 37782  008106  0E00               	movlw	low _swTimers
 37783  008108  24F3               	addwf	prodl,w,c
 37784  00810A  6ED9               	movwf	fsr2l,c
 37785  00810C  0E03               	movlw	high _swTimers
 37786  00810E  20F4               	addwfc	prodh,w,c
 37787  008110  6EDA               	movwf	fsr2h,c
 37788  008112  518D               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 37789  008114  5CDE               	subwf	postinc2,w,c
 37790  008116  518E               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 37791  008118  58DE               	subwfb	postinc2,w,c
 37792  00811A  518F               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 37793  00811C  58DE               	subwfb	postinc2,w,c
 37794  00811E  5190               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 37795  008120  58DE               	subwfb	postinc2,w,c
 37796  008122  B0D8               	btfsc	status,0,c
 37797  008124  D010               	goto	l18484
 37798                           
 37799                           ; BSR set to: 0
 37800                           ;sw_timer.c: 225: {;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 37801  008126  5191               	movf	SwTimerStart@timerId& (0+255),w,b
 37802  008128  0D08               	mullw	8
 37803  00812A  0E00               	movlw	low _swTimers
 37804  00812C  24F3               	addwf	prodl,w,c
 37805  00812E  6ED9               	movwf	fsr2l,c
 37806  008130  0E03               	movlw	high _swTimers
 37807  008132  20F4               	addwfc	prodh,w,c
 37808  008134  6EDA               	movwf	fsr2h,c
 37809  008136  CFDE F08D          	movff	postinc2,SwTimerStart@ticksRemaining
 37810  00813A  CFDE F08E          	movff	postinc2,SwTimerStart@ticksRemaining+1
 37811  00813E  CFDE F08F          	movff	postinc2,SwTimerStart@ticksRemaining+2
 37812  008142  CFDE F090          	movff	postinc2,SwTimerStart@ticksRemaining+3
 37813  008146                     l18484:
 37814                           
 37815                           ; BSR set to: 0
 37816                           ;sw_timer.c: 227: };sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 37817  008146  C08D  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 37818  00814A  C08E  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 37819  00814E  C08F  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 37820  008152  C090  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 37821  008156  EC1A  F043         	call	_TMR_OverrideRemaining	;wreg free
 37822                           
 37823                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 37824  00815A  0100               	movlb	0	; () banked
 37825  00815C  5191               	movf	SwTimerStart@timerId& (0+255),w,b
 37826  00815E  0D08               	mullw	8
 37827  008160  0E04               	movlw	low (_swTimers+4)
 37828  008162  24F3               	addwf	prodl,w,c
 37829  008164  6ED9               	movwf	fsr2l,c
 37830  008166  0E03               	movlw	high (_swTimers+4)
 37831  008168  20F4               	addwfc	prodh,w,c
 37832  00816A  6EDA               	movwf	fsr2h,c
 37833  00816C  0E01               	movlw	1
 37834  00816E  6EDF               	movwf	indf2,c
 37835                           
 37836                           ; BSR set to: 0
 37837                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 37838  008170  8EF2               	bsf	4082,7,c	;volatile
 37839                           
 37840                           ; BSR set to: 0
 37841  008172  0012               	return		;funcret
 37842  008174                     __end_of_SwTimerStart:
 37843                           	opt callstack 0
 37844                           
 37845 ;; *************** function _TMR_OverrideRemaining *****************
 37846 ;; Defined at:
 37847 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37848 ;; Parameters:    Size  Location     Type
 37849 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 37850 ;; Auto vars:     Size  Location     Type
 37851 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 37852 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 37853 ;; Return value:  Size  Location     Type
 37854 ;;                  1    wreg      void 
 37855 ;; Registers used:
 37856 ;;		wreg, status,2, status,0, cstack
 37857 ;; Tracked objects:
 37858 ;;		On entry : 0/0
 37859 ;;		On exit  : 0/0
 37860 ;;		Unchanged: 0/0
 37861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37862 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37863 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37865 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37866 ;;Total ram usage:       10 bytes
 37867 ;; Hardware stack levels used:    1
 37868 ;; Hardware stack levels required when called:    9
 37869 ;; This function calls:
 37870 ;;		_TMR_SwapTimer
 37871 ;; This function is called by:
 37872 ;;		_SwTimerStart
 37873 ;; This function uses a non-reentrant model
 37874 ;;
 37875                           
 37876                           	psect	text237
 37877  008634                     __ptext237:
 37878                           	opt callstack 0
 37879  008634                     _TMR_OverrideRemaining:
 37880                           	opt callstack 16
 37881                           
 37882                           ;sw_timer.c: 67: uint16_t tmrVal;;sw_timer.c: 68: uint16_t oldReloadVal;;sw_timer.c: 71:
      +                           if (ticksToScheduledInterrupt > 10)
 37883                           
 37884                           ; BSR set to: 0
 37885                           ;incstack = 0
 37886  008634  5055               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37887  008636  1054               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37888  008638  1053               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37889  00863A  E104               	bnz	u19020
 37890  00863C  0E0B               	movlw	11
 37891  00863E  5C52               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 37892  008640  A0D8               	btfss	status,0,c
 37893  008642  0012               	return	
 37894  008644                     u19020:
 37895                           
 37896                           ;sw_timer.c: 72: {;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 37897  008644  5052               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 37898  008646  0100               	movlb	0	; () banked
 37899  008648  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 37900  00864A  5053               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37901  00864C  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 37902  00864E  5054               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37903  008650  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 37904  008652  5055               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37905  008654  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 37906  008656  B0D8               	btfsc	status,0,c
 37907  008658  0012               	return	
 37908                           
 37909                           ; BSR set to: 0
 37910                           ;sw_timer.c: 74: {;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 37911  00865A  C06A  F052         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 37912  00865E  C06B  F053         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 37913  008662  C06C  F054         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 37914  008666  C06D  F055         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 37915                           
 37916                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 37917  00866A  C03E  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 37918  00866E  C03F  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 37919                           
 37920                           ; BSR set to: 0
 37921                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 37922  008672  516A               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 37923  008674  0800               	sublw	0
 37924  008676  6E3E               	movwf	_reloadVal,c	;volatile
 37925  008678  516B               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 37926  00867A  A0D8               	btfss	status,0,c
 37927  00867C  2AE8               	incf	wreg,f,c
 37928  00867E  0800               	sublw	0
 37929  008680  6E3F               	movwf	_reloadVal+1,c	;volatile
 37930                           
 37931                           ; BSR set to: 0
 37932                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 37933  008682  C03E  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 37934  008686  C03F  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 37935  00868A  ECC2  F04C         	call	_TMR_SwapTimer	;wreg free
 37936  00868E  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 37937  008692  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 37938                           
 37939                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 37940  008696  0100               	movlb	0	; () banked
 37941  008698  5172               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 37942  00869A  5D70               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 37943  00869C  6F6E               	movwf	??_TMR_OverrideRemaining& (0+255),b
 37944  00869E  5173               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 37945  0086A0  5971               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 37946  0086A2  6F6F               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 37947  0086A4  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 37948  0086A6  2636               	addwf	_ticksAdded,f,c	;volatile
 37949  0086A8  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 37950  0086AA  2237               	addwfc	_ticksAdded+1,f,c	;volatile
 37951  0086AC  0E00               	movlw	0
 37952  0086AE  2238               	addwfc	_ticksAdded+2,f,c	;volatile
 37953  0086B0  0E00               	movlw	0
 37954  0086B2  2239               	addwfc	_ticksAdded+3,f,c	;volatile
 37955  0086B4  0012               	return		;funcret
 37956  0086B6                     __end_of_TMR_OverrideRemaining:
 37957                           	opt callstack 0
 37958                           
 37959 ;; *************** function _TMR_SwapTimer *****************
 37960 ;; Defined at:
 37961 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37962 ;; Parameters:    Size  Location     Type
 37963 ;;  timerVal        2    8[BANK0 ] unsigned int 
 37964 ;; Auto vars:     Size  Location     Type
 37965 ;;		None
 37966 ;; Return value:  Size  Location     Type
 37967 ;;                  2    8[BANK0 ] unsigned int 
 37968 ;; Registers used:
 37969 ;;		wreg, status,2, status,0, cstack
 37970 ;; Tracked objects:
 37971 ;;		On entry : 0/0
 37972 ;;		On exit  : 0/0
 37973 ;;		Unchanged: 0/0
 37974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37975 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37978 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37979 ;;Total ram usage:        2 bytes
 37980 ;; Hardware stack levels used:    1
 37981 ;; Hardware stack levels required when called:    8
 37982 ;; This function calls:
 37983 ;;		_TMR1_ReadTimer
 37984 ;;		_TMR1_WriteTimer
 37985 ;; This function is called by:
 37986 ;;		_TMR_OverrideRemaining
 37987 ;; This function uses a non-reentrant model
 37988 ;;
 37989                           
 37990                           	psect	text238
 37991  009984                     __ptext238:
 37992                           	opt callstack 0
 37993  009984                     _TMR_SwapTimer:
 37994                           	opt callstack 16
 37995                           
 37996                           ;sw_timer.c: 114: static uint16_t oldVal;;sw_timer.c: 115: static uint16_t retVal;;sw_ti
      +                          mer.c: 117: oldVal = TMR1_ReadTimer();
 37997                           
 37998                           ;incstack = 0
 37999  009984  EC84  F051         	call	_TMR1_ReadTimer	;wreg free
 38000  009988  C060  F03A         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38001  00998C  C061  F03B         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38002  009990                     l17934:
 38003  009990  EC84  F051         	call	_TMR1_ReadTimer	;wreg free
 38004  009994  503A               	movf	TMR_SwapTimer@oldVal,w,c
 38005  009996  0100               	movlb	0	; () banked
 38006  009998  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 38007  00999A  E104               	bnz	u18780
 38008  00999C  503B               	movf	TMR_SwapTimer@oldVal+1,w,c
 38009  00999E  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 38010  0099A0  B4D8               	btfsc	status,2,c
 38011  0099A2  D7F6               	goto	l17934
 38012  0099A4                     u18780:
 38013                           
 38014                           ; BSR set to: 0
 38015                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38016  0099A4  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 38017  0099A8  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 38018  0099AC  ECE5  F051         	call	_TMR1_WriteTimer	;wreg free
 38019                           
 38020                           ;sw_timer.c: 128: oldVal++;
 38021  0099B0  4A3A               	infsnz	TMR_SwapTimer@oldVal,f,c
 38022  0099B2  2A3B               	incf	TMR_SwapTimer@oldVal+1,f,c
 38023                           
 38024                           ;sw_timer.c: 130: retVal = oldVal;
 38025  0099B4  C03A  F11E         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38026  0099B8  C03B  F11F         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38027                           
 38028                           ;sw_timer.c: 132: return retVal;
 38029  0099BC  C11E  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 38030  0099C0  C11F  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 38031  0099C4  0012               	return		;funcret
 38032  0099C6                     __end_of_TMR_SwapTimer:
 38033                           	opt callstack 0
 38034                           
 38035 ;; *************** function _TMR1_WriteTimer *****************
 38036 ;; Defined at:
 38037 ;;		line 124 in file "mcc_generated_files/tmr1.c"
 38038 ;; Parameters:    Size  Location     Type
 38039 ;;  timerVal        2    0[BANK0 ] unsigned int 
 38040 ;; Auto vars:     Size  Location     Type
 38041 ;;		None
 38042 ;; Return value:  Size  Location     Type
 38043 ;;                  1    wreg      void 
 38044 ;; Registers used:
 38045 ;;		wreg, status,2
 38046 ;; Tracked objects:
 38047 ;;		On entry : 0/0
 38048 ;;		On exit  : 0/0
 38049 ;;		Unchanged: 0/0
 38050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38051 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38054 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38055 ;;Total ram usage:        2 bytes
 38056 ;; Hardware stack levels used:    1
 38057 ;; Hardware stack levels required when called:    7
 38058 ;; This function calls:
 38059 ;;		Nothing
 38060 ;; This function is called by:
 38061 ;;		_TMR_SwapTimer
 38062 ;;		_TMR1_Reload
 38063 ;; This function uses a non-reentrant model
 38064 ;;
 38065                           
 38066                           	psect	text239
 38067  00A3CA                     __ptext239:
 38068                           	opt callstack 0
 38069  00A3CA                     _TMR1_WriteTimer:
 38070                           	opt callstack 16
 38071                           
 38072                           ;tmr1.c: 126: if (T1CONbits.T1SYNC == 1)
 38073                           
 38074                           ;incstack = 0
 38075  00A3CA  A4CD               	btfss	4045,2,c	;volatile
 38076  00A3CC  D008               	goto	l17850
 38077                           
 38078                           ;tmr1.c: 127: {;tmr1.c: 129: T1CONbits.TMR1ON = 0;
 38079  00A3CE  90CD               	bcf	4045,0,c	;volatile
 38080                           
 38081                           ;tmr1.c: 132: TMR1H = (timerVal >> 8);
 38082  00A3D0  0100               	movlb	0	; () banked
 38083  00A3D2  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38084  00A3D4  6ECF               	movwf	4047,c	;volatile
 38085                           
 38086                           ; BSR set to: 0
 38087                           ;tmr1.c: 133: TMR1L = (uint8_t) timerVal;
 38088  00A3D6  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38089                           
 38090                           ; BSR set to: 0
 38091                           ;tmr1.c: 136: T1CONbits.TMR1ON =1;
 38092  00A3DA  80CD               	bsf	4045,0,c	;volatile
 38093                           
 38094                           ;tmr1.c: 137: }
 38095  00A3DC  0012               	return	
 38096  00A3DE                     l17850:
 38097                           
 38098                           ;tmr1.c: 138: else;tmr1.c: 139: {;tmr1.c: 141: TMR1H = (timerVal >> 8);
 38099  00A3DE  0100               	movlb	0	; () banked
 38100  00A3E0  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38101  00A3E2  6ECF               	movwf	4047,c	;volatile
 38102                           
 38103                           ; BSR set to: 0
 38104                           ;tmr1.c: 142: TMR1L = (uint8_t) timerVal;
 38105  00A3E4  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38106                           
 38107                           ; BSR set to: 0
 38108  00A3E8  0012               	return		;funcret
 38109  00A3EA                     __end_of_TMR1_WriteTimer:
 38110                           	opt callstack 0
 38111                           
 38112 ;; *************** function _SwTimersInterrupt *****************
 38113 ;; Defined at:
 38114 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38115 ;; Parameters:    Size  Location     Type
 38116 ;;		None
 38117 ;; Auto vars:     Size  Location     Type
 38118 ;;  ticksToNextT    4   36[BANK0 ] unsigned long 
 38119 ;;  timeElapsed     4   32[BANK0 ] unsigned long 
 38120 ;;  i               1   40[BANK0 ] unsigned char 
 38121 ;; Return value:  Size  Location     Type
 38122 ;;                  4   24[BANK0 ] unsigned long 
 38123 ;; Registers used:
 38124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38125 ;; Tracked objects:
 38126 ;;		On entry : 0/0
 38127 ;;		On exit  : 0/0
 38128 ;;		Unchanged: 0/0
 38129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38131 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38132 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38133 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38134 ;;Total ram usage:       17 bytes
 38135 ;; Hardware stack levels used:    1
 38136 ;; Hardware stack levels required when called:    9
 38137 ;; This function calls:
 38138 ;;		_TMR_GetDeltaTime
 38139 ;; This function is called by:
 38140 ;;		_SwTimerReadValue
 38141 ;;		_SwTimerStart
 38142 ;;		_SwTimersCanSleep
 38143 ;; This function uses a non-reentrant model
 38144 ;;
 38145                           
 38146                           	psect	text240
 38147  006A3E                     __ptext240:
 38148                           	opt callstack 0
 38149  006A3E                     _SwTimersInterrupt:
 38150                           	opt callstack 16
 38151                           
 38152                           ;sw_timer.c: 289: uint8_t i;;sw_timer.c: 290: uint32_t timeElapsed;;sw_timer.c: 291: uin
      +                          t32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38153                           
 38154                           ; BSR set to: 0
 38155                           ;incstack = 0
 38156  006A3E  0100               	movlb	0	; () banked
 38157  006A40  6984               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 38158  006A42  6985               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 38159  006A44  6986               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 38160  006A46  6987               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 38161                           
 38162                           ; BSR set to: 0
 38163                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38164  006A48  EC77  F031         	call	_TMR_GetDeltaTime	;wreg free
 38165  006A4C  C068  F080         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 38166  006A50  C069  F081         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 38167  006A54  C06A  F082         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 38168  006A58  C06B  F083         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 38169                           
 38170                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38171  006A5C  0E00               	movlw	0
 38172  006A5E  0100               	movlb	0	; () banked
 38173  006A60  6F88               	movwf	SwTimersInterrupt@i& (0+255),b
 38174  006A62  D05D               	goto	l18178
 38175  006A64                     l18166:
 38176                           
 38177                           ; BSR set to: 0
 38178                           ;sw_timer.c: 298: {;sw_timer.c: 301: if (swTimers[i].running == 1)
 38179  006A64  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38180  006A66  0D08               	mullw	8
 38181  006A68  0E04               	movlw	low (_swTimers+4)
 38182  006A6A  24F3               	addwf	prodl,w,c
 38183  006A6C  6ED9               	movwf	fsr2l,c
 38184  006A6E  0E03               	movlw	high (_swTimers+4)
 38185  006A70  20F4               	addwfc	prodh,w,c
 38186  006A72  6EDA               	movwf	fsr2h,c
 38187  006A74  04DE               	decf	postinc2,w,c
 38188  006A76  A4D8               	btfss	status,2,c
 38189  006A78  D051               	goto	l18176
 38190                           
 38191                           ; BSR set to: 0
 38192                           ;sw_timer.c: 302: {;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38193  006A7A  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38194  006A7C  0D08               	mullw	8
 38195  006A7E  0E00               	movlw	low _swTimers
 38196  006A80  24F3               	addwf	prodl,w,c
 38197  006A82  6ED9               	movwf	fsr2l,c
 38198  006A84  0E03               	movlw	high _swTimers
 38199  006A86  20F4               	addwfc	prodh,w,c
 38200  006A88  6EDA               	movwf	fsr2h,c
 38201  006A8A  50DE               	movf	postinc2,w,c
 38202  006A8C  5D80               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38203  006A8E  50DE               	movf	postinc2,w,c
 38204  006A90  5981               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38205  006A92  50DE               	movf	postinc2,w,c
 38206  006A94  5982               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38207  006A96  50DE               	movf	postinc2,w,c
 38208  006A98  5983               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38209  006A9A  A0D8               	btfss	status,0,c
 38210  006A9C  D00D               	goto	l18172
 38211                           
 38212                           ; BSR set to: 0
 38213                           ;sw_timer.c: 304: {;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38214  006A9E  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38215  006AA0  0D08               	mullw	8
 38216  006AA2  0E00               	movlw	low _swTimers
 38217  006AA4  24F3               	addwf	prodl,w,c
 38218  006AA6  6ED9               	movwf	fsr2l,c
 38219  006AA8  0E03               	movlw	high _swTimers
 38220  006AAA  20F4               	addwfc	prodh,w,c
 38221  006AAC  6EDA               	movwf	fsr2h,c
 38222  006AAE  6ADE               	clrf	postinc2,c
 38223  006AB0  6ADE               	clrf	postinc2,c
 38224  006AB2  6ADE               	clrf	postinc2,c
 38225  006AB4  6ADD               	clrf	postdec2,c
 38226                           
 38227                           ;sw_timer.c: 306: }
 38228  006AB6  D032               	goto	l18176
 38229  006AB8                     l18172:
 38230                           
 38231                           ; BSR set to: 0
 38232                           ;sw_timer.c: 307: else;sw_timer.c: 308: {;sw_timer.c: 309: swTimers[i].ticksRemaining -=
      +                           timeElapsed;
 38233  006AB8  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38234  006ABA  0D08               	mullw	8
 38235  006ABC  0E00               	movlw	low _swTimers
 38236  006ABE  24F3               	addwf	prodl,w,c
 38237  006AC0  6ED9               	movwf	fsr2l,c
 38238  006AC2  0E03               	movlw	high _swTimers
 38239  006AC4  20F4               	addwfc	prodh,w,c
 38240  006AC6  6EDA               	movwf	fsr2h,c
 38241  006AC8  5180               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38242  006ACA  5EDE               	subwf	postinc2,f,c
 38243  006ACC  5181               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38244  006ACE  5ADE               	subwfb	postinc2,f,c
 38245  006AD0  5182               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38246  006AD2  5ADE               	subwfb	postinc2,f,c
 38247  006AD4  5183               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38248  006AD6  5ADE               	subwfb	postinc2,f,c
 38249                           
 38250                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38251  006AD8  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38252  006ADA  0D08               	mullw	8
 38253  006ADC  0E00               	movlw	low _swTimers
 38254  006ADE  24F3               	addwf	prodl,w,c
 38255  006AE0  6ED9               	movwf	fsr2l,c
 38256  006AE2  0E03               	movlw	high _swTimers
 38257  006AE4  20F4               	addwfc	prodh,w,c
 38258  006AE6  6EDA               	movwf	fsr2h,c
 38259  006AE8  5184               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 38260  006AEA  5CDE               	subwf	postinc2,w,c
 38261  006AEC  5185               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 38262  006AEE  58DE               	subwfb	postinc2,w,c
 38263  006AF0  5186               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 38264  006AF2  58DE               	subwfb	postinc2,w,c
 38265  006AF4  5187               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 38266  006AF6  58DE               	subwfb	postinc2,w,c
 38267  006AF8  B0D8               	btfsc	status,0,c
 38268  006AFA  D010               	goto	l18176
 38269                           
 38270                           ; BSR set to: 0
 38271                           ;sw_timer.c: 313: {;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38272  006AFC  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38273  006AFE  0D08               	mullw	8
 38274  006B00  0E00               	movlw	low _swTimers
 38275  006B02  24F3               	addwf	prodl,w,c
 38276  006B04  6ED9               	movwf	fsr2l,c
 38277  006B06  0E03               	movlw	high _swTimers
 38278  006B08  20F4               	addwfc	prodh,w,c
 38279  006B0A  6EDA               	movwf	fsr2h,c
 38280  006B0C  CFDE F084          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 38281  006B10  CFDE F085          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 38282  006B14  CFDE F086          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 38283  006B18  CFDE F087          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 38284  006B1C                     l18176:
 38285                           
 38286                           ; BSR set to: 0
 38287  006B1C  2B88               	incf	SwTimersInterrupt@i& (0+255),f,b
 38288  006B1E                     l18178:
 38289                           
 38290                           ; BSR set to: 0
 38291  006B1E  0101               	movlb	1	; () banked
 38292  006B20  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38293  006B22  0100               	movlb	0	; () banked
 38294  006B24  5D88               	subwf	SwTimersInterrupt@i& (0+255),w,b
 38295  006B26  A0D8               	btfss	status,0,c
 38296  006B28  D79D               	goto	l18166
 38297                           
 38298                           ; BSR set to: 0
 38299                           ;sw_timer.c: 315: };sw_timer.c: 316: };sw_timer.c: 317: };sw_timer.c: 318: };sw_timer.c:
      +                           320: return ticksToNextTimerEvent;
 38300  006B2A  C084  F078         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 38301  006B2E  C085  F079         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 38302  006B32  C086  F07A         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 38303  006B36  C087  F07B         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 38304                           
 38305                           ; BSR set to: 0
 38306  006B3A  0012               	return		;funcret
 38307  006B3C                     __end_of_SwTimersInterrupt:
 38308                           	opt callstack 0
 38309                           
 38310 ;; *************** function _TMR_GetDeltaTime *****************
 38311 ;; Defined at:
 38312 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38313 ;; Parameters:    Size  Location     Type
 38314 ;;		None
 38315 ;; Auto vars:     Size  Location     Type
 38316 ;;		None
 38317 ;; Return value:  Size  Location     Type
 38318 ;;                  4    8[BANK0 ] unsigned long 
 38319 ;; Registers used:
 38320 ;;		wreg, status,2, status,0, cstack
 38321 ;; Tracked objects:
 38322 ;;		On entry : 0/0
 38323 ;;		On exit  : 0/0
 38324 ;;		Unchanged: 0/0
 38325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38326 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38328 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38329 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38330 ;;Total ram usage:       16 bytes
 38331 ;; Hardware stack levels used:    1
 38332 ;; Hardware stack levels required when called:    8
 38333 ;; This function calls:
 38334 ;;		_TMR1_ReadTimer
 38335 ;; This function is called by:
 38336 ;;		_SwTimersInterrupt
 38337 ;; This function uses a non-reentrant model
 38338 ;;
 38339                           
 38340                           	psect	text241
 38341  0062EE                     __ptext241:
 38342                           	opt callstack 0
 38343  0062EE                     _TMR_GetDeltaTime:
 38344                           	opt callstack 16
 38345                           
 38346                           ;sw_timer.c: 90: static uint32_t retVal;;sw_timer.c: 91: static uint16_t tmrVal;;sw_time
      +                          r.c: 93: tmrVal = TMR1_ReadTimer();
 38347                           
 38348                           ; BSR set to: 0
 38349                           ;incstack = 0
 38350  0062EE  EC84  F051         	call	_TMR1_ReadTimer	;wreg free
 38351  0062F2  C060  F03C         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38352  0062F6  C061  F03D         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38353                           
 38354                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38355  0062FA  0444               	decf	_timerOverflow,w,c	;volatile
 38356  0062FC  A4D8               	btfss	status,2,c
 38357  0062FE  D04C               	goto	l17960
 38358                           
 38359                           ;sw_timer.c: 96: {;sw_timer.c: 97: timerOverflow = 0;
 38360  006300  0E00               	movlw	0
 38361  006302  6E44               	movwf	_timerOverflow,c	;volatile
 38362                           
 38363                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38364  006304  503E               	movf	_reloadVal,w,c	;volatile
 38365  006306  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38366  006308  0100               	movlb	0	; () banked
 38367  00630A  6F6C               	movwf	??_TMR_GetDeltaTime& (0+255),b
 38368  00630C  503F               	movf	_reloadVal+1,w,c	;volatile
 38369  00630E  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38370  006310  6F6D               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 38371  006312  6B6E               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 38372  006314  A0D8               	btfss	status,0,c
 38373  006316  076E               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38374  006318  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38375  00631A  6F6F               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 38376  00631C  5032               	movf	_ticksAccounted,w,c	;volatile
 38377  00631E  5D6C               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 38378  006320  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 38379  006322  5033               	movf	_ticksAccounted+1,w,c	;volatile
 38380  006324  596D               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38381  006326  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 38382  006328  5034               	movf	_ticksAccounted+2,w,c	;volatile
 38383  00632A  596E               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38384  00632C  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38385  00632E  5035               	movf	_ticksAccounted+3,w,c	;volatile
 38386  006330  596F               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38387  006332  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38388  006334  5036               	movf	_ticksAdded,w,c	;volatile
 38389  006336  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38390  006338  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 38391  00633A  5037               	movf	_ticksAdded+1,w,c	;volatile
 38392  00633C  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38393  00633E  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 38394  006340  5038               	movf	_ticksAdded+2,w,c	;volatile
 38395  006342  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38396  006344  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 38397  006346  5039               	movf	_ticksAdded+3,w,c	;volatile
 38398  006348  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38399  00634A  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 38400  00634C  0E00               	movlw	0
 38401  00634E  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 38402  006350  0101               	movlb	1	; () banked
 38403  006352  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38404  006354  0E00               	movlw	0
 38405  006356  0100               	movlb	0	; () banked
 38406  006358  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 38407  00635A  0101               	movlb	1	; () banked
 38408  00635C  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38409  00635E  0E01               	movlw	1
 38410  006360  0100               	movlb	0	; () banked
 38411  006362  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 38412  006364  0101               	movlb	1	; () banked
 38413  006366  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38414  006368  0E00               	movlw	0
 38415  00636A  0100               	movlb	0	; () banked
 38416  00636C  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 38417  00636E  0101               	movlb	1	; () banked
 38418  006370  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38419                           
 38420                           ; BSR set to: 1
 38421                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38422  006372  C03C  F032         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38423  006376  C03D  F033         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38424  00637A  6A34               	clrf	_ticksAccounted+2,c	;volatile
 38425  00637C  6A35               	clrf	_ticksAccounted+3,c	;volatile
 38426                           
 38427                           ; BSR set to: 1
 38428                           ;sw_timer.c: 100: ticksAdded = 0;
 38429  00637E  0E00               	movlw	0
 38430  006380  6E36               	movwf	_ticksAdded,c	;volatile
 38431  006382  0E00               	movlw	0
 38432  006384  6E37               	movwf	_ticksAdded+1,c	;volatile
 38433  006386  0E00               	movlw	0
 38434  006388  6E38               	movwf	_ticksAdded+2,c	;volatile
 38435  00638A  0E00               	movlw	0
 38436  00638C  6E39               	movwf	_ticksAdded+3,c	;volatile
 38437                           
 38438                           ; BSR set to: 1
 38439                           ;sw_timer.c: 101: reloadVal = 0;
 38440  00638E  0E00               	movlw	0
 38441  006390  6E3F               	movwf	_reloadVal+1,c	;volatile
 38442  006392  0E00               	movlw	0
 38443  006394  6E3E               	movwf	_reloadVal,c	;volatile
 38444                           
 38445                           ;sw_timer.c: 102: }
 38446  006396  D030               	goto	l17962
 38447  006398                     l17960:
 38448                           
 38449                           ;sw_timer.c: 103: else;sw_timer.c: 104: {;sw_timer.c: 105: retVal = tmrVal - reloadVal -
      +                           ticksAccounted + ticksAdded;
 38450  006398  503E               	movf	_reloadVal,w,c	;volatile
 38451  00639A  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38452  00639C  0100               	movlb	0	; () banked
 38453  00639E  6F6C               	movwf	??_TMR_GetDeltaTime& (0+255),b
 38454  0063A0  503F               	movf	_reloadVal+1,w,c	;volatile
 38455  0063A2  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38456  0063A4  6F6D               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 38457  0063A6  6B6E               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 38458  0063A8  6B6F               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 38459  0063AA  5032               	movf	_ticksAccounted,w,c	;volatile
 38460  0063AC  5D6C               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 38461  0063AE  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 38462  0063B0  5033               	movf	_ticksAccounted+1,w,c	;volatile
 38463  0063B2  596D               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38464  0063B4  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 38465  0063B6  5034               	movf	_ticksAccounted+2,w,c	;volatile
 38466  0063B8  596E               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38467  0063BA  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38468  0063BC  5035               	movf	_ticksAccounted+3,w,c	;volatile
 38469  0063BE  596F               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38470  0063C0  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38471  0063C2  5036               	movf	_ticksAdded,w,c	;volatile
 38472  0063C4  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38473  0063C6  0101               	movlb	1	; () banked
 38474  0063C8  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38475  0063CA  5037               	movf	_ticksAdded+1,w,c	;volatile
 38476  0063CC  0100               	movlb	0	; () banked
 38477  0063CE  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38478  0063D0  0101               	movlb	1	; () banked
 38479  0063D2  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38480  0063D4  5038               	movf	_ticksAdded+2,w,c	;volatile
 38481  0063D6  0100               	movlb	0	; () banked
 38482  0063D8  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38483  0063DA  0101               	movlb	1	; () banked
 38484  0063DC  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38485  0063DE  5039               	movf	_ticksAdded+3,w,c	;volatile
 38486  0063E0  0100               	movlb	0	; () banked
 38487  0063E2  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38488  0063E4  0101               	movlb	1	; () banked
 38489  0063E6  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38490                           
 38491                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38492  0063E8  5112               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 38493  0063EA  2632               	addwf	_ticksAccounted,f,c	;volatile
 38494  0063EC  5113               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 38495  0063EE  2233               	addwfc	_ticksAccounted+1,f,c	;volatile
 38496  0063F0  5114               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 38497  0063F2  2234               	addwfc	_ticksAccounted+2,f,c	;volatile
 38498  0063F4  5115               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 38499  0063F6  2235               	addwfc	_ticksAccounted+3,f,c	;volatile
 38500  0063F8                     l17962:
 38501                           
 38502                           ; BSR set to: 1
 38503                           ;sw_timer.c: 107: };sw_timer.c: 109: return retVal;
 38504  0063F8  C112  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 38505  0063FC  C113  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 38506  006400  C114  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 38507  006404  C115  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 38508                           
 38509                           ; BSR set to: 1
 38510  006408  0012               	return		;funcret
 38511  00640A                     __end_of_TMR_GetDeltaTime:
 38512                           	opt callstack 0
 38513                           
 38514 ;; *************** function _TMR1_ReadTimer *****************
 38515 ;; Defined at:
 38516 ;;		line 108 in file "mcc_generated_files/tmr1.c"
 38517 ;; Parameters:    Size  Location     Type
 38518 ;;		None
 38519 ;; Auto vars:     Size  Location     Type
 38520 ;;  readVal         2    4[BANK0 ] unsigned int 
 38521 ;;  readValLow      1    7[BANK0 ] unsigned char 
 38522 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 38523 ;; Return value:  Size  Location     Type
 38524 ;;                  2    0[BANK0 ] unsigned int 
 38525 ;; Registers used:
 38526 ;;		wreg, status,2
 38527 ;; Tracked objects:
 38528 ;;		On entry : 0/0
 38529 ;;		On exit  : 0/0
 38530 ;;		Unchanged: 0/0
 38531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38532 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38533 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38534 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38535 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38536 ;;Total ram usage:        8 bytes
 38537 ;; Hardware stack levels used:    1
 38538 ;; Hardware stack levels required when called:    7
 38539 ;; This function calls:
 38540 ;;		Nothing
 38541 ;; This function is called by:
 38542 ;;		_TMR_GetDeltaTime
 38543 ;;		_TMR_SwapTimer
 38544 ;; This function uses a non-reentrant model
 38545 ;;
 38546                           
 38547                           	psect	text242
 38548  00A308                     __ptext242:
 38549                           	opt callstack 0
 38550  00A308                     _TMR1_ReadTimer:
 38551                           	opt callstack 16
 38552                           
 38553                           ;tmr1.c: 110: uint16_t readVal;;tmr1.c: 111: uint8_t readValHigh;;tmr1.c: 112: uint8_t r
      +                          eadValLow;;tmr1.c: 114: T1CONbits.T1RD16 = 1;
 38554                           
 38555                           ; BSR set to: 1
 38556                           ;incstack = 0
 38557  00A308  82CD               	bsf	4045,1,c	;volatile
 38558                           
 38559                           ;tmr1.c: 116: readValLow = TMR1L;
 38560  00A30A  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 38561                           
 38562                           ;tmr1.c: 117: readValHigh = TMR1H;
 38563  00A30E  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 38564                           
 38565                           ;tmr1.c: 119: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 38566  00A312  0100               	movlb	0	; () banked
 38567  00A314  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 38568  00A316  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 38569  00A318  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 38570  00A31A  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 38571  00A31C  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 38572                           
 38573                           ; BSR set to: 0
 38574                           ;tmr1.c: 121: return readVal;
 38575  00A320  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 38576  00A324  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 38577                           
 38578                           ; BSR set to: 0
 38579  00A328  0012               	return		;funcret
 38580  00A32A                     __end_of_TMR1_ReadTimer:
 38581                           	opt callstack 0
 38582                           
 38583 ;; *************** function _SwTimerSetTimeout *****************
 38584 ;; Defined at:
 38585 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38586 ;; Parameters:    Size  Location     Type
 38587 ;;  timerId         1    wreg     unsigned char 
 38588 ;;  timeout         4   13[BANK0 ] unsigned long 
 38589 ;; Auto vars:     Size  Location     Type
 38590 ;;  timerId         1   21[BANK0 ] unsigned char 
 38591 ;; Return value:  Size  Location     Type
 38592 ;;                  1    wreg      void 
 38593 ;; Registers used:
 38594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38595 ;; Tracked objects:
 38596 ;;		On entry : 0/0
 38597 ;;		On exit  : 0/0
 38598 ;;		Unchanged: 0/0
 38599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38600 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38602 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38603 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38604 ;;Total ram usage:        9 bytes
 38605 ;; Hardware stack levels used:    1
 38606 ;; Hardware stack levels required when called:    7
 38607 ;; This function calls:
 38608 ;;		Nothing
 38609 ;; This function is called by:
 38610 ;;		_RADIO_Transmit
 38611 ;;		_RADIO_ReceiveStart
 38612 ;;		_LORAWAN_TxDone
 38613 ;;		_LORAWAN_RxTimeout
 38614 ;;		_StartReTxTimer
 38615 ;;		_DutyCycleCallback
 38616 ;;		_LORAWAN_Join
 38617 ;;		_LORAWAN_LinkCheckConfigure
 38618 ;;		_LORAWAN_LinkCheckCallback
 38619 ;;		_UpdateRetransmissionAckTimeoutState
 38620 ;;		_UpdateJoinSuccessState
 38621 ;; This function uses a non-reentrant model
 38622 ;;
 38623                           
 38624                           	psect	text243
 38625  0098FE                     __ptext243:
 38626                           	opt callstack 0
 38627  0098FE                     _SwTimerSetTimeout:
 38628                           	opt callstack 19
 38629                           
 38630                           ; BSR set to: 0
 38631                           ;incstack = 0
 38632                           ;SwTimerSetTimeout@timerId stored from wreg
 38633  0098FE  0100               	movlb	0	; () banked
 38634  009900  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 38635                           
 38636                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 38637  009902  9EF2               	bcf	4082,7,c	;volatile
 38638                           
 38639                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 38640  009904  0EE0               	movlw	224
 38641  009906  0100               	movlb	0	; () banked
 38642  009908  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 38643  00990A  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 38644  00990C  0EFF               	movlw	255
 38645  00990E  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 38646  009910  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 38647  009912  0EFF               	movlw	255
 38648  009914  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 38649  009916  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 38650  009918  0EFF               	movlw	255
 38651  00991A  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 38652  00991C  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 38653  00991E  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 38654  009920  0D08               	mullw	8
 38655  009922  0E00               	movlw	low _swTimers
 38656  009924  24F3               	addwf	prodl,w,c
 38657  009926  6ED9               	movwf	fsr2l,c
 38658  009928  0E03               	movlw	high _swTimers
 38659  00992A  20F4               	addwfc	prodh,w,c
 38660  00992C  6EDA               	movwf	fsr2h,c
 38661  00992E  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 38662  009932  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 38663  009936  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 38664  00993A  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 38665                           
 38666                           ; BSR set to: 0
 38667                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 38668  00993E  8EF2               	bsf	4082,7,c	;volatile
 38669                           
 38670                           ; BSR set to: 0
 38671  009940  0012               	return		;funcret
 38672  009942                     __end_of_SwTimerSetTimeout:
 38673                           	opt callstack 0
 38674                           
 38675 ;; *************** function _InitDefault868Channels *****************
 38676 ;; Defined at:
 38677 ;;		line 980 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38678 ;; Parameters:    Size  Location     Type
 38679 ;;		None
 38680 ;; Auto vars:     Size  Location     Type
 38681 ;;  i               1   11[BANK0 ] unsigned char 
 38682 ;; Return value:  Size  Location     Type
 38683 ;;                  1    wreg      void 
 38684 ;; Registers used:
 38685 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38686 ;; Tracked objects:
 38687 ;;		On entry : 0/0
 38688 ;;		On exit  : 0/0
 38689 ;;		Unchanged: 0/0
 38690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38694 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38695 ;;Total ram usage:        1 bytes
 38696 ;; Hardware stack levels used:    1
 38697 ;; Hardware stack levels required when called:    8
 38698 ;; This function calls:
 38699 ;;		_memcpy
 38700 ;;		_memset
 38701 ;; This function is called by:
 38702 ;;		_LORAWAN_Reset
 38703 ;; This function uses a non-reentrant model
 38704 ;;
 38705                           
 38706                           	psect	text244
 38707  00898E                     __ptext244:
 38708                           	opt callstack 0
 38709  00898E                     _InitDefault868Channels:
 38710                           	opt callstack 21
 38711                           
 38712                           ;lorawan_eu.c: 982: uint8_t i;;lorawan_eu.c: 984: memset (Channels, 0, sizeof(Channels) 
      +                          );
 38713                           
 38714                           ; BSR set to: 0
 38715                           ;incstack = 0
 38716  00898E  0E14               	movlw	low _Channels
 38717  008990  0100               	movlb	0	; () banked
 38718  008992  6F60               	movwf	memset@p1& (0+255),b
 38719  008994  0E04               	movlw	high _Channels
 38720  008996  6F61               	movwf	(memset@p1+1)& (0+255),b
 38721  008998  0E00               	movlw	0
 38722  00899A  6F63               	movwf	(memset@c+1)& (0+255),b
 38723  00899C  0E00               	movlw	0
 38724  00899E  6F62               	movwf	memset@c& (0+255),b
 38725  0089A0  0E00               	movlw	0
 38726  0089A2  6F65               	movwf	(memset@n+1)& (0+255),b
 38727  0089A4  0EE0               	movlw	224
 38728  0089A6  6F64               	movwf	memset@n& (0+255),b
 38729  0089A8  ECCA  F04F         	call	_memset	;wreg free
 38730                           
 38731                           ;lorawan_eu.c: 985: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 38732  0089AC  0E14               	movlw	low _Channels
 38733  0089AE  0100               	movlb	0	; () banked
 38734  0089B0  6F60               	movwf	memcpy@d1& (0+255),b
 38735  0089B2  0E04               	movlw	high _Channels
 38736  0089B4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38737  0089B6  0E48               	movlw	low _DefaultChannels868
 38738  0089B8  6F62               	movwf	memcpy@s1& (0+255),b
 38739  0089BA  0EFF               	movlw	high _DefaultChannels868
 38740  0089BC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38741  0089BE  0E00               	movlw	0
 38742  0089C0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38743  0089C2  0E38               	movlw	56
 38744  0089C4  6F64               	movwf	memcpy@n& (0+255),b
 38745  0089C6  ECEC  F047         	call	_memcpy	;wreg free
 38746                           
 38747                           ;lorawan_eu.c: 986: for (i = 3; i < 16; i++)
 38748  0089CA  0E03               	movlw	3
 38749  0089CC  0100               	movlb	0	; () banked
 38750  0089CE  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 38751  0089D0                     l21426:
 38752                           
 38753                           ; BSR set to: 0
 38754                           ;lorawan_eu.c: 987: {;lorawan_eu.c: 990: Channels[i].dutyCycle = (65535U);
 38755  0089D0  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 38756  0089D2  0D0E               	mullw	14
 38757  0089D4  0E1A               	movlw	low (_Channels+6)
 38758  0089D6  24F3               	addwf	prodl,w,c
 38759  0089D8  6ED9               	movwf	fsr2l,c
 38760  0089DA  0E04               	movlw	high (_Channels+6)
 38761  0089DC  20F4               	addwfc	prodh,w,c
 38762  0089DE  6EDA               	movwf	fsr2h,c
 38763  0089E0  0EFF               	movlw	255
 38764  0089E2  6EDE               	movwf	postinc2,c
 38765  0089E4  0EFF               	movlw	255
 38766  0089E6  6EDD               	movwf	postdec2,c
 38767                           
 38768                           ;lorawan_eu.c: 991: Channels[i].dataRange.value = (255);
 38769  0089E8  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 38770  0089EA  0D0E               	mullw	14
 38771  0089EC  0E19               	movlw	low (_Channels+5)
 38772  0089EE  24F3               	addwf	prodl,w,c
 38773  0089F0  6ED9               	movwf	fsr2l,c
 38774  0089F2  0E04               	movlw	high (_Channels+5)
 38775  0089F4  20F4               	addwfc	prodh,w,c
 38776  0089F6  6EDA               	movwf	fsr2h,c
 38777  0089F8  0EFF               	movlw	255
 38778  0089FA  6EDF               	movwf	indf2,c
 38779                           
 38780                           ; BSR set to: 0
 38781  0089FC  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 38782                           
 38783                           ; BSR set to: 0
 38784  0089FE  0E0F               	movlw	15
 38785  008A00  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 38786  008A02  D7E6               	goto	l21426
 38787  008A04  0012               	return	
 38788  008A06                     __end_of_InitDefault868Channels:
 38789                           	opt callstack 0
 38790                           
 38791 ;; *************** function _InitDefault433Channels *****************
 38792 ;; Defined at:
 38793 ;;		line 995 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38794 ;; Parameters:    Size  Location     Type
 38795 ;;		None
 38796 ;; Auto vars:     Size  Location     Type
 38797 ;;  i               1   11[BANK0 ] unsigned char 
 38798 ;; Return value:  Size  Location     Type
 38799 ;;                  1    wreg      void 
 38800 ;; Registers used:
 38801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38802 ;; Tracked objects:
 38803 ;;		On entry : 0/0
 38804 ;;		On exit  : 0/0
 38805 ;;		Unchanged: 0/0
 38806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38808 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38810 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38811 ;;Total ram usage:        1 bytes
 38812 ;; Hardware stack levels used:    1
 38813 ;; Hardware stack levels required when called:    8
 38814 ;; This function calls:
 38815 ;;		_memcpy
 38816 ;;		_memset
 38817 ;; This function is called by:
 38818 ;;		_LORAWAN_Reset
 38819 ;; This function uses a non-reentrant model
 38820 ;;
 38821                           
 38822                           	psect	text245
 38823  008A06                     __ptext245:
 38824                           	opt callstack 0
 38825  008A06                     _InitDefault433Channels:
 38826                           	opt callstack 21
 38827                           
 38828                           ;lorawan_eu.c: 997: uint8_t i;;lorawan_eu.c: 999: memset (Channels, 0, sizeof(Channels) 
      +                          );
 38829                           
 38830                           ; BSR set to: 0
 38831                           ;incstack = 0
 38832  008A06  0E14               	movlw	low _Channels
 38833  008A08  0100               	movlb	0	; () banked
 38834  008A0A  6F60               	movwf	memset@p1& (0+255),b
 38835  008A0C  0E04               	movlw	high _Channels
 38836  008A0E  6F61               	movwf	(memset@p1+1)& (0+255),b
 38837  008A10  0E00               	movlw	0
 38838  008A12  6F63               	movwf	(memset@c+1)& (0+255),b
 38839  008A14  0E00               	movlw	0
 38840  008A16  6F62               	movwf	memset@c& (0+255),b
 38841  008A18  0E00               	movlw	0
 38842  008A1A  6F65               	movwf	(memset@n+1)& (0+255),b
 38843  008A1C  0EE0               	movlw	224
 38844  008A1E  6F64               	movwf	memset@n& (0+255),b
 38845  008A20  ECCA  F04F         	call	_memset	;wreg free
 38846                           
 38847                           ;lorawan_eu.c: 1000: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 38848  008A24  0E14               	movlw	low _Channels
 38849  008A26  0100               	movlb	0	; () banked
 38850  008A28  6F60               	movwf	memcpy@d1& (0+255),b
 38851  008A2A  0E04               	movlw	high _Channels
 38852  008A2C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38853  008A2E  0E80               	movlw	low _DefaultChannels433
 38854  008A30  6F62               	movwf	memcpy@s1& (0+255),b
 38855  008A32  0EFF               	movlw	high _DefaultChannels433
 38856  008A34  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38857  008A36  0E00               	movlw	0
 38858  008A38  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38859  008A3A  0E2A               	movlw	42
 38860  008A3C  6F64               	movwf	memcpy@n& (0+255),b
 38861  008A3E  ECEC  F047         	call	_memcpy	;wreg free
 38862                           
 38863                           ;lorawan_eu.c: 1001: for (i = 3; i < 16; i++)
 38864  008A42  0E03               	movlw	3
 38865  008A44  0100               	movlb	0	; () banked
 38866  008A46  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 38867  008A48                     l21442:
 38868                           
 38869                           ; BSR set to: 0
 38870                           ;lorawan_eu.c: 1002: {;lorawan_eu.c: 1005: Channels[i].dutyCycle = (65535U);
 38871  008A48  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 38872  008A4A  0D0E               	mullw	14
 38873  008A4C  0E1A               	movlw	low (_Channels+6)
 38874  008A4E  24F3               	addwf	prodl,w,c
 38875  008A50  6ED9               	movwf	fsr2l,c
 38876  008A52  0E04               	movlw	high (_Channels+6)
 38877  008A54  20F4               	addwfc	prodh,w,c
 38878  008A56  6EDA               	movwf	fsr2h,c
 38879  008A58  0EFF               	movlw	255
 38880  008A5A  6EDE               	movwf	postinc2,c
 38881  008A5C  0EFF               	movlw	255
 38882  008A5E  6EDD               	movwf	postdec2,c
 38883                           
 38884                           ;lorawan_eu.c: 1006: Channels[i].dataRange.value = (255);
 38885  008A60  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 38886  008A62  0D0E               	mullw	14
 38887  008A64  0E19               	movlw	low (_Channels+5)
 38888  008A66  24F3               	addwf	prodl,w,c
 38889  008A68  6ED9               	movwf	fsr2l,c
 38890  008A6A  0E04               	movlw	high (_Channels+5)
 38891  008A6C  20F4               	addwfc	prodh,w,c
 38892  008A6E  6EDA               	movwf	fsr2h,c
 38893  008A70  0EFF               	movlw	255
 38894  008A72  6EDF               	movwf	indf2,c
 38895                           
 38896                           ; BSR set to: 0
 38897  008A74  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 38898                           
 38899                           ; BSR set to: 0
 38900  008A76  0E0F               	movlw	15
 38901  008A78  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 38902  008A7A  D7E6               	goto	l21442
 38903  008A7C  0012               	return	
 38904  008A7E                     __end_of_InitDefault433Channels:
 38905                           	opt callstack 0
 38906                           
 38907 ;; *************** function _memset *****************
 38908 ;; Defined at:
 38909 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
 38910 ;; Parameters:    Size  Location     Type
 38911 ;;  p1              2    0[BANK0 ] PTR void 
 38912 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 38913 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 38914 ;;  c               2    2[BANK0 ] int 
 38915 ;;  n               2    4[BANK0 ] unsigned int 
 38916 ;; Auto vars:     Size  Location     Type
 38917 ;;  p               2    6[BANK0 ] PTR unsigned char 
 38918 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 38919 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 38920 ;; Return value:  Size  Location     Type
 38921 ;;                  2    0[BANK0 ] PTR void 
 38922 ;; Registers used:
 38923 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38924 ;; Tracked objects:
 38925 ;;		On entry : 0/0
 38926 ;;		On exit  : 0/0
 38927 ;;		Unchanged: 0/0
 38928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38929 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38930 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38932 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38933 ;;Total ram usage:        8 bytes
 38934 ;; Hardware stack levels used:    1
 38935 ;; Hardware stack levels required when called:    7
 38936 ;; This function calls:
 38937 ;;		Nothing
 38938 ;; This function is called by:
 38939 ;;		_AESCmac
 38940 ;;		_GenerateSubkey
 38941 ;;		_LORAWAN_Reset
 38942 ;;		_InitDefault868Channels
 38943 ;;		_InitDefault433Channels
 38944 ;;		_AssemblePacket
 38945 ;;		_PrepareJoinRequestFrame
 38946 ;;		_PrepareSessionKeys
 38947 ;;		_AssembleEncryptionBlock
 38948 ;; This function uses a non-reentrant model
 38949 ;;
 38950                           
 38951                           	psect	text246
 38952  009F94                     __ptext246:
 38953                           	opt callstack 0
 38954  009F94                     _memset:
 38955                           	opt callstack 19
 38956                           
 38957                           ; BSR set to: 0
 38958                           ;incstack = 0
 38959  009F94  C060  F066         	movff	memset@p1,memset@p
 38960  009F98  C061  F067         	movff	memset@p1+1,memset@p+1
 38961  009F9C  D008               	goto	l18134
 38962  009F9E                     l18130:
 38963                           
 38964                           ; BSR set to: 0
 38965  009F9E  C066  FFD9         	movff	memset@p,fsr2l
 38966  009FA2  C067  FFDA         	movff	memset@p+1,fsr2h
 38967  009FA6  C062  FFDF         	movff	memset@c,indf2
 38968                           
 38969                           ; BSR set to: 0
 38970  009FAA  4B66               	infsnz	memset@p& (0+255),f,b
 38971  009FAC  2B67               	incf	(memset@p+1)& (0+255),f,b
 38972  009FAE                     l18134:
 38973  009FAE  0100               	movlb	0	; () banked
 38974  009FB0  0764               	decf	memset@n& (0+255),f,b
 38975  009FB2  A0D8               	btfss	status,0,c
 38976  009FB4  0765               	decf	(memset@n+1)& (0+255),f,b
 38977  009FB6  2964               	incf	memset@n& (0+255),w,b
 38978  009FB8  E1F2               	bnz	l18130
 38979  009FBA  2965               	incf	(memset@n+1)& (0+255),w,b
 38980  009FBC  B4D8               	btfsc	status,2,c
 38981  009FBE  0012               	return	
 38982  009FC0  D7EE               	goto	l18130
 38983  009FC2                     __end_of_memset:
 38984                           	opt callstack 0
 38985                           
 38986 ;; *************** function _memcpy *****************
 38987 ;; Defined at:
 38988 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memcpy.c"
 38989 ;; Parameters:    Size  Location     Type
 38990 ;;  d1              2    0[BANK0 ] PTR void 
 38991 ;;		 -> sensorsString(40), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 38992 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESEncodeLoRa@useKey(16), 
 38993 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 38994 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 38995 ;;  s1              2    2[BANK0 ] PTR const void 
 38996 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), clearString(40), sensorsString(40), 
 38997 ;;		 -> deviceEui(8), appEui(8), appKey(16), AssembleEncryptionBlock@frameCounter(4), 
 38998 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), 
 38999 ;;		 -> LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessio
      +nKey(16), loRa.activationParameters.networkSessionKey(16), 
 39000 ;;		 -> loRa.activationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), loRa.activationParamete
      +rs.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), 
 39001 ;;		 -> loRa.activationParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), FskSyncWo
      +rdBuff(3), UpdateCfList@joinAccept(2), 
 39002 ;;		 -> loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), 
 39003 ;;		 -> loRa(245), DefaultChannels433(42), DefaultChannels868(56), RadioConfiguration.syncWord(8), 
 39004 ;;		 -> RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 39005 ;;  n               2    4[BANK0 ] unsigned int 
 39006 ;; Auto vars:     Size  Location     Type
 39007 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 39008 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), clearString(40), sensorsString(40), 
 39009 ;;		 -> deviceEui(8), appEui(8), appKey(16), AssembleEncryptionBlock@frameCounter(4), 
 39010 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), 
 39011 ;;		 -> LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessio
      +nKey(16), loRa.activationParameters.networkSessionKey(16), 
 39012 ;;		 -> loRa.activationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), loRa.activationParamete
      +rs.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), 
 39013 ;;		 -> loRa.activationParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), FskSyncWo
      +rdBuff(3), UpdateCfList@joinAccept(2), 
 39014 ;;		 -> loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), 
 39015 ;;		 -> loRa(245), DefaultChannels433(42), DefaultChannels868(56), RadioConfiguration.syncWord(8), 
 39016 ;;		 -> RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 39017 ;;  d               2    7[BANK0 ] PTR unsigned char 
 39018 ;;		 -> sensorsString(40), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 39019 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESEncodeLoRa@useKey(16), 
 39020 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 39021 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 39022 ;;  tmp             1    6[BANK0 ] unsigned char 
 39023 ;; Return value:  Size  Location     Type
 39024 ;;                  2    0[BANK0 ] PTR void 
 39025 ;; Registers used:
 39026 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 39027 ;; Tracked objects:
 39028 ;;		On entry : 0/0
 39029 ;;		On exit  : 0/0
 39030 ;;		Unchanged: 0/0
 39031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39032 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39033 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39035 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39036 ;;Total ram usage:       11 bytes
 39037 ;; Hardware stack levels used:    1
 39038 ;; Hardware stack levels required when called:    7
 39039 ;; This function calls:
 39040 ;;		Nothing
 39041 ;; This function is called by:
 39042 ;;		_AESCmac
 39043 ;;		_RADIO_SetFSKSyncWord
 39044 ;;		_UpdateCfList
 39045 ;;		_InitDefault868Channels
 39046 ;;		_InitDefault433Channels
 39047 ;;		_AESEncodeLoRa
 39048 ;;		_LORAWAN_SetDeviceEui
 39049 ;;		_LORAWAN_SetApplicationEui
 39050 ;;		_LORAWAN_SetApplicationKey
 39051 ;;		_LORAWAN_RxDone
 39052 ;;		_AssemblePacket
 39053 ;;		_PrepareJoinRequestFrame
 39054 ;;		_PrepareSessionKeys
 39055 ;;		_AssembleEncryptionBlock
 39056 ;;		_ExtractMic
 39057 ;;		_ComputeMic
 39058 ;;		_acuadoriApp
 39059 ;;		_RADIO_GetData
 39060 ;;		_RADIO_GetFSKSyncWord
 39061 ;;		_LORAWAN_SetMcastNetworkSessionKey
 39062 ;;		_LORAWAN_SetMcastApplicationSessionKey
 39063 ;;		_LORAWAN_GetMcastApplicationSessionKey
 39064 ;;		_LORAWAN_GetMcastNetworkSessionKey
 39065 ;;		_LORAWAN_GetDeviceEui
 39066 ;;		_LORAWAN_GetApplicationEui
 39067 ;;		_LORAWAN_SetNetworkSessionKey
 39068 ;;		_LORAWAN_GetNetworkSessionKey
 39069 ;;		_LORAWAN_SetApplicationSessionKey
 39070 ;;		_LORAWAN_GetApplicationSessionKey
 39071 ;;		_LORAWAN_GetApplicationKey
 39072 ;; This function uses a non-reentrant model
 39073 ;;
 39074                           
 39075                           	psect	text247
 39076  008FD8                     __ptext247:
 39077                           	opt callstack 0
 39078  008FD8                     _memcpy:
 39079                           	opt callstack 16
 39080                           
 39081                           ; BSR set to: 0
 39082                           ;incstack = 0
 39083  008FD8  C062  F069         	movff	memcpy@s1,memcpy@s
 39084  008FDC  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 39085  008FE0  C060  F067         	movff	memcpy@d1,memcpy@d
 39086  008FE4  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 39087  008FE8  D01D               	goto	l17926
 39088  008FEA                     l17918:
 39089                           
 39090                           ; BSR set to: 0
 39091  008FEA  C069  FFF6         	movff	memcpy@s,tblptrl
 39092  008FEE  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 39093  008FF2  0E00               	movlw	low (__mediumconst shr (0+16))
 39094  008FF4  6EF8               	movwf	tblptru,c
 39095  008FF6  0E0F               	movlw	(high __ramtop+-1)
 39096  008FF8  64F7               	cpfsgt	tblptrh,c
 39097  008FFA  D003               	bra	u18757
 39098  008FFC  0008               	tblrd		*
 39099  008FFE  50F5               	movf	tablat,w,c
 39100  009000  D005               	bra	u18750
 39101  009002                     u18757:
 39102  009002  CFF6 FFE9          	movff	tblptrl,fsr0l
 39103  009006  CFF7 FFEA          	movff	tblptrh,fsr0h
 39104  00900A  50EF               	movf	indf0,w,c
 39105  00900C                     u18750:
 39106  00900C  0100               	movlb	0	; () banked
 39107  00900E  6F66               	movwf	memcpy@tmp& (0+255),b
 39108                           
 39109                           ; BSR set to: 0
 39110  009010  4B69               	infsnz	memcpy@s& (0+255),f,b
 39111  009012  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 39112                           
 39113                           ; BSR set to: 0
 39114  009014  C067  FFD9         	movff	memcpy@d,fsr2l
 39115  009018  C068  FFDA         	movff	memcpy@d+1,fsr2h
 39116  00901C  C066  FFDF         	movff	memcpy@tmp,indf2
 39117                           
 39118                           ; BSR set to: 0
 39119  009020  4B67               	infsnz	memcpy@d& (0+255),f,b
 39120  009022  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 39121  009024                     l17926:
 39122  009024  0100               	movlb	0	; () banked
 39123  009026  0764               	decf	memcpy@n& (0+255),f,b
 39124  009028  A0D8               	btfss	status,0,c
 39125  00902A  0765               	decf	(memcpy@n+1)& (0+255),f,b
 39126  00902C  2964               	incf	memcpy@n& (0+255),w,b
 39127  00902E  E1DD               	bnz	l17918
 39128  009030  2965               	incf	(memcpy@n+1)& (0+255),w,b
 39129  009032  B4D8               	btfsc	status,2,c
 39130  009034  0012               	return	
 39131  009036  D7D9               	goto	l17918
 39132  009038                     __end_of_memcpy:
 39133                           	opt callstack 0
 39134                           
 39135 ;; *************** function _CreateAllSoftwareTimers *****************
 39136 ;; Defined at:
 39137 ;;		line 938 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39138 ;; Parameters:    Size  Location     Type
 39139 ;;		None
 39140 ;; Auto vars:     Size  Location     Type
 39141 ;;		None
 39142 ;; Return value:  Size  Location     Type
 39143 ;;                  1    wreg      void 
 39144 ;; Registers used:
 39145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39146 ;; Tracked objects:
 39147 ;;		On entry : 0/0
 39148 ;;		On exit  : 0/0
 39149 ;;		Unchanged: 0/0
 39150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39155 ;;Total ram usage:        0 bytes
 39156 ;; Hardware stack levels used:    1
 39157 ;; Hardware stack levels required when called:    8
 39158 ;; This function calls:
 39159 ;;		_SwTimerCreate
 39160 ;; This function is called by:
 39161 ;;		_LORAWAN_Init
 39162 ;; This function uses a non-reentrant model
 39163 ;;
 39164                           
 39165                           	psect	text248
 39166  00944E                     __ptext248:
 39167                           	opt callstack 0
 39168  00944E                     _CreateAllSoftwareTimers:
 39169                           	opt callstack 21
 39170                           
 39171                           ;lorawan_eu.c: 940: loRa.joinAccept1TimerId = SwTimerCreate();
 39172                           
 39173                           ; BSR set to: 0
 39174                           ;incstack = 0
 39175  00944E  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39176  009452  0102               	movlb	2	; () banked
 39177  009454  6FE7               	movwf	(_loRa+226)& (0+255),b
 39178                           
 39179                           ;lorawan_eu.c: 941: loRa.joinAccept2TimerId = SwTimerCreate();
 39180  009456  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39181  00945A  0102               	movlb	2	; () banked
 39182  00945C  6FE8               	movwf	(_loRa+227)& (0+255),b
 39183                           
 39184                           ;lorawan_eu.c: 942: loRa.receiveWindow1TimerId = SwTimerCreate();
 39185  00945E  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39186  009462  0102               	movlb	2	; () banked
 39187  009464  6FE9               	movwf	(_loRa+228)& (0+255),b
 39188                           
 39189                           ;lorawan_eu.c: 943: loRa.receiveWindow2TimerId = SwTimerCreate();
 39190  009466  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39191  00946A  0102               	movlb	2	; () banked
 39192  00946C  6FEA               	movwf	(_loRa+229)& (0+255),b
 39193                           
 39194                           ;lorawan_eu.c: 944: loRa.linkCheckTimerId = SwTimerCreate();
 39195  00946E  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39196  009472  0102               	movlb	2	; () banked
 39197  009474  6FEC               	movwf	(_loRa+231)& (0+255),b
 39198                           
 39199                           ;lorawan_eu.c: 945: loRa.ackTimeoutTimerId = SwTimerCreate();
 39200  009476  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39201  00947A  0102               	movlb	2	; () banked
 39202  00947C  6FED               	movwf	(_loRa+232)& (0+255),b
 39203                           
 39204                           ;lorawan_eu.c: 946: loRa.automaticReplyTimerId = SwTimerCreate();
 39205  00947E  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39206  009482  0102               	movlb	2	; () banked
 39207  009484  6FEB               	movwf	(_loRa+230)& (0+255),b
 39208                           
 39209                           ;lorawan_eu.c: 947: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 39210  009486  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39211  00948A  0102               	movlb	2	; () banked
 39212  00948C  6FEF               	movwf	(_loRa+234)& (0+255),b
 39213                           
 39214                           ;lorawan_eu.c: 948: loRa.abpJoinTimerId = SwTimerCreate();
 39215  00948E  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39216  009492  0102               	movlb	2	; () banked
 39217  009494  6FF8               	movwf	(_loRa+243)& (0+255),b
 39218                           
 39219                           ;lorawan_eu.c: 949: loRa.dutyCycleTimerId = SwTimerCreate();
 39220  009496  EC3F  F045         	call	_SwTimerCreate	;wreg free
 39221  00949A  0102               	movlb	2	; () banked
 39222  00949C  6FEE               	movwf	(_loRa+233)& (0+255),b
 39223                           
 39224                           ; BSR set to: 2
 39225  00949E  0012               	return		;funcret
 39226  0094A0                     __end_of_CreateAllSoftwareTimers:
 39227                           	opt callstack 0
 39228                           
 39229 ;; *************** function _SwTimerCreate *****************
 39230 ;; Defined at:
 39231 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39232 ;; Parameters:    Size  Location     Type
 39233 ;;		None
 39234 ;; Auto vars:     Size  Location     Type
 39235 ;;  retVal          1    0[BANK0 ] unsigned char 
 39236 ;; Return value:  Size  Location     Type
 39237 ;;                  1    wreg      unsigned char 
 39238 ;; Registers used:
 39239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39240 ;; Tracked objects:
 39241 ;;		On entry : 0/0
 39242 ;;		On exit  : 0/0
 39243 ;;		Unchanged: 0/0
 39244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39246 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39248 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39249 ;;Total ram usage:        1 bytes
 39250 ;; Hardware stack levels used:    1
 39251 ;; Hardware stack levels required when called:    7
 39252 ;; This function calls:
 39253 ;;		Nothing
 39254 ;; This function is called by:
 39255 ;;		_RADIO_Init
 39256 ;;		_CreateAllSoftwareTimers
 39257 ;; This function uses a non-reentrant model
 39258 ;;
 39259                           
 39260                           	psect	text249
 39261  008A7E                     __ptext249:
 39262                           	opt callstack 0
 39263  008A7E                     _SwTimerCreate:
 39264                           	opt callstack 21
 39265                           
 39266                           ;sw_timer.c: 156: uint8_t retVal;;sw_timer.c: 157: if (allocatedTimers < 20)
 39267                           
 39268                           ; BSR set to: 2
 39269                           ;incstack = 0
 39270  008A7E  0E14               	movlw	20
 39271  008A80  0101               	movlb	1	; () banked
 39272  008A82  6128               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 39273  008A84  D034               	goto	l242
 39274                           
 39275                           ; BSR set to: 1
 39276                           ;sw_timer.c: 158: {;sw_timer.c: 159: (INTCONbits.GIE = 0);
 39277  008A86  9EF2               	bcf	4082,7,c	;volatile
 39278                           
 39279                           ;sw_timer.c: 160: retVal = allocatedTimers;
 39280  008A88  C128  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 39281                           
 39282                           ; BSR set to: 1
 39283                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 39284  008A8C  0100               	movlb	0	; () banked
 39285  008A8E  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39286  008A90  0D08               	mullw	8
 39287  008A92  0E04               	movlw	low (_swTimers+4)
 39288  008A94  24F3               	addwf	prodl,w,c
 39289  008A96  6ED9               	movwf	fsr2l,c
 39290  008A98  0E03               	movlw	high (_swTimers+4)
 39291  008A9A  20F4               	addwfc	prodh,w,c
 39292  008A9C  6EDA               	movwf	fsr2h,c
 39293  008A9E  0E00               	movlw	0
 39294  008AA0  6EDF               	movwf	indf2,c
 39295                           
 39296                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 39297  008AA2  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39298  008AA4  0D08               	mullw	8
 39299  008AA6  0E00               	movlw	low _swTimers
 39300  008AA8  24F3               	addwf	prodl,w,c
 39301  008AAA  6ED9               	movwf	fsr2l,c
 39302  008AAC  0E03               	movlw	high _swTimers
 39303  008AAE  20F4               	addwfc	prodh,w,c
 39304  008AB0  6EDA               	movwf	fsr2h,c
 39305  008AB2  6ADE               	clrf	postinc2,c
 39306  008AB4  6ADE               	clrf	postinc2,c
 39307  008AB6  6ADE               	clrf	postinc2,c
 39308  008AB8  6ADD               	clrf	postdec2,c
 39309                           
 39310                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 39311  008ABA  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39312  008ABC  0D08               	mullw	8
 39313  008ABE  0E05               	movlw	low (_swTimers+5)
 39314  008AC0  24F3               	addwf	prodl,w,c
 39315  008AC2  6ED9               	movwf	fsr2l,c
 39316  008AC4  0E03               	movlw	high (_swTimers+5)
 39317  008AC6  20F4               	addwfc	prodh,w,c
 39318  008AC8  6EDA               	movwf	fsr2h,c
 39319  008ACA  0E00               	movlw	0
 39320  008ACC  6EDF               	movwf	indf2,c
 39321                           
 39322                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 39323  008ACE  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39324  008AD0  0D08               	mullw	8
 39325  008AD2  0E06               	movlw	low (_swTimers+6)
 39326  008AD4  24F3               	addwf	prodl,w,c
 39327  008AD6  6ED9               	movwf	fsr2l,c
 39328  008AD8  0E03               	movlw	high (_swTimers+6)
 39329  008ADA  20F4               	addwfc	prodh,w,c
 39330  008ADC  6EDA               	movwf	fsr2h,c
 39331  008ADE  0E00               	movlw	0
 39332  008AE0  6EDE               	movwf	postinc2,c
 39333  008AE2  0E00               	movlw	0
 39334  008AE4  6EDD               	movwf	postdec2,c
 39335                           
 39336                           ; BSR set to: 0
 39337                           ;sw_timer.c: 165: allocatedTimers++;
 39338  008AE6  0101               	movlb	1	; () banked
 39339  008AE8  2B28               	incf	_allocatedTimers& (0+255),f,b	;volatile
 39340                           
 39341                           ; BSR set to: 1
 39342                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 39343  008AEA  8EF2               	bsf	4082,7,c	;volatile
 39344                           
 39345                           ;sw_timer.c: 167: }
 39346  008AEC  D001               	goto	l15372
 39347  008AEE                     l242:
 39348  008AEE  D7FF               	goto	l242
 39349  008AF0                     l15372:
 39350                           
 39351                           ; BSR set to: 1
 39352                           ;sw_timer.c: 175: };sw_timer.c: 176: };sw_timer.c: 177: return retVal;
 39353  008AF0  0100               	movlb	0	; () banked
 39354  008AF2  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39355                           
 39356                           ; BSR set to: 0
 39357  008AF4  0012               	return		;funcret
 39358  008AF6                     __end_of_SwTimerCreate:
 39359                           	opt callstack 0
 39360                           
 39361 ;; *************** function _GPIOInit *****************
 39362 ;; Defined at:
 39363 ;;		line 332 in file "rn2483APP.c"
 39364 ;; Parameters:    Size  Location     Type
 39365 ;;		None
 39366 ;; Auto vars:     Size  Location     Type
 39367 ;;		None
 39368 ;; Return value:  Size  Location     Type
 39369 ;;                  1    wreg      void 
 39370 ;; Registers used:
 39371 ;;		wreg, status,2, status,0, cstack
 39372 ;; Tracked objects:
 39373 ;;		On entry : 0/0
 39374 ;;		On exit  : 0/0
 39375 ;;		Unchanged: 0/0
 39376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39381 ;;Total ram usage:        0 bytes
 39382 ;; Hardware stack levels used:    1
 39383 ;; Hardware stack levels required when called:    8
 39384 ;; This function calls:
 39385 ;;		_GPIOAnalogMode
 39386 ;;		_GPIODigitalWrite
 39387 ;;		_GPIOSet
 39388 ;; This function is called by:
 39389 ;;		_main
 39390 ;; This function uses a non-reentrant model
 39391 ;;
 39392                           
 39393                           	psect	text250
 39394  005D28                     __ptext250:
 39395                           	opt callstack 0
 39396  005D28                     _GPIOInit:
 39397                           	opt callstack 22
 39398                           
 39399                           ;rn2483APP.c: 345: GPIOSet(0x00, 0);
 39400                           
 39401                           ; BSR set to: 0
 39402                           ;incstack = 0
 39403  005D28  0E00               	movlw	0
 39404  005D2A  0100               	movlb	0	; () banked
 39405  005D2C  6F60               	movwf	GPIOSet@mode& (0+255),b
 39406  005D2E  0E00               	movlw	0
 39407  005D30  EC9A  F036         	call	_GPIOSet
 39408                           
 39409                           ;rn2483APP.c: 346: GPIOSet(0x01, 1);
 39410  005D34  0E01               	movlw	1
 39411  005D36  0100               	movlb	0	; () banked
 39412  005D38  6F60               	movwf	GPIOSet@mode& (0+255),b
 39413  005D3A  0E01               	movlw	1
 39414  005D3C  EC9A  F036         	call	_GPIOSet
 39415                           
 39416                           ;rn2483APP.c: 347: GPIOSet(0x02, 1);
 39417  005D40  0E01               	movlw	1
 39418  005D42  0100               	movlb	0	; () banked
 39419  005D44  6F60               	movwf	GPIOSet@mode& (0+255),b
 39420  005D46  0E02               	movlw	2
 39421  005D48  EC9A  F036         	call	_GPIOSet
 39422                           
 39423                           ;rn2483APP.c: 348: GPIOSet(0x03, 1);
 39424  005D4C  0E01               	movlw	1
 39425  005D4E  0100               	movlb	0	; () banked
 39426  005D50  6F60               	movwf	GPIOSet@mode& (0+255),b
 39427  005D52  0E03               	movlw	3
 39428  005D54  EC9A  F036         	call	_GPIOSet
 39429                           
 39430                           ;rn2483APP.c: 349: GPIOSet(0xFF, 0);
 39431  005D58  0E00               	movlw	0
 39432  005D5A  0100               	movlb	0	; () banked
 39433  005D5C  6F60               	movwf	GPIOSet@mode& (0+255),b
 39434  005D5E  0EFF               	movlw	255
 39435  005D60  EC9A  F036         	call	_GPIOSet
 39436                           
 39437                           ;rn2483APP.c: 350: GPIOSet(0x04, 0);
 39438  005D64  0E00               	movlw	0
 39439  005D66  0100               	movlb	0	; () banked
 39440  005D68  6F60               	movwf	GPIOSet@mode& (0+255),b
 39441  005D6A  0E04               	movlw	4
 39442  005D6C  EC9A  F036         	call	_GPIOSet
 39443                           
 39444                           ;rn2483APP.c: 351: GPIOSet(0x05, 0);
 39445  005D70  0E00               	movlw	0
 39446  005D72  0100               	movlb	0	; () banked
 39447  005D74  6F60               	movwf	GPIOSet@mode& (0+255),b
 39448  005D76  0E05               	movlw	5
 39449  005D78  EC9A  F036         	call	_GPIOSet
 39450                           
 39451                           ;rn2483APP.c: 352: GPIOSet(0x06, 0);
 39452  005D7C  0E00               	movlw	0
 39453  005D7E  0100               	movlb	0	; () banked
 39454  005D80  6F60               	movwf	GPIOSet@mode& (0+255),b
 39455  005D82  0E06               	movlw	6
 39456  005D84  EC9A  F036         	call	_GPIOSet
 39457                           
 39458                           ;rn2483APP.c: 353: GPIOSet(0x16, 0);
 39459  005D88  0E00               	movlw	0
 39460  005D8A  0100               	movlb	0	; () banked
 39461  005D8C  6F60               	movwf	GPIOSet@mode& (0+255),b
 39462  005D8E  0E16               	movlw	22
 39463  005D90  EC9A  F036         	call	_GPIOSet
 39464                           
 39465                           ;rn2483APP.c: 354: GPIOSet(0x11, 0);
 39466  005D94  0E00               	movlw	0
 39467  005D96  0100               	movlb	0	; () banked
 39468  005D98  6F60               	movwf	GPIOSet@mode& (0+255),b
 39469  005D9A  0E11               	movlw	17
 39470  005D9C  EC9A  F036         	call	_GPIOSet
 39471                           
 39472                           ;rn2483APP.c: 355: GPIOSet(0x19, 0);
 39473  005DA0  0E00               	movlw	0
 39474  005DA2  0100               	movlb	0	; () banked
 39475  005DA4  6F60               	movwf	GPIOSet@mode& (0+255),b
 39476  005DA6  0E19               	movlw	25
 39477  005DA8  EC9A  F036         	call	_GPIOSet
 39478                           
 39479                           ;rn2483APP.c: 358: GPIOAnalogMode(0x00, 0);
 39480  005DAC  0E00               	movlw	0
 39481  005DAE  0100               	movlb	0	; () banked
 39482  005DB0  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39483  005DB2  0E00               	movlw	0
 39484  005DB4  EC05  F032         	call	_GPIOAnalogMode
 39485                           
 39486                           ;rn2483APP.c: 359: GPIOAnalogMode(0x01, 1);
 39487  005DB8  0E01               	movlw	1
 39488  005DBA  0100               	movlb	0	; () banked
 39489  005DBC  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39490  005DBE  0E01               	movlw	1
 39491  005DC0  EC05  F032         	call	_GPIOAnalogMode
 39492                           
 39493                           ;rn2483APP.c: 360: GPIOAnalogMode(0x02, 1);
 39494  005DC4  0E01               	movlw	1
 39495  005DC6  0100               	movlb	0	; () banked
 39496  005DC8  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39497  005DCA  0E02               	movlw	2
 39498  005DCC  EC05  F032         	call	_GPIOAnalogMode
 39499                           
 39500                           ;rn2483APP.c: 361: GPIOAnalogMode(0x03, 1);
 39501  005DD0  0E01               	movlw	1
 39502  005DD2  0100               	movlb	0	; () banked
 39503  005DD4  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39504  005DD6  0E03               	movlw	3
 39505  005DD8  EC05  F032         	call	_GPIOAnalogMode
 39506                           
 39507                           ;rn2483APP.c: 362: GPIOAnalogMode(0xFF, 0);
 39508  005DDC  0E00               	movlw	0
 39509  005DDE  0100               	movlb	0	; () banked
 39510  005DE0  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39511  005DE2  0EFF               	movlw	255
 39512  005DE4  EC05  F032         	call	_GPIOAnalogMode
 39513                           
 39514                           ;rn2483APP.c: 363: GPIOAnalogMode(0x04, 0);
 39515  005DE8  0E00               	movlw	0
 39516  005DEA  0100               	movlb	0	; () banked
 39517  005DEC  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39518  005DEE  0E04               	movlw	4
 39519  005DF0  EC05  F032         	call	_GPIOAnalogMode
 39520                           
 39521                           ;rn2483APP.c: 364: GPIOAnalogMode(0x05, 0);
 39522  005DF4  0E00               	movlw	0
 39523  005DF6  0100               	movlb	0	; () banked
 39524  005DF8  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39525  005DFA  0E05               	movlw	5
 39526  005DFC  EC05  F032         	call	_GPIOAnalogMode
 39527                           
 39528                           ;rn2483APP.c: 365: GPIOAnalogMode(0x06, 0);
 39529  005E00  0E00               	movlw	0
 39530  005E02  0100               	movlb	0	; () banked
 39531  005E04  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39532  005E06  0E06               	movlw	6
 39533  005E08  EC05  F032         	call	_GPIOAnalogMode
 39534                           
 39535                           ;rn2483APP.c: 366: GPIOAnalogMode(0x16, 0);
 39536  005E0C  0E00               	movlw	0
 39537  005E0E  0100               	movlb	0	; () banked
 39538  005E10  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39539  005E12  0E16               	movlw	22
 39540  005E14  EC05  F032         	call	_GPIOAnalogMode
 39541                           
 39542                           ;rn2483APP.c: 367: GPIOAnalogMode(0x11, 0);
 39543  005E18  0E00               	movlw	0
 39544  005E1A  0100               	movlb	0	; () banked
 39545  005E1C  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39546  005E1E  0E11               	movlw	17
 39547  005E20  EC05  F032         	call	_GPIOAnalogMode
 39548                           
 39549                           ;rn2483APP.c: 368: GPIOAnalogMode(0x19, 0);
 39550  005E24  0E00               	movlw	0
 39551  005E26  0100               	movlb	0	; () banked
 39552  005E28  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39553  005E2A  0E19               	movlw	25
 39554  005E2C  EC05  F032         	call	_GPIOAnalogMode
 39555                           
 39556                           ;rn2483APP.c: 370: GPIODigitalWrite(0x00, 0);
 39557  005E30  0E00               	movlw	0
 39558  005E32  0100               	movlb	0	; () banked
 39559  005E34  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39560  005E36  0E00               	movlw	0
 39561  005E38  EC18  F037         	call	_GPIODigitalWrite
 39562                           
 39563                           ;rn2483APP.c: 371: GPIODigitalWrite(0xFF, 0);
 39564  005E3C  0E00               	movlw	0
 39565  005E3E  0100               	movlb	0	; () banked
 39566  005E40  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39567  005E42  0EFF               	movlw	255
 39568  005E44  EC18  F037         	call	_GPIODigitalWrite
 39569                           
 39570                           ;rn2483APP.c: 372: GPIODigitalWrite(0x04, 0);
 39571  005E48  0E00               	movlw	0
 39572  005E4A  0100               	movlb	0	; () banked
 39573  005E4C  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39574  005E4E  0E04               	movlw	4
 39575  005E50  EC18  F037         	call	_GPIODigitalWrite
 39576                           
 39577                           ;rn2483APP.c: 373: GPIODigitalWrite(0x16, 1);
 39578  005E54  0E01               	movlw	1
 39579  005E56  0100               	movlb	0	; () banked
 39580  005E58  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39581  005E5A  0E16               	movlw	22
 39582  005E5C  EC18  F037         	call	_GPIODigitalWrite
 39583  005E60  0012               	return		;funcret
 39584  005E62                     __end_of_GPIOInit:
 39585                           	opt callstack 0
 39586                           
 39587 ;; *************** function _GPIOSet *****************
 39588 ;; Defined at:
 39589 ;;		line 98 in file "rn2483APP.c"
 39590 ;; Parameters:    Size  Location     Type
 39591 ;;  GPIO            1    wreg     unsigned char 
 39592 ;;  mode            1    0[BANK0 ] unsigned char 
 39593 ;; Auto vars:     Size  Location     Type
 39594 ;;  GPIO            1    1[BANK0 ] unsigned char 
 39595 ;; Return value:  Size  Location     Type
 39596 ;;                  1    wreg      void 
 39597 ;; Registers used:
 39598 ;;		wreg, status,2, status,0
 39599 ;; Tracked objects:
 39600 ;;		On entry : 0/0
 39601 ;;		On exit  : 0/0
 39602 ;;		Unchanged: 0/0
 39603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39604 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39605 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39607 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39608 ;;Total ram usage:        2 bytes
 39609 ;; Hardware stack levels used:    1
 39610 ;; Hardware stack levels required when called:    7
 39611 ;; This function calls:
 39612 ;;		Nothing
 39613 ;; This function is called by:
 39614 ;;		_main
 39615 ;;		_GPIOInit
 39616 ;; This function uses a non-reentrant model
 39617 ;;
 39618                           
 39619                           	psect	text251
 39620  006D34                     __ptext251:
 39621                           	opt callstack 0
 39622  006D34                     _GPIOSet:
 39623                           	opt callstack 23
 39624                           
 39625                           ;incstack = 0
 39626                           ;GPIOSet@GPIO stored from wreg
 39627  006D34  0100               	movlb	0	; () banked
 39628  006D36  6F61               	movwf	GPIOSet@GPIO& (0+255),b
 39629                           
 39630                           ;rn2483APP.c: 100: switch(GPIO){
 39631  006D38  D054               	goto	l16698
 39632  006D3A                     l16624:
 39633                           
 39634                           ; BSR set to: 0
 39635                           ;rn2483APP.c: 102: mode? TRISA |= (0x1) : TRISA &= ~(0x1);
 39636  006D3A  5160               	movf	GPIOSet@mode& (0+255),w,b
 39637  006D3C  B4D8               	btfsc	status,2,c
 39638  006D3E  D002               	goto	l16628
 39639                           
 39640                           ; BSR set to: 0
 39641  006D40  8092               	bsf	3986,0,c	;volatile
 39642  006D42  0012               	return	
 39643  006D44                     l16628:
 39644                           
 39645                           ; BSR set to: 0
 39646  006D44  9092               	bcf	3986,0,c	;volatile
 39647  006D46  0012               	return	
 39648  006D48                     l16630:
 39649                           
 39650                           ; BSR set to: 0
 39651                           ;rn2483APP.c: 105: mode? TRISA |= (0x2) : TRISA &= ~(0x2);
 39652  006D48  5160               	movf	GPIOSet@mode& (0+255),w,b
 39653  006D4A  B4D8               	btfsc	status,2,c
 39654  006D4C  D002               	goto	l16634
 39655                           
 39656                           ; BSR set to: 0
 39657  006D4E  8292               	bsf	3986,1,c	;volatile
 39658  006D50  0012               	return	
 39659  006D52                     l16634:
 39660                           
 39661                           ; BSR set to: 0
 39662  006D52  9292               	bcf	3986,1,c	;volatile
 39663  006D54  0012               	return	
 39664  006D56                     l16636:
 39665                           
 39666                           ; BSR set to: 0
 39667                           ;rn2483APP.c: 108: mode? TRISA |= (0x4) : TRISA &= ~(0x4);
 39668  006D56  5160               	movf	GPIOSet@mode& (0+255),w,b
 39669  006D58  B4D8               	btfsc	status,2,c
 39670  006D5A  D002               	goto	l16640
 39671                           
 39672                           ; BSR set to: 0
 39673  006D5C  8492               	bsf	3986,2,c	;volatile
 39674  006D5E  0012               	return	
 39675  006D60                     l16640:
 39676                           
 39677                           ; BSR set to: 0
 39678  006D60  9492               	bcf	3986,2,c	;volatile
 39679  006D62  0012               	return	
 39680  006D64                     l16642:
 39681                           
 39682                           ; BSR set to: 0
 39683                           ;rn2483APP.c: 111: mode? TRISA |= (0x8) : TRISA &= ~(0x8);
 39684  006D64  5160               	movf	GPIOSet@mode& (0+255),w,b
 39685  006D66  B4D8               	btfsc	status,2,c
 39686  006D68  D002               	goto	l16646
 39687                           
 39688                           ; BSR set to: 0
 39689  006D6A  8692               	bsf	3986,3,c	;volatile
 39690  006D6C  0012               	return	
 39691  006D6E                     l16646:
 39692                           
 39693                           ; BSR set to: 0
 39694  006D6E  9692               	bcf	3986,3,c	;volatile
 39695  006D70  0012               	return	
 39696  006D72                     l16648:
 39697                           
 39698                           ; BSR set to: 0
 39699                           ;rn2483APP.c: 114: mode? TRISA |= (0x10) : TRISA &= ~(0x10);
 39700  006D72  5160               	movf	GPIOSet@mode& (0+255),w,b
 39701  006D74  B4D8               	btfsc	status,2,c
 39702  006D76  D002               	goto	l16652
 39703                           
 39704                           ; BSR set to: 0
 39705  006D78  8892               	bsf	3986,4,c	;volatile
 39706  006D7A  0012               	return	
 39707  006D7C                     l16652:
 39708                           
 39709                           ; BSR set to: 0
 39710  006D7C  9892               	bcf	3986,4,c	;volatile
 39711  006D7E  0012               	return	
 39712  006D80                     l16654:
 39713                           
 39714                           ; BSR set to: 0
 39715                           ;rn2483APP.c: 117: mode? TRISA |= (0x20) : TRISA &= ~(0x20);
 39716  006D80  5160               	movf	GPIOSet@mode& (0+255),w,b
 39717  006D82  B4D8               	btfsc	status,2,c
 39718  006D84  D002               	goto	l16658
 39719                           
 39720                           ; BSR set to: 0
 39721  006D86  8A92               	bsf	3986,5,c	;volatile
 39722  006D88  0012               	return	
 39723  006D8A                     l16658:
 39724                           
 39725                           ; BSR set to: 0
 39726  006D8A  9A92               	bcf	3986,5,c	;volatile
 39727  006D8C  0012               	return	
 39728  006D8E                     l16660:
 39729                           
 39730                           ; BSR set to: 0
 39731                           ;rn2483APP.c: 120: mode? TRISE |= (0x1) : TRISE &= ~(0x1);
 39732  006D8E  5160               	movf	GPIOSet@mode& (0+255),w,b
 39733  006D90  B4D8               	btfsc	status,2,c
 39734  006D92  D002               	goto	l16664
 39735                           
 39736                           ; BSR set to: 0
 39737  006D94  8096               	bsf	3990,0,c	;volatile
 39738  006D96  0012               	return	
 39739  006D98                     l16664:
 39740                           
 39741                           ; BSR set to: 0
 39742  006D98  9096               	bcf	3990,0,c	;volatile
 39743  006D9A  0012               	return	
 39744  006D9C                     l16666:
 39745                           
 39746                           ; BSR set to: 0
 39747                           ;rn2483APP.c: 123: mode? TRISE |= (0x2) : TRISE &= ~(0x2);
 39748  006D9C  5160               	movf	GPIOSet@mode& (0+255),w,b
 39749  006D9E  B4D8               	btfsc	status,2,c
 39750  006DA0  D002               	goto	l16670
 39751                           
 39752                           ; BSR set to: 0
 39753  006DA2  8296               	bsf	3990,1,c	;volatile
 39754  006DA4  0012               	return	
 39755  006DA6                     l16670:
 39756                           
 39757                           ; BSR set to: 0
 39758  006DA6  9296               	bcf	3990,1,c	;volatile
 39759  006DA8  0012               	return	
 39760  006DAA                     l16672:
 39761                           
 39762                           ; BSR set to: 0
 39763                           ;rn2483APP.c: 126: mode? TRISD |= (0x4) : TRISD &= ~(0x4);
 39764  006DAA  5160               	movf	GPIOSet@mode& (0+255),w,b
 39765  006DAC  B4D8               	btfsc	status,2,c
 39766  006DAE  D002               	goto	l16676
 39767                           
 39768                           ; BSR set to: 0
 39769  006DB0  8495               	bsf	3989,2,c	;volatile
 39770  006DB2  0012               	return	
 39771  006DB4                     l16676:
 39772                           
 39773                           ; BSR set to: 0
 39774  006DB4  9495               	bcf	3989,2,c	;volatile
 39775  006DB6  0012               	return	
 39776  006DB8                     l16678:
 39777                           
 39778                           ; BSR set to: 0
 39779                           ;rn2483APP.c: 129: mode? TRISE |= (0x4) : TRISE &= ~(0x4);
 39780  006DB8  5160               	movf	GPIOSet@mode& (0+255),w,b
 39781  006DBA  B4D8               	btfsc	status,2,c
 39782  006DBC  D002               	goto	l16682
 39783                           
 39784                           ; BSR set to: 0
 39785  006DBE  8496               	bsf	3990,2,c	;volatile
 39786  006DC0  0012               	return	
 39787  006DC2                     l16682:
 39788                           
 39789                           ; BSR set to: 0
 39790  006DC2  9496               	bcf	3990,2,c	;volatile
 39791  006DC4  0012               	return	
 39792  006DC6                     l16684:
 39793                           
 39794                           ; BSR set to: 0
 39795                           ;rn2483APP.c: 132: mode? TRISC |= (0x20) : TRISC &= ~(0x20);
 39796  006DC6  5160               	movf	GPIOSet@mode& (0+255),w,b
 39797  006DC8  B4D8               	btfsc	status,2,c
 39798  006DCA  D002               	goto	l16688
 39799                           
 39800                           ; BSR set to: 0
 39801  006DCC  8A94               	bsf	3988,5,c	;volatile
 39802  006DCE  0012               	return	
 39803  006DD0                     l16688:
 39804                           
 39805                           ; BSR set to: 0
 39806  006DD0  9A94               	bcf	3988,5,c	;volatile
 39807  006DD2  0012               	return	
 39808  006DD4                     l16690:
 39809                           
 39810                           ; BSR set to: 0
 39811                           ;rn2483APP.c: 135: mode? TRISD |= (0x20) : TRISD &= ~(0x20);
 39812  006DD4  5160               	movf	GPIOSet@mode& (0+255),w,b
 39813  006DD6  B4D8               	btfsc	status,2,c
 39814  006DD8  D002               	goto	l16694
 39815                           
 39816                           ; BSR set to: 0
 39817  006DDA  8A95               	bsf	3989,5,c	;volatile
 39818  006DDC  0012               	return	
 39819  006DDE                     l16694:
 39820                           
 39821                           ; BSR set to: 0
 39822  006DDE  9A95               	bcf	3989,5,c	;volatile
 39823  006DE0  0012               	return	
 39824  006DE2                     l16698:
 39825  006DE2  0100               	movlb	0	; () banked
 39826  006DE4  5161               	movf	GPIOSet@GPIO& (0+255),w,b
 39827                           
 39828                           ; Switch size 1, requested type "simple"
 39829                           ; Number of cases is 12, Range of values is 0 to 255
 39830                           ; switch strategies available:
 39831                           ; Name         Instructions Cycles
 39832                           ; simple_byte           37    19 (average)
 39833                           ;	Chosen strategy is simple_byte
 39834  006DE6  0A00               	xorlw	0	; case 0
 39835  006DE8  B4D8               	btfsc	status,2,c
 39836  006DEA  D7A7               	goto	l16624
 39837  006DEC  0A01               	xorlw	1	; case 1
 39838  006DEE  B4D8               	btfsc	status,2,c
 39839  006DF0  D7AB               	goto	l16630
 39840  006DF2  0A03               	xorlw	3	; case 2
 39841  006DF4  B4D8               	btfsc	status,2,c
 39842  006DF6  D7AF               	goto	l16636
 39843  006DF8  0A01               	xorlw	1	; case 3
 39844  006DFA  B4D8               	btfsc	status,2,c
 39845  006DFC  D7B3               	goto	l16642
 39846  006DFE  0A07               	xorlw	7	; case 4
 39847  006E00  B4D8               	btfsc	status,2,c
 39848  006E02  D7BE               	goto	l16654
 39849  006E04  0A01               	xorlw	1	; case 5
 39850  006E06  B4D8               	btfsc	status,2,c
 39851  006E08  D7C2               	goto	l16660
 39852  006E0A  0A03               	xorlw	3	; case 6
 39853  006E0C  B4D8               	btfsc	status,2,c
 39854  006E0E  D7C6               	goto	l16666
 39855  006E10  0A01               	xorlw	1	; case 7
 39856  006E12  B4D8               	btfsc	status,2,c
 39857  006E14  D7D1               	goto	l16678
 39858  006E16  0A16               	xorlw	22	; case 17
 39859  006E18  B4D8               	btfsc	status,2,c
 39860  006E1A  D7D5               	goto	l16684
 39861  006E1C  0A07               	xorlw	7	; case 22
 39862  006E1E  B4D8               	btfsc	status,2,c
 39863  006E20  D7C4               	goto	l16672
 39864  006E22  0A0F               	xorlw	15	; case 25
 39865  006E24  B4D8               	btfsc	status,2,c
 39866  006E26  D7D6               	goto	l16690
 39867  006E28  0AE6               	xorlw	230	; case 255
 39868  006E2A  A4D8               	btfss	status,2,c
 39869  006E2C  0012               	return	
 39870  006E2E  D7A1               	goto	l16648
 39871  006E30                     __end_of_GPIOSet:
 39872                           	opt callstack 0
 39873                           
 39874 ;; *************** function _GPIODigitalWrite *****************
 39875 ;; Defined at:
 39876 ;;		line 145 in file "rn2483APP.c"
 39877 ;; Parameters:    Size  Location     Type
 39878 ;;  GPIO            1    wreg     unsigned char 
 39879 ;;  digOut          1    0[BANK0 ] unsigned char 
 39880 ;; Auto vars:     Size  Location     Type
 39881 ;;  GPIO            1    1[BANK0 ] unsigned char 
 39882 ;; Return value:  Size  Location     Type
 39883 ;;                  1    wreg      void 
 39884 ;; Registers used:
 39885 ;;		wreg, status,2, status,0
 39886 ;; Tracked objects:
 39887 ;;		On entry : 0/0
 39888 ;;		On exit  : 0/0
 39889 ;;		Unchanged: 0/0
 39890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39891 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39894 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39895 ;;Total ram usage:        2 bytes
 39896 ;; Hardware stack levels used:    1
 39897 ;; Hardware stack levels required when called:    7
 39898 ;; This function calls:
 39899 ;;		Nothing
 39900 ;; This function is called by:
 39901 ;;		_main
 39902 ;;		_GPIOInit
 39903 ;;		_acuadoriApp
 39904 ;;		_lightSensAcquisition
 39905 ;;		_setSDA
 39906 ;;		_resetSDA
 39907 ;;		_setSCL
 39908 ;;		_resetSCL
 39909 ;; This function uses a non-reentrant model
 39910 ;;
 39911                           
 39912                           	psect	text252
 39913  006E30                     __ptext252:
 39914                           	opt callstack 0
 39915  006E30                     _GPIODigitalWrite:
 39916                           	opt callstack 21
 39917                           
 39918                           ; BSR set to: 0
 39919                           ;incstack = 0
 39920                           ;GPIODigitalWrite@GPIO stored from wreg
 39921  006E30  0100               	movlb	0	; () banked
 39922  006E32  6F61               	movwf	GPIODigitalWrite@GPIO& (0+255),b
 39923                           
 39924                           ;rn2483APP.c: 146: switch(GPIO){
 39925  006E34  D054               	goto	l14314
 39926  006E36                     l14240:
 39927                           
 39928                           ; BSR set to: 0
 39929                           ;rn2483APP.c: 148: digOut? LATA |= 0x1 : LATA &= ~0x1;
 39930  006E36  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39931  006E38  B4D8               	btfsc	status,2,c
 39932  006E3A  D002               	goto	l14244
 39933                           
 39934                           ; BSR set to: 0
 39935  006E3C  8089               	bsf	3977,0,c	;volatile
 39936  006E3E  0012               	return	
 39937  006E40                     l14244:
 39938                           
 39939                           ; BSR set to: 0
 39940  006E40  9089               	bcf	3977,0,c	;volatile
 39941  006E42  0012               	return	
 39942  006E44                     l14246:
 39943                           
 39944                           ; BSR set to: 0
 39945                           ;rn2483APP.c: 151: digOut? LATA |= 0x2 : LATA &= ~0x2;
 39946  006E44  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39947  006E46  B4D8               	btfsc	status,2,c
 39948  006E48  D002               	goto	l14250
 39949                           
 39950                           ; BSR set to: 0
 39951  006E4A  8289               	bsf	3977,1,c	;volatile
 39952  006E4C  0012               	return	
 39953  006E4E                     l14250:
 39954                           
 39955                           ; BSR set to: 0
 39956  006E4E  9289               	bcf	3977,1,c	;volatile
 39957  006E50  0012               	return	
 39958  006E52                     l14252:
 39959                           
 39960                           ; BSR set to: 0
 39961                           ;rn2483APP.c: 154: digOut? LATA |= 0x4 : LATA &= ~0x4;
 39962  006E52  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39963  006E54  B4D8               	btfsc	status,2,c
 39964  006E56  D002               	goto	l14256
 39965                           
 39966                           ; BSR set to: 0
 39967  006E58  8489               	bsf	3977,2,c	;volatile
 39968  006E5A  0012               	return	
 39969  006E5C                     l14256:
 39970                           
 39971                           ; BSR set to: 0
 39972  006E5C  9489               	bcf	3977,2,c	;volatile
 39973  006E5E  0012               	return	
 39974  006E60                     l14258:
 39975                           
 39976                           ; BSR set to: 0
 39977                           ;rn2483APP.c: 157: digOut? LATA |= 0x8 : LATA &= ~0x8;
 39978  006E60  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39979  006E62  B4D8               	btfsc	status,2,c
 39980  006E64  D002               	goto	l14262
 39981                           
 39982                           ; BSR set to: 0
 39983  006E66  8689               	bsf	3977,3,c	;volatile
 39984  006E68  0012               	return	
 39985  006E6A                     l14262:
 39986                           
 39987                           ; BSR set to: 0
 39988  006E6A  9689               	bcf	3977,3,c	;volatile
 39989  006E6C  0012               	return	
 39990  006E6E                     l14264:
 39991                           
 39992                           ; BSR set to: 0
 39993                           ;rn2483APP.c: 160: digOut? LATA |= 0x10 : LATA &= ~0x10;
 39994  006E6E  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39995  006E70  B4D8               	btfsc	status,2,c
 39996  006E72  D002               	goto	l14268
 39997                           
 39998                           ; BSR set to: 0
 39999  006E74  8889               	bsf	3977,4,c	;volatile
 40000  006E76  0012               	return	
 40001  006E78                     l14268:
 40002                           
 40003                           ; BSR set to: 0
 40004  006E78  9889               	bcf	3977,4,c	;volatile
 40005  006E7A  0012               	return	
 40006  006E7C                     l14270:
 40007                           
 40008                           ; BSR set to: 0
 40009                           ;rn2483APP.c: 163: digOut? LATA |= 0x20 : LATA &= ~0x20;
 40010  006E7C  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40011  006E7E  B4D8               	btfsc	status,2,c
 40012  006E80  D002               	goto	l14274
 40013                           
 40014                           ; BSR set to: 0
 40015  006E82  8A89               	bsf	3977,5,c	;volatile
 40016  006E84  0012               	return	
 40017  006E86                     l14274:
 40018                           
 40019                           ; BSR set to: 0
 40020  006E86  9A89               	bcf	3977,5,c	;volatile
 40021  006E88  0012               	return	
 40022  006E8A                     l14276:
 40023                           
 40024                           ; BSR set to: 0
 40025                           ;rn2483APP.c: 166: digOut? LATE |= 0x1 : LATE &= ~0x1;
 40026  006E8A  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40027  006E8C  B4D8               	btfsc	status,2,c
 40028  006E8E  D002               	goto	l14280
 40029                           
 40030                           ; BSR set to: 0
 40031  006E90  808D               	bsf	3981,0,c	;volatile
 40032  006E92  0012               	return	
 40033  006E94                     l14280:
 40034                           
 40035                           ; BSR set to: 0
 40036  006E94  908D               	bcf	3981,0,c	;volatile
 40037  006E96  0012               	return	
 40038  006E98                     l14282:
 40039                           
 40040                           ; BSR set to: 0
 40041                           ;rn2483APP.c: 169: digOut? LATE |= 0x2 : LATE &= ~0x2;
 40042  006E98  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40043  006E9A  B4D8               	btfsc	status,2,c
 40044  006E9C  D002               	goto	l14286
 40045                           
 40046                           ; BSR set to: 0
 40047  006E9E  828D               	bsf	3981,1,c	;volatile
 40048  006EA0  0012               	return	
 40049  006EA2                     l14286:
 40050                           
 40051                           ; BSR set to: 0
 40052  006EA2  928D               	bcf	3981,1,c	;volatile
 40053  006EA4  0012               	return	
 40054  006EA6                     l14288:
 40055                           
 40056                           ; BSR set to: 0
 40057                           ;rn2483APP.c: 172: digOut? LATD |= 0x4 : LATD &= ~0x4;
 40058  006EA6  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40059  006EA8  B4D8               	btfsc	status,2,c
 40060  006EAA  D002               	goto	l14292
 40061                           
 40062                           ; BSR set to: 0
 40063  006EAC  848C               	bsf	3980,2,c	;volatile
 40064  006EAE  0012               	return	
 40065  006EB0                     l14292:
 40066                           
 40067                           ; BSR set to: 0
 40068  006EB0  948C               	bcf	3980,2,c	;volatile
 40069  006EB2  0012               	return	
 40070  006EB4                     l14294:
 40071                           
 40072                           ; BSR set to: 0
 40073                           ;rn2483APP.c: 175: digOut? LATE |= 0x4 : LATE &= ~0x4;
 40074  006EB4  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40075  006EB6  B4D8               	btfsc	status,2,c
 40076  006EB8  D002               	goto	l14298
 40077                           
 40078                           ; BSR set to: 0
 40079  006EBA  848D               	bsf	3981,2,c	;volatile
 40080  006EBC  0012               	return	
 40081  006EBE                     l14298:
 40082                           
 40083                           ; BSR set to: 0
 40084  006EBE  948D               	bcf	3981,2,c	;volatile
 40085  006EC0  0012               	return	
 40086  006EC2                     l14300:
 40087                           
 40088                           ; BSR set to: 0
 40089                           ;rn2483APP.c: 178: digOut? LATC |= 0x20 : LATC &= ~0x20;
 40090  006EC2  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40091  006EC4  B4D8               	btfsc	status,2,c
 40092  006EC6  D002               	goto	l14304
 40093                           
 40094                           ; BSR set to: 0
 40095  006EC8  8A8B               	bsf	3979,5,c	;volatile
 40096  006ECA  0012               	return	
 40097  006ECC                     l14304:
 40098                           
 40099                           ; BSR set to: 0
 40100  006ECC  9A8B               	bcf	3979,5,c	;volatile
 40101  006ECE  0012               	return	
 40102  006ED0                     l14306:
 40103                           
 40104                           ; BSR set to: 0
 40105                           ;rn2483APP.c: 181: digOut? LATD |= 0x20 : LATD &= ~0x20;
 40106  006ED0  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40107  006ED2  B4D8               	btfsc	status,2,c
 40108  006ED4  D002               	goto	l14310
 40109                           
 40110                           ; BSR set to: 0
 40111  006ED6  8A8C               	bsf	3980,5,c	;volatile
 40112  006ED8  0012               	return	
 40113  006EDA                     l14310:
 40114                           
 40115                           ; BSR set to: 0
 40116  006EDA  9A8C               	bcf	3980,5,c	;volatile
 40117  006EDC  0012               	return	
 40118  006EDE                     l14314:
 40119  006EDE  0100               	movlb	0	; () banked
 40120  006EE0  5161               	movf	GPIODigitalWrite@GPIO& (0+255),w,b
 40121                           
 40122                           ; Switch size 1, requested type "simple"
 40123                           ; Number of cases is 12, Range of values is 0 to 255
 40124                           ; switch strategies available:
 40125                           ; Name         Instructions Cycles
 40126                           ; simple_byte           37    19 (average)
 40127                           ;	Chosen strategy is simple_byte
 40128  006EE2  0A00               	xorlw	0	; case 0
 40129  006EE4  B4D8               	btfsc	status,2,c
 40130  006EE6  D7A7               	goto	l14240
 40131  006EE8  0A01               	xorlw	1	; case 1
 40132  006EEA  B4D8               	btfsc	status,2,c
 40133  006EEC  D7AB               	goto	l14246
 40134  006EEE  0A03               	xorlw	3	; case 2
 40135  006EF0  B4D8               	btfsc	status,2,c
 40136  006EF2  D7AF               	goto	l14252
 40137  006EF4  0A01               	xorlw	1	; case 3
 40138  006EF6  B4D8               	btfsc	status,2,c
 40139  006EF8  D7B3               	goto	l14258
 40140  006EFA  0A07               	xorlw	7	; case 4
 40141  006EFC  B4D8               	btfsc	status,2,c
 40142  006EFE  D7BE               	goto	l14270
 40143  006F00  0A01               	xorlw	1	; case 5
 40144  006F02  B4D8               	btfsc	status,2,c
 40145  006F04  D7C2               	goto	l14276
 40146  006F06  0A03               	xorlw	3	; case 6
 40147  006F08  B4D8               	btfsc	status,2,c
 40148  006F0A  D7C6               	goto	l14282
 40149  006F0C  0A01               	xorlw	1	; case 7
 40150  006F0E  B4D8               	btfsc	status,2,c
 40151  006F10  D7D1               	goto	l14294
 40152  006F12  0A16               	xorlw	22	; case 17
 40153  006F14  B4D8               	btfsc	status,2,c
 40154  006F16  D7D5               	goto	l14300
 40155  006F18  0A07               	xorlw	7	; case 22
 40156  006F1A  B4D8               	btfsc	status,2,c
 40157  006F1C  D7C4               	goto	l14288
 40158  006F1E  0A0F               	xorlw	15	; case 25
 40159  006F20  B4D8               	btfsc	status,2,c
 40160  006F22  D7D6               	goto	l14306
 40161  006F24  0AE6               	xorlw	230	; case 255
 40162  006F26  A4D8               	btfss	status,2,c
 40163  006F28  0012               	return	
 40164  006F2A  D7A1               	goto	l14264
 40165  006F2C                     __end_of_GPIODigitalWrite:
 40166                           	opt callstack 0
 40167                           
 40168 ;; *************** function _GPIOAnalogMode *****************
 40169 ;; Defined at:
 40170 ;;		line 54 in file "rn2483APP.c"
 40171 ;; Parameters:    Size  Location     Type
 40172 ;;  GPIO            1    wreg     unsigned char 
 40173 ;;  mode            1    0[BANK0 ] unsigned char 
 40174 ;; Auto vars:     Size  Location     Type
 40175 ;;  GPIO            1    1[BANK0 ] unsigned char 
 40176 ;; Return value:  Size  Location     Type
 40177 ;;                  1    wreg      void 
 40178 ;; Registers used:
 40179 ;;		wreg, status,2, status,0
 40180 ;; Tracked objects:
 40181 ;;		On entry : 0/0
 40182 ;;		On exit  : 0/0
 40183 ;;		Unchanged: 0/0
 40184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40185 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40188 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40189 ;;Total ram usage:        2 bytes
 40190 ;; Hardware stack levels used:    1
 40191 ;; Hardware stack levels required when called:    7
 40192 ;; This function calls:
 40193 ;;		Nothing
 40194 ;; This function is called by:
 40195 ;;		_GPIOInit
 40196 ;; This function uses a non-reentrant model
 40197 ;;
 40198                           
 40199                           	psect	text253
 40200  00640A                     __ptext253:
 40201                           	opt callstack 0
 40202  00640A                     _GPIOAnalogMode:
 40203                           	opt callstack 22
 40204                           
 40205                           ; BSR set to: 0
 40206                           ;incstack = 0
 40207                           ;GPIOAnalogMode@GPIO stored from wreg
 40208  00640A  0100               	movlb	0	; () banked
 40209  00640C  6F61               	movwf	GPIOAnalogMode@GPIO& (0+255),b
 40210                           
 40211                           ;rn2483APP.c: 56: switch(GPIO){
 40212  00640E  D063               	goto	l16804
 40213  006410                     l16736:
 40214                           
 40215                           ; BSR set to: 0
 40216                           ;rn2483APP.c: 58: mode? ANSELA |= 0x1 : ANSELA &= ~(0x1);
 40217  006410  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40218  006412  B4D8               	btfsc	status,2,c
 40219  006414  D003               	goto	l16740
 40220                           
 40221                           ; BSR set to: 0
 40222  006416  010F               	movlb	15	; () banked
 40223  006418  8138               	bsf	56,0,b	;volatile
 40224  00641A  0012               	return	
 40225  00641C                     l16740:
 40226                           
 40227                           ; BSR set to: 0
 40228  00641C  010F               	movlb	15	; () banked
 40229  00641E  9138               	bcf	56,0,b	;volatile
 40230  006420  0012               	return	
 40231  006422                     l16742:
 40232                           
 40233                           ; BSR set to: 0
 40234                           ;rn2483APP.c: 61: mode? ANSELA |= 0x2 : ANSELA &= ~(0x2);
 40235  006422  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40236  006424  B4D8               	btfsc	status,2,c
 40237  006426  D003               	goto	l16746
 40238                           
 40239                           ; BSR set to: 0
 40240  006428  010F               	movlb	15	; () banked
 40241  00642A  8338               	bsf	56,1,b	;volatile
 40242  00642C  0012               	return	
 40243  00642E                     l16746:
 40244                           
 40245                           ; BSR set to: 0
 40246  00642E  010F               	movlb	15	; () banked
 40247  006430  9338               	bcf	56,1,b	;volatile
 40248  006432  0012               	return	
 40249  006434                     l16748:
 40250                           
 40251                           ; BSR set to: 0
 40252                           ;rn2483APP.c: 64: mode? ANSELA |= 0x4 : ANSELA &= ~(0x4);
 40253  006434  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40254  006436  B4D8               	btfsc	status,2,c
 40255  006438  D003               	goto	l16752
 40256                           
 40257                           ; BSR set to: 0
 40258  00643A  010F               	movlb	15	; () banked
 40259  00643C  8538               	bsf	56,2,b	;volatile
 40260  00643E  0012               	return	
 40261  006440                     l16752:
 40262                           
 40263                           ; BSR set to: 0
 40264  006440  010F               	movlb	15	; () banked
 40265  006442  9538               	bcf	56,2,b	;volatile
 40266  006444  0012               	return	
 40267  006446                     l16754:
 40268                           
 40269                           ; BSR set to: 0
 40270                           ;rn2483APP.c: 67: mode? ANSELA |= 0x8 : ANSELA &= ~(0x8);
 40271  006446  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40272  006448  B4D8               	btfsc	status,2,c
 40273  00644A  D003               	goto	l16758
 40274                           
 40275                           ; BSR set to: 0
 40276  00644C  010F               	movlb	15	; () banked
 40277  00644E  8738               	bsf	56,3,b	;volatile
 40278  006450  0012               	return	
 40279  006452                     l16758:
 40280                           
 40281                           ; BSR set to: 0
 40282  006452  010F               	movlb	15	; () banked
 40283  006454  9738               	bcf	56,3,b	;volatile
 40284  006456  0012               	return	
 40285  006458                     l16760:
 40286                           
 40287                           ; BSR set to: 0
 40288                           ;rn2483APP.c: 70: mode? ANSELA |= 0x20 : ANSELA &= ~(0x20);
 40289  006458  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40290  00645A  B4D8               	btfsc	status,2,c
 40291  00645C  D003               	goto	l16764
 40292                           
 40293                           ; BSR set to: 0
 40294  00645E  010F               	movlb	15	; () banked
 40295  006460  8B38               	bsf	56,5,b	;volatile
 40296  006462  0012               	return	
 40297  006464                     l16764:
 40298                           
 40299                           ; BSR set to: 0
 40300  006464  010F               	movlb	15	; () banked
 40301  006466  9B38               	bcf	56,5,b	;volatile
 40302  006468  0012               	return	
 40303  00646A                     l16766:
 40304                           
 40305                           ; BSR set to: 0
 40306                           ;rn2483APP.c: 73: mode? ANSELE |= 0x1 : ANSELE &= ~(0x1);
 40307  00646A  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40308  00646C  B4D8               	btfsc	status,2,c
 40309  00646E  D003               	goto	l16770
 40310                           
 40311                           ; BSR set to: 0
 40312  006470  010F               	movlb	15	; () banked
 40313  006472  813C               	bsf	60,0,b	;volatile
 40314  006474  0012               	return	
 40315  006476                     l16770:
 40316                           
 40317                           ; BSR set to: 0
 40318  006476  010F               	movlb	15	; () banked
 40319  006478  913C               	bcf	60,0,b	;volatile
 40320  00647A  0012               	return	
 40321  00647C                     l16772:
 40322                           
 40323                           ; BSR set to: 0
 40324                           ;rn2483APP.c: 76: mode? ANSELE |= 0x2 : ANSELE &= ~(0x2);
 40325  00647C  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40326  00647E  B4D8               	btfsc	status,2,c
 40327  006480  D003               	goto	l16776
 40328                           
 40329                           ; BSR set to: 0
 40330  006482  010F               	movlb	15	; () banked
 40331  006484  833C               	bsf	60,1,b	;volatile
 40332  006486  0012               	return	
 40333  006488                     l16776:
 40334                           
 40335                           ; BSR set to: 0
 40336  006488  010F               	movlb	15	; () banked
 40337  00648A  933C               	bcf	60,1,b	;volatile
 40338  00648C  0012               	return	
 40339  00648E                     l16778:
 40340                           
 40341                           ; BSR set to: 0
 40342                           ;rn2483APP.c: 79: mode? ANSELD |= 0x4 : ANSELD &= ~(0x4);
 40343  00648E  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40344  006490  B4D8               	btfsc	status,2,c
 40345  006492  D003               	goto	l16782
 40346                           
 40347                           ; BSR set to: 0
 40348  006494  010F               	movlb	15	; () banked
 40349  006496  853B               	bsf	59,2,b	;volatile
 40350  006498  0012               	return	
 40351  00649A                     l16782:
 40352                           
 40353                           ; BSR set to: 0
 40354  00649A  010F               	movlb	15	; () banked
 40355  00649C  953B               	bcf	59,2,b	;volatile
 40356  00649E  0012               	return	
 40357  0064A0                     l16784:
 40358                           
 40359                           ; BSR set to: 0
 40360                           ;rn2483APP.c: 82: mode? ANSELE |= 0x4 : ANSELE &= ~(0x4);
 40361  0064A0  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40362  0064A2  B4D8               	btfsc	status,2,c
 40363  0064A4  D003               	goto	l16788
 40364                           
 40365                           ; BSR set to: 0
 40366  0064A6  010F               	movlb	15	; () banked
 40367  0064A8  853C               	bsf	60,2,b	;volatile
 40368  0064AA  0012               	return	
 40369  0064AC                     l16788:
 40370                           
 40371                           ; BSR set to: 0
 40372  0064AC  010F               	movlb	15	; () banked
 40373  0064AE  953C               	bcf	60,2,b	;volatile
 40374  0064B0  0012               	return	
 40375  0064B2                     l16790:
 40376                           
 40377                           ; BSR set to: 0
 40378                           ;rn2483APP.c: 85: mode? ANSELC |= 0x20 : ANSELC &= ~(0x20);
 40379  0064B2  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40380  0064B4  B4D8               	btfsc	status,2,c
 40381  0064B6  D003               	goto	l16794
 40382                           
 40383                           ; BSR set to: 0
 40384  0064B8  010F               	movlb	15	; () banked
 40385  0064BA  8B3A               	bsf	58,5,b	;volatile
 40386  0064BC  0012               	return	
 40387  0064BE                     l16794:
 40388                           
 40389                           ; BSR set to: 0
 40390  0064BE  010F               	movlb	15	; () banked
 40391  0064C0  9B3A               	bcf	58,5,b	;volatile
 40392  0064C2  0012               	return	
 40393  0064C4                     l16796:
 40394                           
 40395                           ; BSR set to: 0
 40396                           ;rn2483APP.c: 88: mode? ANSELD |= 0x20 : ANSELD &= ~(0x20);
 40397  0064C4  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40398  0064C6  B4D8               	btfsc	status,2,c
 40399  0064C8  D003               	goto	l16800
 40400                           
 40401                           ; BSR set to: 0
 40402  0064CA  010F               	movlb	15	; () banked
 40403  0064CC  8B3B               	bsf	59,5,b	;volatile
 40404  0064CE  0012               	return	
 40405  0064D0                     l16800:
 40406                           
 40407                           ; BSR set to: 0
 40408  0064D0  010F               	movlb	15	; () banked
 40409  0064D2  9B3B               	bcf	59,5,b	;volatile
 40410  0064D4  0012               	return	
 40411  0064D6                     l16804:
 40412  0064D6  0100               	movlb	0	; () banked
 40413  0064D8  5161               	movf	GPIOAnalogMode@GPIO& (0+255),w,b
 40414                           
 40415                           ; Switch size 1, requested type "simple"
 40416                           ; Number of cases is 11, Range of values is 0 to 25
 40417                           ; switch strategies available:
 40418                           ; Name         Instructions Cycles
 40419                           ; simple_byte           34    18 (average)
 40420                           ;	Chosen strategy is simple_byte
 40421  0064DA  0A00               	xorlw	0	; case 0
 40422  0064DC  B4D8               	btfsc	status,2,c
 40423  0064DE  D798               	goto	l16736
 40424  0064E0  0A01               	xorlw	1	; case 1
 40425  0064E2  B4D8               	btfsc	status,2,c
 40426  0064E4  D79E               	goto	l16742
 40427  0064E6  0A03               	xorlw	3	; case 2
 40428  0064E8  B4D8               	btfsc	status,2,c
 40429  0064EA  D7A4               	goto	l16748
 40430  0064EC  0A01               	xorlw	1	; case 3
 40431  0064EE  B4D8               	btfsc	status,2,c
 40432  0064F0  D7AA               	goto	l16754
 40433  0064F2  0A07               	xorlw	7	; case 4
 40434  0064F4  B4D8               	btfsc	status,2,c
 40435  0064F6  D7B0               	goto	l16760
 40436  0064F8  0A01               	xorlw	1	; case 5
 40437  0064FA  B4D8               	btfsc	status,2,c
 40438  0064FC  D7B6               	goto	l16766
 40439  0064FE  0A03               	xorlw	3	; case 6
 40440  006500  B4D8               	btfsc	status,2,c
 40441  006502  D7BC               	goto	l16772
 40442  006504  0A01               	xorlw	1	; case 7
 40443  006506  B4D8               	btfsc	status,2,c
 40444  006508  D7CB               	goto	l16784
 40445  00650A  0A16               	xorlw	22	; case 17
 40446  00650C  B4D8               	btfsc	status,2,c
 40447  00650E  D7D1               	goto	l16790
 40448  006510  0A07               	xorlw	7	; case 22
 40449  006512  B4D8               	btfsc	status,2,c
 40450  006514  D7BC               	goto	l16778
 40451  006516  0A0F               	xorlw	15	; case 25
 40452  006518  A4D8               	btfss	status,2,c
 40453  00651A  0012               	return	
 40454  00651C  D7D3               	goto	l16796
 40455  00651E                     __end_of_GPIOAnalogMode:
 40456                           	opt callstack 0
 40457                           
 40458 ;; *************** function _GPIODigitalToogle *****************
 40459 ;; Defined at:
 40460 ;;		line 227 in file "rn2483APP.c"
 40461 ;; Parameters:    Size  Location     Type
 40462 ;;  GPIO            1    wreg     unsigned char 
 40463 ;; Auto vars:     Size  Location     Type
 40464 ;;  GPIO            1    0[BANK0 ] unsigned char 
 40465 ;; Return value:  Size  Location     Type
 40466 ;;                  1    wreg      void 
 40467 ;; Registers used:
 40468 ;;		wreg, status,2, status,0
 40469 ;; Tracked objects:
 40470 ;;		On entry : 0/0
 40471 ;;		On exit  : 0/0
 40472 ;;		Unchanged: 0/0
 40473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40475 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40477 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40478 ;;Total ram usage:        1 bytes
 40479 ;; Hardware stack levels used:    1
 40480 ;; Hardware stack levels required when called:    7
 40481 ;; This function calls:
 40482 ;;		Nothing
 40483 ;; This function is called by:
 40484 ;;		_main
 40485 ;; This function uses a non-reentrant model
 40486 ;;
 40487                           
 40488                           	psect	text254
 40489  007F18                     __ptext254:
 40490                           	opt callstack 0
 40491  007F18                     _GPIODigitalToogle:
 40492                           	opt callstack 23
 40493                           
 40494                           ;incstack = 0
 40495                           ;GPIODigitalToogle@GPIO stored from wreg
 40496  007F18  0100               	movlb	0	; () banked
 40497  007F1A  6F60               	movwf	GPIODigitalToogle@GPIO& (0+255),b
 40498                           
 40499                           ;rn2483APP.c: 228: switch(GPIO){
 40500  007F1C  D024               	goto	l17144
 40501  007F1E                     l17118:
 40502                           
 40503                           ; BSR set to: 0
 40504                           ;rn2483APP.c: 230: LATA ^= 0x1;
 40505  007F1E  0E01               	movlw	1
 40506  007F20  1A89               	xorwf	3977,f,c	;volatile
 40507                           
 40508                           ;rn2483APP.c: 231: break;
 40509  007F22  0012               	return	
 40510  007F24                     l17120:
 40511                           
 40512                           ; BSR set to: 0
 40513                           ;rn2483APP.c: 233: LATA ^= 0x2;
 40514  007F24  0E02               	movlw	2
 40515  007F26  1A89               	xorwf	3977,f,c	;volatile
 40516                           
 40517                           ;rn2483APP.c: 234: break;
 40518  007F28  0012               	return	
 40519  007F2A                     l17122:
 40520                           
 40521                           ; BSR set to: 0
 40522                           ;rn2483APP.c: 236: LATA ^= 0x4;
 40523  007F2A  0E04               	movlw	4
 40524  007F2C  1A89               	xorwf	3977,f,c	;volatile
 40525                           
 40526                           ;rn2483APP.c: 237: break;
 40527  007F2E  0012               	return	
 40528  007F30                     l17124:
 40529                           
 40530                           ; BSR set to: 0
 40531                           ;rn2483APP.c: 239: LATA ^= 0x8;
 40532  007F30  0E08               	movlw	8
 40533  007F32  1A89               	xorwf	3977,f,c	;volatile
 40534                           
 40535                           ;rn2483APP.c: 240: break;
 40536  007F34  0012               	return	
 40537  007F36                     l17126:
 40538                           
 40539                           ; BSR set to: 0
 40540                           ;rn2483APP.c: 242: LATA ^= 0x10;
 40541  007F36  0E10               	movlw	16
 40542  007F38  1A89               	xorwf	3977,f,c	;volatile
 40543                           
 40544                           ;rn2483APP.c: 243: break;
 40545  007F3A  0012               	return	
 40546  007F3C                     l17128:
 40547                           
 40548                           ; BSR set to: 0
 40549                           ;rn2483APP.c: 245: LATA ^= 0x20;
 40550  007F3C  0E20               	movlw	32
 40551  007F3E  1A89               	xorwf	3977,f,c	;volatile
 40552                           
 40553                           ;rn2483APP.c: 246: break;
 40554  007F40  0012               	return	
 40555  007F42                     l17130:
 40556                           
 40557                           ; BSR set to: 0
 40558                           ;rn2483APP.c: 248: LATE ^= 0x1;
 40559  007F42  0E01               	movlw	1
 40560  007F44  1A8D               	xorwf	3981,f,c	;volatile
 40561                           
 40562                           ;rn2483APP.c: 249: break;
 40563  007F46  0012               	return	
 40564  007F48                     l17132:
 40565                           
 40566                           ; BSR set to: 0
 40567                           ;rn2483APP.c: 251: LATE ^= 0x2;
 40568  007F48  0E02               	movlw	2
 40569  007F4A  1A8D               	xorwf	3981,f,c	;volatile
 40570                           
 40571                           ;rn2483APP.c: 252: break;
 40572  007F4C  0012               	return	
 40573  007F4E                     l17134:
 40574                           
 40575                           ; BSR set to: 0
 40576                           ;rn2483APP.c: 254: LATD ^= 0x4;
 40577  007F4E  0E04               	movlw	4
 40578  007F50  1A8C               	xorwf	3980,f,c	;volatile
 40579                           
 40580                           ;rn2483APP.c: 255: break;
 40581  007F52  0012               	return	
 40582  007F54                     l17136:
 40583                           
 40584                           ; BSR set to: 0
 40585                           ;rn2483APP.c: 257: LATE ^= 0x4;
 40586  007F54  0E04               	movlw	4
 40587  007F56  1A8D               	xorwf	3981,f,c	;volatile
 40588                           
 40589                           ;rn2483APP.c: 258: break;
 40590  007F58  0012               	return	
 40591  007F5A                     l17138:
 40592                           
 40593                           ; BSR set to: 0
 40594                           ;rn2483APP.c: 260: LATC ^= 0x20;
 40595  007F5A  0E20               	movlw	32
 40596  007F5C  1A8B               	xorwf	3979,f,c	;volatile
 40597                           
 40598                           ;rn2483APP.c: 261: break;
 40599  007F5E  0012               	return	
 40600  007F60                     l17140:
 40601                           
 40602                           ; BSR set to: 0
 40603                           ;rn2483APP.c: 263: LATD ^= 0x20;
 40604  007F60  0E20               	movlw	32
 40605  007F62  1A8C               	xorwf	3980,f,c	;volatile
 40606                           
 40607                           ;rn2483APP.c: 264: break;
 40608  007F64  0012               	return	
 40609  007F66                     l17144:
 40610  007F66  0100               	movlb	0	; () banked
 40611  007F68  5160               	movf	GPIODigitalToogle@GPIO& (0+255),w,b
 40612                           
 40613                           ; Switch size 1, requested type "simple"
 40614                           ; Number of cases is 12, Range of values is 0 to 255
 40615                           ; switch strategies available:
 40616                           ; Name         Instructions Cycles
 40617                           ; simple_byte           37    19 (average)
 40618                           ;	Chosen strategy is simple_byte
 40619  007F6A  0A00               	xorlw	0	; case 0
 40620  007F6C  B4D8               	btfsc	status,2,c
 40621  007F6E  D7D7               	goto	l17118
 40622  007F70  0A01               	xorlw	1	; case 1
 40623  007F72  B4D8               	btfsc	status,2,c
 40624  007F74  D7D7               	goto	l17120
 40625  007F76  0A03               	xorlw	3	; case 2
 40626  007F78  B4D8               	btfsc	status,2,c
 40627  007F7A  D7D7               	goto	l17122
 40628  007F7C  0A01               	xorlw	1	; case 3
 40629  007F7E  B4D8               	btfsc	status,2,c
 40630  007F80  D7D7               	goto	l17124
 40631  007F82  0A07               	xorlw	7	; case 4
 40632  007F84  B4D8               	btfsc	status,2,c
 40633  007F86  D7DA               	goto	l17128
 40634  007F88  0A01               	xorlw	1	; case 5
 40635  007F8A  B4D8               	btfsc	status,2,c
 40636  007F8C  D7DA               	goto	l17130
 40637  007F8E  0A03               	xorlw	3	; case 6
 40638  007F90  B4D8               	btfsc	status,2,c
 40639  007F92  D7DA               	goto	l17132
 40640  007F94  0A01               	xorlw	1	; case 7
 40641  007F96  B4D8               	btfsc	status,2,c
 40642  007F98  D7DD               	goto	l17136
 40643  007F9A  0A16               	xorlw	22	; case 17
 40644  007F9C  B4D8               	btfsc	status,2,c
 40645  007F9E  D7DD               	goto	l17138
 40646  007FA0  0A07               	xorlw	7	; case 22
 40647  007FA2  B4D8               	btfsc	status,2,c
 40648  007FA4  D7D4               	goto	l17134
 40649  007FA6  0A0F               	xorlw	15	; case 25
 40650  007FA8  B4D8               	btfsc	status,2,c
 40651  007FAA  D7DA               	goto	l17140
 40652  007FAC  0AE6               	xorlw	230	; case 255
 40653  007FAE  A4D8               	btfss	status,2,c
 40654  007FB0  0012               	return	
 40655  007FB2  D7C1               	goto	l17126
 40656  007FB4                     __end_of_GPIODigitalToogle:
 40657                           	opt callstack 0
 40658                           
 40659 ;; *************** function _INTERRUPT_InterruptManager *****************
 40660 ;; Defined at:
 40661 ;;		line 63 in file "mcc_generated_files/interrupt_manager.c"
 40662 ;; Parameters:    Size  Location     Type
 40663 ;;		None
 40664 ;; Auto vars:     Size  Location     Type
 40665 ;;		None
 40666 ;; Return value:  Size  Location     Type
 40667 ;;                  1    wreg      void 
 40668 ;; Registers used:
 40669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40670 ;; Tracked objects:
 40671 ;;		On entry : 0/0
 40672 ;;		On exit  : 0/0
 40673 ;;		Unchanged: 0/0
 40674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40677 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40678 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40679 ;;Total ram usage:        8 bytes
 40680 ;; Hardware stack levels used:    1
 40681 ;; Hardware stack levels required when called:    6
 40682 ;; This function calls:
 40683 ;;		_ADC_ISR
 40684 ;;		_INT1_ISR
 40685 ;;		_INT2_ISR
 40686 ;;		_PIN_MANAGER_IOC
 40687 ;;		_TMR1_ISR
 40688 ;;		_TMR3_ISR
 40689 ;;		_TMR5_ISR
 40690 ;; This function is called by:
 40691 ;;		Interrupt level 2
 40692 ;; This function uses a non-reentrant model
 40693 ;;
 40694                           
 40695                           	psect	intcode
 40696  000008                     __pintcode:
 40697                           	opt callstack 0
 40698  000008                     _INTERRUPT_InterruptManager:
 40699                           	opt callstack 10
 40700                           
 40701                           ; BSR set to: 0
 40702                           ;incstack = 0
 40703  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 40704  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 40705  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 40706  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 40707  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 40708  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 40709  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 40710  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 40711  000028  EE1A  F0F8         	lfsr	1,___inthi_sp
 40712                           
 40713                           ;interrupt_manager.c: 66: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 40714  00002C  B6F0               	btfsc	4080,3,c	;volatile
 40715  00002E  A0F0               	btfss	4080,0,c	;volatile
 40716  000030  D003               	goto	i2l2308
 40717                           
 40718                           ;interrupt_manager.c: 67: {;interrupt_manager.c: 68: INT1_ISR();
 40719  000032  EC4C  F054         	call	_INT1_ISR	;wreg free
 40720                           
 40721                           ;interrupt_manager.c: 69: }
 40722  000036  D025               	goto	i2l2318
 40723  000038                     i2l2308:
 40724                           
 40725                           ;interrupt_manager.c: 70: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 40726  000038  B8F0               	btfsc	4080,4,c	;volatile
 40727  00003A  A2F0               	btfss	4080,1,c	;volatile
 40728  00003C  D003               	goto	i2l2310
 40729                           
 40730                           ;interrupt_manager.c: 71: {;interrupt_manager.c: 72: INT2_ISR();
 40731  00003E  EC48  F054         	call	_INT2_ISR	;wreg free
 40732                           
 40733                           ;interrupt_manager.c: 73: }
 40734  000042  D01F               	goto	i2l2318
 40735  000044                     i2l2310:
 40736                           
 40737                           ;interrupt_manager.c: 74: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 40738  000044  B6F2               	btfsc	4082,3,c	;volatile
 40739  000046  A0F2               	btfss	4082,0,c	;volatile
 40740  000048  D003               	goto	i2l2312
 40741                           
 40742                           ;interrupt_manager.c: 75: {;interrupt_manager.c: 76: PIN_MANAGER_IOC();
 40743  00004A  EC37  F054         	call	_PIN_MANAGER_IOC	;wreg free
 40744                           
 40745                           ;interrupt_manager.c: 77: }
 40746  00004E  D019               	goto	i2l2318
 40747  000050                     i2l2312:
 40748                           
 40749                           ;interrupt_manager.c: 78: else if(INTCONbits.PEIE == 1)
 40750  000050  ACF2               	btfss	4082,6,c	;volatile
 40751  000052  D017               	goto	i2l2318
 40752                           
 40753                           ;interrupt_manager.c: 79: {;interrupt_manager.c: 80: if(PIE1bits.ADIE == 1 && PIR1bits.A
      +                          DIF == 1)
 40754  000054  BC9D               	btfsc	3997,6,c	;volatile
 40755  000056  AC9E               	btfss	3998,6,c	;volatile
 40756  000058  D003               	goto	i2l2315
 40757                           
 40758                           ;interrupt_manager.c: 81: {;interrupt_manager.c: 82: ADC_ISR();
 40759  00005A  EC78  F054         	call	_ADC_ISR	;wreg free
 40760                           
 40761                           ;interrupt_manager.c: 83: }
 40762  00005E  D011               	goto	i2l2318
 40763  000060                     i2l2315:
 40764                           
 40765                           ;interrupt_manager.c: 84: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 40766  000060  B27D               	btfsc	3965,1,c	;volatile
 40767  000062  A27E               	btfss	3966,1,c	;volatile
 40768  000064  D003               	goto	i2l2317
 40769                           
 40770                           ;interrupt_manager.c: 85: {;interrupt_manager.c: 86: TMR5_ISR();
 40771  000066  ECE1  F04F         	call	_TMR5_ISR	;wreg free
 40772                           
 40773                           ;interrupt_manager.c: 87: }
 40774  00006A  D00B               	goto	i2l2318
 40775  00006C                     i2l2317:
 40776                           
 40777                           ;interrupt_manager.c: 88: else if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 40778  00006C  B2A0               	btfsc	4000,1,c	;volatile
 40779  00006E  A2A1               	btfss	4001,1,c	;volatile
 40780  000070  D003               	goto	i2l2319
 40781                           
 40782                           ;interrupt_manager.c: 89: {;interrupt_manager.c: 90: TMR3_ISR();
 40783  000072  ECF8  F04F         	call	_TMR3_ISR	;wreg free
 40784                           
 40785                           ;interrupt_manager.c: 91: }
 40786  000076  D005               	goto	i2l2318
 40787  000078                     i2l2319:
 40788                           
 40789                           ;interrupt_manager.c: 92: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 40790  000078  B09D               	btfsc	3997,0,c	;volatile
 40791  00007A  A09E               	btfss	3998,0,c	;volatile
 40792  00007C  D002               	goto	i2l2318
 40793                           
 40794                           ;interrupt_manager.c: 93: {;interrupt_manager.c: 94: TMR1_ISR();
 40795  00007E  EC29  F053         	call	_TMR1_ISR	;wreg free
 40796  000082                     i2l2318:
 40797  000082  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 40798  000086  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 40799  00008A  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 40800  00008E  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 40801  000092  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 40802  000096  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 40803  00009A  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 40804  00009E  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 40805  0000A2  0011               	retfie		f
 40806  0000A4                     __end_of_INTERRUPT_InterruptManager:
 40807                           	opt callstack 0
 40808                           
 40809 ;; *************** function _TMR5_ISR *****************
 40810 ;; Defined at:
 40811 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 40812 ;; Parameters:    Size  Location     Type
 40813 ;;		None
 40814 ;; Auto vars:     Size  Location     Type
 40815 ;;		None
 40816 ;; Return value:  Size  Location     Type
 40817 ;;                  1    wreg      void 
 40818 ;; Registers used:
 40819 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 40820 ;; Tracked objects:
 40821 ;;		On entry : 0/0
 40822 ;;		On exit  : 0/0
 40823 ;;		Unchanged: 0/0
 40824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40829 ;;Total ram usage:        0 bytes
 40830 ;; Hardware stack levels used:    1
 40831 ;; Hardware stack levels required when called:    3
 40832 ;; This function calls:
 40833 ;;		Absolute function
 40834 ;;		_TMR5_InterruptTicker
 40835 ;;		_TMR5_WriteTimer
 40836 ;; This function is called by:
 40837 ;;		_INTERRUPT_InterruptManager
 40838 ;; This function uses a non-reentrant model
 40839 ;;
 40840                           
 40841                           	psect	text256
 40842  009FC2                     __ptext256:
 40843                           	opt callstack 0
 40844  009FC2                     _TMR5_ISR:
 40845                           	opt callstack 12
 40846                           
 40847                           ;tmr5.c: 169: PIR5bits.TMR5IF = 0;
 40848                           
 40849                           ;incstack = 0
 40850  009FC2  927E               	bcf	3966,1,c	;volatile
 40851                           
 40852                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 40853  009FC4  C1DF  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 40854  009FC8  C1E0  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 40855  009FCC  EC54  F052         	call	_TMR5_WriteTimer	;wreg free
 40856                           
 40857                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 40858  009FD0  0101               	movlb	1	; () banked
 40859  009FD2  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 40860  009FD4  11DE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 40861  009FD6  B4D8               	btfsc	status,2,c
 40862  009FD8  0012               	return	
 40863                           
 40864                           ; BSR set to: 1
 40865                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 40866  009FDA  D801               	call	i2u1762_48
 40867  009FDC  0012               	return	
 40868  009FDE                     i2u1762_48:
 40869  009FDE  0005               	push	
 40870  009FE0  6EFA               	movwf	pclath,c
 40871  009FE2  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 40872  009FE4  6EFD               	movwf	tosl,c
 40873  009FE6  51DE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 40874  009FE8  6EFE               	movwf	tosh,c
 40875  009FEA  6AFF               	clrf	tosu,c
 40876  009FEC  50FA               	movf	pclath,w,c
 40877  009FEE  0012               	return		;indir
 40878  009FF0                     __end_of_TMR5_ISR:
 40879                           	opt callstack 0
 40880                           
 40881 ;; *************** function _TMR5_WriteTimer *****************
 40882 ;; Defined at:
 40883 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 40884 ;; Parameters:    Size  Location     Type
 40885 ;;  timerVal        2    0[COMRAM] unsigned int 
 40886 ;; Auto vars:     Size  Location     Type
 40887 ;;		None
 40888 ;; Return value:  Size  Location     Type
 40889 ;;                  1    wreg      void 
 40890 ;; Registers used:
 40891 ;;		wreg, status,2
 40892 ;; Tracked objects:
 40893 ;;		On entry : 0/0
 40894 ;;		On exit  : 0/0
 40895 ;;		Unchanged: 0/0
 40896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40897 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40900 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40901 ;;Total ram usage:        2 bytes
 40902 ;; Hardware stack levels used:    1
 40903 ;; This function calls:
 40904 ;;		Nothing
 40905 ;; This function is called by:
 40906 ;;		_TMR5_ISR
 40907 ;;		_TMR5_Reload
 40908 ;; This function uses a non-reentrant model
 40909 ;;
 40910                           
 40911                           	psect	text257
 40912  00A4A8                     __ptext257:
 40913                           	opt callstack 0
 40914  00A4A8                     _TMR5_WriteTimer:
 40915                           	opt callstack 14
 40916                           
 40917                           ;tmr5.c: 130: if (T5CONbits.T5SYNC == 1)
 40918                           
 40919                           ;incstack = 0
 40920  00A4A8  010F               	movlb	15	; () banked
 40921  00A4AA  A54E               	btfss	78,2,b	;volatile
 40922  00A4AC  D007               	goto	i2l16726
 40923                           
 40924                           ; BSR set to: 15
 40925                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 40926  00A4AE  914E               	bcf	78,0,b	;volatile
 40927                           
 40928                           ; BSR set to: 15
 40929                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 40930  00A4B0  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40931  00A4B2  6F50               	movwf	80,b	;volatile
 40932                           
 40933                           ; BSR set to: 15
 40934                           ;tmr5.c: 137: TMR5L = (uint8_t) timerVal;
 40935  00A4B4  C001  FF4F         	movff	TMR5_WriteTimer@timerVal,3919	;volatile
 40936                           
 40937                           ; BSR set to: 15
 40938                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 40939  00A4B8  814E               	bsf	78,0,b	;volatile
 40940                           
 40941                           ;tmr5.c: 141: }
 40942  00A4BA  0012               	return	
 40943  00A4BC                     i2l16726:
 40944                           
 40945                           ; BSR set to: 15
 40946                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 40947  00A4BC  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40948  00A4BE  6F50               	movwf	80,b	;volatile
 40949                           
 40950                           ; BSR set to: 15
 40951                           ;tmr5.c: 146: TMR5L = (uint8_t) timerVal;
 40952  00A4C0  C001  FF4F         	movff	TMR5_WriteTimer@timerVal,3919	;volatile
 40953                           
 40954                           ; BSR set to: 15
 40955  00A4C4  0012               	return		;funcret
 40956  00A4C6                     __end_of_TMR5_WriteTimer:
 40957                           	opt callstack 0
 40958                           
 40959 ;; *************** function _TMR5_InterruptTicker *****************
 40960 ;; Defined at:
 40961 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 40962 ;; Parameters:    Size  Location     Type
 40963 ;;		None
 40964 ;; Auto vars:     Size  Location     Type
 40965 ;;		None
 40966 ;; Return value:  Size  Location     Type
 40967 ;;                  1    wreg      void 
 40968 ;; Registers used:
 40969 ;;		wreg, status,2, status,0, cstack
 40970 ;; Tracked objects:
 40971 ;;		On entry : 0/0
 40972 ;;		On exit  : 0/0
 40973 ;;		Unchanged: 0/0
 40974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40979 ;;Total ram usage:        0 bytes
 40980 ;; Hardware stack levels used:    1
 40981 ;; Hardware stack levels required when called:    2
 40982 ;; This function calls:
 40983 ;;		_timerHandler
 40984 ;;		_timerTick
 40985 ;; This function is called by:
 40986 ;;		_TMR5_Initialize
 40987 ;;		_TMR5_ISR
 40988 ;; This function uses a non-reentrant model
 40989 ;;
 40990                           
 40991                           	psect	text258
 40992  00A864                     __ptext258:
 40993                           	opt callstack 0
 40994  00A864                     _TMR5_InterruptTicker:
 40995                           	opt callstack 12
 40996                           
 40997                           ;tmr5.c: 184: timerTick();
 40998                           
 40999                           ; BSR set to: 15
 41000                           ;incstack = 0
 41001  00A864  EC44  F054         	call	_timerTick	;wreg free
 41002                           
 41003                           ;tmr5.c: 185: timerHandler();
 41004  00A868  ECC6  F02F         	call	_timerHandler	;wreg free
 41005  00A86C  0012               	return		;funcret
 41006  00A86E                     __end_of_TMR5_InterruptTicker:
 41007                           	opt callstack 0
 41008                           
 41009 ;; *************** function _timerTick *****************
 41010 ;; Defined at:
 41011 ;;		line 17 in file "tmrAPP.c"
 41012 ;; Parameters:    Size  Location     Type
 41013 ;;		None
 41014 ;; Auto vars:     Size  Location     Type
 41015 ;;		None
 41016 ;; Return value:  Size  Location     Type
 41017 ;;                  1    wreg      void 
 41018 ;; Registers used:
 41019 ;;		status,2, status,0
 41020 ;; Tracked objects:
 41021 ;;		On entry : 0/0
 41022 ;;		On exit  : 0/0
 41023 ;;		Unchanged: 0/0
 41024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41029 ;;Total ram usage:        0 bytes
 41030 ;; Hardware stack levels used:    1
 41031 ;; This function calls:
 41032 ;;		Nothing
 41033 ;; This function is called by:
 41034 ;;		_TMR5_InterruptTicker
 41035 ;; This function uses a non-reentrant model
 41036 ;;
 41037                           
 41038                           	psect	text259
 41039  00A888                     __ptext259:
 41040                           	opt callstack 0
 41041  00A888                     _timerTick:
 41042                           	opt callstack 13
 41043                           
 41044                           ;tmrAPP.c: 18: msCounter++;
 41045                           
 41046                           ;incstack = 0
 41047  00A888  0101               	movlb	1	; () banked
 41048  00A88A  4B1C               	infsnz	_msCounter& (0+255),f,b
 41049  00A88C  2B1D               	incf	(_msCounter+1)& (0+255),f,b
 41050                           
 41051                           ; BSR set to: 1
 41052  00A88E  0012               	return		;funcret
 41053  00A890                     __end_of_timerTick:
 41054                           	opt callstack 0
 41055                           
 41056 ;; *************** function _timerHandler *****************
 41057 ;; Defined at:
 41058 ;;		line 25 in file "tmrAPP.c"
 41059 ;; Parameters:    Size  Location     Type
 41060 ;;		None
 41061 ;; Auto vars:     Size  Location     Type
 41062 ;;		None
 41063 ;; Return value:  Size  Location     Type
 41064 ;;                  1    wreg      void 
 41065 ;; Registers used:
 41066 ;;		wreg, status,2, status,0, cstack
 41067 ;; Tracked objects:
 41068 ;;		On entry : 0/0
 41069 ;;		On exit  : 0/0
 41070 ;;		Unchanged: 0/0
 41071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41076 ;;Total ram usage:        0 bytes
 41077 ;; Hardware stack levels used:    1
 41078 ;; Hardware stack levels required when called:    1
 41079 ;; This function calls:
 41080 ;;		___lbmod
 41081 ;;		i2___awdiv
 41082 ;;		i2___lwdiv
 41083 ;;		i2___lwmod
 41084 ;; This function is called by:
 41085 ;;		_TMR5_InterruptTicker
 41086 ;; This function uses a non-reentrant model
 41087 ;;
 41088                           
 41089                           	psect	text260
 41090  005F8C                     __ptext260:
 41091                           	opt callstack 0
 41092  005F8C                     _timerHandler:
 41093                           	opt callstack 12
 41094                           
 41095                           ;tmrAPP.c: 26: timer.ms += msCounter;
 41096                           
 41097                           ; BSR set to: 1
 41098                           ;incstack = 0
 41099  005F8C  0101               	movlb	1	; () banked
 41100  005F8E  511C               	movf	_msCounter& (0+255),w,b
 41101  005F90  2700               	addwf	_timer& (0+255),f,b
 41102  005F92  511D               	movf	(_msCounter+1)& (0+255),w,b
 41103  005F94  2301               	addwfc	(_timer+1)& (0+255),f,b
 41104                           
 41105                           ; BSR set to: 1
 41106                           ;tmrAPP.c: 27: msCounter = 0;
 41107  005F96  0E00               	movlw	0
 41108  005F98  6F1D               	movwf	(_msCounter+1)& (0+255),b
 41109  005F9A  0E00               	movlw	0
 41110  005F9C  6F1C               	movwf	_msCounter& (0+255),b
 41111                           
 41112                           ; BSR set to: 1
 41113                           ;tmrAPP.c: 28: if(timer.ms/1000){
 41114  005F9E  C100  F001         	movff	_timer,i2___lwdiv@dividend
 41115  005FA2  C101  F002         	movff	_timer+1,i2___lwdiv@dividend+1
 41116  005FA6  0E03               	movlw	3
 41117  005FA8  6E04               	movwf	i2___lwdiv@divisor+1,c
 41118  005FAA  0EE8               	movlw	232
 41119  005FAC  6E03               	movwf	i2___lwdiv@divisor,c
 41120  005FAE  EC50  F04A         	call	i2___lwdiv	;wreg free
 41121  005FB2  5001               	movf	?i2___lwdiv,w,c
 41122  005FB4  1002               	iorwf	?i2___lwdiv+1,w,c
 41123  005FB6  B4D8               	btfsc	status,2,c
 41124  005FB8  D01B               	goto	i2l3211
 41125                           
 41126                           ;tmrAPP.c: 29: timer.sec += timer.ms/1000;
 41127  005FBA  C100  F001         	movff	_timer,i2___lwdiv@dividend
 41128  005FBE  C101  F002         	movff	_timer+1,i2___lwdiv@dividend+1
 41129  005FC2  0E03               	movlw	3
 41130  005FC4  6E04               	movwf	i2___lwdiv@divisor+1,c
 41131  005FC6  0EE8               	movlw	232
 41132  005FC8  6E03               	movwf	i2___lwdiv@divisor,c
 41133  005FCA  EC50  F04A         	call	i2___lwdiv	;wreg free
 41134  005FCE  5001               	movf	?i2___lwdiv,w,c
 41135  005FD0  0101               	movlb	1	; () banked
 41136  005FD2  2702               	addwf	(_timer+2)& (0+255),f,b
 41137                           
 41138                           ;tmrAPP.c: 30: timer.ms %= 1000;
 41139  005FD4  C100  F001         	movff	_timer,i2___lwmod@dividend
 41140  005FD8  C101  F002         	movff	_timer+1,i2___lwmod@dividend+1
 41141  005FDC  0E03               	movlw	3
 41142  005FDE  6E04               	movwf	i2___lwmod@divisor+1,c
 41143  005FE0  0EE8               	movlw	232
 41144  005FE2  6E03               	movwf	i2___lwmod@divisor,c
 41145  005FE4  ECE3  F04C         	call	i2___lwmod	;wreg free
 41146  005FE8  C001  F100         	movff	?i2___lwmod,_timer
 41147  005FEC  C002  F101         	movff	?i2___lwmod+1,_timer+1
 41148  005FF0                     i2l3211:
 41149                           
 41150                           ;tmrAPP.c: 32: };tmrAPP.c: 33: if (timer.sec/60){
 41151  005FF0  C102  F001         	movff	_timer+2,i2___awdiv@dividend
 41152  005FF4  6A02               	clrf	i2___awdiv@dividend+1,c
 41153  005FF6  0E00               	movlw	0
 41154  005FF8  6E04               	movwf	i2___awdiv@divisor+1,c
 41155  005FFA  0E3C               	movlw	60
 41156  005FFC  6E03               	movwf	i2___awdiv@divisor,c
 41157  005FFE  ECD8  F042         	call	i2___awdiv	;wreg free
 41158  006002  5001               	movf	?i2___awdiv,w,c
 41159  006004  1002               	iorwf	?i2___awdiv+1,w,c
 41160  006006  B4D8               	btfsc	status,2,c
 41161  006008  D013               	goto	i2l3212
 41162                           
 41163                           ;tmrAPP.c: 34: timer.min += timer.sec/60;
 41164  00600A  C102  F001         	movff	_timer+2,i2___awdiv@dividend
 41165  00600E  6A02               	clrf	i2___awdiv@dividend+1,c
 41166  006010  0E00               	movlw	0
 41167  006012  6E04               	movwf	i2___awdiv@divisor+1,c
 41168  006014  0E3C               	movlw	60
 41169  006016  6E03               	movwf	i2___awdiv@divisor,c
 41170  006018  ECD8  F042         	call	i2___awdiv	;wreg free
 41171  00601C  5001               	movf	?i2___awdiv,w,c
 41172  00601E  0101               	movlb	1	; () banked
 41173  006020  2703               	addwf	(_timer+3)& (0+255),f,b
 41174                           
 41175                           ;tmrAPP.c: 35: timer.sec %= 60;
 41176  006022  0E3C               	movlw	60
 41177  006024  6E01               	movwf	___lbmod@divisor,c
 41178  006026  5102               	movf	(_timer+2)& (0+255),w,b
 41179  006028  EC90  F050         	call	___lbmod
 41180  00602C  0101               	movlb	1	; () banked
 41181  00602E  6F02               	movwf	(_timer+2)& (0+255),b
 41182  006030                     i2l3212:
 41183                           
 41184                           ;tmrAPP.c: 36: };tmrAPP.c: 37: if (timer.min/60){
 41185  006030  C103  F001         	movff	_timer+3,i2___awdiv@dividend
 41186  006034  6A02               	clrf	i2___awdiv@dividend+1,c
 41187  006036  0E00               	movlw	0
 41188  006038  6E04               	movwf	i2___awdiv@divisor+1,c
 41189  00603A  0E3C               	movlw	60
 41190  00603C  6E03               	movwf	i2___awdiv@divisor,c
 41191  00603E  ECD8  F042         	call	i2___awdiv	;wreg free
 41192  006042  5001               	movf	?i2___awdiv,w,c
 41193  006044  1002               	iorwf	?i2___awdiv+1,w,c
 41194  006046  B4D8               	btfsc	status,2,c
 41195  006048  D013               	goto	i2l3213
 41196                           
 41197                           ;tmrAPP.c: 38: timer.hour += timer.min/60;
 41198  00604A  C103  F001         	movff	_timer+3,i2___awdiv@dividend
 41199  00604E  6A02               	clrf	i2___awdiv@dividend+1,c
 41200  006050  0E00               	movlw	0
 41201  006052  6E04               	movwf	i2___awdiv@divisor+1,c
 41202  006054  0E3C               	movlw	60
 41203  006056  6E03               	movwf	i2___awdiv@divisor,c
 41204  006058  ECD8  F042         	call	i2___awdiv	;wreg free
 41205  00605C  5001               	movf	?i2___awdiv,w,c
 41206  00605E  0101               	movlb	1	; () banked
 41207  006060  2704               	addwf	(_timer+4)& (0+255),f,b
 41208                           
 41209                           ;tmrAPP.c: 39: timer.min %= 60;
 41210  006062  0E3C               	movlw	60
 41211  006064  6E01               	movwf	___lbmod@divisor,c
 41212  006066  5103               	movf	(_timer+3)& (0+255),w,b
 41213  006068  EC90  F050         	call	___lbmod
 41214  00606C  0101               	movlb	1	; () banked
 41215  00606E  6F03               	movwf	(_timer+3)& (0+255),b
 41216  006070                     i2l3213:
 41217                           
 41218                           ;tmrAPP.c: 40: };tmrAPP.c: 41: if(timer.hour/24){
 41219  006070  C104  F001         	movff	_timer+4,i2___awdiv@dividend
 41220  006074  6A02               	clrf	i2___awdiv@dividend+1,c
 41221  006076  0E00               	movlw	0
 41222  006078  6E04               	movwf	i2___awdiv@divisor+1,c
 41223  00607A  0E18               	movlw	24
 41224  00607C  6E03               	movwf	i2___awdiv@divisor,c
 41225  00607E  ECD8  F042         	call	i2___awdiv	;wreg free
 41226  006082  5001               	movf	?i2___awdiv,w,c
 41227  006084  1002               	iorwf	?i2___awdiv+1,w,c
 41228  006086  B4D8               	btfsc	status,2,c
 41229  006088  0012               	return	
 41230                           
 41231                           ;tmrAPP.c: 42: timer.day += timer.hour/24;
 41232  00608A  C104  F001         	movff	_timer+4,i2___awdiv@dividend
 41233  00608E  6A02               	clrf	i2___awdiv@dividend+1,c
 41234  006090  0E00               	movlw	0
 41235  006092  6E04               	movwf	i2___awdiv@divisor+1,c
 41236  006094  0E18               	movlw	24
 41237  006096  6E03               	movwf	i2___awdiv@divisor,c
 41238  006098  ECD8  F042         	call	i2___awdiv	;wreg free
 41239  00609C  5001               	movf	?i2___awdiv,w,c
 41240  00609E  0101               	movlb	1	; () banked
 41241  0060A0  2705               	addwf	(_timer+5)& (0+255),f,b
 41242                           
 41243                           ;tmrAPP.c: 43: timer.hour %= 24;
 41244  0060A2  0E18               	movlw	24
 41245  0060A4  6E01               	movwf	___lbmod@divisor,c
 41246  0060A6  5104               	movf	(_timer+4)& (0+255),w,b
 41247  0060A8  EC90  F050         	call	___lbmod
 41248  0060AC  0101               	movlb	1	; () banked
 41249  0060AE  6F04               	movwf	(_timer+4)& (0+255),b
 41250  0060B0  0012               	return		;funcret
 41251  0060B2                     __end_of_timerHandler:
 41252                           	opt callstack 0
 41253                           
 41254 ;; *************** function i2___lwmod *****************
 41255 ;; Defined at:
 41256 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 41257 ;; Parameters:    Size  Location     Type
 41258 ;;  dividend        2    0[COMRAM] unsigned int 
 41259 ;;  divisor         2    2[COMRAM] unsigned int 
 41260 ;; Auto vars:     Size  Location     Type
 41261 ;;  __lwmod         1    4[COMRAM] unsigned char 
 41262 ;; Return value:  Size  Location     Type
 41263 ;;                  2    0[COMRAM] unsigned int 
 41264 ;; Registers used:
 41265 ;;		wreg, status,2, status,0
 41266 ;; Tracked objects:
 41267 ;;		On entry : 0/0
 41268 ;;		On exit  : 0/0
 41269 ;;		Unchanged: 0/0
 41270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41271 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41272 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41274 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41275 ;;Total ram usage:        5 bytes
 41276 ;; Hardware stack levels used:    1
 41277 ;; This function calls:
 41278 ;;		Nothing
 41279 ;; This function is called by:
 41280 ;;		_timerHandler
 41281 ;; This function uses a non-reentrant model
 41282 ;;
 41283                           
 41284                           	psect	text261
 41285  0099C6                     __ptext261:
 41286                           	opt callstack 0
 41287  0099C6                     i2___lwmod:
 41288                           	opt callstack 12
 41289                           
 41290                           ;incstack = 0
 41291  0099C6  5003               	movf	i2___lwmod@divisor,w,c
 41292  0099C8  1004               	iorwf	i2___lwmod@divisor+1,w,c
 41293  0099CA  B4D8               	btfsc	status,2,c
 41294  0099CC  D018               	goto	i2l4032
 41295  0099CE  0E01               	movlw	1
 41296  0099D0  6E05               	movwf	i2___lwmod@counter,c
 41297  0099D2  D004               	goto	i2l15894
 41298  0099D4                     i2l15892:
 41299  0099D4  90D8               	bcf	status,0,c
 41300  0099D6  3603               	rlcf	i2___lwmod@divisor,f,c
 41301  0099D8  3604               	rlcf	i2___lwmod@divisor+1,f,c
 41302  0099DA  2A05               	incf	i2___lwmod@counter,f,c
 41303  0099DC                     i2l15894:
 41304  0099DC  AE04               	btfss	i2___lwmod@divisor+1,7,c
 41305  0099DE  D7FA               	goto	i2l15892
 41306  0099E0                     i2u1644_40:
 41307  0099E0  5003               	movf	i2___lwmod@divisor,w,c
 41308  0099E2  5C01               	subwf	i2___lwmod@dividend,w,c
 41309  0099E4  5004               	movf	i2___lwmod@divisor+1,w,c
 41310  0099E6  5802               	subwfb	i2___lwmod@dividend+1,w,c
 41311  0099E8  A0D8               	btfss	status,0,c
 41312  0099EA  D004               	goto	i2l15900
 41313  0099EC  5003               	movf	i2___lwmod@divisor,w,c
 41314  0099EE  5E01               	subwf	i2___lwmod@dividend,f,c
 41315  0099F0  5004               	movf	i2___lwmod@divisor+1,w,c
 41316  0099F2  5A02               	subwfb	i2___lwmod@dividend+1,f,c
 41317  0099F4                     i2l15900:
 41318  0099F4  90D8               	bcf	status,0,c
 41319  0099F6  3204               	rrcf	i2___lwmod@divisor+1,f,c
 41320  0099F8  3203               	rrcf	i2___lwmod@divisor,f,c
 41321  0099FA  2E05               	decfsz	i2___lwmod@counter,f,c
 41322  0099FC  D7F1               	goto	i2u1644_40
 41323  0099FE                     i2l4032:
 41324  0099FE  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 41325  009A02  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 41326  009A06  0012               	return		;funcret
 41327  009A08                     __end_ofi2___lwmod:
 41328                           	opt callstack 0
 41329                           
 41330 ;; *************** function i2___lwdiv *****************
 41331 ;; Defined at:
 41332 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 41333 ;; Parameters:    Size  Location     Type
 41334 ;;  dividend        2    0[COMRAM] unsigned int 
 41335 ;;  divisor         2    2[COMRAM] unsigned int 
 41336 ;; Auto vars:     Size  Location     Type
 41337 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 41338 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 41339 ;; Return value:  Size  Location     Type
 41340 ;;                  2    0[COMRAM] unsigned int 
 41341 ;; Registers used:
 41342 ;;		wreg, status,2, status,0
 41343 ;; Tracked objects:
 41344 ;;		On entry : 0/0
 41345 ;;		On exit  : 0/0
 41346 ;;		Unchanged: 0/0
 41347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41349 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41351 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41352 ;;Total ram usage:        7 bytes
 41353 ;; Hardware stack levels used:    1
 41354 ;; This function calls:
 41355 ;;		Nothing
 41356 ;; This function is called by:
 41357 ;;		_timerHandler
 41358 ;; This function uses a non-reentrant model
 41359 ;;
 41360                           
 41361                           	psect	text262
 41362  0094A0                     __ptext262:
 41363                           	opt callstack 0
 41364  0094A0                     i2___lwdiv:
 41365                           	opt callstack 12
 41366                           
 41367                           ;incstack = 0
 41368  0094A0  0E00               	movlw	0
 41369  0094A2  6E06               	movwf	i2___lwdiv@quotient+1,c
 41370  0094A4  0E00               	movlw	0
 41371  0094A6  6E05               	movwf	i2___lwdiv@quotient,c
 41372  0094A8  5003               	movf	i2___lwdiv@divisor,w,c
 41373  0094AA  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 41374  0094AC  B4D8               	btfsc	status,2,c
 41375  0094AE  D01C               	goto	i2l4022
 41376  0094B0  0E01               	movlw	1
 41377  0094B2  6E07               	movwf	i2___lwdiv@counter,c
 41378  0094B4  D004               	goto	i2l15874
 41379  0094B6                     i2l15872:
 41380  0094B6  90D8               	bcf	status,0,c
 41381  0094B8  3603               	rlcf	i2___lwdiv@divisor,f,c
 41382  0094BA  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 41383  0094BC  2A07               	incf	i2___lwdiv@counter,f,c
 41384  0094BE                     i2l15874:
 41385  0094BE  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 41386  0094C0  D7FA               	goto	i2l15872
 41387  0094C2                     i2u1641_40:
 41388  0094C2  90D8               	bcf	status,0,c
 41389  0094C4  3605               	rlcf	i2___lwdiv@quotient,f,c
 41390  0094C6  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 41391  0094C8  5003               	movf	i2___lwdiv@divisor,w,c
 41392  0094CA  5C01               	subwf	i2___lwdiv@dividend,w,c
 41393  0094CC  5004               	movf	i2___lwdiv@divisor+1,w,c
 41394  0094CE  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 41395  0094D0  A0D8               	btfss	status,0,c
 41396  0094D2  D005               	goto	i2l15884
 41397  0094D4  5003               	movf	i2___lwdiv@divisor,w,c
 41398  0094D6  5E01               	subwf	i2___lwdiv@dividend,f,c
 41399  0094D8  5004               	movf	i2___lwdiv@divisor+1,w,c
 41400  0094DA  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 41401  0094DC  8005               	bsf	i2___lwdiv@quotient,0,c
 41402  0094DE                     i2l15884:
 41403  0094DE  90D8               	bcf	status,0,c
 41404  0094E0  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 41405  0094E2  3203               	rrcf	i2___lwdiv@divisor,f,c
 41406  0094E4  2E07               	decfsz	i2___lwdiv@counter,f,c
 41407  0094E6  D7ED               	goto	i2u1641_40
 41408  0094E8                     i2l4022:
 41409  0094E8  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 41410  0094EC  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 41411  0094F0  0012               	return		;funcret
 41412  0094F2                     __end_ofi2___lwdiv:
 41413                           	opt callstack 0
 41414                           
 41415 ;; *************** function i2___awdiv *****************
 41416 ;; Defined at:
 41417 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 41418 ;; Parameters:    Size  Location     Type
 41419 ;;  dividend        2    0[COMRAM] int 
 41420 ;;  divisor         2    2[COMRAM] int 
 41421 ;; Auto vars:     Size  Location     Type
 41422 ;;  __awdiv         2    6[COMRAM] int 
 41423 ;;  __awdiv         1    5[COMRAM] unsigned char 
 41424 ;;  __awdiv         1    4[COMRAM] unsigned char 
 41425 ;; Return value:  Size  Location     Type
 41426 ;;                  2    0[COMRAM] int 
 41427 ;; Registers used:
 41428 ;;		wreg, status,2, status,0
 41429 ;; Tracked objects:
 41430 ;;		On entry : 0/0
 41431 ;;		On exit  : 0/0
 41432 ;;		Unchanged: 0/0
 41433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41434 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41435 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41437 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41438 ;;Total ram usage:        8 bytes
 41439 ;; Hardware stack levels used:    1
 41440 ;; This function calls:
 41441 ;;		Nothing
 41442 ;; This function is called by:
 41443 ;;		_timerHandler
 41444 ;; This function uses a non-reentrant model
 41445 ;;
 41446                           
 41447                           	psect	text263
 41448  0085B0                     __ptext263:
 41449                           	opt callstack 0
 41450  0085B0                     i2___awdiv:
 41451                           	opt callstack 12
 41452                           
 41453                           ;incstack = 0
 41454  0085B0  0E00               	movlw	0
 41455  0085B2  6E06               	movwf	i2___awdiv@sign,c
 41456  0085B4  AE04               	btfss	i2___awdiv@divisor+1,7,c
 41457  0085B6  D006               	goto	i2l15830
 41458  0085B8  6C03               	negf	i2___awdiv@divisor,c
 41459  0085BA  1E04               	comf	i2___awdiv@divisor+1,f,c
 41460  0085BC  B0D8               	btfsc	status,0,c
 41461  0085BE  2A04               	incf	i2___awdiv@divisor+1,f,c
 41462  0085C0  0E01               	movlw	1
 41463  0085C2  6E06               	movwf	i2___awdiv@sign,c
 41464  0085C4                     i2l15830:
 41465  0085C4  AE02               	btfss	i2___awdiv@dividend+1,7,c
 41466  0085C6  D006               	goto	i2l15836
 41467  0085C8  6C01               	negf	i2___awdiv@dividend,c
 41468  0085CA  1E02               	comf	i2___awdiv@dividend+1,f,c
 41469  0085CC  B0D8               	btfsc	status,0,c
 41470  0085CE  2A02               	incf	i2___awdiv@dividend+1,f,c
 41471  0085D0  0E01               	movlw	1
 41472  0085D2  1A06               	xorwf	i2___awdiv@sign,f,c
 41473  0085D4                     i2l15836:
 41474  0085D4  0E00               	movlw	0
 41475  0085D6  6E08               	movwf	i2___awdiv@quotient+1,c
 41476  0085D8  0E00               	movlw	0
 41477  0085DA  6E07               	movwf	i2___awdiv@quotient,c
 41478  0085DC  5003               	movf	i2___awdiv@divisor,w,c
 41479  0085DE  1004               	iorwf	i2___awdiv@divisor+1,w,c
 41480  0085E0  B4D8               	btfsc	status,2,c
 41481  0085E2  D01C               	goto	i2l15858
 41482  0085E4  0E01               	movlw	1
 41483  0085E6  6E05               	movwf	i2___awdiv@counter,c
 41484  0085E8  D004               	goto	i2l15844
 41485  0085EA                     i2l15842:
 41486  0085EA  90D8               	bcf	status,0,c
 41487  0085EC  3603               	rlcf	i2___awdiv@divisor,f,c
 41488  0085EE  3604               	rlcf	i2___awdiv@divisor+1,f,c
 41489  0085F0  2A05               	incf	i2___awdiv@counter,f,c
 41490  0085F2                     i2l15844:
 41491  0085F2  AE04               	btfss	i2___awdiv@divisor+1,7,c
 41492  0085F4  D7FA               	goto	i2l15842
 41493  0085F6                     i2u1637_40:
 41494  0085F6  90D8               	bcf	status,0,c
 41495  0085F8  3607               	rlcf	i2___awdiv@quotient,f,c
 41496  0085FA  3608               	rlcf	i2___awdiv@quotient+1,f,c
 41497  0085FC  5003               	movf	i2___awdiv@divisor,w,c
 41498  0085FE  5C01               	subwf	i2___awdiv@dividend,w,c
 41499  008600  5004               	movf	i2___awdiv@divisor+1,w,c
 41500  008602  5802               	subwfb	i2___awdiv@dividend+1,w,c
 41501  008604  A0D8               	btfss	status,0,c
 41502  008606  D005               	goto	i2l15854
 41503  008608  5003               	movf	i2___awdiv@divisor,w,c
 41504  00860A  5E01               	subwf	i2___awdiv@dividend,f,c
 41505  00860C  5004               	movf	i2___awdiv@divisor+1,w,c
 41506  00860E  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 41507  008610  8007               	bsf	i2___awdiv@quotient,0,c
 41508  008612                     i2l15854:
 41509  008612  90D8               	bcf	status,0,c
 41510  008614  3204               	rrcf	i2___awdiv@divisor+1,f,c
 41511  008616  3203               	rrcf	i2___awdiv@divisor,f,c
 41512  008618  2E05               	decfsz	i2___awdiv@counter,f,c
 41513  00861A  D7ED               	goto	i2u1637_40
 41514  00861C                     i2l15858:
 41515  00861C  5006               	movf	i2___awdiv@sign,w,c
 41516  00861E  B4D8               	btfsc	status,2,c
 41517  008620  D004               	goto	i2l15862
 41518  008622  6C07               	negf	i2___awdiv@quotient,c
 41519  008624  1E08               	comf	i2___awdiv@quotient+1,f,c
 41520  008626  B0D8               	btfsc	status,0,c
 41521  008628  2A08               	incf	i2___awdiv@quotient+1,f,c
 41522  00862A                     i2l15862:
 41523  00862A  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 41524  00862E  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 41525  008632  0012               	return		;funcret
 41526  008634                     __end_ofi2___awdiv:
 41527                           	opt callstack 0
 41528                           
 41529 ;; *************** function ___lbmod *****************
 41530 ;; Defined at:
 41531 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c"
 41532 ;; Parameters:    Size  Location     Type
 41533 ;;  dividend        1    wreg     unsigned char 
 41534 ;;  divisor         1    0[COMRAM] unsigned char 
 41535 ;; Auto vars:     Size  Location     Type
 41536 ;;  dividend        1    1[COMRAM] unsigned char 
 41537 ;;  rem             1    3[COMRAM] unsigned char 
 41538 ;;  counter         1    2[COMRAM] unsigned char 
 41539 ;; Return value:  Size  Location     Type
 41540 ;;                  1    wreg      unsigned char 
 41541 ;; Registers used:
 41542 ;;		wreg, status,2, status,0
 41543 ;; Tracked objects:
 41544 ;;		On entry : 0/0
 41545 ;;		On exit  : 0/0
 41546 ;;		Unchanged: 0/0
 41547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41548 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41549 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41551 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41552 ;;Total ram usage:        4 bytes
 41553 ;; Hardware stack levels used:    1
 41554 ;; This function calls:
 41555 ;;		Nothing
 41556 ;; This function is called by:
 41557 ;;		_timerHandler
 41558 ;;		_timerHandler16
 41559 ;; This function uses a non-reentrant model
 41560 ;;
 41561                           
 41562                           	psect	text264
 41563  00A120                     __ptext264:
 41564                           	opt callstack 0
 41565  00A120                     ___lbmod:
 41566                           	opt callstack 12
 41567                           
 41568                           ;incstack = 0
 41569                           ;___lbmod@dividend stored from wreg
 41570  00A120  6E02               	movwf	___lbmod@dividend,c
 41571  00A122  0E08               	movlw	8
 41572  00A124  6E03               	movwf	___lbmod@counter,c
 41573  00A126  0E00               	movlw	0
 41574  00A128  6E04               	movwf	___lbmod@rem,c
 41575  00A12A                     i2l15774:
 41576  00A12A  90D8               	bcf	status,0,c
 41577  00A12C  3402               	rlcf	___lbmod@dividend,w,c
 41578  00A12E  3404               	rlcf	___lbmod@rem,w,c
 41579  00A130  6E04               	movwf	___lbmod@rem,c
 41580  00A132  90D8               	bcf	status,0,c
 41581  00A134  3602               	rlcf	___lbmod@dividend,f,c
 41582  00A136  5001               	movf	___lbmod@divisor,w,c
 41583  00A138  5C04               	subwf	___lbmod@rem,w,c
 41584  00A13A  A0D8               	btfss	status,0,c
 41585  00A13C  D002               	goto	i2l15782
 41586  00A13E  5001               	movf	___lbmod@divisor,w,c
 41587  00A140  5E04               	subwf	___lbmod@rem,f,c
 41588  00A142                     i2l15782:
 41589  00A142  2E03               	decfsz	___lbmod@counter,f,c
 41590  00A144  D7F2               	goto	i2l15774
 41591  00A146  5004               	movf	___lbmod@rem,w,c
 41592  00A148  0012               	return		;funcret
 41593  00A14A                     __end_of___lbmod:
 41594                           	opt callstack 0
 41595                           
 41596 ;; *************** function _TMR3_ISR *****************
 41597 ;; Defined at:
 41598 ;;		line 160 in file "mcc_generated_files/tmr3.c"
 41599 ;; Parameters:    Size  Location     Type
 41600 ;;		None
 41601 ;; Auto vars:     Size  Location     Type
 41602 ;;		None
 41603 ;; Return value:  Size  Location     Type
 41604 ;;                  1    wreg      void 
 41605 ;; Registers used:
 41606 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41607 ;; Tracked objects:
 41608 ;;		On entry : 0/0
 41609 ;;		On exit  : 0/0
 41610 ;;		Unchanged: 0/0
 41611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41616 ;;Total ram usage:        0 bytes
 41617 ;; Hardware stack levels used:    1
 41618 ;; Hardware stack levels required when called:    1
 41619 ;; This function calls:
 41620 ;;		Absolute function
 41621 ;;		_TMR3ISRClock
 41622 ;;		_TMR3_WriteTimer
 41623 ;; This function is called by:
 41624 ;;		_INTERRUPT_InterruptManager
 41625 ;; This function uses a non-reentrant model
 41626 ;;
 41627                           
 41628                           	psect	text265
 41629  009FF0                     __ptext265:
 41630                           	opt callstack 0
 41631  009FF0                     _TMR3_ISR:
 41632                           	opt callstack 14
 41633                           
 41634                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 41635                           
 41636                           ;incstack = 0
 41637  009FF0  92A1               	bcf	4001,1,c	;volatile
 41638                           
 41639                           ;tmr3.c: 165: TMR3_WriteTimer(timer3ReloadVal);
 41640  009FF2  C1E3  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 41641  009FF6  C1E4  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 41642  009FFA  ECB7  F052         	call	_TMR3_WriteTimer	;wreg free
 41643                           
 41644                           ;tmr3.c: 167: if(TMR3_InterruptHandler)
 41645  009FFE  0101               	movlb	1	; () banked
 41646  00A000  51E1               	movf	_TMR3_InterruptHandler& (0+255),w,b
 41647  00A002  11E2               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 41648  00A004  B4D8               	btfsc	status,2,c
 41649  00A006  0012               	return	
 41650                           
 41651                           ; BSR set to: 1
 41652                           ;tmr3.c: 168: {;tmr3.c: 169: TMR3_InterruptHandler();
 41653  00A008  D801               	call	i2u1764_48
 41654  00A00A  0012               	return	
 41655  00A00C                     i2u1764_48:
 41656  00A00C  0005               	push	
 41657  00A00E  6EFA               	movwf	pclath,c
 41658  00A010  51E1               	movf	_TMR3_InterruptHandler& (0+255),w,b
 41659  00A012  6EFD               	movwf	tosl,c
 41660  00A014  51E2               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 41661  00A016  6EFE               	movwf	tosh,c
 41662  00A018  6AFF               	clrf	tosu,c
 41663  00A01A  50FA               	movf	pclath,w,c
 41664  00A01C  0012               	return		;indir
 41665  00A01E                     __end_of_TMR3_ISR:
 41666                           	opt callstack 0
 41667                           
 41668 ;; *************** function _TMR3_WriteTimer *****************
 41669 ;; Defined at:
 41670 ;;		line 123 in file "mcc_generated_files/tmr3.c"
 41671 ;; Parameters:    Size  Location     Type
 41672 ;;  timerVal        2    0[COMRAM] unsigned int 
 41673 ;; Auto vars:     Size  Location     Type
 41674 ;;		None
 41675 ;; Return value:  Size  Location     Type
 41676 ;;                  1    wreg      void 
 41677 ;; Registers used:
 41678 ;;		wreg, status,2
 41679 ;; Tracked objects:
 41680 ;;		On entry : 0/0
 41681 ;;		On exit  : 0/0
 41682 ;;		Unchanged: 0/0
 41683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41688 ;;Total ram usage:        2 bytes
 41689 ;; Hardware stack levels used:    1
 41690 ;; This function calls:
 41691 ;;		Nothing
 41692 ;; This function is called by:
 41693 ;;		_TMR3_ISR
 41694 ;;		_TMR3_Reload
 41695 ;; This function uses a non-reentrant model
 41696 ;;
 41697                           
 41698                           	psect	text266
 41699  00A56E                     __ptext266:
 41700                           	opt callstack 0
 41701  00A56E                     _TMR3_WriteTimer:
 41702                           	opt callstack 14
 41703                           
 41704                           ;tmr3.c: 125: if (T3CONbits.nT3SYNC == 1)
 41705                           
 41706                           ;incstack = 0
 41707  00A56E  A4B1               	btfss	4017,2,c	;volatile
 41708  00A570  D007               	goto	i2l16710
 41709                           
 41710                           ;tmr3.c: 126: {;tmr3.c: 128: T3CONbits.TMR3ON = 0;
 41711  00A572  90B1               	bcf	4017,0,c	;volatile
 41712                           
 41713                           ;tmr3.c: 131: TMR3H = (timerVal >> 8);
 41714  00A574  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 41715  00A576  6EB3               	movwf	4019,c	;volatile
 41716                           
 41717                           ;tmr3.c: 132: TMR3L = (uint8_t) timerVal;
 41718  00A578  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 41719                           
 41720                           ;tmr3.c: 135: T3CONbits.TMR3ON =1;
 41721  00A57C  80B1               	bsf	4017,0,c	;volatile
 41722                           
 41723                           ;tmr3.c: 136: }
 41724  00A57E  0012               	return	
 41725  00A580                     i2l16710:
 41726                           
 41727                           ;tmr3.c: 137: else;tmr3.c: 138: {;tmr3.c: 140: TMR3H = (timerVal >> 8);
 41728  00A580  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 41729  00A582  6EB3               	movwf	4019,c	;volatile
 41730                           
 41731                           ;tmr3.c: 141: TMR3L = (uint8_t) timerVal;
 41732  00A584  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 41733  00A588  0012               	return		;funcret
 41734  00A58A                     __end_of_TMR3_WriteTimer:
 41735                           	opt callstack 0
 41736                           
 41737 ;; *************** function _TMR3ISRClock *****************
 41738 ;; Defined at:
 41739 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 41740 ;; Parameters:    Size  Location     Type
 41741 ;;		None
 41742 ;; Auto vars:     Size  Location     Type
 41743 ;;		None
 41744 ;; Return value:  Size  Location     Type
 41745 ;;                  1    wreg      void 
 41746 ;; Registers used:
 41747 ;;		wreg, status,2, status,0
 41748 ;; Tracked objects:
 41749 ;;		On entry : 0/0
 41750 ;;		On exit  : 0/0
 41751 ;;		Unchanged: 0/0
 41752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41757 ;;Total ram usage:        0 bytes
 41758 ;; Hardware stack levels used:    1
 41759 ;; This function calls:
 41760 ;;		Nothing
 41761 ;; This function is called by:
 41762 ;;		_TMR3_Initialize
 41763 ;;		_TMR3_ISR
 41764 ;; This function uses a non-reentrant model
 41765 ;;
 41766                           
 41767                           	psect	text267
 41768  00A8BE                     __ptext267:
 41769                           	opt callstack 0
 41770  00A8BE                     _TMR3ISRClock:
 41771                           	opt callstack 14
 41772                           
 41773                           ;tmr3.c: 180: LATE ^= 0x1;
 41774                           
 41775                           ;incstack = 0
 41776  00A8BE  0E01               	movlw	1
 41777  00A8C0  1A8D               	xorwf	3981,f,c	;volatile
 41778  00A8C2  0012               	return		;funcret
 41779  00A8C4                     __end_of_TMR3ISRClock:
 41780                           	opt callstack 0
 41781                           
 41782 ;; *************** function _TMR1_ISR *****************
 41783 ;; Defined at:
 41784 ;;		line 161 in file "mcc_generated_files/tmr1.c"
 41785 ;; Parameters:    Size  Location     Type
 41786 ;;		None
 41787 ;; Auto vars:     Size  Location     Type
 41788 ;;		None
 41789 ;; Return value:  Size  Location     Type
 41790 ;;                  1    wreg      void 
 41791 ;; Registers used:
 41792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 41793 ;; Tracked objects:
 41794 ;;		On entry : 0/0
 41795 ;;		On exit  : 0/0
 41796 ;;		Unchanged: 0/0
 41797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41802 ;;Total ram usage:        0 bytes
 41803 ;; Hardware stack levels used:    1
 41804 ;; Hardware stack levels required when called:    5
 41805 ;; This function calls:
 41806 ;;		_TMR1_CallBack
 41807 ;;		i2_TMR1_WriteTimer
 41808 ;; This function is called by:
 41809 ;;		_INTERRUPT_InterruptManager
 41810 ;; This function uses a non-reentrant model
 41811 ;;
 41812                           
 41813                           	psect	text268
 41814  00A652                     __ptext268:
 41815                           	opt callstack 0
 41816  00A652                     _TMR1_ISR:
 41817                           	opt callstack 10
 41818                           
 41819                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
 41820                           
 41821                           ;incstack = 0
 41822  00A652  909E               	bcf	3998,0,c	;volatile
 41823                           
 41824                           ;tmr1.c: 166: TMR1_WriteTimer(timer1ReloadVal);
 41825  00A654  C1E7  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 41826  00A658  C1E8  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 41827  00A65C  ECC5  F052         	call	i2_TMR1_WriteTimer	;wreg free
 41828                           
 41829                           ;tmr1.c: 170: TMR1_CallBack();
 41830  00A660  ECF5  F051         	call	_TMR1_CallBack	;wreg free
 41831  00A664  0012               	return		;funcret
 41832  00A666                     __end_of_TMR1_ISR:
 41833                           	opt callstack 0
 41834                           
 41835 ;; *************** function _TMR1_CallBack *****************
 41836 ;; Defined at:
 41837 ;;		line 173 in file "mcc_generated_files/tmr1.c"
 41838 ;; Parameters:    Size  Location     Type
 41839 ;;		None
 41840 ;; Auto vars:     Size  Location     Type
 41841 ;;		None
 41842 ;; Return value:  Size  Location     Type
 41843 ;;                  1    wreg      void 
 41844 ;; Registers used:
 41845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 41846 ;; Tracked objects:
 41847 ;;		On entry : 0/0
 41848 ;;		On exit  : 0/0
 41849 ;;		Unchanged: 0/0
 41850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41855 ;;Total ram usage:        0 bytes
 41856 ;; Hardware stack levels used:    1
 41857 ;; Hardware stack levels required when called:    4
 41858 ;; This function calls:
 41859 ;;		Absolute function
 41860 ;;		_TMR1_DefaultInterruptHandler
 41861 ;;		_TMR_ISR_lora
 41862 ;; This function is called by:
 41863 ;;		_TMR1_ISR
 41864 ;; This function uses a non-reentrant model
 41865 ;;
 41866                           
 41867                           	psect	text269
 41868  00A3EA                     __ptext269:
 41869                           	opt callstack 0
 41870  00A3EA                     _TMR1_CallBack:
 41871                           	opt callstack 10
 41872                           
 41873                           ;tmr1.c: 176: if(TMR1_InterruptHandler)
 41874                           
 41875                           ;incstack = 0
 41876  00A3EA  0101               	movlb	1	; () banked
 41877  00A3EC  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 41878  00A3EE  11E6               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 41879  00A3F0  B4D8               	btfsc	status,2,c
 41880  00A3F2  0012               	return	
 41881                           
 41882                           ; BSR set to: 1
 41883                           ;tmr1.c: 177: {;tmr1.c: 178: TMR1_InterruptHandler();
 41884  00A3F4  D801               	call	i2u1708_48
 41885  00A3F6  0012               	return	
 41886  00A3F8                     i2u1708_48:
 41887  00A3F8  0005               	push	
 41888  00A3FA  6EFA               	movwf	pclath,c
 41889  00A3FC  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 41890  00A3FE  6EFD               	movwf	tosl,c
 41891  00A400  51E6               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 41892  00A402  6EFE               	movwf	tosh,c
 41893  00A404  6AFF               	clrf	tosu,c
 41894  00A406  50FA               	movf	pclath,w,c
 41895  00A408  0012               	return		;indir
 41896  00A40A                     __end_of_TMR1_CallBack:
 41897                           	opt callstack 0
 41898                           
 41899 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 41900 ;; Defined at:
 41901 ;;		line 186 in file "mcc_generated_files/tmr1.c"
 41902 ;; Parameters:    Size  Location     Type
 41903 ;;		None
 41904 ;; Auto vars:     Size  Location     Type
 41905 ;;		None
 41906 ;; Return value:  Size  Location     Type
 41907 ;;                  1    wreg      void 
 41908 ;; Registers used:
 41909 ;;		None
 41910 ;; Tracked objects:
 41911 ;;		On entry : 0/0
 41912 ;;		On exit  : 0/0
 41913 ;;		Unchanged: 0/0
 41914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41919 ;;Total ram usage:        0 bytes
 41920 ;; Hardware stack levels used:    1
 41921 ;; This function calls:
 41922 ;;		Nothing
 41923 ;; This function is called by:
 41924 ;;		_TMR1_Initialize
 41925 ;;		_TMR1_CallBack
 41926 ;; This function uses a non-reentrant model
 41927 ;;
 41928                           
 41929                           	psect	text270
 41930  00A8FC                     __ptext270:
 41931                           	opt callstack 0
 41932  00A8FC                     _TMR1_DefaultInterruptHandler:
 41933                           	opt callstack 13
 41934                           
 41935                           ;incstack = 0
 41936  00A8FC  0012               	return		;funcret
 41937  00A8FE                     __end_of_TMR1_DefaultInterruptHandler:
 41938                           	opt callstack 0
 41939                           
 41940 ;; *************** function _TMR_ISR_lora *****************
 41941 ;; Defined at:
 41942 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 41943 ;; Parameters:    Size  Location     Type
 41944 ;;		None
 41945 ;; Auto vars:     Size  Location     Type
 41946 ;;		None
 41947 ;; Return value:  Size  Location     Type
 41948 ;;                  1    wreg      void 
 41949 ;; Registers used:
 41950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41951 ;; Tracked objects:
 41952 ;;		On entry : 0/0
 41953 ;;		On exit  : 0/0
 41954 ;;		Unchanged: 0/0
 41955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41960 ;;Total ram usage:        0 bytes
 41961 ;; Hardware stack levels used:    1
 41962 ;; Hardware stack levels required when called:    3
 41963 ;; This function calls:
 41964 ;;		i2_SwTimersInterrupt
 41965 ;;		i2_TMR_SwapTimer
 41966 ;; This function is called by:
 41967 ;;		_TMR_ISR_Lora_Init
 41968 ;;		_TMR1_CallBack
 41969 ;; This function uses a non-reentrant model
 41970 ;;
 41971                           
 41972                           	psect	text271
 41973  009204                     __ptext271:
 41974                           	opt callstack 0
 41975  009204                     _TMR_ISR_lora:
 41976                           	opt callstack 10
 41977                           
 41978                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 41979                           
 41980                           ;incstack = 0
 41981  009204  0E01               	movlw	1
 41982  009206  6E44               	movwf	_timerOverflow,c	;volatile
 41983                           
 41984                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 41985  009208  EC96  F037         	call	i2_SwTimersInterrupt	;wreg free
 41986  00920C  C019  F052         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 41987  009210  C01A  F053         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 41988  009214  C01B  F054         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 41989  009218  C01C  F055         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 41990                           
 41991                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 41992  00921C  5055               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 41993  00921E  E11C               	bnz	i2l1343
 41994  009220  0E00               	movlw	0
 41995  009222  5C52               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 41996  009224  0E00               	movlw	0
 41997  009226  5853               	subwfb	_ticksToScheduledInterrupt+1,w,c	;volatile
 41998  009228  0E01               	movlw	1
 41999  00922A  5854               	subwfb	_ticksToScheduledInterrupt+2,w,c	;volatile
 42000  00922C  B0D8               	btfsc	status,0,c
 42001  00922E  0012               	return	
 42002                           
 42003                           ;tmr_lora_addons.c: 66: {;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticks
      +                          ToScheduledInterrupt;
 42004  009230  5052               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 42005  009232  0800               	sublw	0
 42006  009234  6E3E               	movwf	_reloadVal,c	;volatile
 42007  009236  5053               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 42008  009238  A0D8               	btfss	status,0,c
 42009  00923A  2AE8               	incf	wreg,f,c
 42010  00923C  0800               	sublw	0
 42011  00923E  6E3F               	movwf	_reloadVal+1,c	;volatile
 42012                           
 42013                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 42014  009240  C03E  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 42015  009244  C03F  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 42016  009248  EC44  F04D         	call	i2_TMR_SwapTimer	;wreg free
 42017  00924C  C009  F036         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 42018  009250  C00A  F037         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 42019  009254  6A38               	clrf	_ticksAdded+2,c	;volatile
 42020  009256  6A39               	clrf	_ticksAdded+3,c	;volatile
 42021  009258                     i2l1343:
 42022  009258  0012               	return		;funcret
 42023  00925A                     __end_of_TMR_ISR_lora:
 42024                           	opt callstack 0
 42025                           
 42026 ;; *************** function i2_TMR_SwapTimer *****************
 42027 ;; Defined at:
 42028 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42029 ;; Parameters:    Size  Location     Type
 42030 ;;  timerVal        2    8[COMRAM] unsigned int 
 42031 ;; Auto vars:     Size  Location     Type
 42032 ;;		None
 42033 ;; Return value:  Size  Location     Type
 42034 ;;                  2    8[COMRAM] unsigned int 
 42035 ;; Registers used:
 42036 ;;		wreg, status,2, status,0, cstack
 42037 ;; Tracked objects:
 42038 ;;		On entry : 0/0
 42039 ;;		On exit  : 0/0
 42040 ;;		Unchanged: 0/0
 42041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42046 ;;Total ram usage:        2 bytes
 42047 ;; Hardware stack levels used:    1
 42048 ;; Hardware stack levels required when called:    1
 42049 ;; This function calls:
 42050 ;;		i2_TMR1_ReadTimer
 42051 ;;		i2_TMR1_WriteTimer
 42052 ;; This function is called by:
 42053 ;;		_TMR_ISR_lora
 42054 ;; This function uses a non-reentrant model
 42055 ;;
 42056                           
 42057                           	psect	text272
 42058  009A88                     __ptext272:
 42059                           	opt callstack 0
 42060  009A88                     i2_TMR_SwapTimer:
 42061                           	opt callstack 11
 42062                           
 42063                           ;sw_timer.c: 114: static uint16_t oldVal;;sw_timer.c: 115: static uint16_t retVal;;sw_ti
      +                          mer.c: 117: oldVal = TMR1_ReadTimer();
 42064                           
 42065                           ;incstack = 0
 42066  009A88  EC05  F052         	call	i2_TMR1_ReadTimer	;wreg free
 42067  009A8C  C001  F03A         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 42068  009A90  C002  F03B         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 42069  009A94                     i2l15790:
 42070  009A94  EC05  F052         	call	i2_TMR1_ReadTimer	;wreg free
 42071  009A98  503A               	movf	TMR_SwapTimer@oldVal,w,c
 42072  009A9A  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 42073  009A9C  E104               	bnz	i2u1629_40
 42074  009A9E  503B               	movf	TMR_SwapTimer@oldVal+1,w,c
 42075  009AA0  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 42076  009AA2  B4D8               	btfsc	status,2,c
 42077  009AA4  D7F7               	goto	i2l15790
 42078  009AA6                     i2u1629_40:
 42079                           
 42080                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 42081  009AA6  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 42082  009AAA  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 42083  009AAE  ECC5  F052         	call	i2_TMR1_WriteTimer	;wreg free
 42084                           
 42085                           ;sw_timer.c: 128: oldVal++;
 42086  009AB2  4A3A               	infsnz	TMR_SwapTimer@oldVal,f,c
 42087  009AB4  2A3B               	incf	TMR_SwapTimer@oldVal+1,f,c
 42088                           
 42089                           ;sw_timer.c: 130: retVal = oldVal;
 42090  009AB6  C03A  F11E         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 42091  009ABA  C03B  F11F         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 42092                           
 42093                           ;sw_timer.c: 132: return retVal;
 42094  009ABE  C11E  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 42095  009AC2  C11F  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 42096  009AC6  0012               	return		;funcret
 42097  009AC8                     __end_ofi2_TMR_SwapTimer:
 42098                           	opt callstack 0
 42099                           
 42100 ;; *************** function i2_TMR1_WriteTimer *****************
 42101 ;; Defined at:
 42102 ;;		line 124 in file "mcc_generated_files/tmr1.c"
 42103 ;; Parameters:    Size  Location     Type
 42104 ;;  timerVal        2    0[COMRAM] unsigned int 
 42105 ;; Auto vars:     Size  Location     Type
 42106 ;;		None
 42107 ;; Return value:  Size  Location     Type
 42108 ;;                  1    wreg      void 
 42109 ;; Registers used:
 42110 ;;		wreg, status,2
 42111 ;; Tracked objects:
 42112 ;;		On entry : 0/0
 42113 ;;		On exit  : 0/0
 42114 ;;		Unchanged: 0/0
 42115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42120 ;;Total ram usage:        2 bytes
 42121 ;; Hardware stack levels used:    1
 42122 ;; This function calls:
 42123 ;;		Nothing
 42124 ;; This function is called by:
 42125 ;;		_TMR1_ISR
 42126 ;;		i2_TMR_SwapTimer
 42127 ;; This function uses a non-reentrant model
 42128 ;;
 42129                           
 42130                           	psect	text273
 42131  00A58A                     __ptext273:
 42132                           	opt callstack 0
 42133  00A58A                     i2_TMR1_WriteTimer:
 42134                           	opt callstack 14
 42135                           
 42136                           ;tmr1.c: 126: if (T1CONbits.T1SYNC == 1)
 42137                           
 42138                           ;incstack = 0
 42139  00A58A  A4CD               	btfss	4045,2,c	;volatile
 42140  00A58C  D007               	goto	i2l15344
 42141                           
 42142                           ;tmr1.c: 127: {;tmr1.c: 129: T1CONbits.TMR1ON = 0;
 42143  00A58E  90CD               	bcf	4045,0,c	;volatile
 42144                           
 42145                           ;tmr1.c: 132: TMR1H = (timerVal >> 8);
 42146  00A590  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 42147  00A592  6ECF               	movwf	4047,c	;volatile
 42148                           
 42149                           ;tmr1.c: 133: TMR1L = (uint8_t) timerVal;
 42150  00A594  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 42151                           
 42152                           ;tmr1.c: 136: T1CONbits.TMR1ON =1;
 42153  00A598  80CD               	bsf	4045,0,c	;volatile
 42154                           
 42155                           ;tmr1.c: 137: }
 42156  00A59A  0012               	return	
 42157  00A59C                     i2l15344:
 42158                           
 42159                           ;tmr1.c: 138: else;tmr1.c: 139: {;tmr1.c: 141: TMR1H = (timerVal >> 8);
 42160  00A59C  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 42161  00A59E  6ECF               	movwf	4047,c	;volatile
 42162                           
 42163                           ;tmr1.c: 142: TMR1L = (uint8_t) timerVal;
 42164  00A5A0  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 42165  00A5A4  0012               	return		;funcret
 42166  00A5A6                     __end_ofi2_TMR1_WriteTimer:
 42167                           	opt callstack 0
 42168                           
 42169 ;; *************** function i2_SwTimersInterrupt *****************
 42170 ;; Defined at:
 42171 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42172 ;; Parameters:    Size  Location     Type
 42173 ;;		None
 42174 ;; Auto vars:     Size  Location     Type
 42175 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 42176 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 42177 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 42178 ;; Return value:  Size  Location     Type
 42179 ;;                  4   24[COMRAM] unsigned long 
 42180 ;; Registers used:
 42181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42182 ;; Tracked objects:
 42183 ;;		On entry : 0/0
 42184 ;;		On exit  : 0/0
 42185 ;;		Unchanged: 0/0
 42186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42188 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42189 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42190 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42191 ;;Total ram usage:       17 bytes
 42192 ;; Hardware stack levels used:    1
 42193 ;; Hardware stack levels required when called:    2
 42194 ;; This function calls:
 42195 ;;		i2_TMR_GetDeltaTime
 42196 ;; This function is called by:
 42197 ;;		_TMR_ISR_lora
 42198 ;; This function uses a non-reentrant model
 42199 ;;
 42200                           
 42201                           	psect	text274
 42202  006F2C                     __ptext274:
 42203                           	opt callstack 0
 42204  006F2C                     i2_SwTimersInterrupt:
 42205                           	opt callstack 10
 42206                           
 42207                           ;sw_timer.c: 289: uint8_t i;;sw_timer.c: 290: uint32_t timeElapsed;;sw_timer.c: 291: uin
      +                          t32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 42208                           
 42209                           ;incstack = 0
 42210  006F2C  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 42211  006F2E  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 42212  006F30  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 42213  006F32  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 42214                           
 42215                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 42216  006F34  EC9F  F034         	call	i2_TMR_GetDeltaTime	;wreg free
 42217  006F38  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 42218  006F3C  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 42219  006F40  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 42220  006F44  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 42221                           
 42222                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 42223  006F48  0E00               	movlw	0
 42224  006F4A  6E29               	movwf	i2SwTimersInterrupt@i,c
 42225  006F4C  D05D               	goto	i2l15820
 42226  006F4E                     i2l15808:
 42227                           
 42228                           ; BSR set to: 1
 42229                           ;sw_timer.c: 298: {;sw_timer.c: 301: if (swTimers[i].running == 1)
 42230  006F4E  5029               	movf	i2SwTimersInterrupt@i,w,c
 42231  006F50  0D08               	mullw	8
 42232  006F52  0E04               	movlw	low (_swTimers+4)
 42233  006F54  24F3               	addwf	prodl,w,c
 42234  006F56  6ED9               	movwf	fsr2l,c
 42235  006F58  0E03               	movlw	high (_swTimers+4)
 42236  006F5A  20F4               	addwfc	prodh,w,c
 42237  006F5C  6EDA               	movwf	fsr2h,c
 42238  006F5E  04DE               	decf	postinc2,w,c
 42239  006F60  A4D8               	btfss	status,2,c
 42240  006F62  D051               	goto	i2l15818
 42241                           
 42242                           ; BSR set to: 1
 42243                           ;sw_timer.c: 302: {;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 42244  006F64  5029               	movf	i2SwTimersInterrupt@i,w,c
 42245  006F66  0D08               	mullw	8
 42246  006F68  0E00               	movlw	low _swTimers
 42247  006F6A  24F3               	addwf	prodl,w,c
 42248  006F6C  6ED9               	movwf	fsr2l,c
 42249  006F6E  0E03               	movlw	high _swTimers
 42250  006F70  20F4               	addwfc	prodh,w,c
 42251  006F72  6EDA               	movwf	fsr2h,c
 42252  006F74  50DE               	movf	postinc2,w,c
 42253  006F76  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 42254  006F78  50DE               	movf	postinc2,w,c
 42255  006F7A  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 42256  006F7C  50DE               	movf	postinc2,w,c
 42257  006F7E  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 42258  006F80  50DE               	movf	postinc2,w,c
 42259  006F82  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 42260  006F84  A0D8               	btfss	status,0,c
 42261  006F86  D00D               	goto	i2l15814
 42262                           
 42263                           ; BSR set to: 1
 42264                           ;sw_timer.c: 304: {;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 42265  006F88  5029               	movf	i2SwTimersInterrupt@i,w,c
 42266  006F8A  0D08               	mullw	8
 42267  006F8C  0E00               	movlw	low _swTimers
 42268  006F8E  24F3               	addwf	prodl,w,c
 42269  006F90  6ED9               	movwf	fsr2l,c
 42270  006F92  0E03               	movlw	high _swTimers
 42271  006F94  20F4               	addwfc	prodh,w,c
 42272  006F96  6EDA               	movwf	fsr2h,c
 42273  006F98  6ADE               	clrf	postinc2,c
 42274  006F9A  6ADE               	clrf	postinc2,c
 42275  006F9C  6ADE               	clrf	postinc2,c
 42276  006F9E  6ADD               	clrf	postdec2,c
 42277                           
 42278                           ;sw_timer.c: 306: }
 42279  006FA0  D032               	goto	i2l15818
 42280  006FA2                     i2l15814:
 42281                           
 42282                           ; BSR set to: 1
 42283                           ;sw_timer.c: 307: else;sw_timer.c: 308: {;sw_timer.c: 309: swTimers[i].ticksRemaining -=
      +                           timeElapsed;
 42284  006FA2  5029               	movf	i2SwTimersInterrupt@i,w,c
 42285  006FA4  0D08               	mullw	8
 42286  006FA6  0E00               	movlw	low _swTimers
 42287  006FA8  24F3               	addwf	prodl,w,c
 42288  006FAA  6ED9               	movwf	fsr2l,c
 42289  006FAC  0E03               	movlw	high _swTimers
 42290  006FAE  20F4               	addwfc	prodh,w,c
 42291  006FB0  6EDA               	movwf	fsr2h,c
 42292  006FB2  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 42293  006FB4  5EDE               	subwf	postinc2,f,c
 42294  006FB6  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 42295  006FB8  5ADE               	subwfb	postinc2,f,c
 42296  006FBA  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 42297  006FBC  5ADE               	subwfb	postinc2,f,c
 42298  006FBE  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 42299  006FC0  5ADE               	subwfb	postinc2,f,c
 42300                           
 42301                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 42302  006FC2  5029               	movf	i2SwTimersInterrupt@i,w,c
 42303  006FC4  0D08               	mullw	8
 42304  006FC6  0E00               	movlw	low _swTimers
 42305  006FC8  24F3               	addwf	prodl,w,c
 42306  006FCA  6ED9               	movwf	fsr2l,c
 42307  006FCC  0E03               	movlw	high _swTimers
 42308  006FCE  20F4               	addwfc	prodh,w,c
 42309  006FD0  6EDA               	movwf	fsr2h,c
 42310  006FD2  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 42311  006FD4  5CDE               	subwf	postinc2,w,c
 42312  006FD6  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 42313  006FD8  58DE               	subwfb	postinc2,w,c
 42314  006FDA  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 42315  006FDC  58DE               	subwfb	postinc2,w,c
 42316  006FDE  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 42317  006FE0  58DE               	subwfb	postinc2,w,c
 42318  006FE2  B0D8               	btfsc	status,0,c
 42319  006FE4  D010               	goto	i2l15818
 42320                           
 42321                           ; BSR set to: 1
 42322                           ;sw_timer.c: 313: {;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 42323  006FE6  5029               	movf	i2SwTimersInterrupt@i,w,c
 42324  006FE8  0D08               	mullw	8
 42325  006FEA  0E00               	movlw	low _swTimers
 42326  006FEC  24F3               	addwf	prodl,w,c
 42327  006FEE  6ED9               	movwf	fsr2l,c
 42328  006FF0  0E03               	movlw	high _swTimers
 42329  006FF2  20F4               	addwfc	prodh,w,c
 42330  006FF4  6EDA               	movwf	fsr2h,c
 42331  006FF6  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 42332  006FFA  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 42333  006FFE  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 42334  007002  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 42335  007006                     i2l15818:
 42336                           
 42337                           ; BSR set to: 1
 42338  007006  2A29               	incf	i2SwTimersInterrupt@i,f,c
 42339  007008                     i2l15820:
 42340  007008  0101               	movlb	1	; () banked
 42341  00700A  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
 42342  00700C  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 42343  00700E  A0D8               	btfss	status,0,c
 42344  007010  D79E               	goto	i2l15808
 42345                           
 42346                           ; BSR set to: 1
 42347                           ;sw_timer.c: 315: };sw_timer.c: 316: };sw_timer.c: 317: };sw_timer.c: 318: };sw_timer.c:
      +                           320: return ticksToNextTimerEvent;
 42348  007012  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 42349  007016  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 42350  00701A  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 42351  00701E  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 42352                           
 42353                           ; BSR set to: 1
 42354  007022  0012               	return		;funcret
 42355  007024                     __end_ofi2_SwTimersInterrupt:
 42356                           	opt callstack 0
 42357                           
 42358 ;; *************** function i2_TMR_GetDeltaTime *****************
 42359 ;; Defined at:
 42360 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42361 ;; Parameters:    Size  Location     Type
 42362 ;;		None
 42363 ;; Auto vars:     Size  Location     Type
 42364 ;;		None
 42365 ;; Return value:  Size  Location     Type
 42366 ;;                  4    8[COMRAM] unsigned long 
 42367 ;; Registers used:
 42368 ;;		wreg, status,2, status,0, cstack
 42369 ;; Tracked objects:
 42370 ;;		On entry : 0/0
 42371 ;;		On exit  : 0/0
 42372 ;;		Unchanged: 0/0
 42373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42376 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42377 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42378 ;;Total ram usage:       16 bytes
 42379 ;; Hardware stack levels used:    1
 42380 ;; Hardware stack levels required when called:    1
 42381 ;; This function calls:
 42382 ;;		i2_TMR1_ReadTimer
 42383 ;; This function is called by:
 42384 ;;		i2_SwTimersInterrupt
 42385 ;; This function uses a non-reentrant model
 42386 ;;
 42387                           
 42388                           	psect	text275
 42389  00693E                     __ptext275:
 42390                           	opt callstack 0
 42391  00693E                     i2_TMR_GetDeltaTime:
 42392                           	opt callstack 10
 42393                           
 42394                           ;sw_timer.c: 90: static uint32_t retVal;;sw_timer.c: 91: static uint16_t tmrVal;;sw_time
      +                          r.c: 93: tmrVal = TMR1_ReadTimer();
 42395                           
 42396                           ; BSR set to: 1
 42397                           ;incstack = 0
 42398  00693E  EC05  F052         	call	i2_TMR1_ReadTimer	;wreg free
 42399  006942  C001  F03C         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 42400  006946  C002  F03D         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 42401                           
 42402                           ;sw_timer.c: 95: if (timerOverflow == 1)
 42403  00694A  0444               	decf	_timerOverflow,w,c	;volatile
 42404  00694C  A4D8               	btfss	status,2,c
 42405  00694E  D045               	goto	i2l15328
 42406                           
 42407                           ;sw_timer.c: 96: {;sw_timer.c: 97: timerOverflow = 0;
 42408  006950  0E00               	movlw	0
 42409  006952  6E44               	movwf	_timerOverflow,c	;volatile
 42410                           
 42411                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 42412  006954  503E               	movf	_reloadVal,w,c	;volatile
 42413  006956  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 42414  006958  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 42415  00695A  503F               	movf	_reloadVal+1,w,c	;volatile
 42416  00695C  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 42417  00695E  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 42418  006960  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 42419  006962  A0D8               	btfss	status,0,c
 42420  006964  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 42421  006966  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 42422  006968  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 42423  00696A  5032               	movf	_ticksAccounted,w,c	;volatile
 42424  00696C  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 42425  00696E  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 42426  006970  5033               	movf	_ticksAccounted+1,w,c	;volatile
 42427  006972  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 42428  006974  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 42429  006976  5034               	movf	_ticksAccounted+2,w,c	;volatile
 42430  006978  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 42431  00697A  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 42432  00697C  5035               	movf	_ticksAccounted+3,w,c	;volatile
 42433  00697E  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 42434  006980  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 42435  006982  5036               	movf	_ticksAdded,w,c	;volatile
 42436  006984  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 42437  006986  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 42438  006988  5037               	movf	_ticksAdded+1,w,c	;volatile
 42439  00698A  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 42440  00698C  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 42441  00698E  5038               	movf	_ticksAdded+2,w,c	;volatile
 42442  006990  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 42443  006992  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 42444  006994  5039               	movf	_ticksAdded+3,w,c	;volatile
 42445  006996  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 42446  006998  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 42447  00699A  0E00               	movlw	0
 42448  00699C  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 42449  00699E  0101               	movlb	1	; () banked
 42450  0069A0  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 42451  0069A2  0E00               	movlw	0
 42452  0069A4  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 42453  0069A6  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 42454  0069A8  0E01               	movlw	1
 42455  0069AA  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 42456  0069AC  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 42457  0069AE  0E00               	movlw	0
 42458  0069B0  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 42459  0069B2  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 42460                           
 42461                           ; BSR set to: 1
 42462                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 42463  0069B4  C03C  F032         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 42464  0069B8  C03D  F033         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 42465  0069BC  6A34               	clrf	_ticksAccounted+2,c	;volatile
 42466  0069BE  6A35               	clrf	_ticksAccounted+3,c	;volatile
 42467                           
 42468                           ; BSR set to: 1
 42469                           ;sw_timer.c: 100: ticksAdded = 0;
 42470  0069C0  0E00               	movlw	0
 42471  0069C2  6E36               	movwf	_ticksAdded,c	;volatile
 42472  0069C4  0E00               	movlw	0
 42473  0069C6  6E37               	movwf	_ticksAdded+1,c	;volatile
 42474  0069C8  0E00               	movlw	0
 42475  0069CA  6E38               	movwf	_ticksAdded+2,c	;volatile
 42476  0069CC  0E00               	movlw	0
 42477  0069CE  6E39               	movwf	_ticksAdded+3,c	;volatile
 42478                           
 42479                           ; BSR set to: 1
 42480                           ;sw_timer.c: 101: reloadVal = 0;
 42481  0069D0  0E00               	movlw	0
 42482  0069D2  6E3F               	movwf	_reloadVal+1,c	;volatile
 42483  0069D4  0E00               	movlw	0
 42484  0069D6  6E3E               	movwf	_reloadVal,c	;volatile
 42485                           
 42486                           ;sw_timer.c: 102: }
 42487  0069D8  D029               	goto	i2l15330
 42488  0069DA                     i2l15328:
 42489                           
 42490                           ;sw_timer.c: 103: else;sw_timer.c: 104: {;sw_timer.c: 105: retVal = tmrVal - reloadVal -
      +                           ticksAccounted + ticksAdded;
 42491  0069DA  503E               	movf	_reloadVal,w,c	;volatile
 42492  0069DC  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 42493  0069DE  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 42494  0069E0  503F               	movf	_reloadVal+1,w,c	;volatile
 42495  0069E2  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 42496  0069E4  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 42497  0069E6  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 42498  0069E8  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 42499  0069EA  5032               	movf	_ticksAccounted,w,c	;volatile
 42500  0069EC  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 42501  0069EE  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 42502  0069F0  5033               	movf	_ticksAccounted+1,w,c	;volatile
 42503  0069F2  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 42504  0069F4  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 42505  0069F6  5034               	movf	_ticksAccounted+2,w,c	;volatile
 42506  0069F8  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 42507  0069FA  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 42508  0069FC  5035               	movf	_ticksAccounted+3,w,c	;volatile
 42509  0069FE  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 42510  006A00  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 42511  006A02  5036               	movf	_ticksAdded,w,c	;volatile
 42512  006A04  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 42513  006A06  0101               	movlb	1	; () banked
 42514  006A08  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 42515  006A0A  5037               	movf	_ticksAdded+1,w,c	;volatile
 42516  006A0C  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 42517  006A0E  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 42518  006A10  5038               	movf	_ticksAdded+2,w,c	;volatile
 42519  006A12  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 42520  006A14  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 42521  006A16  5039               	movf	_ticksAdded+3,w,c	;volatile
 42522  006A18  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 42523  006A1A  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 42524                           
 42525                           ;sw_timer.c: 106: ticksAccounted += retVal;
 42526  006A1C  5112               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 42527  006A1E  2632               	addwf	_ticksAccounted,f,c	;volatile
 42528  006A20  5113               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 42529  006A22  2233               	addwfc	_ticksAccounted+1,f,c	;volatile
 42530  006A24  5114               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 42531  006A26  2234               	addwfc	_ticksAccounted+2,f,c	;volatile
 42532  006A28  5115               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 42533  006A2A  2235               	addwfc	_ticksAccounted+3,f,c	;volatile
 42534  006A2C                     i2l15330:
 42535                           
 42536                           ; BSR set to: 1
 42537                           ;sw_timer.c: 107: };sw_timer.c: 109: return retVal;
 42538  006A2C  C112  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 42539  006A30  C113  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 42540  006A34  C114  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 42541  006A38  C115  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 42542                           
 42543                           ; BSR set to: 1
 42544  006A3C  0012               	return		;funcret
 42545  006A3E                     __end_ofi2_TMR_GetDeltaTime:
 42546                           	opt callstack 0
 42547                           
 42548 ;; *************** function i2_TMR1_ReadTimer *****************
 42549 ;; Defined at:
 42550 ;;		line 108 in file "mcc_generated_files/tmr1.c"
 42551 ;; Parameters:    Size  Location     Type
 42552 ;;		None
 42553 ;; Auto vars:     Size  Location     Type
 42554 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 42555 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 42556 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 42557 ;; Return value:  Size  Location     Type
 42558 ;;                  2    0[COMRAM] unsigned int 
 42559 ;; Registers used:
 42560 ;;		wreg, status,2
 42561 ;; Tracked objects:
 42562 ;;		On entry : 0/0
 42563 ;;		On exit  : 0/0
 42564 ;;		Unchanged: 0/0
 42565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42567 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42568 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42569 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42570 ;;Total ram usage:        8 bytes
 42571 ;; Hardware stack levels used:    1
 42572 ;; This function calls:
 42573 ;;		Nothing
 42574 ;; This function is called by:
 42575 ;;		i2_TMR_GetDeltaTime
 42576 ;;		i2_TMR_SwapTimer
 42577 ;; This function uses a non-reentrant model
 42578 ;;
 42579                           
 42580                           	psect	text276
 42581  00A40A                     __ptext276:
 42582                           	opt callstack 0
 42583  00A40A                     i2_TMR1_ReadTimer:
 42584                           	opt callstack 11
 42585                           
 42586                           ;tmr1.c: 110: uint16_t readVal;;tmr1.c: 111: uint8_t readValHigh;;tmr1.c: 112: uint8_t r
      +                          eadValLow;;tmr1.c: 114: T1CONbits.T1RD16 = 1;
 42587                           
 42588                           ; BSR set to: 1
 42589                           ;incstack = 0
 42590  00A40A  82CD               	bsf	4045,1,c	;volatile
 42591                           
 42592                           ;tmr1.c: 116: readValLow = TMR1L;
 42593  00A40C  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 42594                           
 42595                           ;tmr1.c: 117: readValHigh = TMR1H;
 42596  00A410  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 42597                           
 42598                           ;tmr1.c: 119: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 42599  00A414  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 42600  00A416  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 42601  00A418  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 42602  00A41A  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 42603  00A41C  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 42604                           
 42605                           ;tmr1.c: 121: return readVal;
 42606  00A420  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 42607  00A424  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 42608  00A428  0012               	return		;funcret
 42609  00A42A                     __end_ofi2_TMR1_ReadTimer:
 42610                           	opt callstack 0
 42611                           
 42612 ;; *************** function _PIN_MANAGER_IOC *****************
 42613 ;; Defined at:
 42614 ;;		line 111 in file "mcc_generated_files/pin_manager.c"
 42615 ;; Parameters:    Size  Location     Type
 42616 ;;		None
 42617 ;; Auto vars:     Size  Location     Type
 42618 ;;		None
 42619 ;; Return value:  Size  Location     Type
 42620 ;;                  1    wreg      void 
 42621 ;; Registers used:
 42622 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42623 ;; Tracked objects:
 42624 ;;		On entry : 0/0
 42625 ;;		On exit  : 0/0
 42626 ;;		Unchanged: 0/0
 42627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42632 ;;Total ram usage:        0 bytes
 42633 ;; Hardware stack levels used:    1
 42634 ;; Hardware stack levels required when called:    2
 42635 ;; This function calls:
 42636 ;;		_IOCB4_ISR
 42637 ;; This function is called by:
 42638 ;;		_INTERRUPT_InterruptManager
 42639 ;; This function uses a non-reentrant model
 42640 ;;
 42641                           
 42642                           	psect	text277
 42643  00A86E                     __ptext277:
 42644                           	opt callstack 0
 42645  00A86E                     _PIN_MANAGER_IOC:
 42646                           	opt callstack 13
 42647                           
 42648                           ;pin_manager.c: 114: if(IOCBbits.IOCB4 == 1)
 42649                           
 42650                           ;incstack = 0
 42651  00A86E  B862               	btfsc	3938,4,c	;volatile
 42652                           
 42653                           ;pin_manager.c: 115: {;pin_manager.c: 116: IOCB4_ISR();
 42654  00A870  EC15  F052         	call	_IOCB4_ISR	;wreg free
 42655                           
 42656                           ;pin_manager.c: 117: };pin_manager.c: 119: INTCONbits.RBIF = 0;
 42657  00A874  90F2               	bcf	4082,0,c	;volatile
 42658  00A876  0012               	return		;funcret
 42659  00A878                     __end_of_PIN_MANAGER_IOC:
 42660                           	opt callstack 0
 42661                           
 42662 ;; *************** function _IOCB4_ISR *****************
 42663 ;; Defined at:
 42664 ;;		line 125 in file "mcc_generated_files/pin_manager.c"
 42665 ;; Parameters:    Size  Location     Type
 42666 ;;		None
 42667 ;; Auto vars:     Size  Location     Type
 42668 ;;		None
 42669 ;; Return value:  Size  Location     Type
 42670 ;;                  1    wreg      void 
 42671 ;; Registers used:
 42672 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42673 ;; Tracked objects:
 42674 ;;		On entry : 0/0
 42675 ;;		On exit  : 0/0
 42676 ;;		Unchanged: 0/0
 42677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42682 ;;Total ram usage:        0 bytes
 42683 ;; Hardware stack levels used:    1
 42684 ;; Hardware stack levels required when called:    1
 42685 ;; This function calls:
 42686 ;;		Absolute function
 42687 ;;		_DIO2_ISR_Lora
 42688 ;;		_IOCB4_DefaultInterruptHandler
 42689 ;; This function is called by:
 42690 ;;		_PIN_MANAGER_IOC
 42691 ;; This function uses a non-reentrant model
 42692 ;;
 42693                           
 42694                           	psect	text278
 42695  00A42A                     __ptext278:
 42696                           	opt callstack 0
 42697  00A42A                     _IOCB4_ISR:
 42698                           	opt callstack 13
 42699                           
 42700                           ;pin_manager.c: 130: if(IOCB4_InterruptHandler)
 42701                           
 42702                           ;incstack = 0
 42703  00A42A  0101               	movlb	1	; () banked
 42704  00A42C  51E9               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 42705  00A42E  11EA               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 42706  00A430  B4D8               	btfsc	status,2,c
 42707  00A432  0012               	return	
 42708                           
 42709                           ; BSR set to: 1
 42710                           ;pin_manager.c: 131: {;pin_manager.c: 132: IOCB4_InterruptHandler();
 42711  00A434  D801               	call	i2u1706_48
 42712  00A436  0012               	return	
 42713  00A438                     i2u1706_48:
 42714  00A438  0005               	push	
 42715  00A43A  6EFA               	movwf	pclath,c
 42716  00A43C  51E9               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 42717  00A43E  6EFD               	movwf	tosl,c
 42718  00A440  51EA               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 42719  00A442  6EFE               	movwf	tosh,c
 42720  00A444  6AFF               	clrf	tosu,c
 42721  00A446  50FA               	movf	pclath,w,c
 42722  00A448  0012               	return		;indir
 42723  00A44A                     __end_of_IOCB4_ISR:
 42724                           	opt callstack 0
 42725                           
 42726 ;; *************** function _DIO2_ISR_Lora *****************
 42727 ;; Defined at:
 42728 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42729 ;; Parameters:    Size  Location     Type
 42730 ;;		None
 42731 ;; Auto vars:     Size  Location     Type
 42732 ;;		None
 42733 ;; Return value:  Size  Location     Type
 42734 ;;                  1    wreg      void 
 42735 ;; Registers used:
 42736 ;;		status,2, status,0
 42737 ;; Tracked objects:
 42738 ;;		On entry : 0/0
 42739 ;;		On exit  : 0/0
 42740 ;;		Unchanged: 0/0
 42741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42746 ;;Total ram usage:        0 bytes
 42747 ;; Hardware stack levels used:    1
 42748 ;; This function calls:
 42749 ;;		Nothing
 42750 ;; This function is called by:
 42751 ;;		_DIO2_ISR_Lora_Init
 42752 ;;		_IOCB4_ISR
 42753 ;; This function uses a non-reentrant model
 42754 ;;
 42755                           
 42756                           	psect	text279
 42757  00A8E4                     __ptext279:
 42758                           	opt callstack 0
 42759  00A8E4                     _DIO2_ISR_Lora:
 42760                           	opt callstack 13
 42761                           
 42762                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 42763                           
 42764                           ;incstack = 0
 42765  00A8E4  8445               	bsf	_dioStatus,2,c	;volatile
 42766  00A8E6  0012               	return		;funcret
 42767  00A8E8                     __end_of_DIO2_ISR_Lora:
 42768                           	opt callstack 0
 42769                           
 42770 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 42771 ;; Defined at:
 42772 ;;		line 146 in file "mcc_generated_files/pin_manager.c"
 42773 ;; Parameters:    Size  Location     Type
 42774 ;;		None
 42775 ;; Auto vars:     Size  Location     Type
 42776 ;;		None
 42777 ;; Return value:  Size  Location     Type
 42778 ;;                  1    wreg      void 
 42779 ;; Registers used:
 42780 ;;		None
 42781 ;; Tracked objects:
 42782 ;;		On entry : 0/0
 42783 ;;		On exit  : 0/0
 42784 ;;		Unchanged: 0/0
 42785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42790 ;;Total ram usage:        0 bytes
 42791 ;; Hardware stack levels used:    1
 42792 ;; This function calls:
 42793 ;;		Nothing
 42794 ;; This function is called by:
 42795 ;;		_PIN_MANAGER_Initialize
 42796 ;;		_IOCB4_ISR
 42797 ;; This function uses a non-reentrant model
 42798 ;;
 42799                           
 42800                           	psect	text280
 42801  00A8FE                     __ptext280:
 42802                           	opt callstack 0
 42803  00A8FE                     _IOCB4_DefaultInterruptHandler:
 42804                           	opt callstack 13
 42805                           
 42806                           ;incstack = 0
 42807  00A8FE  0012               	return		;funcret
 42808  00A900                     __end_of_IOCB4_DefaultInterruptHandler:
 42809                           	opt callstack 0
 42810                           
 42811 ;; *************** function _INT2_ISR *****************
 42812 ;; Defined at:
 42813 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 42814 ;; Parameters:    Size  Location     Type
 42815 ;;		None
 42816 ;; Auto vars:     Size  Location     Type
 42817 ;;		None
 42818 ;; Return value:  Size  Location     Type
 42819 ;;                  1    wreg      void 
 42820 ;; Registers used:
 42821 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42822 ;; Tracked objects:
 42823 ;;		On entry : 0/0
 42824 ;;		On exit  : 0/0
 42825 ;;		Unchanged: 0/0
 42826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42831 ;;Total ram usage:        0 bytes
 42832 ;; Hardware stack levels used:    1
 42833 ;; Hardware stack levels required when called:    2
 42834 ;; This function calls:
 42835 ;;		_INT2_CallBack
 42836 ;; This function is called by:
 42837 ;;		_INTERRUPT_InterruptManager
 42838 ;; This function uses a non-reentrant model
 42839 ;;
 42840                           
 42841                           	psect	text281
 42842  00A890                     __ptext281:
 42843                           	opt callstack 0
 42844  00A890                     _INT2_ISR:
 42845                           	opt callstack 13
 42846                           
 42847                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 42848                           
 42849                           ;incstack = 0
 42850  00A890  92F0               	bcf	4080,1,c	;volatile
 42851                           
 42852                           ;ext_int.c: 64: INT2_CallBack();
 42853  00A892  EC25  F052         	call	_INT2_CallBack	;wreg free
 42854  00A896  0012               	return		;funcret
 42855  00A898                     __end_of_INT2_ISR:
 42856                           	opt callstack 0
 42857                           
 42858 ;; *************** function _INT2_CallBack *****************
 42859 ;; Defined at:
 42860 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 42861 ;; Parameters:    Size  Location     Type
 42862 ;;		None
 42863 ;; Auto vars:     Size  Location     Type
 42864 ;;		None
 42865 ;; Return value:  Size  Location     Type
 42866 ;;                  1    wreg      void 
 42867 ;; Registers used:
 42868 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42869 ;; Tracked objects:
 42870 ;;		On entry : 0/0
 42871 ;;		On exit  : 0/0
 42872 ;;		Unchanged: 0/0
 42873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42878 ;;Total ram usage:        0 bytes
 42879 ;; Hardware stack levels used:    1
 42880 ;; Hardware stack levels required when called:    1
 42881 ;; This function calls:
 42882 ;;		Absolute function
 42883 ;;		_DIO1_ISR_Lora
 42884 ;;		_INT2_DefaultInterruptHandler
 42885 ;; This function is called by:
 42886 ;;		_INT2_ISR
 42887 ;; This function uses a non-reentrant model
 42888 ;;
 42889                           
 42890                           	psect	text282
 42891  00A44A                     __ptext282:
 42892                           	opt callstack 0
 42893  00A44A                     _INT2_CallBack:
 42894                           	opt callstack 13
 42895                           
 42896                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 42897                           
 42898                           ;incstack = 0
 42899  00A44A  0101               	movlb	1	; () banked
 42900  00A44C  51EB               	movf	_INT2_InterruptHandler& (0+255),w,b
 42901  00A44E  11EC               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 42902  00A450  B4D8               	btfsc	status,2,c
 42903  00A452  0012               	return	
 42904                           
 42905                           ; BSR set to: 1
 42906                           ;ext_int.c: 72: {;ext_int.c: 73: INT2_InterruptHandler();
 42907  00A454  D801               	call	i2u1704_48
 42908  00A456  0012               	return	
 42909  00A458                     i2u1704_48:
 42910  00A458  0005               	push	
 42911  00A45A  6EFA               	movwf	pclath,c
 42912  00A45C  51EB               	movf	_INT2_InterruptHandler& (0+255),w,b
 42913  00A45E  6EFD               	movwf	tosl,c
 42914  00A460  51EC               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 42915  00A462  6EFE               	movwf	tosh,c
 42916  00A464  6AFF               	clrf	tosu,c
 42917  00A466  50FA               	movf	pclath,w,c
 42918  00A468  0012               	return		;indir
 42919  00A46A                     __end_of_INT2_CallBack:
 42920                           	opt callstack 0
 42921                           
 42922 ;; *************** function _DIO1_ISR_Lora *****************
 42923 ;; Defined at:
 42924 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42925 ;; Parameters:    Size  Location     Type
 42926 ;;		None
 42927 ;; Auto vars:     Size  Location     Type
 42928 ;;		None
 42929 ;; Return value:  Size  Location     Type
 42930 ;;                  1    wreg      void 
 42931 ;; Registers used:
 42932 ;;		status,2, status,0
 42933 ;; Tracked objects:
 42934 ;;		On entry : 0/0
 42935 ;;		On exit  : 0/0
 42936 ;;		Unchanged: 0/0
 42937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42942 ;;Total ram usage:        0 bytes
 42943 ;; Hardware stack levels used:    1
 42944 ;; This function calls:
 42945 ;;		Nothing
 42946 ;; This function is called by:
 42947 ;;		_DIO1_ISR_Lora_Init
 42948 ;;		_INT2_CallBack
 42949 ;; This function uses a non-reentrant model
 42950 ;;
 42951                           
 42952                           	psect	text283
 42953  00A8E8                     __ptext283:
 42954                           	opt callstack 0
 42955  00A8E8                     _DIO1_ISR_Lora:
 42956                           	opt callstack 13
 42957                           
 42958                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 42959                           
 42960                           ;incstack = 0
 42961  00A8E8  8245               	bsf	_dioStatus,1,c	;volatile
 42962  00A8EA  0012               	return		;funcret
 42963  00A8EC                     __end_of_DIO1_ISR_Lora:
 42964                           	opt callstack 0
 42965                           
 42966 ;; *************** function _INT2_DefaultInterruptHandler *****************
 42967 ;; Defined at:
 42968 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 42969 ;; Parameters:    Size  Location     Type
 42970 ;;		None
 42971 ;; Auto vars:     Size  Location     Type
 42972 ;;		None
 42973 ;; Return value:  Size  Location     Type
 42974 ;;                  1    wreg      void 
 42975 ;; Registers used:
 42976 ;;		None
 42977 ;; Tracked objects:
 42978 ;;		On entry : 0/0
 42979 ;;		On exit  : 0/0
 42980 ;;		Unchanged: 0/0
 42981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42986 ;;Total ram usage:        0 bytes
 42987 ;; Hardware stack levels used:    1
 42988 ;; This function calls:
 42989 ;;		Nothing
 42990 ;; This function is called by:
 42991 ;;		_EXT_INT_Initialize
 42992 ;;		_INT2_CallBack
 42993 ;; This function uses a non-reentrant model
 42994 ;;
 42995                           
 42996                           	psect	text284
 42997  00A900                     __ptext284:
 42998                           	opt callstack 0
 42999  00A900                     _INT2_DefaultInterruptHandler:
 43000                           	opt callstack 13
 43001                           
 43002                           ;incstack = 0
 43003  00A900  0012               	return		;funcret
 43004  00A902                     __end_of_INT2_DefaultInterruptHandler:
 43005                           	opt callstack 0
 43006                           
 43007 ;; *************** function _INT1_ISR *****************
 43008 ;; Defined at:
 43009 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 43010 ;; Parameters:    Size  Location     Type
 43011 ;;		None
 43012 ;; Auto vars:     Size  Location     Type
 43013 ;;		None
 43014 ;; Return value:  Size  Location     Type
 43015 ;;                  1    wreg      void 
 43016 ;; Registers used:
 43017 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 43018 ;; Tracked objects:
 43019 ;;		On entry : 0/0
 43020 ;;		On exit  : 0/0
 43021 ;;		Unchanged: 0/0
 43022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43027 ;;Total ram usage:        0 bytes
 43028 ;; Hardware stack levels used:    1
 43029 ;; Hardware stack levels required when called:    2
 43030 ;; This function calls:
 43031 ;;		_INT1_CallBack
 43032 ;; This function is called by:
 43033 ;;		_INTERRUPT_InterruptManager
 43034 ;; This function uses a non-reentrant model
 43035 ;;
 43036                           
 43037                           	psect	text285
 43038  00A898                     __ptext285:
 43039                           	opt callstack 0
 43040  00A898                     _INT1_ISR:
 43041                           	opt callstack 13
 43042                           
 43043                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 43044                           
 43045                           ;incstack = 0
 43046  00A898  90F0               	bcf	4080,0,c	;volatile
 43047                           
 43048                           ;ext_int.c: 38: INT1_CallBack();
 43049  00A89A  EC35  F052         	call	_INT1_CallBack	;wreg free
 43050  00A89E  0012               	return		;funcret
 43051  00A8A0                     __end_of_INT1_ISR:
 43052                           	opt callstack 0
 43053                           
 43054 ;; *************** function _INT1_CallBack *****************
 43055 ;; Defined at:
 43056 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 43057 ;; Parameters:    Size  Location     Type
 43058 ;;		None
 43059 ;; Auto vars:     Size  Location     Type
 43060 ;;		None
 43061 ;; Return value:  Size  Location     Type
 43062 ;;                  1    wreg      void 
 43063 ;; Registers used:
 43064 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 43065 ;; Tracked objects:
 43066 ;;		On entry : 0/0
 43067 ;;		On exit  : 0/0
 43068 ;;		Unchanged: 0/0
 43069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43074 ;;Total ram usage:        0 bytes
 43075 ;; Hardware stack levels used:    1
 43076 ;; Hardware stack levels required when called:    1
 43077 ;; This function calls:
 43078 ;;		Absolute function
 43079 ;;		_DIO0_ISR_Lora
 43080 ;;		_INT1_DefaultInterruptHandler
 43081 ;; This function is called by:
 43082 ;;		_INT1_ISR
 43083 ;; This function uses a non-reentrant model
 43084 ;;
 43085                           
 43086                           	psect	text286
 43087  00A46A                     __ptext286:
 43088                           	opt callstack 0
 43089  00A46A                     _INT1_CallBack:
 43090                           	opt callstack 13
 43091                           
 43092                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 43093                           
 43094                           ;incstack = 0
 43095  00A46A  0101               	movlb	1	; () banked
 43096  00A46C  51ED               	movf	_INT1_InterruptHandler& (0+255),w,b
 43097  00A46E  11EE               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 43098  00A470  B4D8               	btfsc	status,2,c
 43099  00A472  0012               	return	
 43100                           
 43101                           ; BSR set to: 1
 43102                           ;ext_int.c: 46: {;ext_int.c: 47: INT1_InterruptHandler();
 43103  00A474  D801               	call	i2u1702_48
 43104  00A476  0012               	return	
 43105  00A478                     i2u1702_48:
 43106  00A478  0005               	push	
 43107  00A47A  6EFA               	movwf	pclath,c
 43108  00A47C  51ED               	movf	_INT1_InterruptHandler& (0+255),w,b
 43109  00A47E  6EFD               	movwf	tosl,c
 43110  00A480  51EE               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 43111  00A482  6EFE               	movwf	tosh,c
 43112  00A484  6AFF               	clrf	tosu,c
 43113  00A486  50FA               	movf	pclath,w,c
 43114  00A488  0012               	return		;indir
 43115  00A48A                     __end_of_INT1_CallBack:
 43116                           	opt callstack 0
 43117                           
 43118 ;; *************** function _DIO0_ISR_Lora *****************
 43119 ;; Defined at:
 43120 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 43121 ;; Parameters:    Size  Location     Type
 43122 ;;		None
 43123 ;; Auto vars:     Size  Location     Type
 43124 ;;		None
 43125 ;; Return value:  Size  Location     Type
 43126 ;;                  1    wreg      void 
 43127 ;; Registers used:
 43128 ;;		status,2, status,0
 43129 ;; Tracked objects:
 43130 ;;		On entry : 0/0
 43131 ;;		On exit  : 0/0
 43132 ;;		Unchanged: 0/0
 43133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43138 ;;Total ram usage:        0 bytes
 43139 ;; Hardware stack levels used:    1
 43140 ;; This function calls:
 43141 ;;		Nothing
 43142 ;; This function is called by:
 43143 ;;		_DIO0_ISR_Lora_Init
 43144 ;;		_INT1_CallBack
 43145 ;; This function uses a non-reentrant model
 43146 ;;
 43147                           
 43148                           	psect	text287
 43149  00A8EC                     __ptext287:
 43150                           	opt callstack 0
 43151  00A8EC                     _DIO0_ISR_Lora:
 43152                           	opt callstack 13
 43153                           
 43154                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 43155                           
 43156                           ;incstack = 0
 43157  00A8EC  8045               	bsf	_dioStatus,0,c	;volatile
 43158  00A8EE  0012               	return		;funcret
 43159  00A8F0                     __end_of_DIO0_ISR_Lora:
 43160                           	opt callstack 0
 43161                           
 43162 ;; *************** function _INT1_DefaultInterruptHandler *****************
 43163 ;; Defined at:
 43164 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 43165 ;; Parameters:    Size  Location     Type
 43166 ;;		None
 43167 ;; Auto vars:     Size  Location     Type
 43168 ;;		None
 43169 ;; Return value:  Size  Location     Type
 43170 ;;                  1    wreg      void 
 43171 ;; Registers used:
 43172 ;;		None
 43173 ;; Tracked objects:
 43174 ;;		On entry : 0/0
 43175 ;;		On exit  : 0/0
 43176 ;;		Unchanged: 0/0
 43177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43182 ;;Total ram usage:        0 bytes
 43183 ;; Hardware stack levels used:    1
 43184 ;; This function calls:
 43185 ;;		Nothing
 43186 ;; This function is called by:
 43187 ;;		_EXT_INT_Initialize
 43188 ;;		_INT1_CallBack
 43189 ;; This function uses a non-reentrant model
 43190 ;;
 43191                           
 43192                           	psect	text288
 43193  00A902                     __ptext288:
 43194                           	opt callstack 0
 43195  00A902                     _INT1_DefaultInterruptHandler:
 43196                           	opt callstack 13
 43197                           
 43198                           ;incstack = 0
 43199  00A902  0012               	return		;funcret
 43200  00A904                     __end_of_INT1_DefaultInterruptHandler:
 43201                           	opt callstack 0
 43202                           
 43203 ;; *************** function _ADC_ISR *****************
 43204 ;; Defined at:
 43205 ;;		line 136 in file "mcc_generated_files/adc.c"
 43206 ;; Parameters:    Size  Location     Type
 43207 ;;		None
 43208 ;; Auto vars:     Size  Location     Type
 43209 ;;		None
 43210 ;; Return value:  Size  Location     Type
 43211 ;;                  1    wreg      void 
 43212 ;; Registers used:
 43213 ;;		None
 43214 ;; Tracked objects:
 43215 ;;		On entry : 0/0
 43216 ;;		On exit  : 0/0
 43217 ;;		Unchanged: 0/0
 43218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43223 ;;Total ram usage:        0 bytes
 43224 ;; Hardware stack levels used:    1
 43225 ;; This function calls:
 43226 ;;		Nothing
 43227 ;; This function is called by:
 43228 ;;		_INTERRUPT_InterruptManager
 43229 ;; This function uses a non-reentrant model
 43230 ;;
 43231                           
 43232                           	psect	text289
 43233  00A8F0                     __ptext289:
 43234                           	opt callstack 0
 43235  00A8F0                     _ADC_ISR:
 43236                           	opt callstack 15
 43237                           
 43238                           ;adc.c: 139: PIR1bits.ADIF = 0;
 43239                           
 43240                           ;incstack = 0
 43241  00A8F0  9C9E               	bcf	3998,6,c	;volatile
 43242  00A8F2  0012               	return		;funcret
 43243  00A8F4                     __end_of_ADC_ISR:
 43244                           	opt callstack 0
 43245                           
 43246                           	psect	text290
 43247  000000                     __ptext290:
 43248                           	opt callstack 0
 43249                           
 43250                           	psect	rparam
 43251  0000                     
 43252                           	psect	temp
 43253  000046                     btemp:
 43254                           	opt callstack 0
 43255  000046                     	ds	12
 43256  0000                     wtemp0	set	btemp
 43257  0000                     wtemp1	set	btemp+2
 43258  0000                     wtemp2	set	btemp+4
 43259  0000                     wtemp3	set	btemp+6
 43260  0000                     wtemp4	set	btemp+8
 43261  0000                     wtemp5	set	btemp+10
 43262  0000                     wtemp8	set	btemp+1
 43263  0000                     ttemp0	set	btemp
 43264  0000                     ttemp1	set	btemp+3
 43265  0000                     ttemp2	set	btemp+6
 43266  0000                     ttemp3	set	btemp+9
 43267  0000                     ttemp5	set	btemp+1
 43268  0000                     ttemp6	set	btemp+4
 43269  0000                     ttemp7	set	btemp+8
 43270  0000                     ltemp0	set	btemp
 43271  0000                     ltemp1	set	btemp+4
 43272  0000                     ltemp2	set	btemp+8
 43273  0000                     lltemp0	set	btemp
 43274                           tosu	equ	0xFFF
 43275                           tosh	equ	0xFFE
 43276                           tosl	equ	0xFFD
 43277                           stkptr	equ	0xFFC
 43278                           pclatu	equ	0xFFB
 43279                           pclath	equ	0xFFA
 43280                           pcl	equ	0xFF9
 43281                           tblptru	equ	0xFF8
 43282                           tblptrh	equ	0xFF7
 43283                           tblptrl	equ	0xFF6
 43284                           tablat	equ	0xFF5
 43285                           prodh	equ	0xFF4
 43286                           prodl	equ	0xFF3
 43287                           indf0	equ	0xFEF
 43288                           postinc0	equ	0xFEE
 43289                           postdec0	equ	0xFED
 43290                           preinc0	equ	0xFEC
 43291                           plusw0	equ	0xFEB
 43292                           fsr0h	equ	0xFEA
 43293                           fsr0l	equ	0xFE9
 43294                           wreg	equ	0xFE8
 43295                           indf1	equ	0xFE7
 43296                           postinc1	equ	0xFE6
 43297                           postdec1	equ	0xFE5
 43298                           preinc1	equ	0xFE4
 43299                           plusw1	equ	0xFE3
 43300                           fsr1h	equ	0xFE2
 43301                           fsr1l	equ	0xFE1
 43302                           bsr	equ	0xFE0
 43303                           indf2	equ	0xFDF
 43304                           postinc2	equ	0xFDE
 43305                           postdec2	equ	0xFDD
 43306                           preinc2	equ	0xFDC
 43307                           plusw2	equ	0xFDB
 43308                           fsr2h	equ	0xFDA
 43309                           fsr2l	equ	0xFD9
 43310                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    494
    Data        56
    BSS         1820
    Persistent  24
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      73
    BANK0           160    156     156
    BANK1           256    105     251
    BANK2           256      0     256
    BANK3           256      0     248
    BANK4           256      0     244
    BANK5           256      0      40
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1243$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 36
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), log@coeff(CODE[36]), 

    strncat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> stringValue(BANK1[5]), STR_1(CODE[2]), 

    strncat@to	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK0[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK0[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), clearString(BANK5[40]), sensorsString(BANK3[40]), 
		 -> deviceEui(BANK3[8]), appEui(BANK3[8]), appKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), 
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), 
		 -> loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[56]), RadioConfiguration.syncWord(BANK1[8]), 
		 -> RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), clearString(BANK5[40]), sensorsString(BANK3[40]), 
		 -> deviceEui(BANK3[8]), appEui(BANK3[8]), appKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), 
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), 
		 -> loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[56]), RadioConfiguration.syncWord(BANK1[8]), 
		 -> RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    pointAddition@element	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), 

    adaptString@string	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    acquisitionData@string	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    uint16ToString@output	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_InterruptTicker(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_InterruptTicker(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3ISRClock(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3ISRClock(), Absolute function(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationKey@applicationKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appKey(BANK3[16]), 

    LORAWAN_SetApplicationEui@applicationEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> appEui(BANK3[8]), 

    LORAWAN_SetDeviceEui@deviceEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> deviceEui(BANK3[8]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1243$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1243$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S574$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S574$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S348$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK0[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _timerHandler->i2___awdiv
    _TMR3_ISR->_TMR3_WriteTimer
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _isJoined->_LORAWAN_GetStatus
    _acuadoriApp->_sendValue
    _tempSensAcquisition->_tempConversion
    _tempConversion->___fldiv
    _log->_eval_poly
    _frexp->___fleq
    _eval_poly->___flmul
    ___flmul->___fladd
    ___flsub->___fladd
    ___fladd->_frexp
    ___fldiv->___flmul
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _SetJoinFailState->_RxJoinResponse
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _lightSensAcquisition->_acquisitionData
    _leafSensAcquisition->_acquisitionData
    _acquisitionData->_uint16ToString
    _GPIOAverageRead->_GPIOAnalogRead
    _GPIOAnalogRead->_ADC_GetConversion
    _impedenceAcquisition->_uint16ToString
    _uint16ToString->___lwmod
    _sinGenStart->_i2c_sendData
    _i2c_stop->_i2c_usdelay
    _setSDA->_GPIODigitalWrite
    _resetSDA->_GPIODigitalWrite
    _i2c_sendData->_i2c_sdaWrite
    _averageMeasure->___ltdiv
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _LORAWAN_SetDeviceEui->_memcpy
    _LORAWAN_SetApplicationKey->_memcpy
    _LORAWAN_SetApplicationEui->_memcpy
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate
    _GPIOInit->_GPIOAnalogMode
    _GPIOInit->_GPIODigitalWrite
    _GPIOInit->_GPIOSet

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 13294642
                  _GPIODigitalToogle
                   _GPIODigitalWrite
                           _GPIOInit
                            _GPIOSet
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                      _LORAWAN_Reset
          _LORAWAN_SetApplicationEui
          _LORAWAN_SetApplicationKey
               _LORAWAN_SetDeviceEui
                  _SYSTEM_Initialize
                    _TMR5_StartTimer
                        _acuadoriApp
            _disableClockPeripherals
             _enableClockPeripherals
                           _isJoined
                         _timerReset
 ---------------------------------------------------------------------------------
 (1) _isJoined                                             5     5      0      69
                                              8 BANK0      5     5      0
                  _LORAWAN_GetStatus
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetStatus                                    8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _enableClockPeripherals                               0     0      0     111
                     _ADC_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (1) _disableClockPeripherals                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _acuadoriApp                                          0     0      0 6557089
                   _GPIODigitalWrite
           _LORAWAN_GetUplinkCounter
           _LORAWAN_SetUplinkCounter
               _impedenceAcquisition
                _leafSensAcquisition
               _lightSensAcquisition
                             _memcpy
                    _rn2483_delaysec
                          _sendValue
                            _strncat
                _tempSensAcquisition
 ---------------------------------------------------------------------------------
 (2) _tempSensAcquisition                                  4     4      0   41831
                                            100 BANK0      4     4      0
                    _GPIOAverageRead
                        _adaptString
                      _pointAddition
                     _tempConversion
                     _uint16ToString
 ---------------------------------------------------------------------------------
 (3) _tempConversion                                      16    14      2   35797
                                             86 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  6     2      4   19667
                                             77 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                8     2      6    1458
                                             12 BANK0      8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     902
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8    8609
                                             61 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3988
                                             36 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     666
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     484
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4729
                                             36 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3714
                                             20 BANK0     16     8      8
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2139
                                             61 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _pointAddition                                        5     3      2     245
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _strncat                                              8     2      6    2835
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _sendValue                                            6     6      0 6469281
                                            154 BANK0      2     2      0
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
                   _SwClearAllTimers
                         _timerReset
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SwClearAllTimers                                     1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_Mainloop                                     0     0      0 6135970
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (4) _SwTimersExecute                                      5     5      0 2380044
                                            123 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (5) _UnconfirmedTransmissionCallback                      1     0      1  157624
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (5) _RADIO_WatchdogTimeout                                1     0      1  695887
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (5) _RADIO_RxFSKTimeout                                   2     1      1  510590
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158759
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (6) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_LinkCheckCallback                            6     5      1    9521
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _DutyCycleCallback                                   11    10      1    9964
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _AutomaticReplyCallback                               1     0      1  333107
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (5) _AckRetransmissionCallback                            2     1      1  167767
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO5                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO4                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO3                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO2                                           3     3      0   36563
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO1                                           2     2      0  556813
                                             99 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (5) _RADIO_RxTimeout                                      0     0      0  520222
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO0                                           4     4      0 3132636
                                            150 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (5) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_TxDone                                         8     8      0  217540
                                            119 BANK0      8     8      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_RxDone                                         2     2      0 1106483
                                            148 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (6) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (5) _RADIO_FSKPayloadReady                                2     2      0 1590584
                                            148 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_RxTimeout                                    9     9      0  494480
                                             90 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) _LORAWAN_ReceiveWindow2Callback                       1     0      1  327152
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_RxDone                                      28    25      3 1079833
                                            123 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _UpdateRetransmissionAckTimeoutState                  4     4      0    9382
                                             50 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateJoinSuccessState                               5     4      1    9450
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UpdateCfList                                        13    11      2   24213
                                             62 BANK0     13    11      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _StartReTxTimer                                       9     9      0    9673
                                             50 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) _SetReceptionNotOkState                               0     0      0  168427
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (7) _SetJoinFailState                                     0     0      0      31
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (6) _RxJoinResponse                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _MacExecuteCommands                                   8     5      3   26978
                                             70 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (8) _ExecuteRxTimingSetup                                 3     1      2     843
                                              7 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveDelays                                  1     1      0     640
                                              6 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     578
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) _ExecuteRxParamSetupReq                               7     5      2    7473
                                             62 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (9) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (8) _ExecuteNewChannel                                    8     6      2   13695
                                             62 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (9) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (9) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (9) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (9) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (8) _LORAWAN_SetChannelIdStatus                           3     2      1    2697
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (9) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (8) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (8) _ExecuteLinkAdr                                       9     7      2    3388
                                             15 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (9) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (9) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (10) _EnableChannels1                                     8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (9) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (8) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (8) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_Send                                         7     3      4  333107
                                            116 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (4) _AssemblePacket                                      12     7      5  162586
                                            104 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _IncludeMacCommandsResponse                          14     9      5    2532
                                              0 BANK0     14     9      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (6) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) _EncryptFRMPayload                                   22     8     14   49183
                                             50 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2729
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _AssembleEncryptionBlock                              9     2      7   20386
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (7) _ExtractMic                                          10     6      4   15005
                                             11 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _ComputeSessionKeys                                   2     0      2   39998
                                             50 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (8) _PrepareSessionKeys                                   7     1      6   18825
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (7) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_FSKPacketSent                                  9     9      0  207908
                                            119 BANK0      9     9      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_TxDone                                      36    34      2  185492
                                             83 BANK0     36    34      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _SwTimerReadValue                                     9     5      4     523
                                             41 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (7) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LORAWAN_EnterContinuousReceive                       0     0      0  163576
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (6) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (8) _RADIO_ReceiveStart                                  10     8      2  126952
                                             73 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (8) _ConfigureRadioRx                                     5     1      4   15858
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_GetDioStatus                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _lightSensAcquisition                                 0     0      0    8838
                   _GPIODigitalWrite
                    _acquisitionData
                        _adaptString
                    _rn2483_delaysec
 ---------------------------------------------------------------------------------
 (2) _rn2483_delaysec                                      5     3      2     425
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _leafSensAcquisition                                  0     0      0    5991
                    _acquisitionData
                        _adaptString
 ---------------------------------------------------------------------------------
 (3) _acquisitionData                                      3     1      2    4965
                                             75 BANK0      3     1      2
                    _GPIOAverageRead
                     _uint16ToString
 ---------------------------------------------------------------------------------
 (3) _GPIOAverageRead                                     11     9      2     723
                                             13 BANK0     11     9      2
                     _GPIOAnalogRead
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (4) _GPIOAnalogRead                                       5     3      2      90
                                              8 BANK0      5     3      2
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (5) _ADC_GetConversion                                    8     6      2      45
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _impedenceAcquisition                                 0     0      0   11107
                        _adaptString
                     _averageMeasure
                        _sinGenStart
                     _uint16ToString
 ---------------------------------------------------------------------------------
 (3) _uint16ToString                                       6     2      4    3972
                                             69 BANK0      6     2      4
                    _GPIOAverageRead (ARG)
                            ___lwdiv
                            ___lwmod
                     _averageMeasure (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1126
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _sinGenStart                                          8     8      0    5476
                                              6 BANK0      8     8      0
                    _TMR3_StartTimer
                     _TMR3_StopTimer
                    _TMR5_StartTimer
                     _TMR5_StopTimer
                       _i2c_sendData
                           _i2c_stop
                        _i2c_waitACK
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0    5001
                    _GPIODigitalRead
                        _i2c_usdelay
                           _resetSDA
                             _setSDA
 ---------------------------------------------------------------------------------
 (5) _setSDA                                               0     0      0    2422
                   _GPIODigitalWrite
 ---------------------------------------------------------------------------------
 (5) _resetSDA                                             0     0      0    2422
                   _GPIODigitalWrite
 ---------------------------------------------------------------------------------
 (5) _i2c_usdelay                                          4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _GPIODigitalRead                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_sendData                                         2     0      2     225
                                              4 BANK0      2     0      2
                       _i2c_sdaWrite
 ---------------------------------------------------------------------------------
 (5) _i2c_sdaWrite                                         4     4      0      90
                                              0 BANK0      4     4      0
                        _i2c_waitACK
 ---------------------------------------------------------------------------------
 (4) _i2c_waitACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _averageMeasure                                      12    10      2     633
                                             10 BANK0     12    10      2
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (4) ___ltdiv                                             10     4      6     518
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) _adaptString                                          8     5      3    1026
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_SetUplinkCounter                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetUplinkCounter                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2155
                     _ADC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     111
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     111
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     333
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceEui                                 2     0      2   14518
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationKey                            2     0      2   14518
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationEui                            2     0      2   14518
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  268122
                                            122 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SelectChannelForTransmission                         3     3      0   24694
                                             83 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (5) _SearchAvailableChannel                              12     9      3    8778
                                             71 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadioTx                                     6     2      4   15718
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadio                                       5     1      4   15422
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetFSKSyncWord                                 3     1      2   14479
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_Transmit                                      17    14      3  128079
                                             73 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteConfiguration                            11     9      2   91386
                                             62 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _RADIO_WritePower                                     3     3      0   10383
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  111665
                                            113 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _Random                                               2     0      2    7569
                                             69 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (7) _rand                                                 2     0      2    5712
                                             62 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    1618
                                             64 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (7) _ComputeMic                                           9     4      5   85583
                                            104 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESCmac                                            116   109      7   70547
                                             90 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _GenerateSubkey                                      40    34      6   27424
                                             50 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (7) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _AESEncodeLoRa                                       20    16      4   20942
                                             30 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _AESEncode                                           24    20      4    4744
                                              7 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (8) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (8) _EncKeySchedule                                       7     5      2    1164
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  176994
                                             74 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Reset                                        1     1      0  101405
                                             73 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (2) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46235
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteMode                                      7     5      2   15915
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (6) _RADIO_RegisterRead                                   2     2      0     130
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFrequency                                12     8      4   16640
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     440
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (7) _HALSPISend                                           1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (8) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (6) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_LinkCheckConfigure                          11     9      2   15427
                                             62 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    5712
                                             50 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    5857
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (5) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _SwTimerStart                                         9     9      0    1591
                                             41 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (6) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (7) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _SwTimersInterrupt                                   17    13      4     458
                                             24 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (7) _TMR_GetDeltaTime                                    16    12      4     102
                                              8 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (5) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _InitDefault868Channels                               1     1      0   17947
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _InitDefault433Channels                               1     1      0   17947
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6   14248
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GPIOInit                                             0     0      0    5197
                     _GPIOAnalogMode
                   _GPIODigitalWrite
                            _GPIOSet
 ---------------------------------------------------------------------------------
 (1) _GPIOSet                                              2     1      1    1532
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _GPIODigitalWrite                                     2     1      1    2422
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _GPIOAnalogMode                                       2     1      1    1243
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _GPIODigitalToogle                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          8     8      0    3027
                                             41 COMRAM     8     8      0
                            _ADC_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR5_ISR                                            0     0      0    2048
                   Absolute function *
               _TMR5_InterruptTicker *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR5_WriteTimer                                     2     0      2     266
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR5_InterruptTicker                                0     0      0    1782
                       _timerHandler
                          _timerTick
 ---------------------------------------------------------------------------------
 (18) _timerTick                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _timerHandler                                        0     0      0    1782
                            ___lbmod
                          i2___awdiv
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (19) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (19) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     612
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (19) ___lbmod                                             4     3      1     693
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (16) _TMR3_ISR                                            0     0      0     266
                   Absolute function *
                       _TMR3ISRClock *
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR3_WriteTimer                                     2     0      2     266
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR3ISRClock                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (18) _TMR_ISR_lora                                        0     0      0     573
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (20) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (20) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (17) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (17) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (16) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIODigitalToogle
   _GPIODigitalWrite
   _GPIOInit
     _GPIOAnalogMode
     _GPIODigitalWrite
     _GPIOSet
   _GPIOSet
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Reset
     _InitDefault433Channels
       _memcpy
       _memset
     _InitDefault868Channels
       _memcpy
       _memset
     _LORAWAN_LinkCheckConfigure
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
       ___lmul
         _SwTimerReadValue (ARG)
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_SetLoRaSyncWord
     _StopAllSoftwareTimers
       _SwTimerStop
     _UpdateMinMaxChDataRate
     _memset
   _LORAWAN_SetApplicationEui
     _memcpy
   _LORAWAN_SetApplicationKey
     _memcpy
   _LORAWAN_SetDeviceEui
     _memcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR5_StartTimer
   _acuadoriApp
     _GPIODigitalWrite
     _LORAWAN_GetUplinkCounter
     _LORAWAN_SetUplinkCounter
     _impedenceAcquisition
       _adaptString
       _averageMeasure
         ___ltdiv
       _sinGenStart
         _TMR3_StartTimer
         _TMR3_StopTimer
         _TMR5_StartTimer
         _TMR5_StopTimer
         _i2c_sendData
           _i2c_sdaWrite
             _i2c_waitACK
         _i2c_stop
           _GPIODigitalRead
           _i2c_usdelay
           _resetSDA
             _GPIODigitalWrite
           _setSDA
             _GPIODigitalWrite
         _i2c_waitACK
       _uint16ToString
         _GPIOAverageRead (ARG)
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         ___lwdiv (ARG)
         ___lwmod (ARG)
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _averageMeasure (ARG)
           ___ltdiv
     _leafSensAcquisition
       _acquisitionData
         _GPIOAverageRead
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         _uint16ToString
           _GPIOAverageRead (ARG)
             _GPIOAnalogRead
               _ADC_GetConversion
             ___ltdiv
           ___lwdiv (ARG)
           ___lwmod (ARG)
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _averageMeasure (ARG)
             ___ltdiv
       _adaptString
     _lightSensAcquisition
       _GPIODigitalWrite
       _acquisitionData
         _GPIOAverageRead
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         _uint16ToString
           _GPIOAverageRead (ARG)
             _GPIOAnalogRead
               _ADC_GetConversion
             ___ltdiv
           ___lwdiv (ARG)
           ___lwmod (ARG)
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _averageMeasure (ARG)
             ___ltdiv
       _adaptString
       _rn2483_delaysec
     _memcpy
     _rn2483_delaysec
     _sendValue
       _LORAWAN_Mainloop
         _INTERRUPT_GetDioStatus
         _RADIO_DIO0
           _RADIO_FSKPacketSent
             _LORAWAN_TxDone
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_GetStatus
               _RxData *
               _SwTimerIsRunning *
               _SwTimerReadValue *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop *
               ___lldiv *
               ___lmul *
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerReadValue
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
             _SwTimerStop
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_FSKPayloadReady
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _LORAWAN_RxDone
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CheckFlags
               _CheckMcastFlags
               _ComputeMic
                 _AESCmac
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _GenerateSubkey
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _FillSubKey
                     _memset
                   _memcpy
                   _memset
                 _memcpy
               _ComputeSessionKeys
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _PrepareSessionKeys
                   _memcpy
                   _memset
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _ExtractMic
                 _memcpy
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _LORAWAN_Send
                 _AssemblePacket
                   _AESCmac
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _GenerateSubkey
                       _AESEncodeLoRa
                         _AESEncode
                           _EncKeySchedule
                           _EncodeShiftRow
                         _memcpy
                       _FillSubKey
                       _memset
                     _memcpy
                     _memset
                   _AssembleEncryptionBlock
                     _memcpy
                     _memset
                   _CountfOptsLength
                   _EncryptFRMPayload
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _AssembleEncryptionBlock
                       _memcpy
                       _memset
                     ___awdiv
                   _FindSmallestDataRate
                   _IncludeMacCommandsResponse
                     _RADIO_GetPacketSnr
                   _memcpy
                   _memset
                 _LORAWAN_GetMaxPayloadSize
                   _CountfOptsLength
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_Transmit
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   _SwTimerStop
                   ___lldiv
                 _SelectChannelForTransmission
                   _ConfigureRadioTx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                     _RADIO_SetOutputPower
                   _SearchAvailableChannel
                     _Random
                       ___lwmod
                         _rand (ARG)
                           ___lmul
                             _SwTimerReadValue (ARG)
                               _SwTimersInterrupt
                                 _TMR_GetDeltaTime
                                   _TMR1_ReadTimer
                       _rand
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
               _MacExecuteCommands
                 _ExecuteDevStatus
                 _ExecuteDutyCycle
                 _ExecuteLinkAdr
                   _EnableChannels
                     _EnableChannels1
                       _UpdateChannelIdStatus
                   _UpdateCurrentDataRate
                   _UpdateTxPower
                   _ValidateChannelMask
                   _ValidateChannelMaskCntl
                   _ValidateDataRate
                   _ValidateTxPower
                 _ExecuteLinkCheck
                 _ExecuteNewChannel
                   _LORAWAN_SetChannelIdStatus
                     _UpdateChannelIdStatus
                     _ValidateChannelId
                   _UpdateChannelIdStatus
                   _UpdateDataRange
                   _UpdateDutyCycle
                   _UpdateFrequency
                   _ValidateChannelId
                   _ValidateDataRange
                     _ValidateDataRate
                   _ValidateFrequency
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxParamSetupReq
                   _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                   _ValidateFrequency
                   _ValidateRxOffset
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxTimingSetup
                   _UpdateReceiveDelays
                     ___wmul
               _RADIO_GetStatus
               _RADIO_ReleaseData
               _RxData *
               _SearchAvailableChannel *
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SetReceptionNotOkState *
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RxData *
               _StartReTxTimer *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _SwTimerStop *
               _UpdateCfList *
                 _LORAWAN_SetChannelIdStatus
                   _UpdateChannelIdStatus
                   _ValidateChannelId
                 _ValidateFrequency
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                 _memcpy
               _UpdateDLSettings *
               _UpdateJoinSuccessState *
                 _RxJoinResponse *
                 _SwTimerSetTimeout *
                   ___lldiv (ARG)
                 _SwTimerStart *
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv *
               _UpdateReceiveDelays *
                 ___wmul
               _UpdateRetransmissionAckTimeoutState *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _memcpy *
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RxDone
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _LORAWAN_RxDone
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CheckFlags
               _CheckMcastFlags
               _ComputeMic
                 _AESCmac
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _GenerateSubkey
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _FillSubKey
                     _memset
                   _memcpy
                   _memset
                 _memcpy
               _ComputeSessionKeys
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _PrepareSessionKeys
                   _memcpy
                   _memset
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _ExtractMic
                 _memcpy
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _LORAWAN_Send
                 _AssemblePacket
                   _AESCmac
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _GenerateSubkey
                       _AESEncodeLoRa
                         _AESEncode
                           _EncKeySchedule
                           _EncodeShiftRow
                         _memcpy
                       _FillSubKey
                       _memset
                     _memcpy
                     _memset
                   _AssembleEncryptionBlock
                     _memcpy
                     _memset
                   _CountfOptsLength
                   _EncryptFRMPayload
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _AssembleEncryptionBlock
                       _memcpy
                       _memset
                     ___awdiv
                   _FindSmallestDataRate
                   _IncludeMacCommandsResponse
                     _RADIO_GetPacketSnr
                   _memcpy
                   _memset
                 _LORAWAN_GetMaxPayloadSize
                   _CountfOptsLength
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_Transmit
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   _SwTimerStop
                   ___lldiv
                 _SelectChannelForTransmission
                   _ConfigureRadioTx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                     _RADIO_SetOutputPower
                   _SearchAvailableChannel
                     _Random
                       ___lwmod
                         _rand (ARG)
                           ___lmul
                             _SwTimerReadValue (ARG)
                               _SwTimersInterrupt
                                 _TMR_GetDeltaTime
                                   _TMR1_ReadTimer
                       _rand
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
               _MacExecuteCommands
                 _ExecuteDevStatus
                 _ExecuteDutyCycle
                 _ExecuteLinkAdr
                   _EnableChannels
                     _EnableChannels1
                       _UpdateChannelIdStatus
                   _UpdateCurrentDataRate
                   _UpdateTxPower
                   _ValidateChannelMask
                   _ValidateChannelMaskCntl
                   _ValidateDataRate
                   _ValidateTxPower
                 _ExecuteLinkCheck
                 _ExecuteNewChannel
                   _LORAWAN_SetChannelIdStatus
                     _UpdateChannelIdStatus
                     _ValidateChannelId
                   _UpdateChannelIdStatus
                   _UpdateDataRange
                   _UpdateDutyCycle
                   _UpdateFrequency
                   _ValidateChannelId
                   _ValidateDataRange
                     _ValidateDataRate
                   _ValidateFrequency
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxParamSetupReq
                   _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                   _ValidateFrequency
                   _ValidateRxOffset
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxTimingSetup
                   _UpdateReceiveDelays
                     ___wmul
               _RADIO_GetStatus
               _RADIO_ReleaseData
               _RxData *
               _SearchAvailableChannel *
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SetReceptionNotOkState *
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RxData *
               _StartReTxTimer *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _SwTimerStop *
               _UpdateCfList *
                 _LORAWAN_SetChannelIdStatus
                   _UpdateChannelIdStatus
                   _ValidateChannelId
                 _ValidateFrequency
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                 _memcpy
               _UpdateDLSettings *
               _UpdateJoinSuccessState *
                 _RxJoinResponse *
                 _SwTimerSetTimeout *
                   ___lldiv (ARG)
                 _SwTimerStart *
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv *
               _UpdateReceiveDelays *
                 ___wmul
               _UpdateRetransmissionAckTimeoutState *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _memcpy *
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
             ___abdiv
           _RADIO_TxDone
             _LORAWAN_TxDone
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_GetStatus
               _RxData *
               _SwTimerIsRunning *
               _SwTimerReadValue *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop *
               ___lldiv *
               ___lmul *
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerReadValue
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
             _SwTimerStop
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO1
           _RADIO_FHSSChangeChannel
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RxTimeout
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO2
           _RADIO_FHSSChangeChannel
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO3
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO4
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO5
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _SwTimersExecute
           Absolute function(Fake) *
           _AckRetransmissionCallback *
             _FindSmallestDataRate
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForConfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
             _UpdateRetransmissionAckTimeoutState *
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
           _AutomaticReplyCallback *
             _LORAWAN_Send
               _AssemblePacket
                 _AESCmac
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _GenerateSubkey
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _FillSubKey
                     _memset
                   _memcpy
                   _memset
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 _CountfOptsLength
                 _EncryptFRMPayload
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _AssembleEncryptionBlock
                     _memcpy
                     _memset
                   ___awdiv
                 _FindSmallestDataRate
                 _IncludeMacCommandsResponse
                   _RADIO_GetPacketSnr
                 _memcpy
                 _memset
               _LORAWAN_GetMaxPayloadSize
                 _CountfOptsLength
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _SelectChannelForTransmission
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
           _DutyCycleCallback *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _LORAWAN_LinkCheckCallback *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _LORAWAN_ReceiveWindow1Callback *
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _GetRx1Freq
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
           _LORAWAN_ReceiveWindow2Callback *
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_RxFSKTimeout *
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
           _RADIO_WatchdogTimeout *
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _LORAWAN_TxDone
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_GetStatus
               _RxData *
               _SwTimerIsRunning *
               _SwTimerReadValue *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop *
               ___lldiv *
               ___lmul *
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _UnconfirmedTransmissionCallback *
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForUnconfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
       _LORAWAN_Send
         _AssemblePacket
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CountfOptsLength
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _FindSmallestDataRate
           _IncludeMacCommandsResponse
             _RADIO_GetPacketSnr
           _memcpy
           _memset
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _SelectChannelForTransmission
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _SwClearAllTimers
       _timerReset
     _strncat
     _tempSensAcquisition
       _GPIOAverageRead
         _GPIOAnalogRead
           _ADC_GetConversion
         ___ltdiv
       _adaptString
       _pointAddition
       _tempConversion
         ___fladd
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___fldiv
           ___fladd (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___flmul (ARG)
             ___fladd (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub
           ___fladd
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
         ___fltol
         ___xxtofl
         _log
           ___fladd
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___fleq
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl
           _eval_poly
             ___fladd
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
           _frexp
             ___fleq
       _uint16ToString
         _GPIOAverageRead (ARG)
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         ___lwdiv (ARG)
         ___lwmod (ARG)
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _averageMeasure (ARG)
           ___ltdiv
   _disableClockPeripherals
   _enableClockPeripherals
     _ADC_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
   _isJoined
     _LORAWAN_GetStatus
   _timerReset

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3ISRClock *
     _TMR3_WriteTimer *
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_InterruptTicker *
       _timerHandler
         ___lbmod
         i2___awdiv
         i2___lwdiv
         i2___lwmod
       _timerTick
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     3AE      37       24.2%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      28      16       15.6%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      F4      14       95.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F8      11       96.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      9C       5       97.5%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      49       1       88.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4F4      12        0.0%
DATA                 0      0     8A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul 28 09:33:51 2020

                                  ??_LORAWAN_TxDone 00B5                          __end_of_DIO3_ISR_Lora_Init A8FC  
                                ?_LORAWAN_RxTimeout 0001                                        ___fldiv@aexp 00B5  
                                      ___fldiv@bexp 00B4                    __end_of_TMR5_SetInterruptHandler A7C4  
                                      ___fldiv@sign 00AD                    __size_of_RADIO_FHSSChangeChannel 003C  
                                    HALSPISend@data 0061                                         _pulseSignal 01F3  
                   __end_of_ValidateChannelMaskCntl A36A                                        ___awdiv@sign 0065  
                   __size_of_UpdateJoinSuccessState 013E                                 ___wmul@multiplicand 0062  
                __size_of_IOCB4_SetInterruptHandler 000A                                  i2___lwdiv@dividend 0001  
                                      _TMR_ISR_lora 9204                                      _GPIOAnalogRead A48A  
                                    _GPIOAnalogMode 640A                               __end_of_AESEncodeLoRa 9C64  
                                 ??_TMR5_WriteTimer 0003                                         ?_RADIO_DIO0 0001  
                                       ?_RADIO_DIO1 0001                                         ?_RADIO_DIO2 0001  
                                       ?_RADIO_DIO3 0001                                         ?_RADIO_DIO4 0001  
                                       ?_RADIO_DIO5 0001                              ??_lightSensAcquisition 00AE  
                        ?_IOCB4_SetInterruptHandler 0060                            __size_of_acquisitionData 0022  
                                      __CFG_CP0$OFF 000000                                        __CFG_CP1$OFF 000000  
                                      __CFG_CP2$OFF 000000                                        __CFG_CP3$OFF 000000  
                                       __CFG_LVP$ON 000000                                 ??_LORAWAN_RxTimeout 00BA  
                                               l242 8AEE                                                 l610 9BAE  
                                               l484 16D4                                         ?_RADIO_Init 0079  
                                               l478 14C0                                                 l497 17B6  
                                               l691 97D2                                                 l694 97E4  
                                               l688 9B7A                                     ??_UpdateTxPower 0060  
                                      __CFG_CPB$OFF 000000                                        __CFG_CPD$OFF 000000  
              __end_of_SelectChannelForTransmission 8D7C               __size_of_SelectChannelForTransmission 0068  
                      _SelectChannelForTransmission 8D14                              _ExecuteRxParamSetupReq 52D4  
                                _RADIO_Transmit$781 00B4                                  _DIO2_ISR_Lora_Init A6F0  
                                __size_of_AESEncode 0300              __end_of_EUSART2_SetFramingErrorHandler A80A  
           __size_of_EUSART2_SetFramingErrorHandler 000A                      _EUSART2_SetFramingErrorHandler A800  
                               _tempSensAcquisition 9038                                     _timer1ReloadVal 01E7  
                                   ?_EncKeySchedule 0060                                                 _log 4B98  
                                   __end_of_ADC_ISR A8F4                                                 _low 0121  
                             _RADIO_SetLoRaSyncWord A85A                                                 prod 000FF3  
                                               tosl 000FFD                                                 wreg 000FE8  
                                        _TXSTA2bits 000F72                                     __end_of_AESCmac 1EB6  
                           __end_of_SwTimersExecute 7978                              SystemBlockingWaitMs@ms 0060  
                           LORAWAN_Join@bufferIndex 00DA                                        ___flmul@aexp 0095  
                                      ___flmul@bexp 0096                            __size_of_RADIO_GetStatus 0006  
                             ?_SystemBlockingWaitMs 0060                                ??i2_TMR_GetDeltaTime 000D  
                                      ___flmul@sign 0090                                        ___flmul@temp 009B  
                                      ___flmul@prod 0097                            ??_SearchAvailableChannel 00AA  
                      __end_of_FindSmallestDataRate 7A3A                 __end_of_RADIO_SetFrequencyHopPeriod A850  
                       _RADIO_SetFrequencyHopPeriod A846                                          _CheckFlags 9096  
                             ??_leafSensAcquisition 00AE                              ?_TMR_OverrideRemaining 006A  
                                     _INT1_CallBack A46A                            ?_AssembleEncryptionBlock 006B  
                               ?_DIO2_ISR_Lora_Init 0001                                   ??_UpdateFrequency 0064  
                         __size_of_SwClearAllTimers 0030                                     __end_of_GPIOSet 6E30  
                                      ___fltol@exp1 0069                                  __size_of_IOCB4_ISR 0020  
                                              l1101 A0C8                                                l1040 0E92  
                                              l1109 9298                                                l1117 48F0  
                                              l1222 65B2                                                l2024 1854  
                                              l1128 453E                                                l1072 2EC2  
                                              l1049 1114                                                l1233 6274  
                                              l1241 A608                                                l1145 53BE  
                                              l1154 68FC                                                l2034 193C  
                                              l1067 2EB8                                                l1315 2E72  
                                              l1164 693A                                                l2028 192E  
                                              l2029 1928                                                l1262 A258  
                                              l1511 7E40                                                l1256 982A  
                                              l1097 A620                                                l1249 8BD0  
                                              l4002 8C26                                                l1282 96D6  
                                   _timer3ReloadVal 01E3                                                l2076 24B8  
                                              l1268 A366                                                l4022 934C  
                                              l1527 7032                                                l4032 98F4  
                                              l1529 703A                                                l1297 8C74  
                                              l1810 757A                                                l1539 7106  
                                              l4115 388C                                                l4060 29AC  
                                              l3341 5C00                                                l1805 7BDE  
                                              l4061 298A                                                l2198 A6B8  
                                              l3510 A5B6                                                l4126 38FA  
             RADIO_WriteConfiguration@symbolTimeout 009E                                                l1807 7C62  
                                              l4127 38F6                                                l2528 92CA  
                                              l1912 0122                                                l2704 5582  
                                              l4145 1F38                                                l1834 5008  
                                              l4162 21D6                                                l4154 2150  
                                              l3507 A5A8                                                l1819 758A  
                                              l4155 214C                                                l4076 2A7E  
                                              l4085 2AE4                                                l3526 A268  
                                              l3366 5C90                                                l4086 2AE0  
                                              l3368 5CB6                                                l1856 61CA  
                                              l4193 58EC                                                l3570 859E  
                                              l1786 5208                                                l4186 586E  
                                              l3395 8F0A                                                l1888 7792  
                                              l3951 8E3A                                                ?_log 00AD  
                                              l3997 8C32                                                STR_1 FFF5  
                                              STR_2 FFF7                                                STR_3 FFFD  
                                              STR_4 FFFB                                                STR_5 FFF9  
                                  _RADIO_WritePower 7206                        ??_LORAWAN_SetChannelIdStatus 0065  
                           _PrepareJoinRequestFrame 56DC                                                _LATA 000F89  
                                              _LATB 000F8A                                                _LATC 000F8B  
                                              _LATD 000F8C                                                _LATE 000F8D  
                                      ?_RADIO_Reset 0001                          __size_of_RADIO_ReceiveStop 0020  
                                              _TMR1 000FCE                                                _TMR3 000FB2  
                                              _TMR5 000F4F                                   ??_UpdateDutyCycle 0062  
                                              _WPUB 000F61                              ??_LORAWAN_PlatformInit 0062  
                                     _INT2_CallBack A44A                   __end_of_LORAWAN_SetApplicationEui 9F94  
                 __end_of_LORAWAN_SetApplicationKey 9F66                                                _nACK 0120  
                          ??_InitDefault433Channels 006B                            ExecuteNewChannel@drRange 00A0  
                                _PrepareSessionKeys 804E                                                _flag 0041  
                                              _clip 0123                                                _high 0122  
                                              _loRa 0205                                                _main 5430  
                                              _rand 9150                                __size_of_adaptString 0078  
                    __end_of_UpdateMinMaxChDataRate 77F4                                                fsr0h 000FEA  
                                              fsr1h 000FE2                                  i2___lwdiv@quotient 0005  
                                              indf0 000FEF                                                fsr2h 000FDA  
                                              fsr0l 000FE9                                                indf2 000FDF  
                                              fsr1l 000FE1                                                fsr2l 000FD9  
                           __size_of_RADIO_Transmit 0224                                                btemp 0046  
                                     __CFG_BORV$190 000000                      __size_of_StopAllSoftwareTimers 0052  
                                     ComputeMic@mic 00CD                                       ComputeMic@key 00C8  
                                              log@x 00AD                           __end_of_LORAWAN_RxTimeout 317C  
                         __size_of_ConfigureRadioRx 002A                           __size_of_ConfigureRadioTx 004C  
                 __size_of_INT2_SetInterruptHandler 000A                       __end_of_StopAllSoftwareTimers 944E  
                              ?_tempSensAcquisition 0001                                       ?_i2c_sdaWrite 0001  
                         ?_INT2_SetInterruptHandler 0060                                                prodh 000FF4  
                                              prodl 000FF3                                                start 00A4  
                                   _timer5ReloadVal 01DF                                       __CFG_IESO$OFF 000000  
                          __end_of_CountfOptsLength 772A                                     ___fldiv@new_exp 00AE  
                                     ?_i2c_sendData 0064                                     _TMR3_Initialize A076  
                                     ??_i2c_waitACK 0060                               ExecuteLinkAdr@txPower 0074  
                               __size_of_HALSPISend 000E                                     _GPIODigitalRead 7A3A  
                        ??_TMR1_SetInterruptHandler 0062                          EnableChannels1@channelMask 0064  
                                  ??_AssemblePacket 00CD                              ?_HALResetPinMakeOutput 0001  
                               ?_PrepareSessionKeys 006B                              __size_of_TMR_SwapTimer 0042  
                        __end_of_RADIO_GetPacketSnr A8A6                                        ___param_bank 000000  
                                        _GetRx1Freq A666                                         _stringValue 016F  
                        __size_of_RADIO_ReleaseData 0006                                ??_DIO2_ISR_Lora_Init 0062  
                                     ??_i2c_usdelay 0062                              __end_of_GPIOAnalogRead A4A8  
                            __end_of_GPIOAnalogMode 651E                     __end_of_CreateAllSoftwareTimers 94A0  
            SearchAvailableChannel@transmissionType 00A7                     __size_of_HALResetPinOutputValue 001A  
                                             ??_log 00B1                               MacExecuteCommands@ptr 00AC  
                             _RADIO_WriteFSKBitRate 8D7C                            __size_of_SystemTimerInit 0008  
                                  __end_of_INT1_ISR A8A0                                    __end_of_INT2_ISR A898  
                                  __end_of_GPIOInit 5E62                      __size_of_OSCILLATOR_Initialize 000E  
                            ExecuteLinkAdr@dataRate 0077                       __end_of_OSCILLATOR_Initialize A776  
                __size_of_LORAWAN_LinkCheckCallback 016C                                               l20020 7068  
                                             l20014 7054                                               l20006 7042  
                                             l20200 4254                                               l20210 4346  
                                             l20036 7096                                               l20028 7082  
                                             l20220 43B4                                               l20212 435C  
                                             l20204 4304                                               l21020 9DA8  
                                             l20046 70AA                                               l20214 4372  
                                             l20230 4402                                               l20206 4318  
                                             l21008 66B6                                               l20136 876A  
                                             l20216 4388                                               l20208 4330  
                                             l20400 0500                                               l21112 7BE0  
                                             l20154 87A6                                               l20218 439E  
                                             l20322 02E2                                               l20306 0270  
                                             l21130 4EBC                                               l21202 61C6  
                                   __end_of___abdiv 8EB2                                               l20228 43C6  
                                             l20236 4422                                               l21300 9658  
                                             l21212 88DA                                               l20174 871A  
                                             l20502 0824                                               l20262 011E  
                                             l21302 965E                                               l21310 9676  
                                             l20094 5BC2                                               l21400 4AD2  
                                             l20192 90D8                                               l20184 90AC  
                                             l20512 082A                                               l20416 05AE  
                                             l20360 046E                                               l20344 03F6  
                                             l20328 02F2                                               l20432 05F6  
                                             l20280 01B4                                               l20256 00E2  
                                             l21152 4F6C                                               l21136 4EDA  
                                             l20088 5B26                                               l21410 4B1C  
                                             l21402 4AE8                                               l20610 0AE4  
                                             l20370 04B6                                               l20362 0486  
                                             l21306 9666                                               l21322 952C  
                                             l21146 4F0E                                               l21074 2C6A  
                                             l21066 2BAE                                               l21250 7968  
                                             l14300 6EC2                                               l15100 7A58  
                                             l20188 90C2                                               l20612 0AEA  
                                             l20524 0844                                               l20436 0624  
                                             l20444 0630                                               l20380 04C2  
                                             l20284 01C6                                               l21316 951E  
                                             l21076 2C84                                               l21084 2D20  
                                             l21236 78C0                                               l14310 6EDA  
                                             l20606 0AD8                                               l21270 8232  
                                             l21318 9524                                               l21182 6154  
                                             l14304 6ECC                                               l14240 6E36  
                                             l15112 7A6A                                               l20608 0ADE  
                                             l20560 0A18                                               l20536 08AA  
                                             l20528 0854                                               l20464 0736  
                                             l20392 04D6                                               l20720 3096  
                                             l20704 2FC6                                               l21272 8238  
                                             l21192 6184                                               l21096 2DCE  
                                             l21248 7964                                               l14306 6ED0  
                                             l14250 6E4E                                               l14314 6EDE  
                                             l21442 8A48                                               l21426 89D0  
                                             l16002 773C                                               l15130 7A82  
                                             l15106 7A62                                               l20554 0988  
                                             l20538 08B8                                               l20642 0B6C  
                                             l20706 2FCE                                               l20730 3148  
                                             l21282 8262                                               l21186 615A  
                                             l21370 9D68                                               l14410 28E2  
                                             l22250 5532                                               l22218 549E  
                                             l14252 6E52                                               l14244 6E40  
                                             l16012 77E2                                               l21524 7EB2  
                                             l15124 7A7A                                               l20820 126E  
                                             l20652 0BB0                                               l20492 07CC  
                                             l20396 04F0                                               l20724 3110  
                                             l20900 737C                                               l21268 822C  
                                             l21276 8240                                               l21292 8280  
                                             l14270 6E7C                                               l14262 6E6A  
                                             l14246 6E44                                               l16014 77E6  
                                             l21606 4748                                               l15206 8BF2  
                                             l15142 7A96                                               l15118 7A74  
                                             l20814 1256                                               l20494 07E4  
                                             l20646 0B72                                               l20718 3092  
                                             l20910 73AE                                               l21286 8270  
                                             l21278 8250                                               l21374 9D82  
                                             l14406 28DE                                               l15310 6B86  
                                             l14280 6E94                                               l14264 6E6E  
                                             l14256 6E5C                                               l21472 525C  
                                             l21464 51F6                                               l15208 8BFC  
                                             l15136 7A8C                                               l16120 9A52  
                                             l20824 12A2                                               l20808 11E2  
                                             l20680 2F42                                               l20664 2EA6  
                                             l20912 73B2                                               l21288 8278  
                                             l14512 2AA2                                               l14504 2A6E  
                                             l15312 6C1C                                               l22248 552C  
                                             l14282 6E98                                               l14274 6E86  
                                             l14258 6E60                                               l21458 51C6  
                                             l21466 51FA                                               l15082 7A40  
                                             l15226 931A                                               l16114 9A4A  
                                             l20754 0D7E                                               l20850 8E7A  
                                             l21298 9652                                               l14522 2AB8  
                                             l14418 2902                                               l14602 1F24  
                                             l14292 6EB0                                               l14276 6E8A  
                                             l14268 6E78                                               l16132 8926  
                                             l15180 9102                                               l15148 7AA0  
                                             l15156 7AAA                                               l15172 A272  
                                             l15228 9322                                               l20772 103A  
                                             l20932 7D5C                                               l20844 8E6A  
                                             l21732 8EBE                                               l14460 2998  
                                             l15260 58D4                                               l14612 1F56  
                                             l14604 1F28                                               l14294 6EB4  
                                             l14286 6EA2                                               l16142 8972  
                                             l15190 9138                                               l15094 7A4E  
                                             l15238 9342                                               l16126 9A7C  
                                             l20686 2F7A                                               l20862 8EA0  
                                             l20854 8E80                                               l20838 8E60  
                                             l14462 299C                                               l14382 2896  
                                             l15254 589C                                               l14710 81DE  
                                             l17120 7F24                                               l14288 6EA6  
                                             l21664 571A                                               l16152 8988  
                                             l16144 8974                                               l15088 7A46  
                                             l20768 0FC8                                               l20960 7DCE  
                                             l20952 7DB4                                               l20936 7D7A  
                                             l15600 374A                                               l14560 2B58  
                                             l14528 2AC2                                               l14448 293E  
                                             l15256 58A2                                               l15248 587E  
                                             l17130 7F42                                               l17122 7F2A  
                                             l14298 6EBE                                               l21762 8F8E  
                                             l16138 8944                                               l16162 5BF8  
                                             l15530 883E                                               l20778 1040  
                                             l20698 2FC0                                               l20866 8EA8  
                                             l14562 2B5A                                               l14386 289A  
                                             l15266 5912                                               l15258 58AE  
                                             l14714 81FC                                               l14706 81AA  
                                             l17140 7F60                                               l17132 7F48  
                                             l17124 7F30                                               l15372 8AF0  
                                             l21764 8F92                                               l15188 9136  
                                             l16180 5C3E                                               l16172 5C0C  
                                             l20788 10FC                                               l20796 117A  
                                             l20956 7DB8                                               l15620 378A  
                                             l14556 2B50                                               l14548 2B2A  
                                             l14484 29F2                                               l14476 29D0  
                                             l15284 595E                                               l15268 591E  
                                             l14660 2116                                               l17134 7F4E  
                                             l17126 7F36                                               l17118 7F1E  
                                             l18030 3334                                               l18022 32FE  
                                             l21678 575C                                               l16182 5C40  
                                             l15702 3962                                               l14486 29F6  
                                             l14494 2A08                                               l14654 20F8  
                                             l16262 283A                                               l17136 7F54  
                                             l17128 7F3C                                               l17144 7F66  
                                             l14728 A5EA                                               l18024 3308  
                                             l18016 32D2                                               l18008 320C  
                                             l15560 9DE2                                               l20896 735E  
                                             l15712 3998                                               l15616 3786  
                                             l14680 2194                                               l14584 1EE4  
                                             l15296 7CBA                                               l16264 284A  
                                             l16256 27DA                                               l17138 7F5A  
                                             l18130 9F9E                                               l18210 6CA4  
                                             l18018 32DC                                               l20986 67C2  
                                             l16274 9760                                               l15714 399A  
                                             l15706 398C                                               l15642 37EC  
                                             l15634 37D4                                               l14586 1EE8  
                                             l16258 2802                                               l18108 8590  
                                             l18124 8E2C                                               l18116 8DF8  
                                             l18028 332A                                               l15556 9DC4  
                                             l16196 5C5C                                               l19012 655C  
                                             l15660 3864                                               l15652 383C  
                                             l15628 37BE                                               l14684 21B2  
                                             l14588 1EF8                                               l16630 6D48  
                                             l18134 9FAE                                               l18118 8E04  
                                             l18230 6CF0                                               l18206 6C98  
                                             l18214 6CB6                                               l18142 93B6  
                                             l18302 7262                                               l19022 6602  
                                             l15750 7B62                                               l15734 7B18  
                                             l15574 4C04                                               l16800 64D0  
                                             l16640 6D60                                               l16624 6D3A  
                                             l18048 344A                                               l18312 728E  
                                             l18304 7270                                               l16288 832A  
                                             l19024 6606                                               l15672 38A2  
                                             l15760 7B7A                                               l14696 21F4  
                                             l15568 4BBC                                               l16642 6D64  
                                             l16634 6D52                                               l18082 91BE  
                                             l18242 6D1E                                               l18226 6CE2  
                                             l18146 93F2                                               l18330 72C8  
                                             l15666 388A                                               l15762 7B86  
                                             l15754 7B72                                               l16740 641C  
                                             l16804 64D6                                               l16660 6D8E  
                                             l16652 6D7C                                               l16636 6D56  
                                             l16628 6D44                                               l18172 6AB8  
                                             l18228 6CE6                                               l18316 729C  
                                             l18308 7280                                               l18500 138E  
                                             l16812 84B2                                               l15596 3746  
                                             l16742 6422                                               l16670 6DA6  
                                             l16654 6D80                                               l16646 6D6E  
                                             l18166 6A64                                               l18086 91D2  
                                             l18422 98EA                                               l18414 98CA  
                                             l18502 13B6                                               l18510 142A  
                                             l19134 685C                                               l19206 79F4  
                                             l16814 84B8                                               l15678 38C0  
                                             l16760 6458                                               l16752 6440  
                                             l16736 6410                                               l16672 6DAA  
                                             l16664 6D98                                               l16648 6D72  
                                             l18176 6B1C                                               l18096 8550  
                                             l18416 98D2                                               l18336 72D0  
                                             l18504 13DE                                               l18512 1442  
                                             l19136 6862                                               l19152 6900  
                                             l19160 691C                                               l19208 79F6  
                                             l19216 7A18                                               l19224 7A34  
                                             l19320 231E                                               l16816 84C8  
                                             l15768 7BA2                                               l16770 6476  
                                             l16754 6446                                               l16746 642E  
                                             l16690 6DD4                                               l16682 6DC2  
                                             l16666 6D9C                                               l16658 6D8A  
                                             l18178 6B1E                                               l18098 855C  
                                             l18194 6C6E                                               l18186 6C54  
                                             l18506 1416                                               l18514 145C  
                                             l18370 9E30                                               l19250 4D90  
                                             l19242 4D52                                               l19306 22AA  
                                             l19234 9974                                               l16818 84D8  
                                             l15698 393E                                               l16772 647C  
                                             l16764 6464                                               l16748 6434  
                                             l16684 6DC6                                               l16676 6DB4  
                                             l18284 7222                                               l18516 146E  
                                             l19420 3E50                                               l19412 3E36  
                                             l19260 4DFA                                               l19340 23C2  
                                             l19324 2348                                               l19316 22F4  
                                             l18380 621E                                               l16790 64B2  
                                             l16782 649A                                               l16766 646A  
                                             l16758 6452                                               l16694 6DDE  
                                             l16678 6DB8                                               l18446 5EE6  
                                             l18438 5EC8                                               l18622 16BC  
                                             l18614 1686                                               l18606 163C  
                                             l18534 14BC                                               l19406 3E1E  
                                             l19166 6936                                               l19326 234E  
                                             l18390 62C4                                               l18710 8C68  
                                             l16784 64A0                                               l16776 6488  
                                             l16688 6DD0                                               l18464 5F54  
                                             l18456 5F36                                               l18288 7230  
                                             l18640 176A                                               l18616 1692  
                                             l18624 16E2                                               l19440 3EBC  
                                             l19360 242A                                               l19336 2398  
                                             l18392 62C8                                               l18704 8C50  
                                             l16794 64BE                                               l16778 648E  
                                             l16698 6DE2                                               l17850 A3DE  
                                             l18650 17AA                                               l19442 3ED4  
                                             l19274 4E94                                               l19346 23DC  
                                             l18378 6218                                               l18722 8CA0  
                                             l19098 96F8                                               l16796 64C4  
                                             l16788 64AC                                               l18484 8146  
                                             l18820 1BE6                                               l18644 1786  
                                             l18636 1758                                               l18564 153C  
                                             l18572 155C                                               l19452 3EF8  
                                             l19524 8D76                                               l19284 7718  
                                             l18740 75F8                                               l19268 4E4E  
                                             l19196 798E                                               l19364 2442  
                                             l19540 92A4                                               l18716 8C84  
                                             l18708 8C5E                                               l17918 8FEA  
                                             l17926 9024                                               l17934 9990  
                                             l18814 1BB8                                               l19446 3EE6  
                                             l18910 3BEE                                               l19278 766C  
                                             l19286 771A                                               l18742 7602  
                                             l19198 7994                                               l19382 24C0  
                                             l19374 248C                                               l19702 956C  
                                             l18718 8C8E                                               l19630 451C  
                                             l17960 6398                                               l18840 1CB8  
                                             l19480 3FAE                                               l19456 3F0E  
                                             l18920 3C1C                                               l19288 7726  
                                             l19392 24E4                                               l19704 958C  
                                             l17962 63F8                                               l17890 3596  
                                             l18826 1C26                                               l18922 3C28  
                                             l18746 7624                                               l19394 2520  
                                             l19298 221E                                               l19810 1ABA  
                                             l19722 184C                                               l19650 462A  
                                             l19642 45BC                                               l17972 9E70  
                                             l17980 318A                                               l18844 1CD6  
                                             l18836 1C8E                                               l18828 1C60  
                                             l18940 3CBE                                               l18916 3C06  
                                             l18780 83E0                                               l18772 83C2  
                                             l19396 2522                                               l19804 1A52  
                                             l19572 48CE                                               l19564 4898  
                                             l19644 45C8                                               l19652 462E  
                                             l18846 1CE6                                               l19486 4024  
                                             l18926 3C56                                               l18790 8400  
                                             l18766 83B2                                               l19910 7564  
                                     ___fltol@sign1 0068                                               l17968 9E52  
                                             l17888 358C                                               l17992 31B6  
                                             l18872 1D5C                                               l18856 1CF2  
                                             l18952 3D8A                                               l18936 3CA4  
                                             l18928 3C82                                               l19752 18E4  
                                             l19592 4976                                               l19648 461E  
                                             l19672 5376                                               l18890 1E42  
                                             l18866 1D56                                               l18882 1E02  
                                             l18698 803E                                               l18946 3D30  
                                             l18778 83D8                                               l18794 840A  
                                             l19690 5426                                               l19914 7572  
                                             l19748 18E0                                               l19596 498E  
                                             l19676 539A                                               l18958 3E00  
                                             l18798 8418                                               l19598 49C4  
                                             l19918 7582                                               l19792 19D0  
                                             l19776 195A                                               l19864 A54A  
                                             l19952 4228                                               l19936 4046  
                                             l19778 196C                                               l18978 8BA6  
                                             l19970 559A                                               l19954 4234  
                                             l19962 A52A                                               l19982 565E  
                                             l19984 5662                                     __end_of___fladd 2B76  
                                             ?_main 0001                                     __end_of___fldiv 39A2  
                                             ?_rand 009E                                     __end_of___awdiv 8422  
                                        _FillSubKey 93AA                                     __end_of___lbmod A14A  
                                   __end_of___flmul 220A                                     __end_of___flsub 975A  
                                   __end_of___fltol 7BB4                   __end_of_IOCB4_SetInterruptHandler A7E2  
                                     ?_RADIO_SetCRC 0001                                     __end_of___lldiv 85B0  
                                   RADIO_Transmit@i 00B9                                               u20050 1D30  
                                   ___awdiv@divisor 0062                                               u21005 3F9C  
                                             u20230 8BA0                                               u21015 3FC0  
                                             u20400 A0C4                                               _T1CON 000FCD  
                                   __end_of___llmod 8E4C                                               u20170 3D50  
                                             u22010 86D2                                               u20155 3CDE  
                                             u21220 4508                                               u21048 8810  
                                             u20280 9824                                               u20185 3D78  
                                             u20530 68FA                                               u21074 9288  
                                             u20450 96F4                                               u22130 4442  
                                             u20195 3D9C                                               u21075 9282  
                                             u22300 03F4                                               u22220 01AE  
                                             u14300 2972                                   ??_EnableChannels1 0069  
                                             u20550 690E                                               u20630 7A02  
                                             u20390 A0BC                                               u23200 0F9E  
                                             u22048 8702                                               _LATC2 007C5A  
                                             _T3CON 000FB1                                               u22049 8716  
                                             u20570 6922                                               u23210 0FFC  
                                             u21450 1952                                               u22330 0452  
                                             u22250 028C                                               u14330 29B4  
                              RxJoinResponse@status 0060                                               _LATD3 007C63  
                                             u23300 11AA                                               u20900 252E  
                                             u20820 2336                                               u22420 0540  
                                             u23108 3168                                               u23205 0F94  
                                             u20750 76DA                                               u20670 7A2C  
                                             u22190 0192                                               u23215 0FF0  
                                             u23135 0C46                                               u22271 02CA  
                                             u20760 7726                   __end_of_AckRetransmissionCallback 61D0  
                                             u14280 2960              SearchAvailableChannel@randomNumberCopy 00AE  
                                             u23145 0CC6                                               u23065 30B2  
                                             u21810 7092                                               u22610 08EC  
                                             u22450 0620                                               u22290 02E2  
                                             u23410 8E8E                                               u24018 617E  
                                             u14290 2970                                               u16210 7B06  
                                             u23315 11D0                                               u23155 0DB2  
                                             u15500 910C                                               u22348 0468  
                                             u16140 38F0                                               u14540 2B36  
                                             u14460 2AC6                                               u16220 7B36  
                                             u14700 2146                                               u23325 11F4  
                                             u23165 0E32                                               u21725 5686  
                                             u23190 0F80                                               u20870 2418  
                                             u20790 22A8                                               u22710 0AA4  
                                             u22470 0730                                               u23600 6674  
                                             u22528 07B2                                               u22448 05E2  
                                             u23088 3134                                               u23520 7DAE  
                                             u21568 7550                                               u14480 2ADA  
                                             _T5CON 000F4E                                               u22529 07C6  
                                             u21905 5B38                                               u16225 7B2C  
                                             u24330 5222                                               u15610 9326  
                                             u23610 668C                                               u22570 083E  
                                             u24058 61B2                                               u24138 7950  
                                             u14650 1F44                                     __end_of___ltdiv 8C40  
                                             u24155 820E                                               u24139 7962  
                                             u15540 9142                                               u15524 9122  
                                             u23620 66F4                                               u16180 394C  
                                             u16260 7B8C                                               u14740 21A2  
                                             u14660 20BA                                               u15525 911E  
                                             u20990 3F74                                               u15550 9146  
                                             u23358 128E                                               u21950 8766  
                                             u21598 A062                                               u23470 7336  
                                             u23550 6780                                               u16190 3970  
                                             u14750 21C0                                               u23615 6680  
                                             u19000 93F0                                               u23560 6798  
                                             u21928 5BD0                                               u21880 5ADE  
                                             u25160 54BA                                               u24345 524A  
                                             u23625 66E8                                               u21865 8B14  
                                             u21929 5BE4                                               u14665 20B0  
                                             u15490 9108                                               u23378 12C2  
                                             u23570 6800                                               u24098 88FE  
                                             u24355 526E                                               u24099 8912  
                                             u19020 8644                                               u15580 8C00  
                                             u22780 0B36                                               u22748 0B12  
                                             u15740 7CE2                                               u22749 0B26  
                                             u23565 678C                                               u22838 0B9C  
                                             u22678 0A7E                                               u14790 81F8  
                                    __CFG_DEBUG$OFF 000000                                               u25247 9A5A  
                                             u22679 0A92                                               u22935 2EEE  
                                             u23575 67F4                                               u21895 5B16  
                                             u19200 6D12                                               u22848 0BC4  
                                             u23760 2D78                                               u24480 8ED2  
                                             u17360 850C                                               u25257 9E5A  
                                             u13985 92EE                                               u23905 4F5C  
                                             u16810 5C12                                               u23850 4EE8  
                                             u17370 8514                                               u15690 5928  
                                             u23915 4F7E                                               u16900 5CAA  
                                             u16820 5C16                                               u15748 7CE6  
                                             u19310 82B4                                               u22958 2F66  
                                             u23775 2DBE                                               u17367 8502  
                                             u23785 2DE8                                               u19330 82DC  
                                             u16930 5D26                                               u23890 4F24  
                                   __end_of___lwdiv 9356                                               u19500 5F0E  
                                             u16860 5C4A                                               u16844 5C2C  
                                             u16925 5CDA                                               u16845 5C28  
                                             u19350 8302                                               u16950 836A  
                                             u16870 5C4E                                               u23990 614E  
                                             u18810 31B2                                               u19610 14B6  
                                             u19460 98D6                                               u18750 900C  
                                             u19640 150E                                               u19560 1456  
                                             u19481 5E6C                                               u18930 8560  
                                             u18770 A798                                               u18780 99A4  
                                             u19820 A254                                               u18757 9002  
                                             u19565 144C                                               u18870 3438  
                                             u19590 14A6                                               u18960 8E08  
                                             u19665 1576                                               u19930 83E4  
                                             u18990 93EE                                     __end_of___lwmod 98FE  
                                             u19980 1BCA                                               u19965 1B9A  
                                             u19990 1BCC                                         GPIOSet@GPIO 0061  
                                     ?_RADIO_RxDone 0001                                     ___awdiv@counter 0064  
                       __size_of_RADIO_ReceiveStart 0230                 __size_of_LORAWAN_SetChannelIdStatus 003E  
                              __size_of_acuadoriApp 023A                                       ?_RADIO_TxDone 0001  
                                             _TMR1H 000FCF                                               _TMR1L 000FCE  
                                             _TMR3H 000FB3                                               _TMR3L 000FB2  
                                             _TMR5H 000F50                                               _TMR5L 000F4F  
                                             _PORTA 000F80                                               _PORTC 000F82  
                                             _PORTD 000F83                                               _PORTE 000F84  
                                             _TRISA 000F92                                               _TRISB 000F93  
                                             _TRISC 000F94                                               _TRISD 000F95  
                                             _TRISE 000F96                                  __end_ofsin@coeff_a FFE2  
                                __end_ofsin@coeff_b FFF2                            __size_of_RADIO_RxTimeout 002E  
                                     __CFG_WRT0$OFF 000000                                       __CFG_WRT1$OFF 000000  
                     ?_SelectChannelForTransmission 0001                                       __CFG_WRT2$OFF 000000  
                 __size_of_TMR3_SetInterruptHandler 000A                                 ___lmul@multiplicand 0096  
                                     __CFG_WRT3$OFF 000000                                      _RxJoinResponse A536  
                           ?_SetReceptionNotOkState 0001                           ?_TMR3_SetInterruptHandler 0060  
                                    __CFG_EBTR0$OFF 000000                                      __CFG_FCMEN$OFF 000000  
                                    __CFG_EBTR1$OFF 000000                                         GPIOSet@mode 0060  
                                    __CFG_EBTR2$OFF 000000                                      __CFG_EBTR3$OFF 000000  
                              ??_PrepareSessionKeys 0071                                    __end_of_TMR1_ISR A666  
                         FindSmallestDataRate@found 0061                                       __CFG_WRTB$OFF 000000  
                                  __end_of_TMR3_ISR A01E                                       __CFG_WRTC$OFF 000000  
                                     __CFG_WRTD$OFF 000000                                    __end_of_TMR5_ISR 9FF0  
                                    ?_INT1_CallBack 0001                              LORAWAN_RxTimeout@minim 00BE  
                       __size_of_RADIO_SetBandwidth 000A                                      __CFG_EBTRB$OFF 000000  
                    __size_of_RADIO_WatchdogTimeout 0046                                               __rcon 0042  
                          ?_disableClockPeripherals 0001                             __end_of_PIN_MANAGER_IOC A878  
                      ??_IncludeMacCommandsResponse 0065                       __end_of_RADIO_WatchdogTimeout 97E8  
RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D                      ??_INT1_DefaultInterruptHandler 0001  
                         __size_of_ValidateDataRate 0018                                               _frexp 7C6C  
                                             _errno 0116                                               _randx 01EF  
                                             _upCnt 0106                      LORAWAN_RxDone@frmPayloadLength 00F1  
                     ValidateChannelMaskCntl@result 0060                                  __CFG_MCLRE$EXTMCLR 000000  
                                             _value 010A                                               _timer 0100  
                                             _srand A720                                    UpdateDataRange@i 0063  
                          LORAWAN_RxDone@joinAccept 00EF                              _UpdateJoinSuccessState 5AB0  
                                    ?_INT2_CallBack 0001                            _INT1_SetInterruptHandler A7EC  
                                        _ComputeMic 8F14                             __end_of_TMR1_Initialize 9F0A  
                            UpdateCfList@joinAccept 009E                                               pclath 000FFA  
                           ?_enableClockPeripherals 0001                                               tablat 000FF5  
                                             ltemp0 0046                             RADIO_WriteFrequency@num 0075  
                                             ltemp1 004A                                               ltemp2 004E  
                    __size_of_UpdateCurrentDataRate 000A                      __size_of_UpdateChannelIdStatus 011E  
                        PrepareSessionKeys@appNonce 006D                                     _GPIOAverageRead 8824  
                            UpdateChannelIdStatus@i 0063                       __end_of_UpdateCurrentDataRate A7B0  
                      __size_of_RADIO_FSKPacketSent 010C                       __end_of_UpdateChannelIdStatus 62EE  
                             adaptString@deleteElem 0066                                               plusw0 000FEB  
                                             plusw1 000FE3                                               plusw2 000FDB  
                                             ttemp0 0046                                               ttemp1 0049  
                                             ttemp2 004C                                               ttemp3 004F  
                                             ttemp5 0047                                               ttemp6 004A  
                                             ttemp7 004E                            UpdateFrequency@channelId 0064  
                                             status 000FD8                                               wtemp0 0046  
                                             wtemp1 0048                                               wtemp2 004A  
                                             wtemp3 004C                                               wtemp4 004E  
                                             wtemp5 0050                                               wtemp8 0047  
                                    ??_i2c_sdaWrite 0060                                  _MacExecuteCommands 4244  
                             ??_tempSensAcquisition 00C4                                      __CFG_HFOFST$ON 000000  
                          UpdateCfList@channelIndex 00A9                                 __size_of_RADIO_DIO0 008A  
                                GPIOAnalogRead@GPIO 006C                                 __size_of_RADIO_DIO1 004C  
                               __size_of_RADIO_DIO2 0050                                 __size_of_RADIO_DIO3 001C  
                               __size_of_RADIO_DIO4 001C                                 __size_of_RADIO_DIO5 001C  
                                   __end_of_strncat 852C                  PrepareJoinRequestFrame@bufferIndex 00D9  
                                   _TMR1_WriteTimer A3CA                   TMR_OverrideRemaining@oldReloadVal 0072  
                               LORAWAN_RxDone@fPort 00E0                                      ??_i2c_sendData 0066  
                                GPIOAnalogMode@GPIO 0061                                  __size_ofi2___awdiv 0084  
                        __size_of_LORAWAN_GetStatus 0030                            __size_of_RADIO_WriteMode 00FC  
                                 __end_of_AESEncode 347C                                      __CFG_PBADEN$ON 000000  
                               __size_of_RADIO_Init 01CA                    __end_of_RADIO_WriteConfiguration 17D0  
                           ADC_GetConversion@result 0065                                  __size_ofi2___lwdiv 0052  
                                __size_ofi2___lwmod 0042                     ??_IOCB4_DefaultInterruptHandler 0001  
                                   _TMR5_Initialize 9CFE                        __size_of_RADIO_SetIQInverted 000A  
                         __size_ofi2_TMR1_ReadTimer 0020                           RADIO_WriteMode@dioMapping 0068  
                                GPIOAnalogMode@mode 0060                                     __initialization 77F4  
                                  _GPIODigitalWrite 6E30                                         log@exponent 00B1  
                      __size_ofi2_SwTimersInterrupt 00F8                                        _stringLength 01FA  
                                  LORAWAN_Send@port 00D4                         __size_of_DIO1_ISR_Lora_Init 0010  
                               ?_MacExecuteCommands 00A6                                   _SPI2_Exchange8bit A6AE  
                                      __end_of_main 558A                          AssembleEncryptionBlock@dir 0072  
                                      __end_of_rand 91AC                                   ?_TMR_GetDeltaTime 0068  
                                     AESCmac@padded 01A4                            __end_of_RADIO_ReadRandom 7F18  
                                  _SetJoinFailState A04A                                    i2c_sendData@data 0064  
                           RADIO_WriteMode@blocking 0066                                     ?_GPIOAnalogRead 0068  
                                   ?_GPIOAnalogMode 0060                                _UpdateJoinInProgress A5C0  
                              _ExecuteRxTimingSetup A172                                   __end_of_IOCB4_ISR A44A  
                         __size_of_UpdateDLSettings 001C                                    __end_of_i2c_stop 9DF0  
                                ?_SPI2_Exchange8bit 0001                           __size_of_ValidateRxOffset 0018  
                          _LORAWAN_SetUplinkCounter A68A                                           ??_ADC_ISR 0001  
                       ?_INTERRUPT_InterruptManager 0001                                  ??_TMR_GetDeltaTime 006C  
                                     AESCmac@output 00BC                          i2TMR1_ReadTimer@readValLow 0008  
                               __end_of_i2c_waitACK A5C0                                        ?_sinGenStart 0001  
                      __end_of_RADIO_SetOutputPower A81E                       __size_of_impedenceAcquisition 0036  
                                         ??_AESCmac 00C1                                      ??_RADIO_SetCRC 0060  
                            MacExecuteCommands@done 00AB                             InitDefault868Channels@i 006B  
                                            ??_main 00FC                                              ??_rand 00A0  
                                    ??_RADIO_RxDone 00F4                            _TMR5_SetInterruptHandler A7BA  
                                    ??_RADIO_TxDone 00D7                           GPIOAverageRead@finalValue 0075  
                                   _TMR3_StartTimer A8CC                                       isJoined@value 0068  
                                     __activetblptr 000003                              ?_RADIO_SetLoRaSyncWord 0001  
                            __end_of_RxJoinResponse A552                               _TMR3_InterruptHandler 01E1  
                 __end_of_LORAWAN_LinkCheckCallback 5012                                 __end_of_i2c_usdelay A280  
                    __end_of_SetReceptionNotOkState 8730                         __end_of_UpdateReceiveDelays 9984  
                           LORAWAN_GetStatus@status 0064                         _EUSART2_DefaultErrorHandler 000000  
                   __end_of_AssembleEncryptionBlock 7660                            __size_of_SPI2_Initialize 000E  
                                         ??_GPIOSet 0061                              ??_SystemBlockingWaitMs 0064  
                                  ??_StartReTxTimer 0092                                 ??_SPI2_Exchange8bit 0060  
                  CountfOptsLength@macCommandLength 0066                                  EncodeShiftRow@temp 0062  
                          ??_InitDefault868Channels 006B                         __size_of_RADIO_RegisterRead 0028  
                                 ?_HALSPICSDeassert 0001                                    ?_SwTimersExecute 0001  
                                     _TMR_SwapTimer 9984                                      _EnableChannels A552  
                         ??_PrepareJoinRequestFrame 00D1                                   ??_acquisitionData 00AD  
                                    _HALSPICSAssert A8D8                                ??_MacExecuteCommands 00A9  
                                       ?_CheckFlags 0060                             LORAWAN_TxDone@timeOnAir 00B3  
                                        _ExtractMic 9592                          __end_of_EUSART2_Initialize 9874  
                   __size_of_SearchAvailableChannel 0102                                              _ADCON0 000FC2  
                                            _ADCON1 000FC1                                              _ADCON2 000FC0  
                                            ?_frexp 006C                             __size_of_tempConversion 032C  
                                ??_HALSPICSDeassert 0060                              _HALResetPinOutputValue A5DA  
                    __end_of_enableClockPeripherals A6D0                                    ___llmod@dividend 0060  
                                            _ADRESH 000FC4                                              _ADRESL 000FC3  
                                  ___awdiv@dividend 0060                                              ?_srand 0072  
            __end_of_LORAWAN_ReceiveWindow1Callback 7C6C             __size_of_LORAWAN_ReceiveWindow1Callback 00B8  
                    _LORAWAN_ReceiveWindow1Callback 7BB4                                              _ANSELA 000F38  
                                            _ANSELB 000F39                                              _ANSELC 000F3A  
                                            _ANSELD 000F3B                                              _ANSELE 000F3C  
                                   _ValidateTxPower A0A2                                              _T1GCON 000FCC  
                                            _T3GCON 000FB4                                              _T5GCON 000F4D  
                           SwTimerReadValue@timerId 0091                             TMR1_WriteTimer@timerVal 0060  
                                    _ExecuteLinkAdr 4804                             __end_of_TMR3_Initialize A0A2  
                                            i2l2310 0044                                              i2l1343 9258  
                                            i2l2312 0050              __end_of_LORAWAN_ReceiveWindow2Callback 758E  
           __size_of_LORAWAN_ReceiveWindow2Callback 00D8                      _LORAWAN_ReceiveWindow2Callback 74B6  
                                            i2l3211 5FF0                                              i2l2315 0060  
                                            i2l3212 6030                                              i2l2308 0038  
                                            i2l3213 6070                                              i2l2317 006C  
                                            i2l4022 94E8                                              i2l2318 0082  
                                            i2l2319 0078                                              i2l4032 99FE  
                                    __CFG_WDTEN$OFF 000000                       __size_of_RADIO_SetFSKSyncWord 0030  
                                            _RCREG2 000F74                             __end_of_GPIODigitalRead 7AF8  
                                            _RCSTA2 000F71                                              _OSCCON 000FD3  
                                 ??_RADIO_GetStatus 0060                                              _SPBRG2 000F75  
                  __size_of_ValidateChannelMaskCntl 0020                                              _WDTCON 000FD1  
                   __size_of_InitDefault433Channels 0078                                              _TRISC2 007CA2  
                                     ?_LORAWAN_Init 00AA                                       ?_LORAWAN_Join 0001  
                  AssembleEncryptionBlock@firstByte 0070                                       ?_LORAWAN_Send 00D4  
                   __size_of_AutomaticReplyCallback 0026                                              _TXREG2 000F73  
                                  __end_of___xxtofl 5970                          __size_of_LORAWAN_RxTimeout 0300  
                                            _TXSTA2 000F72                                   ?_ExecuteDevStatus 0060  
                        __end_of_DIO0_ISR_Lora_Init A720                            __size_ofi2_TMR_SwapTimer 0040  
                                 ExecuteLinkAdr@ptr 006F                                     _TMR3_WriteTimer A56E  
                     __size_of_RADIO_WriteFrequency 00F0                                              _STable FE07  
                       RADIO_WriteFrequency@num_mod 0071                                 LORAWAN_TxDone@delta 00C6  
                       __size_of_ComputeSessionKeys 0086                                           AESCmac@k1 0184  
                                         AESCmac@k2 0174                           __end_of_SPI2_Exchange8bit A6C0  
                          __size_of_rn2483_delaysec 0040                                 LORAWAN_TxDone@found 00C5  
                                   _CheckMcastFlags 8730                                 LORAWAN_TxDone@minim 00D2  
                                ??_ExecuteDevStatus 0062                                              _Random A2E6  
                                    __CFG_XINST$OFF 000000                                              _RxData A8F4  
                               LORAWAN_TxDone@ticks 00CE                  SearchAvailableChannel@randomNumber 00B1  
              __end_of_TMR1_DefaultInterruptHandler A8FE               __size_of_TMR1_DefaultInterruptHandler 0002  
                      _TMR1_DefaultInterruptHandler A8FC                                         ?_GetRx1Freq 0060  
                     ValidateDataRange@dataRangeNew 0063                                    __end_of_isJoined A34A  
                           _RADIO_FHSSChangeChannel 9B80                                              ___fleq 8174  
                                         ??___abdiv 0061                                              ___lmul 91AC  
                            ?_RADIO_WriteFSKBitRate 006D                                           ??___fladd 007C  
                             ?_UpdateJoinInProgress 0001                                              ___wmul A19A  
                       ?_LORAWAN_LinkCheckConfigure 009E                               ?_ExecuteRxTimingSetup 0067  
                                         ??___fldiv 00A5                                           ??___awdiv 0064  
                                    __CFG_STVREN$ON 000000                                           ??___lbmod 0002  
                                         ??___flmul 008C                                _FindSmallestDataRate 7978  
                                         ??___flsub 008C                                           ??___fltol 0064  
                                            _appEui 03C8                                           ??___lldiv 0068  
                                            _appKey 03E0                                           ??___llmod 0068  
                                         ??___ltdiv 0066                                           ??___lwdiv 0064  
                                         ??___lwmod 00A4                  RADIO_SetChannelFrequency@frequency 0060  
                                   StartReTxTimer@i 009A                           ExecuteRxParamSetupReq@ptr 009E  
                            __size_of_LORAWAN_Reset 01CC                                              _memcpy 8FD8  
                                            _joined 0125                                              _memset 9F94  
                                            _setSDA A73E                                              clear_0 785C  
                                            clear_1 786E                                              clear_2 787A  
                                            clear_3 7886                                              clear_4 7892  
                                            clear_5 789E                                              clear_6 78AA  
                           SwTimerIsRunning@timerId 0060                                    ___awdiv@quotient 0066  
                           __size_of_uint16ToString 0140                         _EUSART2_FramingErrorHandler 02FE  
                                            _result 0118                         __size_of_DIO5_ISR_Lora_Init 0002  
                                       ?_FillSubKey 0060                                              _string 0200  
                                 ?_SwTimerIsRunning 0001                                      i2___awdiv@sign 0006  
                                 ?_ExecuteLinkCheck 0060                                     _TMR5_StartTimer A8B8  
                                  __end_of_resetSDA A75A                                     ?_RxJoinResponse 0001  
                           __size_of_EncodeShiftRow 0164                              __end_of_EnableChannels A56E  
                        ??_RADIO_UnhandledInterrupt 0064                                        ??_HALSPISend 0061  
              __end_of_INT2_DefaultInterruptHandler A902               __size_of_INT2_DefaultInterruptHandler 0002  
                      _INT2_DefaultInterruptHandler A900                                        __pdataCOMRAM 0052  
                                       RxData@pData 0060                              __end_of_HALSPICSAssert A8DC  
                 __size_of_RADIO_SetSpreadingFactor 000A                                   __end_ofi2___awdiv 8634  
                      __size_of_ValidateChannelMask 004A                                       ??_SwTimerStop 0060  
                                   ??_INT1_CallBack 0001                                   ??_SystemTimerInit 0060  
                                            lltemp0 0046                           ?_RADIO_SetSpreadingFactor 0001  
                                 ?_SwTimerReadValue 0089                                  ??_SwTimerIsRunning 0060  
                                    ?_TMR_SwapTimer 0068                                   ?_ExecuteDutyCycle 0060  
                                ??_ExecuteLinkCheck 0062                                   __end_ofi2___lwdiv 94F2  
                                      __mediumconst FE06                                   __end_ofi2___lwmod 9A08  
                                            tblptrh 000FF7                                              tblptrl 000FF6  
                                            tblptru 000FF8                             __end_of_GPIOAverageRead 889E  
                                            srand@x 0072                                        i2c_usdelay@i 0062  
                          ADC_GetConversion@channel 0067                                     ??_INT2_CallBack 0001  
                                ??_SwTimerReadValue 008D                                     _UpdateDataRange 651E  
                            __end_of_ExecuteLinkAdr 49CE                                  ??_ExecuteDutyCycle 0062  
          TMR5_SetInterruptHandler@InterruptHandler 0060            TMR3_SetInterruptHandler@InterruptHandler 0060  
          TMR1_SetInterruptHandler@InterruptHandler 0060           IOCB4_SetInterruptHandler@InterruptHandler 0060  
          INT2_SetInterruptHandler@InterruptHandler 0060            INT1_SetInterruptHandler@InterruptHandler 0060  
                __end_of_LORAWAN_SetChannelIdStatus 9B44                          _LORAWAN_SetChannelIdStatus 9B06  
                                  ?_PIN_MANAGER_IOC 0001                                    _SwClearAllTimers 9D60  
                                     AESEncode@aux1 007B                                       AESEncode@aux2 007A  
                                     AESEncode@aux3 007C                             __end_of_TMR1_WriteTimer A3EA  
                             __end_of_SwTimerCreate 8AF6                                           ??_strncat 0066  
                                  ??_averageMeasure 006C                      ??_SelectChannelForTransmission 00B3  
                                       ?_ComputeMic 00C8                       __size_of_INTERRUPT_Initialize 0004  
                             __end_of_TMR1_CallBack A40A                         ??_LORAWAN_SetApplicationEui 006D  
                       ??_LORAWAN_SetApplicationKey 006D                           ExecuteDutyCycle@maxDCycle 0065  
                                 ??_RADIO_RxTimeout 00C3                                    ?_TMR1_Initialize 0001  
                           __end_of_TMR5_Initialize 9D30                                        ___xxtofl@arg 006A  
                       UpdateFrequency@frequencyNew 0060                                        ___xxtofl@exp 0069  
                                 _SYSTEM_Initialize 9EAE                                        ___xxtofl@val 0060  
                                        ___fleq@ff1 0060                                          ___fleq@ff2 0064  
                  __size_of_CreateAllSoftwareTimers 0052                                    __end_oflog@coeff FFCE  
                           __size_of_GenerateSubkey 012A                                      ??_LORAWAN_Init 00AE  
                                    ??_LORAWAN_Join 00DA                                     ___lbmod@divisor 0001  
                                    ??_LORAWAN_Send 00D8                      __size_of_RADIO_FSKPayloadReady 00B2  
                                        __accesstop 0060                             __end_of__initialization 78B0  
                                 tempConversion@val 00BC                       __end_of_RADIO_FSKPayloadReady 7DD4  
                                   ___lbmod@counter 0003                                      _RADIO_Transmit 3E0C  
                                         ?_INT1_ISR 0001                                           ?_INT2_ISR 0001  
                                         ?_GPIOInit 0001                                LORAWAN_RxDone@buffer 01DA  
                            RADIO_ReadRandom@retVal 006F                                    _ConfigureRadioRx A0CC  
                              __size_of_RADIO_Reset 0046                                    _ConfigureRadioTx 967C  
                               ExecuteDevStatus@ptr 0060                    ??_UpdateReceiveWindow2Parameters 0065  
                   ?_UpdateReceiveWindow2Parameters 0060                   __size_of_LORAWAN_GetUplinkCounter 0012  
                                ?_SYSTEM_Initialize 0001                                LORAWAN_RxDone@packet 00E9  
                                    _maxPayloadSize FF17                           ?_LORAWAN_GetUplinkCounter 0060  
                     RADIO_SetLoRaSyncWord@syncWord 0060                                        eval_poly@res 00A9  
                                     ___rparam_used 000001                                          ___fltol@f1 0060  
                                   _TMR5_WriteTimer A4A8                          ValidateChannelId@channelId 0062  
                         ExecuteLinkAdr@channelMask 0072                                   _GPIODigitalToogle 7F18  
                                       _i2c_waitACK A5A6                                  i2___lwmod@dividend 0001  
                                __end_of_HALSPISend A784                                      __pcstackCOMRAM 0001  
                                        ___inthi_sp 0AF8                              _SearchAvailableChannel 683C  
                           ValidateChannelId@result 0061                               ?_FindSmallestDataRate 0001  
                                      __pidataBANK1 A784                                        __pidataBANK3 A14A  
                               ??_SYSTEM_Initialize 0062                             __end_of_TMR3_StartTimer A8D0  
                        __end_of_DIO4_ISR_Lora_Init A8FA                                           ?_TMR1_ISR 0001  
                               __size_of_CheckFlags 005E                       ?_TMR1_DefaultInterruptHandler 0001  
                                ?_GPIODigitalToogle 0001                                           ?_TMR3_ISR 0001  
                                         ?_TMR5_ISR 0001                            _RADIO_WriteConfiguration 12D6  
                                       _i2c_usdelay A25C                                       __end_of_frexp 7D22  
                                 ??_RADIO_WriteMode 0067                                     _spreadingFactor FF35  
                         __size_of_LORAWAN_Mainloop 003E                                    ??_EncKeySchedule 0062  
             __end_of_IOCB4_DefaultInterruptHandler A900              __size_of_IOCB4_DefaultInterruptHandler 0002  
                     _IOCB4_DefaultInterruptHandler A8FE                            __end_of_RADIO_WritePower 72F4  
                           ?_ExecuteRxParamSetupReq 009E                                       __end_of_srand A730  
                                 SwClearAllTimers@i 0060                                   LORAWAN_RxDone@hdr 00F2  
                                      ??_RADIO_DIO0 00F6                                        ??_RADIO_DIO1 00C3  
                                      ??_RADIO_DIO2 007A                                        ??_RADIO_DIO3 0065  
                                      ??_RADIO_DIO4 0065                                        ??_RADIO_DIO5 0065  
                            _InitDefault433Channels 8A06                                     _UpdateFrequency 9BBC  
                            _AutomaticReplyCallback A212                       __size_of_TMR5_InterruptTicker 000A  
                       ??_IOCB4_SetInterruptHandler 0062                                             I2C@flag 0040  
                          ??_INTERRUPT_GetDioStatus 0060                                        ??_RADIO_Init 007F  
                             __end_of_pointAddition 97A2                           SwTimerSetCallback@timerId 0063  
                        LORAWAN_RxDone@channelIndex 00E1                      AssembleEncryptionBlock@blockId 006F  
                               ??_GPIODigitalToogle 0060                         __size_of_EXT_INT_Initialize 002A  
                              __end_of_i2c_sdaWrite 9150                                     _UpdateDutyCycle 9C64  
                                   ?_EnableChannels 006C                             ??_TMR_OverrideRemaining 006E  
                           __end_of_ValidateTxPower A0CC                                     ?_HALSPICSAssert 0001  
                          ?_EUSART2_SetErrorHandler 0060                                  _DIO3_ISR_Lora_Init A8FA  
                              __end_of_i2c_sendData 9E20                        __end_of_HALResetPinMakeInput A8E4  
                           __size_of_TMR1_ReadTimer 0022                    __end_of_INT2_SetInterruptHandler A7EC  
                                  RADIO_DIO0@opMode 00F9                         RADIO_RegisterRead@readValue 0063  
                __end_of_IncludeMacCommandsResponse 253C                          _IncludeMacCommandsResponse 220A  
                     ?_INT2_DefaultInterruptHandler 0001                     __size_of_InitDefault868Channels 0078  
                          UpdateCfList@bufferLength 00A4                               LORAWAN_Send@confirmed 00D9  
                                       ?_ExtractMic 006B                                     ?_ExecuteLinkAdr 006F  
                                  _ValidateDataRate A60C                     LORAWAN_GetMaxPayloadSize@result 006A  
                                           ??_frexp 0072                                 __size_of_GetRx1Freq 0012  
                         __end_of_SYSTEM_Initialize 9EDC                                      isJoined@joined 006C  
                __size_of_RADIO_SetChannelFrequency 008A                                             ??_srand 0074  
                           __end_of_TMR3_WriteTimer A58A                              __end_of_RADIO_Transmit 4030  
                                 ??_SPI2_Initialize 0060                                 ?_DIO3_ISR_Lora_Init 0001  
                                     _LORAWAN_Reset 4638                          ?_RADIO_SetChannelFrequency 0060  
                                        __pbssBANK1 0100                                          __pbssBANK2 0200  
                                        __pbssBANK3 0300                                          __pbssBANK4 0400  
                                        __pbssBANK5 0500                                    RxData@dataLength 0062  
                               __end_of_SwTimerStop A3CA                          ?_SetCallbackSoftwareTimers 0001  
                           __end_of_CheckMcastFlags 87AA                                  __size_of_eval_poly 00FC  
                                  ?_TMR3_Initialize 0001                                     __CFG_PLLCFG$OFF 000000  
                            __end_of_maxPayloadSize FF1F                                    ?_GPIODigitalRead 0001  
                                         ?_i2c_stop 0001                                          ??_INT1_ISR 0001  
                                        ??_INT2_ISR 0001                                          ??_GPIOInit 0062  
                                SwTimersInterrupt@i 0088                    ??_EUSART2_SetFramingErrorHandler 0062  
                   ?_EUSART2_SetFramingErrorHandler 0060                                _RADIO_SetOutputPower A814  
                              __end_of_RADIO_SetCRC A832                              _RADIO_ReceiveStart$784 00AF  
                            __size_of_DIO0_ISR_Lora 0004                             ??_HALResetPinMakeOutput 0060  
                              __end_of_RADIO_RxDone 73D8                          __end_of_RADIO_RxFSKTimeout 9B80  
                                 adaptString@length 0062                           __end_of_GPIODigitalToogle 7FB4  
                              __end_of_RADIO_TxDone 683C                                 __size_of_FillSubKey 0052  
                                __end_of_RADIO_DIO0 828A                                  __end_of_RADIO_DIO1 967C  
                                __end_of_RADIO_DIO2 9542                                  __end_of_RADIO_DIO3 A51A  
                                __end_of_RADIO_DIO4 A4FE                                  __end_of_RADIO_DIO5 A4E2  
                         ??_RADIO_FHSSChangeChannel 0079                         __size_of_SwTimerSetCallback 0034  
                     __size_of_LORAWAN_SetDeviceEui 002E                           RADIO_SetOutputPower@power 0060  
                        __size_of_SPI2_Exchange8bit 0012                                  __end_of_RADIO_Init 4B98  
                   ?_LORAWAN_EnterContinuousReceive 0001                    ??_LORAWAN_EnterContinuousReceive 00B3  
                                           ?_Random 00A5                                   ?_CountfOptsLength 0001  
                            __size_of_DIO1_ISR_Lora 0004                                             ?_RxData 0060  
                                  i2_TMR1_ReadTimer A40A                                  __CFG_CCP2MX$PORTC1 000000  
                                 adaptString@string 0060                                      FillSubKey@size 0064  
                                   _EnableChannels1 8C40                            __size_of_HALDIO5PinValue 000C  
                      __size_of_RADIO_RegisterWrite 0020                              ??_UpdateJoinInProgress 0060  
                  __size_of_AssembleEncryptionBlock 00D2                              ??_ExecuteRxTimingSetup 0069  
                                  FillSubKey@source 0060        SelectChannelForTransmission@transmissionType 00B3  
                                           ?___fleq 0060                                             ?___lmul 0092  
            AssembleEncryptionBlock@multicastStatus 0071                      __end_of_ExecuteRxParamSetupReq 5430  
                  __end_of_TMR3_SetInterruptHandler A7CE                                  ??_CountfOptsLength 0060  
                                           ?___wmul 0060                              __size_of_DIO2_ISR_Lora 0004  
                                EncryptFRMPayload@i 00A6                                  EncryptFRMPayload@j 00A7  
                                EncryptFRMPayload@k 00A5                                          ??_TMR1_ISR 002A  
                           __end_of_TMR5_StartTimer A8BE                                          ??_TMR3_ISR 0003  
                                __CFG_CCP3MX$PORTB5 000000                                   ??i2_TMR_SwapTimer 000B  
                                        ??_TMR5_ISR 0009                                  __size_of_sendValue 0062  
                         _LORAWAN_SetApplicationEui 9F66                                ??_DIO3_ISR_Lora_Init 0060  
                         _LORAWAN_SetApplicationKey 9F38                                    _UpdateDLSettings A51A  
                                  _ValidateRxOffset A5F4                                             ?_memcpy 0060  
                                           _ADC_ISR A8F0                                   ??_rn2483_delaysec 0062  
                                           ?_memset 0060                                             ?_setSDA 0001  
                                    ___lmul@product 009A                                   _TMR_ISR_Lora_Init A6E0  
                            RADIO_RegisterWrite@reg 0063                                 __size_of_ComputeMic 0062  
                            RADIO_Transmit@regValue 00B8                        __size_of_RADIO_SetModulation 000A  
                               _RADIO_FSKPacketSent 662C                                             _AESCmac 1B5A  
                            ComputeMic@bufferLength 00CC                                 GPIODigitalRead@GPIO 0060  
                                     ?_TMR3ISRClock 0001                                   sinGenStart@i_5414 0068  
                           __size_of_ADC_Initialize 0018                             __end_of_UpdateDataRange 662C  
                       __end_of_leafSensAcquisition A1EA                                     ??_TMR_SwapTimer 006A  
                          RADIO_WriteFSKBitRate@num 0071                                  ?_TMR_ISR_Lora_Init 0001  
                        ??_INT1_SetInterruptHandler 0062                       __size_of_lightSensAcquisition 004E  
                              __size_of_sinGenStart 013A                                  __size_of_timerTick 0008  
                                           i2l15330 6A2C                                             i2l15328 69DA  
                                           i2l15344 A59C                                             i2l15820 7008  
                                           i2l15900 99F4                                             i2l15814 6FA2  
                                           i2l16710 A580                                             i2l15830 85C4  
                                           i2l15808 6F4E                                             i2l15818 7006  
                                           i2l15842 85EA                                             i2l15844 85F2  
                                           i2l15836 85D4                                             i2l15790 9A94  
                                           i2l15782 A142                                             i2l15774 A12A  
                                           i2l15862 862A                                             i2l15854 8612  
                                           i2l16726 A4BC                                             i2l15872 94B6  
                                           i2l15858 861C                                             i2l15874 94BE  
                                           i2l15884 94DE                                             i2l15892 99D4  
                                           i2l15894 99DC                                             _GPIOSet 6D34  
                              EncryptFRMPayload@dir 0095                                  _RADIO_GetPacketSnr A8A0  
                              EncryptFRMPayload@key 009A                                           ?___xxtofl 0060  
                             __end_of_UpdateTxPower A7A6                                 _RADIO_SetIQInverted A81E  
                                           _OSCCON2 000FD2                             __size_of_ConfigureRadio 009A  
                                  ?_GPIOAverageRead 006D                                             _OSCTUNE 000F9B  
                          __end_of_GPIODigitalWrite 6F2C                         __size_ofi2_TMR_GetDeltaTime 0100  
                                           _SPBRGH2 000F76                                 i2_SwTimersInterrupt 6F2C  
                                           _SSP2ADD 000F6E                                  sendValue@firstSend 00FA  
                                           _SSP2BUF 000F6F                                      _tempConversion 253C  
                               ??_TMR_ISR_Lora_Init 0062                                   __end_of_bandwidth FF35  
            UpdateReceiveWindow2Parameters@dataRate 0064                                       i2c_sdaWrite@i 0063  
                          __end_of_SetJoinFailState A076                                      ?_LORAWAN_Reset 0001  
                      RADIO_WriteMode@newModulation 0065                                           ?_isJoined 0001  
                                     ??_adaptString 0063                             tempSensAcquisition@temp 00C6  
                            ValidateDataRate@result 0061                                    ?_TMR1_WriteTimer 0060  
                               ?_RADIO_GetPacketSnr 0001                             __end_of_TMR5_WriteTimer A4C6  
                                   ___abdiv@divisor 0060                                     ?_RADIO_Transmit 00A9  
                           _ValidateChannelMaskCntl A34A                                     ___abdiv@counter 0063  
                               StartReTxTimer@minim 0096                          AssemblePacket@bufferLength 00CB  
                      PrepareSessionKeys@sessionKey 006B                    LORAWAN_SetDeviceEui@deviceEuiNew 006B  
                              ?_RADIO_FSKPacketSent 0001                               TMR_SwapTimer@timerVal 0068  
                                  ?_TMR5_Initialize 0001                   __end_of_RADIO_SetChannelFrequency 8314  
                       PrepareJoinRequestFrame@iCtr 00D8                           _IOCB4_SetInterruptHandler A7D8  
                 __end_of_SetCallbackSoftwareTimers 74B6                               ?_RADIO_SetOutputPower 0001  
                                        ??_i2c_stop 0064                           _AckRetransmissionCallback 60B2  
                       PrepareJoinRequestFrame@mhdr 00D7                              __size_of_AESEncodeLoRa 0036  
                                _EncKeySchedule$521 0065                             __size_of_TMR3_StopTimer 0004  
                     __size_of_LORAWAN_PlatformInit 0022                          ??_LORAWAN_SetUplinkCounter 0064  
                                    _ticksAccounted 0032                                       ?_SwTimerStart 0001  
                                        AESCmac@key 00BA                                          AESCmac@ptr 01D4  
                                  ??_GPIOAnalogRead 006A                                    ??_GPIOAnalogMode 0061  
                           __end_of_spreadingFactor FF3C                                     __CFG_PWRTEN$OFF 000000  
                     UpdateCurrentDataRate@valueNew 0060                                             __Hparam 0000  
                              ?_RADIO_SetIQInverted 0001                                           ?_resetSDA 0001  
                        PrepareJoinRequestFrame@mic 00D3                              _InitDefault868Channels 898E  
                          RADIO_RegisterWrite@value 0062                                             __Lparam 0000  
                  __size_of_disableClockPeripherals 0008                              ??_FindSmallestDataRate 0060  
                          LORAWAN_Send@bufferLength 00D7                               _StopAllSoftwareTimers 93FC  
                                   __size_of_Random 0022                                     __size_of_RxData 0002  
                        ??_TMR5_SetInterruptHandler 0062                                ?i2_SwTimersInterrupt 0019  
                           __end_of_UpdateFrequency 9BF8                                 AssemblePacket@fCtrl 00D1  
                                           ___abdiv 8E4C                                          AESEncode@i 007D  
                                         _AESEncode 317C                                     __size_of___fleq 008C  
                            ValidateRxOffset@result 0061                                             ___fladd 2868  
                         __end_of_TMR_ISR_Lora_Init A6F0                                             ___fldiv 3718  
                                           ___awdiv 839C                                     __size_of___lmul 0058  
                                           ___lbmod A120                                             ___flmul 1EB6  
                       __size_of_DIO2_ISR_Lora_Init 0010                                    ?_TMR3_StartTimer 0001  
                                           ___flsub 9712                                             ___fltol 7AF8  
                           __end_of_UpdateDutyCycle 9C98                                             ___lldiv 852C  
                               __size_of_ExtractMic 0050                                     __size_of___wmul 0028  
                              ??_RADIO_GetPacketSnr 0060                                             ___llmod 8DE4  
                                           ___ltdiv 8BD4                                             ___lwdiv 9302  
                                 ?_RADIO_ReadRandom 006C                                             ___lwmod 98BA  
                         SwTimerIsRunning@isRunning 0061                             ??_RADIO_SetLoRaSyncWord 0060  
                                           _address 01F7                                     _acquisitionData A2A2  
                                    _uint16ToString 5970                                       ??_acuadoriApp 00FC  
                              ValidateChannelMask@i 0064                                             __pcinit 77F4  
                __size_of_LORAWAN_GetMaxPayloadSize 0050                     __end_of_EUSART2_SetErrorHandler A814  
                                   __size_of_memcpy 0060                          __end_of_RADIO_ReceiveStart 3E0C  
                                    ??_TMR3ISRClock 0001                                   __end_of_eval_poly 6C38  
                             RADIO_Init@radioBuffer 0079                                     __size_of_memset 002E  
                                   __size_of_setSDA 000E                                             __ramtop 1000  
                          TMR1_ReadTimer@readValLow 0067                    EncryptFRMPayload@multicastStatus 009F  
                                ??_RADIO_ReadRandom 006E                          ?_LORAWAN_GetMaxPayloadSize 0001  
     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060                                             __ptext0 5430  
                                           __ptext1 A32A                                             __ptext2 9D30  
                                           __ptext3 A6C0                                             __ptext4 A878  
                                           __ptext5 39A2                                             __ptext6 9038  
                                           __ptext7 253C                                             __ptext8 4B98  
                                           __ptext9 7C6C                                __end_of_LORAWAN_Init 8FD8  
                              __end_of_LORAWAN_Join 7E78                                __end_of_LORAWAN_Send 7116  
                                     _DIO0_ISR_Lora A8EC                      ??_TMR1_DefaultInterruptHandler 0001  
                   RADIO_SetFSKSyncWord@syncWordLen 006D                             __size_of_TMR5_StopTimer 0006  
                                    _EncodeShiftRow 5012                                           _IOCB4_ISR A42A  
                        ExecuteNewChannel@frequency 00A1                           TMR1_ReadTimer@readValHigh 0066  
                   __size_of_INTERRUPT_GetDioStatus 0012                                           _T1CONbits 000FCD  
                SelectChannelForTransmission@result 00B4                  _EUSART2_DefaultOverrunErrorHandler 000000  
                           __size_of_LORAWAN_RxDone 0B2C                               _OSCILLATOR_Initialize A768  
                    __end_of_UpdateJoinSuccessState 5BEE                             __size_of_LORAWAN_TxDone 06FE  
                                      __size_of_log 0192                          __end_of_RADIO_SetBandwidth A85A  
                                   _RADIO_GetStatus A8A6                                          ??___xxtofl 0064  
                                         _T3CONbits 000FB1                                    ?_ValidateTxPower 0001  
                           ?_HALResetPinOutputValue 0001                              __end_of_tempConversion 2868  
                      __end_of_macEndDevCmdReplyLen FF2E                   __size_of_TMR1_SetInterruptHandler 000A  
                                     _DIO1_ISR_Lora A8E8                                         _SwTimerStop A3AA  
                          ??_PIN_MANAGER_Initialize 0062                           ?_TMR1_SetInterruptHandler 0060  
                       IncludeMacCommandsResponse@i 006C                                           _T5CONbits 000F4E  
                                     ?_UpdateCfList 009E                                   _ExecuteNewChannel 444C  
                       __size_of_PrepareSessionKeys 0098                                        ??_CheckFlags 0062  
                     RADIO_SetModulation@modulation 0060                             UpdateDLSettings@dlRx2Dr 0061  
                         __size_of_TMR_GetDeltaTime 011C                              GPIODigitalWrite@digOut 0060  
                                     _DIO2_ISR_Lora A8E4                         __end_of_tempSensAcquisition 9096  
                        __size_of_SYSTEM_Initialize 002E                                  ?_ExecuteNewChannel 009E  
                                        ??_isJoined 0068                                             _strncat 84A8  
                        RADIO_WriteMode@currentMode 0069                                    ComputeMic@buffer 00CA  
                                     ?_timerHandler 0001                                end_of_initialization 78B0  
                           _CreateAllSoftwareTimers 944E                                    ?_TMR3_WriteTimer 0001  
                                 __end_of_sendValue 8F14                                 SwTimerCreate@retVal 0060  
                          _INT2_SetInterruptHandler A7E2                               ??_RADIO_FSKPacketSent 00D7  
                      __end_of_impedenceAcquisition 9C2E                                      _GenerateSubkey 5E62  
                                      adaptString@i 0067                               _RADIO_WatchdogTimeout 97A2  
                    ??_INT2_DefaultInterruptHandler 0001                                          _modulation FF07  
                                  ?_CheckMcastFlags 0060                              ExtractMic@bufferLength 006D  
                                           memcpy@d 0067                                             memcpy@n 0064  
                                           memcpy@s 0069                             __end_of_EnableChannels1 8CAA  
                                           memset@c 0062                                             memset@n 0064  
                                           memset@p 0066                           _LORAWAN_LinkCheckCallback 4EA6  
                                    ??_SwTimerStart 0089                                 ??_ExecuteNewChannel 00A0  
                        __size_of_GPIODigitalToogle 009C                                           i2u1702_48 A478  
                             _UpdateCurrentDataRate A7A6                                           i2u1704_48 A458  
                                         i2u1641_40 94C2                               _UpdateChannelIdStatus 61D0  
                                         i2u1706_48 A438                                           i2u1644_40 99E0  
                                         i2u1629_40 9AA6                                           i2u1708_48 A3F8  
                                         i2u1637_40 85F6                                           i2u1762_48 9FDE  
                           ??_RADIO_WriteFSKBitRate 0071                               ??_RADIO_SetIQInverted 0060  
                                         i2u1764_48 A00C                                 __end_of_adaptString 898E  
                        __end_of_DIO1_ISR_Lora_Init A710                                     ___lldiv@divisor 0064  
                                 __end_of_timerTick A890                                 _ValidateChannelMask 96C8  
                                  ___ltdiv@dividend 0060                                          _ticksAdded 0036  
                       HALResetPinOutputValue@value 0060                            EncodeShiftRow@stateTable 0060  
                              uint16ToString@output 00A7                           __size_of_HALSPICSDeassert 0004  
                          ValidateDataRate@dataRate 0060                                          ??_resetSDA 0062  
                                   ___lldiv@counter 006C                                 acquisitionData@GPIO 00AD  
                                _EUSART2_Initialize 982E                         TMR_OverrideRemaining@tmrVal 0070  
                             ??i2_SwTimersInterrupt 001D                            ExecuteLinkAdr@redundancy 0075  
                                 GenerateSubkey@key 0092                                _HALResetPinMakeInput A8E0  
                                      ??_GetRx1Freq 0064          LORAWAN_SetApplicationKey@applicationKeyNew 006B  
                     UpdateDLSettings@dlRx1DrOffset 0060                          LORAWAN_Init@RxJoinResponse 00AC  
                        LORAWAN_RxDone@bufferLength 01DC                    __end_of_RADIO_SetSpreadingFactor A83C  
                AssembleEncryptionBlock@bufferIndex 0073                                        RxData@status 0063  
                                           postdec1 000FE5                                             postdec2 000FDD  
                            __end_of_uint16ToString 5AB0                                          ?_AESEncode 0067  
                                   _SystemTimerInit A880                                             postinc0 000FEE  
                                           postinc1 000FE6                                             postinc2 000FDE  
                          __end_of_SwClearAllTimers 9D90                                    ?_TMR5_StartTimer 0001  
                                 _stringValueLength 01F9                                       _AESEncode$516 0073  
                                     _AESEncode$517 0075                                       _AESEncode$518 0077  
                                  ??_RxJoinResponse 0060                                    _LORAWAN_Mainloop 9AC8  
                      __end_of_RADIO_SetFSKSyncWord 9E50                               __size_of_i2c_sdaWrite 005C  
                                LORAWAN_Join@result 00DB                                  __end_of_CheckFlags 90F4  
                         ValidateTxPower@txPowerNew 0061                                 ?_EUSART2_Initialize 0001  
                                    AESEncode@block 0067                   SearchAvailableChannel@maxChannels 00B0  
                            __end_of_EncodeShiftRow 5176                               __size_of_i2c_sendData 0030  
                                        _timerReset A01E                                  _DIO0_ISR_Lora_Init A710  
                                 ??_HALDIO5PinValue 0060                                      ?_DIO0_ISR_Lora 0001  
                             _INT1_InterruptHandler 01ED                                           _PORTBbits 000F81  
                                      ??_FillSubKey 0065                        SwTimersInterrupt@timeElapsed 0080  
                                     _AESEncodeLoRa 9C2E                           __size_of_ExecuteDevStatus 000A  
                          _TMR3_SetInterruptHandler A7C4                        __end_of_RADIO_WriteFrequency 7206  
                        __end_of_RADIO_RegisterRead A212                   __end_of_LORAWAN_GetMaxPayloadSize 9592  
                    __end_of_HALResetPinOutputValue A5F4                                          ?_IOCB4_ISR 0001  
                                  ?_UpdateDataRange 0060                            __end_of_ConfigureRadioRx A0F6  
                          __end_of_ConfigureRadioTx 96C8                                     _RADIO_RxTimeout 9E80  
                    UpdateChannelIdStatus@channelId 0062                               _TMR5_InterruptHandler 01DD  
                         __end_of_ExecuteNewChannel 4638                                    EnableChannels1@i 006B  
                           __size_of_AssemblePacket 038A                                      ?_DIO1_ISR_Lora 0001  
                                       ___fladd@grs 0083                                ?_ValidateChannelMask 0060  
                                 _SwTimerSetTimeout 98FE                                      _TMR1_ReadTimer A308  
                                    ??_UpdateCfList 00A0                                    ___lbmod@dividend 0002  
                                        _txPower433 FF3C                                     ?_tempConversion 00B6  
                                        _txPower868 FF42                                       ___xxtofl@sign 0068  
                  __end_of_LORAWAN_GetUplinkCounter A6AE                                 ?_DIO0_ISR_Lora_Init 0001  
                               __end_of_acuadoriApp 3BDC                                     ??_LORAWAN_Reset 00A9  
                                    ?_DIO2_ISR_Lora 0001                                    ___ltdiv@quotient 0066  
                     __size_of_SystemBlockingWaitMs 0030                           ??_ValidateChannelMaskCntl 0060  
                                tempConversion@temp 00C0                                  ?_SwTimerSetTimeout 006D  
                                       ___fldiv@grs 00B0                                         ___fldiv@rem 00A9  
                       __size_of_MacExecuteCommands 0208                                ExecuteNewChannel@ptr 009E  
                          ??_UpdateMinMaxChDataRate 0060                              __end_of_GenerateSubkey 5F8C  
                                    ??_timerHandler 0009                                       RADIO_RxDone@i 00F5  
                                         i2___awdiv 85B0                               __size_of_RADIO_SetCRC 000A  
                           AssemblePacket@macCmdIdx 00D2                         ?_LORAWAN_SetChannelIdStatus 0064  
                                 i2___lwdiv@divisor 0003                                      _localDioStatus 0127  
                                __end_of_GetRx1Freq A678                                           i2___lwdiv 94A0  
                             __size_of_RADIO_RxDone 00E4                                        ??_ComputeMic 00CD  
                                         i2___lwmod 99C6                        __size_of_UpdateReceiveDelays 0042  
                                 i2___lwdiv@counter 0007                               __size_of_RADIO_TxDone 0104  
                                  ?_TMR5_WriteTimer 0001                              ??_RADIO_SetOutputPower 0060  
                              ??_EUSART2_Initialize 0062                     EncryptFRMPayload@macBufferIndex 009C  
                           TMR5_WriteTimer@timerVal 0001                                         ___lbmod@rem 0004  
                           UpdateMinMaxChDataRate@i 0061                             LORAWAN_Reset@ismBandNew 00A9  
                                       ___flmul@grs 0091                           __size_of_SwTimerIsRunning 0022  
                        __end_of_ComputeSessionKeys 84A8                                 ??_SwTimerSetTimeout 0071  
                          __size_of_SwTimersExecute 00C2                           __size_of_ExecuteLinkCheck 0032  
                            _INTERRUPT_GetDioStatus A678                                     _RADIO_WriteMode 6C38  
                        ??_RADIO_WriteConfiguration 00A0                                GPIOAnalogRead@result 006A  
                             SPI2_Exchange8bit@data 0060                                  i2___awdiv@dividend 0001  
                           ?_SearchAvailableChannel 00A7                           __size_of_SwTimerReadValue 0040  
                                      _i2c_sdaWrite 90F4                         RADIO_FSKPacketSent@irqFlags 00DF  
                         __size_of_ExecuteDutyCycle 0054                              ?_StopAllSoftwareTimers 0001  
                           AssemblePacket@confirmed 00CF                                  __end_of_FillSubKey 93FC  
                           _AssembleEncryptionBlock 758E                                   __size_of_INT1_ISR 0008  
                                 __size_of_INT2_ISR 0008                             __end_of_acquisitionData A2C4  
                                 __size_of_GPIOInit 013A                                ??_DIO0_ISR_Lora_Init 0062  
                                      _i2c_sendData 9DF0                               ?_HALResetPinMakeInput 0001  
                                      ?_i2c_waitACK 0001                                      __end_of_STable FF07  
                               AESEncodeLoRa@useKey 0082                          SwTimerSetCallback@callback 0060  
                                  ?_UpdateFrequency 0060                              rn2483_delaysec@counter 0063  
                                LORAWAN_Send@buffer 00D5                                      __end_of_Random A308  
                                    __end_of_RxData A8F6                             ?_InitDefault433Channels 0001  
                                   ?_uint16ToString 00A5                          __size_of_TMR_ISR_Lora_Init 0010  
                          __end_of_ValidateDataRate A624                        __end_of_INTERRUPT_Initialize A8D4  
                                      ?_i2c_usdelay 0060                      EnableChannels1@channelMaskCntl 0066  
                    EnableChannels1@channelIndexMax 0068                      EnableChannels1@channelIndexMin 0067  
                                   averageMeasure@i 0074                 LORAWAN_SetChannelIdStatus@channelId 0066  
                                  ?_UpdateDutyCycle 0060                                      __end_of___fleq 8200  
                        __end_of_DIO5_ISR_Lora_Init A8F8                             __end_of_RADIO_GetStatus A8AC  
                                    __end_of___lmul 9204                                  LORAWAN_Send@result 00DA  
                                  ??_EnableChannels 006F                           i2TMR1_WriteTimer@timerVal 0001  
                                    __end_of___wmul A1C2                                       ?_TMR_ISR_lora 0001  
                                  ??_HALSPICSAssert 0060                 TMR_OverrideRemaining@ticksRemaining 006A  
                                 ?_RADIO_WritePower 0001                                       __pidataCOMRAM A8C4  
                                   ?_EncodeShiftRow 0060                                      ?_AESEncodeLoRa 007E  
                                 __size_of_TMR1_ISR 0014                                   __size_of_TMR3_ISR 002E  
                                    _ADC_Initialize A624                                   __size_of_TMR5_ISR 002E  
                                __end_of_ComputeMic 8F76                                           Random@max 00A5  
                                    __end_of_memcpy 9038                              ?_OSCILLATOR_Initialize 0001  
                         __end_of_SwTimerSetTimeout 9942                              __end_of_TMR1_ReadTimer A32A  
                                    __end_of_memset 9FC2                                      __end_of_setSDA A74C  
                                   _SPI2_Initialize A75A                            ?_PrepareJoinRequestFrame 0001  
                                ??_RADIO_WritePower 0064                                        _RADIO_SetCRC A828  
                             ??_ValidateChannelMask 0062                                    ??_ExecuteLinkAdr 0071  
                             UpdateCfList@frequency 00A5                                        _RADIO_RxDone 72F4  
                                      _RADIO_TxDone 6738                                 start_initialization 77F4  
                                    _ConfigureRadio 7FB4                                          eval_poly@d 00A1  
                                LORAWAN_RxDone@mhdr 00E2                                          eval_poly@n 00A3  
                                        eval_poly@x 009D                                  i2___awdiv@quotient 0007  
                                LORAWAN_RxDone@temp 00E8                                  _DIO4_ISR_Lora_Init A8F8  
                          __end_ofi2_TMR1_ReadTimer A42A                      __size_of_TMR_OverrideRemaining 0082  
                               _RADIO_RegisterWrite A38A                                        AESCmac@mLast 0194  
                         ??_CreateAllSoftwareTimers 0061                     __size_of_PIN_MANAGER_Initialize 0054  
                     __end_of_TMR_OverrideRemaining 86B6                         ?_IncludeMacCommandsResponse 0060  
                             __end_of_INT1_CallBack A48A                                         __end_of_log 4D2A  
                                      ??_ExtractMic 006F                EncryptFRMPayload@bufferToBeEncrypted 009D  
                                      AESCmac@input 00BE                                     ?_GenerateSubkey 0092  
                      ?_RADIO_SetFrequencyHopPeriod 0060                                          ?i2___awdiv 0001  
                                   LORAWAN_TxDone@i 00D6                                      pointAddition@d 0064  
                             LORAWAN_Init@RxPayload 00AA                 AssembleEncryptionBlock@frameCounter 006B  
                           i2TMR_SwapTimer@timerVal 0009                                          ?i2___lwdiv 0001  
                             __end_of_INT2_CallBack A46A                                          ?i2___lwmod 0001  
                                     ??_RADIO_Reset 0065                            __end_of_UpdateDLSettings A536  
                        SwTimerStart@ticksRemaining 008D                                         _adaptString 8916  
                            RADIO_WriteMode@newMode 006A                            __end_of_ValidateRxOffset A60C  
                                   adaptString@flag 0065                         ??_RADIO_SetChannelFrequency 0064  
                      __end_of_TMR5_InterruptTicker A86E                         ??_SetCallbackSoftwareTimers 0064  
                               ?_DIO4_ISR_Lora_Init 0001                                          frexp@value 006C  
                               _RADIO_SetModulation A83C                       ExecuteNewChannel@channelIndex 00A5  
                    __end_of_SearchAvailableChannel 693E                                    ?_EnableChannels1 0064  
                                   i2_TMR_SwapTimer 9A88                             __size_of_StartReTxTimer 0152  
                              __end_of_TMR3ISRClock A8C4                                      _TMR3_StopTimer A8C8  
                            ?_UpdateCurrentDataRate 0001                              ?_UpdateChannelIdStatus 0060  
                                   ___llmod@divisor 0064                          MacExecuteCommands@fOptsLen 00A8  
                           _RADIO_FSKPacketSent$800 00DB                             __end_of_SystemTimerInit A888  
                  __size_of_EUSART2_SetErrorHandler 000A                      UpdateChannelIdStatus@statusNew 0060  
                 __size_of_RADIO_UnhandledInterrupt 0030                                     ___llmod@counter 0068  
                                   _rn2483_delaysec 9A48                                 TMR_SwapTimer@oldVal 003A  
                         ?_RADIO_UnhandledInterrupt 0001                            __size_of_PIN_MANAGER_IOC 000A  
                               TMR_SwapTimer@retVal 011E                             _disableClockPeripherals A878  
                             _RADIO_FSKPayloadReady 7D22                                   __size_of_i2c_stop 0030  
            __end_of_EUSART2_SetOverrunErrorHandler A800             __size_of_EUSART2_SetOverrunErrorHandler 000A  
                    _EUSART2_SetOverrunErrorHandler A7F6                      __size_of_HALResetPinMakeOutput 0004  
                     __end_of_HALResetPinMakeOutput A8E0                                            ??_Random 00A7  
                                          ??_RxData 0064                                            AESCmac@i 01D9  
                                          AESCmac@j 01D8                                            AESCmac@n 01D7  
                                          AESCmac@x 01C4                                            AESCmac@y 01B4  
                        SwTimerReadValue@ticksCount 008D                                ?_RADIO_RegisterWrite 0062  
                    __end_of_InitDefault433Channels 8A7E                      __end_of_AutomaticReplyCallback A238  
                               RADIO_Init@frequency 007B                            __size_of_TMR1_Initialize 002E  
                              _macEndDevCmdReplyLen FF27                                            ??___fleq 0068  
                                          ??___lmul 009A                                         ??_AESEncode 006B  
                 RADIO_WriteConfiguration@tempValue 00A4                               __size_of_LORAWAN_Init 0062  
                __size_of_AckRetransmissionCallback 011E                               __size_of_LORAWAN_Join 00A4  
                                          ??___wmul 0064                               __size_of_LORAWAN_Send 00F2  
                           __end_of_RADIO_RxTimeout 9EAE                            MacExecuteCommands@buffer 00A6  
                          ??_SetReceptionNotOkState 00B3                              __end_of_ADC_Initialize A63C  
                                    ??_TMR_ISR_lora 002A                                     ??_DIO0_ISR_Lora 0001  
                                       __pdataBANK1 01EF                                         __pdataBANK3 03D0  
                                 _ValidateDataRange 97E8                                  __end_of_ExtractMic 95E2  
          i2SwTimersInterrupt@ticksToNextTimerEvent 0025              SwTimersInterrupt@ticksToNextTimerEvent 0084  
                                          ??_memcpy 0066                                            ?_ADC_ISR 0001  
                            __size_of_SwTimerCreate 0078                                            ??_memset 0066  
                                          ??_setSDA 0062                                ??_DIO4_ISR_Lora_Init 0060  
                                       ?_timerReset 0001                          __end_of_EXT_INT_Initialize A120  
                                 _ValidateChannelId A238                                ?_RADIO_SetModulation 0001  
                                       _acuadoriApp 39A2                            _RADIO_SetSpreadingFactor A832  
                                _RADIO_RxFSKTimeout 9B44                                            ?_AESCmac 00BA  
                              _impedenceAcquisition 9BF8                              __size_of_TMR1_CallBack 0020  
                                   ??_DIO1_ISR_Lora 0001                                  ?_ValidateDataRange 0001  
                                    _TMR5_StopTimer A8B2                            ValidateRxOffset@rxOffset 0060  
                                      AESEncode@aux 0079                                        AESEncode@key 0069  
                            TMR_GetDeltaTime@retVal 0112                                     ?_TMR1_ReadTimer 0060  
                                       ??_IOCB4_ISR 0001                              __end_of_ConfigureRadio 804E  
                                    _LORAWAN_RxDone 00AC                                           ___fladd@a 0078  
                                         ___fladd@b 0074                                  ?_ValidateChannelId 0060  
                            TMR_GetDeltaTime@tmrVal 003C                                      _LORAWAN_TxDone 0BD8  
                                  GPIOAverageRead@i 0073                        __end_of_LORAWAN_SetDeviceEui 9F38  
                          ??_enableClockPeripherals 0062                          __size_of_ExecuteNewChannel 01EC  
        LORAWAN_GetMaxPayloadSize@macCommandsLength 0069                                __end_of_SwTimerStart 8174  
                                         ___fldiv@a 00A1                                           ___fldiv@b 009D  
            __end_of_LORAWAN_EnterContinuousReceive 8824             __size_of_LORAWAN_EnterContinuousReceive 007A  
                    _LORAWAN_EnterContinuousReceive 87AA                                         __pbssBIGRAM 0528  
                                          ?_GPIOSet 0060                                     ??_DIO2_ISR_Lora 0001  
                         __size_of_CountfOptsLength 00CA                                   CountfOptsLength@i 0067  
                                         ___flmul@a 0088                                           ___flmul@b 0084  
                                       __pbssCOMRAM 0032                          __end_of_DefaultChannels433 FFAA  
                                         ___flsub@a 0088                                           ___flsub@b 0084  
                        __end_of_DefaultChannels868 FF80                                    ??_RADIO_Transmit 00AC  
                                LORAWAN_RxTimeout@i 00C2                                       __pcstackBANK0 0060  
                                     __pcstackBANK1 0174                                 ??_ValidateDataRange 0062  
                                 i2___lwmod@divisor 0003                                    _TMR_GetDeltaTime 62EE  
                                 __size_of___xxtofl 0144                                   i2___lwmod@counter 0005  
                     EnableChannels@channelMaskCntl 006E                             __end_of_RADIO_WriteMode 6D34  
                                 ?_GPIODigitalWrite 0060             __end_of_UnconfirmedTransmissionCallback 8916  
          __size_of_UnconfirmedTransmissionCallback 0078                     _UnconfirmedTransmissionCallback 889E  
                           SearchAvailableChannel@i 00B2                                 ??_ValidateChannelId 0061  
                             RADIO_RegisterRead@reg 0062                     __size_of_UpdateMinMaxChDataRate 00CA  
               LORAWAN_SetChannelIdStatus@statusNew 0064                                           _aesBuffer 015F  
                           INTERRUPT_GetDioStatus@a 0060                              __end_of_TMR3_StopTimer A8CC  
                                 ?_SetJoinFailState 0001                                 SwTimerStart@timerId 0091  
                          _LORAWAN_GetUplinkCounter A69C                                  ??_GPIODigitalWrite 0061  
                                         _capValues 0528                       ??_RADIO_SetFrequencyHopPeriod 0062  
                              _RADIO_SetFSKSyncWord 9E20                         RADIO_SetBandwidth@bandwidth 0060  
                             GPIODigitalToogle@GPIO 0060                          __end_of_SwTimerSetCallback 9CCC  
 __end_of_ResetParametersForUnconfirmedTransmission A6E0  __size_of_ResetParametersForUnconfirmedTransmission 0010  
        ?_ResetParametersForUnconfirmedTransmission 0001         ??_ResetParametersForUnconfirmedTransmission 0060  
         _ResetParametersForUnconfirmedTransmission A6D0                                   __size_of_isJoined 0020  
                         ??_AssembleEncryptionBlock 0072                               _INT2_InterruptHandler 01EB  
                                         _bandwidth FF2E                                  ??_SetJoinFailState 0061  
                                        sin@coeff_a FFCE                                          sin@coeff_b FFE2  
                           ?_InitDefault868Channels 0001                        __end_of_lightSensAcquisition 9630  
                                      _LORAWAN_Init 8F76                                        _LORAWAN_Join 7DD4  
                                      _LORAWAN_Send 7024                              RADIO_FSKPayloadReady@i 00F5  
                                 _ValidateFrequency 8B68                                           __pnvBANK1 01DD  
                                         __pnvBANK2 02FA                              ??_HALResetPinMakeInput 0060  
                              _RADIO_WriteFrequency 7116                              __size_of_pointAddition 0048  
                                   FillSubKey@carry 0066                                    _HALSPICSDeassert A8D4  
                               __end_of_RADIO_Reset 98BA                               ??_RADIO_RegisterWrite 0063  
                                       _clearString 0500                                    ?_acquisitionData 00AB  
                                  ___lwdiv@dividend 0060                              _PIN_MANAGER_Initialize 9356  
                                     FillSubKey@key 0062                                  ?_ValidateFrequency 0060  
                              __end_of_UpdateCfList 4244                 RADIO_WriteFSKFrequencyDeviation@num 0071  
                                      sinGenStart@d 006A                                        sinGenStart@i 006C  
                                      sinGenStart@t 006D                           EnableChannels@channelMask 006C  
                          __size_of_TMR3_Initialize 002C                                           _macBuffer 06B8  
                           __size_of_averageMeasure 0088                                           _dioStatus 0045  
                         __end_of_ValidateDataRange 982E                       RADIO_FSKPayloadReady@irqFlags 00F4  
                                 _SwTimersInterrupt 6A3E                                   ??_SwTimersExecute 00DB  
                                         __pintcode 0008                            __size_of_GPIODigitalRead 00BE  
                                          ?___abdiv 0060                    __end_of_TMR1_SetInterruptHandler A7D8  
                                     __pmediumconst FE06                             RADIO_Transmit@bufferLen 00AB  
                           __end_of_SPI2_Initialize A768                                            ?___fladd 0074  
                                         _deviceEui 03F0                                   __size_of_resetSDA 000E  
                                          ?___fldiv 009D                                            ?___awdiv 0060  
                                         __ptext100 9096                                           __ptext101 662C  
                                         __ptext110 A8AC                                           __ptext102 0BD8  
                         __end_of_ValidateChannelId A25C                                           __ptext111 A36A  
                                         __ptext103 9A08                                           __ptext200 1B5A  
                                         __ptext120 A48A                                           __ptext112 3BDC  
                                         __ptext104 A280                                           __ptext201 5E62  
                                         __ptext121 92AE                                           __ptext113 A0CC  
                                         __ptext105 A8A6                                           __ptext210 7E78  
                                         __ptext202 93AA                                           __ptext130 7A3A  
                                         __ptext122 9BF8                                           __ptext114 A678  
                                         __ptext106 87AA                                           __ptext211 4638  
                                         __ptext203 9C2E                                           __ptext131 9DF0  
                                         __ptext123 5970                                           __ptext115 95E2  
                                         __ptext107 A8F4                                           __ptext220 7116  
                                         __ptext212 772A                                           __ptext204 317C  
                                         __ptext140 8916                                           __ptext132 90F4  
                                         __ptext124 9302                                           __ptext116 9A48  
                                         __ptext108 A6D0                                           __ptext221 8DE4  
                                         __ptext213 93FC                                           __ptext205 5012  
                                         __ptext141 A68A                                           __ptext133 A5A6  
                                         __ptext125 5BEE                                           __ptext117 A1C2  
                                         __ptext109 A730                                           __ptext230 A8DC  
                                         __ptext222 A38A                                           __ptext214 A85A  
                                         __ptext206 347C                                           __ptext150 9356  
                                         __ptext142 A69C                                           __ptext134 A8B2  
                                         __ptext126 9DC0                                           __ptext118 A2A2  
                                         __ptext231 A8E0                                           __ptext223 A776  
                                         __ptext215 49CE                                           __ptext207 8F76  
                                         __ptext151 A768                                           __ptext143 9EAE  
                                         __ptext135 A8B8                                           __ptext127 A73E  
                                         __ptext119 8824                                           __ptext240 6A3E  
                                         __ptext232 5176                                           __ptext224 A6AE  
                                         __ptext216 9C98                                           __ptext208 A720  
                                         __ptext160 A7D8                                           __ptext152 A2C4  
                                         __ptext144 9CFE                                           __ptext136 A8C8  
                                         __ptext128 A74C                                           __ptext241 62EE  
                                         __ptext233 91AC                                           __ptext225 A8D4  
                                         __ptext217 6C38                                           __ptext209 73D8  
                                         __ptext161 A700                                           __ptext153 A6E0  
                                         __ptext145 A7BA                                           __ptext137 A8CC  
                                         __ptext129 A25C                                           __ptext250 5D28  
                                         __ptext242 A308                                           __ptext234 852C  
                                         __ptext226 A8D8                                           __ptext218 A1EA  
                                         __ptext170 A80A                                           __ptext162 A710  
                                         __ptext154 A7CE                                           __ptext146 A076  
                                         __ptext138 8314                                           __ptext251 6D34  
                                         __ptext243 98FE                                           __ptext235 A3AA  
                                         __ptext227 9874                                           __ptext219 A790  
                                         __ptext171 A624                                           __ptext163 A8D0  
                                         __ptext155 A880                                           __ptext147 A7C4  
                                         __ptext139 8BD4                                           __ptext260 5F8C  
                                         __ptext252 6E30                                           __ptext244 898E  
                                         __ptext236 80E6                                           __ptext228 9E50  
                                         __ptext180 A814                                           __ptext172 9F0A  
                                         __ptext164 A0F6                                           __ptext156 A8F6  
                                         __ptext148 9EDC                                           __ptext261 99C6  
                                         __ptext253 640A                                           __ptext245 8A06  
                                         __ptext237 8634                                           __ptext229 A5DA  
                                         __ptext181 A81E                                           __ptext173 9F38  
                                         __ptext165 A7E2                                           __ptext157 A8F8  
                                         __ptext149 A75A                                           __ptext270 A8FC  
                                         __ptext262 94A0                                           __ptext254 7F18  
                                         __ptext246 9F94                                           __ptext238 9984  
                                         __ptext190 3E0C                                           __ptext182 A828  
                                         __ptext174 9F66                                           __ptext166 A7EC  
                                         __ptext158 A8FA                                           __ptext271 9204  
                                         __ptext263 85B0                                           __ptext247 8FD8  
                                         __ptext239 A3CA                                           __ptext191 12D6  
                                         __ptext183 7FB4                                           __ptext175 7DD4  
                                         __ptext167 982E                                           __ptext159 A6F0  
                                         __ptext280 A8FE                                           __ptext272 9A88  
                                         __ptext264 A120                                           __ptext256 9FC2  
                                         __ptext248 944E                                           __ptext192 7206  
                                         __ptext184 A832                                           __ptext176 A5C0  
                                         __ptext168 A7F6                                           __ptext281 A890  
                                         __ptext273 A58A                                           __ptext265 9FF0  
                                         __ptext257 A4A8                                           __ptext249 8A7E  
                                         __ptext193 8CAA                                           __ptext185 A83C  
                                         __ptext177 8D14                                           __ptext169 A800  
                                         __ptext290 0000                                           __ptext282 A44A  
                                         __ptext274 6F2C                                           __ptext266 A56E  
                                         __ptext258 A864                                           __ptext194 8D7C  
                                         __ptext186 A846                                           __ptext178 683C  
                                         __ptext283 A8E8                                           __ptext275 693E  
                                         __ptext267 A8BE                                           __ptext259 A888  
                                         __ptext195 56DC                                           __ptext187 9E20  
                                         __ptext179 967C                                           __ptext284 A900  
                                         __ptext276 A40A                                           __ptext268 A652  
                                         __ptext196 A2E6                                           __ptext188 828A  
                                         __ptext285 A898                                           __ptext277 A86E  
                                         __ptext269 A3EA                                           __ptext197 9150  
                                         __ptext189 A850                                           __ptext286 A46A  
                                         __ptext278 A42A                                           __ptext198 98BA  
                                         __ptext287 A8EC                                           __ptext279 A8E4  
                                         __ptext199 8F14                                           __ptext288 A902  
                                         __ptext289 A8F0                                            ?___lbmod 0001  
                                          ?___flmul 0084                                            ?___flsub 0084  
                                          ?___fltol 0060                                   _EncryptFRMPayload 4D2A  
                                          ?___lldiv 0060                        RADIO_FSKPacketSent@timeOnAir 00D7  
                     __size_of_UpdateJoinInProgress 001A                                            ?___llmod 0060  
                     __size_of_ExecuteRxTimingSetup 0028                                     ??_AESEncodeLoRa 0082  
          SelectChannelForTransmission@channelIndex 00B5                                            ?___ltdiv 0060  
                   __end_of_PrepareJoinRequestFrame 582C                                            ?___lwdiv 0060  
                              __end_of_timerHandler 60B2                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0001                                  ?_SwTimersInterrupt 0078  
                         _RADIO_SetChannelFrequency 828A                              __end_of_TMR5_StopTimer A8B8  
                       __size_of_DIO3_ISR_Lora_Init 0002               IncludeMacCommandsResponse@bufferIndex 006D  
                         _SetCallbackSoftwareTimers 73D8                                  ConfigureRadio@freq 006E  
                                   sendValue@status 00FB                               ??_RADIO_SetModulation 0060  
                                  ?_RADIO_GetStatus 0001                                       ??_sinGenStart 0066  
                            __end_of_LORAWAN_RxDone 0BD8                               ?_impedenceAcquisition 0001  
                               ??_ValidateFrequency 0064                              __end_of_LORAWAN_TxDone 12D6  
                                ?_EncryptFRMPayload 0092                        ??_INTERRUPT_InterruptManager 002A  
                               averageMeasure@value 0071                                    __CFG_PRICLKEN$ON 000000  
                      __end_of_LORAWAN_PlatformInit A2E6                      __size_of_RADIO_SetLoRaSyncWord 000A  
                                  _ExecuteDevStatus A7B0                       __end_of_RADIO_SetLoRaSyncWord A864  
            IncludeMacCommandsResponse@pBufferIndex 0062                          __size_of_SwTimerSetTimeout 0044  
                       ??_LORAWAN_GetMaxPayloadSize 0068                      LORAWAN_LinkCheckConfigure@iCtr 00A8  
                  ExecuteRxParamSetupReq@dlSettings 00A4                                      _AssemblePacket 17D0  
                                   ?_ConfigureRadio 006E                           AssemblePacket@bufferIndex 00D3  
                       LORAWAN_SetUplinkCounter@ctr 0060                          ??_INT2_SetInterruptHandler 0062  
                                          _BAUDCON2 000F70                          __end_ofi2_TMR_GetDeltaTime 6A3E  
                               ??_SwTimersInterrupt 007C                                RADIO_DIO0@dioMapping 00F8  
                                         _firstSend 0124                                   _DutyCycleCallback 2B76  
                                         _eval_poly 6B3C                             InitDefault433Channels@i 006B  
                             __end_of_TMR_SwapTimer 99C6                                        ?_SwTimerStop 0001  
                                         _msCounter 011C                                 ??_EncryptFRMPayload 00A0  
                           __end_ofi2_TMR_SwapTimer 9AC8                             __size_of_EncKeySchedule 029C  
                                AssemblePacket@mhdr 00D0                                    ___lwdiv@quotient 0064  
                                       strncat@from 0062                                  AssemblePacket@port 00C8  
                                       ??i2___awdiv 0005                           __size_of_RADIO_ReadRandom 00A0  
                                       strncat@size 0064                        __size_of_leafSensAcquisition 0028  
                          ConfigureRadioRx@dataRate 0077                                      __size_of_frexp 00B6  
                           __end_of_rn2483_delaysec 9A88                                  _RADIO_ReceiveStart 3BDC  
                                          ?_strncat 0060                                         ??i2___lwdiv 0005  
                                       ??i2___lwmod 0005                                      __size_of_srand 0010  
                          __end_of_LORAWAN_Mainloop 9B06                               ?_RADIO_SetFSKSyncWord 006B  
                              _INTERRUPT_Initialize A8D0                                     ?_TMR3_StopTimer 0001  
                                     _SwTimerCreate 8A7E                      __end_of_InitDefault868Channels 8A06  
               IncludeMacCommandsResponse@macBuffer 0060                            ?_RADIO_FHSSChangeChannel 0001  
                     ValidateFrequency@frequencyNew 0060                                       _TMR1_CallBack A3EA  
                         __end_of_ValidateFrequency 8BD4                           ??_disableClockPeripherals 0060  
                                  _SwTimerIsRunning A280                                    _ExecuteLinkCheck 9CCC  
                               __size_of_timerReset 002C                                i2SwTimersInterrupt@i 0029  
                                          _INT1_ISR A898                                            _INT2_ISR A890  
                                 EncKeySchedule@key 0060                                      ___wmul@product 0064  
                                          _IOCBbits 000F62                                  _RADIO_SetBandwidth A850  
                                          _GPIOInit 5D28             EUSART2_SetErrorHandler@interruptHandler 0060  
                          __size_of_GPIOAverageRead 007A                              ?_RADIO_FSKPayloadReady 0001  
                 __size_of_INT1_SetInterruptHandler 000A                                __end_of_rxWindowSize FF27  
                             ?_RADIO_WriteFrequency 006D                                           _sendValue 8EB2  
                         ?_INT1_SetInterruptHandler 0060                                    ?_SystemTimerInit 0001  
                                         _reloadVal 003E                                 ?_RADIO_ReceiveStart 00A9  
                                          _IPR1bits 000F9F                                            _IPR2bits 000FA2  
                                  _SwTimerReadValue 9A08                                            _PIE1bits 000F9D  
                                          _PIE2bits 000FA0                                            _IPR5bits 000F7F  
                                  _ExecuteDutyCycle 925A                                            _PIE5bits 000F7D  
                                   _HALDIO5PinValue A790                                RADIO_DIO1@dioMapping 00C4  
                         __end_of_SwTimersInterrupt 6B3C                                           _sinSignal 0400  
                                          _PMD0bits 000F3F                                            _PMD2bits 000F3D  
                               uint16ToString@value 00A5                            __size_of_TMR1_WriteTimer 0020  
               __size_of_INTERRUPT_InterruptManager 009C                          __end_of_DIO2_ISR_Lora_Init A700  
                                   ___ltdiv@divisor 0063                                            _PIR1bits 000F9E  
                                  GenerateSubkey@k1 0094                                    GenerateSubkey@k2 0096  
                                          _PIR2bits 000FA1                                            _PIR3bits 000FA4  
                              ConfigureRadioRx@freq 0073                          ??_TMR3_SetInterruptHandler 0062  
                         __end_of_EncryptFRMPayload 4EA6                                            _PIR5bits 000F7E  
                    __size_of_RADIO_WriteFSKBitRate 0068                            UpdateReceiveDelays@delay 0066  
                         LORAWAN_RxDone@bufferIndex 00E7                                     ___ltdiv@counter 0069  
                            __size_of_UpdateTxPower 000A                       __end_of_RADIO_WriteFSKBitRate 8DE4  
                              ConfigureRadioTx@freq 0073                         UpdateDataRange@dataRangeNew 0060  
                          __size_of_TMR5_Initialize 0032                                            _RCONbits 000FD0  
                               ?_RADIO_SetBandwidth 0001                  SearchAvailableChannel@channelIndex 00A8  
                                         _rxPayload 010E                                    __CFG_WDTPS$32768 000000  
                            _UpdateMinMaxChDataRate 772A                       EncryptFRMPayload@bufferLength 0094  
                           ValidateDataRange@result 0062                                            _SSP2CON1 000F6C  
                       UpdateDutyCycle@dutyCycleNew 0060          ValidateChannelId@allowedForDefaultChannels 0060  
                     __size_of_FindSmallestDataRate 00C2                                            _TMR1_ISR A652  
                                         _timerTick A888                            ConfigureRadioTx@dataRate 0077  
                                          _TMR3_ISR 9FF0                __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                          _TMR5_ISR 9FC2                                __size_of_i2c_waitACK 001A  
                             ValidateTxPower@result 0060                                    ?_RADIO_RxTimeout 0001  
               __size_of_IncludeMacCommandsResponse 0332                                            _SSP2STAT 000F6D  
                      ??_LORAWAN_LinkCheckConfigure 00A0                                   ??_PIN_MANAGER_IOC 0001  
                                 ?_SwClearAllTimers 0001                         __size_of_RADIO_GetPacketSnr 0006  
                               _UpdateReceiveDelays 9942                     __size_of_SetReceptionNotOkState 007A  
                                   ?_TMR5_StopTimer 0001                              __end_of_AssemblePacket 1B5A  
                                   ?_LORAWAN_RxDone 01DA                                    ??_tempConversion 00B8  
                                   ?_LORAWAN_TxDone 00B3                                __size_of_i2c_usdelay 0024  
                                 ??_TMR1_Initialize 0062                                    __size_of_ADC_ISR 0004  
                          tempSensAcquisition@value 00C4                                  ??_SwClearAllTimers 0060  
                                        _ADCON0bits 000FC2                                _TMR5_InterruptTicker A864  
                                  ___abdiv@dividend 0066                                  _DIO1_ISR_Lora_Init A700  
                         __end_of_DutyCycleCallback 2E7C                                   ___wmul@multiplier 0060  
                                  __size_of_AESCmac 035C                   __size_of_LORAWAN_SetUplinkCounter 0012  
                              ??_RADIO_ReceiveStart 00AB                             ValidateFrequency@result 0064  
                         ?_LORAWAN_SetUplinkCounter 0060                          __end_of_PrepareSessionKeys 80E6  
                                     _pointAddition 975A                                   ?_ConfigureRadioRx 0073  
                                 ?_ConfigureRadioTx 0073                     __size_of_enableClockPeripherals 0010  
                          __size_of_TMR3_StartTimer 0004                                          ?_eval_poly 009D  
                              RADIO_DIO2@dioMapping 007C                                  AESEncodeLoRa@block 007E  
                                          _Channels 0414                                   i2___awdiv@divisor 0003  
                       __end_of_RADIO_FSKPacketSent 6738                   __size_of_TMR5_SetInterruptHandler 000A  
                                  __size_of_GPIOSet 00FC                                 __end_of_sinGenStart 5D28  
                                 i2___awdiv@counter 0005                           ?_TMR5_SetInterruptHandler 0060  
           RADIO_SetSpreadingFactor@spreadingFactor 0060                                  ??_ConfigureRadioRx 0077  
                                ??_ConfigureRadioTx 0077                                ??_RADIO_SetBandwidth 0060  
                             rn2483_delaysec@length 0060                                 ?_DIO1_ISR_Lora_Init 0001  
                     RADIO_SetIQInverted@iqInverted 0060                               __size_of_TMR3ISRClock 0006  
                                  ?_RADIO_WriteMode 0065                           LORAWAN_RxDone@computedMic 00EB  
                                 ___lmul@multiplier 0092                                         _INTCON2bits 000FF1  
                                       _INTCON3bits 000FF0                                      ?_SwTimerCreate 0001  
                                         copy_data0 7808                                           copy_data1 7828  
                                         copy_data2 7848                               ?_INTERRUPT_Initialize 0001  
                           ?_INTERRUPT_GetDioStatus 0001                                ?_UpdateReceiveDelays 0001  
                       __end_of_RADIO_SetIQInverted A828                                      ?_TMR1_CallBack 0001  
                              __end_of_TMR_ISR_lora 925A                                         _RADIO_Reset 9874  
                               ExecuteLinkCheck@ptr 0060                      i2SwTimersInterrupt@timeElapsed 0021  
                                _RADIO_RegisterRead A1EA                            __size_of_ValidateTxPower 002A  
                           ??_StopAllSoftwareTimers 0061                                      _StartReTxTimer 558A  
                       __end_ofi2_SwTimersInterrupt 7024                           _LORAWAN_GetMaxPayloadSize 9542  
                           _EUSART2_SetErrorHandler A80A                          LORAWAN_RxDone@extractedMic 00E3  
                                       AESCmac@flag 01D6                       EncryptFRMPayload@frameCounter 0096  
                                          _i2c_stop 9DC0                                  CheckMcastFlags@hdr 0060  
                                       AESCmac@size 00C0                         _EUSART2_OverrunErrorHandler 02FC  
                          SwTimerSetTimeout@timerId 0075                            SwTimerSetTimeout@timeout 006D  
                             RADIO_WriteMode@opMode 006B                            ??_ExecuteRxParamSetupReq 00A0  
                                        ?_sendValue 0001                 __size_of_LORAWAN_LinkCheckConfigure 015E  
                                         frexp@eptr 0070                                    ??_uint16ToString 00A9  
                      __size_of_tempSensAcquisition 005E                                    ___abdiv@quotient 0065  
           UpdateReceiveWindow2Parameters@frequency 0060                                _LORAWAN_SetDeviceEui 9F0A  
                                          __Hrparam 0000                                 ?_RADIO_RegisterRead 0001  
                          __size_of_TMR3_WriteTimer 001C                        __end_of_SystemBlockingWaitMs 9E80  
            ValidateChannelMaskCntl@channelMaskCntl 0061                                   i2_TMR1_WriteTimer A58A  
                                         memcpy@tmp 0066          LORAWAN_SetApplicationEui@applicationEuiNew 006B  
                                          __Lrparam 0000                                    ??_EncodeShiftRow 0062  
                              ??_DIO1_ISR_Lora_Init 0062                                   _ADC_GetConversion 92AE  
                          __size_of_CheckMcastFlags 007A                                  __CFG_BOREN$SBORDIS 000000  
                             TMR1_ReadTimer@readVal 0064                          __size_of_ValidateDataRange 0046  
                         _ticksToScheduledInterrupt 0052                                   __CFG_P2BMX$PORTD2 000000  
                      ValidateDataRange@dataRateMax 0064                        ValidateDataRange@dataRateMin 0065  
                        __size_of_ValidateChannelId 0024                                    ?_SPI2_Initialize 0001  
                                        ?_timerTick 0001                                  ?i2_TMR1_WriteTimer 0001  
                                  __size_of___abdiv 0066                             ??_OSCILLATOR_Initialize 0060  
                            ??_impedenceAcquisition 00AB                                  ?_ADC_GetConversion 0060  
                                 ?_ValidateDataRate 0001                                    __size_of___fladd 030E  
                                  __size_of___fldiv 028A                                    __size_of___awdiv 0086  
                                _ComputeSessionKeys 8422                               __size_of_SwTimerStart 008E  
                                  __size_of___lbmod 002A                                    __size_of___flmul 0354  
                                  __size_of___flsub 0048                                    __size_of___fltol 00BC  
                                  __size_of___lldiv 0084                                    __size_of___llmod 0068  
                                  __size_of___ltdiv 006C                                    __size_of___lwdiv 0054  
                   __end_of_disableClockPeripherals A880                                    __size_of___lwmod 0044  
                                   ?_AssemblePacket 00C8                                AssemblePacket@buffer 00C9  
                                  SwTimersExecute@i 00DF                               ?_TMR5_InterruptTicker 0001  
                                ??_ValidateDataRate 0060                             __size_of_GPIOAnalogRead 001E  
                           __size_of_GPIOAnalogMode 0114                                   ??_TMR3_Initialize 0062  
                          _TMR1_SetInterruptHandler A7CE                              _IOCB4_InterruptHandler 01E9  
                                 ??_GPIODigitalRead 0060                                        _TMR3ISRClock A8BE  
                                    ?_pointAddition 0060                                         _radioBuffer 07C7  
                               ??i2_TMR1_WriteTimer 0003     __end_of_ResetParametersForConfirmedTransmission A73E  
  __size_of_ResetParametersForConfirmedTransmission 000E            ?_ResetParametersForConfirmedTransmission 0001  
         ??_ResetParametersForConfirmedTransmission 0060             _ResetParametersForConfirmedTransmission A730  
                             _TMR1_InterruptHandler 01E5                                    ??_GenerateSubkey 0098  
                               ??_ADC_GetConversion 0062                                _lightSensAcquisition 95E2  
                                  _CountfOptsLength 7660                                          _HALSPISend A776  
                               ?_ComputeSessionKeys 0092                                      _rxWindowOffset FF0F  
                RADIO_UnhandledInterrupt@modulation 0064                                            ___xxtofl 582C  
                        __end_of_MacExecuteCommands 444C                            __size_of_TMR5_StartTimer 0006  
                              ??_RADIO_RegisterRead 0062                                _EUSART2_ErrorHandler 02FA  
                  __end_of_RADIO_UnhandledInterrupt 9DC0                                       _UpdateTxPower A79C  
                                   ___lwdiv@divisor 0062                                RADIO_Transmit@buffer 00A9  
                   __end_of_RADIO_FHSSChangeChannel 9BBC                                            _sCounter 011A  
                                   _allocatedTimers 0128                      ?_IOCB4_DefaultInterruptHandler 0001  
                                   ___lwdiv@counter 0066                      __end_of_INTERRUPT_GetDioStatus A68A  
                                 ?i2_TMR1_ReadTimer 0001                                  _DIO5_ISR_Lora_Init A8F6  
                                          __ptext10 8174                                            __ptext11 6B3C  
                                          __ptext20 8EB2                                            __ptext12 1EB6  
                                          __ptext21 A01E                                            __ptext13 582C  
                                        _T1GCONbits 000FCC                                            __ptext30 7BB4  
                                          __ptext22 9D60                                            __ptext14 7AF8  
                                          __ptext31 74B6                                            __ptext23 9AC8  
                                          __ptext15 9712                                            __ptext40 9630  
                                          __ptext32 97A2                                            __ptext24 78B6  
                                          __ptext16 2868                                            __ptext41 9E80  
                                          __ptext33 9B44                                            __ptext25 2B76  
                                          __ptext17 3718                                            __ptext50 00AC  
                                          __ptext42 9B80                                            __ptext34 889E  
                                          __ptext26 5AB0                                            __ptext18 975A  
                                          __ptext51 8AF6                                            __ptext43 8200  
                                          __ptext35 A666                                            __ptext27 A212  
                                          __ptext19 84A8                                            __ptext60 9942  
                                          __ptext52 A51A                                            __ptext44 9D90  
                                          __ptext36 A4C6                                            __ptext28 60B2  
                                          __ptext61 A19A                                            __ptext53 4030  
                                          __ptext45 6738                                            __ptext37 A4E2  
                                          __ptext29 4EA6                                            __ptext70 651E  
                                          __ptext62 52D4                                            __ptext54 558A  
                                          __ptext46 72F4                                            __ptext38 A4FE  
                                  ?i2_TMR_SwapTimer 0009                                            __ptext71 9B06  
                                          __ptext63 A5F4                                            __ptext55 86B6  
                                          __ptext47 8E4C                                            __ptext39 94F2  
                                          __ptext80 A7A6                                            __ptext72 A238  
                                          __ptext64 A63C                                            __ptext56 A04A  
                                          __ptext48 7D22                                            __ptext81 A552  
                                          __ptext73 9CCC                                            __ptext65 444C  
                                          __ptext57 A536                                            __ptext49 2E7C  
                                          __ptext90 A8A0                                            __ptext82 8C40  
                                          __ptext74 4804                                            __ptext66 8B68  
                                          __ptext58 4244                                            __ptext91 7978  
                                          __ptext83 61D0                                            __ptext75 A0A2  
                                          __ptext67 97E8                                            __ptext59 A172  
                                          __ptext92 4D2A                                            __ptext84 925A  
                                          __ptext76 A60C                                            __ptext68 9BBC  
                                          __ptext93 839C                                            __ptext85 A7B0  
                                          __ptext77 A34A                                            __ptext69 9C64  
                                          __ptext94 758E                                            __ptext86 7024  
                                          __ptext78 96C8                                            __ptext95 7660  
                                          __ptext87 9542                                            __ptext79 A79C  
                                          __ptext96 9592                                            __ptext88 17D0  
                                          __ptext97 8422                                            __ptext89 220A  
                                          __ptext98 804E                                            __ptext99 8730  
                               _tempConversion$6898 00B8                             ExecuteRxTimingSetup@ptr 0067  
                            ??_RADIO_SetFSKSyncWord 006D                               ??_UpdateReceiveDelays 0066  
                             __end_of_LORAWAN_Reset 4804                              __end_of_StartReTxTimer 56DC  
                           ??_UpdateCurrentDataRate 0060                                            _isJoined A32A  
                           ??_UpdateChannelIdStatus 0061                                       _sensorsString 03A0  
                          __size_of_UpdateDataRange 010E                              _SetReceptionNotOkState 86B6  
                                      _SSP2CON1bits 000F6C                                    ?_rn2483_delaysec 0060  
                               GenerateSubkey@F5972 03D0                                        ?_adaptString 0060  
                                ??i2_TMR1_ReadTimer 0003                           __size_of_RADIO_WritePower 00EE  
                           __end_of_HALDIO5PinValue A79C                                          _T3GCONbits 000FB4  
                                  __size_of_strncat 0084                             TMR3_WriteTimer@timerVal 0001  
                                 ?_UpdateDLSettings 0060                         __size_of_EUSART2_Initialize 0046  
                            ConfigureRadio@dataRate 0072                                   ?_ValidateRxOffset 0001  
                        __size_of_ValidateFrequency 006C                    __size_of_PrepareJoinRequestFrame 0150  
                                     CheckFlags@hdr 0060                              ??_RADIO_WriteFrequency 0071  
                              pointAddition@element 0060                                GPIODigitalWrite@GPIO 0061  
                             __size_of_UpdateCfList 0214                                 ?_DIO5_ISR_Lora_Init 0001  
                     __size_of_RADIO_SetOutputPower 000A                                       __size_of_main 015A  
                                     __size_of_rand 005C                                          _T5GCONbits 000F4D  
                                 _RADIO_ReceiveStop A36A                                  ??_UpdateDLSettings 0061  
                _EUSART2_DefaultFramingErrorHandler 000000                                _LORAWAN_PlatformInit A2C4  
                                   _FskSyncWordBuff FFF2                                  ??_ValidateRxOffset 0060  
                         __end_ofi2_TMR1_WriteTimer A5A6                              _enableClockPeripherals A6C0  
         IncludeMacCommandsResponse@bIncludeInFopts 0064                                ??_ComputeSessionKeys 0094  
                             ?_LORAWAN_SetDeviceEui 006B                           __end_of_ADC_GetConversion 9302  
                                     _timerOverflow 0044                                        _SwTimerStart 80E6  
                        __size_of_SwTimersInterrupt 00FE                                  ?_RADIO_ReceiveStop 0001  
                             __size_of_timerHandler 0126                          ??_RADIO_SetSpreadingFactor 0060  
                                          _resetSDA A74C                               RADIO_TxDone@timeOnAir 00D7  
                    ValidateChannelMask@channelMask 0060                            __size_of_TMR5_WriteTimer 001E  
                                    _averageMeasure 8314                         __size_of_DIO0_ISR_Lora_Init 0010  
                        __size_of_EncryptFRMPayload 017C                                     GenerateSubkey@i 00B9  
                                   GenerateSubkey@l 00A9      EUSART2_SetOverrunErrorHandler@interruptHandler 0060  
                           PrepareSessionKeys@index 0071                            __end_of_TMR_GetDeltaTime 640A  
                                SwTimerStop@timerId 0060                                            _swTimers 0300  
                                 ??_GPIOAverageRead 006F                                    ??_TMR1_ReadTimer 0062  
                              RADIO_RxDone@irqFlags 00F4                         __end_of_ValidateChannelMask 9712  
                                     UpdateCfList@i 00AA                  __end_of_INTERRUPT_InterruptManager 00A4  
                        _INTERRUPT_InterruptManager 0008                                 ??_RADIO_ReceiveStop 006C  
                       PrepareSessionKeys@networkId 006F                                   _RADIO_ReleaseData A8AC  
                                      ??_timerReset 0060                                   ??_TMR1_WriteTimer 0062  
                                   i2c_usdelay@time 0060                                        ?_acuadoriApp 0001  
                                       _sinGenStart 5BEE                                          _RADIO_DIO0 8200  
                                        _RADIO_DIO1 9630                                          _RADIO_DIO2 94F2  
                                        _RADIO_DIO3 A4FE                                          _RADIO_DIO4 A4E2  
                                        _RADIO_DIO5 A4C6                                        _SSP2STATbits 000F6D  
                              ??_DIO5_ISR_Lora_Init 0060                __end_of_INT1_DefaultInterruptHandler A904  
             __size_of_INT1_DefaultInterruptHandler 0002                        _INT1_DefaultInterruptHandler A902  
                 __size_of_RADIO_WriteConfiguration 04FA                              __end_of_rxWindowOffset FF17  
                       i2TMR1_ReadTimer@readValHigh 0007                                   ??_TMR5_Initialize 0062  
                        __size_of_DutyCycleCallback 0306                             EncryptFRMPayload@buffer 0092  
                                ?_RADIO_ReleaseData 0001                           ?_RADIO_WriteConfiguration 009E  
                                          log@coeff FFAA                                  __end_of_modulation FF0F  
                                        _RADIO_Init 49CE                               ?_lightSensAcquisition 0001  
                   ExecuteRxParamSetupReq@frequency 00A0                    ??_EUSART2_SetOverrunErrorHandler 0062  
                   ?_EUSART2_SetOverrunErrorHandler 0060                            __size_of_UpdateFrequency 003C  
                          ?_ValidateChannelMaskCntl 0001                          ??_LORAWAN_GetUplinkCounter 0064  
                                     __roundCounter 0043                                          _INTCONbits 000FF2  
                           ConfigureRadioTx@txPower 0078                                         ??_eval_poly 00A5  
                             acquisitionData@string 00AB                            __end_of_HALSPICSDeassert A8D8  
                          __size_of_UpdateDutyCycle 0034                                      ?_UpdateTxPower 0001  
                                          memcpy@d1 0060                                            memcpy@s1 0062  
                                    _EncKeySchedule 347C                  __size_of_SetCallbackSoftwareTimers 00DE  
                           __size_of_RxJoinResponse 001C                                     ??_SwTimerCreate 0060  
                               ExecuteDutyCycle@ptr 0060                                        _UpdateCfList 4030  
                               ??_RADIO_ReleaseData 0060                              ??_INTERRUPT_Initialize 0060  
                                          memset@p1 0060                                     ??_TMR1_CallBack 002A  
                              __size_of_SwTimerStop 0020                                    _RADIO_ReadRandom 7E78  
                         ??_EUSART2_SetErrorHandler 0062                                  _EXT_INT_Initialize A0F6  
                                   ?_StartReTxTimer 0001                               _TMR_OverrideRemaining 8634  
                                 ??_TMR3_StartTimer 0060                                            intlevel2 0000  
                    RADIO_ReceiveStart@rxWindowSize 00A9                                        _timerHandler 5F8C  
                         __end_of_RADIO_ReceiveStop A38A                                     _SwTimersExecute 78B6  
               SwTimerSetCallback@callbackParameter 0062                                         FillSubKey@i 0067  
                               _sensorsStringLength 01F8                       RADIO_WriteFrequency@frequency 006D  
                                  ___lwmod@dividend 00A0                               ?_LORAWAN_PlatformInit 0001  
                                  ___lldiv@dividend 0060                            __end_of_ExecuteDevStatus A7BA  
                           ?_PIN_MANAGER_Initialize 0001                                  _DefaultChannels433 FF80  
                                __end_of_timerReset A04A                                  _DefaultChannels868 FF48  
                                       ??_sendValue 00FA                                 ?_EXT_INT_Initialize 0001  
                                      ___abdiv@sign 0064                            UpdateDutyCycle@channelId 0062  
                            __end_of_averageMeasure 839C                                          _RCSTA2bits 000F71  
                            GenerateSubkey@const_Rb 0099                     __size_of_ExecuteRxParamSetupReq 015C  
                                         strncat@cp 0066                                           strncat@to 0060  
                                  ??_ADC_Initialize 0060                                          _OSCCONbits 000FD3  
                         UpdateJoinInProgress@state 0060                                   ??_ValidateTxPower 0060  
                               _LORAWAN_TxDone$1673 00BD                                 _LORAWAN_TxDone$1674 00C1  
                                 _LORAWAN_GetStatus 9D30                           __size_of_GPIODigitalWrite 00FC  
                               _LORAWAN_TxDone$6895 00CA                  __end_of_LORAWAN_LinkCheckConfigure 52D4  
                         __end_of_RADIO_ReleaseData A8B2                          _LORAWAN_LinkCheckConfigure 5176  
                                __end_of_txPower433 FF42                            __size_of_EnableChannels1 006A  
                                __end_of_txPower868 FF48                               _HALResetPinMakeOutput A8DC  
                                       ??_timerTick 0001                            ??_HALResetPinOutputValue 0060  
                            __size_of_INT1_CallBack 0020                           RADIO_WriteConfiguration@i 00A3  
                               _leafSensAcquisition A1C2                           ExecuteRxTimingSetup@delay 0069  
                                  AESEncodeLoRa@key 0080                           __size_of_SetJoinFailState 002C  
                  LORAWAN_LinkCheckConfigure@period 009E                                    ??_ConfigureRadio 0072  
    EUSART2_SetFramingErrorHandler@interruptHandler 0060                                  ?_LORAWAN_GetStatus 0060  
                                _SwTimerSetCallback 9C98         __end_of_UpdateRetransmissionAckTimeoutState 8B68  
      __size_of_UpdateRetransmissionAckTimeoutState 0072                ?_UpdateRetransmissionAckTimeoutState 0001  
             ??_UpdateRetransmissionAckTimeoutState 0092                 _UpdateRetransmissionAckTimeoutState 8AF6  
                            ??_TMR5_InterruptTicker 0009                                   RADIO_ReadRandom@i 0071  
                      SearchAvailableChannel@result 00AF                               RADIO_WritePower@paDac 0065  
                                 ??_TMR3_WriteTimer 0003                                     ??_pointAddition 0062  
                            __size_of_INT2_CallBack 0020                         __size_of_DIO4_ISR_Lora_Init 0002  
                             __end_of_DIO0_ISR_Lora A8F0                            __end_of_SwTimerIsRunning A2A2  
                                 ??_CheckMcastFlags 0062                            __end_of_ExecuteLinkCheck 9CFE  
                             RADIO_WritePower@power 0066                                    _RADIO_TxDone$796 00DB  
                          ?_CreateAllSoftwareTimers 0001                    RADIO_WriteMode@currentModulation 0067  
                              ??_EXT_INT_Initialize 0062                        RADIO_SetFSKSyncWord@syncWord 006B  
                                      _rxWindowSize FF1F                                 ??_LORAWAN_GetStatus 0064  
                            __end_of_EncKeySchedule 3718                       ?_INT1_DefaultInterruptHandler 0001  
                             __end_of_DIO1_ISR_Lora A8EC                                 ?_SwTimerSetCallback 0060  
                          __end_of_SwTimerReadValue 9A48                                    ___lldiv@quotient 0068  
                                       ?_HALSPISend 0001                            __end_of_ExecuteDutyCycle 92AE  
                                   ___lwmod@divisor 00A2              __end_of_UpdateReceiveWindow2Parameters A652  
           __size_of_UpdateReceiveWindow2Parameters 0016                      _UpdateReceiveWindow2Parameters A63C  
                           UpdateTxPower@txPowerNew 0060                                     ___lwmod@counter 00A4  
                   _LORAWAN_LinkCheckConfigure$2499 00A4                                    ??_TMR3_StopTimer 0060  
                  __end_of_INT1_SetInterruptHandler A7F6                        FindSmallestDataRate@dataRate 0063  
                     LORAWAN_Join@activationTypeNew 00DC                               __size_of_TMR_ISR_lora 0056  
                                 __CFG_T3CMX$PORTC0 000000                               __end_of_DIO2_ISR_Lora A8E8  
                              _SystemBlockingWaitMs 9E50                               FindSmallestDataRate@i 0062  
                ComputeSessionKeys@joinAcceptBuffer 0092                             __size_of_EnableChannels 001C  
                      __end_of_UpdateJoinInProgress A5DA                        __end_of_ExecuteRxTimingSetup A19A  
                           __size_of_HALSPICSAssert 0004                                ?_leafSensAcquisition 0001  
                           __end_of_FskSyncWordBuff FFF5                  __size_of_LORAWAN_SetApplicationEui 002E  
          __end_of_RADIO_WriteFSKFrequencyDeviation 8D14           __size_of_RADIO_WriteFSKFrequencyDeviation 006A  
                ??_RADIO_WriteFSKFrequencyDeviation 0071                   ?_RADIO_WriteFSKFrequencyDeviation 006D  
                  _RADIO_WriteFSKFrequencyDeviation 8CAA                  __size_of_LORAWAN_SetApplicationKey 002E  
                                     ___fladd@signs 0080                                    ExtractMic@buffer 006B  
                        ?_LORAWAN_SetApplicationEui 006B                             ??_RADIO_FSKPayloadReady 00F4  
                          UpdateDataRange@channelId 0062                          ?_LORAWAN_SetApplicationKey 006B  
                                 ??_TMR5_StartTimer 0060                            _RADIO_UnhandledInterrupt 9D90  
                                  ?_HALDIO5PinValue 0001                      __end_of_PIN_MANAGER_Initialize 93AA  
                                 ?_LORAWAN_Mainloop 0001                         __end_of_RADIO_RegisterWrite A3AA  
                           __size_of_ExecuteLinkAdr 01CA                                  _eusart2RxLastError 0126  
                      RADIO_WriteFSKBitRate@bitRate 006D                                        ___fladd@aexp 0081  
                                      ___fladd@bexp 0082                                  i2_TMR_GetDeltaTime 693E  
                               GPIOAverageRead@GPIO 0072                                     RADIO_SetCRC@crc 0060  
                                 __CFG_FOSC$INTIO67 000000                              tempConversion@adcValue 00B6  
                            ??_LORAWAN_SetDeviceEui 006D                                     _PIN_MANAGER_IOC A86E  
                               RADIO_WritePower@ocp 0064                                  ??_LORAWAN_Mainloop 00FA  
                                  i2c_sdaWrite@data 0062                          __size_ofi2_TMR1_WriteTimer 001C  
                              ??_SwTimerSetCallback 0063                                     ?_averageMeasure 006A  
                         __end_of_LORAWAN_GetStatus 9D60                          __size_of_ADC_GetConversion 0054  
                                 ??_UpdateDataRange 0061                             ?_UpdateMinMaxChDataRate 0001  
                                   _TMR1_Initialize 9EDC                    RADIO_WriteConfiguration@regValue 00A8  
                           i2TMR1_ReadTimer@readVal 0005                                  _RadioConfiguration 0129  
                                     ExtractMic@mic 0071                                   _LORAWAN_RxTimeout 2E7C  
                                  ??_TMR5_StopTimer 0060                         __end_of_RADIO_SetModulation A846  
                  __end_of_LORAWAN_SetUplinkCounter A69C                       __size_of_HALResetPinMakeInput 0004  
                       __size_of_RADIO_RxFSKTimeout 003C                                    ??_LORAWAN_RxDone 00DB  
                               ?i2_TMR_GetDeltaTime 0009  
