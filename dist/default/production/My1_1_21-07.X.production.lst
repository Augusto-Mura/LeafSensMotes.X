

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul 21 18:01:06 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1,group=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1,group=2
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1,group=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	text204,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1,group=2
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1,group=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	text229,global,reloc=2,class=CODE,delta=1
   255                           	psect	text230,global,reloc=2,class=CODE,delta=1
   256                           	psect	text231,global,reloc=2,class=CODE,delta=1,group=1
   257                           	psect	text232,global,reloc=2,class=CODE,delta=1,group=1
   258                           	psect	text233,global,reloc=2,class=CODE,delta=1
   259                           	psect	text234,global,reloc=2,class=CODE,delta=1
   260                           	psect	text235,global,reloc=2,class=CODE,delta=1
   261                           	psect	text236,global,reloc=2,class=CODE,delta=1
   262                           	psect	text237,global,reloc=2,class=CODE,delta=1
   263                           	psect	text238,global,reloc=2,class=CODE,delta=1
   264                           	psect	text239,global,reloc=2,class=CODE,delta=1
   265                           	psect	text240,global,reloc=2,class=CODE,delta=1
   266                           	psect	text241,global,reloc=2,class=CODE,delta=1
   267                           	psect	text242,global,reloc=2,class=CODE,delta=1
   268                           	psect	text243,global,reloc=2,class=CODE,delta=1
   269                           	psect	text244,global,reloc=2,class=CODE,delta=1,group=2
   270                           	psect	text245,global,reloc=2,class=CODE,delta=1,group=2
   271                           	psect	text246,global,reloc=2,class=CODE,delta=1
   272                           	psect	text247,global,reloc=2,class=CODE,delta=1
   273                           	psect	text248,global,reloc=2,class=CODE,delta=1
   274                           	psect	text249,global,reloc=2,class=CODE,delta=1
   275                           	psect	text250,global,reloc=2,class=CODE,delta=1
   276                           	psect	text251,global,reloc=2,class=CODE,delta=1
   277                           	psect	text252,global,reloc=2,class=CODE,delta=1
   278                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   279                           	psect	text254,global,reloc=2,class=CODE,delta=1
   280                           	psect	text255,global,reloc=2,class=CODE,delta=1
   281                           	psect	text256,global,reloc=2,class=CODE,delta=1
   282                           	psect	text257,global,reloc=2,class=CODE,delta=1
   283                           	psect	text258,global,reloc=2,class=CODE,delta=1
   284                           	psect	text259,global,reloc=2,class=CODE,delta=1
   285                           	psect	text260,global,reloc=2,class=CODE,delta=1
   286                           	psect	text261,global,reloc=2,class=CODE,delta=1
   287                           	psect	text262,global,reloc=2,class=CODE,delta=1,group=1
   288                           	psect	text263,global,reloc=2,class=CODE,delta=1
   289                           	psect	text264,global,reloc=2,class=CODE,delta=1
   290                           	psect	text265,global,reloc=2,class=CODE,delta=1
   291                           	psect	text266,global,reloc=2,class=CODE,delta=1
   292                           	psect	text267,global,reloc=2,class=CODE,delta=1
   293                           	psect	text268,global,reloc=2,class=CODE,delta=1
   294                           	psect	text269,global,reloc=2,class=CODE,delta=1
   295                           	psect	text270,global,reloc=2,class=CODE,delta=1
   296                           	psect	text271,global,reloc=2,class=CODE,delta=1
   297                           	psect	text272,global,reloc=2,class=CODE,delta=1
   298                           	psect	text273,global,reloc=2,class=CODE,delta=1
   299                           	psect	text274,global,reloc=2,class=CODE,delta=1
   300                           	psect	text275,global,reloc=2,class=CODE,delta=1
   301                           	psect	text276,global,reloc=2,class=CODE,delta=1
   302                           	psect	text277,global,reloc=2,class=CODE,delta=1
   303                           	psect	text278,global,reloc=2,class=CODE,delta=1
   304                           	psect	text279,global,reloc=2,class=CODE,delta=1
   305                           	psect	text280,global,reloc=2,class=CODE,delta=1
   306                           	psect	text281,global,reloc=2,class=CODE,delta=1
   307                           	psect	text282,global,reloc=2,class=CODE,delta=1
   308                           	psect	text283,global,reloc=2,class=CODE,delta=1
   309                           	psect	text284,global,reloc=2,class=CODE,delta=1
   310                           	psect	text285,global,reloc=2,class=CODE,delta=1
   311                           	psect	text286,global,reloc=2,class=CODE,delta=1
   312                           	psect	text287,global,reloc=2,class=CODE,delta=1
   313                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   314                           	psect	text288,global,reloc=2,class=CODE,delta=1
   315                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   316                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   317  0000                     
   318                           ; Version 2.05
   319                           ; Generated 20/12/2018 GMT
   320                           ; 
   321                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   322                           ; All rights reserved.
   323                           ; 
   324                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   325                           ; 
   326                           ; Redistribution and use in source and binary forms, with or without modification, are
   327                           ; permitted provided that the following conditions are met:
   328                           ; 
   329                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   330                           ;        conditions and the following disclaimer.
   331                           ; 
   332                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   333                           ;        of conditions and the following disclaimer in the documentation and/or other
   334                           ;        materials provided with the distribution.
   335                           ; 
   336                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   337                           ;        software without specific prior written permission.
   338                           ; 
   339                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   340                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   341                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   342                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   343                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   344                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   345                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   346                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   347                           ; 
   348                           ; 
   349                           ; Code-generator required, PIC18LF46K22 Definitions
   350                           ; 
   351                           ; SFR Addresses
   352  0000                     
   353 ;; Function _EUSART2_DefaultFramingErrorHandler is unused but had its address taken
   354  0000                     
   355 ;; Function _EUSART2_DefaultOverrunErrorHandler is unused but had its address taken
   356  0000                     
   357 ;; Function _EUSART2_DefaultErrorHandler is unused but had its address taken
   358  0000                     
   359 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   360 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   361 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   362 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   363 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   364 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   365 ;;_LORAWAN_LinkCheckCallback$2513	offset	0
   366 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   367 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   368 ;;_DutyCycleCallback$1859	offset	0
   369 ;;DutyCycleCallback@minim	offset	4
   370 ;;DutyCycleCallback@i	offset	8
   371 ;;DutyCycleCallback@found	offset	9
   372 ;;DutyCycleCallback@param	offset=-1 (param)
   373 ;;AutomaticReplyCallback@param	offset=-1 (param)
   374 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   375 ;;AckRetransmissionCallback@param	offset=-1 (param)
   376 ;;_param	offset=-1 (param)
   377 ;;_UpdateJoinSuccessState$2530	offset	0
   378 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   379                           
   380                           	psect	idataCOMRAM
   381  00A932                     __pidataCOMRAM:
   382                           	opt callstack 0
   383                           
   384                           ;initializer for _ticksToScheduledInterrupt
   385  00A932  FFFF               	dw	65535
   386  00A934  FFFF               	dw	65535
   387                           
   388                           	psect	idataBANK1
   389  00A7FA                     __pidataBANK1:
   390                           	opt callstack 0
   391                           
   392                           ;initializer for _randx
   393  00A7FA  0001               	dw	1
   394  00A7FC  0000               	dw	0
   395                           
   396                           ;initializer for _pulseSignal
   397  00A7FE  0222               	dw	546
   398  00A800  0208               	dw	520
   399                           
   400                           ;initializer for _address
   401  00A802  90                 	db	144
   402                           
   403                           ;initializer for _sensorsStringLength
   404  00A803  0A                 	db	10
   405                           
   406                           ;initializer for _stringValueLength
   407  00A804  05                 	db	5
   408                           
   409                           ;initializer for _stringLength
   410  00A805  05                 	db	5
   411                           
   412                           	psect	idataBANK3
   413  00A1D0                     __pidataBANK3:
   414                           	opt callstack 0
   415                           
   416                           ;initializer for GenerateSubkey@F5972
   417  00A1D0  00                 	db	0
   418  00A1D1  00                 	db	0
   419  00A1D2  00                 	db	0
   420  00A1D3  00                 	db	0
   421  00A1D4  00                 	db	0
   422  00A1D5  00                 	db	0
   423  00A1D6  00                 	db	0
   424  00A1D7  00                 	db	0
   425  00A1D8  00                 	db	0
   426  00A1D9  00                 	db	0
   427  00A1DA  00                 	db	0
   428  00A1DB  00                 	db	0
   429  00A1DC  00                 	db	0
   430  00A1DD  00                 	db	0
   431  00A1DE  00                 	db	0
   432  00A1DF  87                 	db	135
   433                           
   434                           ;initializer for _appKey
   435  00A1E0  7F                 	db	127
   436  00A1E1  B8                 	db	184
   437  00A1E2  0D                 	db	13
   438  00A1E3  9D                 	db	157
   439  00A1E4  46                 	db	70
   440  00A1E5  4A                 	db	74
   441  00A1E6  57                 	db	87
   442  00A1E7  3F                 	db	63
   443  00A1E8  EF                 	db	239
   444  00A1E9  68                 	db	104
   445  00A1EA  0E                 	db	14
   446  00A1EB  55                 	db	85
   447  00A1EC  AE                 	db	174
   448  00A1ED  C4                 	db	196
   449  00A1EE  52                 	db	82
   450  00A1EF  9B                 	db	155
   451                           
   452                           ;initializer for _deviceEui
   453  00A1F0  B9                 	db	185
   454  00A1F1  96                 	db	150
   455  00A1F2  8F                 	db	143
   456  00A1F3  87                 	db	135
   457  00A1F4  84                 	db	132
   458  00A1F5  48                 	db	72
   459  00A1F6  8C                 	db	140
   460  00A1F7  2D                 	db	45
   461                           
   462                           	psect	mediumconst
   463  00FE06                     __pmediumconst:
   464                           	opt callstack 0
   465  00FE06  00                 	db	0
   466  00FE07                     _STable:
   467                           	opt callstack 0
   468  00FE07  63                 	db	99
   469  00FE08  7C                 	db	124
   470  00FE09  77                 	db	119
   471  00FE0A  7B                 	db	123
   472  00FE0B  F2                 	db	242
   473  00FE0C  6B                 	db	107
   474  00FE0D  6F                 	db	111
   475  00FE0E  C5                 	db	197
   476  00FE0F  30                 	db	48
   477  00FE10  01                 	db	1
   478  00FE11  67                 	db	103
   479  00FE12  2B                 	db	43
   480  00FE13  FE                 	db	254
   481  00FE14  D7                 	db	215
   482  00FE15  AB                 	db	171
   483  00FE16  76                 	db	118
   484  00FE17  CA                 	db	202
   485  00FE18  82                 	db	130
   486  00FE19  C9                 	db	201
   487  00FE1A  7D                 	db	125
   488  00FE1B  FA                 	db	250
   489  00FE1C  59                 	db	89
   490  00FE1D  47                 	db	71
   491  00FE1E  F0                 	db	240
   492  00FE1F  AD                 	db	173
   493  00FE20  D4                 	db	212
   494  00FE21  A2                 	db	162
   495  00FE22  AF                 	db	175
   496  00FE23  9C                 	db	156
   497  00FE24  A4                 	db	164
   498  00FE25  72                 	db	114
   499  00FE26  C0                 	db	192
   500  00FE27  B7                 	db	183
   501  00FE28  FD                 	db	253
   502  00FE29  93                 	db	147
   503  00FE2A  26                 	db	38
   504  00FE2B  36                 	db	54
   505  00FE2C  3F                 	db	63
   506  00FE2D  F7                 	db	247
   507  00FE2E  CC                 	db	204
   508  00FE2F  34                 	db	52
   509  00FE30  A5                 	db	165
   510  00FE31  E5                 	db	229
   511  00FE32  F1                 	db	241
   512  00FE33  71                 	db	113
   513  00FE34  D8                 	db	216
   514  00FE35  31                 	db	49
   515  00FE36  15                 	db	21
   516  00FE37  04                 	db	4
   517  00FE38  C7                 	db	199
   518  00FE39  23                 	db	35
   519  00FE3A  C3                 	db	195
   520  00FE3B  18                 	db	24
   521  00FE3C  96                 	db	150
   522  00FE3D  05                 	db	5
   523  00FE3E  9A                 	db	154
   524  00FE3F  07                 	db	7
   525  00FE40  12                 	db	18
   526  00FE41  80                 	db	128
   527  00FE42  E2                 	db	226
   528  00FE43  EB                 	db	235
   529  00FE44  27                 	db	39
   530  00FE45  B2                 	db	178
   531  00FE46  75                 	db	117
   532  00FE47  09                 	db	9
   533  00FE48  83                 	db	131
   534  00FE49  2C                 	db	44
   535  00FE4A  1A                 	db	26
   536  00FE4B  1B                 	db	27
   537  00FE4C  6E                 	db	110
   538  00FE4D  5A                 	db	90
   539  00FE4E  A0                 	db	160
   540  00FE4F  52                 	db	82
   541  00FE50  3B                 	db	59
   542  00FE51  D6                 	db	214
   543  00FE52  B3                 	db	179
   544  00FE53  29                 	db	41
   545  00FE54  E3                 	db	227
   546  00FE55  2F                 	db	47
   547  00FE56  84                 	db	132
   548  00FE57  53                 	db	83
   549  00FE58  D1                 	db	209
   550  00FE59  00                 	db	0
   551  00FE5A  ED                 	db	237
   552  00FE5B  20                 	db	32
   553  00FE5C  FC                 	db	252
   554  00FE5D  B1                 	db	177
   555  00FE5E  5B                 	db	91
   556  00FE5F  6A                 	db	106
   557  00FE60  CB                 	db	203
   558  00FE61  BE                 	db	190
   559  00FE62  39                 	db	57
   560  00FE63  4A                 	db	74
   561  00FE64  4C                 	db	76
   562  00FE65  58                 	db	88
   563  00FE66  CF                 	db	207
   564  00FE67  D0                 	db	208
   565  00FE68  EF                 	db	239
   566  00FE69  AA                 	db	170
   567  00FE6A  FB                 	db	251
   568  00FE6B  43                 	db	67
   569  00FE6C  4D                 	db	77
   570  00FE6D  33                 	db	51
   571  00FE6E  85                 	db	133
   572  00FE6F  45                 	db	69
   573  00FE70  F9                 	db	249
   574  00FE71  02                 	db	2
   575  00FE72  7F                 	db	127
   576  00FE73  50                 	db	80
   577  00FE74  3C                 	db	60
   578  00FE75  9F                 	db	159
   579  00FE76  A8                 	db	168
   580  00FE77  51                 	db	81
   581  00FE78  A3                 	db	163
   582  00FE79  40                 	db	64
   583  00FE7A  8F                 	db	143
   584  00FE7B  92                 	db	146
   585  00FE7C  9D                 	db	157
   586  00FE7D  38                 	db	56
   587  00FE7E  F5                 	db	245
   588  00FE7F  BC                 	db	188
   589  00FE80  B6                 	db	182
   590  00FE81  DA                 	db	218
   591  00FE82  21                 	db	33
   592  00FE83  10                 	db	16
   593  00FE84  FF                 	db	255
   594  00FE85  F3                 	db	243
   595  00FE86  D2                 	db	210
   596  00FE87  CD                 	db	205
   597  00FE88  0C                 	db	12
   598  00FE89  13                 	db	19
   599  00FE8A  EC                 	db	236
   600  00FE8B  5F                 	db	95
   601  00FE8C  97                 	db	151
   602  00FE8D  44                 	db	68
   603  00FE8E  17                 	db	23
   604  00FE8F  C4                 	db	196
   605  00FE90  A7                 	db	167
   606  00FE91  7E                 	db	126
   607  00FE92  3D                 	db	61
   608  00FE93  64                 	db	100
   609  00FE94  5D                 	db	93
   610  00FE95  19                 	db	25
   611  00FE96  73                 	db	115
   612  00FE97  60                 	db	96
   613  00FE98  81                 	db	129
   614  00FE99  4F                 	db	79
   615  00FE9A  DC                 	db	220
   616  00FE9B  22                 	db	34
   617  00FE9C  2A                 	db	42
   618  00FE9D  90                 	db	144
   619  00FE9E  88                 	db	136
   620  00FE9F  46                 	db	70
   621  00FEA0  EE                 	db	238
   622  00FEA1  B8                 	db	184
   623  00FEA2  14                 	db	20
   624  00FEA3  DE                 	db	222
   625  00FEA4  5E                 	db	94
   626  00FEA5  0B                 	db	11
   627  00FEA6  DB                 	db	219
   628  00FEA7  E0                 	db	224
   629  00FEA8  32                 	db	50
   630  00FEA9  3A                 	db	58
   631  00FEAA  0A                 	db	10
   632  00FEAB  49                 	db	73
   633  00FEAC  06                 	db	6
   634  00FEAD  24                 	db	36
   635  00FEAE  5C                 	db	92
   636  00FEAF  C2                 	db	194
   637  00FEB0  D3                 	db	211
   638  00FEB1  AC                 	db	172
   639  00FEB2  62                 	db	98
   640  00FEB3  91                 	db	145
   641  00FEB4  95                 	db	149
   642  00FEB5  E4                 	db	228
   643  00FEB6  79                 	db	121
   644  00FEB7  E7                 	db	231
   645  00FEB8  C8                 	db	200
   646  00FEB9  37                 	db	55
   647  00FEBA  6D                 	db	109
   648  00FEBB  8D                 	db	141
   649  00FEBC  D5                 	db	213
   650  00FEBD  4E                 	db	78
   651  00FEBE  A9                 	db	169
   652  00FEBF  6C                 	db	108
   653  00FEC0  56                 	db	86
   654  00FEC1  F4                 	db	244
   655  00FEC2  EA                 	db	234
   656  00FEC3  65                 	db	101
   657  00FEC4  7A                 	db	122
   658  00FEC5  AE                 	db	174
   659  00FEC6  08                 	db	8
   660  00FEC7  BA                 	db	186
   661  00FEC8  78                 	db	120
   662  00FEC9  25                 	db	37
   663  00FECA  2E                 	db	46
   664  00FECB  1C                 	db	28
   665  00FECC  A6                 	db	166
   666  00FECD  B4                 	db	180
   667  00FECE  C6                 	db	198
   668  00FECF  E8                 	db	232
   669  00FED0  DD                 	db	221
   670  00FED1  74                 	db	116
   671  00FED2  1F                 	db	31
   672  00FED3  4B                 	db	75
   673  00FED4  BD                 	db	189
   674  00FED5  8B                 	db	139
   675  00FED6  8A                 	db	138
   676  00FED7  70                 	db	112
   677  00FED8  3E                 	db	62
   678  00FED9  B5                 	db	181
   679  00FEDA  66                 	db	102
   680  00FEDB  48                 	db	72
   681  00FEDC  03                 	db	3
   682  00FEDD  F6                 	db	246
   683  00FEDE  0E                 	db	14
   684  00FEDF  61                 	db	97
   685  00FEE0  35                 	db	53
   686  00FEE1  57                 	db	87
   687  00FEE2  B9                 	db	185
   688  00FEE3  86                 	db	134
   689  00FEE4  C1                 	db	193
   690  00FEE5  1D                 	db	29
   691  00FEE6  9E                 	db	158
   692  00FEE7  E1                 	db	225
   693  00FEE8  F8                 	db	248
   694  00FEE9  98                 	db	152
   695  00FEEA  11                 	db	17
   696  00FEEB  69                 	db	105
   697  00FEEC  D9                 	db	217
   698  00FEED  8E                 	db	142
   699  00FEEE  94                 	db	148
   700  00FEEF  9B                 	db	155
   701  00FEF0  1E                 	db	30
   702  00FEF1  87                 	db	135
   703  00FEF2  E9                 	db	233
   704  00FEF3  CE                 	db	206
   705  00FEF4  55                 	db	85
   706  00FEF5  28                 	db	40
   707  00FEF6  DF                 	db	223
   708  00FEF7  8C                 	db	140
   709  00FEF8  A1                 	db	161
   710  00FEF9  89                 	db	137
   711  00FEFA  0D                 	db	13
   712  00FEFB  BF                 	db	191
   713  00FEFC  E6                 	db	230
   714  00FEFD  42                 	db	66
   715  00FEFE  68                 	db	104
   716  00FEFF  41                 	db	65
   717  00FF00  99                 	db	153
   718  00FF01  2D                 	db	45
   719  00FF02  0F                 	db	15
   720  00FF03  B0                 	db	176
   721  00FF04  54                 	db	84
   722  00FF05  BB                 	db	187
   723  00FF06  16                 	db	22
   724  00FF07                     __end_of_STable:
   725                           	opt callstack 0
   726  00FF07                     _modulation:
   727                           	opt callstack 0
   728  00FF07  01                 	db	1
   729  00FF08  01                 	db	1
   730  00FF09  01                 	db	1
   731  00FF0A  01                 	db	1
   732  00FF0B  01                 	db	1
   733  00FF0C  01                 	db	1
   734  00FF0D  01                 	db	1
   735  00FF0E  00                 	db	0
   736  00FF0F                     __end_of_modulation:
   737                           	opt callstack 0
   738  00FF0F                     _rxWindowOffset:
   739                           	opt callstack 0
   740  00FF0F  DF                 	db	223
   741  00FF10  CE                 	db	206
   742  00FF11  C6                 	db	198
   743  00FF12  C2                 	db	194
   744  00FF13  BE                 	db	190
   745  00FF14  BC                 	db	188
   746  00FF15  F1                 	db	241
   747  00FF16  FE                 	db	254
   748  00FF17                     __end_of_rxWindowOffset:
   749                           	opt callstack 0
   750  00FF17                     _maxPayloadSize:
   751                           	opt callstack 0
   752  00FF17  33                 	db	51
   753  00FF18  33                 	db	51
   754  00FF19  33                 	db	51
   755  00FF1A  73                 	db	115
   756  00FF1B  F2                 	db	242
   757  00FF1C  F2                 	db	242
   758  00FF1D  F2                 	db	242
   759  00FF1E  38                 	db	56
   760  00FF1F                     __end_of_maxPayloadSize:
   761                           	opt callstack 0
   762  00FF1F                     _rxWindowSize:
   763                           	opt callstack 0
   764  00FF1F  08                 	db	8
   765  00FF20  0A                 	db	10
   766  00FF21  0E                 	db	14
   767  00FF22  1A                 	db	26
   768  00FF23  31                 	db	49
   769  00FF24  58                 	db	88
   770  00FF25  3C                 	db	60
   771  00FF26  08                 	db	8
   772  00FF27                     __end_of_rxWindowSize:
   773                           	opt callstack 0
   774  00FF27                     _macEndDevCmdReplyLen:
   775                           	opt callstack 0
   776  00FF27  01                 	db	1
   777  00FF28  02                 	db	2
   778  00FF29  01                 	db	1
   779  00FF2A  02                 	db	2
   780  00FF2B  03                 	db	3
   781  00FF2C  02                 	db	2
   782  00FF2D  01                 	db	1
   783  00FF2E                     __end_of_macEndDevCmdReplyLen:
   784                           	opt callstack 0
   785  00FF2E                     _bandwidth:
   786                           	opt callstack 0
   787  00FF2E  07                 	db	7
   788  00FF2F  07                 	db	7
   789  00FF30  07                 	db	7
   790  00FF31  07                 	db	7
   791  00FF32  07                 	db	7
   792  00FF33  07                 	db	7
   793  00FF34  08                 	db	8
   794  00FF35                     __end_of_bandwidth:
   795                           	opt callstack 0
   796  00FF35                     _spreadingFactor:
   797                           	opt callstack 0
   798  00FF35  0C                 	db	12
   799  00FF36  0B                 	db	11
   800  00FF37  0A                 	db	10
   801  00FF38  09                 	db	9
   802  00FF39  08                 	db	8
   803  00FF3A  07                 	db	7
   804  00FF3B  07                 	db	7
   805  00FF3C                     __end_of_spreadingFactor:
   806                           	opt callstack 0
   807  00FF3C  0A                 	db	10
   808  00FF3D  07                 	db	7
   809  00FF3E  04                 	db	4
   810  00FF3F  01                 	db	1
   811  00FF40  FE                 	db	254
   812  00FF41  FB                 	db	251
   813  00FF42                     __end_of_txPower433:
   814                           	opt callstack 0
   815  00FF42                     _txPower868:
   816                           	opt callstack 0
   817  00FF42  14                 	db	20
   818  00FF43  0E                 	db	14
   819  00FF44  0B                 	db	11
   820  00FF45  08                 	db	8
   821  00FF46  05                 	db	5
   822  00FF47  02                 	db	2
   823  00FF48                     __end_of_txPower868:
   824                           	opt callstack 0
   825  00FF48                     _DefaultChannels868:
   826                           	opt callstack 0
   827  00FF48  4220               	dw	16928
   828  00FF4A  33C4               	dw	13252
   829  00FF4C  01                 	db	1
   830  00FF4D  50                 	db	80
   831  00FF4E  0063               	dw	99
   832  00FF50  0000               	dw	0
   833  00FF52  0000               	dw	0
   834  00FF54  01                 	db	1
   835  00FF55  FF                 	db	255
   836  00FF56  34E0               	dw	13536
   837  00FF58  33C1               	dw	13249
   838  00FF5A  01                 	db	1
   839  00FF5B  50                 	db	80
   840  00FF5C  0063               	dw	99
   841  00FF5E  0000               	dw	0
   842  00FF60  0000               	dw	0
   843  00FF62  01                 	db	1
   844  00FF63  FF                 	db	255
   845  00FF64  27A0               	dw	10144
   846  00FF66  33BE               	dw	13246
   847  00FF68  01                 	db	1
   848  00FF69  50                 	db	80
   849  00FF6A  0063               	dw	99
   850  00FF6C  0000               	dw	0
   851  00FF6E  0000               	dw	0
   852  00FF70  01                 	db	1
   853  00FF71  FF                 	db	255
   854  00FF72  E608               	dw	58888
   855  00FF74  33D3               	dw	13267
   856  00FF76  01                 	db	1
   857  00FF77  50                 	db	80
   858  00FF78  0063               	dw	99
   859  00FF7A  0000               	dw	0
   860  00FF7C  0000               	dw	0
   861  00FF7E  01                 	db	1
   862  00FF7F  FF                 	db	255
   863  00FF80                     __end_of_DefaultChannels868:
   864                           	opt callstack 0
   865  00FF80                     _DefaultChannels433:
   866                           	opt callstack 0
   867  00FF80  B9D8               	dw	47576
   868  00FF82  19D1               	dw	6609
   869  00FF84  01                 	db	1
   870  00FF85  50                 	db	80
   871  00FF86  012E               	dw	302
   872  00FF88  0000               	dw	0
   873  00FF8A  0000               	dw	0
   874  00FF8C  01                 	db	1
   875  00FF8D  FF                 	db	255
   876  00FF8E  C718               	dw	50968
   877  00FF90  19D4               	dw	6612
   878  00FF92  01                 	db	1
   879  00FF93  50                 	db	80
   880  00FF94  012E               	dw	302
   881  00FF96  0000               	dw	0
   882  00FF98  0000               	dw	0
   883  00FF9A  01                 	db	1
   884  00FF9B  FF                 	db	255
   885  00FF9C  D458               	dw	54360
   886  00FF9E  19D7               	dw	6615
   887  00FFA0  01                 	db	1
   888  00FFA1  50                 	db	80
   889  00FFA2  012E               	dw	302
   890  00FFA4  0000               	dw	0
   891  00FFA6  0000               	dw	0
   892  00FFA8  01                 	db	1
   893  00FFA9  FF                 	db	255
   894  00FFAA                     __end_of_DefaultChannels433:
   895                           	opt callstack 0
   896  00FFAA                     log@coeff:
   897                           	opt callstack 0
   898  00FFAA  0000               	dw	0
   899  00FFAC  0000               	dw	0
   900  00FFAE  FFC4               	dw	65476
   901  00FFB0  3F7F               	dw	16255
   902  00FFB2  EF80               	dw	61312
   903  00FFB4  BEFF               	dw	48895
   904  00FFB6  E190               	dw	57744
   905  00FFB8  3EA9               	dw	16041
   906  00FFBA  82EC               	dw	33516
   907  00FFBC  BE76               	dw	48758
   908  00FFBE  AD82               	dw	44418
   909  00FFC0  3E2B               	dw	15915
   910  00FFC2  3C0E               	dw	15374
   911  00FFC4  BDC3               	dw	48579
   912  00FFC6  D187               	dw	53639
   913  00FFC8  3D13               	dw	15635
   914  00FFCA  7841               	dw	30785
   915  00FFCC  BBD3               	dw	48083
   916  00FFCE                     __end_oflog@coeff:
   917                           	opt callstack 0
   918  00FFCE                     sin@coeff_a:
   919                           	opt callstack 0
   920  00FFCE  F3EC               	dw	62444
   921  00FFD0  484A               	dw	18506
   922  00FFD2  9535               	dw	38197
   923  00FFD4  C795               	dw	51093
   924  00FFD6  C117               	dw	49431
   925  00FFD8  45DC               	dw	17884
   926  00FFDA  DBFD               	dw	56317
   927  00FFDC  C36D               	dw	50029
   928  00FFDE  B372               	dw	45938
   929  00FFE0  4033               	dw	16435
   930  00FFE2                     __end_ofsin@coeff_a:
   931                           	opt callstack 0
   932  00FFE2                     sin@coeff_b:
   933                           	opt callstack 0
   934  00FFE2  342B               	dw	13355
   935  00FFE4  4801               	dw	18433
   936  00FFE6  9D7F               	dw	40319
   937  00FFE8  45B0               	dw	17840
   938  00FFEA  FFE7               	dw	65511
   939  00FFEC  42D9               	dw	17113
   940  00FFEE  0000               	dw	0
   941  00FFF0  3F80               	dw	16256
   942  00FFF2                     __end_ofsin@coeff_b:
   943                           	opt callstack 0
   944  00FFF2                     _FskSyncWordBuff:
   945                           	opt callstack 0
   946  00FFF2  C1                 	db	193
   947  00FFF3  94                 	db	148
   948  00FFF4  C1                 	db	193
   949  00FFF5                     __end_of_FskSyncWordBuff:
   950                           	opt callstack 0
   951  00FFF5                     STR_1:
   952  00FFF5  41                 	db	65	;'A'
   953  00FFF6  00                 	db	0
   954  00FFF7                     STR_2:
   955  00FFF7  42                 	db	66	;'B'
   956  00FFF8  00                 	db	0
   957  00FFF9                     STR_5:
   958  00FFF9  43                 	db	67	;'C'
   959  00FFFA  00                 	db	0
   960  00FFFB                     STR_4:
   961  00FFFB  4C                 	db	76	;'L'
   962  00FFFC  00                 	db	0
   963  00FFFD                     STR_3:
   964  00FFFD  54                 	db	84	;'T'
   965  00FFFE  00                 	db	0
   966  0000                     
   967                           ; #config settings
   968  00FFFF  00                 	db	0	; dummy byte at the end
   969  0000                     
   970                           	psect	nvBANK1
   971  0001DD                     __pnvBANK1:
   972                           	opt callstack 0
   973  0001DD                     _TMR5_InterruptHandler:
   974                           	opt callstack 0
   975  0001DD                     	ds	2
   976  0001DF                     _timer5ReloadVal:
   977                           	opt callstack 0
   978  0001DF                     	ds	2
   979  0001E1                     _TMR3_InterruptHandler:
   980                           	opt callstack 0
   981  0001E1                     	ds	2
   982  0001E3                     _timer3ReloadVal:
   983                           	opt callstack 0
   984  0001E3                     	ds	2
   985  0001E5                     _TMR1_InterruptHandler:
   986                           	opt callstack 0
   987  0001E5                     	ds	2
   988  0001E7                     _timer1ReloadVal:
   989                           	opt callstack 0
   990  0001E7                     	ds	2
   991  0001E9                     _IOCB4_InterruptHandler:
   992                           	opt callstack 0
   993  0001E9                     	ds	2
   994  0001EB                     _INT2_InterruptHandler:
   995                           	opt callstack 0
   996  0001EB                     	ds	2
   997  0001ED                     _INT1_InterruptHandler:
   998                           	opt callstack 0
   999  0001ED                     	ds	2
  1000                           
  1001                           	psect	nvBANK2
  1002  0002FA                     __pnvBANK2:
  1003                           	opt callstack 0
  1004  0002FA                     _EUSART2_ErrorHandler:
  1005                           	opt callstack 0
  1006  0002FA                     	ds	2
  1007  0002FC                     _EUSART2_OverrunErrorHandler:
  1008                           	opt callstack 0
  1009  0002FC                     	ds	2
  1010  0002FE                     _EUSART2_FramingErrorHandler:
  1011                           	opt callstack 0
  1012  0002FE                     	ds	2
  1013  0000                     _TMR5	set	3919
  1014  0000                     _T5GCONbits	set	3917
  1015  0000                     _T5CONbits	set	3918
  1016  0000                     _T5CON	set	3918
  1017  0000                     _TMR5L	set	3919
  1018  0000                     _TMR5H	set	3920
  1019  0000                     _T5GCON	set	3917
  1020  0000                     _ANSELA	set	3896
  1021  0000                     _ANSELE	set	3900
  1022  0000                     _ANSELB	set	3897
  1023  0000                     _ANSELC	set	3898
  1024  0000                     _ANSELD	set	3899
  1025  0000                     _TMR3	set	4018
  1026  0000                     _TMR1	set	4046
  1027  0000                     _WDTCON	set	4049
  1028  0000                     _PORTC	set	3970
  1029  0000                     _PORTD	set	3971
  1030  0000                     _PORTE	set	3972
  1031  0000                     _PORTA	set	3968
  1032  0000                     _IPR5bits	set	3967
  1033  0000                     _T3GCONbits	set	4020
  1034  0000                     _T3CONbits	set	4017
  1035  0000                     _T3CON	set	4017
  1036  0000                     _IPR2bits	set	4002
  1037  0000                     _TMR3L	set	4018
  1038  0000                     _TMR3H	set	4019
  1039  0000                     _T3GCON	set	4020
  1040  0000                     _TXREG2	set	3955
  1041  0000                     _RCREG2	set	3956
  1042  0000                     _RCSTA2bits	set	3953
  1043  0000                     _TXSTA2bits	set	3954
  1044  0000                     _PIR3bits	set	4004
  1045  0000                     _SPBRGH2	set	3958
  1046  0000                     _SPBRG2	set	3957
  1047  0000                     _TXSTA2	set	3954
  1048  0000                     _RCSTA2	set	3953
  1049  0000                     _BAUDCON2	set	3952
  1050  0000                     _ADCON0bits	set	4034
  1051  0000                     _ADRESH	set	4036
  1052  0000                     _ADRESL	set	4035
  1053  0000                     _ADCON2	set	4032
  1054  0000                     _ADCON1	set	4033
  1055  0000                     _ADCON0	set	4034
  1056  0000                     _T1GCONbits	set	4044
  1057  0000                     _T1CONbits	set	4045
  1058  0000                     _T1CON	set	4045
  1059  0000                     _IPR1bits	set	3999
  1060  0000                     _TMR1L	set	4046
  1061  0000                     _TMR1H	set	4047
  1062  0000                     _T1GCON	set	4044
  1063  0000                     _IOCBbits	set	3938
  1064  0000                     _WPUB	set	3937
  1065  0000                     _TRISD	set	3989
  1066  0000                     _TRISC	set	3988
  1067  0000                     _TRISB	set	3987
  1068  0000                     _TRISA	set	3986
  1069  0000                     _TRISE	set	3990
  1070  0000                     _LATC	set	3979
  1071  0000                     _LATB	set	3978
  1072  0000                     _LATA	set	3977
  1073  0000                     _LATD	set	3980
  1074  0000                     _LATE	set	3981
  1075  0000                     _OSCTUNE	set	3995
  1076  0000                     _OSCCON2	set	4050
  1077  0000                     _OSCCON	set	4051
  1078  0000                     _PIR2bits	set	4001
  1079  0000                     _PIE2bits	set	4000
  1080  0000                     _PIR5bits	set	3966
  1081  0000                     _PIE5bits	set	3965
  1082  0000                     _PIR1bits	set	3998
  1083  0000                     _PIE1bits	set	3997
  1084  0000                     _RCONbits	set	4048
  1085  0000                     _INTCON2bits	set	4081
  1086  0000                     _INTCON3bits	set	4080
  1087  0000                     _SSP2STATbits	set	3949
  1088  0000                     _SSP2BUF	set	3951
  1089  0000                     _SSP2CON1bits	set	3948
  1090  0000                     _SSP2ADD	set	3950
  1091  0000                     _SSP2CON1	set	3948
  1092  0000                     _SSP2STAT	set	3949
  1093  0000                     _PORTBbits	set	3969
  1094  0000                     _INTCONbits	set	4082
  1095  0000                     _LATD3	set	31843
  1096  0000                     _LATC2	set	31834
  1097  0000                     _TRISC2	set	31906
  1098                           
  1099                           	psect	cinit
  1100  00787A                     __pcinit:
  1101                           	opt callstack 0
  1102  00787A                     start_initialization:
  1103                           	opt callstack 0
  1104  00787A                     __initialization:
  1105                           	opt callstack 0
  1106                           
  1107                           ; Initialize objects allocated to BANK3 (40 bytes)
  1108                           ; load TBLPTR registers with __pidataBANK3
  1109  00787A  0ED0               	movlw	low __pidataBANK3
  1110  00787C  6EF6               	movwf	tblptrl,c
  1111  00787E  0EA1               	movlw	high __pidataBANK3
  1112  007880  6EF7               	movwf	tblptrh,c
  1113  007882  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1114  007884  6EF8               	movwf	tblptru,c
  1115  007886  EE03  F0D0         	lfsr	0,__pdataBANK3
  1116  00788A  EE20 F028          	lfsr	2,40
  1117  00788E                     copy_data0:
  1118  00788E  0009               	tblrd		*+
  1119  007890  CFF5 FFEE          	movff	tablat,postinc0
  1120  007894  50DD               	movf	postdec2,w,c
  1121  007896  50D9               	movf	fsr2l,w,c
  1122  007898  E1FA               	bnz	copy_data0
  1123                           
  1124                           ; Initialize objects allocated to BANK1 (12 bytes)
  1125                           ; load TBLPTR registers with __pidataBANK1
  1126  00789A  0EFA               	movlw	low __pidataBANK1
  1127  00789C  6EF6               	movwf	tblptrl,c
  1128  00789E  0EA7               	movlw	high __pidataBANK1
  1129  0078A0  6EF7               	movwf	tblptrh,c
  1130  0078A2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1131  0078A4  6EF8               	movwf	tblptru,c
  1132  0078A6  EE01  F0EF         	lfsr	0,__pdataBANK1
  1133  0078AA  EE20 F00C          	lfsr	2,12
  1134  0078AE                     copy_data1:
  1135  0078AE  0009               	tblrd		*+
  1136  0078B0  CFF5 FFEE          	movff	tablat,postinc0
  1137  0078B4  50DD               	movf	postdec2,w,c
  1138  0078B6  50D9               	movf	fsr2l,w,c
  1139  0078B8  E1FA               	bnz	copy_data1
  1140                           
  1141                           ; Initialize objects allocated to COMRAM (4 bytes)
  1142                           ; load TBLPTR registers with __pidataCOMRAM
  1143  0078BA  0E32               	movlw	low __pidataCOMRAM
  1144  0078BC  6EF6               	movwf	tblptrl,c
  1145  0078BE  0EA9               	movlw	high __pidataCOMRAM
  1146  0078C0  6EF7               	movwf	tblptrh,c
  1147  0078C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1148  0078C4  6EF8               	movwf	tblptru,c
  1149  0078C6  EE00  F052         	lfsr	0,__pdataCOMRAM
  1150  0078CA  EE20 F004          	lfsr	2,4
  1151  0078CE                     copy_data2:
  1152  0078CE  0009               	tblrd		*+
  1153  0078D0  CFF5 FFEE          	movff	tablat,postinc0
  1154  0078D4  50DD               	movf	postdec2,w,c
  1155  0078D6  50D9               	movf	fsr2l,w,c
  1156  0078D8  E1FA               	bnz	copy_data2
  1157                           
  1158                           ; Clear objects allocated to BIGRAM (942 bytes)
  1159  0078DA  EE05  F028         	lfsr	0,__pbssBIGRAM
  1160  0078DE  EE23 F0AE          	lfsr	2,942
  1161  0078E2                     clear_0:
  1162  0078E2  6AEE               	clrf	postinc0,c
  1163  0078E4  50DD               	movf	postdec2,w,c
  1164  0078E6  50D9               	movf	fsr2l,w,c
  1165  0078E8  E1FC               	bnz	clear_0
  1166  0078EA  50DA               	movf	fsr2h,w,c
  1167  0078EC  E1FA               	bnz	clear_0
  1168                           
  1169                           ; Clear objects allocated to BANK5 (40 bytes)
  1170  0078EE  EE05  F000         	lfsr	0,__pbssBANK5
  1171  0078F2  0E28               	movlw	40
  1172  0078F4                     clear_1:
  1173  0078F4  6AEE               	clrf	postinc0,c
  1174  0078F6  06E8               	decf	wreg,f,c
  1175  0078F8  E1FD               	bnz	clear_1
  1176                           
  1177                           ; Clear objects allocated to BANK4 (244 bytes)
  1178  0078FA  EE04  F000         	lfsr	0,__pbssBANK4
  1179  0078FE  0EF4               	movlw	244
  1180  007900                     clear_2:
  1181  007900  6AEE               	clrf	postinc0,c
  1182  007902  06E8               	decf	wreg,f,c
  1183  007904  E1FD               	bnz	clear_2
  1184                           
  1185                           ; Clear objects allocated to BANK3 (208 bytes)
  1186  007906  EE03  F000         	lfsr	0,__pbssBANK3
  1187  00790A  0ED0               	movlw	208
  1188  00790C                     clear_3:
  1189  00790C  6AEE               	clrf	postinc0,c
  1190  00790E  06E8               	decf	wreg,f,c
  1191  007910  E1FD               	bnz	clear_3
  1192                           
  1193                           ; Clear objects allocated to BANK2 (250 bytes)
  1194  007912  EE02  F000         	lfsr	0,__pbssBANK2
  1195  007916  0EFA               	movlw	250
  1196  007918                     clear_4:
  1197  007918  6AEE               	clrf	postinc0,c
  1198  00791A  06E8               	decf	wreg,f,c
  1199  00791C  E1FD               	bnz	clear_4
  1200                           
  1201                           ; Clear objects allocated to BANK1 (116 bytes)
  1202  00791E  EE01  F000         	lfsr	0,__pbssBANK1
  1203  007922  0E74               	movlw	116
  1204  007924                     clear_5:
  1205  007924  6AEE               	clrf	postinc0,c
  1206  007926  06E8               	decf	wreg,f,c
  1207  007928  E1FD               	bnz	clear_5
  1208                           
  1209                           ; Clear objects allocated to COMRAM (20 bytes)
  1210  00792A  EE00  F032         	lfsr	0,__pbssCOMRAM
  1211  00792E  0E14               	movlw	20
  1212  007930                     clear_6:
  1213  007930  6AEE               	clrf	postinc0,c
  1214  007932  06E8               	decf	wreg,f,c
  1215  007934  E1FD               	bnz	clear_6
  1216  007936                     end_of_initialization:
  1217                           	opt callstack 0
  1218  007936                     __end_of__initialization:
  1219                           	opt callstack 0
  1220  007936  0100               	movlb	0
  1221  007938  EF49  F039         	goto	_main	;jump to C main() function
  1222                           
  1223                           	psect	bssCOMRAM
  1224  000032                     __pbssCOMRAM:
  1225                           	opt callstack 0
  1226  000032                     _ticksAccounted:
  1227                           	opt callstack 0
  1228  000032                     	ds	4
  1229  000036                     _ticksAdded:
  1230                           	opt callstack 0
  1231  000036                     	ds	4
  1232  00003A                     TMR_SwapTimer@oldVal:
  1233                           	opt callstack 0
  1234  00003A                     	ds	2
  1235  00003C                     TMR_GetDeltaTime@tmrVal:
  1236                           	opt callstack 0
  1237  00003C                     	ds	2
  1238  00003E                     _reloadVal:
  1239                           	opt callstack 0
  1240  00003E                     	ds	2
  1241  000040                     I2C@flag:
  1242                           	opt callstack 0
  1243  000040                     	ds	1
  1244  000041                     _flag:
  1245                           	opt callstack 0
  1246  000041                     	ds	1
  1247  000042                     __rcon:
  1248                           	opt callstack 0
  1249  000042                     	ds	1
  1250  000043                     __roundCounter:
  1251                           	opt callstack 0
  1252  000043                     	ds	1
  1253  000044                     _timerOverflow:
  1254                           	opt callstack 0
  1255  000044                     	ds	1
  1256  000045                     _dioStatus:
  1257                           	opt callstack 0
  1258  000045                     	ds	1
  1259                           
  1260                           	psect	dataCOMRAM
  1261  000052                     __pdataCOMRAM:
  1262                           	opt callstack 0
  1263  000052                     _ticksToScheduledInterrupt:
  1264                           	opt callstack 0
  1265  000052                     	ds	4
  1266                           
  1267                           	psect	bssBANK1
  1268  000100                     __pbssBANK1:
  1269                           	opt callstack 0
  1270  000100                     _timer:
  1271                           	opt callstack 0
  1272  000100                     	ds	6
  1273  000106                     _upCnt:
  1274                           	opt callstack 0
  1275  000106                     	ds	4
  1276  00010A                     _value:
  1277                           	opt callstack 0
  1278  00010A                     	ds	4
  1279  00010E                     _rxPayload:
  1280                           	opt callstack 0
  1281  00010E                     	ds	4
  1282  000112                     TMR_GetDeltaTime@retVal:
  1283                           	opt callstack 0
  1284  000112                     	ds	4
  1285  000116                     _errno:
  1286                           	opt callstack 0
  1287  000116                     	ds	2
  1288  000118                     _result:
  1289                           	opt callstack 0
  1290  000118                     	ds	2
  1291  00011A                     _sCounter:
  1292                           	opt callstack 0
  1293  00011A                     	ds	2
  1294  00011C                     _msCounter:
  1295                           	opt callstack 0
  1296  00011C                     	ds	2
  1297  00011E                     TMR_SwapTimer@retVal:
  1298                           	opt callstack 0
  1299  00011E                     	ds	2
  1300  000120                     _nACK:
  1301                           	opt callstack 0
  1302  000120                     	ds	1
  1303  000121                     _low:
  1304                           	opt callstack 0
  1305  000121                     	ds	1
  1306  000122                     _high:
  1307                           	opt callstack 0
  1308  000122                     	ds	1
  1309  000123                     _clip:
  1310                           	opt callstack 0
  1311  000123                     	ds	1
  1312  000124                     _firstSend:
  1313                           	opt callstack 0
  1314  000124                     	ds	1
  1315  000125                     _joined:
  1316                           	opt callstack 0
  1317  000125                     	ds	1
  1318  000126                     _eusart2RxLastError:
  1319                           	opt callstack 0
  1320  000126                     	ds	1
  1321  000127                     _localDioStatus:
  1322                           	opt callstack 0
  1323  000127                     	ds	1
  1324  000128                     _allocatedTimers:
  1325                           	opt callstack 0
  1326  000128                     	ds	1
  1327  000129                     _RadioConfiguration:
  1328                           	opt callstack 0
  1329  000129                     	ds	54
  1330  00015F                     _aesBuffer:
  1331                           	opt callstack 0
  1332  00015F                     	ds	16
  1333  00016F                     _stringValue:
  1334                           	opt callstack 0
  1335  00016F                     	ds	5
  1336                           
  1337                           	psect	dataBANK1
  1338  0001EF                     __pdataBANK1:
  1339                           	opt callstack 0
  1340  0001EF                     _randx:
  1341                           	opt callstack 0
  1342  0001EF                     	ds	4
  1343  0001F3                     _pulseSignal:
  1344                           	opt callstack 0
  1345  0001F3                     	ds	4
  1346  0001F7                     _address:
  1347                           	opt callstack 0
  1348  0001F7                     	ds	1
  1349  0001F8                     _sensorsStringLength:
  1350                           	opt callstack 0
  1351  0001F8                     	ds	1
  1352  0001F9                     _stringValueLength:
  1353                           	opt callstack 0
  1354  0001F9                     	ds	1
  1355  0001FA                     _stringLength:
  1356                           	opt callstack 0
  1357  0001FA                     	ds	1
  1358                           
  1359                           	psect	bssBANK2
  1360  000200                     __pbssBANK2:
  1361                           	opt callstack 0
  1362  000200                     _string:
  1363                           	opt callstack 0
  1364  000200                     	ds	5
  1365  000205                     _loRa:
  1366                           	opt callstack 0
  1367  000205                     	ds	245
  1368                           
  1369                           	psect	bssBANK3
  1370  000300                     __pbssBANK3:
  1371                           	opt callstack 0
  1372  000300                     _swTimers:
  1373                           	opt callstack 0
  1374  000300                     	ds	160
  1375  0003A0                     _sensorsString:
  1376                           	opt callstack 0
  1377  0003A0                     	ds	40
  1378  0003C8                     _appEui:
  1379                           	opt callstack 0
  1380  0003C8                     	ds	8
  1381                           
  1382                           	psect	dataBANK3
  1383  0003D0                     __pdataBANK3:
  1384                           	opt callstack 0
  1385  0003D0                     GenerateSubkey@F5972:
  1386                           	opt callstack 0
  1387  0003D0                     	ds	16
  1388  0003E0                     _appKey:
  1389                           	opt callstack 0
  1390  0003E0                     	ds	16
  1391  0003F0                     _deviceEui:
  1392                           	opt callstack 0
  1393  0003F0                     	ds	8
  1394                           
  1395                           	psect	bssBANK4
  1396  000400                     __pbssBANK4:
  1397                           	opt callstack 0
  1398  000400                     _sinSignal:
  1399                           	opt callstack 0
  1400  000400                     	ds	20
  1401  000414                     _Channels:
  1402                           	opt callstack 0
  1403  000414                     	ds	224
  1404                           
  1405                           	psect	bssBANK5
  1406  000500                     __pbssBANK5:
  1407                           	opt callstack 0
  1408  000500                     _clearString:
  1409                           	opt callstack 0
  1410  000500                     	ds	40
  1411                           
  1412                           	psect	bssBIGRAM
  1413  000528                     __pbssBIGRAM:
  1414                           	opt callstack 0
  1415  000528                     _capValues:
  1416                           	opt callstack 0
  1417  000528                     	ds	400
  1418  0006B8                     _macBuffer:
  1419                           	opt callstack 0
  1420  0006B8                     	ds	271
  1421  0007C7                     _radioBuffer:
  1422                           	opt callstack 0
  1423  0007C7                     	ds	271
  1424                           
  1425                           	psect	cstackBANK1
  1426  000174                     __pcstackBANK1:
  1427                           	opt callstack 0
  1428  000174                     AESCmac@k2:
  1429                           	opt callstack 0
  1430                           
  1431                           ; 16 bytes @ 0x0
  1432  000174                     	ds	16
  1433  000184                     AESCmac@k1:
  1434                           	opt callstack 0
  1435                           
  1436                           ; 16 bytes @ 0x10
  1437  000184                     	ds	16
  1438  000194                     AESCmac@mLast:
  1439                           	opt callstack 0
  1440                           
  1441                           ; 16 bytes @ 0x20
  1442  000194                     	ds	16
  1443  0001A4                     AESCmac@padded:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 16 bytes @ 0x30
  1447  0001A4                     	ds	16
  1448  0001B4                     AESCmac@y:
  1449                           	opt callstack 0
  1450                           
  1451                           ; 16 bytes @ 0x40
  1452  0001B4                     	ds	16
  1453  0001C4                     AESCmac@x:
  1454                           	opt callstack 0
  1455                           
  1456                           ; 16 bytes @ 0x50
  1457  0001C4                     	ds	16
  1458  0001D4                     AESCmac@ptr:
  1459                           	opt callstack 0
  1460                           
  1461                           ; 2 bytes @ 0x60
  1462  0001D4                     	ds	2
  1463  0001D6                     AESCmac@flag:
  1464                           	opt callstack 0
  1465                           
  1466                           ; 1 bytes @ 0x62
  1467  0001D6                     	ds	1
  1468  0001D7                     AESCmac@n:
  1469                           	opt callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x63
  1472  0001D7                     	ds	1
  1473  0001D8                     AESCmac@j:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 1 bytes @ 0x64
  1477  0001D8                     	ds	1
  1478  0001D9                     AESCmac@i:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x65
  1482  0001D9                     	ds	1
  1483  0001DA                     LORAWAN_RxDone@buffer:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x66
  1487  0001DA                     	ds	2
  1488  0001DC                     LORAWAN_RxDone@bufferLength:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 1 bytes @ 0x68
  1492  0001DC                     	ds	1
  1493                           
  1494                           	psect	cstackBANK0
  1495  000060                     __pcstackBANK0:
  1496                           	opt callstack 0
  1497  000060                     ??_UpdateMinMaxChDataRate:
  1498  000060                     ??_FindSmallestDataRate:
  1499  000060                     ??_CountfOptsLength:
  1500  000060                     ??_i2c_sdaWrite:
  1501  000060                     ?_TMR1_ReadTimer:
  1502                           	opt callstack 0
  1503  000060                     ?_ExecuteDutyCycle:
  1504                           	opt callstack 0
  1505  000060                     ?_ExecuteDevStatus:
  1506                           	opt callstack 0
  1507  000060                     ?_ExecuteLinkCheck:
  1508                           	opt callstack 0
  1509  000060                     ?_ADC_GetConversion:
  1510                           	opt callstack 0
  1511  000060                     ?___wmul:
  1512                           	opt callstack 0
  1513  000060                     ?___awdiv:
  1514                           	opt callstack 0
  1515  000060                     ?___lwdiv:
  1516                           	opt callstack 0
  1517  000060                     ?___ltdiv:
  1518                           	opt callstack 0
  1519  000060                     ?_GetRx1Freq:
  1520                           	opt callstack 0
  1521  000060                     ?_LORAWAN_GetUplinkCounter:
  1522                           	opt callstack 0
  1523  000060                     ?_LORAWAN_GetStatus:
  1524                           	opt callstack 0
  1525  000060                     ?___lldiv:
  1526                           	opt callstack 0
  1527  000060                     ?___fltol:
  1528                           	opt callstack 0
  1529  000060                     ?___llmod:
  1530                           	opt callstack 0
  1531  000060                     ?___xxtofl:
  1532                           	opt callstack 0
  1533  000060                     INTERRUPT_GetDioStatus@a:
  1534                           	opt callstack 0
  1535  000060                     HALResetPinOutputValue@value:
  1536                           	opt callstack 0
  1537  000060                     SwTimerCreate@retVal:
  1538                           	opt callstack 0
  1539  000060                     SwTimerIsRunning@timerId:
  1540                           	opt callstack 0
  1541  000060                     SwTimerStop@timerId:
  1542                           	opt callstack 0
  1543  000060                     SwClearAllTimers@i:
  1544                           	opt callstack 0
  1545  000060                     RADIO_SetLoRaSyncWord@syncWord:
  1546                           	opt callstack 0
  1547  000060                     RADIO_SetSpreadingFactor@spreadingFactor:
  1548                           	opt callstack 0
  1549  000060                     RADIO_SetOutputPower@power:
  1550                           	opt callstack 0
  1551  000060                     RADIO_SetCRC@crc:
  1552                           	opt callstack 0
  1553  000060                     RADIO_SetIQInverted@iqInverted:
  1554                           	opt callstack 0
  1555  000060                     RADIO_SetBandwidth@bandwidth:
  1556                           	opt callstack 0
  1557  000060                     RADIO_SetModulation@modulation:
  1558                           	opt callstack 0
  1559  000060                     ValidateDataRate@dataRate:
  1560                           	opt callstack 0
  1561  000060                     ValidateTxPower@result:
  1562                           	opt callstack 0
  1563  000060                     UpdateDLSettings@dlRx1DrOffset:
  1564                           	opt callstack 0
  1565  000060                     UpdateDataRange@dataRangeNew:
  1566                           	opt callstack 0
  1567  000060                     UpdateChannelIdStatus@statusNew:
  1568                           	opt callstack 0
  1569  000060                     ValidateRxOffset@rxOffset:
  1570                           	opt callstack 0
  1571  000060                     ValidateChannelId@allowedForDefaultChannels:
  1572                           	opt callstack 0
  1573  000060                     ValidateChannelMaskCntl@result:
  1574                           	opt callstack 0
  1575  000060                     UpdateCurrentDataRate@valueNew:
  1576                           	opt callstack 0
  1577  000060                     UpdateTxPower@txPowerNew:
  1578                           	opt callstack 0
  1579  000060                     UpdateJoinInProgress@state:
  1580                           	opt callstack 0
  1581  000060                     SPI2_Exchange8bit@data:
  1582                           	opt callstack 0
  1583  000060                     RxJoinResponse@status:
  1584                           	opt callstack 0
  1585  000060                     GPIOAnalogMode@mode:
  1586                           	opt callstack 0
  1587  000060                     GPIOSet@mode:
  1588                           	opt callstack 0
  1589  000060                     GPIODigitalWrite@digOut:
  1590                           	opt callstack 0
  1591  000060                     GPIODigitalRead@GPIO:
  1592                           	opt callstack 0
  1593  000060                     GPIODigitalToogle@GPIO:
  1594                           	opt callstack 0
  1595  000060                     ___abdiv@divisor:
  1596                           	opt callstack 0
  1597  000060                     FillSubKey@source:
  1598                           	opt callstack 0
  1599  000060                     SwTimerSetCallback@callback:
  1600                           	opt callstack 0
  1601  000060                     EncKeySchedule@key:
  1602                           	opt callstack 0
  1603  000060                     EncodeShiftRow@stateTable:
  1604                           	opt callstack 0
  1605  000060                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1606                           	opt callstack 0
  1607  000060                     ExecuteDutyCycle@ptr:
  1608                           	opt callstack 0
  1609  000060                     ExecuteDevStatus@ptr:
  1610                           	opt callstack 0
  1611  000060                     UpdateDutyCycle@dutyCycleNew:
  1612                           	opt callstack 0
  1613  000060                     ValidateChannelMask@channelMask:
  1614                           	opt callstack 0
  1615  000060                     ExecuteLinkCheck@ptr:
  1616                           	opt callstack 0
  1617  000060                     IncludeMacCommandsResponse@macBuffer:
  1618                           	opt callstack 0
  1619  000060                     CheckFlags@hdr:
  1620                           	opt callstack 0
  1621  000060                     CheckMcastFlags@hdr:
  1622                           	opt callstack 0
  1623  000060                     INT1_SetInterruptHandler@InterruptHandler:
  1624                           	opt callstack 0
  1625  000060                     INT2_SetInterruptHandler@InterruptHandler:
  1626                           	opt callstack 0
  1627  000060                     IOCB4_SetInterruptHandler@InterruptHandler:
  1628                           	opt callstack 0
  1629  000060                     TMR1_WriteTimer@timerVal:
  1630                           	opt callstack 0
  1631  000060                     TMR1_SetInterruptHandler@InterruptHandler:
  1632                           	opt callstack 0
  1633  000060                     EUSART2_SetFramingErrorHandler@interruptHandler:
  1634                           	opt callstack 0
  1635  000060                     EUSART2_SetOverrunErrorHandler@interruptHandler:
  1636                           	opt callstack 0
  1637  000060                     EUSART2_SetErrorHandler@interruptHandler:
  1638                           	opt callstack 0
  1639  000060                     RxData@pData:
  1640                           	opt callstack 0
  1641  000060                     TMR3_SetInterruptHandler@InterruptHandler:
  1642                           	opt callstack 0
  1643  000060                     TMR5_SetInterruptHandler@InterruptHandler:
  1644                           	opt callstack 0
  1645  000060                     rn2483_delaysec@length:
  1646                           	opt callstack 0
  1647  000060                     adaptString@string:
  1648                           	opt callstack 0
  1649  000060                     pointAddition@element:
  1650                           	opt callstack 0
  1651  000060                     i2c_usdelay@time:
  1652                           	opt callstack 0
  1653  000060                     ___wmul@multiplier:
  1654                           	opt callstack 0
  1655  000060                     ___awdiv@dividend:
  1656                           	opt callstack 0
  1657  000060                     ___lwdiv@dividend:
  1658                           	opt callstack 0
  1659  000060                     memcpy@d1:
  1660                           	opt callstack 0
  1661  000060                     memset@p1:
  1662                           	opt callstack 0
  1663  000060                     strncat@to:
  1664                           	opt callstack 0
  1665  000060                     ___ltdiv@dividend:
  1666                           	opt callstack 0
  1667  000060                     SystemBlockingWaitMs@ms:
  1668                           	opt callstack 0
  1669  000060                     RADIO_SetChannelFrequency@frequency:
  1670                           	opt callstack 0
  1671  000060                     ValidateFrequency@frequencyNew:
  1672                           	opt callstack 0
  1673  000060                     UpdateFrequency@frequencyNew:
  1674                           	opt callstack 0
  1675  000060                     LORAWAN_SetUplinkCounter@ctr:
  1676                           	opt callstack 0
  1677  000060                     UpdateReceiveWindow2Parameters@frequency:
  1678                           	opt callstack 0
  1679  000060                     ___lldiv@dividend:
  1680                           	opt callstack 0
  1681  000060                     ___fleq@ff1:
  1682                           	opt callstack 0
  1683  000060                     ___fltol@f1:
  1684                           	opt callstack 0
  1685  000060                     ___llmod@dividend:
  1686                           	opt callstack 0
  1687  000060                     ___xxtofl@val:
  1688                           	opt callstack 0
  1689                           
  1690                           ; 4 bytes @ 0x0
  1691  000060                     	ds	1
  1692  000061                     ??_UpdateDataRange:
  1693  000061                     ??_UpdateChannelIdStatus:
  1694  000061                     ??___abdiv:
  1695  000061                     HALSPISend@data:
  1696                           	opt callstack 0
  1697  000061                     SwTimerIsRunning@isRunning:
  1698                           	opt callstack 0
  1699  000061                     ValidateDataRate@result:
  1700                           	opt callstack 0
  1701  000061                     ValidateTxPower@txPowerNew:
  1702                           	opt callstack 0
  1703  000061                     UpdateDLSettings@dlRx2Dr:
  1704                           	opt callstack 0
  1705  000061                     ValidateRxOffset@result:
  1706                           	opt callstack 0
  1707  000061                     ValidateChannelId@result:
  1708                           	opt callstack 0
  1709  000061                     ValidateChannelMaskCntl@channelMaskCntl:
  1710                           	opt callstack 0
  1711  000061                     UpdateMinMaxChDataRate@i:
  1712                           	opt callstack 0
  1713  000061                     FindSmallestDataRate@found:
  1714                           	opt callstack 0
  1715  000061                     GPIOAnalogMode@GPIO:
  1716                           	opt callstack 0
  1717  000061                     GPIOSet@GPIO:
  1718                           	opt callstack 0
  1719  000061                     GPIODigitalWrite@GPIO:
  1720                           	opt callstack 0
  1721                           
  1722                           ; 1 bytes @ 0x1
  1723  000061                     	ds	1
  1724  000062                     ??_TMR1_ReadTimer:
  1725  000062                     ??_EncKeySchedule:
  1726  000062                     ??_ValidateChannelMask:
  1727  000062                     ??_ExecuteDutyCycle:
  1728  000062                     ??_pointAddition:
  1729  000062                     ??_ADC_GetConversion:
  1730  000062                     ??_rn2483_delaysec:
  1731  000062                     SwTimerSetCallback@callbackParameter:
  1732                           	opt callstack 0
  1733  000062                     EncodeShiftRow@temp:
  1734                           	opt callstack 0
  1735  000062                     RADIO_RegisterWrite@value:
  1736                           	opt callstack 0
  1737  000062                     RADIO_RegisterRead@reg:
  1738                           	opt callstack 0
  1739  000062                     UpdateDataRange@channelId:
  1740                           	opt callstack 0
  1741  000062                     UpdateChannelIdStatus@channelId:
  1742                           	opt callstack 0
  1743  000062                     ValidateDataRange@result:
  1744                           	opt callstack 0
  1745  000062                     ValidateChannelId@channelId:
  1746                           	opt callstack 0
  1747  000062                     UpdateDutyCycle@channelId:
  1748                           	opt callstack 0
  1749  000062                     FindSmallestDataRate@i:
  1750                           	opt callstack 0
  1751  000062                     RxData@dataLength:
  1752                           	opt callstack 0
  1753  000062                     adaptString@length:
  1754                           	opt callstack 0
  1755  000062                     i2c_sdaWrite@data:
  1756                           	opt callstack 0
  1757  000062                     FillSubKey@key:
  1758                           	opt callstack 0
  1759  000062                     IncludeMacCommandsResponse@pBufferIndex:
  1760                           	opt callstack 0
  1761  000062                     i2c_usdelay@i:
  1762                           	opt callstack 0
  1763  000062                     ___wmul@multiplicand:
  1764                           	opt callstack 0
  1765  000062                     ___awdiv@divisor:
  1766                           	opt callstack 0
  1767  000062                     ___lwdiv@divisor:
  1768                           	opt callstack 0
  1769  000062                     memcpy@s1:
  1770                           	opt callstack 0
  1771  000062                     memset@c:
  1772                           	opt callstack 0
  1773  000062                     strncat@from:
  1774                           	opt callstack 0
  1775                           
  1776                           ; 2 bytes @ 0x2
  1777  000062                     	ds	1
  1778  000063                     ??_adaptString:
  1779  000063                     SwTimerSetCallback@timerId:
  1780                           	opt callstack 0
  1781  000063                     RADIO_RegisterWrite@reg:
  1782                           	opt callstack 0
  1783  000063                     RADIO_RegisterRead@readValue:
  1784                           	opt callstack 0
  1785  000063                     UpdateDataRange@i:
  1786                           	opt callstack 0
  1787  000063                     UpdateChannelIdStatus@i:
  1788                           	opt callstack 0
  1789  000063                     ValidateDataRange@dataRangeNew:
  1790                           	opt callstack 0
  1791  000063                     FindSmallestDataRate@dataRate:
  1792                           	opt callstack 0
  1793  000063                     RxData@status:
  1794                           	opt callstack 0
  1795  000063                     i2c_sdaWrite@i:
  1796                           	opt callstack 0
  1797  000063                     ___abdiv@counter:
  1798                           	opt callstack 0
  1799  000063                     rn2483_delaysec@counter:
  1800                           	opt callstack 0
  1801  000063                     ___ltdiv@divisor:
  1802                           	opt callstack 0
  1803                           
  1804                           ; 3 bytes @ 0x3
  1805  000063                     	ds	1
  1806  000064                     ??_SystemBlockingWaitMs:
  1807  000064                     ??___fltol:
  1808  000064                     ??___xxtofl:
  1809  000064                     FillSubKey@size:
  1810                           	opt callstack 0
  1811  000064                     RADIO_WritePower@ocp:
  1812                           	opt callstack 0
  1813  000064                     RADIO_UnhandledInterrupt@modulation:
  1814                           	opt callstack 0
  1815  000064                     LORAWAN_SetChannelIdStatus@statusNew:
  1816                           	opt callstack 0
  1817  000064                     ValidateFrequency@result:
  1818                           	opt callstack 0
  1819  000064                     ValidateDataRange@dataRateMax:
  1820                           	opt callstack 0
  1821  000064                     UpdateFrequency@channelId:
  1822                           	opt callstack 0
  1823  000064                     ValidateChannelMask@i:
  1824                           	opt callstack 0
  1825  000064                     UpdateReceiveWindow2Parameters@dataRate:
  1826                           	opt callstack 0
  1827  000064                     IncludeMacCommandsResponse@bIncludeInFopts:
  1828                           	opt callstack 0
  1829  000064                     pointAddition@d:
  1830                           	opt callstack 0
  1831  000064                     ___abdiv@sign:
  1832                           	opt callstack 0
  1833  000064                     ___awdiv@counter:
  1834                           	opt callstack 0
  1835  000064                     EnableChannels1@channelMask:
  1836                           	opt callstack 0
  1837  000064                     TMR1_ReadTimer@readVal:
  1838                           	opt callstack 0
  1839  000064                     i2c_sendData@data:
  1840                           	opt callstack 0
  1841  000064                     ___wmul@product:
  1842                           	opt callstack 0
  1843  000064                     ___lwdiv@quotient:
  1844                           	opt callstack 0
  1845  000064                     memcpy@n:
  1846                           	opt callstack 0
  1847  000064                     memset@n:
  1848                           	opt callstack 0
  1849  000064                     strncat@size:
  1850                           	opt callstack 0
  1851  000064                     LORAWAN_GetStatus@status:
  1852                           	opt callstack 0
  1853  000064                     ___lldiv@divisor:
  1854                           	opt callstack 0
  1855  000064                     ___fleq@ff2:
  1856                           	opt callstack 0
  1857  000064                     ___llmod@divisor:
  1858                           	opt callstack 0
  1859                           
  1860                           ; 4 bytes @ 0x4
  1861  000064                     	ds	1
  1862  000065                     ??_FillSubKey:
  1863  000065                     ??_IncludeMacCommandsResponse:
  1864  000065                     ??_RADIO_DIO3:
  1865  000065                     ??_RADIO_DIO4:
  1866  000065                     ??_RADIO_DIO5:
  1867  000065                     RADIO_WriteMode@newModulation:
  1868                           	opt callstack 0
  1869  000065                     RADIO_WritePower@paDac:
  1870                           	opt callstack 0
  1871  000065                     ExecuteDutyCycle@maxDCycle:
  1872                           	opt callstack 0
  1873  000065                     ValidateDataRange@dataRateMin:
  1874                           	opt callstack 0
  1875  000065                     adaptString@flag:
  1876                           	opt callstack 0
  1877  000065                     ___abdiv@quotient:
  1878                           	opt callstack 0
  1879  000065                     ___awdiv@sign:
  1880                           	opt callstack 0
  1881  000065                     _EncKeySchedule$521:
  1882                           	opt callstack 0
  1883  000065                     ADC_GetConversion@result:
  1884                           	opt callstack 0
  1885                           
  1886                           ; 2 bytes @ 0x5
  1887  000065                     	ds	1
  1888  000066                     ??_sinGenStart:
  1889  000066                     FillSubKey@carry:
  1890                           	opt callstack 0
  1891  000066                     RADIO_WriteMode@blocking:
  1892                           	opt callstack 0
  1893  000066                     RADIO_WritePower@power:
  1894                           	opt callstack 0
  1895  000066                     LORAWAN_SetChannelIdStatus@channelId:
  1896                           	opt callstack 0
  1897  000066                     EnableChannels1@channelMaskCntl:
  1898                           	opt callstack 0
  1899  000066                     UpdateReceiveDelays@delay:
  1900                           	opt callstack 0
  1901  000066                     CountfOptsLength@macCommandLength:
  1902                           	opt callstack 0
  1903  000066                     TMR1_ReadTimer@readValHigh:
  1904                           	opt callstack 0
  1905  000066                     adaptString@deleteElem:
  1906                           	opt callstack 0
  1907  000066                     ___abdiv@dividend:
  1908                           	opt callstack 0
  1909  000066                     ___lwdiv@counter:
  1910                           	opt callstack 0
  1911  000066                     memcpy@tmp:
  1912                           	opt callstack 0
  1913  000066                     ___awdiv@quotient:
  1914                           	opt callstack 0
  1915  000066                     memset@p:
  1916                           	opt callstack 0
  1917  000066                     strncat@cp:
  1918                           	opt callstack 0
  1919  000066                     ___ltdiv@quotient:
  1920                           	opt callstack 0
  1921                           
  1922                           ; 3 bytes @ 0x6
  1923  000066                     	ds	1
  1924  000067                     ?_ExecuteRxTimingSetup:
  1925                           	opt callstack 0
  1926  000067                     FillSubKey@i:
  1927                           	opt callstack 0
  1928  000067                     RADIO_WriteMode@currentModulation:
  1929                           	opt callstack 0
  1930  000067                     EnableChannels1@channelIndexMin:
  1931                           	opt callstack 0
  1932  000067                     CountfOptsLength@i:
  1933                           	opt callstack 0
  1934  000067                     TMR1_ReadTimer@readValLow:
  1935                           	opt callstack 0
  1936  000067                     ADC_GetConversion@channel:
  1937                           	opt callstack 0
  1938  000067                     adaptString@i:
  1939                           	opt callstack 0
  1940  000067                     AESEncode@block:
  1941                           	opt callstack 0
  1942  000067                     ExecuteRxTimingSetup@ptr:
  1943                           	opt callstack 0
  1944  000067                     memcpy@d:
  1945                           	opt callstack 0
  1946                           
  1947                           ; 2 bytes @ 0x7
  1948  000067                     	ds	1
  1949  000068                     ??_LORAWAN_GetMaxPayloadSize:
  1950  000068                     ??___fleq:
  1951  000068                     ?_TMR_SwapTimer:
  1952                           	opt callstack 0
  1953  000068                     ?_GPIOAnalogRead:
  1954                           	opt callstack 0
  1955  000068                     ?_TMR_GetDeltaTime:
  1956                           	opt callstack 0
  1957  000068                     RADIO_WriteMode@dioMapping:
  1958                           	opt callstack 0
  1959  000068                     EnableChannels1@channelIndexMax:
  1960                           	opt callstack 0
  1961  000068                     ___fltol@sign1:
  1962                           	opt callstack 0
  1963  000068                     ___llmod@counter:
  1964                           	opt callstack 0
  1965  000068                     ___xxtofl@sign:
  1966                           	opt callstack 0
  1967  000068                     TMR_SwapTimer@timerVal:
  1968                           	opt callstack 0
  1969  000068                     sinGenStart@i_5307:
  1970                           	opt callstack 0
  1971  000068                     isJoined@value:
  1972                           	opt callstack 0
  1973  000068                     ___lldiv@quotient:
  1974                           	opt callstack 0
  1975                           
  1976                           ; 4 bytes @ 0x8
  1977  000068                     	ds	1
  1978  000069                     ??_EnableChannels1:
  1979  000069                     RADIO_WriteMode@currentMode:
  1980                           	opt callstack 0
  1981  000069                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1982                           	opt callstack 0
  1983  000069                     ExecuteRxTimingSetup@delay:
  1984                           	opt callstack 0
  1985  000069                     ___fltol@exp1:
  1986                           	opt callstack 0
  1987  000069                     ___ltdiv@counter:
  1988                           	opt callstack 0
  1989  000069                     ___xxtofl@exp:
  1990                           	opt callstack 0
  1991  000069                     AESEncode@key:
  1992                           	opt callstack 0
  1993  000069                     memcpy@s:
  1994                           	opt callstack 0
  1995                           
  1996                           ; 2 bytes @ 0x9
  1997  000069                     	ds	1
  1998  00006A                     ?_averageMeasure:
  1999                           	opt callstack 0
  2000  00006A                     RADIO_WriteMode@newMode:
  2001                           	opt callstack 0
  2002  00006A                     LORAWAN_GetMaxPayloadSize@result:
  2003                           	opt callstack 0
  2004  00006A                     GPIOAnalogRead@result:
  2005                           	opt callstack 0
  2006  00006A                     sinGenStart@d:
  2007                           	opt callstack 0
  2008  00006A                     TMR_OverrideRemaining@ticksRemaining:
  2009                           	opt callstack 0
  2010  00006A                     ___xxtofl@arg:
  2011                           	opt callstack 0
  2012                           
  2013                           ; 4 bytes @ 0xA
  2014  00006A                     	ds	1
  2015  00006B                     ??_AESEncode:
  2016  00006B                     ?_ExtractMic:
  2017                           	opt callstack 0
  2018  00006B                     RADIO_WriteMode@opMode:
  2019                           	opt callstack 0
  2020  00006B                     InitDefault868Channels@i:
  2021                           	opt callstack 0
  2022  00006B                     InitDefault433Channels@i:
  2023                           	opt callstack 0
  2024  00006B                     EnableChannels1@i:
  2025                           	opt callstack 0
  2026  00006B                     RADIO_SetFSKSyncWord@syncWord:
  2027                           	opt callstack 0
  2028  00006B                     LORAWAN_SetDeviceEui@deviceEuiNew:
  2029                           	opt callstack 0
  2030  00006B                     LORAWAN_SetApplicationEui@applicationEuiNew:
  2031                           	opt callstack 0
  2032  00006B                     LORAWAN_SetApplicationKey@applicationKeyNew:
  2033                           	opt callstack 0
  2034  00006B                     PrepareSessionKeys@sessionKey:
  2035                           	opt callstack 0
  2036  00006B                     ExtractMic@buffer:
  2037                           	opt callstack 0
  2038  00006B                     AssembleEncryptionBlock@frameCounter:
  2039                           	opt callstack 0
  2040                           
  2041                           ; 4 bytes @ 0xB
  2042  00006B                     	ds	1
  2043  00006C                     ??_averageMeasure:
  2044  00006C                     ??_TMR_GetDeltaTime:
  2045  00006C                     ?_RADIO_ReadRandom:
  2046                           	opt callstack 0
  2047  00006C                     ?_frexp:
  2048                           	opt callstack 0
  2049  00006C                     IncludeMacCommandsResponse@i:
  2050                           	opt callstack 0
  2051  00006C                     GPIOAnalogRead@GPIO:
  2052                           	opt callstack 0
  2053  00006C                     isJoined@joined:
  2054                           	opt callstack 0
  2055  00006C                     sinGenStart@i:
  2056                           	opt callstack 0
  2057  00006C                     ___lldiv@counter:
  2058                           	opt callstack 0
  2059  00006C                     EnableChannels@channelMask:
  2060                           	opt callstack 0
  2061  00006C                     frexp@value:
  2062                           	opt callstack 0
  2063                           
  2064                           ; 4 bytes @ 0xC
  2065  00006C                     	ds	1
  2066  00006D                     ?_GPIOAverageRead:
  2067                           	opt callstack 0
  2068  00006D                     RADIO_SetFSKSyncWord@syncWordLen:
  2069                           	opt callstack 0
  2070  00006D                     IncludeMacCommandsResponse@bufferIndex:
  2071                           	opt callstack 0
  2072  00006D                     ExtractMic@bufferLength:
  2073                           	opt callstack 0
  2074  00006D                     sinGenStart@t:
  2075                           	opt callstack 0
  2076  00006D                     PrepareSessionKeys@appNonce:
  2077                           	opt callstack 0
  2078  00006D                     SwTimerSetTimeout@timeout:
  2079                           	opt callstack 0
  2080  00006D                     RADIO_WriteFrequency@frequency:
  2081                           	opt callstack 0
  2082  00006D                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  2083                           	opt callstack 0
  2084  00006D                     RADIO_WriteFSKBitRate@bitRate:
  2085                           	opt callstack 0
  2086                           
  2087                           ; 4 bytes @ 0xD
  2088  00006D                     	ds	1
  2089  00006E                     ??_TMR_OverrideRemaining:
  2090  00006E                     ??_RADIO_ReadRandom:
  2091  00006E                     EnableChannels@channelMaskCntl:
  2092                           	opt callstack 0
  2093  00006E                     ConfigureRadio@freq:
  2094                           	opt callstack 0
  2095                           
  2096                           ; 4 bytes @ 0xE
  2097  00006E                     	ds	1
  2098  00006F                     ??_ExtractMic:
  2099  00006F                     ??_GPIOAverageRead:
  2100  00006F                     ?_ExecuteLinkAdr:
  2101                           	opt callstack 0
  2102  00006F                     AssembleEncryptionBlock@blockId:
  2103                           	opt callstack 0
  2104  00006F                     RADIO_ReadRandom@retVal:
  2105                           	opt callstack 0
  2106  00006F                     ExecuteLinkAdr@ptr:
  2107                           	opt callstack 0
  2108  00006F                     PrepareSessionKeys@networkId:
  2109                           	opt callstack 0
  2110                           
  2111                           ; 2 bytes @ 0xF
  2112  00006F                     	ds	1
  2113  000070                     AssembleEncryptionBlock@firstByte:
  2114                           	opt callstack 0
  2115  000070                     TMR_OverrideRemaining@tmrVal:
  2116                           	opt callstack 0
  2117  000070                     frexp@eptr:
  2118                           	opt callstack 0
  2119                           
  2120                           ; 2 bytes @ 0x10
  2121  000070                     	ds	1
  2122  000071                     ??_ExecuteLinkAdr:
  2123  000071                     ??_SwTimerSetTimeout:
  2124  000071                     RADIO_ReadRandom@i:
  2125                           	opt callstack 0
  2126  000071                     PrepareSessionKeys@index:
  2127                           	opt callstack 0
  2128  000071                     AssembleEncryptionBlock@multicastStatus:
  2129                           	opt callstack 0
  2130  000071                     averageMeasure@value:
  2131                           	opt callstack 0
  2132  000071                     RADIO_WriteFrequency@num_mod:
  2133                           	opt callstack 0
  2134  000071                     RADIO_WriteFSKFrequencyDeviation@num:
  2135                           	opt callstack 0
  2136  000071                     RADIO_WriteFSKBitRate@num:
  2137                           	opt callstack 0
  2138  000071                     ExtractMic@mic:
  2139                           	opt callstack 0
  2140                           
  2141                           ; 4 bytes @ 0x11
  2142  000071                     	ds	1
  2143  000072                     ??_frexp:
  2144  000072                     ConfigureRadio@dataRate:
  2145                           	opt callstack 0
  2146  000072                     AssembleEncryptionBlock@dir:
  2147                           	opt callstack 0
  2148  000072                     GPIOAverageRead@GPIO:
  2149                           	opt callstack 0
  2150  000072                     TMR_OverrideRemaining@oldReloadVal:
  2151                           	opt callstack 0
  2152  000072                     ExecuteLinkAdr@channelMask:
  2153                           	opt callstack 0
  2154  000072                     srand@x:
  2155                           	opt callstack 0
  2156                           
  2157                           ; 2 bytes @ 0x12
  2158  000072                     	ds	1
  2159  000073                     AssembleEncryptionBlock@bufferIndex:
  2160                           	opt callstack 0
  2161  000073                     _AESEncode$516:
  2162                           	opt callstack 0
  2163  000073                     GPIOAverageRead@i:
  2164                           	opt callstack 0
  2165  000073                     ConfigureRadioTx@freq:
  2166                           	opt callstack 0
  2167  000073                     ConfigureRadioRx@freq:
  2168                           	opt callstack 0
  2169                           
  2170                           ; 4 bytes @ 0x13
  2171  000073                     	ds	1
  2172  000074                     ?___fladd:
  2173                           	opt callstack 0
  2174  000074                     ExecuteLinkAdr@txPower:
  2175                           	opt callstack 0
  2176  000074                     averageMeasure@i:
  2177                           	opt callstack 0
  2178  000074                     ___fladd@b:
  2179                           	opt callstack 0
  2180                           
  2181                           ; 4 bytes @ 0x14
  2182  000074                     	ds	1
  2183  000075                     SwTimerSetTimeout@timerId:
  2184                           	opt callstack 0
  2185  000075                     _AESEncode$517:
  2186                           	opt callstack 0
  2187  000075                     ExecuteLinkAdr@redundancy:
  2188                           	opt callstack 0
  2189  000075                     GPIOAverageRead@finalValue:
  2190                           	opt callstack 0
  2191  000075                     RADIO_WriteFrequency@num:
  2192                           	opt callstack 0
  2193                           
  2194                           ; 4 bytes @ 0x15
  2195  000075                     	ds	2
  2196  000077                     ExecuteLinkAdr@dataRate:
  2197                           	opt callstack 0
  2198  000077                     ConfigureRadioTx@dataRate:
  2199                           	opt callstack 0
  2200  000077                     ConfigureRadioRx@dataRate:
  2201                           	opt callstack 0
  2202  000077                     _AESEncode$518:
  2203                           	opt callstack 0
  2204                           
  2205                           ; 2 bytes @ 0x17
  2206  000077                     	ds	1
  2207  000078                     ?_SwTimersInterrupt:
  2208                           	opt callstack 0
  2209  000078                     ConfigureRadioTx@txPower:
  2210                           	opt callstack 0
  2211  000078                     ___fladd@a:
  2212                           	opt callstack 0
  2213                           
  2214                           ; 4 bytes @ 0x18
  2215  000078                     	ds	1
  2216  000079                     AESEncode@aux:
  2217                           	opt callstack 0
  2218  000079                     RADIO_Init@radioBuffer:
  2219                           	opt callstack 0
  2220                           
  2221                           ; 2 bytes @ 0x19
  2222  000079                     	ds	1
  2223  00007A                     ??_RADIO_DIO2:
  2224  00007A                     AESEncode@aux2:
  2225                           	opt callstack 0
  2226                           
  2227                           ; 1 bytes @ 0x1A
  2228  00007A                     	ds	1
  2229  00007B                     AESEncode@aux1:
  2230                           	opt callstack 0
  2231  00007B                     RADIO_Init@frequency:
  2232                           	opt callstack 0
  2233                           
  2234                           ; 4 bytes @ 0x1B
  2235  00007B                     	ds	1
  2236  00007C                     ??___fladd:
  2237  00007C                     AESEncode@aux3:
  2238                           	opt callstack 0
  2239  00007C                     RADIO_DIO2@dioMapping:
  2240                           	opt callstack 0
  2241                           
  2242                           ; 1 bytes @ 0x1C
  2243  00007C                     	ds	1
  2244  00007D                     AESEncode@i:
  2245                           	opt callstack 0
  2246                           
  2247                           ; 1 bytes @ 0x1D
  2248  00007D                     	ds	1
  2249  00007E                     AESEncodeLoRa@block:
  2250                           	opt callstack 0
  2251                           
  2252                           ; 2 bytes @ 0x1E
  2253  00007E                     	ds	1
  2254  00007F                     ??_RADIO_Init:
  2255                           
  2256                           ; 1 bytes @ 0x1F
  2257  00007F                     	ds	1
  2258  000080                     ___fladd@signs:
  2259                           	opt callstack 0
  2260  000080                     AESEncodeLoRa@key:
  2261                           	opt callstack 0
  2262  000080                     SwTimersInterrupt@timeElapsed:
  2263                           	opt callstack 0
  2264                           
  2265                           ; 4 bytes @ 0x20
  2266  000080                     	ds	1
  2267  000081                     ___fladd@aexp:
  2268                           	opt callstack 0
  2269                           
  2270                           ; 1 bytes @ 0x21
  2271  000081                     	ds	1
  2272  000082                     ___fladd@bexp:
  2273                           	opt callstack 0
  2274  000082                     AESEncodeLoRa@useKey:
  2275                           	opt callstack 0
  2276                           
  2277                           ; 16 bytes @ 0x22
  2278  000082                     	ds	1
  2279  000083                     ___fladd@grs:
  2280                           	opt callstack 0
  2281                           
  2282                           ; 1 bytes @ 0x23
  2283  000083                     	ds	1
  2284  000084                     ?___flmul:
  2285                           	opt callstack 0
  2286  000084                     ?___flsub:
  2287                           	opt callstack 0
  2288  000084                     SwTimersInterrupt@ticksToNextTimerEvent:
  2289                           	opt callstack 0
  2290  000084                     ___flsub@b:
  2291                           	opt callstack 0
  2292  000084                     ___flmul@b:
  2293                           	opt callstack 0
  2294                           
  2295                           ; 4 bytes @ 0x24
  2296  000084                     	ds	4
  2297  000088                     SwTimersInterrupt@i:
  2298                           	opt callstack 0
  2299  000088                     ___flsub@a:
  2300                           	opt callstack 0
  2301  000088                     ___flmul@a:
  2302                           	opt callstack 0
  2303                           
  2304                           ; 4 bytes @ 0x28
  2305  000088                     	ds	1
  2306  000089                     ?_SwTimerReadValue:
  2307                           	opt callstack 0
  2308                           
  2309                           ; 4 bytes @ 0x29
  2310  000089                     	ds	3
  2311  00008C                     ??___flmul:
  2312  00008C                     
  2313                           ; 1 bytes @ 0x2C
  2314  00008C                     	ds	1
  2315  00008D                     SwTimerReadValue@ticksCount:
  2316                           	opt callstack 0
  2317  00008D                     SwTimerStart@ticksRemaining:
  2318                           	opt callstack 0
  2319                           
  2320                           ; 4 bytes @ 0x2D
  2321  00008D                     	ds	3
  2322  000090                     ___flmul@sign:
  2323                           	opt callstack 0
  2324                           
  2325                           ; 1 bytes @ 0x30
  2326  000090                     	ds	1
  2327  000091                     SwTimerReadValue@timerId:
  2328                           	opt callstack 0
  2329  000091                     SwTimerStart@timerId:
  2330                           	opt callstack 0
  2331  000091                     ___flmul@grs:
  2332                           	opt callstack 0
  2333                           
  2334                           ; 4 bytes @ 0x31
  2335  000091                     	ds	1
  2336  000092                     ??_UpdateRetransmissionAckTimeoutState:
  2337  000092                     ??_StartReTxTimer:
  2338  000092                     ?___lmul:
  2339                           	opt callstack 0
  2340  000092                     GenerateSubkey@key:
  2341                           	opt callstack 0
  2342  000092                     ComputeSessionKeys@joinAcceptBuffer:
  2343                           	opt callstack 0
  2344  000092                     EncryptFRMPayload@buffer:
  2345                           	opt callstack 0
  2346  000092                     ___lmul@multiplier:
  2347                           	opt callstack 0
  2348                           
  2349                           ; 4 bytes @ 0x32
  2350  000092                     	ds	2
  2351  000094                     EncryptFRMPayload@bufferLength:
  2352                           	opt callstack 0
  2353  000094                     GenerateSubkey@k1:
  2354                           	opt callstack 0
  2355                           
  2356                           ; 2 bytes @ 0x34
  2357  000094                     	ds	1
  2358  000095                     EncryptFRMPayload@dir:
  2359                           	opt callstack 0
  2360  000095                     ___flmul@aexp:
  2361                           	opt callstack 0
  2362                           
  2363                           ; 1 bytes @ 0x35
  2364  000095                     	ds	1
  2365  000096                     ___flmul@bexp:
  2366                           	opt callstack 0
  2367  000096                     GenerateSubkey@k2:
  2368                           	opt callstack 0
  2369  000096                     StartReTxTimer@minim:
  2370                           	opt callstack 0
  2371  000096                     EncryptFRMPayload@frameCounter:
  2372                           	opt callstack 0
  2373  000096                     ___lmul@multiplicand:
  2374                           	opt callstack 0
  2375                           
  2376                           ; 4 bytes @ 0x36
  2377  000096                     	ds	1
  2378  000097                     ___flmul@prod:
  2379                           	opt callstack 0
  2380                           
  2381                           ; 4 bytes @ 0x37
  2382  000097                     	ds	1
  2383  000098                     ??_GenerateSubkey:
  2384                           
  2385                           ; 1 bytes @ 0x38
  2386  000098                     	ds	1
  2387  000099                     GenerateSubkey@const_Rb:
  2388                           	opt callstack 0
  2389                           
  2390                           ; 16 bytes @ 0x39
  2391  000099                     	ds	1
  2392  00009A                     StartReTxTimer@i:
  2393                           	opt callstack 0
  2394  00009A                     EncryptFRMPayload@key:
  2395                           	opt callstack 0
  2396  00009A                     ___lmul@product:
  2397                           	opt callstack 0
  2398                           
  2399                           ; 4 bytes @ 0x3A
  2400  00009A                     	ds	1
  2401  00009B                     ___flmul@temp:
  2402                           	opt callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x3B
  2405  00009B                     	ds	1
  2406  00009C                     EncryptFRMPayload@macBufferIndex:
  2407                           	opt callstack 0
  2408                           
  2409                           ; 1 bytes @ 0x3C
  2410  00009C                     	ds	1
  2411  00009D                     ?___fldiv:
  2412                           	opt callstack 0
  2413  00009D                     ?_eval_poly:
  2414                           	opt callstack 0
  2415  00009D                     EncryptFRMPayload@bufferToBeEncrypted:
  2416                           	opt callstack 0
  2417  00009D                     ___fldiv@b:
  2418                           	opt callstack 0
  2419  00009D                     eval_poly@x:
  2420                           	opt callstack 0
  2421                           
  2422                           ; 4 bytes @ 0x3D
  2423  00009D                     	ds	1
  2424  00009E                     ?_ExecuteNewChannel:
  2425                           	opt callstack 0
  2426  00009E                     ?_ExecuteRxParamSetupReq:
  2427                           	opt callstack 0
  2428  00009E                     ?_rand:
  2429                           	opt callstack 0
  2430  00009E                     RADIO_WriteConfiguration@symbolTimeout:
  2431                           	opt callstack 0
  2432  00009E                     ExecuteNewChannel@ptr:
  2433                           	opt callstack 0
  2434  00009E                     ExecuteRxParamSetupReq@ptr:
  2435                           	opt callstack 0
  2436  00009E                     UpdateCfList@joinAccept:
  2437                           	opt callstack 0
  2438  00009E                     LORAWAN_LinkCheckConfigure@period:
  2439                           	opt callstack 0
  2440                           
  2441                           ; 2 bytes @ 0x3E
  2442  00009E                     	ds	1
  2443  00009F                     EncryptFRMPayload@multicastStatus:
  2444                           	opt callstack 0
  2445                           
  2446                           ; 1 bytes @ 0x3F
  2447  00009F                     	ds	1
  2448  0000A0                     ??_LORAWAN_LinkCheckConfigure:
  2449  0000A0                     ??_EncryptFRMPayload:
  2450  0000A0                     ??_RADIO_WriteConfiguration:
  2451  0000A0                     ??_UpdateCfList:
  2452  0000A0                     ?___lwmod:
  2453                           	opt callstack 0
  2454  0000A0                     ExecuteNewChannel@drRange:
  2455                           	opt callstack 0
  2456  0000A0                     ___lwmod@dividend:
  2457                           	opt callstack 0
  2458  0000A0                     ExecuteRxParamSetupReq@frequency:
  2459                           	opt callstack 0
  2460                           
  2461                           ; 4 bytes @ 0x40
  2462  0000A0                     	ds	1
  2463  0000A1                     eval_poly@d:
  2464                           	opt callstack 0
  2465  0000A1                     ExecuteNewChannel@frequency:
  2466                           	opt callstack 0
  2467  0000A1                     ___fldiv@a:
  2468                           	opt callstack 0
  2469                           
  2470                           ; 4 bytes @ 0x41
  2471  0000A1                     	ds	1
  2472  0000A2                     ___lwmod@divisor:
  2473                           	opt callstack 0
  2474                           
  2475                           ; 2 bytes @ 0x42
  2476  0000A2                     	ds	1
  2477  0000A3                     RADIO_WriteConfiguration@i:
  2478                           	opt callstack 0
  2479  0000A3                     eval_poly@n:
  2480                           	opt callstack 0
  2481                           
  2482                           ; 2 bytes @ 0x43
  2483  0000A3                     	ds	1
  2484  0000A4                     ExecuteRxParamSetupReq@dlSettings:
  2485                           	opt callstack 0
  2486  0000A4                     UpdateCfList@bufferLength:
  2487                           	opt callstack 0
  2488  0000A4                     ___lwmod@counter:
  2489                           	opt callstack 0
  2490  0000A4                     RADIO_WriteConfiguration@tempValue:
  2491                           	opt callstack 0
  2492  0000A4                     _LORAWAN_LinkCheckConfigure$2499:
  2493                           	opt callstack 0
  2494                           
  2495                           ; 4 bytes @ 0x44
  2496  0000A4                     	ds	1
  2497  0000A5                     ??___fldiv:
  2498  0000A5                     ??_eval_poly:
  2499  0000A5                     ?_Random:
  2500                           	opt callstack 0
  2501  0000A5                     ExecuteNewChannel@channelIndex:
  2502                           	opt callstack 0
  2503  0000A5                     EncryptFRMPayload@k:
  2504                           	opt callstack 0
  2505  0000A5                     Random@max:
  2506                           	opt callstack 0
  2507  0000A5                     uint16ToString@value:
  2508                           	opt callstack 0
  2509  0000A5                     UpdateCfList@frequency:
  2510                           	opt callstack 0
  2511                           
  2512                           ; 4 bytes @ 0x45
  2513  0000A5                     	ds	1
  2514  0000A6                     ?_MacExecuteCommands:
  2515                           	opt callstack 0
  2516  0000A6                     EncryptFRMPayload@i:
  2517                           	opt callstack 0
  2518  0000A6                     MacExecuteCommands@buffer:
  2519                           	opt callstack 0
  2520                           
  2521                           ; 2 bytes @ 0x46
  2522  0000A6                     	ds	1
  2523  0000A7                     SearchAvailableChannel@transmissionType:
  2524                           	opt callstack 0
  2525  0000A7                     EncryptFRMPayload@j:
  2526                           	opt callstack 0
  2527  0000A7                     uint16ToString@output:
  2528                           	opt callstack 0
  2529                           
  2530                           ; 2 bytes @ 0x47
  2531  0000A7                     	ds	1
  2532  0000A8                     RADIO_WriteConfiguration@regValue:
  2533                           	opt callstack 0
  2534  0000A8                     LORAWAN_LinkCheckConfigure@iCtr:
  2535                           	opt callstack 0
  2536  0000A8                     MacExecuteCommands@fOptsLen:
  2537                           	opt callstack 0
  2538  0000A8                     SearchAvailableChannel@channelIndex:
  2539                           	opt callstack 0
  2540                           
  2541                           ; 2 bytes @ 0x48
  2542  0000A8                     	ds	1
  2543  0000A9                     ??_MacExecuteCommands:
  2544  0000A9                     ?_RADIO_Transmit:
  2545                           	opt callstack 0
  2546  0000A9                     ?_RADIO_ReceiveStart:
  2547                           	opt callstack 0
  2548  0000A9                     LORAWAN_Reset@ismBandNew:
  2549                           	opt callstack 0
  2550  0000A9                     UpdateCfList@channelIndex:
  2551                           	opt callstack 0
  2552  0000A9                     RADIO_Transmit@buffer:
  2553                           	opt callstack 0
  2554  0000A9                     RADIO_ReceiveStart@rxWindowSize:
  2555                           	opt callstack 0
  2556  0000A9                     ___fldiv@rem:
  2557                           	opt callstack 0
  2558  0000A9                     eval_poly@res:
  2559                           	opt callstack 0
  2560  0000A9                     GenerateSubkey@l:
  2561                           	opt callstack 0
  2562                           
  2563                           ; 16 bytes @ 0x49
  2564  0000A9                     	ds	1
  2565  0000AA                     ??_SearchAvailableChannel:
  2566  0000AA                     UpdateCfList@i:
  2567                           	opt callstack 0
  2568  0000AA                     LORAWAN_Init@RxPayload:
  2569                           	opt callstack 0
  2570                           
  2571                           ; 2 bytes @ 0x4A
  2572  0000AA                     	ds	1
  2573  0000AB                     ??_RADIO_ReceiveStart:
  2574  0000AB                     RADIO_Transmit@bufferLen:
  2575                           	opt callstack 0
  2576  0000AB                     MacExecuteCommands@done:
  2577                           	opt callstack 0
  2578  0000AB                     acquisitionData@string:
  2579                           	opt callstack 0
  2580                           
  2581                           ; 2 bytes @ 0x4B
  2582  0000AB                     	ds	1
  2583  0000AC                     ??_RADIO_Transmit:
  2584  0000AC                     LORAWAN_Init@RxJoinResponse:
  2585                           	opt callstack 0
  2586  0000AC                     MacExecuteCommands@ptr:
  2587                           	opt callstack 0
  2588                           
  2589                           ; 2 bytes @ 0x4C
  2590  0000AC                     	ds	1
  2591  0000AD                     ?_log:
  2592                           	opt callstack 0
  2593  0000AD                     acquisitionData@GPIO:
  2594                           	opt callstack 0
  2595  0000AD                     ___fldiv@sign:
  2596                           	opt callstack 0
  2597  0000AD                     log@x:
  2598                           	opt callstack 0
  2599                           
  2600                           ; 4 bytes @ 0x4D
  2601  0000AD                     	ds	1
  2602  0000AE                     SearchAvailableChannel@randomNumberCopy:
  2603                           	opt callstack 0
  2604  0000AE                     ___fldiv@new_exp:
  2605                           	opt callstack 0
  2606                           
  2607                           ; 2 bytes @ 0x4E
  2608  0000AE                     	ds	1
  2609  0000AF                     SearchAvailableChannel@result:
  2610                           	opt callstack 0
  2611  0000AF                     _RADIO_ReceiveStart$784:
  2612                           	opt callstack 0
  2613                           
  2614                           ; 4 bytes @ 0x4F
  2615  0000AF                     	ds	1
  2616  0000B0                     SearchAvailableChannel@maxChannels:
  2617                           	opt callstack 0
  2618  0000B0                     ___fldiv@grs:
  2619                           	opt callstack 0
  2620                           
  2621                           ; 4 bytes @ 0x50
  2622  0000B0                     	ds	1
  2623  0000B1                     SearchAvailableChannel@randomNumber:
  2624                           	opt callstack 0
  2625  0000B1                     log@exponent:
  2626                           	opt callstack 0
  2627                           
  2628                           ; 2 bytes @ 0x51
  2629  0000B1                     	ds	1
  2630  0000B2                     SearchAvailableChannel@i:
  2631                           	opt callstack 0
  2632                           
  2633                           ; 1 bytes @ 0x52
  2634  0000B2                     	ds	1
  2635  0000B3                     SelectChannelForTransmission@transmissionType:
  2636                           	opt callstack 0
  2637  0000B3                     LORAWAN_TxDone@timeOnAir:
  2638                           	opt callstack 0
  2639                           
  2640                           ; 2 bytes @ 0x53
  2641  0000B3                     	ds	1
  2642  0000B4                     SelectChannelForTransmission@result:
  2643                           	opt callstack 0
  2644  0000B4                     ___fldiv@bexp:
  2645                           	opt callstack 0
  2646  0000B4                     _RADIO_Transmit$781:
  2647                           	opt callstack 0
  2648                           
  2649                           ; 4 bytes @ 0x54
  2650  0000B4                     	ds	1
  2651  0000B5                     ??_LORAWAN_TxDone:
  2652  0000B5                     SelectChannelForTransmission@channelIndex:
  2653                           	opt callstack 0
  2654  0000B5                     ___fldiv@aexp:
  2655                           	opt callstack 0
  2656                           
  2657                           ; 1 bytes @ 0x55
  2658  0000B5                     	ds	1
  2659  0000B6                     ?_tempConversion:
  2660                           	opt callstack 0
  2661  0000B6                     tempConversion@adcValue:
  2662                           	opt callstack 0
  2663                           
  2664                           ; 2 bytes @ 0x56
  2665  0000B6                     	ds	2
  2666  0000B8                     RADIO_Transmit@regValue:
  2667                           	opt callstack 0
  2668  0000B8                     _tempConversion$6793:
  2669                           	opt callstack 0
  2670                           
  2671                           ; 4 bytes @ 0x58
  2672  0000B8                     	ds	1
  2673  0000B9                     GenerateSubkey@i:
  2674                           	opt callstack 0
  2675  0000B9                     RADIO_Transmit@i:
  2676                           	opt callstack 0
  2677                           
  2678                           ; 1 bytes @ 0x59
  2679  0000B9                     	ds	1
  2680  0000BA                     ??_LORAWAN_RxTimeout:
  2681  0000BA                     AESCmac@key:
  2682                           	opt callstack 0
  2683                           
  2684                           ; 2 bytes @ 0x5A
  2685  0000BA                     	ds	2
  2686  0000BC                     AESCmac@output:
  2687                           	opt callstack 0
  2688  0000BC                     tempConversion@val:
  2689                           	opt callstack 0
  2690                           
  2691                           ; 4 bytes @ 0x5C
  2692  0000BC                     	ds	1
  2693  0000BD                     _LORAWAN_TxDone$1673:
  2694                           	opt callstack 0
  2695                           
  2696                           ; 4 bytes @ 0x5D
  2697  0000BD                     	ds	1
  2698  0000BE                     AESCmac@input:
  2699                           	opt callstack 0
  2700  0000BE                     LORAWAN_RxTimeout@minim:
  2701                           	opt callstack 0
  2702                           
  2703                           ; 4 bytes @ 0x5E
  2704  0000BE                     	ds	2
  2705  0000C0                     AESCmac@size:
  2706                           	opt callstack 0
  2707  0000C0                     tempConversion@temp:
  2708                           	opt callstack 0
  2709                           
  2710                           ; 4 bytes @ 0x60
  2711  0000C0                     	ds	1
  2712  0000C1                     ??_AESCmac:
  2713  0000C1                     _LORAWAN_TxDone$1674:
  2714                           	opt callstack 0
  2715                           
  2716                           ; 4 bytes @ 0x61
  2717  0000C1                     	ds	1
  2718  0000C2                     LORAWAN_RxTimeout@i:
  2719                           	opt callstack 0
  2720                           
  2721                           ; 1 bytes @ 0x62
  2722  0000C2                     	ds	1
  2723  0000C3                     ??_RADIO_DIO1:
  2724                           
  2725                           ; 1 bytes @ 0x63
  2726  0000C3                     	ds	1
  2727  0000C4                     RADIO_DIO1@dioMapping:
  2728                           	opt callstack 0
  2729  0000C4                     tempSensAcquisition@value:
  2730                           	opt callstack 0
  2731                           
  2732                           ; 2 bytes @ 0x64
  2733  0000C4                     	ds	1
  2734  0000C5                     LORAWAN_TxDone@found:
  2735                           	opt callstack 0
  2736                           
  2737                           ; 1 bytes @ 0x65
  2738  0000C5                     	ds	1
  2739  0000C6                     tempSensAcquisition@temp:
  2740                           	opt callstack 0
  2741  0000C6                     LORAWAN_TxDone@delta:
  2742                           	opt callstack 0
  2743                           
  2744                           ; 4 bytes @ 0x66
  2745  0000C6                     	ds	2
  2746  0000C8                     ?_ComputeMic:
  2747                           	opt callstack 0
  2748  0000C8                     AssemblePacket@port:
  2749                           	opt callstack 0
  2750  0000C8                     ComputeMic@key:
  2751                           	opt callstack 0
  2752                           
  2753                           ; 2 bytes @ 0x68
  2754  0000C8                     	ds	1
  2755  0000C9                     AssemblePacket@buffer:
  2756                           	opt callstack 0
  2757                           
  2758                           ; 2 bytes @ 0x69
  2759  0000C9                     	ds	1
  2760  0000CA                     ComputeMic@buffer:
  2761                           	opt callstack 0
  2762  0000CA                     _LORAWAN_TxDone$6790:
  2763                           	opt callstack 0
  2764                           
  2765                           ; 4 bytes @ 0x6A
  2766  0000CA                     	ds	1
  2767  0000CB                     AssemblePacket@bufferLength:
  2768                           	opt callstack 0
  2769                           
  2770                           ; 2 bytes @ 0x6B
  2771  0000CB                     	ds	1
  2772  0000CC                     ComputeMic@bufferLength:
  2773                           	opt callstack 0
  2774                           
  2775                           ; 1 bytes @ 0x6C
  2776  0000CC                     	ds	1
  2777  0000CD                     ??_AssemblePacket:
  2778  0000CD                     ComputeMic@mic:
  2779                           	opt callstack 0
  2780                           
  2781                           ; 4 bytes @ 0x6D
  2782  0000CD                     	ds	1
  2783  0000CE                     LORAWAN_TxDone@ticks:
  2784                           	opt callstack 0
  2785                           
  2786                           ; 4 bytes @ 0x6E
  2787  0000CE                     	ds	1
  2788  0000CF                     AssemblePacket@confirmed:
  2789                           	opt callstack 0
  2790                           
  2791                           ; 1 bytes @ 0x6F
  2792  0000CF                     	ds	1
  2793  0000D0                     AssemblePacket@mhdr:
  2794                           	opt callstack 0
  2795                           
  2796                           ; 1 bytes @ 0x70
  2797  0000D0                     	ds	1
  2798  0000D1                     ??_PrepareJoinRequestFrame:
  2799  0000D1                     AssemblePacket@fCtrl:
  2800                           	opt callstack 0
  2801                           
  2802                           ; 1 bytes @ 0x71
  2803  0000D1                     	ds	1
  2804  0000D2                     AssemblePacket@macCmdIdx:
  2805                           	opt callstack 0
  2806  0000D2                     LORAWAN_TxDone@minim:
  2807                           	opt callstack 0
  2808                           
  2809                           ; 4 bytes @ 0x72
  2810  0000D2                     	ds	1
  2811  0000D3                     AssemblePacket@bufferIndex:
  2812                           	opt callstack 0
  2813  0000D3                     PrepareJoinRequestFrame@mic:
  2814                           	opt callstack 0
  2815                           
  2816                           ; 4 bytes @ 0x73
  2817  0000D3                     	ds	1
  2818  0000D4                     LORAWAN_Send@port:
  2819                           	opt callstack 0
  2820                           
  2821                           ; 1 bytes @ 0x74
  2822  0000D4                     	ds	1
  2823  0000D5                     LORAWAN_Send@buffer:
  2824                           	opt callstack 0
  2825                           
  2826                           ; 2 bytes @ 0x75
  2827  0000D5                     	ds	1
  2828  0000D6                     LORAWAN_TxDone@i:
  2829                           	opt callstack 0
  2830                           
  2831                           ; 1 bytes @ 0x76
  2832  0000D6                     	ds	1
  2833  0000D7                     LORAWAN_Send@bufferLength:
  2834                           	opt callstack 0
  2835  0000D7                     PrepareJoinRequestFrame@mhdr:
  2836                           	opt callstack 0
  2837  0000D7                     RADIO_TxDone@timeOnAir:
  2838                           	opt callstack 0
  2839  0000D7                     RADIO_FSKPacketSent@timeOnAir:
  2840                           	opt callstack 0
  2841                           
  2842                           ; 4 bytes @ 0x77
  2843  0000D7                     	ds	1
  2844  0000D8                     ??_LORAWAN_Send:
  2845  0000D8                     PrepareJoinRequestFrame@iCtr:
  2846                           	opt callstack 0
  2847                           
  2848                           ; 1 bytes @ 0x78
  2849  0000D8                     	ds	1
  2850  0000D9                     LORAWAN_Send@confirmed:
  2851                           	opt callstack 0
  2852  0000D9                     PrepareJoinRequestFrame@bufferIndex:
  2853                           	opt callstack 0
  2854                           
  2855                           ; 1 bytes @ 0x79
  2856  0000D9                     	ds	1
  2857  0000DA                     LORAWAN_Join@bufferIndex:
  2858                           	opt callstack 0
  2859  0000DA                     LORAWAN_Send@result:
  2860                           	opt callstack 0
  2861                           
  2862                           ; 1 bytes @ 0x7A
  2863  0000DA                     	ds	1
  2864  0000DB                     ??_LORAWAN_RxDone:
  2865  0000DB                     ??_SwTimersExecute:
  2866  0000DB                     LORAWAN_Join@result:
  2867                           	opt callstack 0
  2868  0000DB                     _RADIO_TxDone$796:
  2869                           	opt callstack 0
  2870  0000DB                     _RADIO_FSKPacketSent$800:
  2871                           	opt callstack 0
  2872                           
  2873                           ; 4 bytes @ 0x7B
  2874  0000DB                     	ds	1
  2875  0000DC                     LORAWAN_Join@activationTypeNew:
  2876                           	opt callstack 0
  2877                           
  2878                           ; 1 bytes @ 0x7C
  2879  0000DC                     	ds	3
  2880  0000DF                     SwTimersExecute@i:
  2881                           	opt callstack 0
  2882  0000DF                     RADIO_FSKPacketSent@irqFlags:
  2883                           	opt callstack 0
  2884                           
  2885                           ; 1 bytes @ 0x7F
  2886  0000DF                     	ds	1
  2887  0000E0                     LORAWAN_RxDone@fPort:
  2888                           	opt callstack 0
  2889                           
  2890                           ; 1 bytes @ 0x80
  2891  0000E0                     	ds	1
  2892  0000E1                     LORAWAN_RxDone@channelIndex:
  2893                           	opt callstack 0
  2894                           
  2895                           ; 1 bytes @ 0x81
  2896  0000E1                     	ds	1
  2897  0000E2                     LORAWAN_RxDone@mhdr:
  2898                           	opt callstack 0
  2899                           
  2900                           ; 1 bytes @ 0x82
  2901  0000E2                     	ds	1
  2902  0000E3                     LORAWAN_RxDone@extractedMic:
  2903                           	opt callstack 0
  2904                           
  2905                           ; 4 bytes @ 0x83
  2906  0000E3                     	ds	4
  2907  0000E7                     LORAWAN_RxDone@bufferIndex:
  2908                           	opt callstack 0
  2909                           
  2910                           ; 1 bytes @ 0x87
  2911  0000E7                     	ds	1
  2912  0000E8                     LORAWAN_RxDone@temp:
  2913                           	opt callstack 0
  2914                           
  2915                           ; 1 bytes @ 0x88
  2916  0000E8                     	ds	1
  2917  0000E9                     LORAWAN_RxDone@packet:
  2918                           	opt callstack 0
  2919                           
  2920                           ; 2 bytes @ 0x89
  2921  0000E9                     	ds	2
  2922  0000EB                     LORAWAN_RxDone@computedMic:
  2923                           	opt callstack 0
  2924                           
  2925                           ; 4 bytes @ 0x8B
  2926  0000EB                     	ds	4
  2927  0000EF                     LORAWAN_RxDone@joinAccept:
  2928                           	opt callstack 0
  2929                           
  2930                           ; 2 bytes @ 0x8F
  2931  0000EF                     	ds	2
  2932  0000F1                     LORAWAN_RxDone@frmPayloadLength:
  2933                           	opt callstack 0
  2934                           
  2935                           ; 1 bytes @ 0x91
  2936  0000F1                     	ds	1
  2937  0000F2                     LORAWAN_RxDone@hdr:
  2938                           	opt callstack 0
  2939                           
  2940                           ; 2 bytes @ 0x92
  2941  0000F2                     	ds	2
  2942  0000F4                     RADIO_RxDone@irqFlags:
  2943                           	opt callstack 0
  2944  0000F4                     RADIO_FSKPayloadReady@irqFlags:
  2945                           	opt callstack 0
  2946                           
  2947                           ; 1 bytes @ 0x94
  2948  0000F4                     	ds	1
  2949  0000F5                     RADIO_RxDone@i:
  2950                           	opt callstack 0
  2951  0000F5                     RADIO_FSKPayloadReady@i:
  2952                           	opt callstack 0
  2953                           
  2954                           ; 1 bytes @ 0x95
  2955  0000F5                     	ds	1
  2956  0000F6                     ??_RADIO_DIO0:
  2957                           
  2958                           ; 1 bytes @ 0x96
  2959  0000F6                     	ds	2
  2960  0000F8                     RADIO_DIO0@dioMapping:
  2961                           	opt callstack 0
  2962                           
  2963                           ; 1 bytes @ 0x98
  2964  0000F8                     	ds	1
  2965  0000F9                     RADIO_DIO0@opMode:
  2966                           	opt callstack 0
  2967                           
  2968                           ; 1 bytes @ 0x99
  2969  0000F9                     	ds	1
  2970  0000FA                     sendValue@firstSend:
  2971                           	opt callstack 0
  2972                           
  2973                           ; 1 bytes @ 0x9A
  2974  0000FA                     	ds	1
  2975  0000FB                     sendValue@status:
  2976                           	opt callstack 0
  2977                           
  2978                           ; 1 bytes @ 0x9B
  2979  0000FB                     	ds	1
  2980  0000FC                     
  2981                           ; 1 bytes @ 0x9C
  2982                           
  2983                           	psect	cstackCOMRAM
  2984  000001                     __pcstackCOMRAM:
  2985                           	opt callstack 0
  2986  000001                     ?i2_TMR1_ReadTimer:
  2987                           	opt callstack 0
  2988  000001                     ?i2___awdiv:
  2989                           	opt callstack 0
  2990  000001                     ?i2___lwdiv:
  2991                           	opt callstack 0
  2992  000001                     ?i2___lwmod:
  2993                           	opt callstack 0
  2994  000001                     ___lbmod@divisor:
  2995                           	opt callstack 0
  2996  000001                     TMR3_WriteTimer@timerVal:
  2997                           	opt callstack 0
  2998  000001                     TMR5_WriteTimer@timerVal:
  2999                           	opt callstack 0
  3000  000001                     i2TMR1_WriteTimer@timerVal:
  3001                           	opt callstack 0
  3002  000001                     i2___awdiv@dividend:
  3003                           	opt callstack 0
  3004  000001                     i2___lwdiv@dividend:
  3005                           	opt callstack 0
  3006  000001                     i2___lwmod@dividend:
  3007                           	opt callstack 0
  3008                           
  3009                           ; 2 bytes @ 0x0
  3010  000001                     	ds	1
  3011  000002                     ___lbmod@dividend:
  3012                           	opt callstack 0
  3013                           
  3014                           ; 1 bytes @ 0x1
  3015  000002                     	ds	1
  3016  000003                     ??i2_TMR1_ReadTimer:
  3017  000003                     ___lbmod@counter:
  3018                           	opt callstack 0
  3019  000003                     i2___awdiv@divisor:
  3020                           	opt callstack 0
  3021  000003                     i2___lwdiv@divisor:
  3022                           	opt callstack 0
  3023  000003                     i2___lwmod@divisor:
  3024                           	opt callstack 0
  3025                           
  3026                           ; 2 bytes @ 0x2
  3027  000003                     	ds	1
  3028  000004                     ___lbmod@rem:
  3029                           	opt callstack 0
  3030                           
  3031                           ; 1 bytes @ 0x3
  3032  000004                     	ds	1
  3033  000005                     i2___awdiv@counter:
  3034                           	opt callstack 0
  3035  000005                     i2___lwmod@counter:
  3036                           	opt callstack 0
  3037  000005                     i2TMR1_ReadTimer@readVal:
  3038                           	opt callstack 0
  3039  000005                     i2___lwdiv@quotient:
  3040                           	opt callstack 0
  3041                           
  3042                           ; 2 bytes @ 0x4
  3043  000005                     	ds	1
  3044  000006                     i2___awdiv@sign:
  3045                           	opt callstack 0
  3046                           
  3047                           ; 1 bytes @ 0x5
  3048  000006                     	ds	1
  3049  000007                     i2TMR1_ReadTimer@readValHigh:
  3050                           	opt callstack 0
  3051  000007                     i2___lwdiv@counter:
  3052                           	opt callstack 0
  3053  000007                     i2___awdiv@quotient:
  3054                           	opt callstack 0
  3055                           
  3056                           ; 2 bytes @ 0x6
  3057  000007                     	ds	1
  3058  000008                     i2TMR1_ReadTimer@readValLow:
  3059                           	opt callstack 0
  3060                           
  3061                           ; 1 bytes @ 0x7
  3062  000008                     	ds	1
  3063  000009                     ?i2_TMR_SwapTimer:
  3064                           	opt callstack 0
  3065  000009                     ?i2_TMR_GetDeltaTime:
  3066                           	opt callstack 0
  3067  000009                     i2TMR_SwapTimer@timerVal:
  3068                           	opt callstack 0
  3069                           
  3070                           ; 2 bytes @ 0x8
  3071  000009                     	ds	2
  3072  00000B                     
  3073                           ; 1 bytes @ 0xA
  3074  00000B                     	ds	2
  3075  00000D                     ??i2_TMR_GetDeltaTime:
  3076                           
  3077                           ; 1 bytes @ 0xC
  3078  00000D                     	ds	12
  3079  000019                     ?i2_SwTimersInterrupt:
  3080                           	opt callstack 0
  3081                           
  3082                           ; 4 bytes @ 0x18
  3083  000019                     	ds	4
  3084  00001D                     
  3085                           ; 1 bytes @ 0x1C
  3086  00001D                     	ds	4
  3087  000021                     i2SwTimersInterrupt@timeElapsed:
  3088                           	opt callstack 0
  3089                           
  3090                           ; 4 bytes @ 0x20
  3091  000021                     	ds	4
  3092  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  3093                           	opt callstack 0
  3094                           
  3095                           ; 4 bytes @ 0x24
  3096  000025                     	ds	4
  3097  000029                     i2SwTimersInterrupt@i:
  3098                           	opt callstack 0
  3099                           
  3100                           ; 1 bytes @ 0x28
  3101  000029                     	ds	1
  3102  00002A                     ??_INTERRUPT_InterruptManager:
  3103                           
  3104                           ; 1 bytes @ 0x29
  3105  00002A                     	ds	8
  3106                           
  3107 ;;
  3108 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3109 ;;
  3110 ;; *************** function _main *****************
  3111 ;; Defined at:
  3112 ;;		line 89 in file "main.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;		None
  3115 ;; Auto vars:     Size  Location     Type
  3116 ;;		None
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      void 
  3119 ;; Registers used:
  3120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;Total ram usage:        0 bytes
  3131 ;; Hardware stack levels required when called:   21
  3132 ;; This function calls:
  3133 ;;		_GPIODigitalToogle
  3134 ;;		_GPIODigitalWrite
  3135 ;;		_GPIOInit
  3136 ;;		_LORAWAN_Init
  3137 ;;		_LORAWAN_Join
  3138 ;;		_LORAWAN_Mainloop
  3139 ;;		_LORAWAN_Reset
  3140 ;;		_LORAWAN_SetApplicationEui
  3141 ;;		_LORAWAN_SetApplicationKey
  3142 ;;		_LORAWAN_SetDeviceEui
  3143 ;;		_SYSTEM_Initialize
  3144 ;;		_TMR5_StartTimer
  3145 ;;		_acuadoriApp
  3146 ;;		_isJoined
  3147 ;;		_timerReset
  3148 ;; This function is called by:
  3149 ;;		Startup code after reset
  3150 ;; This function uses a non-reentrant model
  3151 ;;
  3152                           
  3153                           	psect	text0
  3154  007292                     __ptext0:
  3155                           	opt callstack 0
  3156  007292                     _main:
  3157                           	opt callstack 10
  3158                           
  3159                           ;main.c: 91: SYSTEM_Initialize();
  3160                           
  3161                           ;incstack = 0
  3162  007292  EC9A  F04F         	call	_SYSTEM_Initialize	;wreg free
  3163                           
  3164                           ;main.c: 92: GPIOInit();
  3165  007296  EC63  F02E         	call	_GPIOInit	;wreg free
  3166                           
  3167                           ;main.c: 93: GPIODigitalWrite(0x19, 1);
  3168  00729A  0E01               	movlw	1
  3169  00729C  0100               	movlb	0	; () banked
  3170  00729E  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3171  0072A0  0E19               	movlw	25
  3172  0072A2  ECE7  F036         	call	_GPIODigitalWrite
  3173                           
  3174                           ;main.c: 108: (INTCONbits.GIE = 1);
  3175  0072A6  8EF2               	bsf	4082,7,c	;volatile
  3176                           
  3177                           ;main.c: 110: (INTCONbits.PEIE = 1);
  3178  0072A8  8CF2               	bsf	4082,6,c	;volatile
  3179                           
  3180                           ;main.c: 116: LORAWAN_Init(RxData, RxJoinResponse);
  3181  0072AA  0E62               	movlw	low _RxData
  3182  0072AC  0100               	movlb	0	; () banked
  3183  0072AE  6FAA               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  3184  0072B0  0EA9               	movlw	high _RxData
  3185  0072B2  6FAB               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  3186  0072B4  0EBC               	movlw	low _RxJoinResponse
  3187  0072B6  6FAC               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  3188  0072B8  0EA5               	movlw	high _RxJoinResponse
  3189  0072BA  6FAD               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  3190  0072BC  ECFE  F047         	call	_LORAWAN_Init	;wreg free
  3191                           
  3192                           ;main.c: 125: LORAWAN_SetApplicationKey(appKey);
  3193  0072C0  0EE0               	movlw	low _appKey
  3194  0072C2  0100               	movlb	0	; () banked
  3195  0072C4  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  3196  0072C6  0E03               	movlw	high _appKey
  3197  0072C8  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  3198  0072CA  ECDF  F04F         	call	_LORAWAN_SetApplicationKey	;wreg free
  3199                           
  3200                           ;main.c: 126: LORAWAN_SetApplicationEui(appEui);
  3201  0072CE  0EC8               	movlw	low _appEui
  3202  0072D0  0100               	movlb	0	; () banked
  3203  0072D2  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  3204  0072D4  0E03               	movlw	high _appEui
  3205  0072D6  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  3206  0072D8  ECF6  F04F         	call	_LORAWAN_SetApplicationEui	;wreg free
  3207                           
  3208                           ;main.c: 127: LORAWAN_SetDeviceEui(deviceEui);
  3209  0072DC  0EF0               	movlw	low _deviceEui
  3210  0072DE  0100               	movlb	0	; () banked
  3211  0072E0  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  3212  0072E2  0E03               	movlw	high _deviceEui
  3213  0072E4  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  3214  0072E6  ECC8  F04F         	call	_LORAWAN_SetDeviceEui	;wreg free
  3215                           
  3216                           ;main.c: 130: LORAWAN_Join(OTAA);
  3217  0072EA  0E00               	movlw	0
  3218  0072EC  EC2D  F03F         	call	_LORAWAN_Join
  3219                           
  3220                           ;main.c: 137: TMR5_StartTimer();
  3221  0072F0  EC93  F054         	call	_TMR5_StartTimer	;wreg free
  3222                           
  3223                           ;main.c: 138: timerReset();
  3224  0072F4  EC52  F050         	call	_timerReset	;wreg free
  3225                           
  3226                           ;main.c: 141: firstSend = 1;
  3227  0072F8  0E01               	movlw	1
  3228  0072FA  0101               	movlb	1	; () banked
  3229  0072FC  6F24               	movwf	_firstSend& (0+255),b
  3230  0072FE                     l22224:
  3231                           
  3232                           ;main.c: 165: LORAWAN_Mainloop();
  3233  0072FE  ECA7  F04D         	call	_LORAWAN_Mainloop	;wreg free
  3234                           
  3235                           ;main.c: 168: if (isJoined() && (timer.min >= 15 || firstSend)){
  3236  007302  ECD8  F051         	call	_isJoined	;wreg free
  3237  007306  0900               	iorlw	0
  3238  007308  B4D8               	btfsc	status,2,c
  3239  00730A  D012               	goto	l22240
  3240  00730C  0E0F               	movlw	15
  3241  00730E  0101               	movlb	1	; () banked
  3242  007310  6103               	cpfslt	(_timer+3)& (0+255),b
  3243  007312  D003               	goto	u25160
  3244                           
  3245                           ; BSR set to: 1
  3246  007314  5124               	movf	_firstSend& (0+255),w,b
  3247  007316  B4D8               	btfsc	status,2,c
  3248  007318  D00B               	goto	l22240
  3249  00731A                     u25160:
  3250                           
  3251                           ; BSR set to: 1
  3252                           ;main.c: 169: GPIODigitalToogle(0x11);
  3253  00731A  0E11               	movlw	17
  3254  00731C  ECCF  F03F         	call	_GPIODigitalToogle
  3255                           
  3256                           ;main.c: 171: firstSend = 0;
  3257  007320  0E00               	movlw	0
  3258  007322  0101               	movlb	1	; () banked
  3259  007324  6F24               	movwf	_firstSend& (0+255),b
  3260                           
  3261                           ; BSR set to: 1
  3262                           ;main.c: 172: acuadoriApp();
  3263  007326  EC05  F011         	call	_acuadoriApp	;wreg free
  3264  00732A                     l22238:
  3265                           
  3266                           ;main.c: 173: timerReset();
  3267  00732A  EC52  F050         	call	_timerReset	;wreg free
  3268                           
  3269                           ;main.c: 174: }
  3270  00732E  D7E7               	goto	l22224
  3271  007330                     l22240:
  3272                           
  3273                           ;main.c: 176: else if (timer.sec >= 16 && !isJoined()){
  3274  007330  0E0F               	movlw	15
  3275  007332  0101               	movlb	1	; () banked
  3276  007334  6502               	cpfsgt	(_timer+2)& (0+255),b
  3277  007336  D7E3               	goto	l22224
  3278                           
  3279                           ; BSR set to: 1
  3280  007338  ECD8  F051         	call	_isJoined	;wreg free
  3281  00733C  0900               	iorlw	0
  3282  00733E  A4D8               	btfss	status,2,c
  3283  007340  D7DE               	goto	l22224
  3284                           
  3285                           ;main.c: 180: LORAWAN_Reset (ISM_EU868);
  3286  007342  0E00               	movlw	0
  3287  007344  EC98  F023         	call	_LORAWAN_Reset
  3288                           
  3289                           ;main.c: 181: LORAWAN_SetApplicationKey(appKey);
  3290  007348  0EE0               	movlw	low _appKey
  3291  00734A  0100               	movlb	0	; () banked
  3292  00734C  6F6B               	movwf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),b
  3293  00734E  0E03               	movlw	high _appKey
  3294  007350  6F6C               	movwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),b
  3295  007352  ECDF  F04F         	call	_LORAWAN_SetApplicationKey	;wreg free
  3296                           
  3297                           ;main.c: 182: LORAWAN_SetApplicationEui(appEui);
  3298  007356  0EC8               	movlw	low _appEui
  3299  007358  0100               	movlb	0	; () banked
  3300  00735A  6F6B               	movwf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),b
  3301  00735C  0E03               	movlw	high _appEui
  3302  00735E  6F6C               	movwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),b
  3303  007360  ECF6  F04F         	call	_LORAWAN_SetApplicationEui	;wreg free
  3304                           
  3305                           ;main.c: 183: LORAWAN_SetDeviceEui(deviceEui);
  3306  007364  0EF0               	movlw	low _deviceEui
  3307  007366  0100               	movlb	0	; () banked
  3308  007368  6F6B               	movwf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),b
  3309  00736A  0E03               	movlw	high _deviceEui
  3310  00736C  6F6C               	movwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),b
  3311  00736E  ECC8  F04F         	call	_LORAWAN_SetDeviceEui	;wreg free
  3312                           
  3313                           ;main.c: 184: LORAWAN_Join(OTAA);
  3314  007372  0E00               	movlw	0
  3315  007374  EC2D  F03F         	call	_LORAWAN_Join
  3316  007378  D7D8               	goto	l22238
  3317  00737A                     __end_of_main:
  3318                           	opt callstack 0
  3319                           
  3320 ;; *************** function _isJoined *****************
  3321 ;; Defined at:
  3322 ;;		line 383 in file "rn2483APP.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;  value           4    8[BANK0 ] unsigned long 
  3327 ;;  joined          1   12[BANK0 ] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      unsigned char 
  3330 ;; Registers used:
  3331 ;;		wreg, status,2, status,0, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;Total ram usage:        5 bytes
  3342 ;; Hardware stack levels used:    1
  3343 ;; Hardware stack levels required when called:    8
  3344 ;; This function calls:
  3345 ;;		_LORAWAN_GetStatus
  3346 ;; This function is called by:
  3347 ;;		_main
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text1
  3352  00A3B0                     __ptext1:
  3353                           	opt callstack 0
  3354  00A3B0                     _isJoined:
  3355                           	opt callstack 22
  3356                           
  3357                           ;rn2483APP.c: 384: uint32_t value;;rn2483APP.c: 385: uint8_t joined;;rn2483APP.c: 386: v
      +                          alue = LORAWAN_GetStatus();
  3358                           
  3359                           ;incstack = 0
  3360  00A3B0  ECDB  F04E         	call	_LORAWAN_GetStatus	;wreg free
  3361  00A3B4  C060  F068         	movff	?_LORAWAN_GetStatus,isJoined@value
  3362  00A3B8  C061  F069         	movff	?_LORAWAN_GetStatus+1,isJoined@value+1
  3363  00A3BC  C062  F06A         	movff	?_LORAWAN_GetStatus+2,isJoined@value+2
  3364  00A3C0  C063  F06B         	movff	?_LORAWAN_GetStatus+3,isJoined@value+3
  3365                           
  3366                           ;rn2483APP.c: 387: joined = value & 0x10;
  3367  00A3C4  0100               	movlb	0	; () banked
  3368  00A3C6  5168               	movf	isJoined@value& (0+255),w,b
  3369  00A3C8  0B10               	andlw	16
  3370  00A3CA  6F6C               	movwf	isJoined@joined& (0+255),b
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;rn2483APP.c: 388: return joined;
  3374  00A3CC  516C               	movf	isJoined@joined& (0+255),w,b
  3375                           
  3376                           ; BSR set to: 0
  3377  00A3CE  0012               	return		;funcret
  3378  00A3D0                     __end_of_isJoined:
  3379                           	opt callstack 0
  3380                           
  3381 ;; *************** function _LORAWAN_GetStatus *****************
  3382 ;; Defined at:
  3383 ;;		line 658 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;  status          4    4[BANK0 ] unsigned long 
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  4    0[BANK0 ] unsigned long 
  3390 ;; Registers used:
  3391 ;;		None
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3397 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;Total ram usage:        8 bytes
  3402 ;; Hardware stack levels used:    1
  3403 ;; Hardware stack levels required when called:    7
  3404 ;; This function calls:
  3405 ;;		Nothing
  3406 ;; This function is called by:
  3407 ;;		_isJoined
  3408 ;; This function uses a non-reentrant model
  3409 ;;
  3410                           
  3411                           	psect	text2
  3412  009DB6                     __ptext2:
  3413                           	opt callstack 0
  3414  009DB6                     _LORAWAN_GetStatus:
  3415                           	opt callstack 22
  3416                           
  3417                           ;lorawan.c: 660: uint32_t status = loRa.macStatus.value;
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;incstack = 0
  3421  009DB6  C207  F064         	movff	_loRa+2,LORAWAN_GetStatus@status
  3422  009DBA  C208  F065         	movff	_loRa+3,LORAWAN_GetStatus@status+1
  3423  009DBE  C209  F066         	movff	_loRa+4,LORAWAN_GetStatus@status+2
  3424  009DC2  C20A  F067         	movff	_loRa+5,LORAWAN_GetStatus@status+3
  3425                           
  3426                           ;lorawan.c: 662: loRa.macStatus.channelsModified = 0;
  3427  009DC6  0102               	movlb	2	; () banked
  3428  009DC8  9708               	bcf	(_loRa+3)& (0+255),3,b
  3429                           
  3430                           ;lorawan.c: 663: loRa.macStatus.txPowerModified = 0;
  3431  009DCA  9908               	bcf	(_loRa+3)& (0+255),4,b
  3432                           
  3433                           ;lorawan.c: 664: loRa.macStatus.nbRepModified = 0;
  3434  009DCC  9B08               	bcf	(_loRa+3)& (0+255),5,b
  3435                           
  3436                           ;lorawan.c: 665: loRa.macStatus.prescalerModified = 0;
  3437  009DCE  9D08               	bcf	(_loRa+3)& (0+255),6,b
  3438                           
  3439                           ;lorawan.c: 666: loRa.macStatus.secondReceiveWindowModified = 0;
  3440  009DD0  9F08               	bcf	(_loRa+3)& (0+255),7,b
  3441                           
  3442                           ;lorawan.c: 667: loRa.macStatus.rxTimingSetup = 0;
  3443  009DD2  9109               	bcf	(_loRa+4)& (0+255),0,b
  3444                           
  3445                           ;lorawan.c: 669: return status;
  3446  009DD4  C064  F060         	movff	LORAWAN_GetStatus@status,?_LORAWAN_GetStatus
  3447  009DD8  C065  F061         	movff	LORAWAN_GetStatus@status+1,?_LORAWAN_GetStatus+1
  3448  009DDC  C066  F062         	movff	LORAWAN_GetStatus@status+2,?_LORAWAN_GetStatus+2
  3449  009DE0  C067  F063         	movff	LORAWAN_GetStatus@status+3,?_LORAWAN_GetStatus+3
  3450                           
  3451                           ; BSR set to: 2
  3452  009DE4  0012               	return		;funcret
  3453  009DE6                     __end_of_LORAWAN_GetStatus:
  3454                           	opt callstack 0
  3455                           
  3456 ;; *************** function _acuadoriApp *****************
  3457 ;; Defined at:
  3458 ;;		line 34 in file "acuadori.c"
  3459 ;; Parameters:    Size  Location     Type
  3460 ;;		None
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;		None
  3463 ;; Return value:  Size  Location     Type
  3464 ;;                  1    wreg      void 
  3465 ;; Registers used:
  3466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3467 ;; Tracked objects:
  3468 ;;		On entry : 0/0
  3469 ;;		On exit  : 0/0
  3470 ;;		Unchanged: 0/0
  3471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;Total ram usage:        0 bytes
  3477 ;; Hardware stack levels used:    1
  3478 ;; Hardware stack levels required when called:   20
  3479 ;; This function calls:
  3480 ;;		_GPIODigitalWrite
  3481 ;;		_LORAWAN_GetUplinkCounter
  3482 ;;		_LORAWAN_SetUplinkCounter
  3483 ;;		_impedenceAcquisition
  3484 ;;		_leafSensAcquisition
  3485 ;;		_lightSensAcquisition
  3486 ;;		_memcpy
  3487 ;;		_rn2483_delaysec
  3488 ;;		_sendValue
  3489 ;;		_strncat
  3490 ;;		_tempSensAcquisition
  3491 ;; This function is called by:
  3492 ;;		_main
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text3
  3497  00220A                     __ptext3:
  3498                           	opt callstack 0
  3499  00220A                     _acuadoriApp:
  3500                           	opt callstack 10
  3501                           
  3502                           ;acuadori.c: 36: memcpy(sensorsString, clearString, 10);
  3503                           
  3504                           ; BSR set to: 2
  3505                           ;incstack = 0
  3506  00220A  0EA0               	movlw	low _sensorsString
  3507  00220C  0100               	movlb	0	; () banked
  3508  00220E  6F60               	movwf	memcpy@d1& (0+255),b
  3509  002210  0E03               	movlw	high _sensorsString
  3510  002212  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3511  002214  0E00               	movlw	low _clearString
  3512  002216  6F62               	movwf	memcpy@s1& (0+255),b
  3513  002218  0E05               	movlw	high _clearString
  3514  00221A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  3515  00221C  0E00               	movlw	0
  3516  00221E  6F65               	movwf	(memcpy@n+1)& (0+255),b
  3517  002220  0E0A               	movlw	10
  3518  002222  6F64               	movwf	memcpy@n& (0+255),b
  3519  002224  EC2F  F048         	call	_memcpy	;wreg free
  3520                           
  3521                           ;acuadori.c: 37: sensorsStringLength = 0;
  3522  002228  0E00               	movlw	0
  3523  00222A  0101               	movlb	1	; () banked
  3524  00222C  6FF8               	movwf	_sensorsStringLength& (0+255),b
  3525                           
  3526                           ; BSR set to: 1
  3527                           ;acuadori.c: 40: GPIODigitalWrite(0x16, 0);
  3528  00222E  0E00               	movlw	0
  3529  002230  0100               	movlb	0	; () banked
  3530  002232  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3531  002234  0E16               	movlw	22
  3532  002236  ECE7  F036         	call	_GPIODigitalWrite
  3533                           
  3534                           ;acuadori.c: 43: GPIODigitalWrite(0x04, 0);
  3535  00223A  0E00               	movlw	0
  3536  00223C  0100               	movlb	0	; () banked
  3537  00223E  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3538  002240  0E04               	movlw	4
  3539  002242  ECE7  F036         	call	_GPIODigitalWrite
  3540                           
  3541                           ;acuadori.c: 44: GPIODigitalWrite(0x00, 0);
  3542  002246  0E00               	movlw	0
  3543  002248  0100               	movlb	0	; () banked
  3544  00224A  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3545  00224C  0E00               	movlw	0
  3546  00224E  ECE7  F036         	call	_GPIODigitalWrite
  3547                           
  3548                           ;acuadori.c: 45: rn2483_delaysec(1);
  3549  002252  0E00               	movlw	0
  3550  002254  0100               	movlb	0	; () banked
  3551  002256  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3552  002258  0E01               	movlw	1
  3553  00225A  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3554  00225C  EC67  F04D         	call	_rn2483_delaysec	;wreg free
  3555                           
  3556                           ;acuadori.c: 46: leafSensAcquisition();
  3557  002260  EC24  F051         	call	_leafSensAcquisition	;wreg free
  3558                           
  3559                           ;acuadori.c: 47: strncat(sensorsString, "A", 1);
  3560  002264  0EA0               	movlw	low _sensorsString
  3561  002266  0100               	movlb	0	; () banked
  3562  002268  6F60               	movwf	strncat@to& (0+255),b
  3563  00226A  0E03               	movlw	high _sensorsString
  3564  00226C  6F61               	movwf	(strncat@to+1)& (0+255),b
  3565  00226E  0EF5               	movlw	low STR_1
  3566  002270  6F62               	movwf	strncat@from& (0+255),b
  3567  002272  0EFF               	movlw	high STR_1
  3568  002274  6F63               	movwf	(strncat@from+1)& (0+255),b
  3569  002276  0E00               	movlw	0
  3570  002278  6F65               	movwf	(strncat@size+1)& (0+255),b
  3571  00227A  0E01               	movlw	1
  3572  00227C  6F64               	movwf	strncat@size& (0+255),b
  3573  00227E  EC97  F042         	call	_strncat	;wreg free
  3574                           
  3575                           ;acuadori.c: 48: strncat(sensorsString, stringValue, stringValueLength);
  3576  002282  0EA0               	movlw	low _sensorsString
  3577  002284  0100               	movlb	0	; () banked
  3578  002286  6F60               	movwf	strncat@to& (0+255),b
  3579  002288  0E03               	movlw	high _sensorsString
  3580  00228A  6F61               	movwf	(strncat@to+1)& (0+255),b
  3581  00228C  0E6F               	movlw	low _stringValue
  3582  00228E  6F62               	movwf	strncat@from& (0+255),b
  3583  002290  0E01               	movlw	high _stringValue
  3584  002292  6F63               	movwf	(strncat@from+1)& (0+255),b
  3585  002294  C1F9  F064         	movff	_stringValueLength,strncat@size
  3586  002298  6B65               	clrf	(strncat@size+1)& (0+255),b
  3587  00229A  EC97  F042         	call	_strncat	;wreg free
  3588                           
  3589                           ;acuadori.c: 49: sensorsStringLength += 1 + stringValueLength;
  3590  00229E  0101               	movlb	1	; () banked
  3591  0022A0  29F9               	incf	_stringValueLength& (0+255),w,b
  3592  0022A2  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3593                           
  3594                           ; BSR set to: 1
  3595                           ;acuadori.c: 52: GPIODigitalWrite(0x04, 0);
  3596  0022A4  0E00               	movlw	0
  3597  0022A6  0100               	movlb	0	; () banked
  3598  0022A8  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3599  0022AA  0E04               	movlw	4
  3600  0022AC  ECE7  F036         	call	_GPIODigitalWrite
  3601                           
  3602                           ;acuadori.c: 53: GPIODigitalWrite(0x00, 1);
  3603  0022B0  0E01               	movlw	1
  3604  0022B2  0100               	movlb	0	; () banked
  3605  0022B4  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3606  0022B6  0E00               	movlw	0
  3607  0022B8  ECE7  F036         	call	_GPIODigitalWrite
  3608                           
  3609                           ;acuadori.c: 54: rn2483_delaysec(1);
  3610  0022BC  0E00               	movlw	0
  3611  0022BE  0100               	movlb	0	; () banked
  3612  0022C0  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3613  0022C2  0E01               	movlw	1
  3614  0022C4  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3615  0022C6  EC67  F04D         	call	_rn2483_delaysec	;wreg free
  3616                           
  3617                           ;acuadori.c: 55: leafSensAcquisition();
  3618  0022CA  EC24  F051         	call	_leafSensAcquisition	;wreg free
  3619                           
  3620                           ;acuadori.c: 56: strncat(sensorsString, "B", 1);
  3621  0022CE  0EA0               	movlw	low _sensorsString
  3622  0022D0  0100               	movlb	0	; () banked
  3623  0022D2  6F60               	movwf	strncat@to& (0+255),b
  3624  0022D4  0E03               	movlw	high _sensorsString
  3625  0022D6  6F61               	movwf	(strncat@to+1)& (0+255),b
  3626  0022D8  0EF7               	movlw	low STR_2
  3627  0022DA  6F62               	movwf	strncat@from& (0+255),b
  3628  0022DC  0EFF               	movlw	high STR_2
  3629  0022DE  6F63               	movwf	(strncat@from+1)& (0+255),b
  3630  0022E0  0E00               	movlw	0
  3631  0022E2  6F65               	movwf	(strncat@size+1)& (0+255),b
  3632  0022E4  0E01               	movlw	1
  3633  0022E6  6F64               	movwf	strncat@size& (0+255),b
  3634  0022E8  EC97  F042         	call	_strncat	;wreg free
  3635                           
  3636                           ;acuadori.c: 57: strncat(sensorsString, stringValue, stringValueLength);
  3637  0022EC  0EA0               	movlw	low _sensorsString
  3638  0022EE  0100               	movlb	0	; () banked
  3639  0022F0  6F60               	movwf	strncat@to& (0+255),b
  3640  0022F2  0E03               	movlw	high _sensorsString
  3641  0022F4  6F61               	movwf	(strncat@to+1)& (0+255),b
  3642  0022F6  0E6F               	movlw	low _stringValue
  3643  0022F8  6F62               	movwf	strncat@from& (0+255),b
  3644  0022FA  0E01               	movlw	high _stringValue
  3645  0022FC  6F63               	movwf	(strncat@from+1)& (0+255),b
  3646  0022FE  C1F9  F064         	movff	_stringValueLength,strncat@size
  3647  002302  6B65               	clrf	(strncat@size+1)& (0+255),b
  3648  002304  EC97  F042         	call	_strncat	;wreg free
  3649                           
  3650                           ;acuadori.c: 58: sensorsStringLength += 1 + stringValueLength;
  3651  002308  0101               	movlb	1	; () banked
  3652  00230A  29F9               	incf	_stringValueLength& (0+255),w,b
  3653  00230C  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3654                           
  3655                           ; BSR set to: 1
  3656                           ;acuadori.c: 61: GPIODigitalWrite(0x04, 1);
  3657  00230E  0E01               	movlw	1
  3658  002310  0100               	movlb	0	; () banked
  3659  002312  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3660  002314  0E04               	movlw	4
  3661  002316  ECE7  F036         	call	_GPIODigitalWrite
  3662                           
  3663                           ;acuadori.c: 62: GPIODigitalWrite(0x00, 0);
  3664  00231A  0E00               	movlw	0
  3665  00231C  0100               	movlb	0	; () banked
  3666  00231E  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3667  002320  0E00               	movlw	0
  3668  002322  ECE7  F036         	call	_GPIODigitalWrite
  3669                           
  3670                           ;acuadori.c: 64: clip = 1;
  3671  002326  0E01               	movlw	1
  3672  002328  0101               	movlb	1	; () banked
  3673  00232A  6F23               	movwf	_clip& (0+255),b
  3674                           
  3675                           ; BSR set to: 1
  3676                           ;acuadori.c: 66: rn2483_delaysec(10);
  3677  00232C  0E00               	movlw	0
  3678  00232E  0100               	movlb	0	; () banked
  3679  002330  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3680  002332  0E0A               	movlw	10
  3681  002334  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3682  002336  EC67  F04D         	call	_rn2483_delaysec	;wreg free
  3683                           
  3684                           ;acuadori.c: 67: tempSensAcquisition();
  3685  00233A  EC5F  F048         	call	_tempSensAcquisition	;wreg free
  3686                           
  3687                           ;acuadori.c: 68: strncat(sensorsString, "T", 1);
  3688  00233E  0EA0               	movlw	low _sensorsString
  3689  002340  0100               	movlb	0	; () banked
  3690  002342  6F60               	movwf	strncat@to& (0+255),b
  3691  002344  0E03               	movlw	high _sensorsString
  3692  002346  6F61               	movwf	(strncat@to+1)& (0+255),b
  3693  002348  0EFD               	movlw	low STR_3
  3694  00234A  6F62               	movwf	strncat@from& (0+255),b
  3695  00234C  0EFF               	movlw	high STR_3
  3696  00234E  6F63               	movwf	(strncat@from+1)& (0+255),b
  3697  002350  0E00               	movlw	0
  3698  002352  6F65               	movwf	(strncat@size+1)& (0+255),b
  3699  002354  0E01               	movlw	1
  3700  002356  6F64               	movwf	strncat@size& (0+255),b
  3701  002358  EC97  F042         	call	_strncat	;wreg free
  3702                           
  3703                           ;acuadori.c: 69: strncat(sensorsString, stringValue, stringValueLength);
  3704  00235C  0EA0               	movlw	low _sensorsString
  3705  00235E  0100               	movlb	0	; () banked
  3706  002360  6F60               	movwf	strncat@to& (0+255),b
  3707  002362  0E03               	movlw	high _sensorsString
  3708  002364  6F61               	movwf	(strncat@to+1)& (0+255),b
  3709  002366  0E6F               	movlw	low _stringValue
  3710  002368  6F62               	movwf	strncat@from& (0+255),b
  3711  00236A  0E01               	movlw	high _stringValue
  3712  00236C  6F63               	movwf	(strncat@from+1)& (0+255),b
  3713  00236E  C1F9  F064         	movff	_stringValueLength,strncat@size
  3714  002372  6B65               	clrf	(strncat@size+1)& (0+255),b
  3715  002374  EC97  F042         	call	_strncat	;wreg free
  3716                           
  3717                           ;acuadori.c: 70: sensorsStringLength += 1 + stringValueLength;
  3718  002378  0101               	movlb	1	; () banked
  3719  00237A  29F9               	incf	_stringValueLength& (0+255),w,b
  3720  00237C  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3721                           
  3722                           ; BSR set to: 1
  3723                           ;acuadori.c: 73: lightSensAcquisition();
  3724  00237E  EC34  F04B         	call	_lightSensAcquisition	;wreg free
  3725                           
  3726                           ;acuadori.c: 74: strncat(sensorsString, "L", 1);
  3727  002382  0EA0               	movlw	low _sensorsString
  3728  002384  0100               	movlb	0	; () banked
  3729  002386  6F60               	movwf	strncat@to& (0+255),b
  3730  002388  0E03               	movlw	high _sensorsString
  3731  00238A  6F61               	movwf	(strncat@to+1)& (0+255),b
  3732  00238C  0EFB               	movlw	low STR_4
  3733  00238E  6F62               	movwf	strncat@from& (0+255),b
  3734  002390  0EFF               	movlw	high STR_4
  3735  002392  6F63               	movwf	(strncat@from+1)& (0+255),b
  3736  002394  0E00               	movlw	0
  3737  002396  6F65               	movwf	(strncat@size+1)& (0+255),b
  3738  002398  0E01               	movlw	1
  3739  00239A  6F64               	movwf	strncat@size& (0+255),b
  3740  00239C  EC97  F042         	call	_strncat	;wreg free
  3741                           
  3742                           ;acuadori.c: 75: strncat(sensorsString, stringValue, stringValueLength);
  3743  0023A0  0EA0               	movlw	low _sensorsString
  3744  0023A2  0100               	movlb	0	; () banked
  3745  0023A4  6F60               	movwf	strncat@to& (0+255),b
  3746  0023A6  0E03               	movlw	high _sensorsString
  3747  0023A8  6F61               	movwf	(strncat@to+1)& (0+255),b
  3748  0023AA  0E6F               	movlw	low _stringValue
  3749  0023AC  6F62               	movwf	strncat@from& (0+255),b
  3750  0023AE  0E01               	movlw	high _stringValue
  3751  0023B0  6F63               	movwf	(strncat@from+1)& (0+255),b
  3752  0023B2  C1F9  F064         	movff	_stringValueLength,strncat@size
  3753  0023B6  6B65               	clrf	(strncat@size+1)& (0+255),b
  3754  0023B8  EC97  F042         	call	_strncat	;wreg free
  3755                           
  3756                           ;acuadori.c: 76: sensorsStringLength += 1 + stringValueLength;
  3757  0023BC  0101               	movlb	1	; () banked
  3758  0023BE  29F9               	incf	_stringValueLength& (0+255),w,b
  3759  0023C0  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3760                           
  3761                           ;acuadori.c: 79: impedenceAcquisition();
  3762  0023C2  EC3F  F04E         	call	_impedenceAcquisition	;wreg free
  3763                           
  3764                           ;acuadori.c: 81: strncat(sensorsString, "C", 1);
  3765  0023C6  0EA0               	movlw	low _sensorsString
  3766  0023C8  0100               	movlb	0	; () banked
  3767  0023CA  6F60               	movwf	strncat@to& (0+255),b
  3768  0023CC  0E03               	movlw	high _sensorsString
  3769  0023CE  6F61               	movwf	(strncat@to+1)& (0+255),b
  3770  0023D0  0EF9               	movlw	low STR_5
  3771  0023D2  6F62               	movwf	strncat@from& (0+255),b
  3772  0023D4  0EFF               	movlw	high STR_5
  3773  0023D6  6F63               	movwf	(strncat@from+1)& (0+255),b
  3774  0023D8  0E00               	movlw	0
  3775  0023DA  6F65               	movwf	(strncat@size+1)& (0+255),b
  3776  0023DC  0E01               	movlw	1
  3777  0023DE  6F64               	movwf	strncat@size& (0+255),b
  3778  0023E0  EC97  F042         	call	_strncat	;wreg free
  3779                           
  3780                           ;acuadori.c: 82: strncat(sensorsString, stringValue, stringValueLength);
  3781  0023E4  0EA0               	movlw	low _sensorsString
  3782  0023E6  0100               	movlb	0	; () banked
  3783  0023E8  6F60               	movwf	strncat@to& (0+255),b
  3784  0023EA  0E03               	movlw	high _sensorsString
  3785  0023EC  6F61               	movwf	(strncat@to+1)& (0+255),b
  3786  0023EE  0E6F               	movlw	low _stringValue
  3787  0023F0  6F62               	movwf	strncat@from& (0+255),b
  3788  0023F2  0E01               	movlw	high _stringValue
  3789  0023F4  6F63               	movwf	(strncat@from+1)& (0+255),b
  3790  0023F6  C1F9  F064         	movff	_stringValueLength,strncat@size
  3791  0023FA  6B65               	clrf	(strncat@size+1)& (0+255),b
  3792  0023FC  EC97  F042         	call	_strncat	;wreg free
  3793                           
  3794                           ;acuadori.c: 83: sensorsStringLength += 1 + stringValueLength;
  3795  002400  0101               	movlb	1	; () banked
  3796  002402  29F9               	incf	_stringValueLength& (0+255),w,b
  3797  002404  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3798                           
  3799                           ; BSR set to: 1
  3800                           ;acuadori.c: 86: GPIODigitalWrite(0x04, 1);
  3801  002406  0E01               	movlw	1
  3802  002408  0100               	movlb	0	; () banked
  3803  00240A  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3804  00240C  0E04               	movlw	4
  3805  00240E  ECE7  F036         	call	_GPIODigitalWrite
  3806                           
  3807                           ;acuadori.c: 87: GPIODigitalWrite(0x00, 1);
  3808  002412  0E01               	movlw	1
  3809  002414  0100               	movlb	0	; () banked
  3810  002416  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3811  002418  0E00               	movlw	0
  3812  00241A  ECE7  F036         	call	_GPIODigitalWrite
  3813                           
  3814                           ;acuadori.c: 88: clip = 2;
  3815  00241E  0E02               	movlw	2
  3816  002420  0101               	movlb	1	; () banked
  3817  002422  6F23               	movwf	_clip& (0+255),b
  3818                           
  3819                           ; BSR set to: 1
  3820                           ;acuadori.c: 89: rn2483_delaysec(10);
  3821  002424  0E00               	movlw	0
  3822  002426  0100               	movlb	0	; () banked
  3823  002428  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
  3824  00242A  0E0A               	movlw	10
  3825  00242C  6F60               	movwf	rn2483_delaysec@length& (0+255),b
  3826  00242E  EC67  F04D         	call	_rn2483_delaysec	;wreg free
  3827                           
  3828                           ;acuadori.c: 90: tempSensAcquisition();
  3829  002432  EC5F  F048         	call	_tempSensAcquisition	;wreg free
  3830                           
  3831                           ;acuadori.c: 91: strncat(sensorsString, "T", 1);
  3832  002436  0EA0               	movlw	low _sensorsString
  3833  002438  0100               	movlb	0	; () banked
  3834  00243A  6F60               	movwf	strncat@to& (0+255),b
  3835  00243C  0E03               	movlw	high _sensorsString
  3836  00243E  6F61               	movwf	(strncat@to+1)& (0+255),b
  3837  002440  0EFD               	movlw	low STR_3
  3838  002442  6F62               	movwf	strncat@from& (0+255),b
  3839  002444  0EFF               	movlw	high STR_3
  3840  002446  6F63               	movwf	(strncat@from+1)& (0+255),b
  3841  002448  0E00               	movlw	0
  3842  00244A  6F65               	movwf	(strncat@size+1)& (0+255),b
  3843  00244C  0E01               	movlw	1
  3844  00244E  6F64               	movwf	strncat@size& (0+255),b
  3845  002450  EC97  F042         	call	_strncat	;wreg free
  3846                           
  3847                           ;acuadori.c: 92: strncat(sensorsString, stringValue, stringValueLength);
  3848  002454  0EA0               	movlw	low _sensorsString
  3849  002456  0100               	movlb	0	; () banked
  3850  002458  6F60               	movwf	strncat@to& (0+255),b
  3851  00245A  0E03               	movlw	high _sensorsString
  3852  00245C  6F61               	movwf	(strncat@to+1)& (0+255),b
  3853  00245E  0E6F               	movlw	low _stringValue
  3854  002460  6F62               	movwf	strncat@from& (0+255),b
  3855  002462  0E01               	movlw	high _stringValue
  3856  002464  6F63               	movwf	(strncat@from+1)& (0+255),b
  3857  002466  C1F9  F064         	movff	_stringValueLength,strncat@size
  3858  00246A  6B65               	clrf	(strncat@size+1)& (0+255),b
  3859  00246C  EC97  F042         	call	_strncat	;wreg free
  3860                           
  3861                           ;acuadori.c: 93: sensorsStringLength += 1 + stringValueLength;
  3862  002470  0101               	movlb	1	; () banked
  3863  002472  29F9               	incf	_stringValueLength& (0+255),w,b
  3864  002474  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3865                           
  3866                           ; BSR set to: 1
  3867                           ;acuadori.c: 96: lightSensAcquisition();
  3868  002476  EC34  F04B         	call	_lightSensAcquisition	;wreg free
  3869                           
  3870                           ;acuadori.c: 97: strncat(sensorsString, "L", 1);
  3871  00247A  0EA0               	movlw	low _sensorsString
  3872  00247C  0100               	movlb	0	; () banked
  3873  00247E  6F60               	movwf	strncat@to& (0+255),b
  3874  002480  0E03               	movlw	high _sensorsString
  3875  002482  6F61               	movwf	(strncat@to+1)& (0+255),b
  3876  002484  0EFB               	movlw	low STR_4
  3877  002486  6F62               	movwf	strncat@from& (0+255),b
  3878  002488  0EFF               	movlw	high STR_4
  3879  00248A  6F63               	movwf	(strncat@from+1)& (0+255),b
  3880  00248C  0E00               	movlw	0
  3881  00248E  6F65               	movwf	(strncat@size+1)& (0+255),b
  3882  002490  0E01               	movlw	1
  3883  002492  6F64               	movwf	strncat@size& (0+255),b
  3884  002494  EC97  F042         	call	_strncat	;wreg free
  3885                           
  3886                           ;acuadori.c: 98: strncat(sensorsString, stringValue, stringValueLength);
  3887  002498  0EA0               	movlw	low _sensorsString
  3888  00249A  0100               	movlb	0	; () banked
  3889  00249C  6F60               	movwf	strncat@to& (0+255),b
  3890  00249E  0E03               	movlw	high _sensorsString
  3891  0024A0  6F61               	movwf	(strncat@to+1)& (0+255),b
  3892  0024A2  0E6F               	movlw	low _stringValue
  3893  0024A4  6F62               	movwf	strncat@from& (0+255),b
  3894  0024A6  0E01               	movlw	high _stringValue
  3895  0024A8  6F63               	movwf	(strncat@from+1)& (0+255),b
  3896  0024AA  C1F9  F064         	movff	_stringValueLength,strncat@size
  3897  0024AE  6B65               	clrf	(strncat@size+1)& (0+255),b
  3898  0024B0  EC97  F042         	call	_strncat	;wreg free
  3899                           
  3900                           ;acuadori.c: 99: sensorsStringLength += 1 + stringValueLength;
  3901  0024B4  0101               	movlb	1	; () banked
  3902  0024B6  29F9               	incf	_stringValueLength& (0+255),w,b
  3903  0024B8  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3904                           
  3905                           ; BSR set to: 1
  3906                           ;acuadori.c: 102: impedenceAcquisition();
  3907  0024BA  EC3F  F04E         	call	_impedenceAcquisition	;wreg free
  3908                           
  3909                           ;acuadori.c: 104: strncat(sensorsString, "C", 1);
  3910  0024BE  0EA0               	movlw	low _sensorsString
  3911  0024C0  0100               	movlb	0	; () banked
  3912  0024C2  6F60               	movwf	strncat@to& (0+255),b
  3913  0024C4  0E03               	movlw	high _sensorsString
  3914  0024C6  6F61               	movwf	(strncat@to+1)& (0+255),b
  3915  0024C8  0EF9               	movlw	low STR_5
  3916  0024CA  6F62               	movwf	strncat@from& (0+255),b
  3917  0024CC  0EFF               	movlw	high STR_5
  3918  0024CE  6F63               	movwf	(strncat@from+1)& (0+255),b
  3919  0024D0  0E00               	movlw	0
  3920  0024D2  6F65               	movwf	(strncat@size+1)& (0+255),b
  3921  0024D4  0E01               	movlw	1
  3922  0024D6  6F64               	movwf	strncat@size& (0+255),b
  3923  0024D8  EC97  F042         	call	_strncat	;wreg free
  3924                           
  3925                           ;acuadori.c: 105: strncat(sensorsString, stringValue, stringValueLength);
  3926  0024DC  0EA0               	movlw	low _sensorsString
  3927  0024DE  0100               	movlb	0	; () banked
  3928  0024E0  6F60               	movwf	strncat@to& (0+255),b
  3929  0024E2  0E03               	movlw	high _sensorsString
  3930  0024E4  6F61               	movwf	(strncat@to+1)& (0+255),b
  3931  0024E6  0E6F               	movlw	low _stringValue
  3932  0024E8  6F62               	movwf	strncat@from& (0+255),b
  3933  0024EA  0E01               	movlw	high _stringValue
  3934  0024EC  6F63               	movwf	(strncat@from+1)& (0+255),b
  3935  0024EE  C1F9  F064         	movff	_stringValueLength,strncat@size
  3936  0024F2  6B65               	clrf	(strncat@size+1)& (0+255),b
  3937  0024F4  EC97  F042         	call	_strncat	;wreg free
  3938                           
  3939                           ;acuadori.c: 106: sensorsStringLength += 1 + stringValueLength;
  3940  0024F8  0101               	movlb	1	; () banked
  3941  0024FA  29F9               	incf	_stringValueLength& (0+255),w,b
  3942  0024FC  27F8               	addwf	_sensorsStringLength& (0+255),f,b
  3943                           
  3944                           ; BSR set to: 1
  3945                           ;acuadori.c: 109: GPIODigitalWrite(0x16, 1);
  3946  0024FE  0E01               	movlw	1
  3947  002500  0100               	movlb	0	; () banked
  3948  002502  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
  3949  002504  0E16               	movlw	22
  3950  002506  ECE7  F036         	call	_GPIODigitalWrite
  3951                           
  3952                           ;acuadori.c: 110: upCnt = LORAWAN_GetUplinkCounter();
  3953  00250A  EC91  F053         	call	_LORAWAN_GetUplinkCounter	;wreg free
  3954  00250E  C060  F106         	movff	?_LORAWAN_GetUplinkCounter,_upCnt
  3955  002512  C061  F107         	movff	?_LORAWAN_GetUplinkCounter+1,_upCnt+1
  3956  002516  C062  F108         	movff	?_LORAWAN_GetUplinkCounter+2,_upCnt+2
  3957  00251A  C063  F109         	movff	?_LORAWAN_GetUplinkCounter+3,_upCnt+3
  3958                           
  3959                           ;acuadori.c: 111: sendValue();
  3960  00251E  EC9C  F047         	call	_sendValue	;wreg free
  3961                           
  3962                           ;acuadori.c: 112: LORAWAN_SetUplinkCounter(upCnt);
  3963  002522  C106  F060         	movff	_upCnt,LORAWAN_SetUplinkCounter@ctr
  3964  002526  C107  F061         	movff	_upCnt+1,LORAWAN_SetUplinkCounter@ctr+1
  3965  00252A  C108  F062         	movff	_upCnt+2,LORAWAN_SetUplinkCounter@ctr+2
  3966  00252E  C109  F063         	movff	_upCnt+3,LORAWAN_SetUplinkCounter@ctr+3
  3967  002532  EC88  F053         	call	_LORAWAN_SetUplinkCounter	;wreg free
  3968                           
  3969                           ;acuadori.c: 113: sendValue();
  3970  002536  EC9C  F047         	call	_sendValue	;wreg free
  3971  00253A  0012               	return		;funcret
  3972  00253C                     __end_of_acuadoriApp:
  3973                           	opt callstack 0
  3974                           
  3975 ;; *************** function _tempSensAcquisition *****************
  3976 ;; Defined at:
  3977 ;;		line 237 in file "acuadori.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;		None
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  temp            2  102[BANK0 ] unsigned int 
  3982 ;;  value           2  100[BANK0 ] unsigned int 
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;Total ram usage:        4 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:   11
  3999 ;; This function calls:
  4000 ;;		_GPIOAverageRead
  4001 ;;		_adaptString
  4002 ;;		_pointAddition
  4003 ;;		_tempConversion
  4004 ;;		_uint16ToString
  4005 ;; This function is called by:
  4006 ;;		_acuadoriApp
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010                           	psect	text4
  4011  0090BE                     __ptext4:
  4012                           	opt callstack 0
  4013  0090BE                     _tempSensAcquisition:
  4014                           	opt callstack 18
  4015                           
  4016                           ;acuadori.c: 239: uint16_t value;;acuadori.c: 240: uint16_t temp;;acuadori.c: 242: value
      +                           = GPIOAverageRead(0x01);
  4017                           
  4018                           ;incstack = 0
  4019  0090BE  0E01               	movlw	1
  4020  0090C0  EC55  F044         	call	_GPIOAverageRead
  4021  0090C4  C06D  F0C4         	movff	?_GPIOAverageRead,tempSensAcquisition@value
  4022  0090C8  C06E  F0C5         	movff	?_GPIOAverageRead+1,tempSensAcquisition@value+1
  4023                           
  4024                           ;acuadori.c: 243: temp = tempConversion(value);
  4025  0090CC  C0C4  F0B6         	movff	tempSensAcquisition@value,tempConversion@adcValue
  4026  0090D0  C0C5  F0B7         	movff	tempSensAcquisition@value+1,tempConversion@adcValue+1
  4027  0090D4  EC37  F014         	call	_tempConversion	;wreg free
  4028  0090D8  C0B6  F0C6         	movff	?_tempConversion,tempSensAcquisition@temp
  4029  0090DC  C0B7  F0C7         	movff	?_tempConversion+1,tempSensAcquisition@temp+1
  4030                           
  4031                           ;acuadori.c: 245: uint16ToString(temp, stringValue);
  4032  0090E0  C0C6  F0A5         	movff	tempSensAcquisition@temp,uint16ToString@value
  4033  0090E4  C0C7  F0A6         	movff	tempSensAcquisition@temp+1,uint16ToString@value+1
  4034  0090E8  0E6F               	movlw	low _stringValue
  4035  0090EA  0100               	movlb	0	; () banked
  4036  0090EC  6FA7               	movwf	uint16ToString@output& (0+255),b
  4037  0090EE  0E01               	movlw	high _stringValue
  4038  0090F0  6FA8               	movwf	(uint16ToString@output+1)& (0+255),b
  4039  0090F2  EC87  F02C         	call	_uint16ToString	;wreg free
  4040                           
  4041                           ;acuadori.c: 246: pointAddition(stringValue);
  4042  0090F6  0E6F               	movlw	low _stringValue
  4043  0090F8  0100               	movlb	0	; () banked
  4044  0090FA  6F60               	movwf	pointAddition@element& (0+255),b
  4045  0090FC  0E01               	movlw	high _stringValue
  4046  0090FE  6F61               	movwf	(pointAddition@element+1)& (0+255),b
  4047  009100  ECF0  F04B         	call	_pointAddition	;wreg free
  4048                           
  4049                           ;acuadori.c: 247: stringValueLength = adaptString(stringValue, 5);
  4050  009104  0E6F               	movlw	low _stringValue
  4051  009106  0100               	movlb	0	; () banked
  4052  009108  6F60               	movwf	adaptString@string& (0+255),b
  4053  00910A  0E01               	movlw	high _stringValue
  4054  00910C  6F61               	movwf	(adaptString@string+1)& (0+255),b
  4055  00910E  0E05               	movlw	5
  4056  009110  6F62               	movwf	adaptString@length& (0+255),b
  4057  009112  ECCE  F044         	call	_adaptString	;wreg free
  4058  009116  0101               	movlb	1	; () banked
  4059  009118  6FF9               	movwf	_stringValueLength& (0+255),b
  4060                           
  4061                           ; BSR set to: 1
  4062  00911A  0012               	return		;funcret
  4063  00911C                     __end_of_tempSensAcquisition:
  4064                           	opt callstack 0
  4065                           
  4066 ;; *************** function _tempConversion *****************
  4067 ;; Defined at:
  4068 ;;		line 254 in file "acuadori.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  adcValue        2   86[BANK0 ] unsigned int 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  temp            4   96[BANK0 ] float 
  4073 ;;  val             4   92[BANK0 ] float 
  4074 ;;  rTemp           2    0        unsigned int 
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  2   86[BANK0 ] unsigned int 
  4077 ;; Registers used:
  4078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;Total ram usage:       14 bytes
  4089 ;; Hardware stack levels used:    1
  4090 ;; Hardware stack levels required when called:   10
  4091 ;; This function calls:
  4092 ;;		___fladd
  4093 ;;		___fldiv
  4094 ;;		___flmul
  4095 ;;		___flsub
  4096 ;;		___fltol
  4097 ;;		___xxtofl
  4098 ;;		_log
  4099 ;; This function is called by:
  4100 ;;		_tempSensAcquisition
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text5
  4105  00286E                     __ptext5:
  4106                           	opt callstack 0
  4107  00286E                     _tempConversion:
  4108                           	opt callstack 18
  4109                           
  4110                           ;acuadori.c: 255: float val;;acuadori.c: 256: uint16_t rTemp;;acuadori.c: 257: float tem
      +                          p;;acuadori.c: 258: val = 3.3 * adcValue/1023;
  4111                           
  4112                           ; BSR set to: 1
  4113                           ;incstack = 0
  4114  00286E  0E33               	movlw	51
  4115  002870  0100               	movlb	0	; () banked
  4116  002872  6F88               	movwf	___flmul@a& (0+255),b
  4117  002874  0E33               	movlw	51
  4118  002876  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4119  002878  0E53               	movlw	83
  4120  00287A  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4121  00287C  0E40               	movlw	64
  4122  00287E  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4123  002880  C0B6  F060         	movff	tempConversion@adcValue,___xxtofl@val
  4124  002884  C0B7  F061         	movff	tempConversion@adcValue+1,___xxtofl@val+1
  4125  002888  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
  4126  00288A  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
  4127  00288C  0E00               	movlw	0
  4128  00288E  ECE5  F02B         	call	___xxtofl
  4129  002892  C060  F084         	movff	?___xxtofl,___flmul@b
  4130  002896  C061  F085         	movff	?___xxtofl+1,___flmul@b+1
  4131  00289A  C062  F086         	movff	?___xxtofl+2,___flmul@b+2
  4132  00289E  C063  F087         	movff	?___xxtofl+3,___flmul@b+3
  4133  0028A2  EC5B  F00F         	call	___flmul	;wreg free
  4134  0028A6  C084  F09D         	movff	?___flmul,___fldiv@b
  4135  0028AA  C085  F09E         	movff	?___flmul+1,___fldiv@b+1
  4136  0028AE  C086  F09F         	movff	?___flmul+2,___fldiv@b+2
  4137  0028B2  C087  F0A0         	movff	?___flmul+3,___fldiv@b+3
  4138  0028B6  0E00               	movlw	0
  4139  0028B8  0100               	movlb	0	; () banked
  4140  0028BA  6FA1               	movwf	___fldiv@a& (0+255),b
  4141  0028BC  0EC0               	movlw	192
  4142  0028BE  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  4143  0028C0  0E7F               	movlw	127
  4144  0028C2  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  4145  0028C4  0E44               	movlw	68
  4146  0028C6  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  4147  0028C8  EC25  F01D         	call	___fldiv	;wreg free
  4148  0028CC  C09D  F0BC         	movff	?___fldiv,tempConversion@val
  4149  0028D0  C09E  F0BD         	movff	?___fldiv+1,tempConversion@val+1
  4150  0028D4  C09F  F0BE         	movff	?___fldiv+2,tempConversion@val+2
  4151  0028D8  C0A0  F0BF         	movff	?___fldiv+3,tempConversion@val+3
  4152                           
  4153                           ;acuadori.c: 259: val -= 0.02;
  4154  0028DC  C0BC  F084         	movff	tempConversion@val,___flsub@b
  4155  0028E0  C0BD  F085         	movff	tempConversion@val+1,___flsub@b+1
  4156  0028E4  C0BE  F086         	movff	tempConversion@val+2,___flsub@b+2
  4157  0028E8  C0BF  F087         	movff	tempConversion@val+3,___flsub@b+3
  4158  0028EC  0E0A               	movlw	10
  4159  0028EE  0100               	movlb	0	; () banked
  4160  0028F0  6F88               	movwf	___flsub@a& (0+255),b
  4161  0028F2  0ED7               	movlw	215
  4162  0028F4  6F89               	movwf	(___flsub@a+1)& (0+255),b
  4163  0028F6  0EA3               	movlw	163
  4164  0028F8  6F8A               	movwf	(___flsub@a+2)& (0+255),b
  4165  0028FA  0E3C               	movlw	60
  4166  0028FC  6F8B               	movwf	(___flsub@a+3)& (0+255),b
  4167  0028FE  ECCC  F04B         	call	___flsub	;wreg free
  4168  002902  C084  F0BC         	movff	?___flsub,tempConversion@val
  4169  002906  C085  F0BD         	movff	?___flsub+1,tempConversion@val+1
  4170  00290A  C086  F0BE         	movff	?___flsub+2,tempConversion@val+2
  4171  00290E  C087  F0BF         	movff	?___flsub+3,tempConversion@val+3
  4172                           
  4173                           ;acuadori.c: 260: temp = 499 * (val - 1.65) / (1.65 - 3.3);
  4174  002912  0E00               	movlw	0
  4175  002914  0100               	movlb	0	; () banked
  4176  002916  6F88               	movwf	___flmul@a& (0+255),b
  4177  002918  0E80               	movlw	128
  4178  00291A  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4179  00291C  0EF9               	movlw	249
  4180  00291E  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4181  002920  0E43               	movlw	67
  4182  002922  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4183  002924  0E33               	movlw	51
  4184  002926  6F78               	movwf	___fladd@a& (0+255),b
  4185  002928  0E33               	movlw	51
  4186  00292A  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4187  00292C  0ED3               	movlw	211
  4188  00292E  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4189  002930  0EBF               	movlw	191
  4190  002932  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4191  002934  C0BC  F074         	movff	tempConversion@val,___fladd@b
  4192  002938  C0BD  F075         	movff	tempConversion@val+1,___fladd@b+1
  4193  00293C  C0BE  F076         	movff	tempConversion@val+2,___fladd@b+2
  4194  002940  C0BF  F077         	movff	tempConversion@val+3,___fladd@b+3
  4195  002944  ECCD  F015         	call	___fladd	;wreg free
  4196  002948  C074  F084         	movff	?___fladd,___flmul@b
  4197  00294C  C075  F085         	movff	?___fladd+1,___flmul@b+1
  4198  002950  C076  F086         	movff	?___fladd+2,___flmul@b+2
  4199  002954  C077  F087         	movff	?___fladd+3,___flmul@b+3
  4200  002958  EC5B  F00F         	call	___flmul	;wreg free
  4201  00295C  C084  F09D         	movff	?___flmul,___fldiv@b
  4202  002960  C085  F09E         	movff	?___flmul+1,___fldiv@b+1
  4203  002964  C086  F09F         	movff	?___flmul+2,___fldiv@b+2
  4204  002968  C087  F0A0         	movff	?___flmul+3,___fldiv@b+3
  4205  00296C  0E33               	movlw	51
  4206  00296E  0100               	movlb	0	; () banked
  4207  002970  6FA1               	movwf	___fldiv@a& (0+255),b
  4208  002972  0E33               	movlw	51
  4209  002974  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  4210  002976  0ED3               	movlw	211
  4211  002978  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  4212  00297A  0EBF               	movlw	191
  4213  00297C  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  4214  00297E  EC25  F01D         	call	___fldiv	;wreg free
  4215  002982  C09D  F0C0         	movff	?___fldiv,tempConversion@temp
  4216  002986  C09E  F0C1         	movff	?___fldiv+1,tempConversion@temp+1
  4217  00298A  C09F  F0C2         	movff	?___fldiv+2,tempConversion@temp+2
  4218  00298E  C0A0  F0C3         	movff	?___fldiv+3,tempConversion@temp+3
  4219                           
  4220                           ;acuadori.c: 261: val = temp;
  4221  002992  C0C0  F0BC         	movff	tempConversion@temp,tempConversion@val
  4222  002996  C0C1  F0BD         	movff	tempConversion@temp+1,tempConversion@val+1
  4223  00299A  C0C2  F0BE         	movff	tempConversion@temp+2,tempConversion@val+2
  4224  00299E  C0C3  F0BF         	movff	tempConversion@temp+3,tempConversion@val+3
  4225                           
  4226                           ;acuadori.c: 262: val /=100;
  4227  0029A2  C0BC  F09D         	movff	tempConversion@val,___fldiv@b
  4228  0029A6  C0BD  F09E         	movff	tempConversion@val+1,___fldiv@b+1
  4229  0029AA  C0BE  F09F         	movff	tempConversion@val+2,___fldiv@b+2
  4230  0029AE  C0BF  F0A0         	movff	tempConversion@val+3,___fldiv@b+3
  4231  0029B2  0E00               	movlw	0
  4232  0029B4  0100               	movlb	0	; () banked
  4233  0029B6  6FA1               	movwf	___fldiv@a& (0+255),b
  4234  0029B8  0E00               	movlw	0
  4235  0029BA  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  4236  0029BC  0EC8               	movlw	200
  4237  0029BE  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  4238  0029C0  0E42               	movlw	66
  4239  0029C2  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  4240  0029C4  EC25  F01D         	call	___fldiv	;wreg free
  4241  0029C8  C09D  F0BC         	movff	?___fldiv,tempConversion@val
  4242  0029CC  C09E  F0BD         	movff	?___fldiv+1,tempConversion@val+1
  4243  0029D0  C09F  F0BE         	movff	?___fldiv+2,tempConversion@val+2
  4244  0029D4  C0A0  F0BF         	movff	?___fldiv+3,tempConversion@val+3
  4245                           
  4246                           ;acuadori.c: 263: temp = 0.074533 * log(val);
  4247  0029D8  C0BC  F0AD         	movff	tempConversion@val,log@x
  4248  0029DC  C0BD  F0AE         	movff	tempConversion@val+1,log@x+1
  4249  0029E0  C0BE  F0AF         	movff	tempConversion@val+2,log@x+2
  4250  0029E4  C0BF  F0B0         	movff	tempConversion@val+3,log@x+3
  4251  0029E8  EC48  F026         	call	_log	;wreg free
  4252  0029EC  C0AD  F0B8         	movff	?_log,_tempConversion$6793
  4253  0029F0  C0AE  F0B9         	movff	?_log+1,_tempConversion$6793+1
  4254  0029F4  C0AF  F0BA         	movff	?_log+2,_tempConversion$6793+2
  4255  0029F8  C0B0  F0BB         	movff	?_log+3,_tempConversion$6793+3
  4256                           
  4257                           ;acuadori.c: 263: temp = 0.074533 * log(val);
  4258  0029FC  C0B8  F084         	movff	_tempConversion$6793,___flmul@b
  4259  002A00  C0B9  F085         	movff	_tempConversion$6793+1,___flmul@b+1
  4260  002A04  C0BA  F086         	movff	_tempConversion$6793+2,___flmul@b+2
  4261  002A08  C0BB  F087         	movff	_tempConversion$6793+3,___flmul@b+3
  4262  002A0C  0EC2               	movlw	194
  4263  002A0E  0100               	movlb	0	; () banked
  4264  002A10  6F88               	movwf	___flmul@a& (0+255),b
  4265  002A12  0EA4               	movlw	164
  4266  002A14  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4267  002A16  0E98               	movlw	152
  4268  002A18  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4269  002A1A  0E3D               	movlw	61
  4270  002A1C  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4271  002A1E  EC5B  F00F         	call	___flmul	;wreg free
  4272  002A22  C084  F0C0         	movff	?___flmul,tempConversion@temp
  4273  002A26  C085  F0C1         	movff	?___flmul+1,tempConversion@temp+1
  4274  002A2A  C086  F0C2         	movff	?___flmul+2,tempConversion@temp+2
  4275  002A2E  C087  F0C3         	movff	?___flmul+3,tempConversion@temp+3
  4276                           
  4277                           ;acuadori.c: 264: temp++;
  4278  002A32  C0C0  F074         	movff	tempConversion@temp,___fladd@b
  4279  002A36  C0C1  F075         	movff	tempConversion@temp+1,___fladd@b+1
  4280  002A3A  C0C2  F076         	movff	tempConversion@temp+2,___fladd@b+2
  4281  002A3E  C0C3  F077         	movff	tempConversion@temp+3,___fladd@b+3
  4282  002A42  0E00               	movlw	0
  4283  002A44  0100               	movlb	0	; () banked
  4284  002A46  6F78               	movwf	___fladd@a& (0+255),b
  4285  002A48  0E00               	movlw	0
  4286  002A4A  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4287  002A4C  0E80               	movlw	128
  4288  002A4E  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4289  002A50  0E3F               	movlw	63
  4290  002A52  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4291  002A54  ECCD  F015         	call	___fladd	;wreg free
  4292  002A58  C074  F0C0         	movff	?___fladd,tempConversion@temp
  4293  002A5C  C075  F0C1         	movff	?___fladd+1,tempConversion@temp+1
  4294  002A60  C076  F0C2         	movff	?___fladd+2,tempConversion@temp+2
  4295  002A64  C077  F0C3         	movff	?___fladd+3,tempConversion@temp+3
  4296                           
  4297                           ;acuadori.c: 265: temp = 298.15 / temp;
  4298  002A68  0E33               	movlw	51
  4299  002A6A  0100               	movlb	0	; () banked
  4300  002A6C  6F9D               	movwf	___fldiv@b& (0+255),b
  4301  002A6E  0E13               	movlw	19
  4302  002A70  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  4303  002A72  0E95               	movlw	149
  4304  002A74  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  4305  002A76  0E43               	movlw	67
  4306  002A78  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  4307  002A7A  C0C0  F0A1         	movff	tempConversion@temp,___fldiv@a
  4308  002A7E  C0C1  F0A2         	movff	tempConversion@temp+1,___fldiv@a+1
  4309  002A82  C0C2  F0A3         	movff	tempConversion@temp+2,___fldiv@a+2
  4310  002A86  C0C3  F0A4         	movff	tempConversion@temp+3,___fldiv@a+3
  4311  002A8A  EC25  F01D         	call	___fldiv	;wreg free
  4312  002A8E  C09D  F0C0         	movff	?___fldiv,tempConversion@temp
  4313  002A92  C09E  F0C1         	movff	?___fldiv+1,tempConversion@temp+1
  4314  002A96  C09F  F0C2         	movff	?___fldiv+2,tempConversion@temp+2
  4315  002A9A  C0A0  F0C3         	movff	?___fldiv+3,tempConversion@temp+3
  4316                           
  4317                           ;acuadori.c: 266: temp -= 273.15;
  4318  002A9E  C0C0  F084         	movff	tempConversion@temp,___flsub@b
  4319  002AA2  C0C1  F085         	movff	tempConversion@temp+1,___flsub@b+1
  4320  002AA6  C0C2  F086         	movff	tempConversion@temp+2,___flsub@b+2
  4321  002AAA  C0C3  F087         	movff	tempConversion@temp+3,___flsub@b+3
  4322  002AAE  0E33               	movlw	51
  4323  002AB0  0100               	movlb	0	; () banked
  4324  002AB2  6F88               	movwf	___flsub@a& (0+255),b
  4325  002AB4  0E93               	movlw	147
  4326  002AB6  6F89               	movwf	(___flsub@a+1)& (0+255),b
  4327  002AB8  0E88               	movlw	136
  4328  002ABA  6F8A               	movwf	(___flsub@a+2)& (0+255),b
  4329  002ABC  0E43               	movlw	67
  4330  002ABE  6F8B               	movwf	(___flsub@a+3)& (0+255),b
  4331  002AC0  ECCC  F04B         	call	___flsub	;wreg free
  4332  002AC4  C084  F0C0         	movff	?___flsub,tempConversion@temp
  4333  002AC8  C085  F0C1         	movff	?___flsub+1,tempConversion@temp+1
  4334  002ACC  C086  F0C2         	movff	?___flsub+2,tempConversion@temp+2
  4335  002AD0  C087  F0C3         	movff	?___flsub+3,tempConversion@temp+3
  4336                           
  4337                           ;acuadori.c: 267: temp *= 10;
  4338  002AD4  C0C0  F084         	movff	tempConversion@temp,___flmul@b
  4339  002AD8  C0C1  F085         	movff	tempConversion@temp+1,___flmul@b+1
  4340  002ADC  C0C2  F086         	movff	tempConversion@temp+2,___flmul@b+2
  4341  002AE0  C0C3  F087         	movff	tempConversion@temp+3,___flmul@b+3
  4342  002AE4  0E00               	movlw	0
  4343  002AE6  0100               	movlb	0	; () banked
  4344  002AE8  6F88               	movwf	___flmul@a& (0+255),b
  4345  002AEA  0E00               	movlw	0
  4346  002AEC  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4347  002AEE  0E20               	movlw	32
  4348  002AF0  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4349  002AF2  0E41               	movlw	65
  4350  002AF4  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4351  002AF6  EC5B  F00F         	call	___flmul	;wreg free
  4352  002AFA  C084  F0C0         	movff	?___flmul,tempConversion@temp
  4353  002AFE  C085  F0C1         	movff	?___flmul+1,tempConversion@temp+1
  4354  002B02  C086  F0C2         	movff	?___flmul+2,tempConversion@temp+2
  4355  002B06  C087  F0C3         	movff	?___flmul+3,tempConversion@temp+3
  4356                           
  4357                           ;acuadori.c: 269: switch(clip){
  4358  002B0A  D030               	goto	l16238
  4359  002B0C                     l16232:
  4360                           
  4361                           ; BSR set to: 1
  4362                           ;acuadori.c: 272: temp += 16;
  4363  002B0C  C0C0  F074         	movff	tempConversion@temp,___fladd@b
  4364  002B10  C0C1  F075         	movff	tempConversion@temp+1,___fladd@b+1
  4365  002B14  C0C2  F076         	movff	tempConversion@temp+2,___fladd@b+2
  4366  002B18  C0C3  F077         	movff	tempConversion@temp+3,___fladd@b+3
  4367  002B1C  0E00               	movlw	0
  4368  002B1E  0100               	movlb	0	; () banked
  4369  002B20  6F78               	movwf	___fladd@a& (0+255),b
  4370  002B22  0E00               	movlw	0
  4371  002B24  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4372  002B26  0E80               	movlw	128
  4373  002B28  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4374  002B2A  0E41               	movlw	65
  4375  002B2C  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4376  002B2E  ECCD  F015         	call	___fladd	;wreg free
  4377  002B32  D013               	goto	L1
  4378  002B34                     l16234:
  4379                           
  4380                           ; BSR set to: 1
  4381                           ;acuadori.c: 283: temp += 18;
  4382  002B34  C0C0  F074         	movff	tempConversion@temp,___fladd@b
  4383  002B38  C0C1  F075         	movff	tempConversion@temp+1,___fladd@b+1
  4384  002B3C  C0C2  F076         	movff	tempConversion@temp+2,___fladd@b+2
  4385  002B40  C0C3  F077         	movff	tempConversion@temp+3,___fladd@b+3
  4386  002B44  0E00               	movlw	0
  4387  002B46  0100               	movlb	0	; () banked
  4388  002B48  6F78               	movwf	___fladd@a& (0+255),b
  4389  002B4A  0E00               	movlw	0
  4390  002B4C  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4391  002B4E  0E90               	movlw	144
  4392  002B50  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4393  002B52  0E41               	movlw	65
  4394  002B54  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4395  002B56  ECCD  F015         	call	___fladd	;wreg free
  4396  002B5A                     L1:
  4397  002B5A  C074  F0C0         	movff	?___fladd,tempConversion@temp
  4398  002B5E  C075  F0C1         	movff	?___fladd+1,tempConversion@temp+1
  4399  002B62  C076  F0C2         	movff	?___fladd+2,tempConversion@temp+2
  4400  002B66  C077  F0C3         	movff	?___fladd+3,tempConversion@temp+3
  4401                           
  4402                           ;acuadori.c: 290: break;
  4403  002B6A  D008               	goto	l16240
  4404  002B6C                     l16238:
  4405  002B6C  0101               	movlb	1	; () banked
  4406  002B6E  5123               	movf	_clip& (0+255),w,b
  4407                           
  4408                           ; Switch size 1, requested type "simple"
  4409                           ; Number of cases is 2, Range of values is 1 to 2
  4410                           ; switch strategies available:
  4411                           ; Name         Instructions Cycles
  4412                           ; simple_byte            7     4 (average)
  4413                           ;	Chosen strategy is simple_byte
  4414  002B70  0A01               	xorlw	1	; case 1
  4415  002B72  B4D8               	btfsc	status,2,c
  4416  002B74  D7CB               	goto	l16232
  4417  002B76  0A03               	xorlw	3	; case 2
  4418  002B78  B4D8               	btfsc	status,2,c
  4419  002B7A  D7DC               	goto	l16234
  4420  002B7C                     l16240:
  4421                           
  4422                           ;acuadori.c: 300: return temp;
  4423  002B7C  C0C0  F060         	movff	tempConversion@temp,___fltol@f1
  4424  002B80  C0C1  F061         	movff	tempConversion@temp+1,___fltol@f1+1
  4425  002B84  C0C2  F062         	movff	tempConversion@temp+2,___fltol@f1+2
  4426  002B88  C0C3  F063         	movff	tempConversion@temp+3,___fltol@f1+3
  4427  002B8C  ECBF  F03D         	call	___fltol	;wreg free
  4428  002B90  C060  F0B6         	movff	?___fltol,?_tempConversion
  4429  002B94  C061  F0B7         	movff	?___fltol+1,?_tempConversion+1
  4430  002B98  0012               	return		;funcret
  4431  002B9A                     __end_of_tempConversion:
  4432                           	opt callstack 0
  4433                           
  4434 ;; *************** function _log *****************
  4435 ;; Defined at:
  4436 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\log.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  x               4   77[BANK0 ] unsigned int 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  exponent        2   81[BANK0 ] int 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  4   77[BANK0 ] int 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4453 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4454 ;;Total ram usage:        6 bytes
  4455 ;; Hardware stack levels used:    1
  4456 ;; Hardware stack levels required when called:    9
  4457 ;; This function calls:
  4458 ;;		___fladd
  4459 ;;		___fleq
  4460 ;;		___flmul
  4461 ;;		___xxtofl
  4462 ;;		_eval_poly
  4463 ;;		_frexp
  4464 ;; This function is called by:
  4465 ;;		_tempConversion
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text6
  4470  004C90                     __ptext6:
  4471                           	opt callstack 0
  4472  004C90                     _log:
  4473                           	opt callstack 18
  4474                           
  4475                           ;incstack = 0
  4476  004C90  0100               	movlb	0	; () banked
  4477  004C92  AFB0               	btfss	(log@x+3)& (0+255),7,b
  4478  004C94  D00F               	goto	l15544
  4479                           
  4480                           ; BSR set to: 0
  4481  004C96  0E00               	movlw	0
  4482  004C98  0101               	movlb	1	; () banked
  4483  004C9A  6F17               	movwf	(_errno+1)& (0+255),b
  4484  004C9C  0E21               	movlw	33
  4485  004C9E  6F16               	movwf	_errno& (0+255),b
  4486  004CA0  0E00               	movlw	0
  4487  004CA2  0100               	movlb	0	; () banked
  4488  004CA4  6FAD               	movwf	?_log& (0+255),b
  4489  004CA6  0E00               	movlw	0
  4490  004CA8  6FAE               	movwf	(?_log+1)& (0+255),b
  4491  004CAA  0E00               	movlw	0
  4492  004CAC  6FAF               	movwf	(?_log+2)& (0+255),b
  4493  004CAE  0E00               	movlw	0
  4494  004CB0  6FB0               	movwf	(?_log+3)& (0+255),b
  4495  004CB2  0012               	return	
  4496  004CB4                     l15544:
  4497                           
  4498                           ; BSR set to: 0
  4499  004CB4  C0AD  F060         	movff	log@x,___fleq@ff1
  4500  004CB8  C0AE  F061         	movff	log@x+1,___fleq@ff1+1
  4501  004CBC  C0AF  F062         	movff	log@x+2,___fleq@ff1+2
  4502  004CC0  C0B0  F063         	movff	log@x+3,___fleq@ff1+3
  4503  004CC4  0E00               	movlw	0
  4504  004CC6  6F64               	movwf	___fleq@ff2& (0+255),b
  4505  004CC8  0E00               	movlw	0
  4506  004CCA  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4507  004CCC  0E00               	movlw	0
  4508  004CCE  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4509  004CD0  0E00               	movlw	0
  4510  004CD2  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4511  004CD4  ECFD  F040         	call	___fleq	;wreg free
  4512  004CD8  0100               	movlb	0	; () banked
  4513  004CDA  A0D8               	btfss	status,0,c
  4514  004CDC  D00F               	goto	l15550
  4515                           
  4516                           ; BSR set to: 0
  4517  004CDE  0E00               	movlw	0
  4518  004CE0  0101               	movlb	1	; () banked
  4519  004CE2  6F17               	movwf	(_errno+1)& (0+255),b
  4520  004CE4  0E22               	movlw	34
  4521  004CE6  6F16               	movwf	_errno& (0+255),b
  4522  004CE8  0E00               	movlw	0
  4523  004CEA  0100               	movlb	0	; () banked
  4524  004CEC  6FAD               	movwf	?_log& (0+255),b
  4525  004CEE  0E00               	movlw	0
  4526  004CF0  6FAE               	movwf	(?_log+1)& (0+255),b
  4527  004CF2  0E00               	movlw	0
  4528  004CF4  6FAF               	movwf	(?_log+2)& (0+255),b
  4529  004CF6  0E00               	movlw	0
  4530  004CF8  6FB0               	movwf	(?_log+3)& (0+255),b
  4531  004CFA  0012               	return	
  4532  004CFC                     l15550:
  4533                           
  4534                           ; BSR set to: 0
  4535  004CFC  0E00               	movlw	0
  4536  004CFE  6F88               	movwf	___flmul@a& (0+255),b
  4537  004D00  0E00               	movlw	0
  4538  004D02  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4539  004D04  0E00               	movlw	0
  4540  004D06  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4541  004D08  0E40               	movlw	64
  4542  004D0A  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4543  004D0C  0EB1               	movlw	low log@exponent
  4544  004D0E  6F70               	movwf	frexp@eptr& (0+255),b
  4545  004D10  0E00               	movlw	high log@exponent
  4546  004D12  6F71               	movwf	(frexp@eptr+1)& (0+255),b
  4547  004D14  C0AD  F06C         	movff	log@x,frexp@value
  4548  004D18  C0AE  F06D         	movff	log@x+1,frexp@value+1
  4549  004D1C  C0AF  F06E         	movff	log@x+2,frexp@value+2
  4550  004D20  C0B0  F06F         	movff	log@x+3,frexp@value+3
  4551  004D24  EC79  F03E         	call	_frexp	;wreg free
  4552  004D28  C06C  F084         	movff	?_frexp,___flmul@b
  4553  004D2C  C06D  F085         	movff	?_frexp+1,___flmul@b+1
  4554  004D30  C06E  F086         	movff	?_frexp+2,___flmul@b+2
  4555  004D34  C06F  F087         	movff	?_frexp+3,___flmul@b+3
  4556  004D38  EC5B  F00F         	call	___flmul	;wreg free
  4557  004D3C  C084  F074         	movff	?___flmul,___fladd@b
  4558  004D40  C085  F075         	movff	?___flmul+1,___fladd@b+1
  4559  004D44  C086  F076         	movff	?___flmul+2,___fladd@b+2
  4560  004D48  C087  F077         	movff	?___flmul+3,___fladd@b+3
  4561  004D4C  0E00               	movlw	0
  4562  004D4E  0100               	movlb	0	; () banked
  4563  004D50  6F78               	movwf	___fladd@a& (0+255),b
  4564  004D52  0E00               	movlw	0
  4565  004D54  6F79               	movwf	(___fladd@a+1)& (0+255),b
  4566  004D56  0E80               	movlw	128
  4567  004D58  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  4568  004D5A  0EBF               	movlw	191
  4569  004D5C  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  4570  004D5E  ECCD  F015         	call	___fladd	;wreg free
  4571  004D62  C074  F0AD         	movff	?___fladd,log@x
  4572  004D66  C075  F0AE         	movff	?___fladd+1,log@x+1
  4573  004D6A  C076  F0AF         	movff	?___fladd+2,log@x+2
  4574  004D6E  C077  F0B0         	movff	?___fladd+3,log@x+3
  4575  004D72  0100               	movlb	0	; () banked
  4576  004D74  07B1               	decf	log@exponent& (0+255),f,b
  4577  004D76  A0D8               	btfss	status,0,c
  4578  004D78  07B2               	decf	(log@exponent+1)& (0+255),f,b
  4579                           
  4580                           ; BSR set to: 0
  4581  004D7A  C0AD  F09D         	movff	log@x,eval_poly@x
  4582  004D7E  C0AE  F09E         	movff	log@x+1,eval_poly@x+1
  4583  004D82  C0AF  F09F         	movff	log@x+2,eval_poly@x+2
  4584  004D86  C0B0  F0A0         	movff	log@x+3,eval_poly@x+3
  4585  004D8A  0EAA               	movlw	low log@coeff
  4586  004D8C  6FA1               	movwf	eval_poly@d& (0+255),b
  4587  004D8E  0EFF               	movlw	high log@coeff
  4588  004D90  6FA2               	movwf	(eval_poly@d+1)& (0+255),b
  4589  004D92  0E00               	movlw	0
  4590  004D94  6FA4               	movwf	(eval_poly@n+1)& (0+255),b
  4591  004D96  0E08               	movlw	8
  4592  004D98  6FA3               	movwf	eval_poly@n& (0+255),b
  4593  004D9A  EC6D  F035         	call	_eval_poly	;wreg free
  4594  004D9E  C09D  F0AD         	movff	?_eval_poly,log@x
  4595  004DA2  C09E  F0AE         	movff	?_eval_poly+1,log@x+1
  4596  004DA6  C09F  F0AF         	movff	?_eval_poly+2,log@x+2
  4597  004DAA  C0A0  F0B0         	movff	?_eval_poly+3,log@x+3
  4598  004DAE  0E18               	movlw	24
  4599  004DB0  0100               	movlb	0	; () banked
  4600  004DB2  6F88               	movwf	___flmul@a& (0+255),b
  4601  004DB4  0E72               	movlw	114
  4602  004DB6  6F89               	movwf	(___flmul@a+1)& (0+255),b
  4603  004DB8  0E31               	movlw	49
  4604  004DBA  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  4605  004DBC  0E3F               	movlw	63
  4606  004DBE  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  4607  004DC0  C0B1  F060         	movff	log@exponent,___xxtofl@val
  4608  004DC4  C0B2  F061         	movff	log@exponent+1,___xxtofl@val+1
  4609  004DC8  0E00               	movlw	0
  4610  004DCA  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  4611  004DCC  0EFF               	movlw	-1
  4612  004DCE  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  4613  004DD0  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  4614  004DD2  0E01               	movlw	1
  4615  004DD4  ECE5  F02B         	call	___xxtofl
  4616  004DD8  C060  F084         	movff	?___xxtofl,___flmul@b
  4617  004DDC  C061  F085         	movff	?___xxtofl+1,___flmul@b+1
  4618  004DE0  C062  F086         	movff	?___xxtofl+2,___flmul@b+2
  4619  004DE4  C063  F087         	movff	?___xxtofl+3,___flmul@b+3
  4620  004DE8  EC5B  F00F         	call	___flmul	;wreg free
  4621  004DEC  C084  F074         	movff	?___flmul,___fladd@b
  4622  004DF0  C085  F075         	movff	?___flmul+1,___fladd@b+1
  4623  004DF4  C086  F076         	movff	?___flmul+2,___fladd@b+2
  4624  004DF8  C087  F077         	movff	?___flmul+3,___fladd@b+3
  4625  004DFC  C0AD  F078         	movff	log@x,___fladd@a
  4626  004E00  C0AE  F079         	movff	log@x+1,___fladd@a+1
  4627  004E04  C0AF  F07A         	movff	log@x+2,___fladd@a+2
  4628  004E08  C0B0  F07B         	movff	log@x+3,___fladd@a+3
  4629  004E0C  ECCD  F015         	call	___fladd	;wreg free
  4630  004E10  C074  F0AD         	movff	?___fladd,?_log
  4631  004E14  C075  F0AE         	movff	?___fladd+1,?_log+1
  4632  004E18  C076  F0AF         	movff	?___fladd+2,?_log+2
  4633  004E1C  C077  F0B0         	movff	?___fladd+3,?_log+3
  4634  004E20  0012               	return		;funcret
  4635  004E22                     __end_of_log:
  4636                           	opt callstack 0
  4637                           
  4638 ;; *************** function _frexp *****************
  4639 ;; Defined at:
  4640 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\frexp.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  value           4   12[BANK0 ] int 
  4643 ;;  eptr            2   16[BANK0 ] PTR int 
  4644 ;;		 -> floor@expon(2), log@exponent(2), 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;		None
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  4   12[BANK0 ] PTR int 
  4649 ;; Registers used:
  4650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4656 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;Total ram usage:        8 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    8
  4663 ;; This function calls:
  4664 ;;		___fleq
  4665 ;; This function is called by:
  4666 ;;		_log
  4667 ;;		_floor
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           	psect	text7
  4672  007CF2                     __ptext7:
  4673                           	opt callstack 0
  4674  007CF2                     _frexp:
  4675                           	opt callstack 18
  4676                           
  4677                           ;incstack = 0
  4678  007CF2  C06C  F060         	movff	frexp@value,___fleq@ff1
  4679  007CF6  C06D  F061         	movff	frexp@value+1,___fleq@ff1+1
  4680  007CFA  C06E  F062         	movff	frexp@value+2,___fleq@ff1+2
  4681  007CFE  C06F  F063         	movff	frexp@value+3,___fleq@ff1+3
  4682  007D02  0E00               	movlw	0
  4683  007D04  0100               	movlb	0	; () banked
  4684  007D06  6F64               	movwf	___fleq@ff2& (0+255),b
  4685  007D08  0E00               	movlw	0
  4686  007D0A  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4687  007D0C  0E00               	movlw	0
  4688  007D0E  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4689  007D10  0E00               	movlw	0
  4690  007D12  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4691  007D14  ECFD  F040         	call	___fleq	;wreg free
  4692  007D18  0100               	movlb	0	; () banked
  4693  007D1A  A0D8               	btfss	status,0,c
  4694  007D1C  D011               	goto	l15272
  4695                           
  4696                           ; BSR set to: 0
  4697  007D1E  C070  FFD9         	movff	frexp@eptr,fsr2l
  4698  007D22  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4699  007D26  0E00               	movlw	0
  4700  007D28  6EDE               	movwf	postinc2,c
  4701  007D2A  0E00               	movlw	0
  4702  007D2C  6EDD               	movwf	postdec2,c
  4703                           
  4704                           ; BSR set to: 0
  4705  007D2E  0E00               	movlw	0
  4706  007D30  6F6C               	movwf	?_frexp& (0+255),b
  4707  007D32  0E00               	movlw	0
  4708  007D34  6F6D               	movwf	(?_frexp+1)& (0+255),b
  4709  007D36  0E00               	movlw	0
  4710  007D38  6F6E               	movwf	(?_frexp+2)& (0+255),b
  4711  007D3A  0E00               	movlw	0
  4712  007D3C  6F6F               	movwf	(?_frexp+3)& (0+255),b
  4713  007D3E  0012               	return	
  4714  007D40                     l15272:
  4715                           
  4716                           ; BSR set to: 0
  4717  007D40  516F               	movf	(frexp@value+3)& (0+255),w,b
  4718  007D42  0B7F               	andlw	127
  4719  007D44  6F72               	movwf	??_frexp& (0+255),b
  4720  007D46  6B73               	clrf	(??_frexp+1)& (0+255),b
  4721  007D48  90D8               	bcf	status,0,c
  4722  007D4A  3772               	rlcf	??_frexp& (0+255),f,b
  4723  007D4C  3773               	rlcf	(??_frexp+1)& (0+255),f,b
  4724  007D4E  C070  FFD9         	movff	frexp@eptr,fsr2l
  4725  007D52  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4726  007D56  C072  FFDE         	movff	??_frexp,postinc2
  4727  007D5A  C073  FFDD         	movff	??_frexp+1,postdec2
  4728  007D5E  AF6E               	btfss	(frexp@value+2)& (0+255),7,b
  4729  007D60  D003               	goto	u15740
  4730  007D62  6B72               	clrf	??_frexp& (0+255),b
  4731  007D64  2B72               	incf	??_frexp& (0+255),f,b
  4732  007D66  D002               	goto	u15748
  4733  007D68                     u15740:
  4734  007D68  0100               	movlb	0	; () banked
  4735  007D6A  6B72               	clrf	??_frexp& (0+255),b
  4736  007D6C                     u15748:
  4737  007D6C  5172               	movf	??_frexp& (0+255),w,b
  4738  007D6E  C070  FFD9         	movff	frexp@eptr,fsr2l
  4739  007D72  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4740  007D76  12DE               	iorwf	postinc2,f,c
  4741  007D78  0E00               	movlw	0
  4742  007D7A  12DD               	iorwf	postdec2,f,c
  4743                           
  4744                           ; BSR set to: 0
  4745  007D7C  C070  FFD9         	movff	frexp@eptr,fsr2l
  4746  007D80  C071  FFDA         	movff	frexp@eptr+1,fsr2h
  4747  007D84  0E82               	movlw	130
  4748  007D86  26DE               	addwf	postinc2,f,c
  4749  007D88  0EFF               	movlw	255
  4750  007D8A  22DD               	addwfc	postdec2,f,c
  4751                           
  4752                           ; BSR set to: 0
  4753  007D8C  516F               	movf	(frexp@value+3)& (0+255),w,b
  4754  007D8E  0B80               	andlw	-128
  4755  007D90  093F               	iorlw	63
  4756  007D92  6F6F               	movwf	(frexp@value+3)& (0+255),b
  4757                           
  4758                           ; BSR set to: 0
  4759  007D94  9F6E               	bcf	(frexp@value+2)& (0+255),7,b
  4760                           
  4761                           ; BSR set to: 0
  4762  007D96  C06C  F06C         	movff	frexp@value,?_frexp
  4763  007D9A  C06D  F06D         	movff	frexp@value+1,?_frexp+1
  4764  007D9E  C06E  F06E         	movff	frexp@value+2,?_frexp+2
  4765  007DA2  C06F  F06F         	movff	frexp@value+3,?_frexp+3
  4766                           
  4767                           ; BSR set to: 0
  4768  007DA6  0012               	return		;funcret
  4769  007DA8                     __end_of_frexp:
  4770                           	opt callstack 0
  4771                           
  4772 ;; *************** function ___fleq *****************
  4773 ;; Defined at:
  4774 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  ff1             4    0[BANK0 ] PTR int 
  4777 ;;  ff2             4    4[BANK0 ] PTR int 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;		None               void
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4789 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;Total ram usage:       12 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    7
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_log
  4800 ;;		_frexp
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text8
  4805  0081FA                     __ptext8:
  4806                           	opt callstack 0
  4807  0081FA                     ___fleq:
  4808                           	opt callstack 18
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;incstack = 0
  4812  0081FA  0E00               	movlw	0
  4813  0081FC  0100               	movlb	0	; () banked
  4814  0081FE  1560               	andwf	___fleq@ff1& (0+255),w,b
  4815  008200  6F68               	movwf	??___fleq& (0+255),b
  4816  008202  0E00               	movlw	0
  4817  008204  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  4818  008206  6F69               	movwf	(??___fleq+1)& (0+255),b
  4819  008208  0E80               	movlw	128
  4820  00820A  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  4821  00820C  6F6A               	movwf	(??___fleq+2)& (0+255),b
  4822  00820E  0E7F               	movlw	127
  4823  008210  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  4824  008212  6F6B               	movwf	(??___fleq+3)& (0+255),b
  4825  008214  5168               	movf	??___fleq& (0+255),w,b
  4826  008216  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  4827  008218  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  4828  00821A  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  4829  00821C  A4D8               	btfss	status,2,c
  4830  00821E  D008               	goto	l14682
  4831                           
  4832                           ; BSR set to: 0
  4833  008220  0E00               	movlw	0
  4834  008222  6F60               	movwf	___fleq@ff1& (0+255),b
  4835  008224  0E00               	movlw	0
  4836  008226  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  4837  008228  0E00               	movlw	0
  4838  00822A  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  4839  00822C  0E00               	movlw	0
  4840  00822E  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  4841  008230                     l14682:
  4842                           
  4843                           ; BSR set to: 0
  4844  008230  0E00               	movlw	0
  4845  008232  1564               	andwf	___fleq@ff2& (0+255),w,b
  4846  008234  6F68               	movwf	??___fleq& (0+255),b
  4847  008236  0E00               	movlw	0
  4848  008238  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  4849  00823A  6F69               	movwf	(??___fleq+1)& (0+255),b
  4850  00823C  0E80               	movlw	128
  4851  00823E  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  4852  008240  6F6A               	movwf	(??___fleq+2)& (0+255),b
  4853  008242  0E7F               	movlw	127
  4854  008244  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  4855  008246  6F6B               	movwf	(??___fleq+3)& (0+255),b
  4856  008248  5168               	movf	??___fleq& (0+255),w,b
  4857  00824A  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  4858  00824C  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  4859  00824E  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  4860  008250  A4D8               	btfss	status,2,c
  4861  008252  D008               	goto	l14686
  4862                           
  4863                           ; BSR set to: 0
  4864  008254  0E00               	movlw	0
  4865  008256  6F64               	movwf	___fleq@ff2& (0+255),b
  4866  008258  0E00               	movlw	0
  4867  00825A  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  4868  00825C  0E00               	movlw	0
  4869  00825E  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  4870  008260  0E00               	movlw	0
  4871  008262  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  4872  008264                     l14686:
  4873                           
  4874                           ; BSR set to: 0
  4875  008264  5164               	movf	___fleq@ff2& (0+255),w,b
  4876  008266  1960               	xorwf	___fleq@ff1& (0+255),w,b
  4877  008268  E10A               	bnz	u14790
  4878  00826A  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  4879  00826C  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  4880  00826E  E107               	bnz	u14790
  4881  008270  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  4882  008272  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  4883  008274  E104               	bnz	u14790
  4884  008276  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  4885  008278  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  4886  00827A  B4D8               	btfsc	status,2,c
  4887  00827C  D002               	goto	l14690
  4888  00827E                     u14790:
  4889                           
  4890                           ; BSR set to: 0
  4891  00827E  90D8               	bcf	status,0,c
  4892  008280  0012               	return	
  4893  008282                     l14690:
  4894                           
  4895                           ; BSR set to: 0
  4896  008282  80D8               	bsf	status,0,c
  4897                           
  4898                           ; BSR set to: 0
  4899  008284  0012               	return		;funcret
  4900  008286                     __end_of___fleq:
  4901                           	opt callstack 0
  4902                           
  4903 ;; *************** function _eval_poly *****************
  4904 ;; Defined at:
  4905 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\evalpoly.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  x               4   61[BANK0 ] PTR int 
  4908 ;;  d               2   65[BANK0 ] PTR const 
  4909 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), log@coeff(36), 
  4910 ;;  n               2   67[BANK0 ] int 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  res             4   73[BANK0 ] int 
  4913 ;; Return value:  Size  Location     Type
  4914 ;;                  4   61[BANK0 ] int 
  4915 ;; Registers used:
  4916 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4917 ;; Tracked objects:
  4918 ;;		On entry : 0/0
  4919 ;;		On exit  : 0/0
  4920 ;;		Unchanged: 0/0
  4921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4922 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4925 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4926 ;;Total ram usage:       16 bytes
  4927 ;; Hardware stack levels used:    1
  4928 ;; Hardware stack levels required when called:    8
  4929 ;; This function calls:
  4930 ;;		___fladd
  4931 ;;		___flmul
  4932 ;; This function is called by:
  4933 ;;		_log
  4934 ;;		_sin
  4935 ;; This function uses a non-reentrant model
  4936 ;;
  4937                           
  4938                           	psect	text9
  4939  006ADA                     __ptext9:
  4940                           	opt callstack 0
  4941  006ADA                     _eval_poly:
  4942                           	opt callstack 18
  4943                           
  4944                           ; BSR set to: 0
  4945                           ;incstack = 0
  4946  006ADA  C0A3  F0A5         	movff	eval_poly@n,??_eval_poly
  4947  006ADE  C0A4  F0A6         	movff	eval_poly@n+1,??_eval_poly+1
  4948  006AE2  0100               	movlb	0	; () banked
  4949  006AE4  90D8               	bcf	status,0,c
  4950  006AE6  37A5               	rlcf	??_eval_poly& (0+255),f,b
  4951  006AE8  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4952  006AEA  90D8               	bcf	status,0,c
  4953  006AEC  37A5               	rlcf	??_eval_poly& (0+255),f,b
  4954  006AEE  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  4955  006AF0  C0A1  F0A7         	movff	eval_poly@d,??_eval_poly+2
  4956  006AF4  C0A2  F0A8         	movff	eval_poly@d+1,??_eval_poly+3
  4957  006AF8  51A5               	movf	??_eval_poly& (0+255),w,b
  4958  006AFA  27A7               	addwf	(??_eval_poly+2)& (0+255),f,b
  4959  006AFC  51A6               	movf	(??_eval_poly+1)& (0+255),w,b
  4960  006AFE  23A8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  4961  006B00  C0A7  FFF6         	movff	??_eval_poly+2,tblptrl
  4962  006B04  C0A8  FFF7         	movff	??_eval_poly+3,tblptrh
  4963  006B08                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4964  006B08  6AF8               	clrf	tblptru,c
  4965  006B0A                     	endif
  4966  006B0A                     	if	0	;tblptru may be non-zero
  4967  006B0A                     	endif
  4968  006B0A  0009               	tblrd		*+
  4969  006B0C  CFF5 F0A9          	movff	tablat,eval_poly@res
  4970  006B10  0009               	tblrd		*+
  4971  006B12  CFF5 F0AA          	movff	tablat,eval_poly@res+1
  4972  006B16  0009               	tblrd		*+
  4973  006B18  CFF5 F0AB          	movff	tablat,eval_poly@res+2
  4974  006B1C  000A               	tblrd		*-
  4975  006B1E  CFF5 F0AC          	movff	tablat,eval_poly@res+3
  4976  006B22  D04B               	goto	l15288
  4977  006B24                     l15286:
  4978                           
  4979                           ; BSR set to: 0
  4980  006B24  C0A9  F088         	movff	eval_poly@res,___flmul@a
  4981  006B28  C0AA  F089         	movff	eval_poly@res+1,___flmul@a+1
  4982  006B2C  C0AB  F08A         	movff	eval_poly@res+2,___flmul@a+2
  4983  006B30  C0AC  F08B         	movff	eval_poly@res+3,___flmul@a+3
  4984  006B34  C09D  F084         	movff	eval_poly@x,___flmul@b
  4985  006B38  C09E  F085         	movff	eval_poly@x+1,___flmul@b+1
  4986  006B3C  C09F  F086         	movff	eval_poly@x+2,___flmul@b+2
  4987  006B40  C0A0  F087         	movff	eval_poly@x+3,___flmul@b+3
  4988  006B44  EC5B  F00F         	call	___flmul	;wreg free
  4989  006B48  C084  F074         	movff	?___flmul,___fladd@b
  4990  006B4C  C085  F075         	movff	?___flmul+1,___fladd@b+1
  4991  006B50  C086  F076         	movff	?___flmul+2,___fladd@b+2
  4992  006B54  C087  F077         	movff	?___flmul+3,___fladd@b+3
  4993  006B58  0100               	movlb	0	; () banked
  4994  006B5A  07A3               	decf	eval_poly@n& (0+255),f,b
  4995  006B5C  A0D8               	btfss	status,0,c
  4996  006B5E  07A4               	decf	(eval_poly@n+1)& (0+255),f,b
  4997  006B60  C0A3  F0A5         	movff	eval_poly@n,??_eval_poly
  4998  006B64  C0A4  F0A6         	movff	eval_poly@n+1,??_eval_poly+1
  4999  006B68  90D8               	bcf	status,0,c
  5000  006B6A  37A5               	rlcf	??_eval_poly& (0+255),f,b
  5001  006B6C  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5002  006B6E  90D8               	bcf	status,0,c
  5003  006B70  37A5               	rlcf	??_eval_poly& (0+255),f,b
  5004  006B72  37A6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5005  006B74  C0A1  F0A7         	movff	eval_poly@d,??_eval_poly+2
  5006  006B78  C0A2  F0A8         	movff	eval_poly@d+1,??_eval_poly+3
  5007  006B7C  51A5               	movf	??_eval_poly& (0+255),w,b
  5008  006B7E  27A7               	addwf	(??_eval_poly+2)& (0+255),f,b
  5009  006B80  51A6               	movf	(??_eval_poly+1)& (0+255),w,b
  5010  006B82  23A8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5011  006B84  C0A7  FFF6         	movff	??_eval_poly+2,tblptrl
  5012  006B88  C0A8  FFF7         	movff	??_eval_poly+3,tblptrh
  5013  006B8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5014  006B8C  6AF8               	clrf	tblptru,c
  5015  006B8E                     	endif
  5016  006B8E                     	if	0	;tblptru may be non-zero
  5017  006B8E                     	endif
  5018  006B8E  0009               	tblrd		*+
  5019  006B90  CFF5 F078          	movff	tablat,___fladd@a
  5020  006B94  0009               	tblrd		*+
  5021  006B96  CFF5 F079          	movff	tablat,___fladd@a+1
  5022  006B9A  0009               	tblrd		*+
  5023  006B9C  CFF5 F07A          	movff	tablat,___fladd@a+2
  5024  006BA0  000A               	tblrd		*-
  5025  006BA2  CFF5 F07B          	movff	tablat,___fladd@a+3
  5026  006BA6  ECCD  F015         	call	___fladd	;wreg free
  5027  006BAA  C074  F0A9         	movff	?___fladd,eval_poly@res
  5028  006BAE  C075  F0AA         	movff	?___fladd+1,eval_poly@res+1
  5029  006BB2  C076  F0AB         	movff	?___fladd+2,eval_poly@res+2
  5030  006BB6  C077  F0AC         	movff	?___fladd+3,eval_poly@res+3
  5031  006BBA                     l15288:
  5032  006BBA  0100               	movlb	0	; () banked
  5033  006BBC  51A3               	movf	eval_poly@n& (0+255),w,b
  5034  006BBE  11A4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  5035  006BC0  A4D8               	btfss	status,2,c
  5036  006BC2  D7B0               	goto	l15286
  5037                           
  5038                           ; BSR set to: 0
  5039  006BC4  C0A9  F09D         	movff	eval_poly@res,?_eval_poly
  5040  006BC8  C0AA  F09E         	movff	eval_poly@res+1,?_eval_poly+1
  5041  006BCC  C0AB  F09F         	movff	eval_poly@res+2,?_eval_poly+2
  5042  006BD0  C0AC  F0A0         	movff	eval_poly@res+3,?_eval_poly+3
  5043                           
  5044                           ; BSR set to: 0
  5045  006BD4  0012               	return		;funcret
  5046  006BD6                     __end_of_eval_poly:
  5047                           	opt callstack 0
  5048                           
  5049 ;; *************** function ___flmul *****************
  5050 ;; Defined at:
  5051 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  b               4   36[BANK0 ] int 
  5054 ;;  a               4   40[BANK0 ] int 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  prod            4   55[BANK0 ] struct .
  5057 ;;  grs             4   49[BANK0 ] unsigned long 
  5058 ;;  temp            2   59[BANK0 ] struct .
  5059 ;;  bexp            1   54[BANK0 ] unsigned char 
  5060 ;;  aexp            1   53[BANK0 ] unsigned char 
  5061 ;;  sign            1   48[BANK0 ] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;                  4   36[BANK0 ] unsigned char 
  5064 ;; Registers used:
  5065 ;;		wreg, status,2, status,0, prodl, prodh
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5071 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;Total ram usage:       25 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; Hardware stack levels required when called:    7
  5078 ;; This function calls:
  5079 ;;		Nothing
  5080 ;; This function is called by:
  5081 ;;		_tempConversion
  5082 ;;		_log
  5083 ;;		_eval_poly
  5084 ;;		_sinGeneration
  5085 ;;		_sin
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text10
  5090  001EB6                     __ptext10:
  5091                           	opt callstack 0
  5092  001EB6                     ___flmul:
  5093                           	opt callstack 18
  5094                           
  5095                           ; BSR set to: 0
  5096                           ;incstack = 0
  5097  001EB6  0100               	movlb	0	; () banked
  5098  001EB8  5187               	movf	(___flmul@b+3)& (0+255),w,b
  5099  001EBA  0B80               	andlw	128
  5100  001EBC  6F90               	movwf	___flmul@sign& (0+255),b
  5101  001EBE  5187               	movf	(___flmul@b+3)& (0+255),w,b
  5102  001EC0  2587               	addwf	(___flmul@b+3)& (0+255),w,b
  5103  001EC2  6F96               	movwf	___flmul@bexp& (0+255),b
  5104                           
  5105                           ; BSR set to: 0
  5106  001EC4  BF86               	btfsc	(___flmul@b+2)& (0+255),7,b
  5107                           
  5108                           ; BSR set to: 0
  5109  001EC6  8196               	bsf	___flmul@bexp& (0+255),0,b
  5110                           
  5111                           ; BSR set to: 0
  5112  001EC8  5196               	movf	___flmul@bexp& (0+255),w,b
  5113  001ECA  B4D8               	btfsc	status,2,c
  5114  001ECC  D00D               	goto	l14562
  5115                           
  5116                           ; BSR set to: 0
  5117  001ECE  2996               	incf	___flmul@bexp& (0+255),w,b
  5118  001ED0  A4D8               	btfss	status,2,c
  5119  001ED2  D008               	goto	l14560
  5120                           
  5121                           ; BSR set to: 0
  5122  001ED4  0E00               	movlw	0
  5123  001ED6  6F84               	movwf	___flmul@b& (0+255),b
  5124  001ED8  0E00               	movlw	0
  5125  001EDA  6F85               	movwf	(___flmul@b+1)& (0+255),b
  5126  001EDC  0E00               	movlw	0
  5127  001EDE  6F86               	movwf	(___flmul@b+2)& (0+255),b
  5128  001EE0  0E00               	movlw	0
  5129  001EE2  6F87               	movwf	(___flmul@b+3)& (0+255),b
  5130  001EE4                     l14560:
  5131                           
  5132                           ; BSR set to: 0
  5133  001EE4  8F86               	bsf	(___flmul@b+2)& (0+255),7,b
  5134  001EE6  D008               	goto	l14564
  5135  001EE8                     l14562:
  5136                           
  5137                           ; BSR set to: 0
  5138  001EE8  0E00               	movlw	0
  5139  001EEA  6F84               	movwf	___flmul@b& (0+255),b
  5140  001EEC  0E00               	movlw	0
  5141  001EEE  6F85               	movwf	(___flmul@b+1)& (0+255),b
  5142  001EF0  0E00               	movlw	0
  5143  001EF2  6F86               	movwf	(___flmul@b+2)& (0+255),b
  5144  001EF4  0E00               	movlw	0
  5145  001EF6  6F87               	movwf	(___flmul@b+3)& (0+255),b
  5146  001EF8                     l14564:
  5147                           
  5148                           ; BSR set to: 0
  5149  001EF8  518B               	movf	(___flmul@a+3)& (0+255),w,b
  5150  001EFA  0B80               	andlw	128
  5151  001EFC  1B90               	xorwf	___flmul@sign& (0+255),f,b
  5152                           
  5153                           ; BSR set to: 0
  5154  001EFE  518B               	movf	(___flmul@a+3)& (0+255),w,b
  5155  001F00  258B               	addwf	(___flmul@a+3)& (0+255),w,b
  5156  001F02  6F95               	movwf	___flmul@aexp& (0+255),b
  5157                           
  5158                           ; BSR set to: 0
  5159  001F04  BF8A               	btfsc	(___flmul@a+2)& (0+255),7,b
  5160                           
  5161                           ; BSR set to: 0
  5162  001F06  8195               	bsf	___flmul@aexp& (0+255),0,b
  5163                           
  5164                           ; BSR set to: 0
  5165  001F08  5195               	movf	___flmul@aexp& (0+255),w,b
  5166  001F0A  B4D8               	btfsc	status,2,c
  5167  001F0C  D00D               	goto	l14580
  5168                           
  5169                           ; BSR set to: 0
  5170  001F0E  2995               	incf	___flmul@aexp& (0+255),w,b
  5171  001F10  A4D8               	btfss	status,2,c
  5172  001F12  D008               	goto	l14578
  5173                           
  5174                           ; BSR set to: 0
  5175  001F14  0E00               	movlw	0
  5176  001F16  6F88               	movwf	___flmul@a& (0+255),b
  5177  001F18  0E00               	movlw	0
  5178  001F1A  6F89               	movwf	(___flmul@a+1)& (0+255),b
  5179  001F1C  0E00               	movlw	0
  5180  001F1E  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  5181  001F20  0E00               	movlw	0
  5182  001F22  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  5183  001F24                     l14578:
  5184                           
  5185                           ; BSR set to: 0
  5186  001F24  8F8A               	bsf	(___flmul@a+2)& (0+255),7,b
  5187  001F26  D008               	goto	l4121
  5188  001F28                     l14580:
  5189                           
  5190                           ; BSR set to: 0
  5191  001F28  0E00               	movlw	0
  5192  001F2A  6F88               	movwf	___flmul@a& (0+255),b
  5193  001F2C  0E00               	movlw	0
  5194  001F2E  6F89               	movwf	(___flmul@a+1)& (0+255),b
  5195  001F30  0E00               	movlw	0
  5196  001F32  6F8A               	movwf	(___flmul@a+2)& (0+255),b
  5197  001F34  0E00               	movlw	0
  5198  001F36  6F8B               	movwf	(___flmul@a+3)& (0+255),b
  5199  001F38                     l4121:
  5200                           
  5201                           ; BSR set to: 0
  5202  001F38  5195               	movf	___flmul@aexp& (0+255),w,b
  5203  001F3A  B4D8               	btfsc	status,2,c
  5204  001F3C  D003               	goto	u14650
  5205                           
  5206                           ; BSR set to: 0
  5207  001F3E  5196               	movf	___flmul@bexp& (0+255),w,b
  5208  001F40  A4D8               	btfss	status,2,c
  5209  001F42  D009               	goto	l14588
  5210  001F44                     u14650:
  5211                           
  5212                           ; BSR set to: 0
  5213  001F44  0E00               	movlw	0
  5214  001F46  6F84               	movwf	?___flmul& (0+255),b
  5215  001F48  0E00               	movlw	0
  5216  001F4A  6F85               	movwf	(?___flmul+1)& (0+255),b
  5217  001F4C  0E00               	movlw	0
  5218  001F4E  6F86               	movwf	(?___flmul+2)& (0+255),b
  5219  001F50  0E00               	movlw	0
  5220  001F52  6F87               	movwf	(?___flmul+3)& (0+255),b
  5221  001F54  0012               	return	
  5222  001F56                     l14588:
  5223                           
  5224                           ; BSR set to: 0
  5225  001F56  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5226  001F58  0384               	mulwf	___flmul@b& (0+255),b
  5227  001F5A  CFF3 F09B          	movff	prodl,___flmul@temp
  5228  001F5E  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5229                           
  5230                           ; BSR set to: 0
  5231  001F62  519B               	movf	___flmul@temp& (0+255),w,b
  5232  001F64  6F91               	movwf	___flmul@grs& (0+255),b
  5233  001F66  6B92               	clrf	(___flmul@grs+1)& (0+255),b
  5234  001F68  6B93               	clrf	(___flmul@grs+2)& (0+255),b
  5235  001F6A  6B94               	clrf	(___flmul@grs+3)& (0+255),b
  5236                           
  5237                           ; BSR set to: 0
  5238  001F6C  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5239  001F6E  6F97               	movwf	___flmul@prod& (0+255),b
  5240  001F70  6B98               	clrf	(___flmul@prod+1)& (0+255),b
  5241  001F72  6B99               	clrf	(___flmul@prod+2)& (0+255),b
  5242  001F74  6B9A               	clrf	(___flmul@prod+3)& (0+255),b
  5243  001F76  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5244  001F78  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5245  001F7A  CFF3 F09B          	movff	prodl,___flmul@temp
  5246  001F7E  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5247                           
  5248                           ; BSR set to: 0
  5249  001F82  519B               	movf	___flmul@temp& (0+255),w,b
  5250  001F84  2791               	addwf	___flmul@grs& (0+255),f,b
  5251  001F86  0E00               	movlw	0
  5252  001F88  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5253  001F8A  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5254  001F8C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5255                           
  5256                           ; BSR set to: 0
  5257  001F8E  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5258  001F90  2797               	addwf	___flmul@prod& (0+255),f,b
  5259  001F92  0E00               	movlw	0
  5260  001F94  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5261  001F96  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5262  001F98  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5263  001F9A  5188               	movf	___flmul@a& (0+255),w,b
  5264  001F9C  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5265  001F9E  CFF3 F09B          	movff	prodl,___flmul@temp
  5266  001FA2  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5267                           
  5268                           ; BSR set to: 0
  5269  001FA6  519B               	movf	___flmul@temp& (0+255),w,b
  5270  001FA8  2791               	addwf	___flmul@grs& (0+255),f,b
  5271  001FAA  0E00               	movlw	0
  5272  001FAC  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5273  001FAE  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5274  001FB0  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5275                           
  5276                           ; BSR set to: 0
  5277  001FB2  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5278  001FB4  2797               	addwf	___flmul@prod& (0+255),f,b
  5279  001FB6  0E00               	movlw	0
  5280  001FB8  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5281  001FBA  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5282  001FBC  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5283                           
  5284                           ; BSR set to: 0
  5285  001FBE  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  5286  001FC2  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  5287  001FC6  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  5288  001FCA  6B91               	clrf	___flmul@grs& (0+255),b
  5289                           
  5290                           ; BSR set to: 0
  5291  001FCC  5188               	movf	___flmul@a& (0+255),w,b
  5292  001FCE  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5293  001FD0  CFF3 F09B          	movff	prodl,___flmul@temp
  5294  001FD4  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5295                           
  5296                           ; BSR set to: 0
  5297  001FD8  519B               	movf	___flmul@temp& (0+255),w,b
  5298  001FDA  2791               	addwf	___flmul@grs& (0+255),f,b
  5299  001FDC  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5300  001FDE  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5301  001FE0  0E00               	movlw	0
  5302  001FE2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5303  001FE4  0E00               	movlw	0
  5304  001FE6  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5305                           
  5306                           ; BSR set to: 0
  5307  001FE8  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5308  001FEA  0384               	mulwf	___flmul@b& (0+255),b
  5309  001FEC  CFF3 F09B          	movff	prodl,___flmul@temp
  5310  001FF0  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5311                           
  5312                           ; BSR set to: 0
  5313  001FF4  519B               	movf	___flmul@temp& (0+255),w,b
  5314  001FF6  2791               	addwf	___flmul@grs& (0+255),f,b
  5315  001FF8  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5316  001FFA  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5317  001FFC  0E00               	movlw	0
  5318  001FFE  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5319  002000  0E00               	movlw	0
  5320  002002  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5321                           
  5322                           ; BSR set to: 0
  5323  002004  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  5324  002008  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  5325  00200C  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  5326  002010  6B91               	clrf	___flmul@grs& (0+255),b
  5327  002012  5188               	movf	___flmul@a& (0+255),w,b
  5328  002014  0384               	mulwf	___flmul@b& (0+255),b
  5329  002016  CFF3 F09B          	movff	prodl,___flmul@temp
  5330  00201A  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5331                           
  5332                           ; BSR set to: 0
  5333  00201E  519B               	movf	___flmul@temp& (0+255),w,b
  5334  002020  2791               	addwf	___flmul@grs& (0+255),f,b
  5335  002022  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5336  002024  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5337  002026  0E00               	movlw	0
  5338  002028  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5339  00202A  0E00               	movlw	0
  5340  00202C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5341                           
  5342                           ; BSR set to: 0
  5343  00202E  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5344  002030  0385               	mulwf	(___flmul@b+1)& (0+255),b
  5345  002032  CFF3 F09B          	movff	prodl,___flmul@temp
  5346  002036  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5347  00203A  519B               	movf	___flmul@temp& (0+255),w,b
  5348  00203C  2797               	addwf	___flmul@prod& (0+255),f,b
  5349  00203E  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5350  002040  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5351  002042  0E00               	movlw	0
  5352  002044  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5353  002046  0E00               	movlw	0
  5354  002048  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5355                           
  5356                           ; BSR set to: 0
  5357  00204A  5189               	movf	(___flmul@a+1)& (0+255),w,b
  5358  00204C  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5359  00204E  CFF3 F09B          	movff	prodl,___flmul@temp
  5360  002052  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5361                           
  5362                           ; BSR set to: 0
  5363  002056  519B               	movf	___flmul@temp& (0+255),w,b
  5364  002058  2797               	addwf	___flmul@prod& (0+255),f,b
  5365  00205A  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5366  00205C  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5367  00205E  0E00               	movlw	0
  5368  002060  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5369  002062  0E00               	movlw	0
  5370  002064  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5371  002066  518A               	movf	(___flmul@a+2)& (0+255),w,b
  5372  002068  0386               	mulwf	(___flmul@b+2)& (0+255),b
  5373  00206A  CFF3 F09B          	movff	prodl,___flmul@temp
  5374  00206E  CFF4 F09C          	movff	prodh,___flmul@temp+1
  5375                           
  5376                           ; BSR set to: 0
  5377  002072  519B               	movf	___flmul@temp& (0+255),w,b
  5378  002074  6F8C               	movwf	??___flmul& (0+255),b
  5379  002076  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5380  002078  6F8D               	movwf	(??___flmul+1)& (0+255),b
  5381  00207A  6B8E               	clrf	(??___flmul+2)& (0+255),b
  5382  00207C  6B8F               	clrf	(??___flmul+3)& (0+255),b
  5383  00207E  C08E  F08F         	movff	??___flmul+2,??___flmul+3
  5384  002082  C08D  F08E         	movff	??___flmul+1,??___flmul+2
  5385  002086  C08C  F08D         	movff	??___flmul,??___flmul+1
  5386  00208A  6B8C               	clrf	??___flmul& (0+255),b
  5387  00208C  518C               	movf	??___flmul& (0+255),w,b
  5388  00208E  2797               	addwf	___flmul@prod& (0+255),f,b
  5389  002090  518D               	movf	(??___flmul+1)& (0+255),w,b
  5390  002092  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5391  002094  518E               	movf	(??___flmul+2)& (0+255),w,b
  5392  002096  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5393  002098  518F               	movf	(??___flmul+3)& (0+255),w,b
  5394  00209A  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5395                           
  5396                           ; BSR set to: 0
  5397  00209C  C091  F08C         	movff	___flmul@grs,??___flmul
  5398  0020A0  C092  F08D         	movff	___flmul@grs+1,??___flmul+1
  5399  0020A4  C093  F08E         	movff	___flmul@grs+2,??___flmul+2
  5400  0020A8  C094  F08F         	movff	___flmul@grs+3,??___flmul+3
  5401  0020AC  0E19               	movlw	25
  5402  0020AE  D005               	goto	u14660
  5403  0020B0                     u14665:
  5404  0020B0  90D8               	bcf	status,0,c
  5405  0020B2  338F               	rrcf	(??___flmul+3)& (0+255),f,b
  5406  0020B4  338E               	rrcf	(??___flmul+2)& (0+255),f,b
  5407  0020B6  338D               	rrcf	(??___flmul+1)& (0+255),f,b
  5408  0020B8  338C               	rrcf	??___flmul& (0+255),f,b
  5409  0020BA                     u14660:
  5410  0020BA  2EE8               	decfsz	wreg,f,c
  5411  0020BC  D7F9               	goto	u14665
  5412  0020BE  518C               	movf	??___flmul& (0+255),w,b
  5413  0020C0  2797               	addwf	___flmul@prod& (0+255),f,b
  5414  0020C2  518D               	movf	(??___flmul+1)& (0+255),w,b
  5415  0020C4  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5416  0020C6  518E               	movf	(??___flmul+2)& (0+255),w,b
  5417  0020C8  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5418  0020CA  518F               	movf	(??___flmul+3)& (0+255),w,b
  5419  0020CC  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5420                           
  5421                           ; BSR set to: 0
  5422  0020CE  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
  5423  0020D2  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
  5424  0020D6  C091  F092         	movff	___flmul@grs,___flmul@grs+1
  5425  0020DA  6B91               	clrf	___flmul@grs& (0+255),b
  5426                           
  5427                           ; BSR set to: 0
  5428  0020DC  5195               	movf	___flmul@aexp& (0+255),w,b
  5429  0020DE  C096  F08C         	movff	___flmul@bexp,??___flmul
  5430  0020E2  6B8D               	clrf	(??___flmul+1)& (0+255),b
  5431  0020E4  278C               	addwf	??___flmul& (0+255),f,b
  5432  0020E6  0E00               	movlw	0
  5433  0020E8  238D               	addwfc	(??___flmul+1)& (0+255),f,b
  5434  0020EA  0E82               	movlw	130
  5435  0020EC  258C               	addwf	??___flmul& (0+255),w,b
  5436  0020EE  6F9B               	movwf	___flmul@temp& (0+255),b
  5437  0020F0  0EFF               	movlw	255
  5438  0020F2  218D               	addwfc	(??___flmul+1)& (0+255),w,b
  5439  0020F4  6F9C               	movwf	(___flmul@temp+1)& (0+255),b
  5440  0020F6  D00F               	goto	l14636
  5441  0020F8                     l14630:
  5442                           
  5443                           ; BSR set to: 0
  5444  0020F8  90D8               	bcf	status,0,c
  5445  0020FA  3797               	rlcf	___flmul@prod& (0+255),f,b
  5446  0020FC  3798               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5447  0020FE  3799               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5448  002100  379A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5449                           
  5450                           ; BSR set to: 0
  5451  002102  BF94               	btfsc	(___flmul@grs+3)& (0+255),7,b
  5452                           
  5453                           ; BSR set to: 0
  5454  002104  8197               	bsf	___flmul@prod& (0+255),0,b
  5455                           
  5456                           ; BSR set to: 0
  5457  002106  90D8               	bcf	status,0,c
  5458  002108  3791               	rlcf	___flmul@grs& (0+255),f,b
  5459  00210A  3792               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5460  00210C  3793               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5461  00210E  3794               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5462  002110  079B               	decf	___flmul@temp& (0+255),f,b
  5463  002112  A0D8               	btfss	status,0,c
  5464  002114  079C               	decf	(___flmul@temp+1)& (0+255),f,b
  5465  002116                     l14636:
  5466                           
  5467                           ; BSR set to: 0
  5468  002116  AF99               	btfss	(___flmul@prod+2)& (0+255),7,b
  5469  002118  D7EF               	goto	l14630
  5470                           
  5471                           ; BSR set to: 0
  5472  00211A  0E00               	movlw	0
  5473  00211C  6F95               	movwf	___flmul@aexp& (0+255),b
  5474                           
  5475                           ; BSR set to: 0
  5476  00211E  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
  5477  002120  D017               	goto	l4130
  5478                           
  5479                           ; BSR set to: 0
  5480  002122  0EFF               	movlw	255
  5481  002124  1591               	andwf	___flmul@grs& (0+255),w,b
  5482  002126  6F8C               	movwf	??___flmul& (0+255),b
  5483  002128  0EFF               	movlw	255
  5484  00212A  1592               	andwf	(___flmul@grs+1)& (0+255),w,b
  5485  00212C  6F8D               	movwf	(??___flmul+1)& (0+255),b
  5486  00212E  0EFF               	movlw	255
  5487  002130  1593               	andwf	(___flmul@grs+2)& (0+255),w,b
  5488  002132  6F8E               	movwf	(??___flmul+2)& (0+255),b
  5489  002134  0E7F               	movlw	127
  5490  002136  1594               	andwf	(___flmul@grs+3)& (0+255),w,b
  5491  002138  6F8F               	movwf	(??___flmul+3)& (0+255),b
  5492  00213A  518C               	movf	??___flmul& (0+255),w,b
  5493  00213C  118D               	iorwf	(??___flmul+1)& (0+255),w,b
  5494  00213E  118E               	iorwf	(??___flmul+2)& (0+255),w,b
  5495  002140  118F               	iorwf	(??___flmul+3)& (0+255),w,b
  5496  002142  B4D8               	btfsc	status,2,c
  5497  002144  D003               	goto	l4131
  5498  002146                     u14700:
  5499                           
  5500                           ; BSR set to: 0
  5501  002146  0E01               	movlw	1
  5502  002148  6F95               	movwf	___flmul@aexp& (0+255),b
  5503  00214A  D002               	goto	l4130
  5504  00214C                     l4131:
  5505                           
  5506                           ; BSR set to: 0
  5507  00214C  B197               	btfsc	___flmul@prod& (0+255),0,b
  5508  00214E  D7FB               	goto	u14700
  5509  002150                     l4130:
  5510                           
  5511                           ; BSR set to: 0
  5512  002150  5195               	movf	___flmul@aexp& (0+255),w,b
  5513  002152  B4D8               	btfsc	status,2,c
  5514  002154  D01F               	goto	l14656
  5515                           
  5516                           ; BSR set to: 0
  5517  002156  0E01               	movlw	1
  5518  002158  2797               	addwf	___flmul@prod& (0+255),f,b
  5519  00215A  0E00               	movlw	0
  5520  00215C  2398               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5521  00215E  2399               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5522  002160  239A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5523                           
  5524                           ; BSR set to: 0
  5525  002162  A19A               	btfss	(___flmul@prod+3)& (0+255),0,b
  5526  002164  D017               	goto	l14656
  5527                           
  5528                           ; BSR set to: 0
  5529  002166  C097  F08C         	movff	___flmul@prod,??___flmul
  5530  00216A  C098  F08D         	movff	___flmul@prod+1,??___flmul+1
  5531  00216E  C099  F08E         	movff	___flmul@prod+2,??___flmul+2
  5532  002172  C09A  F08F         	movff	___flmul@prod+3,??___flmul+3
  5533  002176  358F               	rlcf	(??___flmul+3)& (0+255),w,b
  5534  002178  338F               	rrcf	(??___flmul+3)& (0+255),f,b
  5535  00217A  338E               	rrcf	(??___flmul+2)& (0+255),f,b
  5536  00217C  338D               	rrcf	(??___flmul+1)& (0+255),f,b
  5537  00217E  338C               	rrcf	??___flmul& (0+255),f,b
  5538  002180  C08C  F097         	movff	??___flmul,___flmul@prod
  5539  002184  C08D  F098         	movff	??___flmul+1,___flmul@prod+1
  5540  002188  C08E  F099         	movff	??___flmul+2,___flmul@prod+2
  5541  00218C  C08F  F09A         	movff	??___flmul+3,___flmul@prod+3
  5542                           
  5543                           ; BSR set to: 0
  5544  002190  4B9B               	infsnz	___flmul@temp& (0+255),f,b
  5545  002192  2B9C               	incf	(___flmul@temp+1)& (0+255),f,b
  5546  002194                     l14656:
  5547                           
  5548                           ; BSR set to: 0
  5549  002194  BF9C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5550  002196  D00D               	goto	l14660
  5551  002198  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5552  00219A  E103               	bnz	u14740
  5553  00219C  299B               	incf	___flmul@temp& (0+255),w,b
  5554  00219E  A0D8               	btfss	status,0,c
  5555  0021A0  D008               	goto	l14660
  5556  0021A2                     u14740:
  5557                           
  5558                           ; BSR set to: 0
  5559  0021A2  0E00               	movlw	0
  5560  0021A4  6F97               	movwf	___flmul@prod& (0+255),b
  5561  0021A6  0E00               	movlw	0
  5562  0021A8  6F98               	movwf	(___flmul@prod+1)& (0+255),b
  5563  0021AA  0E80               	movlw	128
  5564  0021AC  6F99               	movwf	(___flmul@prod+2)& (0+255),b
  5565  0021AE  0E7F               	movlw	127
  5566  0021B0  D020               	goto	L2
  5567  0021B2                     l14660:
  5568                           
  5569                           ; BSR set to: 0
  5570  0021B2  BF9C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5571  0021B4  D005               	goto	u14750
  5572  0021B6  519C               	movf	(___flmul@temp+1)& (0+255),w,b
  5573  0021B8  E10E               	bnz	l4138
  5574  0021BA  059B               	decf	___flmul@temp& (0+255),w,b
  5575  0021BC  B0D8               	btfsc	status,0,c
  5576  0021BE  D00B               	goto	l4138
  5577  0021C0                     u14750:
  5578                           
  5579                           ; BSR set to: 0
  5580  0021C0  0E00               	movlw	0
  5581  0021C2  6F97               	movwf	___flmul@prod& (0+255),b
  5582  0021C4  0E00               	movlw	0
  5583  0021C6  6F98               	movwf	(___flmul@prod+1)& (0+255),b
  5584  0021C8  0E00               	movlw	0
  5585  0021CA  6F99               	movwf	(___flmul@prod+2)& (0+255),b
  5586  0021CC  0E00               	movlw	0
  5587  0021CE  6F9A               	movwf	(___flmul@prod+3)& (0+255),b
  5588  0021D0  0E00               	movlw	0
  5589  0021D2  6F90               	movwf	___flmul@sign& (0+255),b
  5590  0021D4  D00F               	goto	l14672
  5591  0021D6                     l4138:
  5592                           
  5593                           ; BSR set to: 0
  5594  0021D6  C09B  F096         	movff	___flmul@temp,___flmul@bexp
  5595                           
  5596                           ; BSR set to: 0
  5597  0021DA  0EFF               	movlw	255
  5598  0021DC  1797               	andwf	___flmul@prod& (0+255),f,b
  5599  0021DE  0EFF               	movlw	255
  5600  0021E0  1798               	andwf	(___flmul@prod+1)& (0+255),f,b
  5601  0021E2  0E7F               	movlw	127
  5602  0021E4  1799               	andwf	(___flmul@prod+2)& (0+255),f,b
  5603  0021E6  0E00               	movlw	0
  5604  0021E8  179A               	andwf	(___flmul@prod+3)& (0+255),f,b
  5605                           
  5606                           ; BSR set to: 0
  5607  0021EA  B196               	btfsc	___flmul@bexp& (0+255),0,b
  5608                           
  5609                           ; BSR set to: 0
  5610  0021EC  8F99               	bsf	(___flmul@prod+2)& (0+255),7,b
  5611                           
  5612                           ; BSR set to: 0
  5613  0021EE  90D8               	bcf	status,0,c
  5614  0021F0  3196               	rrcf	___flmul@bexp& (0+255),w,b
  5615  0021F2                     L2:
  5616  0021F2  6F9A               	movwf	(___flmul@prod+3)& (0+255),b
  5617  0021F4                     l14672:
  5618                           
  5619                           ; BSR set to: 0
  5620  0021F4  5190               	movf	___flmul@sign& (0+255),w,b
  5621  0021F6  139A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5622                           
  5623                           ; BSR set to: 0
  5624  0021F8  C097  F084         	movff	___flmul@prod,?___flmul
  5625  0021FC  C098  F085         	movff	___flmul@prod+1,?___flmul+1
  5626  002200  C099  F086         	movff	___flmul@prod+2,?___flmul+2
  5627  002204  C09A  F087         	movff	___flmul@prod+3,?___flmul+3
  5628                           
  5629                           ; BSR set to: 0
  5630  002208  0012               	return		;funcret
  5631  00220A                     __end_of___flmul:
  5632                           	opt callstack 0
  5633                           
  5634 ;; *************** function ___xxtofl *****************
  5635 ;; Defined at:
  5636 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  sign            1    wreg     unsigned char 
  5639 ;;  val             4    0[BANK0 ] long 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  sign            1    8[BANK0 ] unsigned char 
  5642 ;;  arg             4   10[BANK0 ] unsigned long 
  5643 ;;  exp             1    9[BANK0 ] unsigned char 
  5644 ;; Return value:  Size  Location     Type
  5645 ;;                  4    0[BANK0 ] unsigned char 
  5646 ;; Registers used:
  5647 ;;		wreg, status,2, status,0
  5648 ;; Tracked objects:
  5649 ;;		On entry : 0/0
  5650 ;;		On exit  : 0/0
  5651 ;;		Unchanged: 0/0
  5652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5655 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;Total ram usage:       14 bytes
  5658 ;; Hardware stack levels used:    1
  5659 ;; Hardware stack levels required when called:    7
  5660 ;; This function calls:
  5661 ;;		Nothing
  5662 ;; This function is called by:
  5663 ;;		_tempConversion
  5664 ;;		_log
  5665 ;;		_sinGeneration
  5666 ;;		_floor
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text11
  5671  0057CA                     __ptext11:
  5672                           	opt callstack 0
  5673  0057CA                     ___xxtofl:
  5674                           	opt callstack 19
  5675                           
  5676                           ; BSR set to: 0
  5677                           ;incstack = 0
  5678                           ;___xxtofl@sign stored from wreg
  5679  0057CA  0100               	movlb	0	; () banked
  5680  0057CC  6F68               	movwf	___xxtofl@sign& (0+255),b
  5681  0057CE  0100               	movlb	0	; () banked
  5682  0057D0  5168               	movf	___xxtofl@sign& (0+255),w,b
  5683  0057D2  A4D8               	btfss	status,2,c
  5684                           
  5685                           ; BSR set to: 0
  5686  0057D4  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5687  0057D6  D01A               	goto	l4162
  5688                           
  5689                           ; BSR set to: 0
  5690  0057D8  C060  F064         	movff	___xxtofl@val,??___xxtofl
  5691  0057DC  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  5692  0057E0  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  5693  0057E4  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  5694  0057E8  1F64               	comf	??___xxtofl& (0+255),f,b
  5695  0057EA  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  5696  0057EC  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  5697  0057EE  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  5698  0057F0  2B64               	incf	??___xxtofl& (0+255),f,b
  5699  0057F2  0E00               	movlw	0
  5700  0057F4  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  5701  0057F6  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  5702  0057F8  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  5703  0057FA  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  5704  0057FE  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  5705  005802  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  5706  005806  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  5707  00580A  D008               	goto	l15224
  5708  00580C                     l4162:
  5709                           
  5710                           ; BSR set to: 0
  5711  00580C  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  5712  005810  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5713  005814  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5714  005818  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5715  00581C                     l15224:
  5716                           
  5717                           ; BSR set to: 0
  5718  00581C  5160               	movf	___xxtofl@val& (0+255),w,b
  5719  00581E  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  5720  005820  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  5721  005822  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  5722  005824  A4D8               	btfss	status,2,c
  5723  005826  D009               	goto	l15230
  5724                           
  5725                           ; BSR set to: 0
  5726  005828  0E00               	movlw	0
  5727  00582A  6F60               	movwf	?___xxtofl& (0+255),b
  5728  00582C  0E00               	movlw	0
  5729  00582E  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  5730  005830  0E00               	movlw	0
  5731  005832  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  5732  005834  0E00               	movlw	0
  5733  005836  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  5734  005838  0012               	return	
  5735  00583A                     l15230:
  5736                           
  5737                           ; BSR set to: 0
  5738  00583A  0E96               	movlw	150
  5739  00583C  6F69               	movwf	___xxtofl@exp& (0+255),b
  5740  00583E  D006               	goto	l15234
  5741  005840                     l15232:
  5742                           
  5743                           ; BSR set to: 0
  5744  005840  2B69               	incf	___xxtofl@exp& (0+255),f,b
  5745  005842  90D8               	bcf	status,0,c
  5746  005844  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5747  005846  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5748  005848  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5749  00584A  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  5750  00584C                     l15234:
  5751                           
  5752                           ; BSR set to: 0
  5753  00584C  0E00               	movlw	0
  5754  00584E  156A               	andwf	___xxtofl@arg& (0+255),w,b
  5755  005850  6F64               	movwf	??___xxtofl& (0+255),b
  5756  005852  0E00               	movlw	0
  5757  005854  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  5758  005856  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  5759  005858  0E00               	movlw	0
  5760  00585A  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  5761  00585C  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  5762  00585E  0EFE               	movlw	254
  5763  005860  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  5764  005862  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  5765  005864  5164               	movf	??___xxtofl& (0+255),w,b
  5766  005866  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  5767  005868  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  5768  00586A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  5769  00586C  B4D8               	btfsc	status,2,c
  5770  00586E  D00D               	goto	l4169
  5771  005870  D7E7               	goto	l15232
  5772  005872                     l15236:
  5773                           
  5774                           ; BSR set to: 0
  5775  005872  2B69               	incf	___xxtofl@exp& (0+255),f,b
  5776                           
  5777                           ; BSR set to: 0
  5778  005874  0E01               	movlw	1
  5779  005876  276A               	addwf	___xxtofl@arg& (0+255),f,b
  5780  005878  0E00               	movlw	0
  5781  00587A  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  5782  00587C  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  5783  00587E  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  5784                           
  5785                           ; BSR set to: 0
  5786  005880  90D8               	bcf	status,0,c
  5787  005882  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5788  005884  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5789  005886  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5790  005888  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  5791  00588A                     l4169:
  5792                           
  5793                           ; BSR set to: 0
  5794  00588A  0E00               	movlw	0
  5795  00588C  156A               	andwf	___xxtofl@arg& (0+255),w,b
  5796  00588E  6F64               	movwf	??___xxtofl& (0+255),b
  5797  005890  0E00               	movlw	0
  5798  005892  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  5799  005894  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  5800  005896  0E00               	movlw	0
  5801  005898  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  5802  00589A  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  5803  00589C  0EFF               	movlw	255
  5804  00589E  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  5805  0058A0  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  5806  0058A2  5164               	movf	??___xxtofl& (0+255),w,b
  5807  0058A4  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  5808  0058A6  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  5809  0058A8  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  5810  0058AA  B4D8               	btfsc	status,2,c
  5811  0058AC  D007               	goto	l15244
  5812  0058AE  D7E1               	goto	l15236
  5813  0058B0                     l15242:
  5814                           
  5815                           ; BSR set to: 0
  5816  0058B0  0769               	decf	___xxtofl@exp& (0+255),f,b
  5817  0058B2  90D8               	bcf	status,0,c
  5818  0058B4  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  5819  0058B6  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  5820  0058B8  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  5821  0058BA  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  5822  0058BC                     l15244:
  5823                           
  5824                           ; BSR set to: 0
  5825  0058BC  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  5826  0058BE  D003               	goto	u15690
  5827                           
  5828                           ; BSR set to: 0
  5829  0058C0  0E02               	movlw	2
  5830  0058C2  6169               	cpfslt	___xxtofl@exp& (0+255),b
  5831  0058C4  D7F5               	goto	l15242
  5832  0058C6                     u15690:
  5833                           
  5834                           ; BSR set to: 0
  5835  0058C6  A169               	btfss	___xxtofl@exp& (0+255),0,b
  5836                           
  5837                           ; BSR set to: 0
  5838  0058C8  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  5839                           
  5840                           ; BSR set to: 0
  5841  0058CA  90D8               	bcf	status,0,c
  5842  0058CC  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  5843                           
  5844                           ; BSR set to: 0
  5845  0058CE  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  5846  0058D2  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  5847  0058D4  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  5848  0058D6  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  5849  0058D8  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  5850  0058DC  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  5851  0058DE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  5852  0058E0  6B64               	clrf	??___xxtofl& (0+255),b
  5853  0058E2  5164               	movf	??___xxtofl& (0+255),w,b
  5854  0058E4  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  5855  0058E6  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  5856  0058E8  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  5857  0058EA  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  5858  0058EC  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  5859  0058EE  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  5860  0058F0  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  5861                           
  5862                           ; BSR set to: 0
  5863  0058F2  5168               	movf	___xxtofl@sign& (0+255),w,b
  5864  0058F4  A4D8               	btfss	status,2,c
  5865                           
  5866                           ; BSR set to: 0
  5867  0058F6  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5868  0058F8  D001               	goto	l15260
  5869                           
  5870                           ; BSR set to: 0
  5871  0058FA  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  5872  0058FC                     l15260:
  5873                           
  5874                           ; BSR set to: 0
  5875  0058FC  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  5876  005900  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  5877  005904  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  5878  005908  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  5879                           
  5880                           ; BSR set to: 0
  5881  00590C  0012               	return		;funcret
  5882  00590E                     __end_of___xxtofl:
  5883                           	opt callstack 0
  5884                           
  5885 ;; *************** function ___fltol *****************
  5886 ;; Defined at:
  5887 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  f1              4    0[BANK0 ] unsigned char 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;  exp1            1    9[BANK0 ] unsigned char 
  5892 ;;  sign1           1    8[BANK0 ] unsigned char 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  4    0[BANK0 ] long 
  5895 ;; Registers used:
  5896 ;;		wreg, status,2, status,0
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5903 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;Total ram usage:       10 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    7
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_tempConversion
  5913 ;;		_sinGeneration
  5914 ;;		_floor
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text12
  5919  007B7E                     __ptext12:
  5920                           	opt callstack 0
  5921  007B7E                     ___fltol:
  5922                           	opt callstack 20
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;incstack = 0
  5926  007B7E  0100               	movlb	0	; () banked
  5927  007B80  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5928  007B82  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5929  007B84  6F69               	movwf	___fltol@exp1& (0+255),b
  5930  007B86  5169               	movf	___fltol@exp1& (0+255),w,b
  5931  007B88  A4D8               	btfss	status,2,c
  5932  007B8A  D009               	goto	l15710
  5933  007B8C                     u16210:
  5934                           
  5935                           ; BSR set to: 0
  5936  007B8C  0E00               	movlw	0
  5937  007B8E  6F60               	movwf	?___fltol& (0+255),b
  5938  007B90  0E00               	movlw	0
  5939  007B92  6F61               	movwf	(?___fltol+1)& (0+255),b
  5940  007B94  0E00               	movlw	0
  5941  007B96  6F62               	movwf	(?___fltol+2)& (0+255),b
  5942  007B98  0E00               	movlw	0
  5943  007B9A  6F63               	movwf	(?___fltol+3)& (0+255),b
  5944  007B9C  0012               	return	
  5945  007B9E                     l15710:
  5946                           
  5947                           ; BSR set to: 0
  5948  007B9E  C060  F064         	movff	___fltol@f1,??___fltol
  5949  007BA2  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  5950  007BA6  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  5951  007BAA  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  5952  007BAE  0E20               	movlw	32
  5953  007BB0  D005               	goto	u16220
  5954  007BB2                     u16225:
  5955  007BB2  90D8               	bcf	status,0,c
  5956  007BB4  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5957  007BB6  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5958  007BB8  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5959  007BBA  3364               	rrcf	??___fltol& (0+255),f,b
  5960  007BBC                     u16220:
  5961  007BBC  2EE8               	decfsz	wreg,f,c
  5962  007BBE  D7F9               	goto	u16225
  5963  007BC0  5164               	movf	??___fltol& (0+255),w,b
  5964  007BC2  6F68               	movwf	___fltol@sign1& (0+255),b
  5965                           
  5966                           ; BSR set to: 0
  5967  007BC4  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5968                           
  5969                           ; BSR set to: 0
  5970  007BC6  0EFF               	movlw	255
  5971  007BC8  1760               	andwf	___fltol@f1& (0+255),f,b
  5972  007BCA  0EFF               	movlw	255
  5973  007BCC  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5974  007BCE  0EFF               	movlw	255
  5975  007BD0  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5976  007BD2  0E00               	movlw	0
  5977  007BD4  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5978                           
  5979                           ; BSR set to: 0
  5980  007BD6  0E96               	movlw	150
  5981  007BD8  5F69               	subwf	___fltol@exp1& (0+255),f,b
  5982                           
  5983                           ; BSR set to: 0
  5984  007BDA  AF69               	btfss	___fltol@exp1& (0+255),7,b
  5985  007BDC  D00D               	goto	l15730
  5986                           
  5987                           ; BSR set to: 0
  5988  007BDE  5169               	movf	___fltol@exp1& (0+255),w,b
  5989  007BE0  0A80               	xorlw	128
  5990  007BE2  0F97               	addlw	151
  5991  007BE4  A0D8               	btfss	status,0,c
  5992  007BE6  D7D2               	goto	u16210
  5993  007BE8                     l15726:
  5994                           
  5995                           ; BSR set to: 0
  5996  007BE8  90D8               	bcf	status,0,c
  5997  007BEA  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5998  007BEC  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5999  007BEE  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6000  007BF0  3360               	rrcf	___fltol@f1& (0+255),f,b
  6001                           
  6002                           ; BSR set to: 0
  6003  007BF2  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  6004  007BF4  D7F9               	goto	l15726
  6005  007BF6  D00D               	goto	u16260
  6006  007BF8                     l15730:
  6007                           
  6008                           ; BSR set to: 0
  6009  007BF8  0E1F               	movlw	31
  6010  007BFA  6569               	cpfsgt	___fltol@exp1& (0+255),b
  6011  007BFC  D007               	goto	l15738
  6012  007BFE  D7C6               	goto	u16210
  6013  007C00                     l15736:
  6014                           
  6015                           ; BSR set to: 0
  6016  007C00  90D8               	bcf	status,0,c
  6017  007C02  3760               	rlcf	___fltol@f1& (0+255),f,b
  6018  007C04  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6019  007C06  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6020  007C08  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6021  007C0A  0769               	decf	___fltol@exp1& (0+255),f,b
  6022  007C0C                     l15738:
  6023                           
  6024                           ; BSR set to: 0
  6025  007C0C  5169               	movf	___fltol@exp1& (0+255),w,b
  6026  007C0E  A4D8               	btfss	status,2,c
  6027  007C10  D7F7               	goto	l15736
  6028  007C12                     u16260:
  6029                           
  6030                           ; BSR set to: 0
  6031  007C12  5168               	movf	___fltol@sign1& (0+255),w,b
  6032  007C14  B4D8               	btfsc	status,2,c
  6033  007C16  D008               	goto	l15744
  6034                           
  6035                           ; BSR set to: 0
  6036  007C18  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  6037  007C1A  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  6038  007C1C  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  6039  007C1E  6D60               	negf	___fltol@f1& (0+255),b
  6040  007C20  0E00               	movlw	0
  6041  007C22  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6042  007C24  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6043  007C26  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6044  007C28                     l15744:
  6045                           
  6046                           ; BSR set to: 0
  6047  007C28  C060  F060         	movff	___fltol@f1,?___fltol
  6048  007C2C  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  6049  007C30  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  6050  007C34  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  6051                           
  6052                           ; BSR set to: 0
  6053  007C38  0012               	return		;funcret
  6054  007C3A                     __end_of___fltol:
  6055                           	opt callstack 0
  6056                           
  6057 ;; *************** function ___flsub *****************
  6058 ;; Defined at:
  6059 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  b               4   36[BANK0 ] long 
  6062 ;;  a               4   40[BANK0 ] long 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  4   36[BANK0 ] long 
  6067 ;; Registers used:
  6068 ;;		wreg, status,2, status,0, cstack
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6074 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;Total ram usage:        8 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    8
  6081 ;; This function calls:
  6082 ;;		___fladd
  6083 ;; This function is called by:
  6084 ;;		_tempConversion
  6085 ;;		_sin
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           	psect	text13
  6090  009798                     __ptext13:
  6091                           	opt callstack 0
  6092  009798                     ___flsub:
  6093                           	opt callstack 19
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;incstack = 0
  6097  009798  0E00               	movlw	0
  6098  00979A  0100               	movlb	0	; () banked
  6099  00979C  1B88               	xorwf	___flsub@a& (0+255),f,b
  6100  00979E  0E00               	movlw	0
  6101  0097A0  1B89               	xorwf	(___flsub@a+1)& (0+255),f,b
  6102  0097A2  0E00               	movlw	0
  6103  0097A4  1B8A               	xorwf	(___flsub@a+2)& (0+255),f,b
  6104  0097A6  0E80               	movlw	128
  6105  0097A8  1B8B               	xorwf	(___flsub@a+3)& (0+255),f,b
  6106                           
  6107                           ; BSR set to: 0
  6108  0097AA  C084  F074         	movff	___flsub@b,___fladd@b
  6109  0097AE  C085  F075         	movff	___flsub@b+1,___fladd@b+1
  6110  0097B2  C086  F076         	movff	___flsub@b+2,___fladd@b+2
  6111  0097B6  C087  F077         	movff	___flsub@b+3,___fladd@b+3
  6112  0097BA  C088  F078         	movff	___flsub@a,___fladd@a
  6113  0097BE  C089  F079         	movff	___flsub@a+1,___fladd@a+1
  6114  0097C2  C08A  F07A         	movff	___flsub@a+2,___fladd@a+2
  6115  0097C6  C08B  F07B         	movff	___flsub@a+3,___fladd@a+3
  6116  0097CA  ECCD  F015         	call	___fladd	;wreg free
  6117  0097CE  C074  F084         	movff	?___fladd,?___flsub
  6118  0097D2  C075  F085         	movff	?___fladd+1,?___flsub+1
  6119  0097D6  C076  F086         	movff	?___fladd+2,?___flsub+2
  6120  0097DA  C077  F087         	movff	?___fladd+3,?___flsub+3
  6121  0097DE  0012               	return		;funcret
  6122  0097E0                     __end_of___flsub:
  6123                           	opt callstack 0
  6124                           
  6125 ;; *************** function ___fladd *****************
  6126 ;; Defined at:
  6127 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6128 ;; Parameters:    Size  Location     Type
  6129 ;;  b               4   20[BANK0 ] long 
  6130 ;;  a               4   24[BANK0 ] long 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  grs             1   35[BANK0 ] unsigned char 
  6133 ;;  bexp            1   34[BANK0 ] unsigned char 
  6134 ;;  aexp            1   33[BANK0 ] unsigned char 
  6135 ;;  signs           1   32[BANK0 ] unsigned char 
  6136 ;; Return value:  Size  Location     Type
  6137 ;;                  4   20[BANK0 ] unsigned char 
  6138 ;; Registers used:
  6139 ;;		wreg, status,2, status,0
  6140 ;; Tracked objects:
  6141 ;;		On entry : 0/0
  6142 ;;		On exit  : 0/0
  6143 ;;		Unchanged: 0/0
  6144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6145 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6146 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6147 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;Total ram usage:       16 bytes
  6150 ;; Hardware stack levels used:    1
  6151 ;; Hardware stack levels required when called:    7
  6152 ;; This function calls:
  6153 ;;		Nothing
  6154 ;; This function is called by:
  6155 ;;		_tempConversion
  6156 ;;		___flsub
  6157 ;;		_log
  6158 ;;		_eval_poly
  6159 ;;		_floor
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text14
  6164  002B9A                     __ptext14:
  6165                           	opt callstack 0
  6166  002B9A                     ___fladd:
  6167                           	opt callstack 18
  6168                           
  6169                           ;incstack = 0
  6170  002B9A  0100               	movlb	0	; () banked
  6171  002B9C  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6172  002B9E  0B80               	andlw	128
  6173  002BA0  6F80               	movwf	___fladd@signs& (0+255),b
  6174  002BA2  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6175  002BA4  2577               	addwf	(___fladd@b+3)& (0+255),w,b
  6176  002BA6  6F82               	movwf	___fladd@bexp& (0+255),b
  6177                           
  6178                           ; BSR set to: 0
  6179  002BA8  BF76               	btfsc	(___fladd@b+2)& (0+255),7,b
  6180                           
  6181                           ; BSR set to: 0
  6182  002BAA  8182               	bsf	___fladd@bexp& (0+255),0,b
  6183                           
  6184                           ; BSR set to: 0
  6185  002BAC  5182               	movf	___fladd@bexp& (0+255),w,b
  6186  002BAE  B4D8               	btfsc	status,2,c
  6187  002BB0  D00D               	goto	l14362
  6188                           
  6189                           ; BSR set to: 0
  6190  002BB2  2982               	incf	___fladd@bexp& (0+255),w,b
  6191  002BB4  A4D8               	btfss	status,2,c
  6192  002BB6  D008               	goto	l14358
  6193                           
  6194                           ; BSR set to: 0
  6195  002BB8  0E00               	movlw	0
  6196  002BBA  6F74               	movwf	___fladd@b& (0+255),b
  6197  002BBC  0E00               	movlw	0
  6198  002BBE  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6199  002BC0  0E00               	movlw	0
  6200  002BC2  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6201  002BC4  0E00               	movlw	0
  6202  002BC6  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6203  002BC8                     l14358:
  6204                           
  6205                           ; BSR set to: 0
  6206  002BC8  8F76               	bsf	(___fladd@b+2)& (0+255),7,b
  6207  002BCA  D006               	goto	L3
  6208  002BCC                     l14362:
  6209                           
  6210                           ; BSR set to: 0
  6211  002BCC  0E00               	movlw	0
  6212  002BCE  6F74               	movwf	___fladd@b& (0+255),b
  6213  002BD0  0E00               	movlw	0
  6214  002BD2  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6215  002BD4  0E00               	movlw	0
  6216  002BD6  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6217  002BD8                     L3:
  6218  002BD8  0E00               	movlw	0
  6219  002BDA  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6220                           
  6221                           ; BSR set to: 0
  6222  002BDC  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6223  002BDE  0B80               	andlw	128
  6224  002BE0  6F81               	movwf	___fladd@aexp& (0+255),b
  6225                           
  6226                           ; BSR set to: 0
  6227  002BE2  5180               	movf	___fladd@signs& (0+255),w,b
  6228  002BE4  1981               	xorwf	___fladd@aexp& (0+255),w,b
  6229  002BE6  A4D8               	btfss	status,2,c
  6230                           
  6231                           ; BSR set to: 0
  6232  002BE8  8D80               	bsf	___fladd@signs& (0+255),6,b
  6233                           
  6234                           ; BSR set to: 0
  6235  002BEA  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6236  002BEC  257B               	addwf	(___fladd@a+3)& (0+255),w,b
  6237  002BEE  6F81               	movwf	___fladd@aexp& (0+255),b
  6238                           
  6239                           ; BSR set to: 0
  6240  002BF0  BF7A               	btfsc	(___fladd@a+2)& (0+255),7,b
  6241                           
  6242                           ; BSR set to: 0
  6243  002BF2  8181               	bsf	___fladd@aexp& (0+255),0,b
  6244                           
  6245                           ; BSR set to: 0
  6246  002BF4  5181               	movf	___fladd@aexp& (0+255),w,b
  6247  002BF6  B4D8               	btfsc	status,2,c
  6248  002BF8  D00D               	goto	l14386
  6249                           
  6250                           ; BSR set to: 0
  6251  002BFA  2981               	incf	___fladd@aexp& (0+255),w,b
  6252  002BFC  A4D8               	btfss	status,2,c
  6253  002BFE  D008               	goto	l14382
  6254                           
  6255                           ; BSR set to: 0
  6256  002C00  0E00               	movlw	0
  6257  002C02  6F78               	movwf	___fladd@a& (0+255),b
  6258  002C04  0E00               	movlw	0
  6259  002C06  6F79               	movwf	(___fladd@a+1)& (0+255),b
  6260  002C08  0E00               	movlw	0
  6261  002C0A  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  6262  002C0C  0E00               	movlw	0
  6263  002C0E  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  6264  002C10                     l14382:
  6265                           
  6266                           ; BSR set to: 0
  6267  002C10  8F7A               	bsf	(___fladd@a+2)& (0+255),7,b
  6268  002C12  D006               	goto	L4
  6269  002C14                     l14386:
  6270                           
  6271                           ; BSR set to: 0
  6272  002C14  0E00               	movlw	0
  6273  002C16  6F78               	movwf	___fladd@a& (0+255),b
  6274  002C18  0E00               	movlw	0
  6275  002C1A  6F79               	movwf	(___fladd@a+1)& (0+255),b
  6276  002C1C  0E00               	movlw	0
  6277  002C1E  6F7A               	movwf	(___fladd@a+2)& (0+255),b
  6278  002C20                     L4:
  6279  002C20  0E00               	movlw	0
  6280  002C22  6F7B               	movwf	(___fladd@a+3)& (0+255),b
  6281                           
  6282                           ; BSR set to: 0
  6283  002C24  5182               	movf	___fladd@bexp& (0+255),w,b
  6284  002C26  5D81               	subwf	___fladd@aexp& (0+255),w,b
  6285  002C28  B0D8               	btfsc	status,0,c
  6286  002C2A  D022               	goto	l14424
  6287                           
  6288                           ; BSR set to: 0
  6289  002C2C  AD80               	btfss	___fladd@signs& (0+255),6,b
  6290  002C2E  D002               	goto	l14394
  6291                           
  6292                           ; BSR set to: 0
  6293  002C30  0E80               	movlw	128
  6294  002C32  1B80               	xorwf	___fladd@signs& (0+255),f,b
  6295  002C34                     l14394:
  6296                           
  6297                           ; BSR set to: 0
  6298  002C34  C082  F083         	movff	___fladd@bexp,___fladd@grs
  6299                           
  6300                           ; BSR set to: 0
  6301  002C38  C081  F082         	movff	___fladd@aexp,___fladd@bexp
  6302                           
  6303                           ; BSR set to: 0
  6304  002C3C  C083  F081         	movff	___fladd@grs,___fladd@aexp
  6305                           
  6306                           ; BSR set to: 0
  6307  002C40  C074  F083         	movff	___fladd@b,___fladd@grs
  6308                           
  6309                           ; BSR set to: 0
  6310  002C44  C078  F074         	movff	___fladd@a,___fladd@b
  6311                           
  6312                           ; BSR set to: 0
  6313  002C48  C083  F078         	movff	___fladd@grs,___fladd@a
  6314                           
  6315                           ; BSR set to: 0
  6316  002C4C  C075  F083         	movff	___fladd@b+1,___fladd@grs
  6317                           
  6318                           ; BSR set to: 0
  6319  002C50  C079  F075         	movff	___fladd@a+1,___fladd@b+1
  6320                           
  6321                           ; BSR set to: 0
  6322  002C54  C083  F079         	movff	___fladd@grs,___fladd@a+1
  6323                           
  6324                           ; BSR set to: 0
  6325  002C58  C076  F083         	movff	___fladd@b+2,___fladd@grs
  6326                           
  6327                           ; BSR set to: 0
  6328  002C5C  C07A  F076         	movff	___fladd@a+2,___fladd@b+2
  6329                           
  6330                           ; BSR set to: 0
  6331  002C60  C083  F07A         	movff	___fladd@grs,___fladd@a+2
  6332                           
  6333                           ; BSR set to: 0
  6334  002C64  C077  F083         	movff	___fladd@b+3,___fladd@grs
  6335                           
  6336                           ; BSR set to: 0
  6337  002C68  C07B  F077         	movff	___fladd@a+3,___fladd@b+3
  6338                           
  6339                           ; BSR set to: 0
  6340  002C6C  C083  F07B         	movff	___fladd@grs,___fladd@a+3
  6341  002C70                     l14424:
  6342                           
  6343                           ; BSR set to: 0
  6344  002C70  0E00               	movlw	0
  6345  002C72  6F83               	movwf	___fladd@grs& (0+255),b
  6346                           
  6347                           ; BSR set to: 0
  6348  002C74  5182               	movf	___fladd@bexp& (0+255),w,b
  6349  002C76  C081  F07C         	movff	___fladd@aexp,??___fladd
  6350  002C7A  6B7D               	clrf	(??___fladd+1)& (0+255),b
  6351  002C7C  5F7C               	subwf	??___fladd& (0+255),f,b
  6352  002C7E  0E00               	movlw	0
  6353  002C80  5B7D               	subwfb	(??___fladd+1)& (0+255),f,b
  6354  002C82  BF7D               	btfsc	(??___fladd+1)& (0+255),7,b
  6355  002C84  D02C               	goto	l4036
  6356  002C86  517D               	movf	(??___fladd+1)& (0+255),w,b
  6357  002C88  E104               	bnz	u14280
  6358  002C8A  0E1A               	movlw	26
  6359  002C8C  5D7C               	subwf	??___fladd& (0+255),w,b
  6360  002C8E  A0D8               	btfss	status,0,c
  6361  002C90  D026               	goto	l4036
  6362  002C92                     u14280:
  6363                           
  6364                           ; BSR set to: 0
  6365  002C92  5174               	movf	___fladd@b& (0+255),w,b
  6366  002C94  1175               	iorwf	(___fladd@b+1)& (0+255),w,b
  6367  002C96  1176               	iorwf	(___fladd@b+2)& (0+255),w,b
  6368  002C98  1177               	iorwf	(___fladd@b+3)& (0+255),w,b
  6369  002C9A  B4D8               	btfsc	status,2,c
  6370  002C9C  D002               	goto	u14290
  6371  002C9E  0E01               	movlw	1
  6372  002CA0  D001               	goto	u14300
  6373  002CA2                     u14290:
  6374  002CA2  0E00               	movlw	0
  6375  002CA4                     u14300:
  6376  002CA4  6F83               	movwf	___fladd@grs& (0+255),b
  6377                           
  6378                           ; BSR set to: 0
  6379  002CA6  0E00               	movlw	0
  6380  002CA8  6F74               	movwf	___fladd@b& (0+255),b
  6381  002CAA  0E00               	movlw	0
  6382  002CAC  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6383  002CAE  0E00               	movlw	0
  6384  002CB0  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6385  002CB2  0E00               	movlw	0
  6386  002CB4  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6387                           
  6388                           ; BSR set to: 0
  6389  002CB6  C081  F082         	movff	___fladd@aexp,___fladd@bexp
  6390  002CBA  D015               	goto	u14330
  6391  002CBC                     l4037:
  6392                           
  6393                           ; BSR set to: 0
  6394  002CBC  A183               	btfss	___fladd@grs& (0+255),0,b
  6395  002CBE  D005               	goto	l14436
  6396                           
  6397                           ; BSR set to: 0
  6398  002CC0  90D8               	bcf	status,0,c
  6399  002CC2  3183               	rrcf	___fladd@grs& (0+255),w,b
  6400  002CC4  0901               	iorlw	1
  6401  002CC6  6F83               	movwf	___fladd@grs& (0+255),b
  6402  002CC8  D002               	goto	l14438
  6403  002CCA                     l14436:
  6404                           
  6405                           ; BSR set to: 0
  6406  002CCA  90D8               	bcf	status,0,c
  6407  002CCC  3383               	rrcf	___fladd@grs& (0+255),f,b
  6408  002CCE                     l14438:
  6409                           
  6410                           ; BSR set to: 0
  6411  002CCE  B174               	btfsc	___fladd@b& (0+255),0,b
  6412                           
  6413                           ; BSR set to: 0
  6414  002CD0  8F83               	bsf	___fladd@grs& (0+255),7,b
  6415                           
  6416                           ; BSR set to: 0
  6417  002CD2  3577               	rlcf	(___fladd@b+3)& (0+255),w,b
  6418  002CD4  3377               	rrcf	(___fladd@b+3)& (0+255),f,b
  6419  002CD6  3376               	rrcf	(___fladd@b+2)& (0+255),f,b
  6420  002CD8  3375               	rrcf	(___fladd@b+1)& (0+255),f,b
  6421  002CDA  3374               	rrcf	___fladd@b& (0+255),f,b
  6422                           
  6423                           ; BSR set to: 0
  6424  002CDC  2B82               	incf	___fladd@bexp& (0+255),f,b
  6425  002CDE                     l4036:
  6426                           
  6427                           ; BSR set to: 0
  6428  002CDE  5181               	movf	___fladd@aexp& (0+255),w,b
  6429  002CE0  5D82               	subwf	___fladd@bexp& (0+255),w,b
  6430  002CE2  A0D8               	btfss	status,0,c
  6431  002CE4  D7EB               	goto	l4037
  6432  002CE6                     u14330:
  6433                           
  6434                           ; BSR set to: 0
  6435  002CE6  BD80               	btfsc	___fladd@signs& (0+255),6,b
  6436  002CE8  D028               	goto	l14470
  6437                           
  6438                           ; BSR set to: 0
  6439  002CEA  5182               	movf	___fladd@bexp& (0+255),w,b
  6440  002CEC  A4D8               	btfss	status,2,c
  6441  002CEE  D009               	goto	l14452
  6442                           
  6443                           ; BSR set to: 0
  6444  002CF0  0E00               	movlw	0
  6445  002CF2  6F74               	movwf	?___fladd& (0+255),b
  6446  002CF4  0E00               	movlw	0
  6447  002CF6  6F75               	movwf	(?___fladd+1)& (0+255),b
  6448  002CF8  0E00               	movlw	0
  6449  002CFA  6F76               	movwf	(?___fladd+2)& (0+255),b
  6450  002CFC  0E00               	movlw	0
  6451  002CFE  6F77               	movwf	(?___fladd+3)& (0+255),b
  6452  002D00  0012               	return	
  6453  002D02                     l14452:
  6454                           
  6455                           ; BSR set to: 0
  6456  002D02  5178               	movf	___fladd@a& (0+255),w,b
  6457  002D04  2774               	addwf	___fladd@b& (0+255),f,b
  6458  002D06  5179               	movf	(___fladd@a+1)& (0+255),w,b
  6459  002D08  2375               	addwfc	(___fladd@b+1)& (0+255),f,b
  6460  002D0A  517A               	movf	(___fladd@a+2)& (0+255),w,b
  6461  002D0C  2376               	addwfc	(___fladd@b+2)& (0+255),f,b
  6462  002D0E  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6463  002D10  2377               	addwfc	(___fladd@b+3)& (0+255),f,b
  6464                           
  6465                           ; BSR set to: 0
  6466  002D12  A177               	btfss	(___fladd@b+3)& (0+255),0,b
  6467  002D14  D071               	goto	u14460
  6468                           
  6469                           ; BSR set to: 0
  6470  002D16  A183               	btfss	___fladd@grs& (0+255),0,b
  6471  002D18  D005               	goto	l14460
  6472                           
  6473                           ; BSR set to: 0
  6474  002D1A  90D8               	bcf	status,0,c
  6475  002D1C  3183               	rrcf	___fladd@grs& (0+255),w,b
  6476  002D1E  0901               	iorlw	1
  6477  002D20  6F83               	movwf	___fladd@grs& (0+255),b
  6478  002D22  D002               	goto	l14462
  6479  002D24                     l14460:
  6480                           
  6481                           ; BSR set to: 0
  6482  002D24  90D8               	bcf	status,0,c
  6483  002D26  3383               	rrcf	___fladd@grs& (0+255),f,b
  6484  002D28                     l14462:
  6485                           
  6486                           ; BSR set to: 0
  6487  002D28  B174               	btfsc	___fladd@b& (0+255),0,b
  6488                           
  6489                           ; BSR set to: 0
  6490  002D2A  8F83               	bsf	___fladd@grs& (0+255),7,b
  6491                           
  6492                           ; BSR set to: 0
  6493  002D2C  3577               	rlcf	(___fladd@b+3)& (0+255),w,b
  6494  002D2E  3377               	rrcf	(___fladd@b+3)& (0+255),f,b
  6495  002D30  3376               	rrcf	(___fladd@b+2)& (0+255),f,b
  6496  002D32  3375               	rrcf	(___fladd@b+1)& (0+255),f,b
  6497  002D34  3374               	rrcf	___fladd@b& (0+255),f,b
  6498                           
  6499                           ; BSR set to: 0
  6500  002D36  2B82               	incf	___fladd@bexp& (0+255),f,b
  6501  002D38  D05F               	goto	u14460
  6502  002D3A                     l14470:
  6503                           
  6504                           ; BSR set to: 0
  6505  002D3A  5178               	movf	___fladd@a& (0+255),w,b
  6506  002D3C  5D74               	subwf	___fladd@b& (0+255),w,b
  6507  002D3E  5179               	movf	(___fladd@a+1)& (0+255),w,b
  6508  002D40  5975               	subwfb	(___fladd@b+1)& (0+255),w,b
  6509  002D42  517A               	movf	(___fladd@a+2)& (0+255),w,b
  6510  002D44  5976               	subwfb	(___fladd@b+2)& (0+255),w,b
  6511  002D46  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6512  002D48  0A80               	xorlw	128
  6513  002D4A  6F7C               	movwf	??___fladd& (0+255),b
  6514  002D4C  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6515  002D4E  0A80               	xorlw	128
  6516  002D50  597C               	subwfb	??___fladd& (0+255),w,b
  6517  002D52  B0D8               	btfsc	status,0,c
  6518  002D54  D025               	goto	l14480
  6519                           
  6520                           ; BSR set to: 0
  6521  002D56  5174               	movf	___fladd@b& (0+255),w,b
  6522  002D58  5D78               	subwf	___fladd@a& (0+255),w,b
  6523  002D5A  6F7C               	movwf	??___fladd& (0+255),b
  6524  002D5C  5175               	movf	(___fladd@b+1)& (0+255),w,b
  6525  002D5E  5979               	subwfb	(___fladd@a+1)& (0+255),w,b
  6526  002D60  6F7D               	movwf	(??___fladd+1)& (0+255),b
  6527  002D62  5176               	movf	(___fladd@b+2)& (0+255),w,b
  6528  002D64  597A               	subwfb	(___fladd@a+2)& (0+255),w,b
  6529  002D66  6F7E               	movwf	(??___fladd+2)& (0+255),b
  6530  002D68  5177               	movf	(___fladd@b+3)& (0+255),w,b
  6531  002D6A  597B               	subwfb	(___fladd@a+3)& (0+255),w,b
  6532  002D6C  6F7F               	movwf	(??___fladd+3)& (0+255),b
  6533  002D6E  0EFF               	movlw	255
  6534  002D70  257C               	addwf	??___fladd& (0+255),w,b
  6535  002D72  6F74               	movwf	___fladd@b& (0+255),b
  6536  002D74  0EFF               	movlw	255
  6537  002D76  217D               	addwfc	(??___fladd+1)& (0+255),w,b
  6538  002D78  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6539  002D7A  0EFF               	movlw	255
  6540  002D7C  217E               	addwfc	(??___fladd+2)& (0+255),w,b
  6541  002D7E  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6542  002D80  0EFF               	movlw	255
  6543  002D82  217F               	addwfc	(??___fladd+3)& (0+255),w,b
  6544  002D84  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6545  002D86  0E80               	movlw	128
  6546  002D88  1B80               	xorwf	___fladd@signs& (0+255),f,b
  6547                           
  6548                           ; BSR set to: 0
  6549  002D8A  6D83               	negf	___fladd@grs& (0+255),b
  6550                           
  6551                           ; BSR set to: 0
  6552  002D8C  5183               	movf	___fladd@grs& (0+255),w,b
  6553  002D8E  A4D8               	btfss	status,2,c
  6554  002D90  D00F               	goto	l4052
  6555                           
  6556                           ; BSR set to: 0
  6557  002D92  0E01               	movlw	1
  6558  002D94  2774               	addwf	___fladd@b& (0+255),f,b
  6559  002D96  0E00               	movlw	0
  6560  002D98  2375               	addwfc	(___fladd@b+1)& (0+255),f,b
  6561  002D9A  2376               	addwfc	(___fladd@b+2)& (0+255),f,b
  6562  002D9C  2377               	addwfc	(___fladd@b+3)& (0+255),f,b
  6563  002D9E  D008               	goto	l4052
  6564  002DA0                     l14480:
  6565                           
  6566                           ; BSR set to: 0
  6567  002DA0  5178               	movf	___fladd@a& (0+255),w,b
  6568  002DA2  5F74               	subwf	___fladd@b& (0+255),f,b
  6569  002DA4  5179               	movf	(___fladd@a+1)& (0+255),w,b
  6570  002DA6  5B75               	subwfb	(___fladd@b+1)& (0+255),f,b
  6571  002DA8  517A               	movf	(___fladd@a+2)& (0+255),w,b
  6572  002DAA  5B76               	subwfb	(___fladd@b+2)& (0+255),f,b
  6573  002DAC  517B               	movf	(___fladd@a+3)& (0+255),w,b
  6574  002DAE  5B77               	subwfb	(___fladd@b+3)& (0+255),f,b
  6575  002DB0                     l4052:
  6576                           
  6577                           ; BSR set to: 0
  6578  002DB0  5174               	movf	___fladd@b& (0+255),w,b
  6579  002DB2  1175               	iorwf	(___fladd@b+1)& (0+255),w,b
  6580  002DB4  1176               	iorwf	(___fladd@b+2)& (0+255),w,b
  6581  002DB6  1177               	iorwf	(___fladd@b+3)& (0+255),w,b
  6582  002DB8  A4D8               	btfss	status,2,c
  6583  002DBA  D01C               	goto	l14504
  6584                           
  6585                           ; BSR set to: 0
  6586  002DBC  5183               	movf	___fladd@grs& (0+255),w,b
  6587  002DBE  A4D8               	btfss	status,2,c
  6588  002DC0  D019               	goto	l14504
  6589                           
  6590                           ; BSR set to: 0
  6591  002DC2  0E00               	movlw	0
  6592  002DC4  6F74               	movwf	?___fladd& (0+255),b
  6593  002DC6  0E00               	movlw	0
  6594  002DC8  6F75               	movwf	(?___fladd+1)& (0+255),b
  6595  002DCA  0E00               	movlw	0
  6596  002DCC  6F76               	movwf	(?___fladd+2)& (0+255),b
  6597  002DCE  0E00               	movlw	0
  6598  002DD0  6F77               	movwf	(?___fladd+3)& (0+255),b
  6599  002DD2  0012               	return	
  6600  002DD4                     l14488:
  6601                           
  6602                           ; BSR set to: 0
  6603  002DD4  90D8               	bcf	status,0,c
  6604  002DD6  3774               	rlcf	___fladd@b& (0+255),f,b
  6605  002DD8  3775               	rlcf	(___fladd@b+1)& (0+255),f,b
  6606  002DDA  3776               	rlcf	(___fladd@b+2)& (0+255),f,b
  6607  002DDC  3777               	rlcf	(___fladd@b+3)& (0+255),f,b
  6608                           
  6609                           ; BSR set to: 0
  6610  002DDE  BF83               	btfsc	___fladd@grs& (0+255),7,b
  6611                           
  6612                           ; BSR set to: 0
  6613  002DE0  8174               	bsf	___fladd@b& (0+255),0,b
  6614                           
  6615                           ; BSR set to: 0
  6616  002DE2  A183               	btfss	___fladd@grs& (0+255),0,b
  6617  002DE4  D002               	goto	l14498
  6618                           
  6619                           ; BSR set to: 0
  6620  002DE6  80D8               	bsf	status,0,c
  6621  002DE8  D001               	goto	L5
  6622  002DEA                     l14498:
  6623                           
  6624                           ; BSR set to: 0
  6625  002DEA  90D8               	bcf	status,0,c
  6626  002DEC                     L5:
  6627  002DEC  3783               	rlcf	___fladd@grs& (0+255),f,b
  6628                           
  6629                           ; BSR set to: 0
  6630  002DEE  5182               	movf	___fladd@bexp& (0+255),w,b
  6631  002DF0  A4D8               	btfss	status,2,c
  6632                           
  6633                           ; BSR set to: 0
  6634  002DF2  0782               	decf	___fladd@bexp& (0+255),f,b
  6635  002DF4                     l14504:
  6636                           
  6637                           ; BSR set to: 0
  6638  002DF4  AF76               	btfss	(___fladd@b+2)& (0+255),7,b
  6639  002DF6  D7EE               	goto	l14488
  6640  002DF8                     u14460:
  6641                           
  6642                           ; BSR set to: 0
  6643  002DF8  0E00               	movlw	0
  6644  002DFA  6F81               	movwf	___fladd@aexp& (0+255),b
  6645                           
  6646                           ; BSR set to: 0
  6647  002DFC  AF83               	btfss	___fladd@grs& (0+255),7,b
  6648  002DFE  D00B               	goto	l4061
  6649                           
  6650                           ; BSR set to: 0
  6651  002E00  C083  F07C         	movff	___fladd@grs,??___fladd
  6652  002E04  0E7F               	movlw	127
  6653  002E06  177C               	andwf	??___fladd& (0+255),f,b
  6654  002E08  B4D8               	btfsc	status,2,c
  6655  002E0A  D003               	goto	l4062
  6656  002E0C                     u14480:
  6657                           
  6658                           ; BSR set to: 0
  6659  002E0C  0E01               	movlw	1
  6660  002E0E  6F81               	movwf	___fladd@aexp& (0+255),b
  6661  002E10  D002               	goto	l4061
  6662  002E12                     l4062:
  6663                           
  6664                           ; BSR set to: 0
  6665  002E12  B174               	btfsc	___fladd@b& (0+255),0,b
  6666  002E14  D7FB               	goto	u14480
  6667  002E16                     l4061:
  6668                           
  6669                           ; BSR set to: 0
  6670  002E16  5181               	movf	___fladd@aexp& (0+255),w,b
  6671  002E18  B4D8               	btfsc	status,2,c
  6672  002E1A  D020               	goto	l14524
  6673                           
  6674                           ; BSR set to: 0
  6675  002E1C  0E01               	movlw	1
  6676  002E1E  2774               	addwf	___fladd@b& (0+255),f,b
  6677  002E20  0E00               	movlw	0
  6678  002E22  2375               	addwfc	(___fladd@b+1)& (0+255),f,b
  6679  002E24  2376               	addwfc	(___fladd@b+2)& (0+255),f,b
  6680  002E26  2377               	addwfc	(___fladd@b+3)& (0+255),f,b
  6681                           
  6682                           ; BSR set to: 0
  6683  002E28  A177               	btfss	(___fladd@b+3)& (0+255),0,b
  6684  002E2A  D018               	goto	l14524
  6685                           
  6686                           ; BSR set to: 0
  6687  002E2C  C074  F07C         	movff	___fladd@b,??___fladd
  6688  002E30  C075  F07D         	movff	___fladd@b+1,??___fladd+1
  6689  002E34  C076  F07E         	movff	___fladd@b+2,??___fladd+2
  6690  002E38  C077  F07F         	movff	___fladd@b+3,??___fladd+3
  6691  002E3C  357F               	rlcf	(??___fladd+3)& (0+255),w,b
  6692  002E3E  337F               	rrcf	(??___fladd+3)& (0+255),f,b
  6693  002E40  337E               	rrcf	(??___fladd+2)& (0+255),f,b
  6694  002E42  337D               	rrcf	(??___fladd+1)& (0+255),f,b
  6695  002E44  337C               	rrcf	??___fladd& (0+255),f,b
  6696  002E46  C07C  F074         	movff	??___fladd,___fladd@b
  6697  002E4A  C07D  F075         	movff	??___fladd+1,___fladd@b+1
  6698  002E4E  C07E  F076         	movff	??___fladd+2,___fladd@b+2
  6699  002E52  C07F  F077         	movff	??___fladd+3,___fladd@b+3
  6700  002E56  2982               	incf	___fladd@bexp& (0+255),w,b
  6701  002E58  A4D8               	btfss	status,2,c
  6702                           
  6703                           ; BSR set to: 0
  6704  002E5A  2B82               	incf	___fladd@bexp& (0+255),f,b
  6705  002E5C                     l14524:
  6706                           
  6707                           ; BSR set to: 0
  6708  002E5C  2982               	incf	___fladd@bexp& (0+255),w,b
  6709  002E5E  B4D8               	btfsc	status,2,c
  6710  002E60  D003               	goto	u14540
  6711                           
  6712                           ; BSR set to: 0
  6713  002E62  5182               	movf	___fladd@bexp& (0+255),w,b
  6714  002E64  A4D8               	btfss	status,2,c
  6715  002E66  D00D               	goto	l14532
  6716  002E68                     u14540:
  6717                           
  6718                           ; BSR set to: 0
  6719  002E68  0E00               	movlw	0
  6720  002E6A  6F74               	movwf	___fladd@b& (0+255),b
  6721  002E6C  0E00               	movlw	0
  6722  002E6E  6F75               	movwf	(___fladd@b+1)& (0+255),b
  6723  002E70  0E00               	movlw	0
  6724  002E72  6F76               	movwf	(___fladd@b+2)& (0+255),b
  6725  002E74  0E00               	movlw	0
  6726  002E76  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6727  002E78  5182               	movf	___fladd@bexp& (0+255),w,b
  6728  002E7A  A4D8               	btfss	status,2,c
  6729  002E7C  D002               	goto	l14532
  6730                           
  6731                           ; BSR set to: 0
  6732  002E7E  0E00               	movlw	0
  6733  002E80  6F80               	movwf	___fladd@signs& (0+255),b
  6734  002E82                     l14532:
  6735                           
  6736                           ; BSR set to: 0
  6737  002E82  A182               	btfss	___fladd@bexp& (0+255),0,b
  6738  002E84  D002               	goto	l14536
  6739                           
  6740                           ; BSR set to: 0
  6741  002E86  8F76               	bsf	(___fladd@b+2)& (0+255),7,b
  6742  002E88  D001               	goto	l14538
  6743  002E8A                     l14536:
  6744                           
  6745                           ; BSR set to: 0
  6746  002E8A  9F76               	bcf	(___fladd@b+2)& (0+255),7,b
  6747  002E8C                     l14538:
  6748                           
  6749                           ; BSR set to: 0
  6750  002E8C  90D8               	bcf	status,0,c
  6751  002E8E  3182               	rrcf	___fladd@bexp& (0+255),w,b
  6752  002E90  6F77               	movwf	(___fladd@b+3)& (0+255),b
  6753                           
  6754                           ; BSR set to: 0
  6755  002E92  BF80               	btfsc	___fladd@signs& (0+255),7,b
  6756                           
  6757                           ; BSR set to: 0
  6758  002E94  8F77               	bsf	(___fladd@b+3)& (0+255),7,b
  6759                           
  6760                           ; BSR set to: 0
  6761  002E96  C074  F074         	movff	___fladd@b,?___fladd
  6762  002E9A  C075  F075         	movff	___fladd@b+1,?___fladd+1
  6763  002E9E  C076  F076         	movff	___fladd@b+2,?___fladd+2
  6764  002EA2  C077  F077         	movff	___fladd@b+3,?___fladd+3
  6765                           
  6766                           ; BSR set to: 0
  6767  002EA6  0012               	return		;funcret
  6768  002EA8                     __end_of___fladd:
  6769                           	opt callstack 0
  6770                           
  6771 ;; *************** function ___fldiv *****************
  6772 ;; Defined at:
  6773 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;  b               4   61[BANK0 ] unsigned char 
  6776 ;;  a               4   65[BANK0 ] unsigned char 
  6777 ;; Auto vars:     Size  Location     Type
  6778 ;;  grs             4   80[BANK0 ] unsigned long 
  6779 ;;  rem             4   73[BANK0 ] unsigned long 
  6780 ;;  new_exp         2   78[BANK0 ] int 
  6781 ;;  aexp            1   85[BANK0 ] unsigned char 
  6782 ;;  bexp            1   84[BANK0 ] unsigned char 
  6783 ;;  sign            1   77[BANK0 ] unsigned char 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  4   61[BANK0 ] unsigned char 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2, status,0
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6793 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6794 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6795 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6796 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;Total ram usage:       25 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    7
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		_tempConversion
  6804 ;;		_sin
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text15
  6809  003A4A                     __ptext15:
  6810                           	opt callstack 0
  6811  003A4A                     ___fldiv:
  6812                           	opt callstack 20
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;incstack = 0
  6816  003A4A  0100               	movlb	0	; () banked
  6817  003A4C  51A0               	movf	(___fldiv@b+3)& (0+255),w,b
  6818  003A4E  0B80               	andlw	128
  6819  003A50  6FAD               	movwf	___fldiv@sign& (0+255),b
  6820  003A52  51A0               	movf	(___fldiv@b+3)& (0+255),w,b
  6821  003A54  25A0               	addwf	(___fldiv@b+3)& (0+255),w,b
  6822  003A56  6FB4               	movwf	___fldiv@bexp& (0+255),b
  6823                           
  6824                           ; BSR set to: 0
  6825  003A58  BF9F               	btfsc	(___fldiv@b+2)& (0+255),7,b
  6826                           
  6827                           ; BSR set to: 0
  6828  003A5A  81B4               	bsf	___fldiv@bexp& (0+255),0,b
  6829                           
  6830                           ; BSR set to: 0
  6831  003A5C  51B4               	movf	___fldiv@bexp& (0+255),w,b
  6832  003A5E  B4D8               	btfsc	status,2,c
  6833  003A60  D00D               	goto	l15576
  6834                           
  6835                           ; BSR set to: 0
  6836  003A62  29B4               	incf	___fldiv@bexp& (0+255),w,b
  6837  003A64  A4D8               	btfss	status,2,c
  6838  003A66  D008               	goto	l15572
  6839                           
  6840                           ; BSR set to: 0
  6841  003A68  0E00               	movlw	0
  6842  003A6A  6F9D               	movwf	___fldiv@b& (0+255),b
  6843  003A6C  0E00               	movlw	0
  6844  003A6E  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  6845  003A70  0E00               	movlw	0
  6846  003A72  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  6847  003A74  0E00               	movlw	0
  6848  003A76  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  6849  003A78                     l15572:
  6850                           
  6851                           ; BSR set to: 0
  6852  003A78  8F9F               	bsf	(___fldiv@b+2)& (0+255),7,b
  6853  003A7A  D006               	goto	L6
  6854  003A7C                     l15576:
  6855                           
  6856                           ; BSR set to: 0
  6857  003A7C  0E00               	movlw	0
  6858  003A7E  6F9D               	movwf	___fldiv@b& (0+255),b
  6859  003A80  0E00               	movlw	0
  6860  003A82  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  6861  003A84  0E00               	movlw	0
  6862  003A86  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  6863  003A88                     L6:
  6864  003A88  0E00               	movlw	0
  6865  003A8A  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  6866                           
  6867                           ; BSR set to: 0
  6868  003A8C  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  6869  003A8E  0B80               	andlw	128
  6870  003A90  1BAD               	xorwf	___fldiv@sign& (0+255),f,b
  6871                           
  6872                           ; BSR set to: 0
  6873  003A92  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  6874  003A94  25A4               	addwf	(___fldiv@a+3)& (0+255),w,b
  6875  003A96  6FB5               	movwf	___fldiv@aexp& (0+255),b
  6876                           
  6877                           ; BSR set to: 0
  6878  003A98  BFA3               	btfsc	(___fldiv@a+2)& (0+255),7,b
  6879                           
  6880                           ; BSR set to: 0
  6881  003A9A  81B5               	bsf	___fldiv@aexp& (0+255),0,b
  6882                           
  6883                           ; BSR set to: 0
  6884  003A9C  51B5               	movf	___fldiv@aexp& (0+255),w,b
  6885  003A9E  B4D8               	btfsc	status,2,c
  6886  003AA0  D00D               	goto	l15596
  6887                           
  6888                           ; BSR set to: 0
  6889  003AA2  29B5               	incf	___fldiv@aexp& (0+255),w,b
  6890  003AA4  A4D8               	btfss	status,2,c
  6891  003AA6  D008               	goto	l15592
  6892                           
  6893                           ; BSR set to: 0
  6894  003AA8  0E00               	movlw	0
  6895  003AAA  6FA1               	movwf	___fldiv@a& (0+255),b
  6896  003AAC  0E00               	movlw	0
  6897  003AAE  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  6898  003AB0  0E00               	movlw	0
  6899  003AB2  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  6900  003AB4  0E00               	movlw	0
  6901  003AB6  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  6902  003AB8                     l15592:
  6903                           
  6904                           ; BSR set to: 0
  6905  003AB8  8FA3               	bsf	(___fldiv@a+2)& (0+255),7,b
  6906  003ABA  D006               	goto	L7
  6907  003ABC                     l15596:
  6908                           
  6909                           ; BSR set to: 0
  6910  003ABC  0E00               	movlw	0
  6911  003ABE  6FA1               	movwf	___fldiv@a& (0+255),b
  6912  003AC0  0E00               	movlw	0
  6913  003AC2  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
  6914  003AC4  0E00               	movlw	0
  6915  003AC6  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
  6916  003AC8                     L7:
  6917  003AC8  0E00               	movlw	0
  6918  003ACA  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
  6919                           
  6920                           ; BSR set to: 0
  6921  003ACC  51A1               	movf	___fldiv@a& (0+255),w,b
  6922  003ACE  11A2               	iorwf	(___fldiv@a+1)& (0+255),w,b
  6923  003AD0  11A3               	iorwf	(___fldiv@a+2)& (0+255),w,b
  6924  003AD2  11A4               	iorwf	(___fldiv@a+3)& (0+255),w,b
  6925  003AD4  A4D8               	btfss	status,2,c
  6926  003AD6  D017               	goto	l15610
  6927                           
  6928                           ; BSR set to: 0
  6929  003AD8  0E00               	movlw	0
  6930  003ADA  6F9D               	movwf	___fldiv@b& (0+255),b
  6931  003ADC  0E00               	movlw	0
  6932  003ADE  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  6933  003AE0  0E00               	movlw	0
  6934  003AE2  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  6935  003AE4  0E00               	movlw	0
  6936  003AE6  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  6937                           
  6938                           ; BSR set to: 0
  6939  003AE8  0E80               	movlw	128
  6940  003AEA  139F               	iorwf	(___fldiv@b+2)& (0+255),f,b
  6941  003AEC  0E7F               	movlw	127
  6942  003AEE  13A0               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6943  003AF0                     l15604:
  6944                           
  6945                           ; BSR set to: 0
  6946  003AF0  51AD               	movf	___fldiv@sign& (0+255),w,b
  6947  003AF2  13A0               	iorwf	(___fldiv@b+3)& (0+255),f,b
  6948                           
  6949                           ; BSR set to: 0
  6950  003AF4  C09D  F09D         	movff	___fldiv@b,?___fldiv
  6951  003AF8  C09E  F09E         	movff	___fldiv@b+1,?___fldiv+1
  6952  003AFC  C09F  F09F         	movff	___fldiv@b+2,?___fldiv+2
  6953  003B00  C0A0  F0A0         	movff	___fldiv@b+3,?___fldiv+3
  6954  003B04  0012               	return	
  6955  003B06                     l15610:
  6956                           
  6957                           ; BSR set to: 0
  6958  003B06  51B4               	movf	___fldiv@bexp& (0+255),w,b
  6959  003B08  A4D8               	btfss	status,2,c
  6960  003B0A  D009               	goto	l15618
  6961                           
  6962                           ; BSR set to: 0
  6963                           
  6964                           ; BSR set to: 0
  6965  003B0C  0E00               	movlw	0
  6966  003B0E  6F9D               	movwf	?___fldiv& (0+255),b
  6967  003B10  0E00               	movlw	0
  6968  003B12  6F9E               	movwf	(?___fldiv+1)& (0+255),b
  6969  003B14  0E00               	movlw	0
  6970  003B16  6F9F               	movwf	(?___fldiv+2)& (0+255),b
  6971  003B18  0E00               	movlw	0
  6972  003B1A  6FA0               	movwf	(?___fldiv+3)& (0+255),b
  6973  003B1C  0012               	return	
  6974  003B1E                     l15618:
  6975                           
  6976                           ; BSR set to: 0
  6977  003B1E  51B5               	movf	___fldiv@aexp& (0+255),w,b
  6978  003B20  C0B4  F0A5         	movff	___fldiv@bexp,??___fldiv
  6979  003B24  6BA6               	clrf	(??___fldiv+1)& (0+255),b
  6980  003B26  5FA5               	subwf	??___fldiv& (0+255),f,b
  6981  003B28  0E00               	movlw	0
  6982  003B2A  5BA6               	subwfb	(??___fldiv+1)& (0+255),f,b
  6983  003B2C  0E7F               	movlw	127
  6984  003B2E  25A5               	addwf	??___fldiv& (0+255),w,b
  6985  003B30  6FAE               	movwf	___fldiv@new_exp& (0+255),b
  6986  003B32  0E00               	movlw	0
  6987  003B34  21A6               	addwfc	(??___fldiv+1)& (0+255),w,b
  6988  003B36  6FAF               	movwf	(___fldiv@new_exp+1)& (0+255),b
  6989                           
  6990                           ; BSR set to: 0
  6991  003B38  C09D  F0A9         	movff	___fldiv@b,___fldiv@rem
  6992  003B3C  C09E  F0AA         	movff	___fldiv@b+1,___fldiv@rem+1
  6993  003B40  C09F  F0AB         	movff	___fldiv@b+2,___fldiv@rem+2
  6994  003B44  C0A0  F0AC         	movff	___fldiv@b+3,___fldiv@rem+3
  6995                           
  6996                           ; BSR set to: 0
  6997  003B48  0E00               	movlw	0
  6998  003B4A  6F9D               	movwf	___fldiv@b& (0+255),b
  6999  003B4C  0E00               	movlw	0
  7000  003B4E  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7001  003B50  0E00               	movlw	0
  7002  003B52  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7003  003B54  0E00               	movlw	0
  7004  003B56  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7005                           
  7006                           ; BSR set to: 0
  7007  003B58  0E00               	movlw	0
  7008  003B5A  6FB0               	movwf	___fldiv@grs& (0+255),b
  7009  003B5C  0E00               	movlw	0
  7010  003B5E  6FB1               	movwf	(___fldiv@grs+1)& (0+255),b
  7011  003B60  0E00               	movlw	0
  7012  003B62  6FB2               	movwf	(___fldiv@grs+2)& (0+255),b
  7013  003B64  0E00               	movlw	0
  7014  003B66  6FB3               	movwf	(___fldiv@grs+3)& (0+255),b
  7015                           
  7016                           ; BSR set to: 0
  7017  003B68  0E00               	movlw	0
  7018  003B6A  6FB5               	movwf	___fldiv@aexp& (0+255),b
  7019  003B6C  D028               	goto	l4091
  7020  003B6E                     l15628:
  7021                           
  7022                           ; BSR set to: 0
  7023  003B6E  51B5               	movf	___fldiv@aexp& (0+255),w,b
  7024  003B70  B4D8               	btfsc	status,2,c
  7025  003B72  D011               	goto	l15636
  7026                           
  7027                           ; BSR set to: 0
  7028  003B74  90D8               	bcf	status,0,c
  7029  003B76  37A9               	rlcf	___fldiv@rem& (0+255),f,b
  7030  003B78  37AA               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7031  003B7A  37AB               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7032  003B7C  37AC               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7033  003B7E  90D8               	bcf	status,0,c
  7034  003B80  379D               	rlcf	___fldiv@b& (0+255),f,b
  7035  003B82  379E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7036  003B84  379F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7037  003B86  37A0               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7038                           
  7039                           ; BSR set to: 0
  7040  003B88  BFB3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7041                           
  7042                           ; BSR set to: 0
  7043  003B8A  819D               	bsf	___fldiv@b& (0+255),0,b
  7044                           
  7045                           ; BSR set to: 0
  7046  003B8C  90D8               	bcf	status,0,c
  7047  003B8E  37B0               	rlcf	___fldiv@grs& (0+255),f,b
  7048  003B90  37B1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7049  003B92  37B2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7050  003B94  37B3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7051  003B96                     l15636:
  7052                           
  7053                           ; BSR set to: 0
  7054  003B96  51A1               	movf	___fldiv@a& (0+255),w,b
  7055  003B98  5DA9               	subwf	___fldiv@rem& (0+255),w,b
  7056  003B9A  51A2               	movf	(___fldiv@a+1)& (0+255),w,b
  7057  003B9C  59AA               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7058  003B9E  51A3               	movf	(___fldiv@a+2)& (0+255),w,b
  7059  003BA0  59AB               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7060  003BA2  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  7061  003BA4  59AC               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7062  003BA6  A0D8               	btfss	status,0,c
  7063  003BA8  D009               	goto	l15642
  7064                           
  7065                           ; BSR set to: 0
  7066  003BAA  8DB3               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7067                           
  7068                           ; BSR set to: 0
  7069  003BAC  51A1               	movf	___fldiv@a& (0+255),w,b
  7070  003BAE  5FA9               	subwf	___fldiv@rem& (0+255),f,b
  7071  003BB0  51A2               	movf	(___fldiv@a+1)& (0+255),w,b
  7072  003BB2  5BAA               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7073  003BB4  51A3               	movf	(___fldiv@a+2)& (0+255),w,b
  7074  003BB6  5BAB               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7075  003BB8  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
  7076  003BBA  5BAC               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7077  003BBC                     l15642:
  7078                           
  7079                           ; BSR set to: 0
  7080  003BBC  2BB5               	incf	___fldiv@aexp& (0+255),f,b
  7081  003BBE                     l4091:
  7082                           
  7083                           ; BSR set to: 0
  7084  003BBE  0E19               	movlw	25
  7085  003BC0  65B5               	cpfsgt	___fldiv@aexp& (0+255),b
  7086  003BC2  D7D5               	goto	l15628
  7087                           
  7088                           ; BSR set to: 0
  7089  003BC4  51A9               	movf	___fldiv@rem& (0+255),w,b
  7090  003BC6  11AA               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7091  003BC8  11AB               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7092  003BCA  11AC               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7093  003BCC  B4D8               	btfsc	status,2,c
  7094  003BCE  D011               	goto	l15654
  7095                           
  7096                           ; BSR set to: 0
  7097  003BD0  81B0               	bsf	___fldiv@grs& (0+255),0,b
  7098  003BD2  D00F               	goto	l15654
  7099  003BD4                     l15648:
  7100                           
  7101                           ; BSR set to: 0
  7102  003BD4  90D8               	bcf	status,0,c
  7103  003BD6  379D               	rlcf	___fldiv@b& (0+255),f,b
  7104  003BD8  379E               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7105  003BDA  379F               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7106  003BDC  37A0               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7107                           
  7108                           ; BSR set to: 0
  7109  003BDE  BFB3               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  7110                           
  7111                           ; BSR set to: 0
  7112  003BE0  819D               	bsf	___fldiv@b& (0+255),0,b
  7113                           
  7114                           ; BSR set to: 0
  7115  003BE2  90D8               	bcf	status,0,c
  7116  003BE4  37B0               	rlcf	___fldiv@grs& (0+255),f,b
  7117  003BE6  37B1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7118  003BE8  37B2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7119  003BEA  37B3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7120  003BEC  07AE               	decf	___fldiv@new_exp& (0+255),f,b
  7121  003BEE  A0D8               	btfss	status,0,c
  7122  003BF0  07AF               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7123  003BF2                     l15654:
  7124                           
  7125                           ; BSR set to: 0
  7126  003BF2  AF9F               	btfss	(___fldiv@b+2)& (0+255),7,b
  7127  003BF4  D7EF               	goto	l15648
  7128                           
  7129                           ; BSR set to: 0
  7130  003BF6  0E00               	movlw	0
  7131  003BF8  6FB5               	movwf	___fldiv@aexp& (0+255),b
  7132                           
  7133                           ; BSR set to: 0
  7134  003BFA  AFB3               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7135  003BFC  D017               	goto	l4102
  7136                           
  7137                           ; BSR set to: 0
  7138  003BFE  0EFF               	movlw	255
  7139  003C00  15B0               	andwf	___fldiv@grs& (0+255),w,b
  7140  003C02  6FA5               	movwf	??___fldiv& (0+255),b
  7141  003C04  0EFF               	movlw	255
  7142  003C06  15B1               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7143  003C08  6FA6               	movwf	(??___fldiv+1)& (0+255),b
  7144  003C0A  0EFF               	movlw	255
  7145  003C0C  15B2               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7146  003C0E  6FA7               	movwf	(??___fldiv+2)& (0+255),b
  7147  003C10  0E7F               	movlw	127
  7148  003C12  15B3               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7149  003C14  6FA8               	movwf	(??___fldiv+3)& (0+255),b
  7150  003C16  51A5               	movf	??___fldiv& (0+255),w,b
  7151  003C18  11A6               	iorwf	(??___fldiv+1)& (0+255),w,b
  7152  003C1A  11A7               	iorwf	(??___fldiv+2)& (0+255),w,b
  7153  003C1C  11A8               	iorwf	(??___fldiv+3)& (0+255),w,b
  7154  003C1E  B4D8               	btfsc	status,2,c
  7155  003C20  D003               	goto	l4103
  7156  003C22                     u16140:
  7157                           
  7158                           ; BSR set to: 0
  7159  003C22  0E01               	movlw	1
  7160  003C24  6FB5               	movwf	___fldiv@aexp& (0+255),b
  7161  003C26  D002               	goto	l4102
  7162  003C28                     l4103:
  7163                           
  7164                           ; BSR set to: 0
  7165  003C28  B19D               	btfsc	___fldiv@b& (0+255),0,b
  7166  003C2A  D7FB               	goto	u16140
  7167  003C2C                     l4102:
  7168                           
  7169                           ; BSR set to: 0
  7170  003C2C  51B5               	movf	___fldiv@aexp& (0+255),w,b
  7171  003C2E  B4D8               	btfsc	status,2,c
  7172  003C30  D01F               	goto	l15674
  7173                           
  7174                           ; BSR set to: 0
  7175  003C32  0E01               	movlw	1
  7176  003C34  279D               	addwf	___fldiv@b& (0+255),f,b
  7177  003C36  0E00               	movlw	0
  7178  003C38  239E               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7179  003C3A  239F               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7180  003C3C  23A0               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7181                           
  7182                           ; BSR set to: 0
  7183  003C3E  A1A0               	btfss	(___fldiv@b+3)& (0+255),0,b
  7184  003C40  D017               	goto	l15674
  7185                           
  7186                           ; BSR set to: 0
  7187  003C42  C09D  F0A5         	movff	___fldiv@b,??___fldiv
  7188  003C46  C09E  F0A6         	movff	___fldiv@b+1,??___fldiv+1
  7189  003C4A  C09F  F0A7         	movff	___fldiv@b+2,??___fldiv+2
  7190  003C4E  C0A0  F0A8         	movff	___fldiv@b+3,??___fldiv+3
  7191  003C52  35A8               	rlcf	(??___fldiv+3)& (0+255),w,b
  7192  003C54  33A8               	rrcf	(??___fldiv+3)& (0+255),f,b
  7193  003C56  33A7               	rrcf	(??___fldiv+2)& (0+255),f,b
  7194  003C58  33A6               	rrcf	(??___fldiv+1)& (0+255),f,b
  7195  003C5A  33A5               	rrcf	??___fldiv& (0+255),f,b
  7196  003C5C  C0A5  F09D         	movff	??___fldiv,___fldiv@b
  7197  003C60  C0A6  F09E         	movff	??___fldiv+1,___fldiv@b+1
  7198  003C64  C0A7  F09F         	movff	??___fldiv+2,___fldiv@b+2
  7199  003C68  C0A8  F0A0         	movff	??___fldiv+3,___fldiv@b+3
  7200                           
  7201                           ; BSR set to: 0
  7202  003C6C  4BAE               	infsnz	___fldiv@new_exp& (0+255),f,b
  7203  003C6E  2BAF               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7204  003C70                     l15674:
  7205                           
  7206                           ; BSR set to: 0
  7207  003C70  BFAF               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7208  003C72  D010               	goto	l15678
  7209  003C74  51AF               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7210  003C76  E103               	bnz	u16180
  7211  003C78  29AE               	incf	___fldiv@new_exp& (0+255),w,b
  7212  003C7A  A0D8               	btfss	status,0,c
  7213  003C7C  D00B               	goto	l15678
  7214  003C7E                     u16180:
  7215                           
  7216                           ; BSR set to: 0
  7217  003C7E  0E00               	movlw	0
  7218  003C80  6FAF               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7219  003C82  69AE               	setf	___fldiv@new_exp& (0+255),b
  7220  003C84  0E00               	movlw	0
  7221  003C86  6F9D               	movwf	___fldiv@b& (0+255),b
  7222  003C88  0E00               	movlw	0
  7223  003C8A  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7224  003C8C  0E00               	movlw	0
  7225  003C8E  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7226  003C90  0E00               	movlw	0
  7227  003C92  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7228  003C94                     l15678:
  7229                           
  7230                           ; BSR set to: 0
  7231  003C94  BFAF               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7232  003C96  D005               	goto	u16190
  7233  003C98  51AF               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7234  003C9A  E111               	bnz	l15682
  7235  003C9C  05AE               	decf	___fldiv@new_exp& (0+255),w,b
  7236  003C9E  B0D8               	btfsc	status,0,c
  7237  003CA0  D00E               	goto	l15682
  7238  003CA2                     u16190:
  7239                           
  7240                           ; BSR set to: 0
  7241  003CA2  0E00               	movlw	0
  7242  003CA4  6FAF               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7243  003CA6  0E00               	movlw	0
  7244  003CA8  6FAE               	movwf	___fldiv@new_exp& (0+255),b
  7245  003CAA  0E00               	movlw	0
  7246  003CAC  6F9D               	movwf	___fldiv@b& (0+255),b
  7247  003CAE  0E00               	movlw	0
  7248  003CB0  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
  7249  003CB2  0E00               	movlw	0
  7250  003CB4  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
  7251  003CB6  0E00               	movlw	0
  7252  003CB8  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7253  003CBA  0E00               	movlw	0
  7254  003CBC  6FAD               	movwf	___fldiv@sign& (0+255),b
  7255  003CBE                     l15682:
  7256                           
  7257                           ; BSR set to: 0
  7258  003CBE  C0AE  F0B4         	movff	___fldiv@new_exp,___fldiv@bexp
  7259                           
  7260                           ; BSR set to: 0
  7261  003CC2  A1B4               	btfss	___fldiv@bexp& (0+255),0,b
  7262  003CC4  D002               	goto	l15688
  7263                           
  7264                           ; BSR set to: 0
  7265  003CC6  8F9F               	bsf	(___fldiv@b+2)& (0+255),7,b
  7266  003CC8  D001               	goto	l15690
  7267  003CCA                     l15688:
  7268                           
  7269                           ; BSR set to: 0
  7270  003CCA  9F9F               	bcf	(___fldiv@b+2)& (0+255),7,b
  7271  003CCC                     l15690:
  7272                           
  7273                           ; BSR set to: 0
  7274  003CCC  90D8               	bcf	status,0,c
  7275  003CCE  31B4               	rrcf	___fldiv@bexp& (0+255),w,b
  7276  003CD0  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
  7277  003CD2  D70E               	goto	l15604
  7278  003CD4                     __end_of___fldiv:
  7279                           	opt callstack 0
  7280                           
  7281 ;; *************** function _pointAddition *****************
  7282 ;; Defined at:
  7283 ;;		line 427 in file "acuadori.c"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  element         2    0[BANK0 ] PTR unsigned char 
  7286 ;;		 -> stringValue(5), 
  7287 ;; Auto vars:     Size  Location     Type
  7288 ;;  d               1    4[BANK0 ] unsigned char 
  7289 ;; Return value:  Size  Location     Type
  7290 ;;                  1    wreg      void 
  7291 ;; Registers used:
  7292 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
  7293 ;; Tracked objects:
  7294 ;;		On entry : 0/0
  7295 ;;		On exit  : 0/0
  7296 ;;		Unchanged: 0/0
  7297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7298 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;Total ram usage:        5 bytes
  7303 ;; Hardware stack levels used:    1
  7304 ;; Hardware stack levels required when called:    7
  7305 ;; This function calls:
  7306 ;;		Nothing
  7307 ;; This function is called by:
  7308 ;;		_tempSensAcquisition
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text16
  7313  0097E0                     __ptext16:
  7314                           	opt callstack 0
  7315  0097E0                     _pointAddition:
  7316                           	opt callstack 21
  7317                           
  7318                           ;acuadori.c: 428: for(uint8_t d = 1; d<4; d++){
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;incstack = 0
  7322  0097E0  0E01               	movlw	1
  7323  0097E2  0100               	movlb	0	; () banked
  7324  0097E4  6F64               	movwf	pointAddition@d& (0+255),b
  7325  0097E6                     l16250:
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;acuadori.c: 429: element[d-1] = element[d];
  7329  0097E6  5164               	movf	pointAddition@d& (0+255),w,b
  7330  0097E8  2560               	addwf	pointAddition@element& (0+255),w,b
  7331  0097EA  6ED9               	movwf	fsr2l,c
  7332  0097EC  0E00               	movlw	0
  7333  0097EE  2161               	addwfc	(pointAddition@element+1)& (0+255),w,b
  7334  0097F0  6EDA               	movwf	fsr2h,c
  7335  0097F2  5164               	movf	pointAddition@d& (0+255),w,b
  7336  0097F4  2560               	addwf	pointAddition@element& (0+255),w,b
  7337  0097F6  6F62               	movwf	??_pointAddition& (0+255),b
  7338  0097F8  0E00               	movlw	0
  7339  0097FA  2161               	addwfc	(pointAddition@element+1)& (0+255),w,b
  7340  0097FC  6F63               	movwf	(??_pointAddition+1)& (0+255),b
  7341  0097FE  0EFF               	movlw	255
  7342  009800  2562               	addwf	??_pointAddition& (0+255),w,b
  7343  009802  6EE9               	movwf	fsr0l,c
  7344  009804  0EFF               	movlw	255
  7345  009806  2163               	addwfc	(??_pointAddition+1)& (0+255),w,b
  7346  009808  6EEA               	movwf	fsr0h,c
  7347  00980A  CFDF FFEF          	movff	indf2,indf0
  7348                           
  7349                           ; BSR set to: 0
  7350  00980E  2B64               	incf	pointAddition@d& (0+255),f,b
  7351                           
  7352                           ; BSR set to: 0
  7353  009810  0E03               	movlw	3
  7354  009812  6564               	cpfsgt	pointAddition@d& (0+255),b
  7355  009814  D7E8               	goto	l16250
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;acuadori.c: 430: };acuadori.c: 431: element[3] = 0x2E;
  7359  009816  EE20 F003          	lfsr	2,3
  7360  00981A  5160               	movf	pointAddition@element& (0+255),w,b
  7361  00981C  26D9               	addwf	fsr2l,f,c
  7362  00981E  5161               	movf	(pointAddition@element+1)& (0+255),w,b
  7363  009820  22DA               	addwfc	fsr2h,f,c
  7364  009822  0E2E               	movlw	46
  7365  009824  6EDF               	movwf	indf2,c
  7366                           
  7367                           ; BSR set to: 0
  7368  009826  0012               	return		;funcret
  7369  009828                     __end_of_pointAddition:
  7370                           	opt callstack 0
  7371                           
  7372 ;; *************** function _strncat *****************
  7373 ;; Defined at:
  7374 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\strncat.c"
  7375 ;; Parameters:    Size  Location     Type
  7376 ;;  to              2    0[BANK0 ] PTR unsigned char 
  7377 ;;		 -> sensorsString(40), 
  7378 ;;  from            2    2[BANK0 ] PTR const unsigned char 
  7379 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  7380 ;;		 -> STR_4(2), STR_3(2), STR_2(2), stringValue(5), 
  7381 ;;		 -> STR_1(2), 
  7382 ;;  size            2    4[BANK0 ] unsigned int 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;  cp              2    6[BANK0 ] PTR unsigned char 
  7385 ;;		 -> sensorsString(40), 
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  2    0[BANK0 ] PTR unsigned char 
  7388 ;; Registers used:
  7389 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7395 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7396 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;Total ram usage:        8 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:    7
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_acuadoriApp
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text17
  7410  00852E                     __ptext17:
  7411                           	opt callstack 0
  7412  00852E                     _strncat:
  7413                           	opt callstack 22
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;incstack = 0
  7417  00852E  C060  F066         	movff	strncat@to,strncat@cp
  7418  008532  C061  F067         	movff	strncat@to+1,strncat@cp+1
  7419  008536  D003               	goto	l16790
  7420  008538                     l16788:
  7421  008538  0100               	movlb	0	; () banked
  7422  00853A  4B66               	infsnz	strncat@cp& (0+255),f,b
  7423  00853C  2B67               	incf	(strncat@cp+1)& (0+255),f,b
  7424  00853E                     l16790:
  7425  00853E  C066  FFD9         	movff	strncat@cp,fsr2l
  7426  008542  C067  FFDA         	movff	strncat@cp+1,fsr2h
  7427  008546  50DF               	movf	indf2,w,c
  7428  008548  B4D8               	btfsc	status,2,c
  7429  00854A  D009               	goto	l16794
  7430  00854C  D7F5               	goto	l16788
  7431  00854E                     l16792:
  7432  00854E  0100               	movlb	0	; () banked
  7433  008550  0764               	decf	strncat@size& (0+255),f,b
  7434  008552  A0D8               	btfss	status,0,c
  7435  008554  0765               	decf	(strncat@size+1)& (0+255),f,b
  7436  008556  4B66               	infsnz	strncat@cp& (0+255),f,b
  7437  008558  2B67               	incf	(strncat@cp+1)& (0+255),f,b
  7438  00855A  4B62               	infsnz	strncat@from& (0+255),f,b
  7439  00855C  2B63               	incf	(strncat@from+1)& (0+255),f,b
  7440  00855E                     l16794:
  7441  00855E  0100               	movlb	0	; () banked
  7442  008560  5164               	movf	strncat@size& (0+255),w,b
  7443  008562  1165               	iorwf	(strncat@size+1)& (0+255),w,b
  7444  008564  B4D8               	btfsc	status,2,c
  7445  008566  D019               	goto	u17370
  7446                           
  7447                           ; BSR set to: 0
  7448  008568  C062  FFF6         	movff	strncat@from,tblptrl
  7449  00856C  C063  FFF7         	movff	strncat@from+1,tblptrh
  7450  008570  0E00               	movlw	low (__mediumconst shr (0+16))
  7451  008572  6EF8               	movwf	tblptru,c
  7452  008574  C066  FFD9         	movff	strncat@cp,fsr2l
  7453  008578  C067  FFDA         	movff	strncat@cp+1,fsr2h
  7454  00857C  0E0F               	movlw	(high __ramtop+-1)
  7455  00857E  64F7               	cpfsgt	tblptrh,c
  7456  008580  D003               	bra	u17367
  7457  008582  0008               	tblrd		*
  7458  008584  50F5               	movf	tablat,w,c
  7459  008586  D005               	bra	u17360
  7460  008588                     u17367:
  7461  008588  CFF6 FFE9          	movff	tblptrl,fsr0l
  7462  00858C  CFF7 FFEA          	movff	tblptrh,fsr0h
  7463  008590  50EF               	movf	indf0,w,c
  7464  008592                     u17360:
  7465  008592  6EDF               	movwf	indf2,c
  7466  008594  50DF               	movf	indf2,w,c
  7467  008596  A4D8               	btfss	status,2,c
  7468  008598  D7DA               	goto	l16792
  7469  00859A                     u17370:
  7470  00859A  0100               	movlb	0	; () banked
  7471  00859C  5164               	movf	strncat@size& (0+255),w,b
  7472  00859E  1165               	iorwf	(strncat@size+1)& (0+255),w,b
  7473  0085A0  A4D8               	btfss	status,2,c
  7474  0085A2  0012               	return	
  7475                           
  7476                           ; BSR set to: 0
  7477  0085A4  C066  FFD9         	movff	strncat@cp,fsr2l
  7478  0085A8  C067  FFDA         	movff	strncat@cp+1,fsr2h
  7479  0085AC  0E00               	movlw	0
  7480  0085AE  6EDF               	movwf	indf2,c
  7481                           
  7482                           ; BSR set to: 0
  7483  0085B0  0012               	return		;funcret
  7484  0085B2                     __end_of_strncat:
  7485                           	opt callstack 0
  7486                           
  7487 ;; *************** function _sendValue *****************
  7488 ;; Defined at:
  7489 ;;		line 378 in file "acuadori.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;		None
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;  result          4    0        unsigned long 
  7494 ;;  status          1  155[BANK0 ] unsigned char 
  7495 ;;  firstSend       1  154[BANK0 ] unsigned char 
  7496 ;; Return value:  Size  Location     Type
  7497 ;;                  1    wreg      void 
  7498 ;; Registers used:
  7499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7500 ;; Tracked objects:
  7501 ;;		On entry : 0/0
  7502 ;;		On exit  : 0/0
  7503 ;;		Unchanged: 0/0
  7504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7509 ;;Total ram usage:        2 bytes
  7510 ;; Hardware stack levels used:    1
  7511 ;; Hardware stack levels required when called:   19
  7512 ;; This function calls:
  7513 ;;		_LORAWAN_Mainloop
  7514 ;;		_LORAWAN_Send
  7515 ;;		_SwClearAllTimers
  7516 ;;		_timerReset
  7517 ;; This function is called by:
  7518 ;;		_acuadoriApp
  7519 ;; This function uses a non-reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text18
  7523  008F38                     __ptext18:
  7524                           	opt callstack 0
  7525  008F38                     _sendValue:
  7526                           	opt callstack 10
  7527                           
  7528                           ;acuadori.c: 380: uint8_t status = 1;
  7529                           
  7530                           ; BSR set to: 0
  7531                           ;incstack = 0
  7532  008F38  0E01               	movlw	1
  7533  008F3A  0100               	movlb	0	; () banked
  7534  008F3C  6FFB               	movwf	sendValue@status& (0+255),b
  7535                           
  7536                           ;acuadori.c: 381: bool firstSend = 1;
  7537  008F3E  0E01               	movlw	1
  7538  008F40  6FFA               	movwf	sendValue@firstSend& (0+255),b
  7539                           
  7540                           ;acuadori.c: 382: uint32_t result;;acuadori.c: 386: while(status){
  7541  008F42  D026               	goto	l3371
  7542  008F44                     l21708:
  7543                           
  7544                           ; BSR set to: 0
  7545                           ;acuadori.c: 387: LORAWAN_Mainloop();
  7546  008F44  ECA7  F04D         	call	_LORAWAN_Mainloop	;wreg free
  7547                           
  7548                           ;acuadori.c: 389: if(timer.sec > 10 || firstSend){
  7549  008F48  0E0B               	movlw	11
  7550  008F4A  0101               	movlb	1	; () banked
  7551  008F4C  6102               	cpfslt	(_timer+2)& (0+255),b
  7552  008F4E  D004               	goto	u24480
  7553                           
  7554                           ; BSR set to: 1
  7555  008F50  0100               	movlb	0	; () banked
  7556  008F52  51FA               	movf	sendValue@firstSend& (0+255),w,b
  7557  008F54  B4D8               	btfsc	status,2,c
  7558  008F56  D01C               	goto	l3371
  7559  008F58                     u24480:
  7560                           
  7561                           ;acuadori.c: 390: firstSend = 0;
  7562  008F58  0E00               	movlw	0
  7563  008F5A  0100               	movlb	0	; () banked
  7564  008F5C  6FFA               	movwf	sendValue@firstSend& (0+255),b
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;acuadori.c: 395: SwClearAllTimers();
  7568  008F5E  ECF3  F04E         	call	_SwClearAllTimers	;wreg free
  7569                           
  7570                           ;acuadori.c: 396: LORAWAN_Mainloop();
  7571  008F62  ECA7  F04D         	call	_LORAWAN_Mainloop	;wreg free
  7572                           
  7573                           ;acuadori.c: 398: status = LORAWAN_Send(CNF, 200, sensorsString, sensorsStringLength);
  7574  008F66  0EC8               	movlw	200
  7575  008F68  0100               	movlb	0	; () banked
  7576  008F6A  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
  7577  008F6C  0EA0               	movlw	low _sensorsString
  7578  008F6E  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
  7579  008F70  0E03               	movlw	high _sensorsString
  7580  008F72  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  7581  008F74  C1F8  F0D7         	movff	_sensorsStringLength,LORAWAN_Send@bufferLength
  7582  008F78  0E01               	movlw	1
  7583  008F7A  ECE1  F037         	call	_LORAWAN_Send
  7584  008F7E  0100               	movlb	0	; () banked
  7585  008F80  6FFB               	movwf	sendValue@status& (0+255),b
  7586                           
  7587                           ; BSR set to: 0
  7588                           ;acuadori.c: 410: if(status == NETWORK_NOT_JOINED){
  7589  008F82  05FB               	decf	sendValue@status& (0+255),w,b
  7590  008F84  B4D8               	btfsc	status,2,c
  7591  008F86  0012               	return	
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;acuadori.c: 412: };acuadori.c: 413: if (status){
  7595  008F88  51FB               	movf	sendValue@status& (0+255),w,b
  7596  008F8A  A4D8               	btfss	status,2,c
  7597                           
  7598                           ; BSR set to: 0
  7599                           ;acuadori.c: 416: timerReset();
  7600  008F8C  EC52  F050         	call	_timerReset	;wreg free
  7601  008F90                     l3371:
  7602                           
  7603                           ; BSR set to: 0
  7604  008F90  0100               	movlb	0	; () banked
  7605  008F92  51FB               	movf	sendValue@status& (0+255),w,b
  7606  008F94  B4D8               	btfsc	status,2,c
  7607  008F96  0012               	return	
  7608  008F98  D7D5               	goto	l21708
  7609  008F9A                     __end_of_sendValue:
  7610                           	opt callstack 0
  7611                           
  7612 ;; *************** function _timerReset *****************
  7613 ;; Defined at:
  7614 ;;		line 68 in file "tmrAPP.c"
  7615 ;; Parameters:    Size  Location     Type
  7616 ;;		None
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;		None
  7619 ;; Return value:  Size  Location     Type
  7620 ;;                  1    wreg      void 
  7621 ;; Registers used:
  7622 ;;		wreg, status,2
  7623 ;; Tracked objects:
  7624 ;;		On entry : 0/0
  7625 ;;		On exit  : 0/0
  7626 ;;		Unchanged: 0/0
  7627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7632 ;;Total ram usage:        0 bytes
  7633 ;; Hardware stack levels used:    1
  7634 ;; Hardware stack levels required when called:    7
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_main
  7639 ;;		_sendValue
  7640 ;; This function uses a non-reentrant model
  7641 ;;
  7642                           
  7643                           	psect	text19
  7644  00A0A4                     __ptext19:
  7645                           	opt callstack 0
  7646  00A0A4                     _timerReset:
  7647                           	opt callstack 23
  7648                           
  7649                           ;tmrAPP.c: 69: sCounter = 0;
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;incstack = 0
  7653  00A0A4  0E00               	movlw	0
  7654  00A0A6  0101               	movlb	1	; () banked
  7655  00A0A8  6F1B               	movwf	(_sCounter+1)& (0+255),b
  7656  00A0AA  0E00               	movlw	0
  7657  00A0AC  6F1A               	movwf	_sCounter& (0+255),b
  7658                           
  7659                           ;tmrAPP.c: 70: msCounter = 0;
  7660  00A0AE  0E00               	movlw	0
  7661  00A0B0  6F1D               	movwf	(_msCounter+1)& (0+255),b
  7662  00A0B2  0E00               	movlw	0
  7663  00A0B4  6F1C               	movwf	_msCounter& (0+255),b
  7664                           
  7665                           ;tmrAPP.c: 71: timer.ms = 0;
  7666  00A0B6  0E00               	movlw	0
  7667  00A0B8  6F01               	movwf	(_timer+1)& (0+255),b
  7668  00A0BA  0E00               	movlw	0
  7669  00A0BC  6F00               	movwf	_timer& (0+255),b
  7670                           
  7671                           ;tmrAPP.c: 72: timer.sec = 0;
  7672  00A0BE  0E00               	movlw	0
  7673  00A0C0  6F02               	movwf	(_timer+2)& (0+255),b
  7674                           
  7675                           ;tmrAPP.c: 73: timer.min = 0;
  7676  00A0C2  0E00               	movlw	0
  7677  00A0C4  6F03               	movwf	(_timer+3)& (0+255),b
  7678                           
  7679                           ;tmrAPP.c: 74: timer.hour = 0;
  7680  00A0C6  0E00               	movlw	0
  7681  00A0C8  6F04               	movwf	(_timer+4)& (0+255),b
  7682                           
  7683                           ;tmrAPP.c: 75: timer.day = 0;
  7684  00A0CA  0E00               	movlw	0
  7685  00A0CC  6F05               	movwf	(_timer+5)& (0+255),b
  7686                           
  7687                           ; BSR set to: 1
  7688  00A0CE  0012               	return		;funcret
  7689  00A0D0                     __end_of_timerReset:
  7690                           	opt callstack 0
  7691                           
  7692 ;; *************** function _SwClearAllTimers *****************
  7693 ;; Defined at:
  7694 ;;		line 328 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;		None
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  i               1    0[BANK0 ] unsigned char 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;                  1    wreg      void 
  7701 ;; Registers used:
  7702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7711 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7712 ;;Total ram usage:        1 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; Hardware stack levels required when called:    7
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_sendValue
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           	psect	text20
  7723  009DE6                     __ptext20:
  7724                           	opt callstack 0
  7725  009DE6                     _SwClearAllTimers:
  7726                           	opt callstack 21
  7727                           
  7728                           ;sw_timer.c: 329: for (uint8_t i = 0; i < allocatedTimers; i++)
  7729                           
  7730                           ; BSR set to: 1
  7731                           ;incstack = 0
  7732  009DE6  0E00               	movlw	0
  7733  009DE8  0100               	movlb	0	; () banked
  7734  009DEA  6F60               	movwf	SwClearAllTimers@i& (0+255),b
  7735  009DEC  D00D               	goto	l21350
  7736  009DEE                     l21346:
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;sw_timer.c: 330: {;sw_timer.c: 331: swTimers[i].ticksRemaining = 0;
  7740  009DEE  5160               	movf	SwClearAllTimers@i& (0+255),w,b
  7741  009DF0  0D08               	mullw	8
  7742  009DF2  0E00               	movlw	low _swTimers
  7743  009DF4  24F3               	addwf	prodl,w,c
  7744  009DF6  6ED9               	movwf	fsr2l,c
  7745  009DF8  0E03               	movlw	high _swTimers
  7746  009DFA  20F4               	addwfc	prodh,w,c
  7747  009DFC  6EDA               	movwf	fsr2h,c
  7748  009DFE  6ADE               	clrf	postinc2,c
  7749  009E00  6ADE               	clrf	postinc2,c
  7750  009E02  6ADE               	clrf	postinc2,c
  7751  009E04  6ADD               	clrf	postdec2,c
  7752                           
  7753                           ; BSR set to: 0
  7754  009E06  2B60               	incf	SwClearAllTimers@i& (0+255),f,b
  7755  009E08                     l21350:
  7756                           
  7757                           ; BSR set to: 0
  7758  009E08  0101               	movlb	1	; () banked
  7759  009E0A  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
  7760  009E0C  0100               	movlb	0	; () banked
  7761  009E0E  5D60               	subwf	SwClearAllTimers@i& (0+255),w,b
  7762  009E10  B0D8               	btfsc	status,0,c
  7763  009E12  0012               	return	
  7764  009E14  D7EC               	goto	l21346
  7765  009E16                     __end_of_SwClearAllTimers:
  7766                           	opt callstack 0
  7767                           
  7768 ;; *************** function _LORAWAN_Mainloop *****************
  7769 ;; Defined at:
  7770 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;		None
  7773 ;; Auto vars:     Size  Location     Type
  7774 ;;		None
  7775 ;; Return value:  Size  Location     Type
  7776 ;;                  1    wreg      void 
  7777 ;; Registers used:
  7778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7779 ;; Tracked objects:
  7780 ;;		On entry : 0/0
  7781 ;;		On exit  : 0/0
  7782 ;;		Unchanged: 0/0
  7783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;Total ram usage:        0 bytes
  7789 ;; Hardware stack levels used:    1
  7790 ;; Hardware stack levels required when called:   18
  7791 ;; This function calls:
  7792 ;;		_INTERRUPT_GetDioStatus
  7793 ;;		_RADIO_DIO0
  7794 ;;		_RADIO_DIO1
  7795 ;;		_RADIO_DIO2
  7796 ;;		_RADIO_DIO3
  7797 ;;		_RADIO_DIO4
  7798 ;;		_RADIO_DIO5
  7799 ;;		_SwTimersExecute
  7800 ;; This function is called by:
  7801 ;;		_main
  7802 ;;		_sendValue
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text21
  7807  009B4E                     __ptext21:
  7808                           	opt callstack 0
  7809  009B4E                     _LORAWAN_Mainloop:
  7810                           	opt callstack 10
  7811                           
  7812                           ;lorawan.c: 2240: SwTimersExecute();
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;incstack = 0
  7816  009B4E  EC9E  F03C         	call	_SwTimersExecute	;wreg free
  7817                           
  7818                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  7819  009B52  EC7F  F053         	call	_INTERRUPT_GetDioStatus	;wreg free
  7820  009B56  0101               	movlb	1	; () banked
  7821  009B58  6F27               	movwf	_localDioStatus& (0+255),b
  7822                           
  7823                           ; BSR set to: 1
  7824                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  7825  009B5A  B127               	btfsc	_localDioStatus& (0+255),0,b
  7826                           
  7827                           ; BSR set to: 1
  7828                           ;lorawan.c: 2246: {;lorawan.c: 2247: RADIO_DIO0();
  7829  009B5C  EC43  F041         	call	_RADIO_DIO0	;wreg free
  7830                           
  7831                           ;lorawan.c: 2248: };lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  7832  009B60  0101               	movlb	1	; () banked
  7833  009B62  B327               	btfsc	_localDioStatus& (0+255),1,b
  7834                           
  7835                           ; BSR set to: 1
  7836                           ;lorawan.c: 2250: {;lorawan.c: 2251: RADIO_DIO1();
  7837  009B64  EC5B  F04B         	call	_RADIO_DIO1	;wreg free
  7838                           
  7839                           ;lorawan.c: 2252: };lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  7840  009B68  0101               	movlb	1	; () banked
  7841  009B6A  B527               	btfsc	_localDioStatus& (0+255),2,b
  7842                           
  7843                           ; BSR set to: 1
  7844                           ;lorawan.c: 2254: {;lorawan.c: 2255: RADIO_DIO2();
  7845  009B6C  ECBC  F04A         	call	_RADIO_DIO2	;wreg free
  7846                           
  7847                           ;lorawan.c: 2256: };lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  7848  009B70  0101               	movlb	1	; () banked
  7849  009B72  B727               	btfsc	_localDioStatus& (0+255),3,b
  7850                           
  7851                           ; BSR set to: 1
  7852                           ;lorawan.c: 2258: {;lorawan.c: 2259: RADIO_DIO3();
  7853  009B74  ECC2  F052         	call	_RADIO_DIO3	;wreg free
  7854                           
  7855                           ;lorawan.c: 2260: };lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  7856  009B78  0101               	movlb	1	; () banked
  7857  009B7A  B927               	btfsc	_localDioStatus& (0+255),4,b
  7858                           
  7859                           ; BSR set to: 1
  7860                           ;lorawan.c: 2262: {;lorawan.c: 2263: RADIO_DIO4();
  7861  009B7C  ECB4  F052         	call	_RADIO_DIO4	;wreg free
  7862                           
  7863                           ;lorawan.c: 2264: };lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  7864  009B80  0101               	movlb	1	; () banked
  7865  009B82  AB27               	btfss	_localDioStatus& (0+255),5,b
  7866  009B84  0012               	return	
  7867                           
  7868                           ; BSR set to: 1
  7869                           ;lorawan.c: 2266: {;lorawan.c: 2267: RADIO_DIO5();
  7870  009B86  ECA6  F052         	call	_RADIO_DIO5	;wreg free
  7871  009B8A  0012               	return		;funcret
  7872  009B8C                     __end_of_LORAWAN_Mainloop:
  7873                           	opt callstack 0
  7874                           
  7875 ;; *************** function _SwTimersExecute *****************
  7876 ;; Defined at:
  7877 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;		None
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;  i               1  127[BANK0 ] unsigned char 
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  1    wreg      void 
  7884 ;; Registers used:
  7885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+4, btemp+5, btemp+6, btemp+
      +7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7892 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7895 ;;Total ram usage:        5 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:   17
  7898 ;; This function calls:
  7899 ;;		Absolute function
  7900 ;;		_AckRetransmissionCallback
  7901 ;;		_AutomaticReplyCallback
  7902 ;;		_DutyCycleCallback
  7903 ;;		_LORAWAN_LinkCheckCallback
  7904 ;;		_LORAWAN_ReceiveWindow1Callback
  7905 ;;		_LORAWAN_ReceiveWindow2Callback
  7906 ;;		_RADIO_RxFSKTimeout
  7907 ;;		_RADIO_WatchdogTimeout
  7908 ;;		_UnconfirmedTransmissionCallback
  7909 ;;		_UpdateJoinSuccessState
  7910 ;; This function is called by:
  7911 ;;		_LORAWAN_Mainloop
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           
  7915                           	psect	text22
  7916  00793C                     __ptext22:
  7917                           	opt callstack 0
  7918  00793C                     _SwTimersExecute:
  7919                           	opt callstack 10
  7920                           
  7921                           ;sw_timer.c: 262: uint8_t i;;sw_timer.c: 264: (INTCONbits.GIE = 0);
  7922                           
  7923                           ;incstack = 0
  7924  00793C  9EF2               	bcf	4082,7,c	;volatile
  7925                           
  7926                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  7927  00793E  0E00               	movlw	0
  7928  007940  0100               	movlb	0	; () banked
  7929  007942  6FDF               	movwf	SwTimersExecute@i& (0+255),b
  7930  007944  D054               	goto	l21226
  7931  007946                     l21212:
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;sw_timer.c: 266: {;sw_timer.c: 269: if (swTimers[i].running == 1)
  7935  007946  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  7936  007948  0D08               	mullw	8
  7937  00794A  0E04               	movlw	low (_swTimers+4)
  7938  00794C  24F3               	addwf	prodl,w,c
  7939  00794E  6ED9               	movwf	fsr2l,c
  7940  007950  0E03               	movlw	high (_swTimers+4)
  7941  007952  20F4               	addwfc	prodh,w,c
  7942  007954  6EDA               	movwf	fsr2h,c
  7943  007956  04DE               	decf	postinc2,w,c
  7944  007958  A4D8               	btfss	status,2,c
  7945  00795A  D047               	goto	l21224
  7946                           
  7947                           ; BSR set to: 0
  7948                           ;sw_timer.c: 270: {;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  7949  00795C  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  7950  00795E  0D08               	mullw	8
  7951  007960  0E00               	movlw	low _swTimers
  7952  007962  24F3               	addwf	prodl,w,c
  7953  007964  6ED9               	movwf	fsr2l,c
  7954  007966  0E03               	movlw	high _swTimers
  7955  007968  20F4               	addwfc	prodh,w,c
  7956  00796A  6EDA               	movwf	fsr2h,c
  7957  00796C  50DE               	movf	postinc2,w,c
  7958  00796E  10DE               	iorwf	postinc2,w,c
  7959  007970  10DE               	iorwf	postinc2,w,c
  7960  007972  10DE               	iorwf	postinc2,w,c
  7961  007974  A4D8               	btfss	status,2,c
  7962  007976  D039               	goto	l21224
  7963                           
  7964                           ; BSR set to: 0
  7965                           ;sw_timer.c: 272: {;sw_timer.c: 273: swTimers[i].running = 0;
  7966  007978  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  7967  00797A  0D08               	mullw	8
  7968  00797C  0E04               	movlw	low (_swTimers+4)
  7969  00797E  24F3               	addwf	prodl,w,c
  7970  007980  6ED9               	movwf	fsr2l,c
  7971  007982  0E03               	movlw	high (_swTimers+4)
  7972  007984  20F4               	addwfc	prodh,w,c
  7973  007986  6EDA               	movwf	fsr2h,c
  7974  007988  0E00               	movlw	0
  7975  00798A  6EDF               	movwf	indf2,c
  7976                           
  7977                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  7978  00798C  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  7979  00798E  0D08               	mullw	8
  7980  007990  0E06               	movlw	low (_swTimers+6)
  7981  007992  24F3               	addwf	prodl,w,c
  7982  007994  6ED9               	movwf	fsr2l,c
  7983  007996  0E03               	movlw	high (_swTimers+6)
  7984  007998  20F4               	addwfc	prodh,w,c
  7985  00799A  6EDA               	movwf	fsr2h,c
  7986  00799C  50DE               	movf	postinc2,w,c
  7987  00799E  10DE               	iorwf	postinc2,w,c
  7988  0079A0  B4D8               	btfsc	status,2,c
  7989  0079A2  D023               	goto	l21224
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;sw_timer.c: 275: {;sw_timer.c: 276: (INTCONbits.GIE = 1);
  7993  0079A4  8EF2               	bsf	4082,7,c	;volatile
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  7997  0079A6  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  7998  0079A8  0D08               	mullw	8
  7999  0079AA  0E05               	movlw	low (_swTimers+5)
  8000  0079AC  24F3               	addwf	prodl,w,c
  8001  0079AE  6ED9               	movwf	fsr2l,c
  8002  0079B0  0E03               	movlw	high (_swTimers+5)
  8003  0079B2  20F4               	addwfc	prodh,w,c
  8004  0079B4  6EDA               	movwf	fsr2h,c
  8005  0079B6  50DF               	movf	indf2,w,c
  8006  0079B8  6EE6               	movwf	postinc1,c
  8007  0079BA  51DF               	movf	SwTimersExecute@i& (0+255),w,b
  8008  0079BC  0D08               	mullw	8
  8009  0079BE  0E06               	movlw	low (_swTimers+6)
  8010  0079C0  24F3               	addwf	prodl,w,c
  8011  0079C2  6ED9               	movwf	fsr2l,c
  8012  0079C4  0E03               	movlw	high (_swTimers+6)
  8013  0079C6  20F4               	addwfc	prodh,w,c
  8014  0079C8  6EDA               	movwf	fsr2h,c
  8015  0079CA  CFDE F0DB          	movff	postinc2,??_SwTimersExecute
  8016  0079CE  CFDD F0DC          	movff	postdec2,??_SwTimersExecute+1
  8017  0079D2  D801               	call	u24138
  8018  0079D4  D009               	goto	u24139
  8019  0079D6                     u24138:
  8020  0079D6  0005               	push	
  8021  0079D8  6EFA               	movwf	pclath,c
  8022  0079DA  51DB               	movf	??_SwTimersExecute& (0+255),w,b
  8023  0079DC  6EFD               	movwf	tosl,c
  8024  0079DE  51DC               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  8025  0079E0  6EFE               	movwf	tosh,c
  8026  0079E2  6AFF               	clrf	tosu,c
  8027  0079E4  50FA               	movf	pclath,w,c
  8028  0079E6  0012               	return		;indir
  8029  0079E8                     u24139:
  8030                           
  8031                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  8032  0079E8  9EF2               	bcf	4082,7,c	;volatile
  8033  0079EA                     l21224:
  8034  0079EA  0100               	movlb	0	; () banked
  8035  0079EC  2BDF               	incf	SwTimersExecute@i& (0+255),f,b
  8036  0079EE                     l21226:
  8037                           
  8038                           ; BSR set to: 0
  8039  0079EE  0101               	movlb	1	; () banked
  8040  0079F0  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
  8041  0079F2  0100               	movlb	0	; () banked
  8042  0079F4  5DDF               	subwf	SwTimersExecute@i& (0+255),w,b
  8043  0079F6  A0D8               	btfss	status,0,c
  8044  0079F8  D7A6               	goto	l21212
  8045                           
  8046                           ; BSR set to: 0
  8047                           ;sw_timer.c: 279: };sw_timer.c: 280: };sw_timer.c: 281: };sw_timer.c: 282: };sw_timer.c:
      +                           283: (INTCONbits.GIE = 1);
  8048  0079FA  8EF2               	bsf	4082,7,c	;volatile
  8049                           
  8050                           ; BSR set to: 0
  8051  0079FC  0012               	return		;funcret
  8052  0079FE                     __end_of_SwTimersExecute:
  8053                           	opt callstack 0
  8054                           
  8055 ;; *************** function _DutyCycleCallback *****************
  8056 ;; Defined at:
  8057 ;;		line 1222 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  param           1  [STACK] unsigned char 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  minim           4  [STACK] unsigned long 
  8062 ;;  i               1  [STACK] unsigned char 
  8063 ;;  found           1  [STACK] unsigned char 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1  [STACK] void 
  8066 ;; Registers used:
  8067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 3F/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8077 ;;Total ram usage:        0 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:   11
  8080 ;; This function calls:
  8081 ;;		_SwTimerSetTimeout
  8082 ;;		_SwTimerStart
  8083 ;;		___lldiv
  8084 ;; This function is called by:
  8085 ;;		_SetCallbackSoftwareTimers
  8086 ;;		_SwTimersExecute
  8087 ;; This function uses a reentrant model
  8088 ;;
  8089                           
  8090                           	psect	text23
  8091  002EA8                     __ptext23:
  8092                           	opt callstack 0
  8093  002EA8                     _DutyCycleCallback:
  8094                           	opt callstack 0
  8095                           
  8096                           ; BSR set to: 0
  8097                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8098  002EA8  0E0A               	movlw	10
  8099  002EAA  26E1               	addwf	fsr1l,f,c
  8100  002EAC  0E00               	movlw	0
  8101  002EAE  22E2               	addwfc	fsr1h,f,c
  8102                           
  8103                           ;lorawan_eu.c: 1224: uint32_t minim = (4294967295UL);
  8104                           
  8105                           ;incstack = 0
  8106  002EB0  0EFF               	movlw	255
  8107  002EB2  6E4E               	movwf	btemp+8,c
  8108  002EB4  0EFF               	movlw	255
  8109  002EB6  6E4F               	movwf	btemp+9,c
  8110  002EB8  0EFF               	movlw	255
  8111  002EBA  6E50               	movwf	btemp+10,c
  8112  002EBC  0EFF               	movlw	255
  8113  002EBE  6E51               	movwf	btemp+11,c
  8114                           
  8115                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8116  002EC0  0EFA               	movlw	-6
  8117  002EC2  C04E  FFE3         	movff	btemp+8,plusw1
  8118  002EC6  0EFB               	movlw	-5
  8119  002EC8  C04F  FFE3         	movff	btemp+9,plusw1
  8120  002ECC  0EFC               	movlw	-4
  8121  002ECE  C050  FFE3         	movff	btemp+10,plusw1
  8122  002ED2  0EFD               	movlw	-3
  8123  002ED4  C051  FFE3         	movff	btemp+11,plusw1
  8124                           
  8125                           ;lorawan_eu.c: 1225: bool found = 0;
  8126                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  8127  002ED8  0EFF               	movlw	-1
  8128  002EDA  6AE3               	clrf	plusw1,c
  8129                           
  8130                           ;lorawan_eu.c: 1226: uint8_t i;;lorawan_eu.c: 1228: for (i=0; i < 16; i++)
  8131                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8132  002EDC  0EFE               	movlw	-2
  8133  002EDE  6AE3               	clrf	plusw1,c
  8134  002EE0                     l21042:
  8135                           
  8136                           ;lorawan_eu.c: 1229: {;lorawan_eu.c: 1231: if ((Channels[i].status == 1) && ( Channels[i
      +                          ].channelTimer != 0 ))
  8137                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8138  002EE0  0EFE               	movlw	-2
  8139  002EE2  50E3               	movf	plusw1,w,c
  8140  002EE4  0D0E               	mullw	14
  8141  002EE6  0E18               	movlw	low (_Channels+4)
  8142  002EE8  24F3               	addwf	prodl,w,c
  8143  002EEA  6ED9               	movwf	fsr2l,c
  8144  002EEC  0E04               	movlw	high (_Channels+4)
  8145  002EEE  20F4               	addwfc	prodh,w,c
  8146  002EF0  6EDA               	movwf	fsr2h,c
  8147  002EF2  04DE               	decf	postinc2,w,c
  8148  002EF4  A4D8               	btfss	status,2,c
  8149  002EF6  D0AD               	goto	l21060
  8150                           
  8151                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8152  002EF8  0EFE               	movlw	-2
  8153  002EFA  50E3               	movf	plusw1,w,c
  8154  002EFC  0D0E               	mullw	14
  8155  002EFE  0E1C               	movlw	low (_Channels+8)
  8156  002F00  24F3               	addwf	prodl,w,c
  8157  002F02  6ED9               	movwf	fsr2l,c
  8158  002F04  0E04               	movlw	high (_Channels+8)
  8159  002F06  20F4               	addwfc	prodh,w,c
  8160  002F08  6EDA               	movwf	fsr2h,c
  8161  002F0A  50DE               	movf	postinc2,w,c
  8162  002F0C  10DE               	iorwf	postinc2,w,c
  8163  002F0E  10DE               	iorwf	postinc2,w,c
  8164  002F10  10DE               	iorwf	postinc2,w,c
  8165  002F12  B4D8               	btfsc	status,2,c
  8166  002F14  D09E               	goto	l21060
  8167                           
  8168                           ;lorawan_eu.c: 1232: {;lorawan_eu.c: 1233: if ( Channels[i].channelTimer > loRa.lastTime
      +                          rValue )
  8169                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8170  002F16  0EFE               	movlw	-2
  8171  002F18  50E3               	movf	plusw1,w,c
  8172  002F1A  0D0E               	mullw	14
  8173  002F1C  0E1C               	movlw	low (_Channels+8)
  8174  002F1E  24F3               	addwf	prodl,w,c
  8175  002F20  6ED9               	movwf	fsr2l,c
  8176  002F22  0E04               	movlw	high (_Channels+8)
  8177  002F24  20F4               	addwfc	prodh,w,c
  8178  002F26  6EDA               	movwf	fsr2h,c
  8179  002F28  50DE               	movf	postinc2,w,c
  8180  002F2A  0102               	movlb	2	; () banked
  8181  002F2C  5DCD               	subwf	(_loRa+200)& (0+255),w,b
  8182  002F2E  50DE               	movf	postinc2,w,c
  8183  002F30  59CE               	subwfb	(_loRa+201)& (0+255),w,b
  8184  002F32  50DE               	movf	postinc2,w,c
  8185  002F34  59CF               	subwfb	(_loRa+202)& (0+255),w,b
  8186  002F36  50DE               	movf	postinc2,w,c
  8187  002F38  59D0               	subwfb	(_loRa+203)& (0+255),w,b
  8188  002F3A  B0D8               	btfsc	status,0,c
  8189  002F3C  D02F               	goto	l21050
  8190                           
  8191                           ; BSR set to: 2
  8192                           ;lorawan_eu.c: 1234: {;lorawan_eu.c: 1235: Channels[i].channelTimer = Channels[i].channe
      +                          lTimer - loRa.lastTimerValue;
  8193                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8194  002F3E  0EFE               	movlw	-2
  8195  002F40  50E3               	movf	plusw1,w,c
  8196  002F42  0D0E               	mullw	14
  8197  002F44  0E1C               	movlw	low (_Channels+8)
  8198  002F46  24F3               	addwf	prodl,w,c
  8199  002F48  6ED9               	movwf	fsr2l,c
  8200  002F4A  0E04               	movlw	high (_Channels+8)
  8201  002F4C  20F4               	addwfc	prodh,w,c
  8202  002F4E  6EDA               	movwf	fsr2h,c
  8203  002F50  CFDE F04E          	movff	postinc2,btemp+8
  8204  002F54  CFDE F04F          	movff	postinc2,btemp+9
  8205  002F58  CFDE F050          	movff	postinc2,btemp+10
  8206  002F5C  CFDE F051          	movff	postinc2,btemp+11
  8207  002F60  51CD               	movf	(_loRa+200)& (0+255),w,b
  8208  002F62  5C4E               	subwf	btemp+8,w,c
  8209  002F64  6E4A               	movwf	btemp+4,c
  8210  002F66  51CE               	movf	(_loRa+201)& (0+255),w,b
  8211  002F68  584F               	subwfb	btemp+9,w,c
  8212  002F6A  6E4B               	movwf	btemp+5,c
  8213  002F6C  51CF               	movf	(_loRa+202)& (0+255),w,b
  8214  002F6E  5850               	subwfb	btemp+10,w,c
  8215  002F70  6E4C               	movwf	btemp+6,c
  8216  002F72  51D0               	movf	(_loRa+203)& (0+255),w,b
  8217  002F74  5851               	subwfb	btemp+11,w,c
  8218  002F76  6E4D               	movwf	btemp+7,c
  8219                           
  8220                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8221  002F78  0EFE               	movlw	-2
  8222  002F7A  50E3               	movf	plusw1,w,c
  8223  002F7C  0D0E               	mullw	14
  8224  002F7E  0E1C               	movlw	low (_Channels+8)
  8225  002F80  24F3               	addwf	prodl,w,c
  8226  002F82  6ED9               	movwf	fsr2l,c
  8227  002F84  0E04               	movlw	high (_Channels+8)
  8228  002F86  20F4               	addwfc	prodh,w,c
  8229  002F88  6EDA               	movwf	fsr2h,c
  8230  002F8A  C04A  FFDE         	movff	btemp+4,postinc2
  8231  002F8E  C04B  FFDE         	movff	btemp+5,postinc2
  8232  002F92  C04C  FFDE         	movff	btemp+6,postinc2
  8233  002F96  C04D  FFDE         	movff	btemp+7,postinc2
  8234                           
  8235                           ;lorawan_eu.c: 1236: }
  8236  002F9A  D00D               	goto	l21052
  8237  002F9C                     l21050:
  8238                           
  8239                           ; BSR set to: 2
  8240                           ;lorawan_eu.c: 1237: else;lorawan_eu.c: 1238: {;lorawan_eu.c: 1239: Channels[i].channelT
      +                          imer = 0;
  8241                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8242  002F9C  0EFE               	movlw	-2
  8243  002F9E  50E3               	movf	plusw1,w,c
  8244  002FA0  0D0E               	mullw	14
  8245  002FA2  0E1C               	movlw	low (_Channels+8)
  8246  002FA4  24F3               	addwf	prodl,w,c
  8247  002FA6  6ED9               	movwf	fsr2l,c
  8248  002FA8  0E04               	movlw	high (_Channels+8)
  8249  002FAA  20F4               	addwfc	prodh,w,c
  8250  002FAC  6EDA               	movwf	fsr2h,c
  8251  002FAE  6ADE               	clrf	postinc2,c
  8252  002FB0  6ADE               	clrf	postinc2,c
  8253  002FB2  6ADE               	clrf	postinc2,c
  8254  002FB4  6ADD               	clrf	postdec2,c
  8255  002FB6                     l21052:
  8256                           
  8257                           ; BSR set to: 2
  8258                           ;lorawan_eu.c: 1240: };lorawan_eu.c: 1241: if ( (Channels[i].channelTimer <= minim) && (
      +                          Channels[i].channelTimer != 0) )
  8259                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8260  002FB6  0EFE               	movlw	-2
  8261  002FB8  50E3               	movf	plusw1,w,c
  8262  002FBA  0D0E               	mullw	14
  8263  002FBC  0E1C               	movlw	low (_Channels+8)
  8264  002FBE  24F3               	addwf	prodl,w,c
  8265  002FC0  6ED9               	movwf	fsr2l,c
  8266  002FC2  0E04               	movlw	high (_Channels+8)
  8267  002FC4  20F4               	addwfc	prodh,w,c
  8268  002FC6  6EDA               	movwf	fsr2h,c
  8269                           
  8270                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8271  002FC8  0EFA               	movlw	-6
  8272  002FCA  CFE3 F046          	movff	plusw1,btemp
  8273  002FCE  50DE               	movf	postinc2,w,c
  8274  002FD0  5C46               	subwf	btemp,w,c
  8275  002FD2  0EFB               	movlw	-5
  8276  002FD4  CFE3 F046          	movff	plusw1,btemp
  8277  002FD8  50DE               	movf	postinc2,w,c
  8278  002FDA  5846               	subwfb	btemp,w,c
  8279  002FDC  0EFC               	movlw	-4
  8280  002FDE  CFE3 F046          	movff	plusw1,btemp
  8281  002FE2  50DE               	movf	postinc2,w,c
  8282  002FE4  5846               	subwfb	btemp,w,c
  8283  002FE6  0EFD               	movlw	-3
  8284  002FE8  CFE3 F046          	movff	plusw1,btemp
  8285  002FEC  50DE               	movf	postinc2,w,c
  8286  002FEE  5846               	subwfb	btemp,w,c
  8287  002FF0  A0D8               	btfss	status,0,c
  8288  002FF2  D02F               	goto	l21060
  8289                           
  8290                           ; BSR set to: 2
  8291                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8292  002FF4  0EFE               	movlw	-2
  8293  002FF6  50E3               	movf	plusw1,w,c
  8294  002FF8  0D0E               	mullw	14
  8295  002FFA  0E1C               	movlw	low (_Channels+8)
  8296  002FFC  24F3               	addwf	prodl,w,c
  8297  002FFE  6ED9               	movwf	fsr2l,c
  8298  003000  0E04               	movlw	high (_Channels+8)
  8299  003002  20F4               	addwfc	prodh,w,c
  8300  003004  6EDA               	movwf	fsr2h,c
  8301  003006  50DE               	movf	postinc2,w,c
  8302  003008  10DE               	iorwf	postinc2,w,c
  8303  00300A  10DE               	iorwf	postinc2,w,c
  8304  00300C  10DE               	iorwf	postinc2,w,c
  8305  00300E  B4D8               	btfsc	status,2,c
  8306  003010  D020               	goto	l21060
  8307                           
  8308                           ; BSR set to: 2
  8309                           ;lorawan_eu.c: 1242: {;lorawan_eu.c: 1243: minim = Channels[i].channelTimer;
  8310                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8311  003012  0EFE               	movlw	-2
  8312  003014  50E3               	movf	plusw1,w,c
  8313  003016  0D0E               	mullw	14
  8314  003018  0E1C               	movlw	low (_Channels+8)
  8315  00301A  24F3               	addwf	prodl,w,c
  8316  00301C  6ED9               	movwf	fsr2l,c
  8317  00301E  0E04               	movlw	high (_Channels+8)
  8318  003020  20F4               	addwfc	prodh,w,c
  8319  003022  6EDA               	movwf	fsr2h,c
  8320  003024  CFDE F04E          	movff	postinc2,btemp+8
  8321  003028  CFDE F04F          	movff	postinc2,btemp+9
  8322  00302C  CFDE F050          	movff	postinc2,btemp+10
  8323  003030  CFDE F051          	movff	postinc2,btemp+11
  8324                           
  8325                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8326  003034  0EFA               	movlw	-6
  8327  003036  C04E  FFE3         	movff	btemp+8,plusw1
  8328  00303A  0EFB               	movlw	-5
  8329  00303C  C04F  FFE3         	movff	btemp+9,plusw1
  8330  003040  0EFC               	movlw	-4
  8331  003042  C050  FFE3         	movff	btemp+10,plusw1
  8332  003046  0EFD               	movlw	-3
  8333  003048  C051  FFE3         	movff	btemp+11,plusw1
  8334                           
  8335                           ; BSR set to: 2
  8336                           ;lorawan_eu.c: 1244: found = 1;
  8337                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  8338  00304C  0EFF               	movlw	-1
  8339  00304E  6AE3               	clrf	plusw1,c
  8340  003050  2AE3               	incf	plusw1,f,c
  8341  003052                     l21060:
  8342                           
  8343                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8344  003052  0EFE               	movlw	-2
  8345  003054  2AE3               	incf	plusw1,f,c
  8346                           
  8347                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  8348  003056  0EFE               	movlw	-2
  8349  003058  CFE3 F046          	movff	plusw1,btemp
  8350  00305C  0E0F               	movlw	15
  8351  00305E  6446               	cpfsgt	btemp,c
  8352  003060  D73F               	goto	l21042
  8353                           
  8354                           ;lorawan_eu.c: 1245: };lorawan_eu.c: 1246: };lorawan_eu.c: 1247: };lorawan_eu.c: 1248: i
      +                          f ( found == 1 )
  8355                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  8356  003062  0EFF               	movlw	-1
  8357  003064  04E3               	decf	plusw1,w,c
  8358  003066  A4D8               	btfss	status,2,c
  8359  003068  D09D               	goto	l1315
  8360                           
  8361                           ;lorawan_eu.c: 1249: {;lorawan_eu.c: 1250: loRa.lastTimerValue = minim;
  8362                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8363  00306A  50E1               	movf	fsr1l,w,c
  8364  00306C  0FFA               	addlw	-6
  8365  00306E  6ED9               	movwf	fsr2l,c
  8366  003070  50E2               	movf	fsr1h,w,c
  8367  003072  6EDA               	movwf	fsr2h,c
  8368  003074  0EFF               	movlw	255
  8369  003076  22DA               	addwfc	fsr2h,f,c
  8370  003078  CFDE F2CD          	movff	postinc2,_loRa+200
  8371  00307C  CFDE F2CE          	movff	postinc2,_loRa+201
  8372  003080  CFDE F2CF          	movff	postinc2,_loRa+202
  8373  003084  CFDE F2D0          	movff	postinc2,_loRa+203
  8374                           
  8375                           ;lorawan_eu.c: 1251: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  8376                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8377  003088  0EFD               	movlw	-3
  8378  00308A  50E3               	movf	plusw1,w,c
  8379  00308C  E10E               	bnz	u23760
  8380  00308E  0EFA               	movlw	-6
  8381  003090  28E3               	incf	plusw1,w,c
  8382  003092  0EFB               	movlw	-5
  8383  003094  CFE3 F046          	movff	plusw1,btemp
  8384  003098  0EFF               	movlw	255
  8385  00309A  5A46               	subwfb	btemp,f,c
  8386  00309C  0EFC               	movlw	-4
  8387  00309E  CFE3 F046          	movff	plusw1,btemp
  8388  0030A2  0E0F               	movlw	15
  8389  0030A4  5A46               	subwfb	btemp,f,c
  8390  0030A6  A0D8               	btfss	status,0,c
  8391  0030A8  D02B               	goto	l21072
  8392  0030AA                     u23760:
  8393                           
  8394                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8395  0030AA  50E1               	movf	fsr1l,w,c
  8396  0030AC  0FFA               	addlw	-6
  8397  0030AE  6ED9               	movwf	fsr2l,c
  8398  0030B0  50E2               	movf	fsr1h,w,c
  8399  0030B2  6EDA               	movwf	fsr2h,c
  8400  0030B4  0EFF               	movlw	255
  8401  0030B6  22DA               	addwfc	fsr2h,f,c
  8402  0030B8  CFDE F060          	movff	postinc2,___lldiv@dividend
  8403  0030BC  CFDE F061          	movff	postinc2,___lldiv@dividend+1
  8404  0030C0  CFDE F062          	movff	postinc2,___lldiv@dividend+2
  8405  0030C4  CFDE F063          	movff	postinc2,___lldiv@dividend+3
  8406  0030C8  0E7D               	movlw	125
  8407  0030CA  0100               	movlb	0	; () banked
  8408  0030CC  6F64               	movwf	___lldiv@divisor& (0+255),b
  8409  0030CE  0E00               	movlw	0
  8410  0030D0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8411  0030D2  0E00               	movlw	0
  8412  0030D4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8413  0030D6  0E00               	movlw	0
  8414  0030D8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8415  0030DA  ECD9  F042         	call	___lldiv	;wreg free
  8416  0030DE  C060  F04E         	movff	?___lldiv,btemp+8
  8417  0030E2  C061  F04F         	movff	?___lldiv+1,btemp+9
  8418  0030E6  C062  F050         	movff	?___lldiv+2,btemp+10
  8419  0030EA  C063  F051         	movff	?___lldiv+3,btemp+11
  8420  0030EE  0E0C               	movlw	12
  8421  0030F0                     u23775:
  8422  0030F0  90D8               	bcf	status,0,c
  8423  0030F2  364E               	rlcf	btemp+8,f,c
  8424  0030F4  364F               	rlcf	btemp+9,f,c
  8425  0030F6  3650               	rlcf	btemp+10,f,c
  8426  0030F8  3651               	rlcf	btemp+11,f,c
  8427  0030FA  2EE8               	decfsz	wreg,f,c
  8428  0030FC  D7F9               	goto	u23775
  8429  0030FE  D02F               	goto	L8
  8430  003100                     l21072:
  8431                           
  8432                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  8433  003100  0EFA               	movlw	-6
  8434  003102  CFE3 F04E          	movff	plusw1,btemp+8
  8435  003106  0EFB               	movlw	-5
  8436  003108  CFE3 F04F          	movff	plusw1,btemp+9
  8437  00310C  0EFC               	movlw	-4
  8438  00310E  CFE3 F050          	movff	plusw1,btemp+10
  8439  003112  0EFD               	movlw	-3
  8440  003114  CFE3 F051          	movff	plusw1,btemp+11
  8441  003118  0E0C               	movlw	12
  8442  00311A                     u23785:
  8443  00311A  90D8               	bcf	status,0,c
  8444  00311C  364E               	rlcf	btemp+8,f,c
  8445  00311E  364F               	rlcf	btemp+9,f,c
  8446  003120  3650               	rlcf	btemp+10,f,c
  8447  003122  3651               	rlcf	btemp+11,f,c
  8448  003124  2EE8               	decfsz	wreg,f,c
  8449  003126  D7F9               	goto	u23785
  8450  003128  C04E  F060         	movff	btemp+8,___lldiv@dividend
  8451  00312C  C04F  F061         	movff	btemp+9,___lldiv@dividend+1
  8452  003130  C050  F062         	movff	btemp+10,___lldiv@dividend+2
  8453  003134  C051  F063         	movff	btemp+11,___lldiv@dividend+3
  8454  003138  0E7D               	movlw	125
  8455  00313A  0100               	movlb	0	; () banked
  8456  00313C  6F64               	movwf	___lldiv@divisor& (0+255),b
  8457  00313E  0E00               	movlw	0
  8458  003140  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8459  003142  0E00               	movlw	0
  8460  003144  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8461  003146  0E00               	movlw	0
  8462  003148  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8463  00314A  ECD9  F042         	call	___lldiv	;wreg free
  8464  00314E  C060  F04E         	movff	?___lldiv,btemp+8
  8465  003152  C061  F04F         	movff	?___lldiv+1,btemp+9
  8466  003156  C062  F050         	movff	?___lldiv+2,btemp+10
  8467  00315A  C063  F051         	movff	?___lldiv+3,btemp+11
  8468  00315E                     L8:
  8469                           
  8470                           ;stkvar	_DutyCycleCallback$1859 @ sp[(-10)+0]
  8471  00315E  0EF6               	movlw	-10
  8472  003160  C04E  FFE3         	movff	btemp+8,plusw1
  8473  003164  0EF7               	movlw	-9
  8474  003166  C04F  FFE3         	movff	btemp+9,plusw1
  8475  00316A  0EF8               	movlw	-8
  8476  00316C  C050  FFE3         	movff	btemp+10,plusw1
  8477  003170  0EF9               	movlw	-7
  8478  003172  C051  FFE3         	movff	btemp+11,plusw1
  8479                           
  8480                           ;stkvar	_DutyCycleCallback$1859 @ sp[(-10)+0]
  8481  003176  50E1               	movf	fsr1l,w,c
  8482  003178  0FF6               	addlw	-10
  8483  00317A  6ED9               	movwf	fsr2l,c
  8484  00317C  50E2               	movf	fsr1h,w,c
  8485  00317E  6EDA               	movwf	fsr2h,c
  8486  003180  0EFF               	movlw	255
  8487  003182  22DA               	addwfc	fsr2h,f,c
  8488  003184  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  8489  003188  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  8490  00318C  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  8491  003190  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  8492  003194  0102               	movlb	2	; () banked
  8493  003196  51EE               	movf	(_loRa+233)& (0+255),w,b
  8494  003198  ECC2  F04C         	call	_SwTimerSetTimeout
  8495                           
  8496                           ;lorawan_eu.c: 1252: SwTimerStart (loRa.dutyCycleTimerId);
  8497  00319C  0102               	movlb	2	; () banked
  8498  00319E  51EE               	movf	(_loRa+233)& (0+255),w,b
  8499  0031A0  ECB6  F040         	call	_SwTimerStart
  8500  0031A4                     l1315:
  8501                           
  8502                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8503  0031A4  0EF5               	movlw	245
  8504  0031A6  26E1               	addwf	fsr1l,f,c
  8505  0031A8  0EFF               	movlw	255
  8506  0031AA  22E2               	addwfc	fsr1h,f,c
  8507  0031AC  0012               	return		;funcret
  8508  0031AE                     __end_of_DutyCycleCallback:
  8509                           	opt callstack 0
  8510                           
  8511 ;; *************** function _UpdateJoinSuccessState *****************
  8512 ;; Defined at:
  8513 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  param           1  [STACK] unsigned char 
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1  [STACK] void 
  8520 ;; Registers used:
  8521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, pro
      +dh, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:   11
  8534 ;; This function calls:
  8535 ;;		_RxJoinResponse
  8536 ;;		_SwTimerSetTimeout
  8537 ;;		_SwTimerStart
  8538 ;;		___lldiv
  8539 ;; This function is called by:
  8540 ;;		_SetCallbackSoftwareTimers
  8541 ;;		_LORAWAN_RxDone
  8542 ;;		_SwTimersExecute
  8543 ;; This function uses a reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text24
  8547  005A4E                     __ptext24:
  8548                           	opt callstack 0
  8549  005A4E                     _UpdateJoinSuccessState:
  8550                           	opt callstack 0
  8551                           
  8552                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8553  005A4E  52E6               	movf	postinc1,f,c
  8554  005A50  52E6               	movf	postinc1,f,c
  8555  005A52  52E6               	movf	postinc1,f,c
  8556  005A54  52E6               	movf	postinc1,f,c
  8557                           
  8558                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  8559                           
  8560                           ;incstack = 0
  8561  005A56  0102               	movlb	2	; () banked
  8562  005A58  9505               	bcf	_loRa& (0+255),2,b
  8563                           
  8564                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  8565  005A5A  8907               	bsf	(_loRa+2)& (0+255),4,b
  8566                           
  8567                           ; BSR set to: 2
  8568                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  8569  005A5C  0EF0               	movlw	-16
  8570  005A5E  1707               	andwf	(_loRa+2)& (0+255),f,b
  8571                           
  8572                           ; BSR set to: 2
  8573                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  8574  005A60  6BD5               	clrf	(_loRa+208)& (0+255),b
  8575  005A62  6BD6               	clrf	(_loRa+209)& (0+255),b
  8576                           
  8577                           ; BSR set to: 2
  8578                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  8579  005A64  6BF3               	clrf	(_loRa+238)& (0+255),b
  8580                           
  8581                           ; BSR set to: 2
  8582                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  8583  005A66  A508               	btfss	(_loRa+3)& (0+255),2,b
  8584  005A68  D07B               	goto	l20070
  8585                           
  8586                           ; BSR set to: 2
  8587                           ;lorawan.c: 1052: {;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.per
      +                          iodForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 12
      +                          5UL ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  8588  005A6A  51D4               	movf	(_loRa+207)& (0+255),w,b
  8589  005A6C  E107               	bnz	u21880
  8590  005A6E  29D1               	incf	(_loRa+204)& (0+255),w,b
  8591  005A70  0EFF               	movlw	255
  8592  005A72  59D2               	subwfb	(_loRa+205)& (0+255),w,b
  8593  005A74  0E0F               	movlw	15
  8594  005A76  59D3               	subwfb	(_loRa+206)& (0+255),w,b
  8595  005A78  A0D8               	btfss	status,0,c
  8596  005A7A  D024               	goto	l20064
  8597  005A7C                     u21880:
  8598                           
  8599                           ; BSR set to: 2
  8600  005A7C  C2D1  F060         	movff	_loRa+204,___lldiv@dividend
  8601  005A80  C2D2  F061         	movff	_loRa+205,___lldiv@dividend+1
  8602  005A84  C2D3  F062         	movff	_loRa+206,___lldiv@dividend+2
  8603  005A88  C2D4  F063         	movff	_loRa+207,___lldiv@dividend+3
  8604  005A8C  0E7D               	movlw	125
  8605  005A8E  0100               	movlb	0	; () banked
  8606  005A90  6F64               	movwf	___lldiv@divisor& (0+255),b
  8607  005A92  0E00               	movlw	0
  8608  005A94  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8609  005A96  0E00               	movlw	0
  8610  005A98  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8611  005A9A  0E00               	movlw	0
  8612  005A9C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8613  005A9E  ECD9  F042         	call	___lldiv	;wreg free
  8614  005AA2  C060  F04E         	movff	?___lldiv,btemp+8
  8615  005AA6  C061  F04F         	movff	?___lldiv+1,btemp+9
  8616  005AAA  C062  F050         	movff	?___lldiv+2,btemp+10
  8617  005AAE  C063  F051         	movff	?___lldiv+3,btemp+11
  8618  005AB2  0E0C               	movlw	12
  8619  005AB4                     u21895:
  8620  005AB4  90D8               	bcf	status,0,c
  8621  005AB6  364E               	rlcf	btemp+8,f,c
  8622  005AB8  364F               	rlcf	btemp+9,f,c
  8623  005ABA  3650               	rlcf	btemp+10,f,c
  8624  005ABC  3651               	rlcf	btemp+11,f,c
  8625  005ABE  2EE8               	decfsz	wreg,f,c
  8626  005AC0  D7F9               	goto	u21895
  8627  005AC2  D02B               	goto	L9
  8628  005AC4                     l20064:
  8629                           
  8630                           ; BSR set to: 2
  8631  005AC4  C2D1  F04E         	movff	_loRa+204,btemp+8
  8632  005AC8  C2D2  F04F         	movff	_loRa+205,btemp+9
  8633  005ACC  C2D3  F050         	movff	_loRa+206,btemp+10
  8634  005AD0  C2D4  F051         	movff	_loRa+207,btemp+11
  8635  005AD4  0E0C               	movlw	12
  8636  005AD6                     u21905:
  8637  005AD6  90D8               	bcf	status,0,c
  8638  005AD8  364E               	rlcf	btemp+8,f,c
  8639  005ADA  364F               	rlcf	btemp+9,f,c
  8640  005ADC  3650               	rlcf	btemp+10,f,c
  8641  005ADE  3651               	rlcf	btemp+11,f,c
  8642  005AE0  2EE8               	decfsz	wreg,f,c
  8643  005AE2  D7F9               	goto	u21905
  8644  005AE4  C04E  F060         	movff	btemp+8,___lldiv@dividend
  8645  005AE8  C04F  F061         	movff	btemp+9,___lldiv@dividend+1
  8646  005AEC  C050  F062         	movff	btemp+10,___lldiv@dividend+2
  8647  005AF0  C051  F063         	movff	btemp+11,___lldiv@dividend+3
  8648  005AF4  0E7D               	movlw	125
  8649  005AF6  0100               	movlb	0	; () banked
  8650  005AF8  6F64               	movwf	___lldiv@divisor& (0+255),b
  8651  005AFA  0E00               	movlw	0
  8652  005AFC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  8653  005AFE  0E00               	movlw	0
  8654  005B00  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  8655  005B02  0E00               	movlw	0
  8656  005B04  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  8657  005B06  ECD9  F042         	call	___lldiv	;wreg free
  8658  005B0A  C060  F04E         	movff	?___lldiv,btemp+8
  8659  005B0E  C061  F04F         	movff	?___lldiv+1,btemp+9
  8660  005B12  C062  F050         	movff	?___lldiv+2,btemp+10
  8661  005B16  C063  F051         	movff	?___lldiv+3,btemp+11
  8662  005B1A                     L9:
  8663                           
  8664                           ;stkvar	_UpdateJoinSuccessState$2530 @ sp[(-4)+0]
  8665  005B1A  0EFC               	movlw	-4
  8666  005B1C  C04E  FFE3         	movff	btemp+8,plusw1
  8667  005B20  0EFD               	movlw	-3
  8668  005B22  C04F  FFE3         	movff	btemp+9,plusw1
  8669  005B26  0EFE               	movlw	-2
  8670  005B28  C050  FFE3         	movff	btemp+10,plusw1
  8671  005B2C  0EFF               	movlw	-1
  8672  005B2E  C051  FFE3         	movff	btemp+11,plusw1
  8673                           
  8674                           ;stkvar	_UpdateJoinSuccessState$2530 @ sp[(-4)+0]
  8675  005B32  50E1               	movf	fsr1l,w,c
  8676  005B34  0FFC               	addlw	-4
  8677  005B36  6ED9               	movwf	fsr2l,c
  8678  005B38  50E2               	movf	fsr1h,w,c
  8679  005B3A  6EDA               	movwf	fsr2h,c
  8680  005B3C  0EFF               	movlw	255
  8681  005B3E  22DA               	addwfc	fsr2h,f,c
  8682  005B40  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  8683  005B44  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  8684  005B48  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  8685  005B4C  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  8686  005B50  0102               	movlb	2	; () banked
  8687  005B52  51EC               	movf	(_loRa+231)& (0+255),w,b
  8688  005B54  ECC2  F04C         	call	_SwTimerSetTimeout
  8689                           
  8690                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  8691  005B58  0102               	movlb	2	; () banked
  8692  005B5A  51EC               	movf	(_loRa+231)& (0+255),w,b
  8693  005B5C  ECB6  F040         	call	_SwTimerStart
  8694  005B60                     l20070:
  8695                           
  8696                           ;lorawan.c: 1055: };lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  8697  005B60  0101               	movlb	1	; () banked
  8698  005B62  5110               	movf	(_rxPayload+2)& (0+255),w,b
  8699  005B64  1111               	iorwf	(_rxPayload+3)& (0+255),w,b
  8700  005B66  B4D8               	btfsc	status,2,c
  8701  005B68  D00C               	goto	u21929
  8702                           
  8703                           ; BSR set to: 1
  8704                           ;lorawan.c: 1058: {;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  8705  005B6A  D801               	call	u21928
  8706  005B6C  D00A               	goto	u21929
  8707  005B6E                     u21928:
  8708  005B6E  0005               	push	
  8709  005B70  6EFA               	movwf	pclath,c
  8710  005B72  5110               	movf	(_rxPayload+2)& (0+255),w,b
  8711  005B74  6EFD               	movwf	tosl,c
  8712  005B76  5111               	movf	(_rxPayload+3)& (0+255),w,b
  8713  005B78  6EFE               	movwf	tosh,c
  8714  005B7A  6AFF               	clrf	tosu,c
  8715  005B7C  50FA               	movf	pclath,w,c
  8716  005B7E  0E01               	movlw	1
  8717  005B80  0012               	return		;indir
  8718  005B82                     u21929:
  8719                           
  8720                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  8721  005B82  0EFB               	movlw	251
  8722  005B84  26E1               	addwf	fsr1l,f,c
  8723  005B86  0EFF               	movlw	255
  8724  005B88  22E2               	addwfc	fsr1h,f,c
  8725  005B8A  0012               	return		;funcret
  8726  005B8C                     __end_of_UpdateJoinSuccessState:
  8727                           	opt callstack 0
  8728                           
  8729 ;; *************** function _AutomaticReplyCallback *****************
  8730 ;; Defined at:
  8731 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;  param           1  [STACK] unsigned char 
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1  [STACK] void 
  8738 ;; Registers used:
  8739 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8740 ;; Tracked objects:
  8741 ;;		On entry : 3F/0
  8742 ;;		On exit  : 3F/2
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8749 ;;Total ram usage:        0 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:   14
  8752 ;; This function calls:
  8753 ;;		_LORAWAN_Send
  8754 ;; This function is called by:
  8755 ;;		_SetCallbackSoftwareTimers
  8756 ;;		_SwTimersExecute
  8757 ;; This function uses a reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text25
  8761  00A298                     __ptext25:
  8762                           	opt callstack 0
  8763  00A298                     _AutomaticReplyCallback:
  8764                           	opt callstack 12
  8765                           
  8766                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  8767                           
  8768                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8769                           ;incstack = 0
  8770  00A298  0EF0               	movlw	-16
  8771  00A29A  0102               	movlb	2	; () banked
  8772  00A29C  1707               	andwf	(_loRa+2)& (0+255),f,b
  8773                           
  8774                           ; BSR set to: 2
  8775                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  8776  00A29E  0E00               	movlw	0
  8777  00A2A0  0100               	movlb	0	; () banked
  8778  00A2A2  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
  8779  00A2A4  0E00               	movlw	0
  8780  00A2A6  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
  8781  00A2A8  0E00               	movlw	0
  8782  00A2AA  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  8783  00A2AC  0E00               	movlw	0
  8784  00A2AE  6FD7               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  8785  00A2B0  0E00               	movlw	0
  8786  00A2B2  ECE1  F037         	call	_LORAWAN_Send
  8787                           
  8788                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  8789  00A2B6  0102               	movlb	2	; () banked
  8790  00A2B8  9705               	bcf	_loRa& (0+255),3,b
  8791                           
  8792                           ; BSR set to: 2
  8793                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  8794  00A2BA  52E5               	movf	postdec1,f,c
  8795  00A2BC  0012               	return		;funcret
  8796  00A2BE                     __end_of_AutomaticReplyCallback:
  8797                           	opt callstack 0
  8798                           
  8799 ;; *************** function _AckRetransmissionCallback *****************
  8800 ;; Defined at:
  8801 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  param           1  [STACK] unsigned char 
  8804 ;; Auto vars:     Size  Location     Type
  8805 ;;  maximumPacke    1  [STACK] unsigned char 
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  1  [STACK] void 
  8808 ;; Registers used:
  8809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8810 ;; Tracked objects:
  8811 ;;		On entry : 3F/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8819 ;;Total ram usage:        0 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; Hardware stack levels required when called:   13
  8822 ;; This function calls:
  8823 ;;		_FindSmallestDataRate
  8824 ;;		_LORAWAN_GetMaxPayloadSize
  8825 ;;		_RADIO_Transmit
  8826 ;;		_ResetParametersForConfirmedTransmission
  8827 ;;		_RxData
  8828 ;;		_SelectChannelForTransmission
  8829 ;;		_UpdateRetransmissionAckTimeoutState
  8830 ;; This function is called by:
  8831 ;;		_SetCallbackSoftwareTimers
  8832 ;;		_SwTimersExecute
  8833 ;; This function uses a reentrant model
  8834 ;;
  8835                           
  8836                           	psect	text26
  8837  006050                     __ptext26:
  8838                           	opt callstack 0
  8839  006050                     _AckRetransmissionCallback:
  8840                           	opt callstack 0
  8841                           
  8842                           ; BSR set to: 2
  8843                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8844  006050  52E6               	movf	postinc1,f,c
  8845                           
  8846                           ;lorawan.c: 936: uint8_t maximumPacketSize;;lorawan.c: 938: if (loRa.macStatus.macPause 
      +                          == 0)
  8847                           
  8848                           ;incstack = 0
  8849  006052  0102               	movlb	2	; () banked
  8850  006054  B108               	btfsc	(_loRa+3)& (0+255),0,b
  8851  006056  D086               	goto	l21178
  8852                           
  8853                           ; BSR set to: 2
  8854                           ;lorawan.c: 939: {;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.ma
      +                          xRepetitionsConfirmedUplink)
  8855  006058  51DE               	movf	(_loRa+217)& (0+255),w,b
  8856  00605A  5DDC               	subwf	(_loRa+215)& (0+255),w,b
  8857  00605C  A0D8               	btfss	status,0,c
  8858  00605E  D061               	goto	l21168
  8859                           
  8860                           ; BSR set to: 2
  8861                           ;lorawan.c: 941: {;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13
      +                          ;
  8862  006060  ECE4  F04A         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  8863  006064  6E51               	movwf	btemp+11,c
  8864  006066  0E0D               	movlw	13
  8865  006068  2651               	addwf	btemp+11,f,c
  8866                           
  8867                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  8868  00606A  0EFF               	movlw	-1
  8869  00606C  C051  FFE3         	movff	btemp+11,plusw1
  8870                           
  8871                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  8872                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  8873  006070  0EFF               	movlw	-1
  8874  006072  50E3               	movf	plusw1,w,c
  8875  006074  6E50               	movwf	btemp+10,c
  8876  006076  6A51               	clrf	btemp+11,c
  8877  006078  0102               	movlb	2	; () banked
  8878  00607A  51D9               	movf	(_loRa+212)& (0+255),w,b
  8879  00607C  5C50               	subwf	btemp+10,w,c
  8880  00607E  51DA               	movf	(_loRa+213)& (0+255),w,b
  8881  006080  5851               	subwfb	btemp+11,w,c
  8882  006082  A0D8               	btfss	status,0,c
  8883  006084  D039               	goto	l21162
  8884                           
  8885                           ; BSR set to: 2
  8886                           ;lorawan.c: 946: {;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  8887  006086  0E01               	movlw	1
  8888  006088  ECCD  F046         	call	_SelectChannelForTransmission
  8889  00608C  0900               	iorlw	0
  8890  00608E  A4D8               	btfss	status,2,c
  8891  006090  D030               	goto	l21158
  8892                           
  8893                           ;lorawan.c: 948: {;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLe
      +                          ngth) == OK)
  8894  006092  0EC8               	movlw	low (_macBuffer+16)
  8895  006094  0100               	movlb	0	; () banked
  8896  006096  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
  8897  006098  0E06               	movlw	high (_macBuffer+16)
  8898  00609A  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  8899  00609C  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
  8900  0060A0  EC82  F01F         	call	_RADIO_Transmit	;wreg free
  8901  0060A4  C0A9  F050         	movff	?_RADIO_Transmit,btemp+10
  8902  0060A8  C0AA  F051         	movff	?_RADIO_Transmit+1,btemp+11
  8903  0060AC  5050               	movf	btemp+10,w,c
  8904  0060AE  1051               	iorwf	btemp+11,w,c
  8905  0060B0  A4D8               	btfss	status,2,c
  8906  0060B2  D01F               	goto	l21158
  8907                           
  8908                           ;lorawan.c: 951: {;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  8909  0060B4  0102               	movlb	2	; () banked
  8910  0060B6  5107               	movf	(_loRa+2)& (0+255),w,b
  8911  0060B8  0BF0               	andlw	-16
  8912  0060BA  0901               	iorlw	1
  8913  0060BC  6F07               	movwf	(_loRa+2)& (0+255),b
  8914                           
  8915                           ; BSR set to: 2
  8916                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  8917  0060BE  2BDE               	incf	(_loRa+217)& (0+255),f,b
  8918                           
  8919                           ; BSR set to: 2
  8920                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  8921  0060C0  B1DE               	btfsc	(_loRa+217)& (0+255),0,b
  8922  0060C2  D052               	goto	l1856
  8923                           
  8924                           ; BSR set to: 2
  8925  0060C4  51E4               	movf	(_loRa+223)& (0+255),w,b
  8926  0060C6  B4D8               	btfsc	status,2,c
  8927  0060C8  D04F               	goto	l1856
  8928                           
  8929                           ; BSR set to: 2
  8930  0060CA  51DE               	movf	(_loRa+217)& (0+255),w,b
  8931  0060CC  6E50               	movwf	btemp+10,c
  8932  0060CE  6A51               	clrf	btemp+11,c
  8933  0060D0  51DC               	movf	(_loRa+215)& (0+255),w,b
  8934  0060D2  6E4E               	movwf	btemp+8,c
  8935  0060D4  6A4F               	clrf	btemp+9,c
  8936  0060D6  0E01               	movlw	1
  8937  0060D8  264E               	addwf	btemp+8,f,c
  8938  0060DA  0E00               	movlw	0
  8939  0060DC  224F               	addwfc	btemp+9,f,c
  8940  0060DE  5050               	movf	btemp+10,w,c
  8941  0060E0  184E               	xorwf	btemp+8,w,c
  8942  0060E2  E104               	bnz	u23990
  8943  0060E4  5051               	movf	btemp+11,w,c
  8944  0060E6  184F               	xorwf	btemp+9,w,c
  8945  0060E8  B4D8               	btfsc	status,2,c
  8946  0060EA  D03E               	goto	l1856
  8947  0060EC                     u23990:
  8948                           
  8949                           ; BSR set to: 2
  8950                           ;lorawan.c: 957: {;lorawan.c: 958: FindSmallestDataRate();
  8951  0060EC  ECFF  F03C         	call	_FindSmallestDataRate	;wreg free
  8952  0060F0  D03B               	goto	l1856
  8953  0060F2                     l21158:
  8954                           
  8955                           ;lorawan.c: 961: else;lorawan.c: 962: {;lorawan.c: 964: UpdateRetransmissionAckTimeoutSt
      +                          ate ();
  8956  0060F2  ECBE  F045         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  8957  0060F6  D038               	goto	l1856
  8958  0060F8                     l21162:
  8959                           
  8960                           ; BSR set to: 2
  8961                           ;lorawan.c: 973: else;lorawan.c: 974: {;lorawan.c: 975: ResetParametersForConfirmedTrans
      +                          mission ();
  8962  0060F8  ECD3  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  8963                           
  8964                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  8965  0060FC  0101               	movlb	1	; () banked
  8966  0060FE  510E               	movf	_rxPayload& (0+255),w,b
  8967  006100  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  8968  006102  B4D8               	btfsc	status,2,c
  8969  006104  D031               	goto	l1856
  8970                           
  8971                           ; BSR set to: 1
  8972                           ;lorawan.c: 977: {;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  8973  006106  0E00               	movlw	0
  8974  006108  0100               	movlb	0	; () banked
  8975  00610A  6F60               	movwf	RxData@pData& (0+255),b
  8976  00610C  0E00               	movlw	0
  8977  00610E  6F61               	movwf	(RxData@pData+1)& (0+255),b
  8978  006110  0E00               	movlw	0
  8979  006112  6F62               	movwf	RxData@dataLength& (0+255),b
  8980  006114  0E04               	movlw	4
  8981  006116  6F63               	movwf	RxData@status& (0+255),b
  8982  006118  D801               	call	u24018
  8983  00611A  D026               	goto	l1856
  8984  00611C                     u24018:
  8985  00611C  0005               	push	
  8986  00611E  6EFA               	movwf	pclath,c
  8987  006120  D019               	goto	L10
  8988  006122                     l21168:
  8989                           
  8990                           ; BSR set to: 2
  8991                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  8992  006122  51DE               	movf	(_loRa+217)& (0+255),w,b
  8993  006124  5DDC               	subwf	(_loRa+215)& (0+255),w,b
  8994  006126  A0D8               	btfss	status,0,c
  8995                           
  8996                           ; BSR set to: 2
  8997  006128  B108               	btfsc	(_loRa+3)& (0+255),0,b
  8998  00612A  D01E               	goto	l1856
  8999                           
  9000                           ; BSR set to: 2
  9001                           ;lorawan.c: 983: {;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  9002  00612C  ECD3  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9003                           
  9004                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  9005  006130  0101               	movlb	1	; () banked
  9006  006132  510E               	movf	_rxPayload& (0+255),w,b
  9007  006134  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9008  006136  B4D8               	btfsc	status,2,c
  9009  006138  D017               	goto	l1856
  9010                           
  9011                           ; BSR set to: 1
  9012                           ;lorawan.c: 986: {;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  9013  00613A  0E00               	movlw	0
  9014  00613C  0100               	movlb	0	; () banked
  9015  00613E  6F60               	movwf	RxData@pData& (0+255),b
  9016  006140  0E00               	movlw	0
  9017  006142  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9018  006144  0E00               	movlw	0
  9019  006146  6F62               	movwf	RxData@dataLength& (0+255),b
  9020  006148  0E00               	movlw	0
  9021  00614A  6F63               	movwf	RxData@status& (0+255),b
  9022  00614C  D801               	call	u24058
  9023  00614E  D00C               	goto	l1856
  9024  006150                     u24058:
  9025  006150  0005               	push	
  9026  006152  6EFA               	movwf	pclath,c
  9027  006154                     L10:
  9028  006154  0101               	movlb	1	; () banked
  9029  006156  510E               	movf	_rxPayload& (0+255),w,b
  9030  006158  6EFD               	movwf	tosl,c
  9031  00615A  510F               	movf	(_rxPayload+1)& (0+255),w,b
  9032  00615C  6EFE               	movwf	tosh,c
  9033  00615E  6AFF               	clrf	tosu,c
  9034  006160  50FA               	movf	pclath,w,c
  9035  006162  0012               	return		;indir
  9036  006164                     l21178:
  9037                           
  9038                           ; BSR set to: 2
  9039                           ;lorawan.c: 991: else;lorawan.c: 992: {;lorawan.c: 993: ResetParametersForConfirmedTrans
      +                          mission ();
  9040  006164  ECD3  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9041  006168                     l1856:
  9042                           
  9043                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  9044  006168  52E5               	movf	postdec1,f,c
  9045  00616A  52E5               	movf	postdec1,f,c
  9046  00616C  0012               	return		;funcret
  9047  00616E                     __end_of_AckRetransmissionCallback:
  9048                           	opt callstack 0
  9049                           
  9050 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  9051 ;; Defined at:
  9052 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  param           1  [STACK] unsigned char 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  iCtr            1  [STACK] unsigned char 
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1  [STACK] void 
  9059 ;; Registers used:
  9060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  9061 ;; Tracked objects:
  9062 ;;		On entry : 3F/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9070 ;;Total ram usage:        0 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; Hardware stack levels required when called:   11
  9073 ;; This function calls:
  9074 ;;		_SwTimerSetTimeout
  9075 ;;		_SwTimerStart
  9076 ;;		___lldiv
  9077 ;; This function is called by:
  9078 ;;		_SetCallbackSoftwareTimers
  9079 ;;		_SwTimersExecute
  9080 ;; This function uses a reentrant model
  9081 ;;
  9082                           
  9083                           	psect	text27
  9084  004F9E                     __ptext27:
  9085                           	opt callstack 0
  9086  004F9E                     _LORAWAN_LinkCheckCallback:
  9087                           	opt callstack 0
  9088                           
  9089                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9090  004F9E  0E05               	movlw	5
  9091  004FA0  26E1               	addwf	fsr1l,f,c
  9092  004FA2  0E00               	movlw	0
  9093  004FA4  22E2               	addwfc	fsr1h,f,c
  9094                           
  9095                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  9096                           
  9097                           ;incstack = 0
  9098  004FA6  0102               	movlb	2	; () banked
  9099  004FA8  A108               	btfss	(_loRa+3)& (0+255),0,b
  9100                           
  9101                           ; BSR set to: 2
  9102  004FAA  A508               	btfss	(_loRa+3)& (0+255),2,b
  9103  004FAC  D02C               	goto	l21122
  9104                           
  9105                           ; BSR set to: 2
  9106                           ;lorawan.c: 886: {;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  9107                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9108  004FAE  0EFF               	movlw	-1
  9109  004FB0  6AE3               	clrf	plusw1,c
  9110  004FB2  D00F               	goto	l21112
  9111  004FB4                     l21106:
  9112                           
  9113                           ; BSR set to: 2
  9114                           ;lorawan.c: 889: {;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_C
      +                          ID)
  9115                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9116  004FB4  0EFF               	movlw	-1
  9117  004FB6  50E3               	movf	plusw1,w,c
  9118  004FB8  0D02               	mullw	2
  9119  004FBA  0EAD               	movlw	low (_loRa+168)
  9120  004FBC  24F3               	addwf	prodl,w,c
  9121  004FBE  6ED9               	movwf	fsr2l,c
  9122  004FC0  0E02               	movlw	high (_loRa+168)
  9123  004FC2  20F4               	addwfc	prodh,w,c
  9124  004FC4  6EDA               	movwf	fsr2h,c
  9125  004FC6  0E02               	movlw	2
  9126  004FC8  18DE               	xorwf	postinc2,w,c
  9127  004FCA  B4D8               	btfsc	status,2,c
  9128  004FCC  D009               	goto	u23850
  9129                           
  9130                           ; BSR set to: 2
  9131                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9132  004FCE  0EFF               	movlw	-1
  9133  004FD0  2AE3               	incf	plusw1,f,c
  9134  004FD2                     l21112:
  9135                           
  9136                           ; BSR set to: 2
  9137                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9138  004FD2  0EFF               	movlw	-1
  9139  004FD4  CFE3 F046          	movff	plusw1,btemp
  9140  004FD8  51AC               	movf	(_loRa+167)& (0+255),w,b
  9141  004FDA  5C46               	subwf	btemp,w,c
  9142  004FDC  A0D8               	btfss	status,0,c
  9143  004FDE  D7EA               	goto	l21106
  9144  004FE0                     u23850:
  9145                           
  9146                           ; BSR set to: 2
  9147                           ;lorawan.c: 893: };lorawan.c: 894: };lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  9148                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  9149  004FE0  0EFF               	movlw	-1
  9150  004FE2  50E3               	movf	plusw1,w,c
  9151  004FE4  19AC               	xorwf	(_loRa+167)& (0+255),w,b
  9152  004FE6  A4D8               	btfss	status,2,c
  9153  004FE8  D00E               	goto	l21122
  9154                           
  9155                           ; BSR set to: 2
  9156                           ;lorawan.c: 897: {;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = L
      +                          INK_CHECK_CID;
  9157  004FEA  51AC               	movf	(_loRa+167)& (0+255),w,b
  9158  004FEC  0D02               	mullw	2
  9159  004FEE  0EAD               	movlw	low (_loRa+168)
  9160  004FF0  24F3               	addwf	prodl,w,c
  9161  004FF2  6ED9               	movwf	fsr2l,c
  9162  004FF4  0E02               	movlw	high (_loRa+168)
  9163  004FF6  20F4               	addwfc	prodh,w,c
  9164  004FF8  6EDA               	movwf	fsr2h,c
  9165  004FFA  0E02               	movlw	2
  9166  004FFC  6EDF               	movwf	indf2,c
  9167                           
  9168                           ; BSR set to: 2
  9169                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  9170  004FFE  0E10               	movlw	16
  9171  005000  61AC               	cpfslt	(_loRa+167)& (0+255),b
  9172  005002  D001               	goto	l21122
  9173                           
  9174                           ; BSR set to: 2
  9175                           ;lorawan.c: 901: {;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  9176  005004  2BAC               	incf	(_loRa+167)& (0+255),f,b
  9177  005006                     l21122:
  9178                           
  9179                           ; BSR set to: 2
  9180                           ;lorawan.c: 903: };lorawan.c: 904: };lorawan.c: 905: };lorawan.c: 908: if (loRa.macStatu
      +                          s.linkCheck == 1)
  9181  005006  A508               	btfss	(_loRa+3)& (0+255),2,b
  9182  005008  D07B               	goto	l1834
  9183                           
  9184                           ; BSR set to: 2
  9185                           ;lorawan.c: 909: {;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.perio
      +                          dForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125U
      +                          L ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  9186  00500A  51D4               	movf	(_loRa+207)& (0+255),w,b
  9187  00500C  E107               	bnz	u23890
  9188  00500E  29D1               	incf	(_loRa+204)& (0+255),w,b
  9189  005010  0EFF               	movlw	255
  9190  005012  59D2               	subwfb	(_loRa+205)& (0+255),w,b
  9191  005014  0E0F               	movlw	15
  9192  005016  59D3               	subwfb	(_loRa+206)& (0+255),w,b
  9193  005018  A0D8               	btfss	status,0,c
  9194  00501A  D024               	goto	l21128
  9195  00501C                     u23890:
  9196                           
  9197                           ; BSR set to: 2
  9198  00501C  C2D1  F060         	movff	_loRa+204,___lldiv@dividend
  9199  005020  C2D2  F061         	movff	_loRa+205,___lldiv@dividend+1
  9200  005024  C2D3  F062         	movff	_loRa+206,___lldiv@dividend+2
  9201  005028  C2D4  F063         	movff	_loRa+207,___lldiv@dividend+3
  9202  00502C  0E7D               	movlw	125
  9203  00502E  0100               	movlb	0	; () banked
  9204  005030  6F64               	movwf	___lldiv@divisor& (0+255),b
  9205  005032  0E00               	movlw	0
  9206  005034  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9207  005036  0E00               	movlw	0
  9208  005038  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9209  00503A  0E00               	movlw	0
  9210  00503C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9211  00503E  ECD9  F042         	call	___lldiv	;wreg free
  9212  005042  C060  F04E         	movff	?___lldiv,btemp+8
  9213  005046  C061  F04F         	movff	?___lldiv+1,btemp+9
  9214  00504A  C062  F050         	movff	?___lldiv+2,btemp+10
  9215  00504E  C063  F051         	movff	?___lldiv+3,btemp+11
  9216  005052  0E0C               	movlw	12
  9217  005054                     u23905:
  9218  005054  90D8               	bcf	status,0,c
  9219  005056  364E               	rlcf	btemp+8,f,c
  9220  005058  364F               	rlcf	btemp+9,f,c
  9221  00505A  3650               	rlcf	btemp+10,f,c
  9222  00505C  3651               	rlcf	btemp+11,f,c
  9223  00505E  2EE8               	decfsz	wreg,f,c
  9224  005060  D7F9               	goto	u23905
  9225  005062  D02B               	goto	L11
  9226  005064                     l21128:
  9227                           
  9228                           ; BSR set to: 2
  9229  005064  C2D1  F04E         	movff	_loRa+204,btemp+8
  9230  005068  C2D2  F04F         	movff	_loRa+205,btemp+9
  9231  00506C  C2D3  F050         	movff	_loRa+206,btemp+10
  9232  005070  C2D4  F051         	movff	_loRa+207,btemp+11
  9233  005074  0E0C               	movlw	12
  9234  005076                     u23915:
  9235  005076  90D8               	bcf	status,0,c
  9236  005078  364E               	rlcf	btemp+8,f,c
  9237  00507A  364F               	rlcf	btemp+9,f,c
  9238  00507C  3650               	rlcf	btemp+10,f,c
  9239  00507E  3651               	rlcf	btemp+11,f,c
  9240  005080  2EE8               	decfsz	wreg,f,c
  9241  005082  D7F9               	goto	u23915
  9242  005084  C04E  F060         	movff	btemp+8,___lldiv@dividend
  9243  005088  C04F  F061         	movff	btemp+9,___lldiv@dividend+1
  9244  00508C  C050  F062         	movff	btemp+10,___lldiv@dividend+2
  9245  005090  C051  F063         	movff	btemp+11,___lldiv@dividend+3
  9246  005094  0E7D               	movlw	125
  9247  005096  0100               	movlb	0	; () banked
  9248  005098  6F64               	movwf	___lldiv@divisor& (0+255),b
  9249  00509A  0E00               	movlw	0
  9250  00509C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
  9251  00509E  0E00               	movlw	0
  9252  0050A0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
  9253  0050A2  0E00               	movlw	0
  9254  0050A4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
  9255  0050A6  ECD9  F042         	call	___lldiv	;wreg free
  9256  0050AA  C060  F04E         	movff	?___lldiv,btemp+8
  9257  0050AE  C061  F04F         	movff	?___lldiv+1,btemp+9
  9258  0050B2  C062  F050         	movff	?___lldiv+2,btemp+10
  9259  0050B6  C063  F051         	movff	?___lldiv+3,btemp+11
  9260  0050BA                     L11:
  9261                           
  9262                           ;stkvar	_LORAWAN_LinkCheckCallback$2513 @ sp[(-5)+0]
  9263  0050BA  0EFB               	movlw	-5
  9264  0050BC  C04E  FFE3         	movff	btemp+8,plusw1
  9265  0050C0  0EFC               	movlw	-4
  9266  0050C2  C04F  FFE3         	movff	btemp+9,plusw1
  9267  0050C6  0EFD               	movlw	-3
  9268  0050C8  C050  FFE3         	movff	btemp+10,plusw1
  9269  0050CC  0EFE               	movlw	-2
  9270  0050CE  C051  FFE3         	movff	btemp+11,plusw1
  9271                           
  9272                           ;stkvar	_LORAWAN_LinkCheckCallback$2513 @ sp[(-5)+0]
  9273  0050D2  50E1               	movf	fsr1l,w,c
  9274  0050D4  0FFB               	addlw	-5
  9275  0050D6  6ED9               	movwf	fsr2l,c
  9276  0050D8  50E2               	movf	fsr1h,w,c
  9277  0050DA  6EDA               	movwf	fsr2h,c
  9278  0050DC  0EFF               	movlw	255
  9279  0050DE  22DA               	addwfc	fsr2h,f,c
  9280  0050E0  CFDE F06D          	movff	postinc2,SwTimerSetTimeout@timeout
  9281  0050E4  CFDE F06E          	movff	postinc2,SwTimerSetTimeout@timeout+1
  9282  0050E8  CFDE F06F          	movff	postinc2,SwTimerSetTimeout@timeout+2
  9283  0050EC  CFDE F070          	movff	postinc2,SwTimerSetTimeout@timeout+3
  9284  0050F0  0102               	movlb	2	; () banked
  9285  0050F2  51EC               	movf	(_loRa+231)& (0+255),w,b
  9286  0050F4  ECC2  F04C         	call	_SwTimerSetTimeout
  9287                           
  9288                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  9289  0050F8  0102               	movlb	2	; () banked
  9290  0050FA  51EC               	movf	(_loRa+231)& (0+255),w,b
  9291  0050FC  ECB6  F040         	call	_SwTimerStart
  9292  005100                     l1834:
  9293                           
  9294                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  9295  005100  0EFA               	movlw	250
  9296  005102  26E1               	addwf	fsr1l,f,c
  9297  005104  0EFF               	movlw	255
  9298  005106  22E2               	addwfc	fsr1h,f,c
  9299  005108  0012               	return		;funcret
  9300  00510A                     __end_of_LORAWAN_LinkCheckCallback:
  9301                           	opt callstack 0
  9302                           
  9303 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  9304 ;; Defined at:
  9305 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;  param           1  [STACK] unsigned char 
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;  freq            4  [STACK] unsigned long 
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  1  [STACK] void 
  9312 ;; Registers used:
  9313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  9314 ;; Tracked objects:
  9315 ;;		On entry : 3F/0
  9316 ;;		On exit  : 0/0
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9323 ;;Total ram usage:        0 bytes
  9324 ;; Hardware stack levels used:    1
  9325 ;; Hardware stack levels required when called:   13
  9326 ;; This function calls:
  9327 ;;		_ConfigureRadioRx
  9328 ;;		_GetRx1Freq
  9329 ;;		_RADIO_ReceiveStart
  9330 ;;		_RADIO_ReceiveStop
  9331 ;;		_RADIO_ReleaseData
  9332 ;; This function is called by:
  9333 ;;		_SetCallbackSoftwareTimers
  9334 ;;		_SwTimersExecute
  9335 ;; This function uses a reentrant model
  9336 ;;
  9337                           
  9338                           	psect	text28
  9339  007C3A                     __ptext28:
  9340                           	opt callstack 0
  9341  007C3A                     _LORAWAN_ReceiveWindow1Callback:
  9342                           	opt callstack 0
  9343                           
  9344                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9345  007C3A  52E6               	movf	postinc1,f,c
  9346  007C3C  52E6               	movf	postinc1,f,c
  9347  007C3E  52E6               	movf	postinc1,f,c
  9348  007C40  52E6               	movf	postinc1,f,c
  9349                           
  9350                           ;lorawan.c: 798: uint32_t freq;;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  9351                           
  9352                           ;incstack = 0
  9353  007C42  0102               	movlb	2	; () banked
  9354  007C44  B108               	btfsc	(_loRa+3)& (0+255),0,b
  9355  007C46  D050               	goto	l1807
  9356                           
  9357                           ; BSR set to: 2
  9358                           ;lorawan.c: 801: {;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  9359  007C48  0E02               	movlw	2
  9360  007C4A  1917               	xorwf	(_loRa+18)& (0+255),w,b
  9361  007C4C  B4D8               	btfsc	status,2,c
  9362                           
  9363                           ; BSR set to: 2
  9364                           ;lorawan.c: 803: {;lorawan.c: 804: RADIO_ReceiveStop();
  9365  007C4E  ECF8  F051         	call	_RADIO_ReceiveStop	;wreg free
  9366                           
  9367                           ;lorawan.c: 805: };lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.of
      +                          fset)
  9368  007C52  0102               	movlb	2	; () banked
  9369  007C54  51F4               	movf	(_loRa+239)& (0+255),w,b
  9370  007C56  5D1C               	subwf	(_loRa+23)& (0+255),w,b
  9371  007C58  A0D8               	btfss	status,0,c
  9372  007C5A  D004               	goto	l1805
  9373                           
  9374                           ; BSR set to: 2
  9375                           ;lorawan.c: 807: {;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receive
      +                          Window1Parameters.dataRate - loRa.offset;
  9376  007C5C  51F4               	movf	(_loRa+239)& (0+255),w,b
  9377  007C5E  5D1C               	subwf	(_loRa+23)& (0+255),w,b
  9378  007C60  6F1C               	movwf	(_loRa+23)& (0+255),b
  9379                           
  9380                           ;lorawan.c: 809: }
  9381  007C62  D001               	goto	l21088
  9382  007C64                     l1805:
  9383                           
  9384                           ; BSR set to: 2
  9385                           ;lorawan.c: 810: else;lorawan.c: 811: {;lorawan.c: 812: loRa.receiveWindow1Parameters.da
      +                          taRate = 0;
  9386  007C64  6B1C               	clrf	(_loRa+23)& (0+255),b
  9387  007C66                     l21088:
  9388                           
  9389                           ; BSR set to: 2
  9390                           ;lorawan.c: 813: };lorawan.c: 815: freq = GetRx1Freq();
  9391  007C66  EC76  F053         	call	_GetRx1Freq	;wreg free
  9392  007C6A  C060  F04E         	movff	?_GetRx1Freq,btemp+8
  9393  007C6E  C061  F04F         	movff	?_GetRx1Freq+1,btemp+9
  9394  007C72  C062  F050         	movff	?_GetRx1Freq+2,btemp+10
  9395  007C76  C063  F051         	movff	?_GetRx1Freq+3,btemp+11
  9396                           
  9397                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  9398  007C7A  0EFC               	movlw	-4
  9399  007C7C  C04E  FFE3         	movff	btemp+8,plusw1
  9400  007C80  0EFD               	movlw	-3
  9401  007C82  C04F  FFE3         	movff	btemp+9,plusw1
  9402  007C86  0EFE               	movlw	-2
  9403  007C88  C050  FFE3         	movff	btemp+10,plusw1
  9404  007C8C  0EFF               	movlw	-1
  9405  007C8E  C051  FFE3         	movff	btemp+11,plusw1
  9406                           
  9407                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  9408  007C92  0102               	movlb	2	; () banked
  9409  007C94  5107               	movf	(_loRa+2)& (0+255),w,b
  9410  007C96  0BF0               	andlw	-16
  9411  007C98  0903               	iorlw	3
  9412  007C9A  6F07               	movwf	(_loRa+2)& (0+255),b
  9413                           
  9414                           ; BSR set to: 2
  9415                           ;lorawan.c: 819: RADIO_ReleaseData();
  9416  007C9C  EC8D  F054         	call	_RADIO_ReleaseData	;wreg free
  9417                           
  9418                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  9419                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  9420  007CA0  50E1               	movf	fsr1l,w,c
  9421  007CA2  0FFC               	addlw	-4
  9422  007CA4  6ED9               	movwf	fsr2l,c
  9423  007CA6  50E2               	movf	fsr1h,w,c
  9424  007CA8  6EDA               	movwf	fsr2h,c
  9425  007CAA  0EFF               	movlw	255
  9426  007CAC  22DA               	addwfc	fsr2h,f,c
  9427  007CAE  CFDE F073          	movff	postinc2,ConfigureRadioRx@freq
  9428  007CB2  CFDE F074          	movff	postinc2,ConfigureRadioRx@freq+1
  9429  007CB6  CFDE F075          	movff	postinc2,ConfigureRadioRx@freq+2
  9430  007CBA  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq+3
  9431  007CBE  0102               	movlb	2	; () banked
  9432  007CC0  511C               	movf	(_loRa+23)& (0+255),w,b
  9433  007CC2  ECA9  F050         	call	_ConfigureRadioRx
  9434                           
  9435                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  9436  007CC6  0E1F               	movlw	low _rxWindowSize
  9437  007CC8  0102               	movlb	2	; () banked
  9438  007CCA  251C               	addwf	(_loRa+23)& (0+255),w,b
  9439  007CCC  6EF6               	movwf	tblptrl,c
  9440  007CCE  6AF7               	clrf	tblptrh,c
  9441  007CD0  0EFF               	movlw	high _rxWindowSize
  9442  007CD2  22F7               	addwfc	tblptrh,f,c
  9443  007CD4                     	if	1	;There are 3 active tblptr bytes
  9444  007CD4  6AF8               	clrf	tblptru,c
  9445  007CD6  0E00               	movlw	low (__mediumconst shr (0+16))
  9446  007CD8  22F8               	addwfc	tblptru,f,c
  9447  007CDA                     	endif
  9448  007CDA  0008               	tblrd		*
  9449  007CDC  50F5               	movf	tablat,w,c
  9450  007CDE  0100               	movlb	0	; () banked
  9451  007CE0  6FA9               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  9452  007CE2  6BAA               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  9453  007CE4  EC6A  F01E         	call	_RADIO_ReceiveStart	;wreg free
  9454  007CE8                     l1807:
  9455                           
  9456                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  9457  007CE8  0EFB               	movlw	251
  9458  007CEA  26E1               	addwf	fsr1l,f,c
  9459  007CEC  0EFF               	movlw	255
  9460  007CEE  22E2               	addwfc	fsr1h,f,c
  9461  007CF0  0012               	return		;funcret
  9462  007CF2                     __end_of_LORAWAN_ReceiveWindow1Callback:
  9463                           	opt callstack 0
  9464                           
  9465 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  9466 ;; Defined at:
  9467 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9468 ;; Parameters:    Size  Location     Type
  9469 ;;  param           1  [STACK] unsigned char 
  9470 ;; Auto vars:     Size  Location     Type
  9471 ;;		None
  9472 ;; Return value:  Size  Location     Type
  9473 ;;                  1  [STACK] void 
  9474 ;; Registers used:
  9475 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
  9476 ;; Tracked objects:
  9477 ;;		On entry : 3D/0
  9478 ;;		On exit  : 0/0
  9479 ;;		Unchanged: 0/0
  9480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9485 ;;Total ram usage:        0 bytes
  9486 ;; Hardware stack levels used:    1
  9487 ;; Hardware stack levels required when called:   14
  9488 ;; This function calls:
  9489 ;;		_ConfigureRadioRx
  9490 ;;		_LORAWAN_EnterContinuousReceive
  9491 ;;		_RADIO_GetStatus
  9492 ;;		_RADIO_ReceiveStart
  9493 ;;		_RADIO_ReceiveStop
  9494 ;;		_RADIO_ReleaseData
  9495 ;;		_ResetParametersForConfirmedTransmission
  9496 ;;		_ResetParametersForUnconfirmedTransmission
  9497 ;;		_RxData
  9498 ;; This function is called by:
  9499 ;;		_LORAWAN_RxTimeout
  9500 ;;		_SetCallbackSoftwareTimers
  9501 ;;		_SwTimersExecute
  9502 ;; This function uses a reentrant model
  9503 ;;
  9504                           
  9505                           	psect	text29
  9506  00753C                     __ptext29:
  9507                           	opt callstack 0
  9508  00753C                     _LORAWAN_ReceiveWindow2Callback:
  9509                           	opt callstack 10
  9510                           
  9511                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  9512                           
  9513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9514                           ;incstack = 0
  9515  00753C  0102               	movlb	2	; () banked
  9516  00753E  B108               	btfsc	(_loRa+3)& (0+255),0,b
  9517  007540  D05F               	goto	l1810
  9518                           
  9519                           ; BSR set to: 2
  9520                           ;lorawan.c: 831: {;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  9521  007542  EC8A  F054         	call	_RADIO_GetStatus	;wreg free
  9522  007546  6E51               	movwf	btemp+11,c
  9523  007548  B251               	btfsc	btemp+11,1,c
  9524  00754A  D056               	goto	l19890
  9525                           
  9526                           ;lorawan.c: 833: {;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  9527  00754C  0102               	movlb	2	; () banked
  9528  00754E  5107               	movf	(_loRa+2)& (0+255),w,b
  9529  007550  0BF0               	andlw	-16
  9530  007552  0905               	iorlw	5
  9531  007554  6F07               	movwf	(_loRa+2)& (0+255),b
  9532                           
  9533                           ; BSR set to: 2
  9534                           ;lorawan.c: 836: RADIO_ReceiveStop();
  9535  007556  ECF8  F051         	call	_RADIO_ReceiveStop	;wreg free
  9536                           
  9537                           ;lorawan.c: 837: RADIO_ReleaseData();
  9538  00755A  EC8D  F054         	call	_RADIO_ReleaseData	;wreg free
  9539                           
  9540                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  9541  00755E  C21D  F073         	movff	_loRa+24,ConfigureRadioRx@freq
  9542  007562  C21E  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
  9543  007566  C21F  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
  9544  00756A  C220  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
  9545  00756E  0102               	movlb	2	; () banked
  9546  007570  5121               	movf	(_loRa+28)& (0+255),w,b
  9547  007572  ECA9  F050         	call	_ConfigureRadioRx
  9548                           
  9549                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  9550  007576  0102               	movlb	2	; () banked
  9551  007578  5117               	movf	(_loRa+18)& (0+255),w,b
  9552  00757A  A4D8               	btfss	status,2,c
  9553  00757C  D036               	goto	l19886
  9554                           
  9555                           ; BSR set to: 2
  9556                           ;lorawan.c: 842: {;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindo
      +                          w2Parameters.dataRate]) != OK)
  9557  00757E  0E1F               	movlw	low _rxWindowSize
  9558  007580  2521               	addwf	(_loRa+28)& (0+255),w,b
  9559  007582  6EF6               	movwf	tblptrl,c
  9560  007584  6AF7               	clrf	tblptrh,c
  9561  007586  0EFF               	movlw	high _rxWindowSize
  9562  007588  22F7               	addwfc	tblptrh,f,c
  9563  00758A                     	if	1	;There are 3 active tblptr bytes
  9564  00758A  6AF8               	clrf	tblptru,c
  9565  00758C  0E00               	movlw	low (__mediumconst shr (0+16))
  9566  00758E  22F8               	addwfc	tblptru,f,c
  9567  007590                     	endif
  9568  007590  0008               	tblrd		*
  9569  007592  50F5               	movf	tablat,w,c
  9570  007594  0100               	movlb	0	; () banked
  9571  007596  6FA9               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  9572  007598  6BAA               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  9573  00759A  EC6A  F01E         	call	_RADIO_ReceiveStart	;wreg free
  9574  00759E  C0A9  F050         	movff	?_RADIO_ReceiveStart,btemp+10
  9575  0075A2  C0AA  F051         	movff	?_RADIO_ReceiveStart+1,btemp+11
  9576  0075A6  5050               	movf	btemp+10,w,c
  9577  0075A8  1051               	iorwf	btemp+11,w,c
  9578  0075AA  B4D8               	btfsc	status,2,c
  9579  0075AC  D031               	goto	l1819
  9580                           
  9581                           ;lorawan.c: 844: {;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  9582  0075AE  ECD3  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9583                           
  9584                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  9585  0075B2  ECA3  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9586                           
  9587                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  9588  0075B6  0101               	movlb	1	; () banked
  9589  0075B8  510E               	movf	_rxPayload& (0+255),w,b
  9590  0075BA  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9591  0075BC  B4D8               	btfsc	status,2,c
  9592  0075BE  D028               	goto	l1819
  9593                           
  9594                           ; BSR set to: 1
  9595                           ;lorawan.c: 848: {;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  9596  0075C0  0E00               	movlw	0
  9597  0075C2  0100               	movlb	0	; () banked
  9598  0075C4  6F60               	movwf	RxData@pData& (0+255),b
  9599  0075C6  0E00               	movlw	0
  9600  0075C8  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9601  0075CA  0E00               	movlw	0
  9602  0075CC  6F62               	movwf	RxData@dataLength& (0+255),b
  9603  0075CE  0E00               	movlw	0
  9604  0075D0  6F63               	movwf	RxData@status& (0+255),b
  9605  0075D2  D801               	call	u21568
  9606  0075D4  D01D               	goto	l1819
  9607  0075D6                     u21568:
  9608  0075D6  0005               	push	
  9609  0075D8  6EFA               	movwf	pclath,c
  9610  0075DA  0101               	movlb	1	; () banked
  9611  0075DC  510E               	movf	_rxPayload& (0+255),w,b
  9612  0075DE  6EFD               	movwf	tosl,c
  9613  0075E0  510F               	movf	(_rxPayload+1)& (0+255),w,b
  9614  0075E2  6EFE               	movwf	tosh,c
  9615  0075E4  6AFF               	clrf	tosu,c
  9616  0075E6  50FA               	movf	pclath,w,c
  9617  0075E8  0012               	return		;indir
  9618  0075EA                     l19886:
  9619                           
  9620                           ; BSR set to: 2
  9621                           ;lorawan.c: 853: else;lorawan.c: 854: {;lorawan.c: 855: loRa.macStatus.macState = CLASS_
      +                          C_RX2_2_OPEN;
  9622  0075EA  5107               	movf	(_loRa+2)& (0+255),w,b
  9623  0075EC  0BF0               	andlw	-16
  9624  0075EE  0909               	iorlw	9
  9625  0075F0  6F07               	movwf	(_loRa+2)& (0+255),b
  9626                           
  9627                           ; BSR set to: 2
  9628                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  9629  0075F2  EC18  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  9630  0075F6  D00C               	goto	l1819
  9631  0075F8                     l19890:
  9632                           
  9633                           ;lorawan.c: 859: else;lorawan.c: 860: {;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  9634  0075F8  0E01               	movlw	1
  9635  0075FA  0102               	movlb	2	; () banked
  9636  0075FC  6FF6               	movwf	(_loRa+241)& (0+255),b
  9637                           
  9638                           ; BSR set to: 1
  9639                           ;lorawan.c: 864: };lorawan.c: 865: }
  9640  0075FE  D008               	goto	l1819
  9641  007600                     l1810:
  9642                           
  9643                           ; BSR set to: 2
  9644                           ;lorawan.c: 866: else;lorawan.c: 867: {;lorawan.c: 870: if (loRa.lorawanMacStatus.joinin
      +                          g == 1)
  9645  007600  A505               	btfss	_loRa& (0+255),2,b
  9646  007602  D002               	goto	l19894
  9647                           
  9648                           ; BSR set to: 2
  9649                           ;lorawan.c: 871: {;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  9650  007604  9505               	bcf	_loRa& (0+255),2,b
  9651                           
  9652                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  9653  007606  9907               	bcf	(_loRa+2)& (0+255),4,b
  9654  007608                     l19894:
  9655                           
  9656                           ; BSR set to: 2
  9657                           ;lorawan.c: 874: };lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  9658  007608  ECA3  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9659                           
  9660                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  9661  00760C  ECD3  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
  9662  007610                     l1819:
  9663                           
  9664                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  9665  007610  52E5               	movf	postdec1,f,c
  9666  007612  0012               	return		;funcret
  9667  007614                     __end_of_LORAWAN_ReceiveWindow2Callback:
  9668                           	opt callstack 0
  9669                           
  9670 ;; *************** function _RADIO_WatchdogTimeout *****************
  9671 ;; Defined at:
  9672 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9673 ;; Parameters:    Size  Location     Type
  9674 ;;  param           1  [STACK] unsigned char 
  9675 ;; Auto vars:     Size  Location     Type
  9676 ;;		None
  9677 ;; Return value:  Size  Location     Type
  9678 ;;                  1  [STACK] void 
  9679 ;; Registers used:
  9680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
  9681 ;; Tracked objects:
  9682 ;;		On entry : 3F/0
  9683 ;;		On exit  : 0/0
  9684 ;;		Unchanged: 0/0
  9685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9690 ;;Total ram usage:        0 bytes
  9691 ;; Hardware stack levels used:    1
  9692 ;; Hardware stack levels required when called:   16
  9693 ;; This function calls:
  9694 ;;		_LORAWAN_RxTimeout
  9695 ;;		_LORAWAN_TxDone
  9696 ;;		_RADIO_WriteMode
  9697 ;; This function is called by:
  9698 ;;		_RADIO_Init
  9699 ;;		_SwTimersExecute
  9700 ;; This function uses a reentrant model
  9701 ;;
  9702                           
  9703                           	psect	text30
  9704  009828                     __ptext30:
  9705                           	opt callstack 0
  9706  009828                     _RADIO_WatchdogTimeout:
  9707                           	opt callstack 10
  9708                           
  9709                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  9710                           
  9711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9712                           ;incstack = 0
  9713  009828  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9714  00982C  0E01               	movlw	1
  9715  00982E  0100               	movlb	0	; () banked
  9716  009830  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9717  009832  0E01               	movlw	1
  9718  009834  ECEB  F035         	call	_RADIO_WriteMode
  9719                           
  9720                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9721  009838  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9722  00983C  0E00               	movlw	0
  9723  00983E  0100               	movlb	0	; () banked
  9724  009840  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9725  009842  0E00               	movlw	0
  9726  009844  ECEB  F035         	call	_RADIO_WriteMode
  9727                           
  9728                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  9729  009848  0101               	movlb	1	; () banked
  9730  00984A  894C               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  9731                           
  9732                           ; BSR set to: 1
  9733                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  9734  00984C  A34C               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  9735  00984E  D004               	goto	l691
  9736                           
  9737                           ; BSR set to: 1
  9738                           ;radio_driver_SX1276.c: 1414: {;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &=
      +                           ~(1 << (1));
  9739  009850  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9740                           
  9741                           ; BSR set to: 1
  9742                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  9743  009852  ECD7  F018         	call	_LORAWAN_RxTimeout	;wreg free
  9744                           
  9745                           ;radio_driver_SX1276.c: 1417: }
  9746  009856  D009               	goto	l694
  9747  009858                     l691:
  9748                           
  9749                           ; BSR set to: 1
  9750                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  9751  009858  A14C               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  9752  00985A  D007               	goto	l694
  9753                           
  9754                           ; BSR set to: 1
  9755                           ;radio_driver_SX1276.c: 1419: {;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &=
      +                           ~(1 << (0));
  9756  00985C  914C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9757                           
  9758                           ; BSR set to: 1
  9759                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  9760  00985E  C153  F0B3         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  9761  009862  C154  F0B4         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  9762  009866  ECEC  F005         	call	_LORAWAN_TxDone	;wreg free
  9763  00986A                     l694:
  9764                           
  9765                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  9766  00986A  52E5               	movf	postdec1,f,c
  9767  00986C  0012               	return		;funcret
  9768  00986E                     __end_of_RADIO_WatchdogTimeout:
  9769                           	opt callstack 0
  9770                           
  9771 ;; *************** function _RADIO_RxFSKTimeout *****************
  9772 ;; Defined at:
  9773 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9774 ;; Parameters:    Size  Location     Type
  9775 ;;  param           1  [STACK] unsigned char 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;  irqFlags        1  [STACK] unsigned char 
  9778 ;; Return value:  Size  Location     Type
  9779 ;;                  1  [STACK] void 
  9780 ;; Registers used:
  9781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblpt
      +rh, tblptru, prodl, prodh, cstack
  9782 ;; Tracked objects:
  9783 ;;		On entry : 3F/0
  9784 ;;		On exit  : 0/0
  9785 ;;		Unchanged: 0/0
  9786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9791 ;;Total ram usage:        0 bytes
  9792 ;; Hardware stack levels used:    1
  9793 ;; Hardware stack levels required when called:   16
  9794 ;; This function calls:
  9795 ;;		_LORAWAN_RxTimeout
  9796 ;;		_RADIO_RegisterRead
  9797 ;;		_RADIO_WriteMode
  9798 ;;		_SwTimerStop
  9799 ;; This function is called by:
  9800 ;;		_RADIO_Init
  9801 ;;		_SwTimersExecute
  9802 ;; This function uses a reentrant model
  9803 ;;
  9804                           
  9805                           	psect	text31
  9806  009BCA                     __ptext31:
  9807                           	opt callstack 0
  9808  009BCA                     _RADIO_RxFSKTimeout:
  9809                           	opt callstack 0
  9810                           
  9811                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9812  009BCA  52E6               	movf	postinc1,f,c
  9813                           
  9814                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;;radio_driver_SX1276.c: 1395: irqFlags = 
      +                          RADIO_RegisterRead(0x3E);
  9815                           
  9816                           ;incstack = 0
  9817  009BCC  0E3E               	movlw	62
  9818  009BCE  EC38  F051         	call	_RADIO_RegisterRead
  9819  009BD2  6E51               	movwf	btemp+11,c
  9820                           
  9821                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  9822  009BD4  0EFF               	movlw	-1
  9823  009BD6  C051  FFE3         	movff	btemp+11,plusw1
  9824                           
  9825                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  9826                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  9827  009BDA  0EFF               	movlw	-1
  9828  009BDC  B0E3               	btfsc	plusw1,0,c
  9829  009BDE  D010               	goto	l688
  9830                           
  9831                           ;radio_driver_SX1276.c: 1397: {;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
  9832  009BE0  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9833  009BE4  0E00               	movlw	0
  9834  009BE6  0100               	movlb	0	; () banked
  9835  009BE8  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9836  009BEA  0E00               	movlw	0
  9837  009BEC  ECEB  F035         	call	_RADIO_WriteMode
  9838                           
  9839                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9840  009BF0  0101               	movlb	1	; () banked
  9841  009BF2  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9842  009BF4  EC18  F052         	call	_SwTimerStop
  9843                           
  9844                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  9845  009BF8  0101               	movlb	1	; () banked
  9846  009BFA  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9847                           
  9848                           ; BSR set to: 1
  9849                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  9850  009BFC  ECD7  F018         	call	_LORAWAN_RxTimeout	;wreg free
  9851  009C00                     l688:
  9852                           
  9853                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9854  009C00  52E5               	movf	postdec1,f,c
  9855  009C02  52E5               	movf	postdec1,f,c
  9856  009C04  0012               	return		;funcret
  9857  009C06                     __end_of_RADIO_RxFSKTimeout:
  9858                           	opt callstack 0
  9859                           
  9860 ;; *************** function _UnconfirmedTransmissionCallback *****************
  9861 ;; Defined at:
  9862 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  param           1  [STACK] unsigned char 
  9865 ;; Auto vars:     Size  Location     Type
  9866 ;;		None
  9867 ;; Return value:  Size  Location     Type
  9868 ;;                  1  [STACK] void 
  9869 ;; Registers used:
  9870 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
  9871 ;; Tracked objects:
  9872 ;;		On entry : 3F/0
  9873 ;;		On exit  : 0/0
  9874 ;;		Unchanged: 0/0
  9875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9880 ;;Total ram usage:        0 bytes
  9881 ;; Hardware stack levels used:    1
  9882 ;; Hardware stack levels required when called:   13
  9883 ;; This function calls:
  9884 ;;		_RADIO_Transmit
  9885 ;;		_ResetParametersForUnconfirmedTransmission
  9886 ;;		_RxData
  9887 ;;		_SelectChannelForTransmission
  9888 ;; This function is called by:
  9889 ;;		_SetCallbackSoftwareTimers
  9890 ;;		_SwTimersExecute
  9891 ;; This function uses a reentrant model
  9892 ;;
  9893                           
  9894                           	psect	text32
  9895  008924                     __ptext32:
  9896                           	opt callstack 0
  9897  008924                     _UnconfirmedTransmissionCallback:
  9898                           	opt callstack 13
  9899                           
  9900                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  9901                           
  9902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9903                           ;incstack = 0
  9904  008924  0E01               	movlw	1
  9905  008926  ECCD  F046         	call	_SelectChannelForTransmission
  9906  00892A  0900               	iorlw	0
  9907  00892C  A4D8               	btfss	status,2,c
  9908  00892E  D018               	goto	l21188
  9909  008930  0EC8               	movlw	low (_macBuffer+16)
  9910  008932  0100               	movlb	0	; () banked
  9911  008934  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
  9912  008936  0E06               	movlw	high (_macBuffer+16)
  9913  008938  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  9914  00893A  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
  9915  00893E  EC82  F01F         	call	_RADIO_Transmit	;wreg free
  9916  008942  C0A9  F050         	movff	?_RADIO_Transmit,btemp+10
  9917  008946  C0AA  F051         	movff	?_RADIO_Transmit+1,btemp+11
  9918  00894A  5050               	movf	btemp+10,w,c
  9919  00894C  1051               	iorwf	btemp+11,w,c
  9920  00894E  A4D8               	btfss	status,2,c
  9921  008950  D007               	goto	l21188
  9922                           
  9923                           ;lorawan.c: 1001: {;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  9924  008952  0102               	movlb	2	; () banked
  9925  008954  2BDD               	incf	(_loRa+216)& (0+255),f,b
  9926                           
  9927                           ; BSR set to: 2
  9928                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  9929  008956  5107               	movf	(_loRa+2)& (0+255),w,b
  9930  008958  0BF0               	andlw	-16
  9931  00895A  0901               	iorlw	1
  9932  00895C  6F07               	movwf	(_loRa+2)& (0+255),b
  9933                           
  9934                           ;lorawan.c: 1005: }
  9935  00895E  D01C               	goto	u24099
  9936  008960                     l21188:
  9937                           
  9938                           ;lorawan.c: 1006: else;lorawan.c: 1008: {;lorawan.c: 1009: ResetParametersForUnconfirmed
      +                          Transmission ();
  9939  008960  ECA3  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  9940                           
  9941                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  9942  008964  0101               	movlb	1	; () banked
  9943  008966  510E               	movf	_rxPayload& (0+255),w,b
  9944  008968  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
  9945  00896A  B4D8               	btfsc	status,2,c
  9946  00896C  D015               	goto	u24099
  9947                           
  9948                           ; BSR set to: 1
  9949                           ;lorawan.c: 1011: {;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  9950  00896E  0E00               	movlw	0
  9951  008970  0100               	movlb	0	; () banked
  9952  008972  6F60               	movwf	RxData@pData& (0+255),b
  9953  008974  0E00               	movlw	0
  9954  008976  6F61               	movwf	(RxData@pData+1)& (0+255),b
  9955  008978  0E00               	movlw	0
  9956  00897A  6F62               	movwf	RxData@dataLength& (0+255),b
  9957  00897C  0E00               	movlw	0
  9958  00897E  6F63               	movwf	RxData@status& (0+255),b
  9959  008980  D801               	call	u24098
  9960  008982  D00A               	goto	u24099
  9961  008984                     u24098:
  9962  008984  0005               	push	
  9963  008986  6EFA               	movwf	pclath,c
  9964  008988  0101               	movlb	1	; () banked
  9965  00898A  510E               	movf	_rxPayload& (0+255),w,b
  9966  00898C  6EFD               	movwf	tosl,c
  9967  00898E  510F               	movf	(_rxPayload+1)& (0+255),w,b
  9968  008990  6EFE               	movwf	tosh,c
  9969  008992  6AFF               	clrf	tosu,c
  9970  008994  50FA               	movf	pclath,w,c
  9971  008996  0012               	return		;indir
  9972  008998                     u24099:
  9973                           
  9974                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  9975  008998  52E5               	movf	postdec1,f,c
  9976  00899A  0012               	return		;funcret
  9977  00899C                     __end_of_UnconfirmedTransmissionCallback:
  9978                           	opt callstack 0
  9979                           
  9980 ;; *************** function _GetRx1Freq *****************
  9981 ;; Defined at:
  9982 ;;		line 884 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  9983 ;; Parameters:    Size  Location     Type
  9984 ;;		None
  9985 ;; Auto vars:     Size  Location     Type
  9986 ;;		None
  9987 ;; Return value:  Size  Location     Type
  9988 ;;                  4    0[BANK0 ] unsigned long 
  9989 ;; Registers used:
  9990 ;;		None
  9991 ;; Tracked objects:
  9992 ;;		On entry : 0/0
  9993 ;;		On exit  : 0/0
  9994 ;;		Unchanged: 0/0
  9995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9996 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9999 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10000 ;;Total ram usage:        4 bytes
 10001 ;; Hardware stack levels used:    1
 10002 ;; Hardware stack levels required when called:    7
 10003 ;; This function calls:
 10004 ;;		Nothing
 10005 ;; This function is called by:
 10006 ;;		_LORAWAN_ReceiveWindow1Callback
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           	psect	text33
 10011  00A6EC                     __ptext33:
 10012                           	opt callstack 0
 10013  00A6EC                     _GetRx1Freq:
 10014                           	opt callstack 18
 10015                           
 10016                           ;lorawan_eu.c: 886: return loRa.receiveWindow1Parameters.frequency;
 10017                           
 10018                           ;incstack = 0
 10019  00A6EC  C218  F060         	movff	_loRa+19,?_GetRx1Freq
 10020  00A6F0  C219  F061         	movff	_loRa+20,?_GetRx1Freq+1
 10021  00A6F4  C21A  F062         	movff	_loRa+21,?_GetRx1Freq+2
 10022  00A6F8  C21B  F063         	movff	_loRa+22,?_GetRx1Freq+3
 10023  00A6FC  0012               	return		;funcret
 10024  00A6FE                     __end_of_GetRx1Freq:
 10025                           	opt callstack 0
 10026                           
 10027 ;; *************** function _RADIO_DIO5 *****************
 10028 ;; Defined at:
 10029 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;		None
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;  dioMapping      1    0        unsigned char 
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      void 
 10036 ;; Registers used:
 10037 ;;		wreg, status,2, status,0, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10044 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10045 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10046 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10047 ;;Total ram usage:        2 bytes
 10048 ;; Hardware stack levels used:    1
 10049 ;; Hardware stack levels required when called:   11
 10050 ;; This function calls:
 10051 ;;		_RADIO_RegisterRead
 10052 ;;		_RADIO_UnhandledInterrupt
 10053 ;; This function is called by:
 10054 ;;		_LORAWAN_Mainloop
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text34
 10059  00A54C                     __ptext34:
 10060                           	opt callstack 0
 10061  00A54C                     _RADIO_DIO5:
 10062                           	opt callstack 16
 10063                           
 10064                           ;incstack = 0
 10065  00A54C  0E41               	movlw	65
 10066  00A54E  EC38  F051         	call	_RADIO_RegisterRead
 10067                           
 10068                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10069  00A552  0E01               	movlw	1
 10070  00A554  EC38  F051         	call	_RADIO_RegisterRead
 10071  00A558  0100               	movlb	0	; () banked
 10072  00A55A  6F65               	movwf	??_RADIO_DIO5& (0+255),b
 10073  00A55C  AF65               	btfss	??_RADIO_DIO5& (0+255),7,b
 10074  00A55E  0012               	return	
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10078  00A560  0E01               	movlw	1
 10079  00A562  EC0B  F04F         	call	_RADIO_UnhandledInterrupt
 10080                           
 10081                           ;radio_driver_SX1276.c: 1357: break;
 10082  00A566  0012               	return		;funcret
 10083  00A568                     __end_of_RADIO_DIO5:
 10084                           	opt callstack 0
 10085                           
 10086 ;; *************** function _RADIO_DIO4 *****************
 10087 ;; Defined at:
 10088 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;		None
 10091 ;; Auto vars:     Size  Location     Type
 10092 ;;  dioMapping      1    0        unsigned char 
 10093 ;; Return value:  Size  Location     Type
 10094 ;;                  1    wreg      void 
 10095 ;; Registers used:
 10096 ;;		wreg, status,2, status,0, cstack
 10097 ;; Tracked objects:
 10098 ;;		On entry : 0/0
 10099 ;;		On exit  : 0/0
 10100 ;;		Unchanged: 0/0
 10101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10104 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;Total ram usage:        2 bytes
 10107 ;; Hardware stack levels used:    1
 10108 ;; Hardware stack levels required when called:   11
 10109 ;; This function calls:
 10110 ;;		_RADIO_RegisterRead
 10111 ;;		_RADIO_UnhandledInterrupt
 10112 ;; This function is called by:
 10113 ;;		_LORAWAN_Mainloop
 10114 ;; This function uses a non-reentrant model
 10115 ;;
 10116                           
 10117                           	psect	text35
 10118  00A568                     __ptext35:
 10119                           	opt callstack 0
 10120  00A568                     _RADIO_DIO4:
 10121                           	opt callstack 16
 10122                           
 10123                           ;incstack = 0
 10124  00A568  0E41               	movlw	65
 10125  00A56A  EC38  F051         	call	_RADIO_RegisterRead
 10126                           
 10127                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10128  00A56E  0E01               	movlw	1
 10129  00A570  EC38  F051         	call	_RADIO_RegisterRead
 10130  00A574  0100               	movlb	0	; () banked
 10131  00A576  6F65               	movwf	??_RADIO_DIO4& (0+255),b
 10132  00A578  AF65               	btfss	??_RADIO_DIO4& (0+255),7,b
 10133  00A57A  0012               	return	
 10134                           
 10135                           ; BSR set to: 0
 10136                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10137  00A57C  0E01               	movlw	1
 10138  00A57E  EC0B  F04F         	call	_RADIO_UnhandledInterrupt
 10139                           
 10140                           ;radio_driver_SX1276.c: 1334: break;
 10141  00A582  0012               	return		;funcret
 10142  00A584                     __end_of_RADIO_DIO4:
 10143                           	opt callstack 0
 10144                           
 10145 ;; *************** function _RADIO_DIO3 *****************
 10146 ;; Defined at:
 10147 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;		None
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;  dioMapping      1    0        unsigned char 
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1    wreg      void 
 10154 ;; Registers used:
 10155 ;;		wreg, status,2, status,0, cstack
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10163 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10165 ;;Total ram usage:        2 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; Hardware stack levels required when called:   11
 10168 ;; This function calls:
 10169 ;;		_RADIO_RegisterRead
 10170 ;;		_RADIO_UnhandledInterrupt
 10171 ;; This function is called by:
 10172 ;;		_LORAWAN_Mainloop
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text36
 10177  00A584                     __ptext36:
 10178                           	opt callstack 0
 10179  00A584                     _RADIO_DIO3:
 10180                           	opt callstack 16
 10181                           
 10182                           ;incstack = 0
 10183  00A584  0E40               	movlw	64
 10184  00A586  EC38  F051         	call	_RADIO_RegisterRead
 10185                           
 10186                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10187  00A58A  0E01               	movlw	1
 10188  00A58C  EC38  F051         	call	_RADIO_RegisterRead
 10189  00A590  0100               	movlb	0	; () banked
 10190  00A592  6F65               	movwf	??_RADIO_DIO3& (0+255),b
 10191  00A594  AF65               	btfss	??_RADIO_DIO3& (0+255),7,b
 10192  00A596  0012               	return	
 10193                           
 10194                           ; BSR set to: 0
 10195                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10196  00A598  0E01               	movlw	1
 10197  00A59A  EC0B  F04F         	call	_RADIO_UnhandledInterrupt
 10198                           
 10199                           ;radio_driver_SX1276.c: 1311: break;
 10200  00A59E  0012               	return		;funcret
 10201  00A5A0                     __end_of_RADIO_DIO3:
 10202                           	opt callstack 0
 10203                           
 10204 ;; *************** function _RADIO_DIO2 *****************
 10205 ;; Defined at:
 10206 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;		None
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;  dioMapping      1   28[BANK0 ] unsigned char 
 10211 ;;  opMode          1    0        unsigned char 
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      void 
 10214 ;; Registers used:
 10215 ;;		wreg, status,2, status,0, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10222 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10224 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10225 ;;Total ram usage:        3 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:   12
 10228 ;; This function calls:
 10229 ;;		_RADIO_FHSSChangeChannel
 10230 ;;		_RADIO_RegisterRead
 10231 ;;		_RADIO_UnhandledInterrupt
 10232 ;; This function is called by:
 10233 ;;		_LORAWAN_Mainloop
 10234 ;; This function uses a non-reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text37
 10238  009578                     __ptext37:
 10239                           	opt callstack 0
 10240  009578                     _RADIO_DIO2:
 10241                           	opt callstack 15
 10242                           
 10243                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;;radio_driver_SX1276.c: 1272: uint8_t o
      +                          pMode;;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2
      +                          );
 10244                           
 10245                           ;incstack = 0
 10246  009578  0E40               	movlw	64
 10247  00957A  EC38  F051         	call	_RADIO_RegisterRead
 10248  00957E  0100               	movlb	0	; () banked
 10249  009580  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 10250  009582  90D8               	bcf	status,0,c
 10251  009584  337A               	rrcf	??_RADIO_DIO2& (0+255),f,b
 10252  009586  90D8               	bcf	status,0,c
 10253  009588  317A               	rrcf	??_RADIO_DIO2& (0+255),w,b
 10254  00958A  0B03               	andlw	3
 10255  00958C  6F7C               	movwf	RADIO_DIO2@dioMapping& (0+255),b
 10256  00958E  0E01               	movlw	1
 10257  009590  EC38  F051         	call	_RADIO_RegisterRead
 10258                           
 10259                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10260  009594  0E01               	movlw	1
 10261  009596  EC38  F051         	call	_RADIO_RegisterRead
 10262  00959A  0100               	movlb	0	; () banked
 10263  00959C  6F7A               	movwf	??_RADIO_DIO2& (0+255),b
 10264  00959E  AF7A               	btfss	??_RADIO_DIO2& (0+255),7,b
 10265  0095A0  0012               	return	
 10266  0095A2  D007               	goto	l21298
 10267  0095A4                     l21292:
 10268                           
 10269                           ; BSR set to: 0
 10270                           ;radio_driver_SX1276.c: 1283: case 0x01:;radio_driver_SX1276.c: 1284: case 0x02:;radio_d
      +                          river_SX1276.c: 1285: RADIO_FHSSChangeChannel();
 10271  0095A4  EC03  F04E         	call	_RADIO_FHSSChangeChannel	;wreg free
 10272                           
 10273                           ;radio_driver_SX1276.c: 1286: break;
 10274  0095A8  0012               	return	
 10275  0095AA                     l21294:
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10279  0095AA  0E01               	movlw	1
 10280  0095AC  EC0B  F04F         	call	_RADIO_UnhandledInterrupt
 10281                           
 10282                           ;radio_driver_SX1276.c: 1289: break;
 10283  0095B0  0012               	return	
 10284  0095B2                     l21298:
 10285                           
 10286                           ; BSR set to: 0
 10287  0095B2  517C               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
 10288                           
 10289                           ; Switch size 1, requested type "simple"
 10290                           ; Number of cases is 3, Range of values is 0 to 2
 10291                           ; switch strategies available:
 10292                           ; Name         Instructions Cycles
 10293                           ; simple_byte           10     6 (average)
 10294                           ;	Chosen strategy is simple_byte
 10295  0095B4  0A00               	xorlw	0	; case 0
 10296  0095B6  B4D8               	btfsc	status,2,c
 10297  0095B8  D7F5               	goto	l21292
 10298  0095BA  0A01               	xorlw	1	; case 1
 10299  0095BC  B4D8               	btfsc	status,2,c
 10300  0095BE  D7F2               	goto	l21292
 10301  0095C0  0A03               	xorlw	3	; case 2
 10302  0095C2  B4D8               	btfsc	status,2,c
 10303  0095C4  D7EF               	goto	l21292
 10304  0095C6  D7F1               	goto	l21294
 10305  0095C8                     __end_of_RADIO_DIO2:
 10306                           	opt callstack 0
 10307                           
 10308 ;; *************** function _RADIO_DIO1 *****************
 10309 ;; Defined at:
 10310 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;		None
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;  dioMapping      1  100[BANK0 ] unsigned char 
 10315 ;; Return value:  Size  Location     Type
 10316 ;;                  1    wreg      void 
 10317 ;; Registers used:
 10318 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
 10319 ;; Tracked objects:
 10320 ;;		On entry : 0/0
 10321 ;;		On exit  : 0/0
 10322 ;;		Unchanged: 0/0
 10323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10326 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10327 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10328 ;;Total ram usage:        2 bytes
 10329 ;; Hardware stack levels used:    1
 10330 ;; Hardware stack levels required when called:   17
 10331 ;; This function calls:
 10332 ;;		_RADIO_FHSSChangeChannel
 10333 ;;		_RADIO_RegisterRead
 10334 ;;		_RADIO_RxTimeout
 10335 ;;		_RADIO_UnhandledInterrupt
 10336 ;; This function is called by:
 10337 ;;		_LORAWAN_Mainloop
 10338 ;; This function uses a non-reentrant model
 10339 ;;
 10340                           
 10341                           	psect	text38
 10342  0096B6                     __ptext38:
 10343                           	opt callstack 0
 10344  0096B6                     _RADIO_DIO1:
 10345                           	opt callstack 10
 10346                           
 10347                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;;radio_driver_SX1276.c: 1235: dioMappin
      +                          g = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
 10348                           
 10349                           ;incstack = 0
 10350  0096B6  0E40               	movlw	64
 10351  0096B8  EC38  F051         	call	_RADIO_RegisterRead
 10352  0096BC  0100               	movlb	0	; () banked
 10353  0096BE  6FC3               	movwf	??_RADIO_DIO1& (0+255),b
 10354  0096C0  39C3               	swapf	??_RADIO_DIO1& (0+255),w,b
 10355  0096C2  0B0F               	andlw	15
 10356  0096C4  0B03               	andlw	3
 10357  0096C6  6FC4               	movwf	RADIO_DIO1@dioMapping& (0+255),b
 10358                           
 10359                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
 10360  0096C8  0E01               	movlw	1
 10361  0096CA  EC38  F051         	call	_RADIO_RegisterRead
 10362  0096CE  0100               	movlb	0	; () banked
 10363  0096D0  6FC3               	movwf	??_RADIO_DIO1& (0+255),b
 10364  0096D2  BFC3               	btfsc	??_RADIO_DIO1& (0+255),7,b
 10365  0096D4  D00B               	goto	l21282
 10366  0096D6  D012               	goto	l21286
 10367  0096D8                     l21274:
 10368                           
 10369                           ; BSR set to: 0
 10370                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
 10371  0096D8  EC83  F04F         	call	_RADIO_RxTimeout	;wreg free
 10372                           
 10373                           ;radio_driver_SX1276.c: 1244: break;
 10374  0096DC  0012               	return	
 10375  0096DE                     l21276:
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
 10379  0096DE  EC03  F04E         	call	_RADIO_FHSSChangeChannel	;wreg free
 10380                           
 10381                           ;radio_driver_SX1276.c: 1247: break;
 10382  0096E2  0012               	return	
 10383  0096E4                     l21278:
 10384                           
 10385                           ; BSR set to: 0
 10386                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10387  0096E4  0E01               	movlw	1
 10388  0096E6  EC0B  F04F         	call	_RADIO_UnhandledInterrupt
 10389                           
 10390                           ;radio_driver_SX1276.c: 1250: break;
 10391  0096EA  0012               	return	
 10392  0096EC                     l21282:
 10393                           
 10394                           ; BSR set to: 0
 10395  0096EC  51C4               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 10396                           
 10397                           ; Switch size 1, requested type "simple"
 10398                           ; Number of cases is 2, Range of values is 0 to 1
 10399                           ; switch strategies available:
 10400                           ; Name         Instructions Cycles
 10401                           ; simple_byte            7     4 (average)
 10402                           ;	Chosen strategy is simple_byte
 10403  0096EE  0A00               	xorlw	0	; case 0
 10404  0096F0  B4D8               	btfsc	status,2,c
 10405  0096F2  D7F2               	goto	l21274
 10406  0096F4  0A01               	xorlw	1	; case 1
 10407  0096F6  B4D8               	btfsc	status,2,c
 10408  0096F8  D7F2               	goto	l21276
 10409  0096FA  D7F4               	goto	l21278
 10410  0096FC                     l21286:
 10411                           
 10412                           ; BSR set to: 0
 10413  0096FC  51C4               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
 10414                           
 10415                           ; Switch size 1, requested type "simple"
 10416                           ; Number of cases is 1, Range of values is 0 to 0
 10417                           ; switch strategies available:
 10418                           ; Name         Instructions Cycles
 10419                           ; simple_byte            4     3 (average)
 10420                           ;	Chosen strategy is simple_byte
 10421  0096FE  0A00               	xorlw	0	; case 0
 10422  009700  0012               	return	
 10423  009702                     __end_of_RADIO_DIO1:
 10424                           	opt callstack 0
 10425                           
 10426 ;; *************** function _RADIO_RxTimeout *****************
 10427 ;; Defined at:
 10428 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;		None
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;		None
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  1    wreg      void 
 10435 ;; Registers used:
 10436 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10446 ;;Total ram usage:        0 bytes
 10447 ;; Hardware stack levels used:    1
 10448 ;; Hardware stack levels required when called:   16
 10449 ;; This function calls:
 10450 ;;		_LORAWAN_RxTimeout
 10451 ;;		_RADIO_RegisterWrite
 10452 ;;		_RADIO_WriteMode
 10453 ;;		_SwTimerStop
 10454 ;; This function is called by:
 10455 ;;		_RADIO_DIO1
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           	psect	text39
 10460  009F06                     __ptext39:
 10461                           	opt callstack 0
 10462  009F06                     _RADIO_RxTimeout:
 10463                           	opt callstack 10
 10464                           
 10465                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
 10466                           
 10467                           ;incstack = 0
 10468  009F06  0101               	movlb	1	; () banked
 10469  009F08  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10470  009F0A  EC18  F052         	call	_SwTimerStop
 10471                           
 10472                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
 10473  009F0E  0E80               	movlw	128
 10474  009F10  0100               	movlb	0	; () banked
 10475  009F12  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10476  009F14  0E12               	movlw	18
 10477  009F16  EC08  F052         	call	_RADIO_RegisterWrite
 10478                           
 10479                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10480  009F1A  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10481  009F1E  0E00               	movlw	0
 10482  009F20  0100               	movlb	0	; () banked
 10483  009F22  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10484  009F24  0E00               	movlw	0
 10485  009F26  ECEB  F035         	call	_RADIO_WriteMode
 10486                           
 10487                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
 10488  009F2A  0101               	movlb	1	; () banked
 10489  009F2C  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 10490                           
 10491                           ; BSR set to: 1
 10492                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
 10493  009F2E  ECD7  F018         	call	_LORAWAN_RxTimeout	;wreg free
 10494  009F32  0012               	return		;funcret
 10495  009F34                     __end_of_RADIO_RxTimeout:
 10496                           	opt callstack 0
 10497                           
 10498 ;; *************** function _RADIO_FHSSChangeChannel *****************
 10499 ;; Defined at:
 10500 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;		None
 10503 ;; Auto vars:     Size  Location     Type
 10504 ;;  irqFlags        1    0        unsigned char 
 10505 ;; Return value:  Size  Location     Type
 10506 ;;                  1    wreg      void 
 10507 ;; Registers used:
 10508 ;;		wreg, status,2, status,0, cstack
 10509 ;; Tracked objects:
 10510 ;;		On entry : 0/0
 10511 ;;		On exit  : 0/0
 10512 ;;		Unchanged: 0/0
 10513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10517 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10518 ;;Total ram usage:        1 bytes
 10519 ;; Hardware stack levels used:    1
 10520 ;; Hardware stack levels required when called:   11
 10521 ;; This function calls:
 10522 ;;		_RADIO_RegisterRead
 10523 ;;		_RADIO_RegisterWrite
 10524 ;;		_RADIO_WriteFrequency
 10525 ;; This function is called by:
 10526 ;;		_RADIO_DIO1
 10527 ;;		_RADIO_DIO2
 10528 ;; This function uses a non-reentrant model
 10529 ;;
 10530                           
 10531                           	psect	text40
 10532  009C06                     __ptext40:
 10533                           	opt callstack 0
 10534  009C06                     _RADIO_FHSSChangeChannel:
 10535                           	opt callstack 15
 10536                           
 10537                           ;incstack = 0
 10538  009C06  0E12               	movlw	18
 10539  009C08  EC38  F051         	call	_RADIO_RegisterRead
 10540                           
 10541                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
 10542  009C0C  0101               	movlb	1	; () banked
 10543  009C0E  5147               	movf	(_RadioConfiguration+30)& (0+255),w,b
 10544  009C10  1148               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 10545  009C12  B4D8               	btfsc	status,2,c
 10546  009C14  D00F               	goto	l610
 10547                           
 10548                           ; BSR set to: 1
 10549                           ;radio_driver_SX1276.c: 1164: {;radio_driver_SX1276.c: 1165: if ((0) != RadioConfigurati
      +                          on.fhssNextFrequency)
 10550  009C16  5158               	movf	(_RadioConfiguration+47)& (0+255),w,b
 10551  009C18  1159               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
 10552  009C1A  B4D8               	btfsc	status,2,c
 10553  009C1C  D00B               	goto	l610
 10554                           
 10555                           ; BSR set to: 1
 10556                           ;radio_driver_SX1276.c: 1166: {;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioC
      +                          onfiguration.fhssNextFrequency());
 10557  009C1E  0E00               	movlw	0
 10558  009C20  0100               	movlb	0	; () banked
 10559  009C22  6F6D               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
 10560  009C24  0E00               	movlw	0
 10561  009C26  6F6E               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
 10562  009C28  0E00               	movlw	0
 10563  009C2A  6F6F               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
 10564  009C2C  0E00               	movlw	0
 10565  009C2E  6F70               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
 10566  009C30  EC5A  F038         	call	_RADIO_WriteFrequency	;wreg free
 10567  009C34                     l610:
 10568                           
 10569                           ;radio_driver_SX1276.c: 1168: };radio_driver_SX1276.c: 1169: };radio_driver_SX1276.c: 11
      +                          72: RADIO_RegisterWrite(0x12, 1<<(1));
 10570  009C34  0E02               	movlw	2
 10571  009C36  0100               	movlb	0	; () banked
 10572  009C38  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10573  009C3A  0E12               	movlw	18
 10574  009C3C  EC08  F052         	call	_RADIO_RegisterWrite
 10575  009C40  0012               	return		;funcret
 10576  009C42                     __end_of_RADIO_FHSSChangeChannel:
 10577                           	opt callstack 0
 10578                           
 10579 ;; *************** function _RADIO_DIO0 *****************
 10580 ;; Defined at:
 10581 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10582 ;; Parameters:    Size  Location     Type
 10583 ;;		None
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;  opMode          1  153[BANK0 ] unsigned char 
 10586 ;;  dioMapping      1  152[BANK0 ] unsigned char 
 10587 ;; Return value:  Size  Location     Type
 10588 ;;                  1    wreg      void 
 10589 ;; Registers used:
 10590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10591 ;; Tracked objects:
 10592 ;;		On entry : 0/0
 10593 ;;		On exit  : 0/0
 10594 ;;		Unchanged: 0/0
 10595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10597 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10598 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10599 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10600 ;;Total ram usage:        4 bytes
 10601 ;; Hardware stack levels used:    1
 10602 ;; Hardware stack levels required when called:   17
 10603 ;; This function calls:
 10604 ;;		_RADIO_FSKPacketSent
 10605 ;;		_RADIO_FSKPayloadReady
 10606 ;;		_RADIO_RegisterRead
 10607 ;;		_RADIO_RxDone
 10608 ;;		_RADIO_TxDone
 10609 ;;		_RADIO_UnhandledInterrupt
 10610 ;; This function is called by:
 10611 ;;		_LORAWAN_Mainloop
 10612 ;; This function uses a non-reentrant model
 10613 ;;
 10614                           
 10615                           	psect	text41
 10616  008286                     __ptext41:
 10617                           	opt callstack 0
 10618  008286                     _RADIO_DIO0:
 10619                           	opt callstack 10
 10620                           
 10621                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;;radio_driver_SX1276.c: 1180: uint8_t o
      +                          pMode;;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6
      +                          );
 10622                           
 10623                           ;incstack = 0
 10624  008286  0E40               	movlw	64
 10625  008288  EC38  F051         	call	_RADIO_RegisterRead
 10626  00828C  0100               	movlb	0	; () banked
 10627  00828E  6FF6               	movwf	??_RADIO_DIO0& (0+255),b
 10628  008290  0E06               	movlw	6
 10629  008292  6FF7               	movwf	(??_RADIO_DIO0+1)& (0+255),b
 10630  008294                     u24155:
 10631  008294  90D8               	bcf	status,0,c
 10632  008296  33F6               	rrcf	??_RADIO_DIO0& (0+255),f,b
 10633  008298  2FF7               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
 10634  00829A  D7FC               	goto	u24155
 10635  00829C  51F6               	movf	??_RADIO_DIO0& (0+255),w,b
 10636  00829E  0B03               	andlw	3
 10637  0082A0  6FF8               	movwf	RADIO_DIO0@dioMapping& (0+255),b
 10638                           
 10639                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
 10640  0082A2  0E01               	movlw	1
 10641  0082A4  EC38  F051         	call	_RADIO_RegisterRead
 10642  0082A8  0100               	movlb	0	; () banked
 10643  0082AA  6FF9               	movwf	RADIO_DIO0@opMode& (0+255),b
 10644                           
 10645                           ; BSR set to: 0
 10646                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
 10647  0082AC  BFF9               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
 10648  0082AE  D00B               	goto	l21252
 10649  0082B0  D02A               	goto	l21268
 10650  0082B2                     l21244:
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
 10654  0082B2  ECBD  F039         	call	_RADIO_RxDone	;wreg free
 10655                           
 10656                           ;radio_driver_SX1276.c: 1191: break;
 10657  0082B6  0012               	return	
 10658  0082B8                     l21246:
 10659                           
 10660                           ; BSR set to: 0
 10661                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
 10662  0082B8  EC6B  F033         	call	_RADIO_TxDone	;wreg free
 10663                           
 10664                           ;radio_driver_SX1276.c: 1194: break;
 10665  0082BC  0012               	return	
 10666  0082BE                     l21248:
 10667                           
 10668                           ; BSR set to: 0
 10669                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
 10670  0082BE  0E01               	movlw	1
 10671  0082C0  EC0B  F04F         	call	_RADIO_UnhandledInterrupt
 10672                           
 10673                           ;radio_driver_SX1276.c: 1197: break;
 10674  0082C4  0012               	return	
 10675  0082C6                     l21252:
 10676                           
 10677                           ; BSR set to: 0
 10678  0082C6  51F8               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 10679                           
 10680                           ; Switch size 1, requested type "simple"
 10681                           ; Number of cases is 2, Range of values is 0 to 1
 10682                           ; switch strategies available:
 10683                           ; Name         Instructions Cycles
 10684                           ; simple_byte            7     4 (average)
 10685                           ;	Chosen strategy is simple_byte
 10686  0082C8  0A00               	xorlw	0	; case 0
 10687  0082CA  B4D8               	btfsc	status,2,c
 10688  0082CC  D7F2               	goto	l21244
 10689  0082CE  0A01               	xorlw	1	; case 1
 10690  0082D0  B4D8               	btfsc	status,2,c
 10691  0082D2  D7F2               	goto	l21246
 10692  0082D4  D7F4               	goto	l21248
 10693  0082D6                     l21254:
 10694                           
 10695                           ; BSR set to: 0
 10696                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
 10697  0082D6  0E07               	movlw	7
 10698  0082D8  17F9               	andwf	RADIO_DIO0@opMode& (0+255),f,b
 10699                           
 10700                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
 10701  0082DA  0E03               	movlw	3
 10702  0082DC  19F9               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 10703  0082DE  A4D8               	btfss	status,2,c
 10704  0082E0  D003               	goto	l21258
 10705                           
 10706                           ; BSR set to: 0
 10707                           ;radio_driver_SX1276.c: 1209: {;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
 10708  0082E2  ECE5  F032         	call	_RADIO_FSKPacketSent	;wreg free
 10709                           
 10710                           ;radio_driver_SX1276.c: 1212: }
 10711  0082E6  0012               	return	
 10712  0082E8                     l21258:
 10713                           
 10714                           ; BSR set to: 0
 10715                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
 10716  0082E8  0E05               	movlw	5
 10717  0082EA  19F9               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
 10718  0082EC  A4D8               	btfss	status,2,c
 10719  0082EE  D003               	goto	l21262
 10720                           
 10721                           ; BSR set to: 0
 10722                           ;radio_driver_SX1276.c: 1214: {;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
 10723  0082F0  ECD4  F03E         	call	_RADIO_FSKPayloadReady	;wreg free
 10724                           
 10725                           ;radio_driver_SX1276.c: 1217: }
 10726  0082F4  0012               	return	
 10727  0082F6                     l21262:
 10728                           
 10729                           ; BSR set to: 0
 10730                           ;radio_driver_SX1276.c: 1218: else;radio_driver_SX1276.c: 1219: {;radio_driver_SX1276.c:
      +                           1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
 10731  0082F6  0E00               	movlw	0
 10732  0082F8  EC0B  F04F         	call	_RADIO_UnhandledInterrupt
 10733  0082FC  0012               	return	
 10734  0082FE                     l21264:
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
 10738  0082FE  0E00               	movlw	0
 10739  008300  EC0B  F04F         	call	_RADIO_UnhandledInterrupt
 10740                           
 10741                           ;radio_driver_SX1276.c: 1225: break;
 10742  008304  0012               	return	
 10743  008306                     l21268:
 10744                           
 10745                           ; BSR set to: 0
 10746  008306  51F8               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
 10747                           
 10748                           ; Switch size 1, requested type "simple"
 10749                           ; Number of cases is 1, Range of values is 0 to 0
 10750                           ; switch strategies available:
 10751                           ; Name         Instructions Cycles
 10752                           ; simple_byte            4     3 (average)
 10753                           ;	Chosen strategy is simple_byte
 10754  008308  0A00               	xorlw	0	; case 0
 10755  00830A  B4D8               	btfsc	status,2,c
 10756  00830C  D7E4               	goto	l21254
 10757  00830E  D7F7               	goto	l21264
 10758  008310                     __end_of_RADIO_DIO0:
 10759                           	opt callstack 0
 10760                           
 10761 ;; *************** function _RADIO_UnhandledInterrupt *****************
 10762 ;; Defined at:
 10763 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10764 ;; Parameters:    Size  Location     Type
 10765 ;;  modulation      1    wreg     enum E5853
 10766 ;; Auto vars:     Size  Location     Type
 10767 ;;  modulation      1    4[BANK0 ] enum E5853
 10768 ;; Return value:  Size  Location     Type
 10769 ;;                  1    wreg      void 
 10770 ;; Registers used:
 10771 ;;		wreg, status,2, status,0, cstack
 10772 ;; Tracked objects:
 10773 ;;		On entry : 0/0
 10774 ;;		On exit  : 0/0
 10775 ;;		Unchanged: 0/0
 10776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10780 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10781 ;;Total ram usage:        1 bytes
 10782 ;; Hardware stack levels used:    1
 10783 ;; Hardware stack levels required when called:   10
 10784 ;; This function calls:
 10785 ;;		_RADIO_RegisterWrite
 10786 ;; This function is called by:
 10787 ;;		_RADIO_DIO0
 10788 ;;		_RADIO_DIO1
 10789 ;;		_RADIO_DIO2
 10790 ;;		_RADIO_DIO3
 10791 ;;		_RADIO_DIO4
 10792 ;;		_RADIO_DIO5
 10793 ;; This function uses a non-reentrant model
 10794 ;;
 10795                           
 10796                           	psect	text42
 10797  009E16                     __ptext42:
 10798                           	opt callstack 0
 10799  009E16                     _RADIO_UnhandledInterrupt:
 10800                           	opt callstack 16
 10801                           
 10802                           ;incstack = 0
 10803                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
 10804  009E16  0100               	movlb	0	; () banked
 10805  009E18  6F64               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
 10806                           
 10807                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
 10808  009E1A  0100               	movlb	0	; () banked
 10809  009E1C  0564               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
 10810  009E1E  A4D8               	btfss	status,2,c
 10811  009E20  D006               	goto	l20996
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;radio_driver_SX1276.c: 1145: {;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0
      +                          xFF);
 10815  009E22  0EFF               	movlw	255
 10816  009E24  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10817  009E26  0E12               	movlw	18
 10818  009E28  EC08  F052         	call	_RADIO_RegisterWrite
 10819                           
 10820                           ;radio_driver_SX1276.c: 1147: }
 10821  009E2C  0012               	return	
 10822  009E2E                     l20996:
 10823                           
 10824                           ; BSR set to: 0
 10825                           ;radio_driver_SX1276.c: 1148: else;radio_driver_SX1276.c: 1149: {;radio_driver_SX1276.c:
      +                           1152: RADIO_RegisterWrite(0x3E, 0xFF);
 10826  009E2E  0EFF               	movlw	255
 10827  009E30  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10828  009E32  0E3E               	movlw	62
 10829  009E34  EC08  F052         	call	_RADIO_RegisterWrite
 10830                           
 10831                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
 10832  009E38  0EFF               	movlw	255
 10833  009E3A  0100               	movlb	0	; () banked
 10834  009E3C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10835  009E3E  0E3F               	movlw	63
 10836  009E40  EC08  F052         	call	_RADIO_RegisterWrite
 10837  009E44  0012               	return		;funcret
 10838  009E46                     __end_of_RADIO_UnhandledInterrupt:
 10839                           	opt callstack 0
 10840                           
 10841 ;; *************** function _RADIO_TxDone *****************
 10842 ;; Defined at:
 10843 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;		None
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;  timeOnAir       4  119[BANK0 ] unsigned long 
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      void 
 10850 ;; Registers used:
 10851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10858 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10860 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10861 ;;Total ram usage:        8 bytes
 10862 ;; Hardware stack levels used:    1
 10863 ;; Hardware stack levels required when called:   15
 10864 ;; This function calls:
 10865 ;;		_LORAWAN_TxDone
 10866 ;;		_RADIO_RegisterWrite
 10867 ;;		_RADIO_WriteMode
 10868 ;;		_SwTimerReadValue
 10869 ;;		_SwTimerStop
 10870 ;;		___lmul
 10871 ;; This function is called by:
 10872 ;;		_RADIO_DIO0
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text43
 10877  0066D6                     __ptext43:
 10878                           	opt callstack 0
 10879  0066D6                     _RADIO_TxDone:
 10880                           	opt callstack 11
 10881                           
 10882                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;;radio_driver_SX1276.c: 1082: SwTimerSt
      +                          op(RadioConfiguration.watchdogTimerId);
 10883                           
 10884                           ;incstack = 0
 10885  0066D6  0101               	movlb	1	; () banked
 10886  0066D8  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10887  0066DA  EC18  F052         	call	_SwTimerStop
 10888                           
 10889                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
 10890  0066DE  0E08               	movlw	8
 10891  0066E0  0100               	movlb	0	; () banked
 10892  0066E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 10893  0066E4  0E12               	movlw	18
 10894  0066E6  EC08  F052         	call	_RADIO_RegisterWrite
 10895                           
 10896                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10897  0066EA  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10898  0066EE  0E00               	movlw	0
 10899  0066F0  0100               	movlb	0	; () banked
 10900  0066F2  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10901  0066F4  0E00               	movlw	0
 10902  0066F6  ECEB  F035         	call	_RADIO_WriteMode
 10903                           
 10904                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
 10905  0066FA  0101               	movlb	1	; () banked
 10906  0066FC  914C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 10907                           
 10908                           ; BSR set to: 1
 10909                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 10910  0066FE  B94C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 10911  006700  0012               	return	
 10912                           
 10913                           ; BSR set to: 1
 10914                           ;radio_driver_SX1276.c: 1087: {;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)2000
      +                          0) - ((SwTimerReadValue(RadioConfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint
      +                          32_t)(SwTimerReadValue(RadioConfiguration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((
      +                          uint32_t)(SwTimerReadValue(RadioConfiguration.t
 10915  006702  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 10916  006704  EC47  F04D         	call	_SwTimerReadValue
 10917  006708  0100               	movlb	0	; () banked
 10918  00670A  518C               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 10919  00670C  E108               	bnz	u23550
 10920  00670E  0E1F               	movlw	31
 10921  006710  5D89               	subwf	?_SwTimerReadValue& (0+255),w,b
 10922  006712  0EAC               	movlw	172
 10923  006714  598A               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 10924  006716  0EDF               	movlw	223
 10925  006718  598B               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 10926  00671A  A0D8               	btfss	status,0,c
 10927  00671C  D021               	goto	l20962
 10928  00671E                     u23550:
 10929                           
 10930                           ; BSR set to: 0
 10931  00671E  0101               	movlb	1	; () banked
 10932  006720  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 10933  006722  EC47  F04D         	call	_SwTimerReadValue
 10934  006726  0E0D               	movlw	13
 10935  006728  D006               	goto	u23560
 10936  00672A                     u23565:
 10937  00672A  0100               	movlb	0	; () banked
 10938  00672C  90D8               	bcf	status,0,c
 10939  00672E  338C               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 10940  006730  338B               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 10941  006732  338A               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 10942  006734  3389               	rrcf	?_SwTimerReadValue& (0+255),f,b
 10943  006736                     u23560:
 10944  006736  2EE8               	decfsz	wreg,f,c
 10945  006738  D7F8               	goto	u23565
 10946  00673A  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 10947  00673E  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 10948  006742  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 10949  006746  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 10950  00674A  0E7D               	movlw	125
 10951  00674C  6F96               	movwf	___lmul@multiplicand& (0+255),b
 10952  00674E  0E00               	movlw	0
 10953  006750  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10954  006752  0E00               	movlw	0
 10955  006754  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10956  006756  0E00               	movlw	0
 10957  006758  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10958  00675A  EC19  F049         	call	___lmul	;wreg free
 10959  00675E  D021               	goto	L12
 10960  006760                     l20962:
 10961                           
 10962                           ; BSR set to: 0
 10963  006760  0101               	movlb	1	; () banked
 10964  006762  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 10965  006764  EC47  F04D         	call	_SwTimerReadValue
 10966  006768  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 10967  00676C  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 10968  006770  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 10969  006774  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 10970  006778  0E7D               	movlw	125
 10971  00677A  0100               	movlb	0	; () banked
 10972  00677C  6F96               	movwf	___lmul@multiplicand& (0+255),b
 10973  00677E  0E00               	movlw	0
 10974  006780  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 10975  006782  0E00               	movlw	0
 10976  006784  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 10977  006786  0E00               	movlw	0
 10978  006788  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 10979  00678A  EC19  F049         	call	___lmul	;wreg free
 10980  00678E  0E0D               	movlw	13
 10981  006790  D006               	goto	u23570
 10982  006792                     u23575:
 10983  006792  0100               	movlb	0	; () banked
 10984  006794  90D8               	bcf	status,0,c
 10985  006796  3395               	rrcf	(?___lmul+3)& (0+255),f,b
 10986  006798  3394               	rrcf	(?___lmul+2)& (0+255),f,b
 10987  00679A  3393               	rrcf	(?___lmul+1)& (0+255),f,b
 10988  00679C  3392               	rrcf	?___lmul& (0+255),f,b
 10989  00679E                     u23570:
 10990  00679E  2EE8               	decfsz	wreg,f,c
 10991  0067A0  D7F8               	goto	u23575
 10992  0067A2                     L12:
 10993  0067A2  C092  F0DB         	movff	?___lmul,_RADIO_TxDone$796
 10994  0067A6  C093  F0DC         	movff	?___lmul+1,_RADIO_TxDone$796+1
 10995  0067AA  C094  F0DD         	movff	?___lmul+2,_RADIO_TxDone$796+2
 10996  0067AE  C095  F0DE         	movff	?___lmul+3,_RADIO_TxDone$796+3
 10997  0067B2  0100               	movlb	0	; () banked
 10998  0067B4  51DB               	movf	_RADIO_TxDone$796& (0+255),w,b
 10999  0067B6  0820               	sublw	32
 11000  0067B8  6FD7               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
 11001  0067BA  0E4E               	movlw	78
 11002  0067BC  55DC               	subfwb	(_RADIO_TxDone$796+1)& (0+255),w,b
 11003  0067BE  6FD8               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
 11004  0067C0  0E00               	movlw	0
 11005  0067C2  55DD               	subfwb	(_RADIO_TxDone$796+2)& (0+255),w,b
 11006  0067C4  6FD9               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
 11007  0067C6  0E00               	movlw	0
 11008  0067C8  55DE               	subfwb	(_RADIO_TxDone$796+3)& (0+255),w,b
 11009  0067CA  6FDA               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
 11010                           
 11011                           ; BSR set to: 0
 11012                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
 11013  0067CC  C0D7  F0B3         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
 11014  0067D0  C0D8  F0B4         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 11015  0067D4  ECEC  F005         	call	_LORAWAN_TxDone	;wreg free
 11016  0067D8  0012               	return		;funcret
 11017  0067DA                     __end_of_RADIO_TxDone:
 11018                           	opt callstack 0
 11019                           
 11020 ;; *************** function _RADIO_RxDone *****************
 11021 ;; Defined at:
 11022 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 11023 ;; Parameters:    Size  Location     Type
 11024 ;;		None
 11025 ;; Auto vars:     Size  Location     Type
 11026 ;;  i               1  149[BANK0 ] unsigned char 
 11027 ;;  irqFlags        1  148[BANK0 ] unsigned char 
 11028 ;; Return value:  Size  Location     Type
 11029 ;;                  1    wreg      void 
 11030 ;; Registers used:
 11031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11032 ;; Tracked objects:
 11033 ;;		On entry : 0/0
 11034 ;;		On exit  : 0/0
 11035 ;;		Unchanged: 0/0
 11036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11038 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11040 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11041 ;;Total ram usage:        2 bytes
 11042 ;; Hardware stack levels used:    1
 11043 ;; Hardware stack levels required when called:   16
 11044 ;; This function calls:
 11045 ;;		_HALSPICSAssert
 11046 ;;		_HALSPICSDeassert
 11047 ;;		_HALSPISend
 11048 ;;		_LORAWAN_RxDone
 11049 ;;		_RADIO_RegisterRead
 11050 ;;		_RADIO_RegisterWrite
 11051 ;;		_RADIO_WriteMode
 11052 ;;		_SwTimerStop
 11053 ;;		___abdiv
 11054 ;; This function is called by:
 11055 ;;		_RADIO_DIO0
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           	psect	text44
 11060  00737A                     __ptext44:
 11061                           	opt callstack 0
 11062  00737A                     _RADIO_RxDone:
 11063                           	opt callstack 10
 11064                           
 11065                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;;radio_driver_SX1276.c: 964: irqFlags =
      +                           RADIO_RegisterRead(0x12);
 11066                           
 11067                           ;incstack = 0
 11068  00737A  0E12               	movlw	18
 11069  00737C  EC38  F051         	call	_RADIO_RegisterRead
 11070  007380  0100               	movlb	0	; () banked
 11071  007382  6FF4               	movwf	RADIO_RxDone@irqFlags& (0+255),b
 11072                           
 11073                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
 11074  007384  0E70               	movlw	112
 11075  007386  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11076  007388  0E12               	movlw	18
 11077  00738A  EC08  F052         	call	_RADIO_RegisterWrite
 11078                           
 11079                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
 11080  00738E  0100               	movlb	0	; () banked
 11081  007390  51F4               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
 11082  007392  0B50               	andlw	80
 11083  007394  0A50               	xorlw	80
 11084  007396  A4D8               	btfss	status,2,c
 11085  007398  0012               	return	
 11086                           
 11087                           ; BSR set to: 0
 11088                           ;radio_driver_SX1276.c: 969: {;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguratio
      +                          n.watchdogTimerId);
 11089  00739A  0101               	movlb	1	; () banked
 11090  00739C  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 11091  00739E  EC18  F052         	call	_SwTimerStop
 11092                           
 11093                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
 11094  0073A2  0E1C               	movlw	28
 11095  0073A4  EC38  F051         	call	_RADIO_RegisterRead
 11096  0073A8  0100               	movlb	0	; () banked
 11097  0073AA  6FF5               	movwf	RADIO_RxDone@i& (0+255),b
 11098                           
 11099                           ; BSR set to: 0
 11100                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
 11101  0073AC  0101               	movlb	1	; () banked
 11102  0073AE  5145               	movf	(_RadioConfiguration+28)& (0+255),w,b
 11103  0073B0  B4D8               	btfsc	status,2,c
 11104  0073B2  D004               	goto	u23470
 11105                           
 11106                           ; BSR set to: 1
 11107  0073B4  0100               	movlb	0	; () banked
 11108  0073B6  ABF4               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
 11109                           
 11110                           ; BSR set to: 0
 11111  0073B8  ADF5               	btfss	RADIO_RxDone@i& (0+255),6,b
 11112  0073BA  D03C               	goto	l20886
 11113  0073BC                     u23470:
 11114                           
 11115                           ;radio_driver_SX1276.c: 976: {;radio_driver_SX1276.c: 984: RadioConfiguration.dataBuffer
      +                          Len = RADIO_RegisterRead(0x13);
 11116  0073BC  0E13               	movlw	19
 11117  0073BE  EC38  F051         	call	_RADIO_RegisterRead
 11118  0073C2  0101               	movlb	1	; () banked
 11119  0073C4  6F4D               	movwf	(_RadioConfiguration+36)& (0+255),b
 11120                           
 11121                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
 11122  0073C6  0E00               	movlw	0
 11123  0073C8  0100               	movlb	0	; () banked
 11124  0073CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 11125  0073CC  0E0D               	movlw	13
 11126  0073CE  EC08  F052         	call	_RADIO_RegisterWrite
 11127                           
 11128                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
 11129  0073D2  ECA3  F054         	call	_HALSPICSAssert	;wreg free
 11130                           
 11131                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
 11132  0073D6  0E00               	movlw	0
 11133  0073D8  ECF6  F053         	call	_HALSPISend
 11134                           
 11135                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 11136  0073DC  0E00               	movlw	0
 11137  0073DE  0100               	movlb	0	; () banked
 11138  0073E0  6FF5               	movwf	RADIO_RxDone@i& (0+255),b
 11139  0073E2  D00F               	goto	l20876
 11140  0073E4                     l20872:
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;radio_driver_SX1276.c: 990: {;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer
      +                          [i] = HALSPISend(0xFF);
 11144  0073E4  51F5               	movf	RADIO_RxDone@i& (0+255),w,b
 11145  0073E6  0101               	movlb	1	; () banked
 11146  0073E8  254E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 11147  0073EA  6ED9               	movwf	fsr2l,c
 11148  0073EC  0100               	movlb	0	; () banked
 11149  0073EE  0E00               	movlw	0
 11150  0073F0  0101               	movlb	1	; () banked
 11151  0073F2  214F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 11152  0073F4  6EDA               	movwf	fsr2h,c
 11153  0073F6  0EFF               	movlw	255
 11154  0073F8  ECF6  F053         	call	_HALSPISend
 11155  0073FC  6EDF               	movwf	indf2,c
 11156  0073FE  0100               	movlb	0	; () banked
 11157  007400  2BF5               	incf	RADIO_RxDone@i& (0+255),f,b
 11158  007402                     l20876:
 11159                           
 11160                           ; BSR set to: 0
 11161  007402  0101               	movlb	1	; () banked
 11162  007404  514D               	movf	(_RadioConfiguration+36)& (0+255),w,b
 11163  007406  0100               	movlb	0	; () banked
 11164  007408  5DF5               	subwf	RADIO_RxDone@i& (0+255),w,b
 11165  00740A  A0D8               	btfss	status,0,c
 11166  00740C  D7EB               	goto	l20872
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;radio_driver_SX1276.c: 992: };radio_driver_SX1276.c: 993: HALSPICSDeassert();
 11170  00740E  ECA1  F054         	call	_HALSPICSDeassert	;wreg free
 11171                           
 11172                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
 11173  007412  0101               	movlb	1	; () banked
 11174  007414  854C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 11175                           
 11176                           ; BSR set to: 1
 11177                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
 11178  007416  0E19               	movlw	25
 11179  007418  EC38  F051         	call	_RADIO_RegisterRead
 11180  00741C  0101               	movlb	1	; () banked
 11181  00741E  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 11182                           
 11183                           ; BSR set to: 1
 11184                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
 11185  007420  0E04               	movlw	4
 11186  007422  0100               	movlb	0	; () banked
 11187  007424  6F60               	movwf	___abdiv@divisor& (0+255),b
 11188  007426  0101               	movlb	1	; () banked
 11189  007428  515B               	movf	(_RadioConfiguration+50)& (0+255),w,b
 11190  00742A  EC69  F047         	call	___abdiv
 11191  00742E  0101               	movlb	1	; () banked
 11192  007430  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 11193                           
 11194                           ;radio_driver_SX1276.c: 998: }
 11195  007432  D002               	goto	l20888
 11196  007434                     l20886:
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;radio_driver_SX1276.c: 999: else;radio_driver_SX1276.c: 1000: {;radio_driver_SX1276.c: 
      +                          1002: RadioConfiguration.flags |= (1 << (3));
 11200  007434  0101               	movlb	1	; () banked
 11201  007436  874C               	bsf	(_RadioConfiguration+35)& (0+255),3,b
 11202  007438                     l20888:
 11203                           
 11204                           ; BSR set to: 1
 11205                           ;radio_driver_SX1276.c: 1003: };radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
 11206  007438  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 11207  00743C  0E00               	movlw	0
 11208  00743E  0100               	movlb	0	; () banked
 11209  007440  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11210  007442  0E00               	movlw	0
 11211  007444  ECEB  F035         	call	_RADIO_WriteMode
 11212                           
 11213                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
 11214  007448  0101               	movlb	1	; () banked
 11215  00744A  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 11216                           
 11217                           ; BSR set to: 1
 11218                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 11219  00744C  C14E  F1DA         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 11220  007450  C14F  F1DB         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 11221  007454  C14D  F1DC         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 11222  007458  EC56  F000         	call	_LORAWAN_RxDone	;wreg free
 11223  00745C  0012               	return		;funcret
 11224  00745E                     __end_of_RADIO_RxDone:
 11225                           	opt callstack 0
 11226                           
 11227 ;; *************** function ___abdiv *****************
 11228 ;; Defined at:
 11229 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\abdiv.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  dividend        1    wreg     char 
 11232 ;;  divisor         1    0[BANK0 ] char 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;  dividend        1    6[BANK0 ] char 
 11235 ;;  quotient        1    5[BANK0 ] char 
 11236 ;;  sign            1    4[BANK0 ] unsigned char 
 11237 ;;  counter         1    3[BANK0 ] unsigned char 
 11238 ;; Return value:  Size  Location     Type
 11239 ;;                  1    wreg      char 
 11240 ;; Registers used:
 11241 ;;		wreg, status,2, status,0
 11242 ;; Tracked objects:
 11243 ;;		On entry : 0/0
 11244 ;;		On exit  : 0/0
 11245 ;;		Unchanged: 0/0
 11246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11247 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11248 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11249 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11250 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11251 ;;Total ram usage:        7 bytes
 11252 ;; Hardware stack levels used:    1
 11253 ;; Hardware stack levels required when called:    7
 11254 ;; This function calls:
 11255 ;;		Nothing
 11256 ;; This function is called by:
 11257 ;;		_RADIO_RxDone
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           	psect	text45
 11262  008ED2                     __ptext45:
 11263                           	opt callstack 0
 11264  008ED2                     ___abdiv:
 11265                           	opt callstack 18
 11266                           
 11267                           ;incstack = 0
 11268                           ;___abdiv@dividend stored from wreg
 11269  008ED2  0100               	movlb	0	; () banked
 11270  008ED4  6F66               	movwf	___abdiv@dividend& (0+255),b
 11271  008ED6  0E00               	movlw	0
 11272  008ED8  0100               	movlb	0	; () banked
 11273  008EDA  6F64               	movwf	___abdiv@sign& (0+255),b
 11274                           
 11275                           ; BSR set to: 0
 11276  008EDC  AF60               	btfss	___abdiv@divisor& (0+255),7,b
 11277  008EDE  D003               	goto	l20814
 11278                           
 11279                           ; BSR set to: 0
 11280  008EE0  6D60               	negf	___abdiv@divisor& (0+255),b
 11281                           
 11282                           ; BSR set to: 0
 11283  008EE2  0E01               	movlw	1
 11284  008EE4  6F64               	movwf	___abdiv@sign& (0+255),b
 11285  008EE6                     l20814:
 11286                           
 11287                           ; BSR set to: 0
 11288  008EE6  AF66               	btfss	___abdiv@dividend& (0+255),7,b
 11289  008EE8  D003               	goto	l20820
 11290                           
 11291                           ; BSR set to: 0
 11292  008EEA  6D66               	negf	___abdiv@dividend& (0+255),b
 11293                           
 11294                           ; BSR set to: 0
 11295  008EEC  0E01               	movlw	1
 11296  008EEE  1B64               	xorwf	___abdiv@sign& (0+255),f,b
 11297  008EF0                     l20820:
 11298                           
 11299                           ; BSR set to: 0
 11300  008EF0  0E00               	movlw	0
 11301  008EF2  6F65               	movwf	___abdiv@quotient& (0+255),b
 11302                           
 11303                           ; BSR set to: 0
 11304  008EF4  5160               	movf	___abdiv@divisor& (0+255),w,b
 11305  008EF6  B4D8               	btfsc	status,2,c
 11306  008EF8  D01A               	goto	l20842
 11307                           
 11308                           ; BSR set to: 0
 11309  008EFA  0E01               	movlw	1
 11310  008EFC  6F63               	movwf	___abdiv@counter& (0+255),b
 11311  008EFE  D003               	goto	l20830
 11312  008F00                     l20826:
 11313                           
 11314                           ; BSR set to: 0
 11315  008F00  90D8               	bcf	status,0,c
 11316  008F02  3760               	rlcf	___abdiv@divisor& (0+255),f,b
 11317                           
 11318                           ; BSR set to: 0
 11319  008F04  2B63               	incf	___abdiv@counter& (0+255),f,b
 11320  008F06                     l20830:
 11321                           
 11322                           ; BSR set to: 0
 11323  008F06  C060  F061         	movff	___abdiv@divisor,??___abdiv
 11324  008F0A  6B62               	clrf	(??___abdiv+1)& (0+255),b
 11325  008F0C  BF61               	btfsc	??___abdiv& (0+255),7,b
 11326  008F0E  0762               	decf	(??___abdiv+1)& (0+255),f,b
 11327  008F10  AF61               	btfss	??___abdiv& (0+255),7,b
 11328  008F12  D7F6               	goto	l20826
 11329  008F14                     u23410:
 11330                           
 11331                           ; BSR set to: 0
 11332  008F14  90D8               	bcf	status,0,c
 11333  008F16  3765               	rlcf	___abdiv@quotient& (0+255),f,b
 11334  008F18  5160               	movf	___abdiv@divisor& (0+255),w,b
 11335  008F1A  5D66               	subwf	___abdiv@dividend& (0+255),w,b
 11336  008F1C  A0D8               	btfss	status,0,c
 11337  008F1E  D003               	goto	l20838
 11338                           
 11339                           ; BSR set to: 0
 11340  008F20  5160               	movf	___abdiv@divisor& (0+255),w,b
 11341  008F22  5F66               	subwf	___abdiv@dividend& (0+255),f,b
 11342                           
 11343                           ; BSR set to: 0
 11344  008F24  8165               	bsf	___abdiv@quotient& (0+255),0,b
 11345  008F26                     l20838:
 11346                           
 11347                           ; BSR set to: 0
 11348  008F26  90D8               	bcf	status,0,c
 11349  008F28  3360               	rrcf	___abdiv@divisor& (0+255),f,b
 11350                           
 11351                           ; BSR set to: 0
 11352  008F2A  2F63               	decfsz	___abdiv@counter& (0+255),f,b
 11353  008F2C  D7F3               	goto	u23410
 11354  008F2E                     l20842:
 11355                           
 11356                           ; BSR set to: 0
 11357  008F2E  5164               	movf	___abdiv@sign& (0+255),w,b
 11358  008F30  A4D8               	btfss	status,2,c
 11359                           
 11360                           ; BSR set to: 0
 11361  008F32  6D65               	negf	___abdiv@quotient& (0+255),b
 11362                           
 11363                           ; BSR set to: 0
 11364  008F34  5165               	movf	___abdiv@quotient& (0+255),w,b
 11365                           
 11366                           ; BSR set to: 0
 11367  008F36  0012               	return		;funcret
 11368  008F38                     __end_of___abdiv:
 11369                           	opt callstack 0
 11370                           
 11371 ;; *************** function _RADIO_FSKPayloadReady *****************
 11372 ;; Defined at:
 11373 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;		None
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;  i               1  149[BANK0 ] unsigned char 
 11378 ;;  irqFlags        1  148[BANK0 ] unsigned char 
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      void 
 11381 ;; Registers used:
 11382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;Total ram usage:        2 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:   16
 11395 ;; This function calls:
 11396 ;;		_HALSPICSAssert
 11397 ;;		_HALSPICSDeassert
 11398 ;;		_HALSPISend
 11399 ;;		_LORAWAN_RxDone
 11400 ;;		_LORAWAN_RxTimeout
 11401 ;;		_RADIO_RegisterRead
 11402 ;;		_RADIO_WriteMode
 11403 ;;		_SwTimerStop
 11404 ;; This function is called by:
 11405 ;;		_RADIO_DIO0
 11406 ;; This function uses a non-reentrant model
 11407 ;;
 11408                           
 11409                           	psect	text46
 11410  007DA8                     __ptext46:
 11411                           	opt callstack 0
 11412  007DA8                     _RADIO_FSKPayloadReady:
 11413                           	opt callstack 10
 11414                           
 11415                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;;radio_driver_SX1276.c: 1013: uint8_t i;;
      +                          radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
 11416                           
 11417                           ; BSR set to: 0
 11418                           ;incstack = 0
 11419  007DA8  0E3F               	movlw	63
 11420  007DAA  EC38  F051         	call	_RADIO_RegisterRead
 11421  007DAE  0100               	movlb	0	; () banked
 11422  007DB0  6FF4               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
 11426  007DB2  A5F4               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
 11427  007DB4  0012               	return	
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;radio_driver_SX1276.c: 1017: {;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfigurat
      +                          ion.watchdogTimerId);
 11431  007DB6  0101               	movlb	1	; () banked
 11432  007DB8  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 11433  007DBA  EC18  F052         	call	_SwTimerStop
 11434                           
 11435                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 11436  007DBE  0101               	movlb	1	; () banked
 11437  007DC0  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 11438  007DC2  EC18  F052         	call	_SwTimerStop
 11439                           
 11440                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
 11441  007DC6  ECA3  F054         	call	_HALSPICSAssert	;wreg free
 11442                           
 11443                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
 11444  007DCA  0E00               	movlw	0
 11445  007DCC  ECF6  F053         	call	_HALSPISend
 11446                           
 11447                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
 11448  007DD0  0EFF               	movlw	255
 11449  007DD2  ECF6  F053         	call	_HALSPISend
 11450  007DD6  0101               	movlb	1	; () banked
 11451  007DD8  6F4D               	movwf	(_RadioConfiguration+36)& (0+255),b
 11452                           
 11453                           ; BSR set to: 1
 11454                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 11455  007DDA  0E00               	movlw	0
 11456  007DDC  0100               	movlb	0	; () banked
 11457  007DDE  6FF5               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
 11458  007DE0  D00F               	goto	l20912
 11459  007DE2                     l20908:
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;radio_driver_SX1276.c: 1029: {;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuff
      +                          er[i] = HALSPISend(0xFF);
 11463  007DE2  51F5               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
 11464  007DE4  0101               	movlb	1	; () banked
 11465  007DE6  254E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 11466  007DE8  6ED9               	movwf	fsr2l,c
 11467  007DEA  0100               	movlb	0	; () banked
 11468  007DEC  0E00               	movlw	0
 11469  007DEE  0101               	movlb	1	; () banked
 11470  007DF0  214F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 11471  007DF2  6EDA               	movwf	fsr2h,c
 11472  007DF4  0EFF               	movlw	255
 11473  007DF6  ECF6  F053         	call	_HALSPISend
 11474  007DFA  6EDF               	movwf	indf2,c
 11475  007DFC  0100               	movlb	0	; () banked
 11476  007DFE  2BF5               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
 11477  007E00                     l20912:
 11478                           
 11479                           ; BSR set to: 0
 11480  007E00  0101               	movlb	1	; () banked
 11481  007E02  514D               	movf	(_RadioConfiguration+36)& (0+255),w,b
 11482  007E04  0100               	movlb	0	; () banked
 11483  007E06  5DF5               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
 11484  007E08  A0D8               	btfss	status,0,c
 11485  007E0A  D7EB               	goto	l20908
 11486                           
 11487                           ; BSR set to: 0
 11488                           ;radio_driver_SX1276.c: 1031: };radio_driver_SX1276.c: 1032: HALSPICSDeassert();
 11489  007E0C  ECA1  F054         	call	_HALSPICSDeassert	;wreg free
 11490                           
 11491                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 11492  007E10  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 11493  007E14  0E00               	movlw	0
 11494  007E16  0100               	movlb	0	; () banked
 11495  007E18  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 11496  007E1A  0E00               	movlw	0
 11497  007E1C  ECEB  F035         	call	_RADIO_WriteMode
 11498                           
 11499                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
 11500  007E20  0101               	movlb	1	; () banked
 11501  007E22  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 11502                           
 11503                           ; BSR set to: 1
 11504                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
 11505  007E24  0E80               	movlw	128
 11506  007E26  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 11507                           
 11508                           ; BSR set to: 1
 11509                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
 11510  007E28  0545               	decf	(_RadioConfiguration+28)& (0+255),w,b
 11511  007E2A  A4D8               	btfss	status,2,c
 11512  007E2C  D003               	goto	u23520
 11513                           
 11514                           ; BSR set to: 1
 11515                           ;radio_driver_SX1276.c: 1040: {;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags &
      +                           (1<<(1))))
 11516  007E2E  0100               	movlb	0	; () banked
 11517  007E30  A3F4               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 11518  007E32  D003               	goto	l20928
 11519  007E34                     u23520:
 11520                           
 11521                           ;radio_driver_SX1276.c: 1042: {;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |=
      +                           (1 << (2));
 11522  007E34  0101               	movlb	1	; () banked
 11523  007E36  854C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 11524                           
 11525                           ;radio_driver_SX1276.c: 1044: }
 11526  007E38  D002               	goto	l20932
 11527  007E3A                     l20928:
 11528                           
 11529                           ; BSR set to: 0
 11530                           ;radio_driver_SX1276.c: 1045: else;radio_driver_SX1276.c: 1046: {;radio_driver_SX1276.c:
      +                           1047: RadioConfiguration.flags &= ~(1 << (2));
 11531  007E3A  0101               	movlb	1	; () banked
 11532  007E3C  954C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 11533  007E3E                     l20932:
 11534                           
 11535                           ; BSR set to: 1
 11536                           ;radio_driver_SX1276.c: 1053: };radio_driver_SX1276.c: 1055: if ((RadioConfiguration.fla
      +                          gs & (1 << (2))) != 0)
 11537  007E3E  A54C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 11538  007E40  D009               	goto	l20936
 11539                           
 11540                           ; BSR set to: 1
 11541                           ;radio_driver_SX1276.c: 1056: {;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfigu
      +                          ration.dataBuffer, RadioConfiguration.dataBufferLen);
 11542  007E42  C14E  F1DA         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 11543  007E46  C14F  F1DB         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 11544  007E4A  C14D  F1DC         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 11545  007E4E  EC56  F000         	call	_LORAWAN_RxDone	;wreg free
 11546                           
 11547                           ;radio_driver_SX1276.c: 1058: }
 11548  007E52  0012               	return	
 11549  007E54                     l20936:
 11550                           
 11551                           ; BSR set to: 1
 11552                           ;radio_driver_SX1276.c: 1059: else;radio_driver_SX1276.c: 1060: {;radio_driver_SX1276.c:
      +                           1061: LORAWAN_RxTimeout();
 11553  007E54  ECD7  F018         	call	_LORAWAN_RxTimeout	;wreg free
 11554  007E58  0012               	return		;funcret
 11555  007E5A                     __end_of_RADIO_FSKPayloadReady:
 11556                           	opt callstack 0
 11557                           
 11558 ;; *************** function _LORAWAN_RxTimeout *****************
 11559 ;; Defined at:
 11560 ;;		line 465 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 11561 ;; Parameters:    Size  Location     Type
 11562 ;;		None
 11563 ;; Auto vars:     Size  Location     Type
 11564 ;;  minim           4   94[BANK0 ] unsigned long 
 11565 ;;  i               1   98[BANK0 ] unsigned char 
 11566 ;; Return value:  Size  Location     Type
 11567 ;;                  1    wreg      void 
 11568 ;; Registers used:
 11569 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, p
      +rodl, prodh, cstack
 11570 ;; Tracked objects:
 11571 ;;		On entry : 0/0
 11572 ;;		On exit  : 0/0
 11573 ;;		Unchanged: 0/0
 11574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11576 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11577 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11578 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11579 ;;Total ram usage:        9 bytes
 11580 ;; Hardware stack levels used:    1
 11581 ;; Hardware stack levels required when called:   15
 11582 ;; This function calls:
 11583 ;;		_LORAWAN_ReceiveWindow2Callback
 11584 ;;		_RADIO_Transmit
 11585 ;;		_ResetParametersForConfirmedTransmission
 11586 ;;		_ResetParametersForUnconfirmedTransmission
 11587 ;;		_RxData
 11588 ;;		_SelectChannelForTransmission
 11589 ;;		_SetJoinFailState
 11590 ;;		_SwTimerSetTimeout
 11591 ;;		_SwTimerStart
 11592 ;;		___lldiv
 11593 ;; This function is called by:
 11594 ;;		_RADIO_FSKPayloadReady
 11595 ;;		_RADIO_RxTimeout
 11596 ;;		_RADIO_RxFSKTimeout
 11597 ;;		_RADIO_WatchdogTimeout
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601                           	psect	text47
 11602  0031AE                     __ptext47:
 11603                           	opt callstack 0
 11604  0031AE                     _LORAWAN_RxTimeout:
 11605                           	opt callstack 10
 11606                           
 11607                           ;lorawan_eu.c: 467: uint8_t i;;lorawan_eu.c: 468: uint32_t minim = (4294967295UL);
 11608                           
 11609                           ;incstack = 0
 11610  0031AE  0100               	movlb	0	; () banked
 11611  0031B0  69BE               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 11612  0031B2  69BF               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 11613  0031B4  69C0               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 11614  0031B6  69C1               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 11615                           
 11616                           ;lorawan_eu.c: 470: if (loRa.macStatus.macPause == 0)
 11617  0031B8  0102               	movlb	2	; () banked
 11618  0031BA  B108               	btfsc	(_loRa+3)& (0+255),0,b
 11619  0031BC  D15E               	goto	l20706
 11620                           
 11621                           ; BSR set to: 2
 11622                           ;lorawan_eu.c: 471: {;lorawan_eu.c: 473: if ( loRa.macStatus.macState == RX1_OPEN )
 11623  0031BE  5107               	movf	(_loRa+2)& (0+255),w,b
 11624  0031C0  0B0F               	andlw	15
 11625  0031C2  0A03               	xorlw	3
 11626  0031C4  A4D8               	btfss	status,2,c
 11627  0031C6  D011               	goto	l1067
 11628                           
 11629                           ; BSR set to: 2
 11630                           ;lorawan_eu.c: 474: {;lorawan_eu.c: 475: if (CLASS_A == loRa.deviceClass)
 11631  0031C8  5117               	movf	(_loRa+18)& (0+255),w,b
 11632  0031CA  A4D8               	btfss	status,2,c
 11633  0031CC  D005               	goto	l20640
 11634                           
 11635                           ; BSR set to: 2
 11636                           ;lorawan_eu.c: 476: {;lorawan_eu.c: 477: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 11637  0031CE  5107               	movf	(_loRa+2)& (0+255),w,b
 11638  0031D0  0BF0               	andlw	-16
 11639  0031D2  0904               	iorlw	4
 11640  0031D4  6F07               	movwf	(_loRa+2)& (0+255),b
 11641                           
 11642                           ;lorawan_eu.c: 478: }
 11643  0031D6  0012               	return	
 11644  0031D8                     l20640:
 11645                           
 11646                           ; BSR set to: 2
 11647                           ;lorawan_eu.c: 479: else if (CLASS_C == loRa.deviceClass)
 11648  0031D8  0E02               	movlw	2
 11649  0031DA  1917               	xorwf	(_loRa+18)& (0+255),w,b
 11650  0031DC  A4D8               	btfss	status,2,c
 11651  0031DE  0012               	return	
 11652                           
 11653                           ; BSR set to: 2
 11654                           ;lorawan_eu.c: 480: {;lorawan_eu.c: 481: LORAWAN_ReceiveWindow2Callback(0);
 11655  0031E0  0E00               	movlw	0
 11656  0031E2  6EE6               	movwf	postinc1,c
 11657  0031E4  EC9E  F03A         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
 11658                           
 11659                           ;lorawan_eu.c: 482: };lorawan_eu.c: 483: }
 11660  0031E8  0012               	return	
 11661  0031EA                     l1067:
 11662                           
 11663                           ; BSR set to: 2
 11664                           ;lorawan_eu.c: 484: else;lorawan_eu.c: 485: {;lorawan_eu.c: 487: if (loRa.lorawanMacStat
      +                          us.joining == 1)
 11665  0031EA  A505               	btfss	_loRa& (0+255),2,b
 11666  0031EC  D003               	goto	l1072
 11667                           
 11668                           ; BSR set to: 2
 11669                           ;lorawan_eu.c: 488: {;lorawan_eu.c: 489: SetJoinFailState();
 11670  0031EE  EC68  F050         	call	_SetJoinFailState	;wreg free
 11671                           
 11672                           ;lorawan_eu.c: 490: }
 11673  0031F2  0012               	return	
 11674  0031F4                     l1072:
 11675                           
 11676                           ; BSR set to: 2
 11677                           ;lorawan_eu.c: 492: else if (loRa.macStatus.networkJoined == 1)
 11678  0031F4  A907               	btfss	(_loRa+2)& (0+255),4,b
 11679  0031F6  0012               	return	
 11680                           
 11681                           ; BSR set to: 2
 11682                           ;lorawan_eu.c: 493: {;lorawan_eu.c: 494: if (loRa.lorawanMacStatus.ackRequiredFromNextDo
      +                          wnlinkMessage == 1)
 11683  0031F8  A105               	btfss	_loRa& (0+255),0,b
 11684  0031FA  D058               	goto	l20662
 11685                           
 11686                           ; BSR set to: 2
 11687                           ;lorawan_eu.c: 495: {;lorawan_eu.c: 496: if (loRa.counterRepetitionsConfirmedUplink <= l
      +                          oRa.maxRepetitionsConfirmedUplink)
 11688  0031FC  51DE               	movf	(_loRa+217)& (0+255),w,b
 11689  0031FE  5DDC               	subwf	(_loRa+215)& (0+255),w,b
 11690  003200  A0D8               	btfss	status,0,c
 11691  003202  D038               	goto	l20656
 11692                           
 11693                           ; BSR set to: 2
 11694                           ;lorawan_eu.c: 497: {;lorawan_eu.c: 498: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 11695  003204  5107               	movf	(_loRa+2)& (0+255),w,b
 11696  003206  0BF0               	andlw	-16
 11697  003208  0906               	iorlw	6
 11698  00320A  6F07               	movwf	(_loRa+2)& (0+255),b
 11699                           
 11700                           ; BSR set to: 2
 11701                           ;lorawan_eu.c: 499: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 11702  00320C  51A5               	movf	(_loRa+160)& (0+255),w,b
 11703  00320E  0100               	movlb	0	; () banked
 11704  003210  6FBA               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11705  003212  0102               	movlb	2	; () banked
 11706  003214  51A6               	movf	(_loRa+161)& (0+255),w,b
 11707  003216  0100               	movlb	0	; () banked
 11708  003218  6FBB               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 11709  00321A  6BBC               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 11710  00321C  6BBD               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 11711  00321E  0E0C               	movlw	12
 11712  003220                     u22935:
 11713  003220  90D8               	bcf	status,0,c
 11714  003222  37BA               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 11715  003224  37BB               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 11716  003226  37BC               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 11717  003228  37BD               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 11718  00322A  2EE8               	decfsz	wreg,f,c
 11719  00322C  D7F9               	goto	u22935
 11720  00322E  C0BA  F060         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 11721  003232  C0BB  F061         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 11722  003236  C0BC  F062         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 11723  00323A  C0BD  F063         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 11724  00323E  0E7D               	movlw	125
 11725  003240  6F64               	movwf	___lldiv@divisor& (0+255),b
 11726  003242  0E00               	movlw	0
 11727  003244  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 11728  003246  0E00               	movlw	0
 11729  003248  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 11730  00324A  0E00               	movlw	0
 11731  00324C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 11732  00324E  ECD9  F042         	call	___lldiv	;wreg free
 11733  003252  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 11734  003256  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 11735  00325A  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 11736  00325E  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 11737  003262  0102               	movlb	2	; () banked
 11738  003264  51ED               	movf	(_loRa+232)& (0+255),w,b
 11739  003266  ECC2  F04C         	call	_SwTimerSetTimeout
 11740                           
 11741                           ;lorawan_eu.c: 500: SwTimerStart(loRa.ackTimeoutTimerId);
 11742  00326A  0102               	movlb	2	; () banked
 11743  00326C  51ED               	movf	(_loRa+232)& (0+255),w,b
 11744  00326E  ECB6  F040         	call	_SwTimerStart
 11745                           
 11746                           ;lorawan_eu.c: 501: }
 11747  003272  0012               	return	
 11748  003274                     l20656:
 11749                           
 11750                           ; BSR set to: 2
 11751                           ;lorawan_eu.c: 502: else;lorawan_eu.c: 503: {;lorawan_eu.c: 504: ResetParametersForConfi
      +                          rmedTransmission ();
 11752  003274  ECD3  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
 11753  003278                     
 11754                           ;lorawan_eu.c: 505: if (rxPayload.RxAppData != (0))
 11755  003278  0101               	movlb	1	; () banked
 11756  00327A  510E               	movf	_rxPayload& (0+255),w,b
 11757  00327C  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 11758  00327E  B4D8               	btfsc	status,2,c
 11759  003280  0012               	return	
 11760                           
 11761                           ; BSR set to: 1
 11762                           ;lorawan_eu.c: 506: {;lorawan_eu.c: 507: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11763  003282  0E00               	movlw	0
 11764  003284  0100               	movlb	0	; () banked
 11765  003286  6F60               	movwf	RxData@pData& (0+255),b
 11766  003288  0E00               	movlw	0
 11767  00328A  6F61               	movwf	(RxData@pData+1)& (0+255),b
 11768  00328C  0E00               	movlw	0
 11769  00328E  6F62               	movwf	RxData@dataLength& (0+255),b
 11770  003290  0E00               	movlw	0
 11771  003292  6F63               	movwf	RxData@status& (0+255),b
 11772  003294  D801               	call	u22958
 11773  003296  0012               	return	
 11774  003298                     u22958:
 11775  003298  0005               	push	
 11776  00329A  6EFA               	movwf	pclath,c
 11777  00329C  0101               	movlb	1	; () banked
 11778  00329E  510E               	movf	_rxPayload& (0+255),w,b
 11779  0032A0  6EFD               	movwf	tosl,c
 11780  0032A2  510F               	movf	(_rxPayload+1)& (0+255),w,b
 11781  0032A4  6EFE               	movwf	tosh,c
 11782  0032A6  6AFF               	clrf	tosu,c
 11783  0032A8  50FA               	movf	pclath,w,c
 11784  0032AA  0012               	return		;indir
 11785  0032AC                     l20662:
 11786                           
 11787                           ; BSR set to: 2
 11788                           ;lorawan_eu.c: 512: else;lorawan_eu.c: 513: {;lorawan_eu.c: 514: if (loRa.counterRepetit
      +                          ionsUnconfirmedUplink <= loRa.maxRepetitionsUnconfirmedUplink)
 11789  0032AC  51DD               	movf	(_loRa+216)& (0+255),w,b
 11790  0032AE  5DDB               	subwf	(_loRa+214)& (0+255),w,b
 11791  0032B0  A0D8               	btfss	status,0,c
 11792  0032B2  D0C7               	goto	l20700
 11793                           
 11794                           ; BSR set to: 2
 11795                           ;lorawan_eu.c: 515: {;lorawan_eu.c: 516: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 11796  0032B4  5107               	movf	(_loRa+2)& (0+255),w,b
 11797  0032B6  0BF0               	andlw	-16
 11798  0032B8  0906               	iorlw	6
 11799  0032BA  6F07               	movwf	(_loRa+2)& (0+255),b
 11800                           
 11801                           ; BSR set to: 2
 11802                           ;lorawan_eu.c: 517: if (SelectChannelForTransmission (1) == OK)
 11803  0032BC  0E01               	movlw	1
 11804  0032BE  ECCD  F046         	call	_SelectChannelForTransmission
 11805  0032C2  0900               	iorlw	0
 11806  0032C4  A4D8               	btfss	status,2,c
 11807  0032C6  D018               	goto	l20680
 11808                           
 11809                           ;lorawan_eu.c: 518: {;lorawan_eu.c: 520: if (RADIO_Transmit (&macBuffer[16], loRa.lastPa
      +                          cketLength) == OK)
 11810  0032C8  0EC8               	movlw	low (_macBuffer+16)
 11811  0032CA  0100               	movlb	0	; () banked
 11812  0032CC  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 11813  0032CE  0E06               	movlw	high (_macBuffer+16)
 11814  0032D0  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 11815  0032D2  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
 11816  0032D6  EC82  F01F         	call	_RADIO_Transmit	;wreg free
 11817  0032DA  0100               	movlb	0	; () banked
 11818  0032DC  51A9               	movf	?_RADIO_Transmit& (0+255),w,b
 11819  0032DE  11AA               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 11820  0032E0  A4D8               	btfss	status,2,c
 11821  0032E2  D007               	goto	l20674
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;lorawan_eu.c: 521: {;lorawan_eu.c: 522: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 11825  0032E4  0102               	movlb	2	; () banked
 11826  0032E6  2BDD               	incf	(_loRa+216)& (0+255),f,b
 11827                           
 11828                           ; BSR set to: 2
 11829                           ;lorawan_eu.c: 523: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 11830  0032E8  5107               	movf	(_loRa+2)& (0+255),w,b
 11831  0032EA  0BF0               	andlw	-16
 11832  0032EC  0901               	iorlw	1
 11833  0032EE  6F07               	movwf	(_loRa+2)& (0+255),b
 11834                           
 11835                           ;lorawan_eu.c: 524: }
 11836  0032F0  0012               	return	
 11837  0032F2                     l20674:
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;lorawan_eu.c: 525: else;lorawan_eu.c: 527: {;lorawan_eu.c: 528: ResetParametersForUncon
      +                          firmedTransmission ();
 11841  0032F2  ECA3  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 11842  0032F6  D7C0               	goto	L38
 11843  0032F8                     l20680:
 11844                           
 11845                           ;lorawan_eu.c: 535: else;lorawan_eu.c: 536: {;lorawan_eu.c: 538: for (i = 0; i <= loRa.m
      +                          axChannels; i ++)
 11846  0032F8  0E00               	movlw	0
 11847  0032FA  0100               	movlb	0	; () banked
 11848  0032FC  6FC2               	movwf	LORAWAN_RxTimeout@i& (0+255),b
 11849  0032FE  D064               	goto	l20696
 11850  003300                     l20682:
 11851                           
 11852                           ; BSR set to: 2
 11853                           ;lorawan_eu.c: 539: {;lorawan_eu.c: 540: if ( (Channels[i].status == 1) && (Channels[i].
      +                          channelTimer != 0) && (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Ch
      +                          annels[i].dataRange.min) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 11854  003300  0100               	movlb	0	; () banked
 11855  003302  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11856  003304  0D0E               	mullw	14
 11857  003306  0E18               	movlw	low (_Channels+4)
 11858  003308  24F3               	addwf	prodl,w,c
 11859  00330A  6ED9               	movwf	fsr2l,c
 11860  00330C  0E04               	movlw	high (_Channels+4)
 11861  00330E  20F4               	addwfc	prodh,w,c
 11862  003310  6EDA               	movwf	fsr2h,c
 11863  003312  04DE               	decf	postinc2,w,c
 11864  003314  A4D8               	btfss	status,2,c
 11865  003316  D056               	goto	l20694
 11866                           
 11867                           ; BSR set to: 0
 11868  003318  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11869  00331A  0D0E               	mullw	14
 11870  00331C  0E1C               	movlw	low (_Channels+8)
 11871  00331E  24F3               	addwf	prodl,w,c
 11872  003320  6ED9               	movwf	fsr2l,c
 11873  003322  0E04               	movlw	high (_Channels+8)
 11874  003324  20F4               	addwfc	prodh,w,c
 11875  003326  6EDA               	movwf	fsr2h,c
 11876  003328  50DE               	movf	postinc2,w,c
 11877  00332A  10DE               	iorwf	postinc2,w,c
 11878  00332C  10DE               	iorwf	postinc2,w,c
 11879  00332E  10DE               	iorwf	postinc2,w,c
 11880  003330  B4D8               	btfsc	status,2,c
 11881  003332  D048               	goto	l20694
 11882                           
 11883                           ; BSR set to: 0
 11884  003334  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11885  003336  0D0E               	mullw	14
 11886  003338  0E1C               	movlw	low (_Channels+8)
 11887  00333A  24F3               	addwf	prodl,w,c
 11888  00333C  6ED9               	movwf	fsr2l,c
 11889  00333E  0E04               	movlw	high (_Channels+8)
 11890  003340  20F4               	addwfc	prodh,w,c
 11891  003342  6EDA               	movwf	fsr2h,c
 11892  003344  50DE               	movf	postinc2,w,c
 11893  003346  5DBE               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 11894  003348  50DE               	movf	postinc2,w,c
 11895  00334A  59BF               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 11896  00334C  50DE               	movf	postinc2,w,c
 11897  00334E  59C0               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 11898  003350  50DE               	movf	postinc2,w,c
 11899  003352  59C1               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 11900  003354  A0D8               	btfss	status,0,c
 11901  003356  D036               	goto	l20694
 11902                           
 11903                           ; BSR set to: 0
 11904  003358  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11905  00335A  0D0E               	mullw	14
 11906  00335C  0E19               	movlw	low (_Channels+5)
 11907  00335E  24F3               	addwf	prodl,w,c
 11908  003360  6ED9               	movwf	fsr2l,c
 11909  003362  0E04               	movlw	high (_Channels+5)
 11910  003364  20F4               	addwfc	prodh,w,c
 11911  003366  6EDA               	movwf	fsr2h,c
 11912  003368  0104               	movlb	4	; () banked
 11913  00336A  50DF               	movf	223,w,c
 11914  00336C  0B0F               	andlw	15
 11915  00336E  0100               	movlb	0	; () banked
 11916  003370  6FBA               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11917  003372  51BA               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 11918  003374  0102               	movlb	2	; () banked
 11919  003376  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 11920  003378  A0D8               	btfss	status,0,c
 11921  00337A  D024               	goto	l20694
 11922                           
 11923                           ; BSR set to: 2
 11924  00337C  0100               	movlb	0	; () banked
 11925  00337E  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11926  003380  0D0E               	mullw	14
 11927  003382  0E19               	movlw	low (_Channels+5)
 11928  003384  24F3               	addwf	prodl,w,c
 11929  003386  6ED9               	movwf	fsr2l,c
 11930  003388  0E04               	movlw	high (_Channels+5)
 11931  00338A  20F4               	addwfc	prodh,w,c
 11932  00338C  6EDA               	movwf	fsr2h,c
 11933  00338E  0104               	movlb	4	; () banked
 11934  003390  38DF               	swapf	223,w,c
 11935  003392  0B0F               	andlw	15
 11936  003394  0100               	movlb	0	; () banked
 11937  003396  6FBA               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 11938  003398  0102               	movlb	2	; () banked
 11939  00339A  51E4               	movf	(_loRa+223)& (0+255),w,b
 11940  00339C  0100               	movlb	0	; () banked
 11941  00339E  5DBA               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 11942  0033A0  A0D8               	btfss	status,0,c
 11943  0033A2  D010               	goto	l20694
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;lorawan_eu.c: 541: {;lorawan_eu.c: 542: minim = Channels[i].channelTimer;
 11947  0033A4  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11948  0033A6  0D0E               	mullw	14
 11949  0033A8  0E1C               	movlw	low (_Channels+8)
 11950  0033AA  24F3               	addwf	prodl,w,c
 11951  0033AC  6ED9               	movwf	fsr2l,c
 11952  0033AE  0E04               	movlw	high (_Channels+8)
 11953  0033B0  20F4               	addwfc	prodh,w,c
 11954  0033B2  6EDA               	movwf	fsr2h,c
 11955  0033B4  CFDE F0BE          	movff	postinc2,LORAWAN_RxTimeout@minim
 11956  0033B8  CFDE F0BF          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 11957  0033BC  CFDE F0C0          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 11958  0033C0  CFDE F0C1          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 11959  0033C4                     l20694:
 11960  0033C4  0100               	movlb	0	; () banked
 11961  0033C6  2BC2               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 11962  0033C8                     l20696:
 11963                           
 11964                           ; BSR set to: 0
 11965  0033C8  51C2               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 11966  0033CA  0102               	movlb	2	; () banked
 11967  0033CC  5DF2               	subwf	(_loRa+237)& (0+255),w,b
 11968  0033CE  B0D8               	btfsc	status,0,c
 11969  0033D0  D797               	goto	l20682
 11970                           
 11971                           ; BSR set to: 2
 11972                           ;lorawan_eu.c: 543: };lorawan_eu.c: 544: };lorawan_eu.c: 545: SwTimerSetTimeout (loRa.un
      +                          confirmedRetransmisionTimerId, ( (((uint32_t)(minim + 50)) << (12)) / 125UL ) );
 11973  0033D2  C0BE  F0BA         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 11974  0033D6  C0BF  F0BB         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 11975  0033DA  C0C0  F0BC         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 11976  0033DE  C0C1  F0BD         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 11977  0033E2  0E0C               	movlw	12
 11978  0033E4                     u23065:
 11979  0033E4  90D8               	bcf	status,0,c
 11980  0033E6  0100               	movlb	0	; () banked
 11981  0033E8  37BA               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 11982  0033EA  37BB               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 11983  0033EC  37BC               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 11984  0033EE  37BD               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 11985  0033F0  2EE8               	decfsz	wreg,f,c
 11986  0033F2  D7F8               	goto	u23065
 11987  0033F4  0E00               	movlw	0
 11988  0033F6  25BA               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 11989  0033F8  6F60               	movwf	___lldiv@dividend& (0+255),b
 11990  0033FA  0E20               	movlw	32
 11991  0033FC  21BB               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 11992  0033FE  6F61               	movwf	(___lldiv@dividend+1)& (0+255),b
 11993  003400  0E03               	movlw	3
 11994  003402  21BC               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 11995  003404  6F62               	movwf	(___lldiv@dividend+2)& (0+255),b
 11996  003406  0E00               	movlw	0
 11997  003408  21BD               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 11998  00340A  6F63               	movwf	(___lldiv@dividend+3)& (0+255),b
 11999  00340C  0E7D               	movlw	125
 12000  00340E  6F64               	movwf	___lldiv@divisor& (0+255),b
 12001  003410  0E00               	movlw	0
 12002  003412  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 12003  003414  0E00               	movlw	0
 12004  003416  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 12005  003418  0E00               	movlw	0
 12006  00341A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 12007  00341C  ECD9  F042         	call	___lldiv	;wreg free
 12008  003420  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12009  003424  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12010  003428  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12011  00342C  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12012  003430  0102               	movlb	2	; () banked
 12013  003432  51EF               	movf	(_loRa+234)& (0+255),w,b
 12014  003434  ECC2  F04C         	call	_SwTimerSetTimeout
 12015                           
 12016                           ;lorawan_eu.c: 546: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 12017  003438  0102               	movlb	2	; () banked
 12018  00343A  51EF               	movf	(_loRa+234)& (0+255),w,b
 12019  00343C  ECB6  F040         	call	_SwTimerStart
 12020  003440  0012               	return	
 12021  003442                     l20700:
 12022                           
 12023                           ; BSR set to: 2
 12024                           ;lorawan_eu.c: 549: else;lorawan_eu.c: 550: {;lorawan_eu.c: 551: ResetParametersForUncon
      +                          firmedTransmission ();
 12025  003442  ECA3  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 12026                           
 12027                           ;lorawan_eu.c: 552: if (rxPayload.RxAppData != (0))
 12028  003446  0101               	movlb	1	; () banked
 12029  003448  510E               	movf	_rxPayload& (0+255),w,b
 12030  00344A  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12031  00344C  B4D8               	btfsc	status,2,c
 12032  00344E  0012               	return	
 12033                           
 12034                           ; BSR set to: 1
 12035                           ;lorawan_eu.c: 553: {;lorawan_eu.c: 554: rxPayload.RxAppData((0), 0, MAC_OK);
 12036  003450  0E00               	movlw	0
 12037  003452  0100               	movlb	0	; () banked
 12038  003454  6F60               	movwf	RxData@pData& (0+255),b
 12039  003456  0E00               	movlw	0
 12040  003458  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12041  00345A  0E00               	movlw	0
 12042  00345C  6F62               	movwf	RxData@dataLength& (0+255),b
 12043  00345E  0E01               	movlw	1
 12044  003460  6F63               	movwf	RxData@status& (0+255),b
 12045  003462  D801               	call	u23088
 12046  003464  0012               	return	
 12047  003466                     u23088:
 12048  003466  0005               	push	
 12049  003468  6EFA               	movwf	pclath,c
 12050  00346A  0101               	movlb	1	; () banked
 12051  00346C  510E               	movf	_rxPayload& (0+255),w,b
 12052  00346E  6EFD               	movwf	tosl,c
 12053  003470  510F               	movf	(_rxPayload+1)& (0+255),w,b
 12054  003472  6EFE               	movwf	tosh,c
 12055  003474  6AFF               	clrf	tosu,c
 12056  003476  50FA               	movf	pclath,w,c
 12057  003478  0012               	return		;indir
 12058  00347A                     l20706:
 12059                           
 12060                           ; BSR set to: 2
 12061                           ;lorawan_eu.c: 561: else;lorawan_eu.c: 562: {;lorawan_eu.c: 564: if (rxPayload.RxAppData
      +                           != (0))
 12062  00347A  0101               	movlb	1	; () banked
 12063  00347C  510E               	movf	_rxPayload& (0+255),w,b
 12064  00347E  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12065  003480  B4D8               	btfsc	status,2,c
 12066  003482  0012               	return	
 12067                           
 12068                           ; BSR set to: 1
 12069                           ;lorawan_eu.c: 565: {;lorawan_eu.c: 566: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 12070  003484  0E00               	movlw	0
 12071  003486  0100               	movlb	0	; () banked
 12072  003488  6F60               	movwf	RxData@pData& (0+255),b
 12073  00348A  0E00               	movlw	0
 12074  00348C  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12075  00348E  0E00               	movlw	0
 12076  003490  6F62               	movwf	RxData@dataLength& (0+255),b
 12077  003492  0E02               	movlw	2
 12078  003494  6F63               	movwf	RxData@status& (0+255),b
 12079  003496  D801               	call	u23108
 12080  003498  0012               	return	
 12081  00349A                     u23108:
 12082  00349A  0005               	push	
 12083  00349C  6EFA               	movwf	pclath,c
 12084  00349E  0101               	movlb	1	; () banked
 12085  0034A0  510E               	movf	_rxPayload& (0+255),w,b
 12086  0034A2  6EFD               	movwf	tosl,c
 12087  0034A4  510F               	movf	(_rxPayload+1)& (0+255),w,b
 12088  0034A6  6EFE               	movwf	tosh,c
 12089  0034A8  6AFF               	clrf	tosu,c
 12090  0034AA  50FA               	movf	pclath,w,c
 12091  0034AC  0012               	return		;indir
 12092  0034AE                     __end_of_LORAWAN_RxTimeout:
 12093                           	opt callstack 0
 12094                           
 12095 ;; *************** function _LORAWAN_RxDone *****************
 12096 ;; Defined at:
 12097 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;  buffer          2  102[BANK1 ] PTR unsigned char 
 12100 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12101 ;;  bufferLength    1  104[BANK1 ] unsigned char 
 12102 ;; Auto vars:     Size  Location     Type
 12103 ;;  hdr             2  146[BANK0 ] PTR struct .
 12104 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12105 ;;  joinAccept      2  143[BANK0 ] PTR struct .
 12106 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12107 ;;  computedMic     4  139[BANK0 ] unsigned long 
 12108 ;;  extractedMic    4  131[BANK0 ] unsigned long 
 12109 ;;  packet          2  137[BANK0 ] PTR unsigned char 
 12110 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 12111 ;;  frmPayloadLe    1  145[BANK0 ] unsigned char 
 12112 ;;  temp            1  136[BANK0 ] unsigned char 
 12113 ;;  bufferIndex     1  135[BANK0 ] unsigned char 
 12114 ;;  mhdr            1  130[BANK0 ] struct .
 12115 ;;  channelIndex    1  129[BANK0 ] unsigned char 
 12116 ;;  fPort           1  128[BANK0 ] unsigned char 
 12117 ;; Return value:  Size  Location     Type
 12118 ;;                  1    wreg      enum E6295
 12119 ;; Registers used:
 12120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+8, btemp+9, btemp+10, btemp+11, to
      +sl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12121 ;; Tracked objects:
 12122 ;;		On entry : 0/0
 12123 ;;		On exit  : 0/0
 12124 ;;		Unchanged: 0/0
 12125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12126 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12127 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12128 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12129 ;;      Totals:         0      25       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12130 ;;Total ram usage:       28 bytes
 12131 ;; Hardware stack levels used:    1
 12132 ;; Hardware stack levels required when called:   15
 12133 ;; This function calls:
 12134 ;;		_AESCmac
 12135 ;;		_AESEncodeLoRa
 12136 ;;		_AssembleEncryptionBlock
 12137 ;;		_CheckFlags
 12138 ;;		_CheckMcastFlags
 12139 ;;		_ComputeMic
 12140 ;;		_ComputeSessionKeys
 12141 ;;		_EncryptFRMPayload
 12142 ;;		_ExtractMic
 12143 ;;		_LORAWAN_EnterContinuousReceive
 12144 ;;		_LORAWAN_Send
 12145 ;;		_MacExecuteCommands
 12146 ;;		_RADIO_GetStatus
 12147 ;;		_RADIO_ReleaseData
 12148 ;;		_RxData
 12149 ;;		_SearchAvailableChannel
 12150 ;;		_SetJoinFailState
 12151 ;;		_SetReceptionNotOkState
 12152 ;;		_StartReTxTimer
 12153 ;;		_SwTimerStop
 12154 ;;		_UpdateCfList
 12155 ;;		_UpdateDLSettings
 12156 ;;		_UpdateJoinSuccessState
 12157 ;;		_UpdateReceiveDelays
 12158 ;;		_UpdateRetransmissionAckTimeoutState
 12159 ;;		_memcpy
 12160 ;; This function is called by:
 12161 ;;		_RADIO_RxDone
 12162 ;;		_RADIO_FSKPayloadReady
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           	psect	text48
 12167  0000AC                     __ptext48:
 12168                           	opt callstack 0
 12169  0000AC                     _LORAWAN_RxDone:
 12170                           	opt callstack 10
 12171                           
 12172                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;;lorawan.c: 1124: Mhdr_t mhdr;;lora
      +                          wan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;;lorawan.c: 1126: uint8_t frmPaylo
      +                          adLength;;lorawan.c: 1127: uint8_t *packet;;lorawan.c: 1128: uint8_t temp;;lorawan.c: 11
      +                          30: RADIO_ReleaseData();
 12173                           
 12174                           ;incstack = 0
 12175  0000AC  EC8D  F054         	call	_RADIO_ReleaseData	;wreg free
 12176                           
 12177                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 12178  0000B0  0102               	movlb	2	; () banked
 12179  0000B2  B108               	btfsc	(_loRa+3)& (0+255),0,b
 12180  0000B4  EFB9  F005         	goto	l20622
 12181                           
 12182                           ; BSR set to: 2
 12183                           ;lorawan.c: 1133: {;lorawan.c: 1134: mhdr.value = buffer[0];
 12184  0000B8  C1DA  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12185  0000BC  C1DB  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12186  0000C0  50DF               	movf	indf2,w,c
 12187  0000C2  0100               	movlb	0	; () banked
 12188  0000C4  6FE2               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 12192  0000C6  39E2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12193  0000C8  32E8               	rrcf	wreg,f,c
 12194  0000CA  0B07               	andlw	7
 12195  0000CC  06E8               	decf	wreg,f,c
 12196  0000CE  A4D8               	btfss	status,2,c
 12197  0000D0  D0CF               	goto	l20282
 12198                           
 12199                           ; BSR set to: 0
 12200  0000D2  0102               	movlb	2	; () banked
 12201  0000D4  5122               	movf	(_loRa+29)& (0+255),w,b
 12202  0000D6  A4D8               	btfss	status,2,c
 12203  0000D8  D0CB               	goto	l20282
 12204                           
 12205                           ; BSR set to: 2
 12206                           ;lorawan.c: 1136: {;lorawan.c: 1137: temp = bufferLength - 1;
 12207  0000DA  0101               	movlb	1	; () banked
 12208  0000DC  05DC               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12209  0000DE  0100               	movlb	0	; () banked
 12210  0000E0  D01F               	goto	L13
 12211  0000E2                     l20232:
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;lorawan.c: 1139: {;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.a
      +                          ctivationParameters.applicationKey);
 12215  0000E2  0101               	movlb	1	; () banked
 12216  0000E4  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12217  0000E6  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12218  0000E8  0100               	movlb	0	; () banked
 12219  0000EA  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 12220  0000EC  0E00               	movlw	0
 12221  0000EE  0101               	movlb	1	; () banked
 12222  0000F0  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12223  0000F2  0100               	movlb	0	; () banked
 12224  0000F4  6FDC               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 12225  0000F6  51E8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 12226  0000F8  5DDB               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 12227  0000FA  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 12228  0000FC  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12229  0000FE  A0D8               	btfss	status,0,c
 12230  000100  05DC               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12231  000102  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 12232  000104  0E47               	movlw	low (_loRa+66)
 12233  000106  6F80               	movwf	AESEncodeLoRa@key& (0+255),b
 12234  000108  0E02               	movlw	high (_loRa+66)
 12235  00010A  6F81               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 12236  00010C  EC5A  F04E         	call	_AESEncodeLoRa	;wreg free
 12237                           
 12238                           ;lorawan.c: 1142: if (temp > 16)
 12239  000110  0E10               	movlw	16
 12240  000112  0100               	movlb	0	; () banked
 12241  000114  65E8               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 12242  000116  D003               	goto	l20238
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;lorawan.c: 1143: {;lorawan.c: 1144: temp -= 16;
 12246  000118  0E10               	movlw	16
 12247  00011A  5FE8               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 12248                           
 12249                           ;lorawan.c: 1145: }
 12250  00011C  D002               	goto	l1912
 12251  00011E                     l20238:
 12252                           
 12253                           ; BSR set to: 0
 12254                           ;lorawan.c: 1146: else;lorawan.c: 1147: {;lorawan.c: 1148: temp = 0;
 12255  00011E  0E00               	movlw	0
 12256  000120                     L13:
 12257  000120  6FE8               	movwf	LORAWAN_RxDone@temp& (0+255),b
 12258  000122                     l1912:
 12259                           
 12260                           ; BSR set to: 0
 12261  000122  51E8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 12262  000124  A4D8               	btfss	status,2,c
 12263  000126  D7DD               	goto	l20232
 12264                           
 12265                           ; BSR set to: 0
 12266                           ;lorawan.c: 1149: };lorawan.c: 1150: };lorawan.c: 1153: computedMic = ComputeMic (loRa.a
      +                          ctivationParameters.applicationKey, buffer, bufferLength - sizeof(extractedMic));
 12267  000128  0E47               	movlw	low (_loRa+66)
 12268  00012A  6FC8               	movwf	ComputeMic@key& (0+255),b
 12269  00012C  0E02               	movlw	high (_loRa+66)
 12270  00012E  6FC9               	movwf	(ComputeMic@key+1)& (0+255),b
 12271  000130  C1DA  F0CA         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 12272  000134  C1DB  F0CB         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 12273  000138  0101               	movlb	1	; () banked
 12274  00013A  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12275  00013C  0FFC               	addlw	252
 12276  00013E  0100               	movlb	0	; () banked
 12277  000140  6FCC               	movwf	ComputeMic@bufferLength& (0+255),b
 12278  000142  ECCD  F047         	call	_ComputeMic	;wreg free
 12279  000146  C0C8  F0EB         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 12280  00014A  C0C9  F0EC         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 12281  00014E  C0CA  F0ED         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 12282  000152  C0CB  F0EE         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 12283                           
 12284                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 12285  000156  C1DA  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12286  00015A  C1DB  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12287  00015E  C1DC  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12288  000162  EC0C  F04B         	call	_ExtractMic	;wreg free
 12289  000166  C06B  F0E3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12290  00016A  C06C  F0E4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12291  00016E  C06D  F0E5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12292  000172  C06E  F0E6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12293                           
 12294                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 12295  000176  0100               	movlb	0	; () banked
 12296  000178  51EB               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12297  00017A  19E3               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12298  00017C  E10A               	bnz	u22190
 12299  00017E  51EC               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12300  000180  19E4               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12301  000182  E107               	bnz	u22190
 12302  000184  51ED               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12303  000186  19E5               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12304  000188  E104               	bnz	u22190
 12305  00018A  51EE               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12306  00018C  19E6               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12307  00018E  B4D8               	btfsc	status,2,c
 12308  000190  D011               	goto	l20256
 12309  000192                     u22190:
 12310                           
 12311                           ; BSR set to: 0
 12312                           ;lorawan.c: 1156: {;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa
      +                          .macStatus.macState == RX1_OPEN) && (loRa.rx2DelayExpired)))
 12313  000192  0102               	movlb	2	; () banked
 12314  000194  5107               	movf	(_loRa+2)& (0+255),w,b
 12315  000196  0B0F               	andlw	15
 12316  000198  0A05               	xorlw	5
 12317  00019A  B4D8               	btfsc	status,2,c
 12318  00019C  D008               	goto	u22220
 12319                           
 12320                           ; BSR set to: 2
 12321  00019E  5107               	movf	(_loRa+2)& (0+255),w,b
 12322  0001A0  0B0F               	andlw	15
 12323  0001A2  0A03               	xorlw	3
 12324  0001A4  A4D8               	btfss	status,2,c
 12325  0001A6  0012               	return	
 12326                           
 12327                           ; BSR set to: 2
 12328  0001A8  51F6               	movf	(_loRa+241)& (0+255),w,b
 12329  0001AA  B4D8               	btfsc	status,2,c
 12330  0001AC  0012               	return	
 12331  0001AE                     u22220:
 12332                           
 12333                           ; BSR set to: 2
 12334                           ;lorawan.c: 1158: {;lorawan.c: 1159: SetJoinFailState();
 12335  0001AE  EC68  F050         	call	_SetJoinFailState	;wreg free
 12336                           
 12337                           ; BSR set to: 2
 12338                           ;lorawan.c: 1160: };lorawan.c: 1162: return INVALID_PARAMETER;;	Return value of _LORAWAN
      +                          _RxDone is never used
 12339  0001B2  0012               	return	
 12340  0001B4                     l20256:
 12341                           
 12342                           ; BSR set to: 0
 12343                           ;lorawan.c: 1163: };lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 12344  0001B4  0102               	movlb	2	; () banked
 12345  0001B6  5107               	movf	(_loRa+2)& (0+255),w,b
 12346  0001B8  0B0F               	andlw	15
 12347  0001BA  0A03               	xorlw	3
 12348  0001BC  A4D8               	btfss	status,2,c
 12349  0001BE  D003               	goto	l20260
 12350                           
 12351                           ; BSR set to: 2
 12352                           ;lorawan.c: 1167: {;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 12353  0001C0  51E8               	movf	(_loRa+227)& (0+255),w,b
 12354  0001C2  EC18  F052         	call	_SwTimerStop
 12355  0001C6                     l20260:
 12356                           
 12357                           ;lorawan.c: 1169: };lorawan.c: 1171: JoinAccept_t *joinAccept;;lorawan.c: 1172: joinAcce
      +                          pt = (JoinAccept_t*)buffer;
 12358  0001C6  C1DA  F0EF         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 12359  0001CA  C1DB  F0F0         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 12360                           
 12361                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 12362  0001CE  0100               	movlb	0	; () banked
 12363  0001D0  EE20 F007          	lfsr	2,7
 12364  0001D4  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12365  0001D6  26D9               	addwf	fsr2l,f,c
 12366  0001D8  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12367  0001DA  22DA               	addwfc	fsr2h,f,c
 12368  0001DC  CFDE F223          	movff	postinc2,_loRa+30
 12369  0001E0  CFDE F224          	movff	postinc2,_loRa+31
 12370  0001E4  CFDE F225          	movff	postinc2,_loRa+32
 12371  0001E8  CFDE F226          	movff	postinc2,_loRa+33
 12372                           
 12373                           ; BSR set to: 0
 12374                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 12375  0001EC  EE20 F00C          	lfsr	2,12
 12376  0001F0  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12377  0001F2  26D9               	addwf	fsr2l,f,c
 12378  0001F4  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12379  0001F6  22DA               	addwfc	fsr2h,f,c
 12380  0001F8  50DF               	movf	indf2,w,c
 12381  0001FA  0B0F               	andlw	15
 12382  0001FC  ECE4  F04C         	call	_UpdateReceiveDelays
 12383                           
 12384                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 12385  000200  0100               	movlb	0	; () banked
 12386  000202  EE20 F00B          	lfsr	2,11
 12387  000206  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12388  000208  26D9               	addwf	fsr2l,f,c
 12389  00020A  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12390  00020C  22DA               	addwfc	fsr2h,f,c
 12391  00020E  38DF               	swapf	223,w,c
 12392  000210  0B07               	andlw	7
 12393  000212  6F60               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12394  000214  EE20 F00B          	lfsr	2,11
 12395  000218  51EF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 12396  00021A  26D9               	addwf	fsr2l,f,c
 12397  00021C  51F0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 12398  00021E  22DA               	addwfc	fsr2h,f,c
 12399  000220  50DF               	movf	223,w,c
 12400  000222  0B0F               	andlw	15
 12401  000224  ECD0  F052         	call	_UpdateDLSettings
 12402                           
 12403                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 12404  000228  C0EF  F09E         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 12405  00022C  C0F0  F09F         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 12406  000230  0101               	movlb	1	; () banked
 12407  000232  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12408  000234  EC94  F020         	call	_UpdateCfList
 12409                           
 12410                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 12411  000238  C0EF  F092         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 12412  00023C  C0F0  F093         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 12413  000240  EC54  F042         	call	_ComputeSessionKeys	;wreg free
 12414                           
 12415                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 12416  000244  0E00               	movlw	0
 12417  000246  6EE6               	movwf	postinc1,c
 12418  000248  EC27  F02D         	call	_UpdateJoinSuccessState	;wreg free
 12419                           
 12420                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 12421  00024C  0E00               	movlw	0
 12422  00024E  0102               	movlb	2	; () banked
 12423  000250  6F0B               	movwf	(_loRa+6)& (0+255),b
 12424  000252  0E00               	movlw	0
 12425  000254  6F0C               	movwf	(_loRa+7)& (0+255),b
 12426  000256  0E00               	movlw	0
 12427  000258  6F0D               	movwf	(_loRa+8)& (0+255),b
 12428  00025A  0E00               	movlw	0
 12429  00025C  6F0E               	movwf	(_loRa+9)& (0+255),b
 12430                           
 12431                           ; BSR set to: 2
 12432                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 12433  00025E  0E00               	movlw	0
 12434  000260  6F0F               	movwf	(_loRa+10)& (0+255),b
 12435  000262  0E00               	movlw	0
 12436  000264  6F10               	movwf	(_loRa+11)& (0+255),b
 12437  000266  0E00               	movlw	0
 12438  000268  6F11               	movwf	(_loRa+12)& (0+255),b
 12439  00026A  0E00               	movlw	0
 12440  00026C  6F12               	movwf	(_loRa+13)& (0+255),b
 12441  00026E  0012               	return	
 12442  000270                     l20282:
 12443                           
 12444                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 12445  000270  0100               	movlb	0	; () banked
 12446  000272  39E2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12447  000274  32E8               	rrcf	wreg,f,c
 12448  000276  0B07               	andlw	7
 12449  000278  0A03               	xorlw	3
 12450  00027A  B4D8               	btfsc	status,2,c
 12451  00027C  D007               	goto	u22250
 12452                           
 12453                           ; BSR set to: 0
 12454  00027E  39E2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 12455  000280  32E8               	rrcf	wreg,f,c
 12456  000282  0B07               	andlw	7
 12457  000284  0A05               	xorlw	5
 12458  000286  A4D8               	btfss	status,2,c
 12459  000288  EFB6  F005         	goto	l20618
 12460  00028C                     u22250:
 12461                           
 12462                           ; BSR set to: 0
 12463                           ;lorawan.c: 1192: {;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 12464  00028C  0E00               	movlw	0
 12465  00028E  0102               	movlb	2	; () banked
 12466  000290  6FAC               	movwf	(_loRa+167)& (0+255),b
 12467                           
 12468                           ; BSR set to: 2
 12469                           ;lorawan.c: 1195: Hdr_t *hdr;;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 12470  000292  C1DA  F0F2         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 12471  000296  C1DB  F0F3         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 12472                           
 12473                           ; BSR set to: 2
 12474                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 12475  00029A  0E02               	movlw	2
 12476  00029C  1917               	xorwf	(_loRa+18)& (0+255),w,b
 12477  00029E  A4D8               	btfss	status,2,c
 12478  0002A0  D1AA               	goto	l20408
 12479                           
 12480                           ; BSR set to: 2
 12481  0002A2  0100               	movlb	0	; () banked
 12482  0002A4  EE20 F001          	lfsr	2,1
 12483  0002A8  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12484  0002AA  26D9               	addwf	fsr2l,f,c
 12485  0002AC  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12486  0002AE  22DA               	addwfc	fsr2h,f,c
 12487  0002B0  0102               	movlb	2	; () banked
 12488  0002B2  5167               	movf	(_loRa+98)& (0+255),w,b
 12489  0002B4  18DE               	xorwf	postinc2,w,c
 12490  0002B6  E109               	bnz	u22271
 12491  0002B8  5168               	movf	(_loRa+99)& (0+255),w,b
 12492  0002BA  18DE               	xorwf	postinc2,w,c
 12493  0002BC  E106               	bnz	u22271
 12494  0002BE  5169               	movf	(_loRa+100)& (0+255),w,b
 12495  0002C0  18DE               	xorwf	postinc2,w,c
 12496  0002C2  E103               	bnz	u22271
 12497  0002C4  516A               	movf	(_loRa+101)& (0+255),w,b
 12498  0002C6  18DE               	xorwf	postinc2,w,c
 12499  0002C8  A4D8               	btfss	status,2,c
 12500  0002CA                     u22271:
 12501  0002CA  D195               	goto	l20408
 12502                           
 12503                           ; BSR set to: 2
 12504  0002CC  A509               	btfss	(_loRa+4)& (0+255),2,b
 12505  0002CE  D193               	goto	l20408
 12506                           
 12507                           ; BSR set to: 2
 12508                           ;lorawan.c: 1200: {;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 12509  0002D0  C0F2  F060         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 12510  0002D4  C0F3  F061         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 12511  0002D8  ECDB  F043         	call	_CheckMcastFlags	;wreg free
 12512  0002DC  0900               	iorlw	0
 12513  0002DE  A4D8               	btfss	status,2,c
 12514  0002E0  D008               	goto	l20304
 12515  0002E2                     u22290:
 12516  0002E2                     l20298:
 12517                           
 12518                           ;lorawan.c: 1203: {;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12519  0002E2  0102               	movlb	2	; () banked
 12520  0002E4  5107               	movf	(_loRa+2)& (0+255),w,b
 12521  0002E6  0BF0               	andlw	-16
 12522  0002E8  0909               	iorlw	9
 12523  0002EA  6F07               	movwf	(_loRa+2)& (0+255),b
 12524                           
 12525                           ; BSR set to: 2
 12526                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 12527  0002EC  EC18  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12528  0002F0  0012               	return	
 12529  0002F2                     l20304:
 12530                           
 12531                           ;lorawan.c: 1207: };lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, buff
      +                          erLength - sizeof (computedMic), 0x49, 1);
 12532  0002F2  0100               	movlb	0	; () banked
 12533  0002F4  EE20 F006          	lfsr	2,6
 12534  0002F8  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12535  0002FA  26D9               	addwf	fsr2l,f,c
 12536  0002FC  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12537  0002FE  22DA               	addwfc	fsr2h,f,c
 12538  000300  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 12539  000304  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 12540  000308  C0DB  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 12541  00030C  C0DC  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 12542  000310  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 12543  000312  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 12544  000314  0101               	movlb	1	; () banked
 12545  000316  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12546  000318  0FFC               	addlw	252
 12547  00031A  0100               	movlb	0	; () banked
 12548  00031C  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 12549  00031E  0E49               	movlw	73
 12550  000320  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 12551  000322  0E01               	movlw	1
 12552  000324  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 12553  000326  0E01               	movlw	1
 12554  000328  EC0A  F03B         	call	_AssembleEncryptionBlock
 12555                           
 12556                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 12557  00032C  0EC7               	movlw	low _radioBuffer
 12558  00032E  0100               	movlb	0	; () banked
 12559  000330  6F60               	movwf	memcpy@d1& (0+255),b
 12560  000332  0E07               	movlw	high _radioBuffer
 12561  000334  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12562  000336  0E5F               	movlw	low _aesBuffer
 12563  000338  6F62               	movwf	memcpy@s1& (0+255),b
 12564  00033A  0E01               	movlw	high _aesBuffer
 12565  00033C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12566  00033E  0E00               	movlw	0
 12567  000340  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12568  000342  0E10               	movlw	16
 12569  000344  6F64               	movwf	memcpy@n& (0+255),b
 12570  000346  EC2F  F048         	call	_memcpy	;wreg free
 12571                           
 12572                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 12573  00034A  0ED7               	movlw	low (_radioBuffer+16)
 12574  00034C  0100               	movlb	0	; () banked
 12575  00034E  6F60               	movwf	memcpy@d1& (0+255),b
 12576  000350  0E07               	movlw	high (_radioBuffer+16)
 12577  000352  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12578  000354  C1DA  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 12579  000358  C1DB  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 12580  00035C  0EFC               	movlw	252
 12581  00035E  0101               	movlb	1	; () banked
 12582  000360  25DC               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12583  000362  0100               	movlb	0	; () banked
 12584  000364  6F64               	movwf	memcpy@n& (0+255),b
 12585  000366  6B65               	clrf	(memcpy@n+1)& (0+255),b
 12586  000368  0EFF               	movlw	255
 12587  00036A  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 12588  00036C  EC2F  F048         	call	_memcpy	;wreg free
 12589                           
 12590                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 12591  000370  0E6B               	movlw	low (_loRa+102)
 12592  000372  0100               	movlb	0	; () banked
 12593  000374  6FBA               	movwf	AESCmac@key& (0+255),b
 12594  000376  0E02               	movlw	high (_loRa+102)
 12595  000378  6FBB               	movwf	(AESCmac@key+1)& (0+255),b
 12596  00037A  0E5F               	movlw	low _aesBuffer
 12597  00037C  6FBC               	movwf	AESCmac@output& (0+255),b
 12598  00037E  0E01               	movlw	high _aesBuffer
 12599  000380  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 12600  000382  0EC7               	movlw	low _radioBuffer
 12601  000384  6FBE               	movwf	AESCmac@input& (0+255),b
 12602  000386  0E07               	movlw	high _radioBuffer
 12603  000388  6FBF               	movwf	(AESCmac@input+1)& (0+255),b
 12604  00038A  0101               	movlb	1	; () banked
 12605  00038C  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12606  00038E  0F0C               	addlw	12
 12607  000390  0100               	movlb	0	; () banked
 12608  000392  6FC0               	movwf	AESCmac@size& (0+255),b
 12609  000394  ECAD  F00D         	call	_AESCmac	;wreg free
 12610                           
 12611                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 12612  000398  0EEB               	movlw	low LORAWAN_RxDone@computedMic
 12613  00039A  0100               	movlb	0	; () banked
 12614  00039C  6F60               	movwf	memcpy@d1& (0+255),b
 12615  00039E  0E00               	movlw	high LORAWAN_RxDone@computedMic
 12616  0003A0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12617  0003A2  0E5F               	movlw	low _aesBuffer
 12618  0003A4  6F62               	movwf	memcpy@s1& (0+255),b
 12619  0003A6  0E01               	movlw	high _aesBuffer
 12620  0003A8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 12621  0003AA  0E00               	movlw	0
 12622  0003AC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12623  0003AE  0E04               	movlw	4
 12624  0003B0  6F64               	movwf	memcpy@n& (0+255),b
 12625  0003B2  EC2F  F048         	call	_memcpy	;wreg free
 12626                           
 12627                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 12628  0003B6  C1DA  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12629  0003BA  C1DB  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12630  0003BE  C1DC  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12631  0003C2  EC0C  F04B         	call	_ExtractMic	;wreg free
 12632  0003C6  C06B  F0E3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12633  0003CA  C06C  F0E4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12634  0003CE  C06D  F0E5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12635  0003D2  C06E  F0E6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12636                           
 12637                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 12638  0003D6  0100               	movlb	0	; () banked
 12639  0003D8  51E3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12640  0003DA  19EB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12641  0003DC  E182               	bnz	l20298
 12642  0003DE  51E4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12643  0003E0  19EC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12644  0003E2  E108               	bnz	u22300
 12645  0003E4  51E5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12646  0003E6  19ED               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12647  0003E8  E105               	bnz	u22300
 12648  0003EA  51E6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12649  0003EC  19EE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12650  0003EE  A4D8               	btfss	status,2,c
 12651  0003F0  D778               	goto	u22290
 12652  0003F2  D001               	goto	l20320
 12653  0003F4                     u22300:
 12654  0003F4  D776               	goto	u22290
 12655  0003F6                     l20320:
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;lorawan.c: 1222: };lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members
      +                          .valueLow)
 12659  0003F6  EE20 F006          	lfsr	2,6
 12660  0003FA  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12661  0003FC  26D9               	addwf	fsr2l,f,c
 12662  0003FE  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12663  000400  22DA               	addwfc	fsr2h,f,c
 12664  000402  0102               	movlb	2	; () banked
 12665  000404  5113               	movf	(_loRa+14)& (0+255),w,b
 12666  000406  5CDE               	subwf	postinc2,w,c
 12667  000408  5114               	movf	(_loRa+15)& (0+255),w,b
 12668  00040A  58DE               	subwfb	postinc2,w,c
 12669  00040C  A0D8               	btfss	status,0,c
 12670  00040E  D03B               	goto	l20338
 12671                           
 12672                           ; BSR set to: 2
 12673                           ;lorawan.c: 1225: {;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.member
      +                          s.valueLow) > loRa.protocolParameters.maxMultiFcntGap )
 12674  000410  0100               	movlb	0	; () banked
 12675  000412  EE20 F006          	lfsr	2,6
 12676  000416  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12677  000418  26D9               	addwf	fsr2l,f,c
 12678  00041A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12679  00041C  22DA               	addwfc	fsr2h,f,c
 12680  00041E  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 12681  000422  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 12682  000426  0102               	movlb	2	; () banked
 12683  000428  5113               	movf	(_loRa+14)& (0+255),w,b
 12684  00042A  0100               	movlb	0	; () banked
 12685  00042C  5FDB               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 12686  00042E  0102               	movlb	2	; () banked
 12687  000430  5114               	movf	(_loRa+15)& (0+255),w,b
 12688  000432  0100               	movlb	0	; () banked
 12689  000434  5BDC               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 12690  000436  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12691  000438  0102               	movlb	2	; () banked
 12692  00043A  5DA3               	subwf	(_loRa+158)& (0+255),w,b
 12693  00043C  0100               	movlb	0	; () banked
 12694  00043E  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12695  000440  0102               	movlb	2	; () banked
 12696  000442  59A4               	subwfb	(_loRa+159)& (0+255),w,b
 12697  000444  B0D8               	btfsc	status,0,c
 12698  000446  D013               	goto	l20336
 12699                           
 12700                           ; BSR set to: 2
 12701                           ;lorawan.c: 1227: {;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 12702  000448  0101               	movlb	1	; () banked
 12703  00044A  510E               	movf	_rxPayload& (0+255),w,b
 12704  00044C  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12705  00044E  B4D8               	btfsc	status,2,c
 12706  000450  D748               	goto	u22290
 12707  000452                     u22330:
 12708                           
 12709                           ; BSR set to: 1
 12710                           ;lorawan.c: 1229: {;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED
      +                          );
 12711  000452  0E00               	movlw	0
 12712  000454  0100               	movlb	0	; () banked
 12713  000456  6F60               	movwf	RxData@pData& (0+255),b
 12714  000458  0E00               	movlw	0
 12715  00045A  6F61               	movwf	(RxData@pData+1)& (0+255),b
 12716  00045C  0E00               	movlw	0
 12717  00045E  6F62               	movwf	RxData@dataLength& (0+255),b
 12718  000460  0E05               	movlw	5
 12719  000462  6F63               	movwf	RxData@status& (0+255),b
 12720  000464  D801               	call	u22348
 12721  000466  D73D               	goto	u22290
 12722  000468                     u22348:
 12723  000468  0005               	push	
 12724  00046A  6EFA               	movwf	pclath,c
 12725  00046C  D0BC               	goto	L16
 12726  00046E                     l20336:
 12727                           
 12728                           ; BSR set to: 2
 12729                           ;lorawan.c: 1237: else;lorawan.c: 1238: {;lorawan.c: 1239: loRa.fMcastCntDown.members.va
      +                          lueLow = hdr->members.fCnt;
 12730  00046E  0100               	movlb	0	; () banked
 12731  000470  EE20 F006          	lfsr	2,6
 12732  000474  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12733  000476  26D9               	addwf	fsr2l,f,c
 12734  000478  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12735  00047A  22DA               	addwfc	fsr2h,f,c
 12736  00047C  CFDE F213          	movff	postinc2,_loRa+14
 12737  000480  CFDD F214          	movff	postdec2,_loRa+15
 12738  000484  D01E               	goto	l20356
 12739  000486                     l20338:
 12740                           
 12741                           ; BSR set to: 2
 12742                           ;lorawan.c: 1242: else;lorawan.c: 1243: {;lorawan.c: 1244: if ( (0 == hdr->members.fCnt)
      +                           && (0xFFFF == loRa.fMcastCntDown.members.valueLow) )
 12743  000486  0100               	movlb	0	; () banked
 12744  000488  EE20 F006          	lfsr	2,6
 12745  00048C  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12746  00048E  26D9               	addwf	fsr2l,f,c
 12747  000490  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12748  000492  22DA               	addwfc	fsr2h,f,c
 12749  000494  50DE               	movf	postinc2,w,c
 12750  000496  10DE               	iorwf	postinc2,w,c
 12751  000498  A4D8               	btfss	status,2,c
 12752  00049A  D00D               	goto	l20346
 12753                           
 12754                           ; BSR set to: 0
 12755  00049C  0102               	movlb	2	; () banked
 12756  00049E  2913               	incf	(_loRa+14)& (0+255),w,b
 12757  0004A0  E10A               	bnz	l20346
 12758  0004A2  2914               	incf	(_loRa+15)& (0+255),w,b
 12759  0004A4  A4D8               	btfss	status,2,c
 12760  0004A6  D007               	goto	l20346
 12761                           
 12762                           ; BSR set to: 2
 12763                           ;lorawan.c: 1245: {;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 12764  0004A8  0E00               	movlw	0
 12765  0004AA  6F14               	movwf	(_loRa+15)& (0+255),b
 12766  0004AC  0E00               	movlw	0
 12767  0004AE  6F13               	movwf	(_loRa+14)& (0+255),b
 12768                           
 12769                           ; BSR set to: 2
 12770                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 12771  0004B0  4B15               	infsnz	(_loRa+16)& (0+255),f,b
 12772  0004B2  2B16               	incf	(_loRa+17)& (0+255),f,b
 12773                           
 12774                           ;lorawan.c: 1248: }
 12775  0004B4  D006               	goto	l20356
 12776  0004B6                     l20346:
 12777                           
 12778                           ;lorawan.c: 1249: else;lorawan.c: 1250: {;lorawan.c: 1251: if (rxPayload.RxAppData != (0
      +                          ))
 12779  0004B6  0101               	movlb	1	; () banked
 12780  0004B8  510E               	movf	_rxPayload& (0+255),w,b
 12781  0004BA  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12782  0004BC  A4D8               	btfss	status,2,c
 12783  0004BE  D7C9               	goto	u22330
 12784  0004C0  D710               	goto	u22290
 12785  0004C2                     l20356:
 12786                           
 12787                           ;lorawan.c: 1259: };lorawan.c: 1260: };lorawan.c: 1262: if (loRa.fMcastCntDown.value == 
      +                          (4294967295UL))
 12788  0004C2  0102               	movlb	2	; () banked
 12789  0004C4  2913               	incf	(_loRa+14)& (0+255),w,b
 12790  0004C6  E107               	bnz	l20368
 12791  0004C8  2914               	incf	(_loRa+15)& (0+255),w,b
 12792  0004CA  E105               	bnz	l20368
 12793  0004CC  2915               	incf	(_loRa+16)& (0+255),w,b
 12794  0004CE  E103               	bnz	l20368
 12795  0004D0  2916               	incf	(_loRa+17)& (0+255),w,b
 12796  0004D2  B4D8               	btfsc	status,2,c
 12797  0004D4  D7F0               	goto	l20346
 12798  0004D6                     l20368:
 12799                           
 12800                           ; BSR set to: 2
 12801                           ;lorawan.c: 1272: };lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 12802  0004D6  5107               	movf	(_loRa+2)& (0+255),w,b
 12803  0004D8  0B0F               	andlw	15
 12804  0004DA  0A08               	xorlw	8
 12805  0004DC  A4D8               	btfss	status,2,c
 12806  0004DE  D008               	goto	l20372
 12807                           
 12808                           ; BSR set to: 2
 12809                           ;lorawan.c: 1275: {;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 12810  0004E0  51E9               	movf	(_loRa+228)& (0+255),w,b
 12811  0004E2  EC18  F052         	call	_SwTimerStop
 12812                           
 12813                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 12814  0004E6  0102               	movlb	2	; () banked
 12815  0004E8  51EA               	movf	(_loRa+229)& (0+255),w,b
 12816  0004EA  EC18  F052         	call	_SwTimerStop
 12817                           
 12818                           ;lorawan.c: 1278: }
 12819  0004EE  D008               	goto	l20376
 12820  0004F0                     l20372:
 12821                           
 12822                           ; BSR set to: 2
 12823                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 12824  0004F0  5107               	movf	(_loRa+2)& (0+255),w,b
 12825  0004F2  0B0F               	andlw	15
 12826  0004F4  0A03               	xorlw	3
 12827  0004F6  A4D8               	btfss	status,2,c
 12828  0004F8  D003               	goto	l20376
 12829                           
 12830                           ; BSR set to: 2
 12831                           ;lorawan.c: 1280: {;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 12832  0004FA  51EA               	movf	(_loRa+229)& (0+255),w,b
 12833  0004FC  EC18  F052         	call	_SwTimerStop
 12834  000500                     l20376:
 12835                           
 12836                           ;lorawan.c: 1282: };lorawan.c: 1284: buffer = buffer + 8;
 12837  000500  0E08               	movlw	8
 12838  000502  0101               	movlb	1	; () banked
 12839  000504  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12840  000506  6FDA               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 12841  000508  0E00               	movlw	0
 12842  00050A  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12843  00050C  6FDB               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 12844                           
 12845                           ; BSR set to: 1
 12846                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 12847  00050E  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12848  000510  0100               	movlb	0	; () banked
 12849  000512  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 12850  000514  6BDC               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12851  000516  EE20 F005          	lfsr	2,5
 12852  00051A  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12853  00051C  26D9               	addwf	fsr2l,f,c
 12854  00051E  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12855  000520  22DA               	addwfc	fsr2h,f,c
 12856  000522  50DF               	movf	223,w,c
 12857  000524  0B0F               	andlw	15
 12858  000526  6FDD               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12859  000528  6BDE               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12860  00052A  0E0C               	movlw	12
 12861  00052C  27DD               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12862  00052E  0E00               	movlw	0
 12863  000530  23DE               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12864  000532  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12865  000534  19DD               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12866  000536  E104               	bnz	u22420
 12867  000538  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12868  00053A  19DE               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12869  00053C  B4D8               	btfsc	status,2,c
 12870  00053E  D037               	goto	l20392
 12871  000540                     u22420:
 12872                           
 12873                           ; BSR set to: 0
 12874                           ;lorawan.c: 1287: {;lorawan.c: 1288: fPort = *(buffer++);
 12875  000540  C1DA  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12876  000544  C1DB  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12877  000548  50DF               	movf	indf2,w,c
 12878  00054A  6FE0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 12879                           
 12880                           ; BSR set to: 0
 12881  00054C  0101               	movlb	1	; () banked
 12882  00054E  4BDA               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 12883  000550  2BDB               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 12884                           
 12885                           ; BSR set to: 1
 12886                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 12887  000552  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12888  000554  0FF4               	addlw	244
 12889  000556  0100               	movlb	0	; () banked
 12890  000558  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 12894  00055A  0E19               	movlw	25
 12895  00055C  6FE7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 12896                           
 12897                           ; BSR set to: 0
 12898                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 12899  00055E  C1DA  F092         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 12900  000562  C1DB  F093         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 12901  000566  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12902  000568  6F94               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 12903  00056A  0E01               	movlw	1
 12904  00056C  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 12905  00056E  C213  F096         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 12906  000572  C214  F097         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 12907  000576  C215  F098         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 12908  00057A  C216  F099         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 12909  00057E  0E7B               	movlw	low (_loRa+118)
 12910  000580  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 12911  000582  0E02               	movlw	high (_loRa+118)
 12912  000584  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 12913  000586  C0E7  F09C         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 12914  00058A  0EC7               	movlw	low _radioBuffer
 12915  00058C  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 12916  00058E  0E07               	movlw	high _radioBuffer
 12917  000590  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 12918  000592  0E01               	movlw	1
 12919  000594  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 12920  000596  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 12921                           
 12922                           ;lorawan.c: 1294: packet = buffer - 1;
 12923  00059A  0EFF               	movlw	255
 12924  00059C  0101               	movlb	1	; () banked
 12925  00059E  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12926  0005A0  0100               	movlb	0	; () banked
 12927  0005A2  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12928  0005A4  0EFF               	movlw	255
 12929  0005A6  0101               	movlb	1	; () banked
 12930  0005A8  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12931  0005AA  0100               	movlb	0	; () banked
 12932  0005AC  D005               	goto	L14
 12933  0005AE                     l20392:
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;lorawan.c: 1296: else;lorawan.c: 1297: {;lorawan.c: 1298: frmPayloadLength = 0;
 12937  0005AE  0E00               	movlw	0
 12938  0005B0  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12939                           
 12940                           ; BSR set to: 0
 12941                           ;lorawan.c: 1299: packet = (0);
 12942  0005B2  0E00               	movlw	0
 12943  0005B4  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12944  0005B6  0E00               	movlw	0
 12945  0005B8                     L14:
 12946  0005B8  6FEA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;lorawan.c: 1300: };lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 12950  0005BA  0102               	movlb	2	; () banked
 12951  0005BC  8308               	bsf	(_loRa+3)& (0+255),1,b
 12952                           
 12953                           ; BSR set to: 2
 12954                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 12955  0005BE  0EF0               	movlw	-16
 12956  0005C0  1707               	andwf	(_loRa+2)& (0+255),f,b
 12957                           
 12958                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 12959  0005C2  0101               	movlb	1	; () banked
 12960  0005C4  510E               	movf	_rxPayload& (0+255),w,b
 12961  0005C6  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 12962  0005C8  B4D8               	btfsc	status,2,c
 12963  0005CA  D68B               	goto	u22290
 12964                           
 12965                           ; BSR set to: 1
 12966                           ;lorawan.c: 1306: {;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_
      +                          OK);
 12967  0005CC  C0E9  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 12968  0005D0  C0EA  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 12969  0005D4  C0F1  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 12970  0005D8  0E01               	movlw	1
 12971  0005DA  0100               	movlb	0	; () banked
 12972  0005DC  6F63               	movwf	RxData@status& (0+255),b
 12973  0005DE  D801               	call	u22448
 12974  0005E0  D680               	goto	u22290
 12975  0005E2                     u22448:
 12976  0005E2  0005               	push	
 12977  0005E4  6EFA               	movwf	pclath,c
 12978  0005E6                     L16:
 12979  0005E6  0101               	movlb	1	; () banked
 12980  0005E8  510E               	movf	_rxPayload& (0+255),w,b
 12981  0005EA  6EFD               	movwf	tosl,c
 12982  0005EC  510F               	movf	(_rxPayload+1)& (0+255),w,b
 12983  0005EE  6EFE               	movwf	tosh,c
 12984  0005F0  6AFF               	clrf	tosu,c
 12985  0005F2  50FA               	movf	pclath,w,c
 12986  0005F4  0012               	return		;indir
 12987  0005F6                     l20408:
 12988                           
 12989                           ; BSR set to: 2
 12990                           ;lorawan.c: 1313: };lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationPa
      +                          rameters.deviceAddress.value)
 12991  0005F6  0100               	movlb	0	; () banked
 12992  0005F8  EE20 F001          	lfsr	2,1
 12993  0005FC  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12994  0005FE  26D9               	addwf	fsr2l,f,c
 12995  000600  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12996  000602  22DA               	addwfc	fsr2h,f,c
 12997  000604  0102               	movlb	2	; () banked
 12998  000606  5123               	movf	(_loRa+30)& (0+255),w,b
 12999  000608  18DE               	xorwf	postinc2,w,c
 13000  00060A  E10A               	bnz	u22450
 13001  00060C  5124               	movf	(_loRa+31)& (0+255),w,b
 13002  00060E  18DE               	xorwf	postinc2,w,c
 13003  000610  E107               	bnz	u22450
 13004  000612  5125               	movf	(_loRa+32)& (0+255),w,b
 13005  000614  18DE               	xorwf	postinc2,w,c
 13006  000616  E104               	bnz	u22450
 13007  000618  5126               	movf	(_loRa+33)& (0+255),w,b
 13008  00061A  18DE               	xorwf	postinc2,w,c
 13009  00061C  B4D8               	btfsc	status,2,c
 13010  00061E  D008               	goto	l20420
 13011  000620                     u22450:
 13012                           
 13013                           ; BSR set to: 2
 13014                           ;lorawan.c: 1317: {;lorawan.c: 1318: SetReceptionNotOkState();
 13015  000620  EC9E  F043         	call	_SetReceptionNotOkState	;wreg free
 13016  000624                     l20412:
 13017                           
 13018                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 13019  000624  0E02               	movlw	2
 13020  000626  0102               	movlb	2	; () banked
 13021  000628                     L17:
 13022  000628  1917               	xorwf	(_loRa+18)& (0+255),w,b
 13023  00062A  A4D8               	btfss	status,2,c
 13024  00062C  0012               	return	
 13025  00062E  D659               	goto	u22290
 13026  000630                     l20420:
 13027                           
 13028                           ; BSR set to: 2
 13029                           ;lorawan.c: 1325: };lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, buff
      +                          erLength - sizeof (computedMic), 0x49, 0);
 13030  000630  0100               	movlb	0	; () banked
 13031  000632  EE20 F006          	lfsr	2,6
 13032  000636  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13033  000638  26D9               	addwf	fsr2l,f,c
 13034  00063A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13035  00063C  22DA               	addwfc	fsr2h,f,c
 13036  00063E  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 13037  000642  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 13038  000646  C0DB  F06B         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 13039  00064A  C0DC  F06C         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 13040  00064E  6B6D               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 13041  000650  6B6E               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 13042  000652  0101               	movlb	1	; () banked
 13043  000654  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13044  000656  0FFC               	addlw	252
 13045  000658  0100               	movlb	0	; () banked
 13046  00065A  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 13047  00065C  0E49               	movlw	73
 13048  00065E  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 13049  000660  0E00               	movlw	0
 13050  000662  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 13051  000664  0E01               	movlw	1
 13052  000666  EC0A  F03B         	call	_AssembleEncryptionBlock
 13053                           
 13054                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 13055  00066A  0EC7               	movlw	low _radioBuffer
 13056  00066C  0100               	movlb	0	; () banked
 13057  00066E  6F60               	movwf	memcpy@d1& (0+255),b
 13058  000670  0E07               	movlw	high _radioBuffer
 13059  000672  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13060  000674  0E5F               	movlw	low _aesBuffer
 13061  000676  6F62               	movwf	memcpy@s1& (0+255),b
 13062  000678  0E01               	movlw	high _aesBuffer
 13063  00067A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13064  00067C  0E00               	movlw	0
 13065  00067E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13066  000680  0E10               	movlw	16
 13067  000682  6F64               	movwf	memcpy@n& (0+255),b
 13068  000684  EC2F  F048         	call	_memcpy	;wreg free
 13069                           
 13070                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 13071  000688  0ED7               	movlw	low (_radioBuffer+16)
 13072  00068A  0100               	movlb	0	; () banked
 13073  00068C  6F60               	movwf	memcpy@d1& (0+255),b
 13074  00068E  0E07               	movlw	high (_radioBuffer+16)
 13075  000690  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13076  000692  C1DA  F062         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 13077  000696  C1DB  F063         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 13078  00069A  0EFC               	movlw	252
 13079  00069C  0101               	movlb	1	; () banked
 13080  00069E  25DC               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13081  0006A0  0100               	movlb	0	; () banked
 13082  0006A2  6F64               	movwf	memcpy@n& (0+255),b
 13083  0006A4  6B65               	clrf	(memcpy@n+1)& (0+255),b
 13084  0006A6  0EFF               	movlw	255
 13085  0006A8  2365               	addwfc	(memcpy@n+1)& (0+255),f,b
 13086  0006AA  EC2F  F048         	call	_memcpy	;wreg free
 13087                           
 13088                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 13089  0006AE  0E27               	movlw	low (_loRa+34)
 13090  0006B0  0100               	movlb	0	; () banked
 13091  0006B2  6FBA               	movwf	AESCmac@key& (0+255),b
 13092  0006B4  0E02               	movlw	high (_loRa+34)
 13093  0006B6  6FBB               	movwf	(AESCmac@key+1)& (0+255),b
 13094  0006B8  0E5F               	movlw	low _aesBuffer
 13095  0006BA  6FBC               	movwf	AESCmac@output& (0+255),b
 13096  0006BC  0E01               	movlw	high _aesBuffer
 13097  0006BE  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 13098  0006C0  0EC7               	movlw	low _radioBuffer
 13099  0006C2  6FBE               	movwf	AESCmac@input& (0+255),b
 13100  0006C4  0E07               	movlw	high _radioBuffer
 13101  0006C6  6FBF               	movwf	(AESCmac@input+1)& (0+255),b
 13102  0006C8  0101               	movlb	1	; () banked
 13103  0006CA  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13104  0006CC  0F0C               	addlw	12
 13105  0006CE  0100               	movlb	0	; () banked
 13106  0006D0  6FC0               	movwf	AESCmac@size& (0+255),b
 13107  0006D2  ECAD  F00D         	call	_AESCmac	;wreg free
 13108                           
 13109                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 13110  0006D6  0EEB               	movlw	low LORAWAN_RxDone@computedMic
 13111  0006D8  0100               	movlb	0	; () banked
 13112  0006DA  6F60               	movwf	memcpy@d1& (0+255),b
 13113  0006DC  0E00               	movlw	high LORAWAN_RxDone@computedMic
 13114  0006DE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13115  0006E0  0E5F               	movlw	low _aesBuffer
 13116  0006E2  6F62               	movwf	memcpy@s1& (0+255),b
 13117  0006E4  0E01               	movlw	high _aesBuffer
 13118  0006E6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 13119  0006E8  0E00               	movlw	0
 13120  0006EA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13121  0006EC  0E04               	movlw	4
 13122  0006EE  6F64               	movwf	memcpy@n& (0+255),b
 13123  0006F0  EC2F  F048         	call	_memcpy	;wreg free
 13124                           
 13125                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 13126  0006F4  C1DA  F06B         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 13127  0006F8  C1DB  F06C         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 13128  0006FC  C1DC  F06D         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 13129  000700  EC0C  F04B         	call	_ExtractMic	;wreg free
 13130  000704  C06B  F0E3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 13131  000708  C06C  F0E4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 13132  00070C  C06D  F0E5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 13133  000710  C06E  F0E6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 13134                           
 13135                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 13136  000714  0100               	movlb	0	; () banked
 13137  000716  51E3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 13138  000718  19EB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 13139  00071A  E10A               	bnz	u22470
 13140  00071C  51E4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 13141  00071E  19EC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 13142  000720  E107               	bnz	u22470
 13143  000722  51E5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 13144  000724  19ED               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 13145  000726  E104               	bnz	u22470
 13146  000728  51E6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 13147  00072A  19EE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 13148  00072C  B4D8               	btfsc	status,2,c
 13149  00072E  D003               	goto	l20440
 13150  000730                     u22470:
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;lorawan.c: 1337: {;lorawan.c: 1338: SetReceptionNotOkState();
 13154  000730  EC9E  F043         	call	_SetReceptionNotOkState	;wreg free
 13155  000734  D777               	goto	l20412
 13156  000736                     l20440:
 13157                           
 13158                           ; BSR set to: 0
 13159                           ;lorawan.c: 1345: };lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valu
      +                          eLow)
 13160  000736  EE20 F006          	lfsr	2,6
 13161  00073A  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13162  00073C  26D9               	addwf	fsr2l,f,c
 13163  00073E  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13164  000740  22DA               	addwfc	fsr2h,f,c
 13165  000742  0102               	movlb	2	; () banked
 13166  000744  510F               	movf	(_loRa+10)& (0+255),w,b
 13167  000746  5CDE               	subwf	postinc2,w,c
 13168  000748  5110               	movf	(_loRa+11)& (0+255),w,b
 13169  00074A  58DE               	subwfb	postinc2,w,c
 13170  00074C  A0D8               	btfss	status,0,c
 13171  00074E  D04A               	goto	l20470
 13172                           
 13173                           ; BSR set to: 2
 13174                           ;lorawan.c: 1349: {;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valu
      +                          eLow) > loRa.protocolParameters.maxFcntGap)
 13175  000750  0100               	movlb	0	; () banked
 13176  000752  EE20 F006          	lfsr	2,6
 13177  000756  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13178  000758  26D9               	addwf	fsr2l,f,c
 13179  00075A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13180  00075C  22DA               	addwfc	fsr2h,f,c
 13181  00075E  CFDE F0DB          	movff	postinc2,??_LORAWAN_RxDone
 13182  000762  CFDD F0DC          	movff	postdec2,??_LORAWAN_RxDone+1
 13183  000766  0102               	movlb	2	; () banked
 13184  000768  510F               	movf	(_loRa+10)& (0+255),w,b
 13185  00076A  0100               	movlb	0	; () banked
 13186  00076C  5FDB               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 13187  00076E  0102               	movlb	2	; () banked
 13188  000770  5110               	movf	(_loRa+11)& (0+255),w,b
 13189  000772  0100               	movlb	0	; () banked
 13190  000774  5BDC               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 13191  000776  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13192  000778  0102               	movlb	2	; () banked
 13193  00077A  5DA1               	subwf	(_loRa+156)& (0+255),w,b
 13194  00077C  0100               	movlb	0	; () banked
 13195  00077E  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13196  000780  0102               	movlb	2	; () banked
 13197  000782  59A2               	subwfb	(_loRa+157)& (0+255),w,b
 13198  000784  B0D8               	btfsc	status,0,c
 13199  000786  D022               	goto	l20468
 13200                           
 13201                           ; BSR set to: 2
 13202                           ;lorawan.c: 1351: {;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 13203  000788  9105               	bcf	_loRa& (0+255),0,b
 13204                           
 13205                           ; BSR set to: 2
 13206                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 13207  00078A  0EF0               	movlw	-16
 13208  00078C  1707               	andwf	(_loRa+2)& (0+255),f,b
 13209                           
 13210                           ; BSR set to: 2
 13211                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 13212  00078E  0101               	movlb	1	; () banked
 13213  000790  510E               	movf	_rxPayload& (0+255),w,b
 13214  000792  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13215  000794  B4D8               	btfsc	status,2,c
 13216  000796  D017               	goto	u22529
 13217                           
 13218                           ; BSR set to: 1
 13219                           ;lorawan.c: 1355: {;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 13220  000798  0102               	movlb	2	; () banked
 13221  00079A  9B05               	bcf	_loRa& (0+255),5,b
 13222                           
 13223                           ; BSR set to: 2
 13224                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13225  00079C  0E00               	movlw	0
 13226  00079E  0100               	movlb	0	; () banked
 13227  0007A0  6F60               	movwf	RxData@pData& (0+255),b
 13228  0007A2  0E00               	movlw	0
 13229  0007A4  6F61               	movwf	(RxData@pData+1)& (0+255),b
 13230  0007A6  0E00               	movlw	0
 13231  0007A8  6F62               	movwf	RxData@dataLength& (0+255),b
 13232  0007AA  0E00               	movlw	0
 13233  0007AC  6F63               	movwf	RxData@status& (0+255),b
 13234  0007AE  D801               	call	u22528
 13235  0007B0  D00A               	goto	u22529
 13236  0007B2                     u22528:
 13237  0007B2  0005               	push	
 13238  0007B4  6EFA               	movwf	pclath,c
 13239  0007B6  0101               	movlb	1	; () banked
 13240  0007B8  510E               	movf	_rxPayload& (0+255),w,b
 13241  0007BA  6EFD               	movwf	tosl,c
 13242  0007BC  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13243  0007BE  6EFE               	movwf	tosh,c
 13244  0007C0  6AFF               	clrf	tosu,c
 13245  0007C2  50FA               	movf	pclath,w,c
 13246  0007C4  0012               	return		;indir
 13247  0007C6                     u22529:
 13248                           
 13249                           ;lorawan.c: 1358: };lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 13250  0007C6  0102               	movlb	2	; () banked
 13251  0007C8  9308               	bcf	(_loRa+3)& (0+255),1,b
 13252  0007CA  D039               	goto	u22570
 13253  0007CC                     l20468:
 13254                           
 13255                           ; BSR set to: 2
 13256                           ;lorawan.c: 1370: else;lorawan.c: 1371: {;lorawan.c: 1372: loRa.fCntDown.members.valueLo
      +                          w = hdr->members.fCnt;
 13257  0007CC  0100               	movlb	0	; () banked
 13258  0007CE  EE20 F006          	lfsr	2,6
 13259  0007D2  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13260  0007D4  26D9               	addwf	fsr2l,f,c
 13261  0007D6  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13262  0007D8  22DA               	addwfc	fsr2h,f,c
 13263  0007DA  CFDE F20F          	movff	postinc2,_loRa+10
 13264  0007DE  CFDD F210          	movff	postdec2,_loRa+11
 13265  0007E2  D023               	goto	l20488
 13266  0007E4                     l20470:
 13267                           
 13268                           ; BSR set to: 2
 13269                           ;lorawan.c: 1375: else;lorawan.c: 1376: {;lorawan.c: 1377: if((hdr->members.fCnt == 0) &
      +                          & (loRa.fCntDown.members.valueLow == 0xFFFF))
 13270  0007E4  0100               	movlb	0	; () banked
 13271  0007E6  EE20 F006          	lfsr	2,6
 13272  0007EA  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13273  0007EC  26D9               	addwf	fsr2l,f,c
 13274  0007EE  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13275  0007F0  22DA               	addwfc	fsr2h,f,c
 13276  0007F2  50DE               	movf	postinc2,w,c
 13277  0007F4  10DE               	iorwf	postinc2,w,c
 13278  0007F6  A4D8               	btfss	status,2,c
 13279  0007F8  D015               	goto	l20478
 13280                           
 13281                           ; BSR set to: 0
 13282  0007FA  0102               	movlb	2	; () banked
 13283  0007FC  290F               	incf	(_loRa+10)& (0+255),w,b
 13284  0007FE  E112               	bnz	l20478
 13285  000800  2910               	incf	(_loRa+11)& (0+255),w,b
 13286  000802  A4D8               	btfss	status,2,c
 13287  000804  D00F               	goto	l20478
 13288                           
 13289                           ; BSR set to: 2
 13290                           ;lorawan.c: 1378: {;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 13291  000806  0100               	movlb	0	; () banked
 13292  000808  EE20 F006          	lfsr	2,6
 13293  00080C  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13294  00080E  26D9               	addwf	fsr2l,f,c
 13295  000810  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13296  000812  22DA               	addwfc	fsr2h,f,c
 13297  000814  CFDE F20F          	movff	postinc2,_loRa+10
 13298  000818  CFDD F210          	movff	postdec2,_loRa+11
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 13302  00081C  0102               	movlb	2	; () banked
 13303  00081E  4B11               	infsnz	(_loRa+12)& (0+255),f,b
 13304  000820  2B12               	incf	(_loRa+13)& (0+255),f,b
 13305                           
 13306                           ;lorawan.c: 1382: }
 13307  000822  D003               	goto	l20488
 13308  000824                     l20478:
 13309                           
 13310                           ;lorawan.c: 1383: else;lorawan.c: 1384: {;lorawan.c: 1385: SetReceptionNotOkState();
 13311  000824  EC9E  F043         	call	_SetReceptionNotOkState	;wreg free
 13312  000828  D6FD               	goto	l20412
 13313  00082A                     l20488:
 13314                           
 13315                           ;lorawan.c: 1393: };lorawan.c: 1394: };lorawan.c: 1396: if (loRa.fCntDown.value == (4294
      +                          967295UL))
 13316  00082A  0102               	movlb	2	; () banked
 13317  00082C  290F               	incf	(_loRa+10)& (0+255),w,b
 13318  00082E  E10A               	bnz	l20500
 13319  000830  2910               	incf	(_loRa+11)& (0+255),w,b
 13320  000832  E108               	bnz	l20500
 13321  000834  2911               	incf	(_loRa+12)& (0+255),w,b
 13322  000836  E106               	bnz	l20500
 13323  000838  2912               	incf	(_loRa+13)& (0+255),w,b
 13324  00083A  A4D8               	btfss	status,2,c
 13325  00083C  D003               	goto	l20500
 13326  00083E                     u22570:
 13327                           
 13328                           ; BSR set to: 2
 13329                           ;lorawan.c: 1397: {;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 13330  00083E  8309               	bsf	(_loRa+4)& (0+255),1,b
 13331                           
 13332                           ; BSR set to: 2
 13333                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 13334  000840  0E02               	movlw	2
 13335  000842  D6F2               	goto	L17
 13336  000844                     l20500:
 13337                           
 13338                           ; BSR set to: 2
 13339                           ;lorawan.c: 1407: };lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 13340  000844  5107               	movf	(_loRa+2)& (0+255),w,b
 13341  000846  0B0F               	andlw	15
 13342  000848  0A03               	xorlw	3
 13343  00084A  A4D8               	btfss	status,2,c
 13344  00084C  D003               	goto	l20504
 13345                           
 13346                           ; BSR set to: 2
 13347                           ;lorawan.c: 1411: {;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 13348  00084E  51EA               	movf	(_loRa+229)& (0+255),w,b
 13349  000850  EC18  F052         	call	_SwTimerStop
 13350  000854                     l20504:
 13351                           
 13352                           ;lorawan.c: 1413: };lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 13353  000854  0E01               	movlw	1
 13354  000856  0102               	movlb	2	; () banked
 13355  000858  6FDD               	movwf	(_loRa+216)& (0+255),b
 13356                           
 13357                           ; BSR set to: 2
 13358                           ;lorawan.c: 1417: CheckFlags (hdr);
 13359  00085A  C0F2  F060         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 13360  00085E  C0F3  F061         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 13361  000862  EC8E  F048         	call	_CheckFlags	;wreg free
 13362                           
 13363                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 13364  000866  0100               	movlb	0	; () banked
 13365  000868  EE20 F005          	lfsr	2,5
 13366  00086C  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13367  00086E  26D9               	addwf	fsr2l,f,c
 13368  000870  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13369  000872  22DA               	addwfc	fsr2h,f,c
 13370  000874  50DF               	movf	223,w,c
 13371  000876  0B0F               	andlw	15
 13372  000878  0900               	iorlw	0
 13373  00087A  B4D8               	btfsc	status,2,c
 13374  00087C  D016               	goto	l20512
 13375                           
 13376                           ; BSR set to: 0
 13377                           ;lorawan.c: 1420: {;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommand
      +                          s, hdr->members.fCtrl.fOptsLen);
 13378  00087E  0E08               	movlw	8
 13379  000880  25F2               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 13380  000882  6FA6               	movwf	MacExecuteCommands@buffer& (0+255),b
 13381  000884  0E00               	movlw	0
 13382  000886  21F3               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13383  000888  6FA7               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 13384  00088A  EE20 F005          	lfsr	2,5
 13385  00088E  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13386  000890  26D9               	addwf	fsr2l,f,c
 13387  000892  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13388  000894  22DA               	addwfc	fsr2h,f,c
 13389  000896  50DF               	movf	223,w,c
 13390  000898  0B0F               	andlw	15
 13391  00089A  6FA8               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 13392  00089C  EC9E  F021         	call	_MacExecuteCommands	;wreg free
 13393  0008A0  C0A6  F1DA         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 13394  0008A4  C0A7  F1DB         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 13395                           
 13396                           ;lorawan.c: 1422: }
 13397  0008A8  D007               	goto	l20514
 13398  0008AA                     l20512:
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;lorawan.c: 1423: else;lorawan.c: 1424: {;lorawan.c: 1425: buffer = buffer + 8;
 13402  0008AA  0E08               	movlw	8
 13403  0008AC  0101               	movlb	1	; () banked
 13404  0008AE  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13405  0008B0  6FDA               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 13406  0008B2  0E00               	movlw	0
 13407  0008B4  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13408  0008B6  6FDB               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 13409  0008B8                     l20514:
 13410                           
 13411                           ;lorawan.c: 1426: };lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOp
      +                          tsLen + 8) != bufferLength)
 13412  0008B8  0101               	movlb	1	; () banked
 13413  0008BA  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13414  0008BC  0100               	movlb	0	; () banked
 13415  0008BE  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13416  0008C0  6BDC               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13417  0008C2  EE20 F005          	lfsr	2,5
 13418  0008C6  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13419  0008C8  26D9               	addwf	fsr2l,f,c
 13420  0008CA  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13421  0008CC  22DA               	addwfc	fsr2h,f,c
 13422  0008CE  50DF               	movf	223,w,c
 13423  0008D0  0B0F               	andlw	15
 13424  0008D2  6FDD               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13425  0008D4  6BDE               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13426  0008D6  0E0C               	movlw	12
 13427  0008D8  27DD               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13428  0008DA  0E00               	movlw	0
 13429  0008DC  23DE               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13430  0008DE  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13431  0008E0  19DD               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13432  0008E2  E104               	bnz	u22610
 13433  0008E4  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13434  0008E6  19DE               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13435  0008E8  B4D8               	btfsc	status,2,c
 13436  0008EA  D096               	goto	l20536
 13437  0008EC                     u22610:
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;lorawan.c: 1428: {;lorawan.c: 1429: fPort = *(buffer++);
 13441  0008EC  C1DA  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 13442  0008F0  C1DB  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 13443  0008F4  50DF               	movf	indf2,w,c
 13444  0008F6  6FE0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 13445                           
 13446                           ; BSR set to: 0
 13447  0008F8  0101               	movlb	1	; () banked
 13448  0008FA  4BDA               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 13449  0008FC  2BDB               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 13450                           
 13451                           ; BSR set to: 1
 13452                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 13453  0008FE  0100               	movlb	0	; () banked
 13454  000900  EE20 F005          	lfsr	2,5
 13455  000904  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13456  000906  26D9               	addwf	fsr2l,f,c
 13457  000908  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13458  00090A  22DA               	addwfc	fsr2h,f,c
 13459  00090C  50DF               	movf	223,w,c
 13460  00090E  0B0F               	andlw	15
 13461  000910  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13462  000912  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13463  000914  0101               	movlb	1	; () banked
 13464  000916  5DDC               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13465  000918  0FF4               	addlw	244
 13466  00091A  0100               	movlb	0	; () banked
 13467  00091C  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 13471  00091E  EE20 F005          	lfsr	2,5
 13472  000922  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13473  000924  26D9               	addwf	fsr2l,f,c
 13474  000926  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13475  000928  22DA               	addwfc	fsr2h,f,c
 13476  00092A  50DF               	movf	223,w,c
 13477  00092C  0B0F               	andlw	15
 13478  00092E  0F19               	addlw	25
 13479  000930  6FE7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 13480                           
 13481                           ; BSR set to: 0
 13482                           ;lorawan.c: 1434: if (fPort != 0)
 13483  000932  51E0               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 13484  000934  B4D8               	btfsc	status,2,c
 13485  000936  D028               	goto	l20530
 13486                           
 13487                           ; BSR set to: 0
 13488                           ;lorawan.c: 1435: {;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1,
      +                           loRa.fCntDown.value, loRa.activationParameters.applicationSessionKey, bufferIndex, radi
      +                          oBuffer, 0);
 13489  000938  C1DA  F092         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13490  00093C  C1DB  F093         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13491  000940  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13492  000942  6F94               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13493  000944  0E01               	movlw	1
 13494  000946  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 13495  000948  C20F  F096         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13496  00094C  C210  F097         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13497  000950  C211  F098         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13498  000954  C212  F099         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13499  000958  0E37               	movlw	low (_loRa+50)
 13500  00095A  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 13501  00095C  0E02               	movlw	high (_loRa+50)
 13502  00095E  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13503  000960  C0E7  F09C         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13504  000964  0EC7               	movlw	low _radioBuffer
 13505  000966  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13506  000968  0E07               	movlw	high _radioBuffer
 13507  00096A  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13508  00096C  0E00               	movlw	0
 13509  00096E  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13510  000970  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 13511                           
 13512                           ;lorawan.c: 1437: packet = buffer - 1;
 13513  000974  0EFF               	movlw	255
 13514  000976  0101               	movlb	1	; () banked
 13515  000978  25DA               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13516  00097A  0100               	movlb	0	; () banked
 13517  00097C  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13518  00097E  0EFF               	movlw	255
 13519  000980  0101               	movlb	1	; () banked
 13520  000982  21DB               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13521  000984  0100               	movlb	0	; () banked
 13522  000986  D04E               	goto	L15
 13523  000988                     l20530:
 13524                           
 13525                           ; BSR set to: 0
 13526                           ;lorawan.c: 1439: else;lorawan.c: 1440: {;lorawan.c: 1442: if(bufferLength > (13 + hdr->
      +                          members.fCtrl.fOptsLen))
 13527  000988  0101               	movlb	1	; () banked
 13528  00098A  51DC               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13529  00098C  0100               	movlb	0	; () banked
 13530  00098E  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13531  000990  6BDC               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13532  000992  EE20 F005          	lfsr	2,5
 13533  000996  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13534  000998  26D9               	addwf	fsr2l,f,c
 13535  00099A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13536  00099C  22DA               	addwfc	fsr2h,f,c
 13537  00099E  50DF               	movf	223,w,c
 13538  0009A0  0B0F               	andlw	15
 13539  0009A2  6FDD               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13540  0009A4  6BDE               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13541  0009A6  0E0D               	movlw	13
 13542  0009A8  27DD               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13543  0009AA  0E00               	movlw	0
 13544  0009AC  23DE               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13545  0009AE  51DB               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13546  0009B0  5DDD               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13547  0009B2  51DE               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13548  0009B4  0A80               	xorlw	128
 13549  0009B6  6FDF               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 13550  0009B8  51DC               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13551  0009BA  0A80               	xorlw	128
 13552  0009BC  59DF               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 13553  0009BE  B0D8               	btfsc	status,0,c
 13554  0009C0  D02B               	goto	l20536
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;lorawan.c: 1443: {;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1,
      +                           loRa.fCntDown.value, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuf
      +                          fer, 0);
 13558  0009C2  C1DA  F092         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13559  0009C6  C1DB  F093         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13560  0009CA  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13561  0009CC  6F94               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13562  0009CE  0E01               	movlw	1
 13563  0009D0  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 13564  0009D2  C20F  F096         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13565  0009D6  C210  F097         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13566  0009DA  C211  F098         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13567  0009DE  C212  F099         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13568  0009E2  0E27               	movlw	low (_loRa+34)
 13569  0009E4  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 13570  0009E6  0E02               	movlw	high (_loRa+34)
 13571  0009E8  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13572  0009EA  C0E7  F09C         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13573  0009EE  0EC7               	movlw	low _radioBuffer
 13574  0009F0  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13575  0009F2  0E07               	movlw	high _radioBuffer
 13576  0009F4  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13577  0009F6  0E00               	movlw	0
 13578  0009F8  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13579  0009FA  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 13580                           
 13581                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 13582  0009FE  C1DA  F0A6         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 13583  000A02  C1DB  F0A7         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 13584  000A06  0100               	movlb	0	; () banked
 13585  000A08  05F1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13586  000A0A  6FA8               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 13587  000A0C  EC9E  F021         	call	_MacExecuteCommands	;wreg free
 13588  000A10  C0A6  F1DA         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 13589  000A14  C0A7  F1DB         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 13590  000A18                     l20536:
 13591                           
 13592                           ;lorawan.c: 1447: };lorawan.c: 1449: frmPayloadLength = 0;
 13593  000A18  0E00               	movlw	0
 13594  000A1A  0100               	movlb	0	; () banked
 13595  000A1C  6FF1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;lorawan.c: 1450: packet = (0);
 13599  000A1E  0E00               	movlw	0
 13600  000A20  6FE9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13601  000A22  0E00               	movlw	0
 13602  000A24                     L15:
 13603  000A24  6FEA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;lorawan.c: 1457: };lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 13607  000A26  0E01               	movlw	1
 13608  000A28  0102               	movlb	2	; () banked
 13609  000A2A  6FDD               	movwf	(_loRa+216)& (0+255),b
 13610                           
 13611                           ; BSR set to: 2
 13612                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 13613  000A2C  0E00               	movlw	0
 13614  000A2E  6FD6               	movwf	(_loRa+209)& (0+255),b
 13615  000A30  0E00               	movlw	0
 13616  000A32  6FD5               	movwf	(_loRa+208)& (0+255),b
 13617                           
 13618                           ; BSR set to: 2
 13619                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 13620  000A34  0E00               	movlw	0
 13621  000A36  6FF3               	movwf	(_loRa+238)& (0+255),b
 13622                           
 13623                           ; BSR set to: 2
 13624                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 13625  000A38  9905               	bcf	_loRa& (0+255),4,b
 13626                           
 13627                           ; BSR set to: 2
 13628                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 13629  000A3A  8308               	bsf	(_loRa+3)& (0+255),1,b
 13630                           
 13631                           ; BSR set to: 2
 13632                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 13633  000A3C  A105               	btfss	_loRa& (0+255),0,b
 13634  000A3E  D055               	goto	l20588
 13635                           
 13636                           ; BSR set to: 2
 13637                           ;lorawan.c: 1468: {;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 13638  000A40  0100               	movlb	0	; () banked
 13639  000A42  EE20 F005          	lfsr	2,5
 13640  000A46  51F2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13641  000A48  26D9               	addwf	fsr2l,f,c
 13642  000A4A  51F3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13643  000A4C  22DA               	addwfc	fsr2h,f,c
 13644  000A4E  AADF               	btfss	indf2,5,c
 13645  000A50  D049               	goto	l20586
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;lorawan.c: 1470: {;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 13649  000A52  0102               	movlb	2	; () banked
 13650  000A54  9105               	bcf	_loRa& (0+255),0,b
 13651                           
 13652                           ; BSR set to: 2
 13653                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 13654  000A56  0EF0               	movlw	-16
 13655  000A58  1707               	andwf	(_loRa+2)& (0+255),f,b
 13656                           
 13657                           ; BSR set to: 2
 13658                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 13659  000A5A  0101               	movlb	1	; () banked
 13660  000A5C  510E               	movf	_rxPayload& (0+255),w,b
 13661  000A5E  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13662  000A60  B4D8               	btfsc	status,2,c
 13663  000A62  D017               	goto	u22679
 13664                           
 13665                           ; BSR set to: 1
 13666                           ;lorawan.c: 1474: {;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 13667  000A64  0102               	movlb	2	; () banked
 13668  000A66  9B05               	bcf	_loRa& (0+255),5,b
 13669                           
 13670                           ; BSR set to: 2
 13671                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13672  000A68  C0E9  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 13673  000A6C  C0EA  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 13674  000A70  C0F1  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 13675  000A74  0E01               	movlw	1
 13676  000A76  0100               	movlb	0	; () banked
 13677  000A78  6F63               	movwf	RxData@status& (0+255),b
 13678  000A7A  D801               	call	u22678
 13679  000A7C  D00A               	goto	u22679
 13680  000A7E                     u22678:
 13681  000A7E  0005               	push	
 13682  000A80  6EFA               	movwf	pclath,c
 13683  000A82  0101               	movlb	1	; () banked
 13684  000A84  510E               	movf	_rxPayload& (0+255),w,b
 13685  000A86  6EFD               	movwf	tosl,c
 13686  000A88  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13687  000A8A  6EFE               	movwf	tosh,c
 13688  000A8C  6AFF               	clrf	tosu,c
 13689  000A8E  50FA               	movf	pclath,w,c
 13690  000A90  0012               	return		;indir
 13691  000A92                     u22679:
 13692                           
 13693                           ;lorawan.c: 1477: };lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 13694  000A92  0102               	movlb	2	; () banked
 13695  000A94  9308               	bcf	(_loRa+3)& (0+255),1,b
 13696                           
 13697                           ; BSR set to: 2
 13698                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 13699  000A96  BB07               	btfsc	(_loRa+2)& (0+255),5,b
 13700                           
 13701                           ; BSR set to: 2
 13702  000A98  BB05               	btfsc	_loRa& (0+255),5,b
 13703  000A9A  D5C4               	goto	l20412
 13704                           
 13705                           ; BSR set to: 2
 13706  000A9C  B305               	btfsc	_loRa& (0+255),1,b
 13707  000A9E  D002               	goto	u22710
 13708                           
 13709                           ; BSR set to: 2
 13710  000AA0  A705               	btfss	_loRa& (0+255),3,b
 13711  000AA2  D5C0               	goto	l20412
 13712  000AA4                     u22710:
 13713                           
 13714                           ; BSR set to: 2
 13715                           ;lorawan.c: 1480: {;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &c
      +                          hannelIndex) == OK)
 13716  000AA4  0E01               	movlw	1
 13717  000AA6  0100               	movlb	0	; () banked
 13718  000AA8  6FA7               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13719  000AAA  0EE1               	movlw	low LORAWAN_RxDone@channelIndex
 13720  000AAC  6FA8               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13721  000AAE  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 13722  000AB0  6FA9               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13723  000AB2  0102               	movlb	2	; () banked
 13724  000AB4  51F2               	movf	(_loRa+237)& (0+255),w,b
 13725  000AB6  ECED  F033         	call	_SearchAvailableChannel
 13726  000ABA  0900               	iorlw	0
 13727  000ABC  A4D8               	btfss	status,2,c
 13728  000ABE  D00F               	goto	l20584
 13729                           
 13730                           ;lorawan.c: 1482: {;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 13731  000AC0  0E00               	movlw	0
 13732  000AC2  0100               	movlb	0	; () banked
 13733  000AC4  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
 13734  000AC6  0E00               	movlw	0
 13735  000AC8  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
 13736  000ACA  0E00               	movlw	0
 13737  000ACC  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13738  000ACE  0E00               	movlw	0
 13739  000AD0  6FD7               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13740  000AD2  0E00               	movlw	0
 13741  000AD4  ECE1  F037         	call	_LORAWAN_Send
 13742  000AD8                     l20582:
 13743                           
 13744                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 13745  000AD8  0102               	movlb	2	; () banked
 13746  000ADA  9705               	bcf	_loRa& (0+255),3,b
 13747                           
 13748                           ;lorawan.c: 1485: }
 13749  000ADC  D5A3               	goto	l20412
 13750  000ADE                     l20584:
 13751                           
 13752                           ;lorawan.c: 1486: else;lorawan.c: 1487: {;lorawan.c: 1489: StartReTxTimer();
 13753  000ADE  EC94  F02A         	call	_StartReTxTimer	;wreg free
 13754  000AE2  D5A0               	goto	l20412
 13755  000AE4                     l20586:
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;lorawan.c: 1494: else;lorawan.c: 1495: {;lorawan.c: 1496: UpdateRetransmissionAckTimeou
      +                          tState ();
 13759  000AE4  ECBE  F045         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 13760  000AE8  D59D               	goto	l20412
 13761  000AEA                     l20588:
 13762                           
 13763                           ; BSR set to: 2
 13764                           ;lorawan.c: 1499: else;lorawan.c: 1500: {;lorawan.c: 1501: loRa.macStatus.macState = IDL
      +                          E;
 13765  000AEA  0EF0               	movlw	-16
 13766  000AEC  1707               	andwf	(_loRa+2)& (0+255),f,b
 13767                           
 13768                           ; BSR set to: 2
 13769                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 13770  000AEE  0101               	movlb	1	; () banked
 13771  000AF0  510E               	movf	_rxPayload& (0+255),w,b
 13772  000AF2  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13773  000AF4  B4D8               	btfsc	status,2,c
 13774  000AF6  D017               	goto	u22749
 13775                           
 13776                           ; BSR set to: 1
 13777                           ;lorawan.c: 1504: {;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 13778  000AF8  0102               	movlb	2	; () banked
 13779  000AFA  9B05               	bcf	_loRa& (0+255),5,b
 13780                           
 13781                           ; BSR set to: 2
 13782                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13783  000AFC  C0E9  F060         	movff	LORAWAN_RxDone@packet,RxData@pData
 13784  000B00  C0EA  F061         	movff	LORAWAN_RxDone@packet+1,RxData@pData+1
 13785  000B04  C0F1  F062         	movff	LORAWAN_RxDone@frmPayloadLength,RxData@dataLength
 13786  000B08  0E01               	movlw	1
 13787  000B0A  0100               	movlb	0	; () banked
 13788  000B0C  6F63               	movwf	RxData@status& (0+255),b
 13789  000B0E  D801               	call	u22748
 13790  000B10  D00A               	goto	u22749
 13791  000B12                     u22748:
 13792  000B12  0005               	push	
 13793  000B14  6EFA               	movwf	pclath,c
 13794  000B16  0101               	movlb	1	; () banked
 13795  000B18  510E               	movf	_rxPayload& (0+255),w,b
 13796  000B1A  6EFD               	movwf	tosl,c
 13797  000B1C  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13798  000B1E  6EFE               	movwf	tosh,c
 13799  000B20  6AFF               	clrf	tosu,c
 13800  000B22  50FA               	movf	pclath,w,c
 13801  000B24  0012               	return		;indir
 13802  000B26                     u22749:
 13803                           
 13804                           ;lorawan.c: 1507: };lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.
      +                          lorawanMacStatus.synchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUp
      +                          linkMessage == 1) || (loRa.lorawanMacStatus.fPending == 1) ) )
 13805  000B26  0102               	movlb	2	; () banked
 13806  000B28  BB07               	btfsc	(_loRa+2)& (0+255),5,b
 13807                           
 13808                           ; BSR set to: 2
 13809  000B2A  BB05               	btfsc	_loRa& (0+255),5,b
 13810  000B2C  D57B               	goto	l20412
 13811                           
 13812                           ; BSR set to: 2
 13813  000B2E  B305               	btfsc	_loRa& (0+255),1,b
 13814  000B30  D002               	goto	u22780
 13815                           
 13816                           ; BSR set to: 2
 13817  000B32  A705               	btfss	_loRa& (0+255),3,b
 13818  000B34  D577               	goto	l20412
 13819  000B36                     u22780:
 13820                           
 13821                           ; BSR set to: 2
 13822                           ;lorawan.c: 1510: {;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &c
      +                          hannelIndex) == OK)
 13823  000B36  0E01               	movlw	1
 13824  000B38  0100               	movlb	0	; () banked
 13825  000B3A  6FA7               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13826  000B3C  0EE1               	movlw	low LORAWAN_RxDone@channelIndex
 13827  000B3E  6FA8               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13828  000B40  0E00               	movlw	high LORAWAN_RxDone@channelIndex
 13829  000B42  6FA9               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13830  000B44  0102               	movlb	2	; () banked
 13831  000B46  51F2               	movf	(_loRa+237)& (0+255),w,b
 13832  000B48  ECED  F033         	call	_SearchAvailableChannel
 13833  000B4C  0900               	iorlw	0
 13834  000B4E  A4D8               	btfss	status,2,c
 13835  000B50  D7C6               	goto	l20584
 13836                           
 13837                           ;lorawan.c: 1512: {;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 13838  000B52  0E00               	movlw	0
 13839  000B54  0100               	movlb	0	; () banked
 13840  000B56  6FD4               	movwf	LORAWAN_Send@port& (0+255),b
 13841  000B58  0E00               	movlw	0
 13842  000B5A  6FD5               	movwf	LORAWAN_Send@buffer& (0+255),b
 13843  000B5C  0E00               	movlw	0
 13844  000B5E  6FD6               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13845  000B60  0E00               	movlw	0
 13846  000B62  6FD7               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13847  000B64  0E00               	movlw	0
 13848  000B66  ECE1  F037         	call	_LORAWAN_Send
 13849  000B6A  D7B6               	goto	l20582
 13850  000B6C                     l20618:
 13851                           
 13852                           ; BSR set to: 0
 13853                           ;lorawan.c: 1530: else;lorawan.c: 1531: {;lorawan.c: 1533: SetReceptionNotOkState ();
 13854  000B6C  EC9E  F043         	call	_SetReceptionNotOkState	;wreg free
 13855  000B70  0012               	return	
 13856  000B72                     l20622:
 13857                           
 13858                           ; BSR set to: 2
 13859                           ;lorawan.c: 1537: else;lorawan.c: 1538: {;lorawan.c: 1540: if ( rxPayload.RxAppData != (
      +                          0) )
 13860  000B72  0101               	movlb	1	; () banked
 13861  000B74  510E               	movf	_rxPayload& (0+255),w,b
 13862  000B76  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 13863  000B78  B4D8               	btfsc	status,2,c
 13864  000B7A  0012               	return	
 13865                           
 13866                           ; BSR set to: 1
 13867                           ;lorawan.c: 1541: {;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 13868  000B7C  EC8A  F054         	call	_RADIO_GetStatus	;wreg free
 13869  000B80  0100               	movlb	0	; () banked
 13870  000B82  6FDB               	movwf	??_LORAWAN_RxDone& (0+255),b
 13871  000B84  B7DB               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 13872  000B86  D014               	goto	l20628
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;lorawan.c: 1543: {;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK)
      +                          ;
 13876  000B88  C1DA  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 13877  000B8C  C1DB  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 13878  000B90  C1DC  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 13879  000B94  0E03               	movlw	3
 13880  000B96  6F63               	movwf	RxData@status& (0+255),b
 13881  000B98  D801               	call	u22838
 13882  000B9A  0012               	return	
 13883  000B9C                     u22838:
 13884  000B9C  0005               	push	
 13885  000B9E  6EFA               	movwf	pclath,c
 13886  000BA0  0101               	movlb	1	; () banked
 13887  000BA2  510E               	movf	_rxPayload& (0+255),w,b
 13888  000BA4  6EFD               	movwf	tosl,c
 13889  000BA6  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13890  000BA8  6EFE               	movwf	tosh,c
 13891  000BAA  6AFF               	clrf	tosu,c
 13892  000BAC  50FA               	movf	pclath,w,c
 13893  000BAE  0012               	return		;indir
 13894  000BB0                     l20628:
 13895                           
 13896                           ; BSR set to: 0
 13897                           ;lorawan.c: 1546: else;lorawan.c: 1547: {;lorawan.c: 1548: rxPayload.RxAppData(buffer, b
      +                          ufferLength, RADIO_NOT_OK);
 13898  000BB0  C1DA  F060         	movff	LORAWAN_RxDone@buffer,RxData@pData
 13899  000BB4  C1DB  F061         	movff	LORAWAN_RxDone@buffer+1,RxData@pData+1
 13900  000BB8  C1DC  F062         	movff	LORAWAN_RxDone@bufferLength,RxData@dataLength
 13901  000BBC  0E02               	movlw	2
 13902  000BBE  6F63               	movwf	RxData@status& (0+255),b
 13903  000BC0  D801               	call	u22848
 13904  000BC2  0012               	return	
 13905  000BC4                     u22848:
 13906  000BC4  0005               	push	
 13907  000BC6  6EFA               	movwf	pclath,c
 13908  000BC8  0101               	movlb	1	; () banked
 13909  000BCA  510E               	movf	_rxPayload& (0+255),w,b
 13910  000BCC  6EFD               	movwf	tosl,c
 13911  000BCE  510F               	movf	(_rxPayload+1)& (0+255),w,b
 13912  000BD0  6EFE               	movwf	tosh,c
 13913  000BD2  6AFF               	clrf	tosu,c
 13914  000BD4  50FA               	movf	pclath,w,c
 13915  000BD6  0012               	return		;indir
 13916  000BD8                     __end_of_LORAWAN_RxDone:
 13917                           	opt callstack 0
 13918                           
 13919 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 13920 ;; Defined at:
 13921 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13922 ;; Parameters:    Size  Location     Type
 13923 ;;		None
 13924 ;; Auto vars:     Size  Location     Type
 13925 ;;		None
 13926 ;; Return value:  Size  Location     Type
 13927 ;;                  1    wreg      void 
 13928 ;; Registers used:
 13929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13930 ;; Tracked objects:
 13931 ;;		On entry : 0/0
 13932 ;;		On exit  : 0/0
 13933 ;;		Unchanged: 0/0
 13934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13937 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13938 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13939 ;;Total ram usage:        4 bytes
 13940 ;; Hardware stack levels used:    1
 13941 ;; Hardware stack levels required when called:   11
 13942 ;; This function calls:
 13943 ;;		_SwTimerSetTimeout
 13944 ;;		_SwTimerStart
 13945 ;;		___lldiv
 13946 ;; This function is called by:
 13947 ;;		_AckRetransmissionCallback
 13948 ;;		_LORAWAN_RxDone
 13949 ;; This function uses a non-reentrant model
 13950 ;;
 13951                           
 13952                           	psect	text49
 13953  008B7C                     __ptext49:
 13954                           	opt callstack 0
 13955  008B7C                     _UpdateRetransmissionAckTimeoutState:
 13956                           	opt callstack 14
 13957                           
 13958                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 13959                           
 13960                           ;incstack = 0
 13961  008B7C  0102               	movlb	2	; () banked
 13962  008B7E  5107               	movf	(_loRa+2)& (0+255),w,b
 13963  008B80  0BF0               	andlw	-16
 13964  008B82  0906               	iorlw	6
 13965  008B84  6F07               	movwf	(_loRa+2)& (0+255),b
 13966                           
 13967                           ; BSR set to: 2
 13968                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 13969  008B86  51A5               	movf	(_loRa+160)& (0+255),w,b
 13970  008B88  0100               	movlb	0	; () banked
 13971  008B8A  6F92               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 13972  008B8C  0102               	movlb	2	; () banked
 13973  008B8E  51A6               	movf	(_loRa+161)& (0+255),w,b
 13974  008B90  0100               	movlb	0	; () banked
 13975  008B92  6F93               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 13976  008B94  6B94               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 13977  008B96  6B95               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 13978  008B98  0E0C               	movlw	12
 13979  008B9A                     u21865:
 13980  008B9A  90D8               	bcf	status,0,c
 13981  008B9C  3792               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 13982  008B9E  3793               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 13983  008BA0  3794               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 13984  008BA2  3795               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 13985  008BA4  2EE8               	decfsz	wreg,f,c
 13986  008BA6  D7F9               	goto	u21865
 13987  008BA8  C092  F060         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 13988  008BAC  C093  F061         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 13989  008BB0  C094  F062         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 13990  008BB4  C095  F063         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 13991  008BB8  0E7D               	movlw	125
 13992  008BBA  6F64               	movwf	___lldiv@divisor& (0+255),b
 13993  008BBC  0E00               	movlw	0
 13994  008BBE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 13995  008BC0  0E00               	movlw	0
 13996  008BC2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 13997  008BC4  0E00               	movlw	0
 13998  008BC6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 13999  008BC8  ECD9  F042         	call	___lldiv	;wreg free
 14000  008BCC  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 14001  008BD0  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 14002  008BD4  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 14003  008BD8  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 14004  008BDC  0102               	movlb	2	; () banked
 14005  008BDE  51ED               	movf	(_loRa+232)& (0+255),w,b
 14006  008BE0  ECC2  F04C         	call	_SwTimerSetTimeout
 14007                           
 14008                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 14009  008BE4  0102               	movlb	2	; () banked
 14010  008BE6  51ED               	movf	(_loRa+232)& (0+255),w,b
 14011  008BE8  ECB6  F040         	call	_SwTimerStart
 14012  008BEC  0012               	return		;funcret
 14013  008BEE                     __end_of_UpdateRetransmissionAckTimeoutState:
 14014                           	opt callstack 0
 14015                           
 14016 ;; *************** function _UpdateDLSettings *****************
 14017 ;; Defined at:
 14018 ;;		line 889 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14019 ;; Parameters:    Size  Location     Type
 14020 ;;  dlRx2Dr         1    wreg     unsigned char 
 14021 ;;  dlRx1DrOffse    1    0[BANK0 ] unsigned char 
 14022 ;; Auto vars:     Size  Location     Type
 14023 ;;  dlRx2Dr         1    1[BANK0 ] unsigned char 
 14024 ;; Return value:  Size  Location     Type
 14025 ;;                  1    wreg      void 
 14026 ;; Registers used:
 14027 ;;		wreg, status,2, status,0
 14028 ;; Tracked objects:
 14029 ;;		On entry : 0/0
 14030 ;;		On exit  : 0/0
 14031 ;;		Unchanged: 0/0
 14032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14033 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14036 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14037 ;;Total ram usage:        2 bytes
 14038 ;; Hardware stack levels used:    1
 14039 ;; Hardware stack levels required when called:    7
 14040 ;; This function calls:
 14041 ;;		Nothing
 14042 ;; This function is called by:
 14043 ;;		_LORAWAN_RxDone
 14044 ;; This function uses a non-reentrant model
 14045 ;;
 14046                           
 14047                           	psect	text50
 14048  00A5A0                     __ptext50:
 14049                           	opt callstack 0
 14050  00A5A0                     _UpdateDLSettings:
 14051                           	opt callstack 17
 14052                           
 14053                           ;incstack = 0
 14054                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 14055  00A5A0  0100               	movlb	0	; () banked
 14056  00A5A2  6F61               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 14057                           
 14058                           ;lorawan_eu.c: 891: if (dlRx2Dr <= 7)
 14059  00A5A4  0E08               	movlw	8
 14060  00A5A6  0100               	movlb	0	; () banked
 14061  00A5A8  6161               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 14062  00A5AA  D002               	goto	l19938
 14063                           
 14064                           ; BSR set to: 0
 14065                           ;lorawan_eu.c: 892: {;lorawan_eu.c: 893: loRa.receiveWindow2Parameters.dataRate = dlRx2D
      +                          r;
 14066  00A5AC  C061  F221         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 14067  00A5B0                     l19938:
 14068                           
 14069                           ; BSR set to: 0
 14070                           ;lorawan_eu.c: 894: };lorawan_eu.c: 896: if (dlRx1DrOffset <= 5)
 14071  00A5B0  0E06               	movlw	6
 14072  00A5B2  6160               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 14073  00A5B4  0012               	return	
 14074                           
 14075                           ; BSR set to: 0
 14076                           ;lorawan_eu.c: 897: {;lorawan_eu.c: 899: loRa.offset = dlRx1DrOffset;
 14077  00A5B6  C060  F2F4         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 14078                           
 14079                           ; BSR set to: 0
 14080  00A5BA  0012               	return		;funcret
 14081  00A5BC                     __end_of_UpdateDLSettings:
 14082                           	opt callstack 0
 14083                           
 14084 ;; *************** function _UpdateCfList *****************
 14085 ;; Defined at:
 14086 ;;		line 825 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14087 ;; Parameters:    Size  Location     Type
 14088 ;;  bufferLength    1    wreg     unsigned char 
 14089 ;;  joinAccept      2   62[BANK0 ] PTR struct .
 14090 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;  bufferLength    1   68[BANK0 ] unsigned char 
 14093 ;;  frequency       4   69[BANK0 ] unsigned long 
 14094 ;;  i               1   74[BANK0 ] unsigned char 
 14095 ;;  channelIndex    1   73[BANK0 ] unsigned char 
 14096 ;; Return value:  Size  Location     Type
 14097 ;;                  1    wreg      void 
 14098 ;; Registers used:
 14099 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14100 ;; Tracked objects:
 14101 ;;		On entry : 0/0
 14102 ;;		On exit  : 0/0
 14103 ;;		Unchanged: 0/0
 14104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14106 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14108 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14109 ;;Total ram usage:       13 bytes
 14110 ;; Hardware stack levels used:    1
 14111 ;; Hardware stack levels required when called:    9
 14112 ;; This function calls:
 14113 ;;		_LORAWAN_SetChannelIdStatus
 14114 ;;		_ValidateFrequency
 14115 ;;		___lmul
 14116 ;;		_memcpy
 14117 ;; This function is called by:
 14118 ;;		_LORAWAN_RxDone
 14119 ;; This function uses a non-reentrant model
 14120 ;;
 14121                           
 14122                           	psect	text51
 14123  004128                     __ptext51:
 14124                           	opt callstack 0
 14125  004128                     _UpdateCfList:
 14126                           	opt callstack 15
 14127                           
 14128                           ; BSR set to: 0
 14129                           ;incstack = 0
 14130                           ;UpdateCfList@bufferLength stored from wreg
 14131  004128  0100               	movlb	0	; () banked
 14132  00412A  6FA4               	movwf	UpdateCfList@bufferLength& (0+255),b
 14133                           
 14134                           ;lorawan_eu.c: 827: uint8_t i;;lorawan_eu.c: 828: uint32_t frequency;;lorawan_eu.c: 829:
      +                           uint8_t channelIndex;;lorawan_eu.c: 831: if ( (bufferLength == 33) )
 14135  00412C  0E21               	movlw	33
 14136  00412E  0100               	movlb	0	; () banked
 14137  004130  19A4               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 14138  004132  A4D8               	btfss	status,2,c
 14139  004134  0012               	return	
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;lorawan_eu.c: 832: {;lorawan_eu.c: 834: channelIndex = 3;
 14143  004136  0E03               	movlw	3
 14144  004138  6FA9               	movwf	UpdateCfList@channelIndex& (0+255),b
 14145                           
 14146                           ;lorawan_eu.c: 836: for (i = 0; i < 5; i++ )
 14147  00413A  0E00               	movlw	0
 14148  00413C  6FAA               	movwf	UpdateCfList@i& (0+255),b
 14149  00413E                     l19912:
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;lorawan_eu.c: 837: {;lorawan_eu.c: 838: frequency = 0;
 14153  00413E  0E00               	movlw	0
 14154  004140  6FA5               	movwf	UpdateCfList@frequency& (0+255),b
 14155  004142  0E00               	movlw	0
 14156  004144  6FA6               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 14157  004146  0E00               	movlw	0
 14158  004148  6FA7               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 14159  00414A  0E00               	movlw	0
 14160  00414C  6FA8               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 14161                           
 14162                           ; BSR set to: 0
 14163                           ;lorawan_eu.c: 839: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 14164  00414E  0EA5               	movlw	low UpdateCfList@frequency
 14165  004150  6F60               	movwf	memcpy@d1& (0+255),b
 14166  004152  0E00               	movlw	high UpdateCfList@frequency
 14167  004154  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 14168  004156  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14169  004158  0D03               	mullw	3
 14170  00415A  C09E  F0A0         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 14171  00415E  C09F  F0A1         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 14172  004162  50F3               	movf	prodl,w,c
 14173  004164  27A0               	addwf	??_UpdateCfList& (0+255),f,b
 14174  004166  50F4               	movf	prodh,w,c
 14175  004168  23A1               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 14176  00416A  0E0D               	movlw	13
 14177  00416C  25A0               	addwf	??_UpdateCfList& (0+255),w,b
 14178  00416E  6F62               	movwf	memcpy@s1& (0+255),b
 14179  004170  0E00               	movlw	0
 14180  004172  21A1               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 14181  004174  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 14182  004176  0E00               	movlw	0
 14183  004178  6F65               	movwf	(memcpy@n+1)& (0+255),b
 14184  00417A  0E03               	movlw	3
 14185  00417C  6F64               	movwf	memcpy@n& (0+255),b
 14186  00417E  EC2F  F048         	call	_memcpy	;wreg free
 14187                           
 14188                           ;lorawan_eu.c: 840: frequency *= 100;
 14189  004182  C0A5  F092         	movff	UpdateCfList@frequency,___lmul@multiplier
 14190  004186  C0A6  F093         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 14191  00418A  C0A7  F094         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 14192  00418E  C0A8  F095         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 14193  004192  0E64               	movlw	100
 14194  004194  0100               	movlb	0	; () banked
 14195  004196  6F96               	movwf	___lmul@multiplicand& (0+255),b
 14196  004198  0E00               	movlw	0
 14197  00419A  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14198  00419C  0E00               	movlw	0
 14199  00419E  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14200  0041A0  0E00               	movlw	0
 14201  0041A2  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14202  0041A4  EC19  F049         	call	___lmul	;wreg free
 14203  0041A8  C092  F0A5         	movff	?___lmul,UpdateCfList@frequency
 14204  0041AC  C093  F0A6         	movff	?___lmul+1,UpdateCfList@frequency+1
 14205  0041B0  C094  F0A7         	movff	?___lmul+2,UpdateCfList@frequency+2
 14206  0041B4  C095  F0A8         	movff	?___lmul+3,UpdateCfList@frequency+3
 14207                           
 14208                           ;lorawan_eu.c: 841: if (frequency != 0)
 14209  0041B8  0100               	movlb	0	; () banked
 14210  0041BA  51A5               	movf	UpdateCfList@frequency& (0+255),w,b
 14211  0041BC  11A6               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 14212  0041BE  11A7               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 14213  0041C0  11A8               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 14214  0041C2  B4D8               	btfsc	status,2,c
 14215  0041C4  D0AD               	goto	l19928
 14216                           
 14217                           ; BSR set to: 0
 14218                           ;lorawan_eu.c: 842: {;lorawan_eu.c: 843: if (ValidateFrequency (frequency) == OK)
 14219  0041C6  C0A5  F060         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 14220  0041CA  C0A6  F061         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 14221  0041CE  C0A7  F062         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 14222  0041D2  C0A8  F063         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 14223  0041D6  ECF7  F045         	call	_ValidateFrequency	;wreg free
 14224  0041DA  0900               	iorlw	0
 14225  0041DC  A4D8               	btfss	status,2,c
 14226  0041DE  D0A6               	goto	l19930
 14227                           
 14228                           ;lorawan_eu.c: 844: {;lorawan_eu.c: 845: Channels[i+channelIndex].frequency = frequency;
 14229  0041E0  0100               	movlb	0	; () banked
 14230  0041E2  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14231  0041E4  0D0E               	mullw	14
 14232  0041E6  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14233  0041EA  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14234  0041EE  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14235  0041F0  0D0E               	mullw	14
 14236  0041F2  0E14               	movlw	low _Channels
 14237  0041F4  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14238  0041F6  0E04               	movlw	high _Channels
 14239  0041F8  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14240  0041FA  50F3               	movf	prodl,w,c
 14241  0041FC  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14242  0041FE  50F4               	movf	prodh,w,c
 14243  004200  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14244  004202  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14245  004204  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14246  004206  6ED9               	movwf	fsr2l,c
 14247  004208  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14248  00420A  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14249  00420C  6EDA               	movwf	fsr2h,c
 14250  00420E  C0A5  FFDE         	movff	UpdateCfList@frequency,postinc2
 14251  004212  C0A6  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 14252  004216  C0A7  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 14253  00421A  C0A8  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 14254                           
 14255                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.max = 5;
 14256  00421E  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14257  004220  0D0E               	mullw	14
 14258  004222  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14259  004226  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14260  00422A  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14261  00422C  0D0E               	mullw	14
 14262  00422E  0E14               	movlw	low _Channels
 14263  004230  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14264  004232  0E04               	movlw	high _Channels
 14265  004234  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14266  004236  0E05               	movlw	5
 14267  004238  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14268  00423A  0E00               	movlw	0
 14269  00423C  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14270  00423E  50F3               	movf	prodl,w,c
 14271  004240  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14272  004242  50F4               	movf	prodh,w,c
 14273  004244  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14274  004246  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14275  004248  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14276  00424A  6ED9               	movwf	fsr2l,c
 14277  00424C  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14278  00424E  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14279  004250  6EDA               	movwf	fsr2h,c
 14280  004252  0104               	movlb	4	; () banked
 14281  004254  50DF               	movf	223,w,c
 14282  004256  0B0F               	andlw	-241
 14283  004258  0950               	iorlw	80
 14284  00425A  6EDF               	movwf	223,c
 14285                           
 14286                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dataRange.min = 0;
 14287  00425C  0100               	movlb	0	; () banked
 14288  00425E  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14289  004260  0D0E               	mullw	14
 14290  004262  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14291  004266  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14292  00426A  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14293  00426C  0D0E               	mullw	14
 14294  00426E  0E14               	movlw	low _Channels
 14295  004270  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14296  004272  0E04               	movlw	high _Channels
 14297  004274  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14298  004276  0E05               	movlw	5
 14299  004278  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14300  00427A  0E00               	movlw	0
 14301  00427C  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14302  00427E  50F3               	movf	prodl,w,c
 14303  004280  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14304  004282  50F4               	movf	prodh,w,c
 14305  004284  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14306  004286  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14307  004288  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14308  00428A  6ED9               	movwf	fsr2l,c
 14309  00428C  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14310  00428E  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14311  004290  6EDA               	movwf	fsr2h,c
 14312  004292  0EF0               	movlw	-16
 14313  004294  0104               	movlb	4	; () banked
 14314  004296  16DF               	andwf	223,f,c
 14315                           
 14316                           ;lorawan_eu.c: 848: Channels[i+channelIndex].dutyCycle = 999;
 14317  004298  0100               	movlb	0	; () banked
 14318  00429A  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14319  00429C  0D0E               	mullw	14
 14320  00429E  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14321  0042A2  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14322  0042A6  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14323  0042A8  0D0E               	mullw	14
 14324  0042AA  0E14               	movlw	low _Channels
 14325  0042AC  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14326  0042AE  0E04               	movlw	high _Channels
 14327  0042B0  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14328  0042B2  0E06               	movlw	6
 14329  0042B4  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14330  0042B6  0E00               	movlw	0
 14331  0042B8  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14332  0042BA  50F3               	movf	prodl,w,c
 14333  0042BC  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14334  0042BE  50F4               	movf	prodh,w,c
 14335  0042C0  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14336  0042C2  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14337  0042C4  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14338  0042C6  6ED9               	movwf	fsr2l,c
 14339  0042C8  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14340  0042CA  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14341  0042CC  6EDA               	movwf	fsr2h,c
 14342  0042CE  0EE7               	movlw	231
 14343  0042D0  6EDE               	movwf	postinc2,c
 14344  0042D2  0E03               	movlw	3
 14345  0042D4  6EDD               	movwf	postdec2,c
 14346                           
 14347                           ;lorawan_eu.c: 849: Channels[i+channelIndex].parametersDefined = 0xFF;
 14348  0042D6  51A9               	movf	UpdateCfList@channelIndex& (0+255),w,b
 14349  0042D8  0D0E               	mullw	14
 14350  0042DA  CFF3 F0A0          	movff	prodl,??_UpdateCfList
 14351  0042DE  CFF4 F0A1          	movff	prodh,??_UpdateCfList+1
 14352  0042E2  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14353  0042E4  0D0E               	mullw	14
 14354  0042E6  0E14               	movlw	low _Channels
 14355  0042E8  6FA2               	movwf	(??_UpdateCfList+2)& (0+255),b
 14356  0042EA  0E04               	movlw	high _Channels
 14357  0042EC  6FA3               	movwf	(??_UpdateCfList+3)& (0+255),b
 14358  0042EE  0E0D               	movlw	13
 14359  0042F0  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14360  0042F2  0E00               	movlw	0
 14361  0042F4  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14362  0042F6  50F3               	movf	prodl,w,c
 14363  0042F8  27A2               	addwf	(??_UpdateCfList+2)& (0+255),f,b
 14364  0042FA  50F4               	movf	prodh,w,c
 14365  0042FC  23A3               	addwfc	(??_UpdateCfList+3)& (0+255),f,b
 14366  0042FE  51A0               	movf	??_UpdateCfList& (0+255),w,b
 14367  004300  25A2               	addwf	(??_UpdateCfList+2)& (0+255),w,b
 14368  004302  6ED9               	movwf	fsr2l,c
 14369  004304  51A1               	movf	(??_UpdateCfList+1)& (0+255),w,b
 14370  004306  21A3               	addwfc	(??_UpdateCfList+3)& (0+255),w,b
 14371  004308  6EDA               	movwf	fsr2h,c
 14372  00430A  0EFF               	movlw	255
 14373  00430C  6EDF               	movwf	indf2,c
 14374                           
 14375                           ; BSR set to: 0
 14376                           ;lorawan_eu.c: 850: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 14377  00430E  0E01               	movlw	1
 14378  004310  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14379  004312  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14380  004314  25A9               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14381  004316  ECC6  F04D         	call	_LORAWAN_SetChannelIdStatus
 14382                           
 14383                           ;lorawan_eu.c: 851: loRa.macStatus.channelsModified = 1;
 14384  00431A  0102               	movlb	2	; () banked
 14385  00431C  8708               	bsf	(_loRa+3)& (0+255),3,b
 14386  00431E  D006               	goto	l19930
 14387  004320                     l19928:
 14388                           
 14389                           ; BSR set to: 0
 14390                           ;lorawan_eu.c: 854: else;lorawan_eu.c: 855: {;lorawan_eu.c: 856: LORAWAN_SetChannelIdSta
      +                          tus(i+channelIndex, 0);
 14391  004320  0E00               	movlw	0
 14392  004322  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14393  004324  51AA               	movf	UpdateCfList@i& (0+255),w,b
 14394  004326  25A9               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14395  004328  ECC6  F04D         	call	_LORAWAN_SetChannelIdStatus
 14396  00432C                     l19930:
 14397  00432C  0100               	movlb	0	; () banked
 14398  00432E  2BAA               	incf	UpdateCfList@i& (0+255),f,b
 14399                           
 14400                           ; BSR set to: 0
 14401  004330  0E04               	movlw	4
 14402  004332  65AA               	cpfsgt	UpdateCfList@i& (0+255),b
 14403  004334  D704               	goto	l19912
 14404                           
 14405                           ; BSR set to: 0
 14406                           ;lorawan_eu.c: 857: };lorawan_eu.c: 858: };lorawan_eu.c: 860: loRa.macStatus.channelsMod
      +                          ified = 1;
 14407  004336  0102               	movlb	2	; () banked
 14408  004338  8708               	bsf	(_loRa+3)& (0+255),3,b
 14409  00433A  0012               	return		;funcret
 14410  00433C                     __end_of_UpdateCfList:
 14411                           	opt callstack 0
 14412                           
 14413 ;; *************** function _StartReTxTimer *****************
 14414 ;; Defined at:
 14415 ;;		line 903 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14416 ;; Parameters:    Size  Location     Type
 14417 ;;		None
 14418 ;; Auto vars:     Size  Location     Type
 14419 ;;  minim           4   54[BANK0 ] unsigned long 
 14420 ;;  i               1   58[BANK0 ] unsigned char 
 14421 ;; Return value:  Size  Location     Type
 14422 ;;                  1    wreg      void 
 14423 ;; Registers used:
 14424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14425 ;; Tracked objects:
 14426 ;;		On entry : 0/0
 14427 ;;		On exit  : 0/0
 14428 ;;		Unchanged: 0/0
 14429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14431 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14432 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14433 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14434 ;;Total ram usage:        9 bytes
 14435 ;; Hardware stack levels used:    1
 14436 ;; Hardware stack levels required when called:   11
 14437 ;; This function calls:
 14438 ;;		_SwTimerSetTimeout
 14439 ;;		_SwTimerStart
 14440 ;;		___lldiv
 14441 ;; This function is called by:
 14442 ;;		_LORAWAN_RxDone
 14443 ;; This function uses a non-reentrant model
 14444 ;;
 14445                           
 14446                           	psect	text52
 14447  005528                     __ptext52:
 14448                           	opt callstack 0
 14449  005528                     _StartReTxTimer:
 14450                           	opt callstack 13
 14451                           
 14452                           ;lorawan_eu.c: 905: uint8_t i;;lorawan_eu.c: 906: uint32_t minim = (4294967295UL);
 14453                           
 14454                           ;incstack = 0
 14455  005528  0100               	movlb	0	; () banked
 14456  00552A  6996               	setf	StartReTxTimer@minim& (0+255),b
 14457  00552C  6997               	setf	(StartReTxTimer@minim+1)& (0+255),b
 14458  00552E  6998               	setf	(StartReTxTimer@minim+2)& (0+255),b
 14459  005530  6999               	setf	(StartReTxTimer@minim+3)& (0+255),b
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;lorawan_eu.c: 908: for (i = 0; i <= loRa.maxChannels; i++)
 14463  005532  0E00               	movlw	0
 14464  005534  6F9A               	movwf	StartReTxTimer@i& (0+255),b
 14465  005536  D064               	goto	l19960
 14466  005538                     l19946:
 14467                           
 14468                           ; BSR set to: 2
 14469                           ;lorawan_eu.c: 909: {;lorawan_eu.c: 910: if ( (Channels[i].status == 1) && (Channels[i].
      +                          channelTimer != 0) && (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Ch
      +                          annels[i].dataRange.min) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 14470  005538  0100               	movlb	0	; () banked
 14471  00553A  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14472  00553C  0D0E               	mullw	14
 14473  00553E  0E18               	movlw	low (_Channels+4)
 14474  005540  24F3               	addwf	prodl,w,c
 14475  005542  6ED9               	movwf	fsr2l,c
 14476  005544  0E04               	movlw	high (_Channels+4)
 14477  005546  20F4               	addwfc	prodh,w,c
 14478  005548  6EDA               	movwf	fsr2h,c
 14479  00554A  04DE               	decf	postinc2,w,c
 14480  00554C  A4D8               	btfss	status,2,c
 14481  00554E  D056               	goto	l19958
 14482                           
 14483                           ; BSR set to: 0
 14484  005550  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14485  005552  0D0E               	mullw	14
 14486  005554  0E1C               	movlw	low (_Channels+8)
 14487  005556  24F3               	addwf	prodl,w,c
 14488  005558  6ED9               	movwf	fsr2l,c
 14489  00555A  0E04               	movlw	high (_Channels+8)
 14490  00555C  20F4               	addwfc	prodh,w,c
 14491  00555E  6EDA               	movwf	fsr2h,c
 14492  005560  50DE               	movf	postinc2,w,c
 14493  005562  10DE               	iorwf	postinc2,w,c
 14494  005564  10DE               	iorwf	postinc2,w,c
 14495  005566  10DE               	iorwf	postinc2,w,c
 14496  005568  B4D8               	btfsc	status,2,c
 14497  00556A  D048               	goto	l19958
 14498                           
 14499                           ; BSR set to: 0
 14500  00556C  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14501  00556E  0D0E               	mullw	14
 14502  005570  0E1C               	movlw	low (_Channels+8)
 14503  005572  24F3               	addwf	prodl,w,c
 14504  005574  6ED9               	movwf	fsr2l,c
 14505  005576  0E04               	movlw	high (_Channels+8)
 14506  005578  20F4               	addwfc	prodh,w,c
 14507  00557A  6EDA               	movwf	fsr2h,c
 14508  00557C  50DE               	movf	postinc2,w,c
 14509  00557E  5D96               	subwf	StartReTxTimer@minim& (0+255),w,b
 14510  005580  50DE               	movf	postinc2,w,c
 14511  005582  5997               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 14512  005584  50DE               	movf	postinc2,w,c
 14513  005586  5998               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 14514  005588  50DE               	movf	postinc2,w,c
 14515  00558A  5999               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 14516  00558C  A0D8               	btfss	status,0,c
 14517  00558E  D036               	goto	l19958
 14518                           
 14519                           ; BSR set to: 0
 14520  005590  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14521  005592  0D0E               	mullw	14
 14522  005594  0E19               	movlw	low (_Channels+5)
 14523  005596  24F3               	addwf	prodl,w,c
 14524  005598  6ED9               	movwf	fsr2l,c
 14525  00559A  0E04               	movlw	high (_Channels+5)
 14526  00559C  20F4               	addwfc	prodh,w,c
 14527  00559E  6EDA               	movwf	fsr2h,c
 14528  0055A0  0104               	movlb	4	; () banked
 14529  0055A2  50DF               	movf	223,w,c
 14530  0055A4  0B0F               	andlw	15
 14531  0055A6  0100               	movlb	0	; () banked
 14532  0055A8  6F92               	movwf	??_StartReTxTimer& (0+255),b
 14533  0055AA  5192               	movf	??_StartReTxTimer& (0+255),w,b
 14534  0055AC  0102               	movlb	2	; () banked
 14535  0055AE  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 14536  0055B0  A0D8               	btfss	status,0,c
 14537  0055B2  D024               	goto	l19958
 14538                           
 14539                           ; BSR set to: 2
 14540  0055B4  0100               	movlb	0	; () banked
 14541  0055B6  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14542  0055B8  0D0E               	mullw	14
 14543  0055BA  0E19               	movlw	low (_Channels+5)
 14544  0055BC  24F3               	addwf	prodl,w,c
 14545  0055BE  6ED9               	movwf	fsr2l,c
 14546  0055C0  0E04               	movlw	high (_Channels+5)
 14547  0055C2  20F4               	addwfc	prodh,w,c
 14548  0055C4  6EDA               	movwf	fsr2h,c
 14549  0055C6  0104               	movlb	4	; () banked
 14550  0055C8  38DF               	swapf	223,w,c
 14551  0055CA  0B0F               	andlw	15
 14552  0055CC  0100               	movlb	0	; () banked
 14553  0055CE  6F92               	movwf	??_StartReTxTimer& (0+255),b
 14554  0055D0  0102               	movlb	2	; () banked
 14555  0055D2  51E4               	movf	(_loRa+223)& (0+255),w,b
 14556  0055D4  0100               	movlb	0	; () banked
 14557  0055D6  5D92               	subwf	??_StartReTxTimer& (0+255),w,b
 14558  0055D8  A0D8               	btfss	status,0,c
 14559  0055DA  D010               	goto	l19958
 14560                           
 14561                           ; BSR set to: 0
 14562                           ;lorawan_eu.c: 911: {;lorawan_eu.c: 912: minim = Channels[i].channelTimer;
 14563  0055DC  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14564  0055DE  0D0E               	mullw	14
 14565  0055E0  0E1C               	movlw	low (_Channels+8)
 14566  0055E2  24F3               	addwf	prodl,w,c
 14567  0055E4  6ED9               	movwf	fsr2l,c
 14568  0055E6  0E04               	movlw	high (_Channels+8)
 14569  0055E8  20F4               	addwfc	prodh,w,c
 14570  0055EA  6EDA               	movwf	fsr2h,c
 14571  0055EC  CFDE F096          	movff	postinc2,StartReTxTimer@minim
 14572  0055F0  CFDE F097          	movff	postinc2,StartReTxTimer@minim+1
 14573  0055F4  CFDE F098          	movff	postinc2,StartReTxTimer@minim+2
 14574  0055F8  CFDE F099          	movff	postinc2,StartReTxTimer@minim+3
 14575  0055FC                     l19958:
 14576  0055FC  0100               	movlb	0	; () banked
 14577  0055FE  2B9A               	incf	StartReTxTimer@i& (0+255),f,b
 14578  005600                     l19960:
 14579                           
 14580                           ; BSR set to: 0
 14581  005600  519A               	movf	StartReTxTimer@i& (0+255),w,b
 14582  005602  0102               	movlb	2	; () banked
 14583  005604  5DF2               	subwf	(_loRa+237)& (0+255),w,b
 14584  005606  B0D8               	btfsc	status,0,c
 14585  005608  D797               	goto	l19946
 14586                           
 14587                           ; BSR set to: 2
 14588                           ;lorawan_eu.c: 913: };lorawan_eu.c: 914: };lorawan_eu.c: 915: loRa.macStatus.macState = 
      +                          RETRANSMISSION_DELAY;
 14589  00560A  5107               	movf	(_loRa+2)& (0+255),w,b
 14590  00560C  0BF0               	andlw	-16
 14591  00560E  0906               	iorlw	6
 14592  005610  6F07               	movwf	(_loRa+2)& (0+255),b
 14593                           
 14594                           ; BSR set to: 2
 14595                           ;lorawan_eu.c: 916: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 14596  005612  C096  F092         	movff	StartReTxTimer@minim,??_StartReTxTimer
 14597  005616  C097  F093         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 14598  00561A  C098  F094         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 14599  00561E  C099  F095         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 14600  005622  0E0C               	movlw	12
 14601  005624                     u21725:
 14602  005624  90D8               	bcf	status,0,c
 14603  005626  0100               	movlb	0	; () banked
 14604  005628  3792               	rlcf	??_StartReTxTimer& (0+255),f,b
 14605  00562A  3793               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 14606  00562C  3794               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 14607  00562E  3795               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 14608  005630  2EE8               	decfsz	wreg,f,c
 14609  005632  D7F8               	goto	u21725
 14610  005634  C092  F060         	movff	??_StartReTxTimer,___lldiv@dividend
 14611  005638  C093  F061         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 14612  00563C  C094  F062         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 14613  005640  C095  F063         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 14614  005644  0E7D               	movlw	125
 14615  005646  6F64               	movwf	___lldiv@divisor& (0+255),b
 14616  005648  0E00               	movlw	0
 14617  00564A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 14618  00564C  0E00               	movlw	0
 14619  00564E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 14620  005650  0E00               	movlw	0
 14621  005652  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 14622  005654  ECD9  F042         	call	___lldiv	;wreg free
 14623  005658  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 14624  00565C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 14625  005660  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 14626  005664  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 14627  005668  0102               	movlb	2	; () banked
 14628  00566A  51EB               	movf	(_loRa+230)& (0+255),w,b
 14629  00566C  ECC2  F04C         	call	_SwTimerSetTimeout
 14630                           
 14631                           ;lorawan_eu.c: 917: SwTimerStart (loRa.automaticReplyTimerId);
 14632  005670  0102               	movlb	2	; () banked
 14633  005672  51EB               	movf	(_loRa+230)& (0+255),w,b
 14634  005674  ECB6  F040         	call	_SwTimerStart
 14635  005678  0012               	return		;funcret
 14636  00567A                     __end_of_StartReTxTimer:
 14637                           	opt callstack 0
 14638                           
 14639 ;; *************** function _SetReceptionNotOkState *****************
 14640 ;; Defined at:
 14641 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14642 ;; Parameters:    Size  Location     Type
 14643 ;;		None
 14644 ;; Auto vars:     Size  Location     Type
 14645 ;;		None
 14646 ;; Return value:  Size  Location     Type
 14647 ;;                  1    wreg      void 
 14648 ;; Registers used:
 14649 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14650 ;; Tracked objects:
 14651 ;;		On entry : 0/0
 14652 ;;		On exit  : 0/0
 14653 ;;		Unchanged: 0/0
 14654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14659 ;;Total ram usage:        0 bytes
 14660 ;; Hardware stack levels used:    1
 14661 ;; Hardware stack levels required when called:   14
 14662 ;; This function calls:
 14663 ;;		_LORAWAN_EnterContinuousReceive
 14664 ;;		_RxData
 14665 ;; This function is called by:
 14666 ;;		_LORAWAN_RxDone
 14667 ;; This function uses a non-reentrant model
 14668 ;;
 14669                           
 14670                           	psect	text53
 14671  00873C                     __ptext53:
 14672                           	opt callstack 0
 14673  00873C                     _SetReceptionNotOkState:
 14674                           	opt callstack 10
 14675                           
 14676                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 14677                           
 14678                           ;incstack = 0
 14679  00873C  0102               	movlb	2	; () banked
 14680  00873E  5107               	movf	(_loRa+2)& (0+255),w,b
 14681  008740  0B0F               	andlw	15
 14682  008742  0A05               	xorlw	5
 14683  008744  B4D8               	btfsc	status,2,c
 14684  008746  D008               	goto	u22010
 14685                           
 14686                           ; BSR set to: 2
 14687  008748  5107               	movf	(_loRa+2)& (0+255),w,b
 14688  00874A  0B0F               	andlw	15
 14689  00874C  0A03               	xorlw	3
 14690  00874E  A4D8               	btfss	status,2,c
 14691  008750  D027               	goto	l20150
 14692                           
 14693                           ; BSR set to: 2
 14694  008752  51F6               	movf	(_loRa+241)& (0+255),w,b
 14695  008754  B4D8               	btfsc	status,2,c
 14696  008756  D024               	goto	l20150
 14697  008758                     u22010:
 14698                           
 14699                           ; BSR set to: 2
 14700                           ;lorawan.c: 2000: {;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMe
      +                          ssage = 0;
 14701  008758  9105               	bcf	_loRa& (0+255),0,b
 14702                           
 14703                           ; BSR set to: 2
 14704                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 14705  00875A  0EF0               	movlw	-16
 14706  00875C  1707               	andwf	(_loRa+2)& (0+255),f,b
 14707                           
 14708                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 14709  00875E  5117               	movf	(_loRa+18)& (0+255),w,b
 14710  008760  A4D8               	btfss	status,2,c
 14711  008762  D01C               	goto	u22049
 14712                           
 14713                           ; BSR set to: 2
 14714  008764  0101               	movlb	1	; () banked
 14715  008766  510E               	movf	_rxPayload& (0+255),w,b
 14716  008768  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 14717  00876A  B4D8               	btfsc	status,2,c
 14718  00876C  D017               	goto	u22049
 14719                           
 14720                           ; BSR set to: 1
 14721                           ;lorawan.c: 2005: {;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 14722  00876E  0102               	movlb	2	; () banked
 14723  008770  9B05               	bcf	_loRa& (0+255),5,b
 14724                           
 14725                           ; BSR set to: 2
 14726                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 14727  008772  0E00               	movlw	0
 14728  008774  0100               	movlb	0	; () banked
 14729  008776  6F60               	movwf	RxData@pData& (0+255),b
 14730  008778  0E00               	movlw	0
 14731  00877A  6F61               	movwf	(RxData@pData+1)& (0+255),b
 14732  00877C  0E00               	movlw	0
 14733  00877E  6F62               	movwf	RxData@dataLength& (0+255),b
 14734  008780  0E00               	movlw	0
 14735  008782  6F63               	movwf	RxData@status& (0+255),b
 14736  008784  D801               	call	u22048
 14737  008786  D00A               	goto	u22049
 14738  008788                     u22048:
 14739  008788  0005               	push	
 14740  00878A  6EFA               	movwf	pclath,c
 14741  00878C  0101               	movlb	1	; () banked
 14742  00878E  510E               	movf	_rxPayload& (0+255),w,b
 14743  008790  6EFD               	movwf	tosl,c
 14744  008792  510F               	movf	(_rxPayload+1)& (0+255),w,b
 14745  008794  6EFE               	movwf	tosh,c
 14746  008796  6AFF               	clrf	tosu,c
 14747  008798  50FA               	movf	pclath,w,c
 14748  00879A  0012               	return		;indir
 14749  00879C                     u22049:
 14750                           
 14751                           ;lorawan.c: 2008: };lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 14752  00879C  0102               	movlb	2	; () banked
 14753  00879E  9308               	bcf	(_loRa+3)& (0+255),1,b
 14754  0087A0                     l20150:
 14755                           
 14756                           ; BSR set to: 2
 14757                           ;lorawan.c: 2010: };lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 14758  0087A0  0E02               	movlw	2
 14759  0087A2  1917               	xorwf	(_loRa+18)& (0+255),w,b
 14760  0087A4  A4D8               	btfss	status,2,c
 14761  0087A6  0012               	return	
 14762                           
 14763                           ; BSR set to: 2
 14764                           ;lorawan.c: 2013: {;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 14765  0087A8  5107               	movf	(_loRa+2)& (0+255),w,b
 14766  0087AA  0BF0               	andlw	-16
 14767  0087AC  0909               	iorlw	9
 14768  0087AE  6F07               	movwf	(_loRa+2)& (0+255),b
 14769                           
 14770                           ; BSR set to: 2
 14771                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 14772  0087B0  EC18  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 14773  0087B4  0012               	return		;funcret
 14774  0087B6                     __end_of_SetReceptionNotOkState:
 14775                           	opt callstack 0
 14776                           
 14777 ;; *************** function _SetJoinFailState *****************
 14778 ;; Defined at:
 14779 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14780 ;; Parameters:    Size  Location     Type
 14781 ;;		None
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;		None
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  1    wreg      void 
 14786 ;; Registers used:
 14787 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14797 ;;Total ram usage:        0 bytes
 14798 ;; Hardware stack levels used:    1
 14799 ;; Hardware stack levels required when called:    8
 14800 ;; This function calls:
 14801 ;;		_RxJoinResponse
 14802 ;; This function is called by:
 14803 ;;		_LORAWAN_RxTimeout
 14804 ;;		_LORAWAN_RxDone
 14805 ;; This function uses a non-reentrant model
 14806 ;;
 14807                           
 14808                           	psect	text54
 14809  00A0D0                     __ptext54:
 14810                           	opt callstack 0
 14811  00A0D0                     _SetJoinFailState:
 14812                           	opt callstack 16
 14813                           
 14814                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 14815                           
 14816                           ;incstack = 0
 14817  00A0D0  0102               	movlb	2	; () banked
 14818  00A0D2  9907               	bcf	(_loRa+2)& (0+255),4,b
 14819                           
 14820                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 14821  00A0D4  9505               	bcf	_loRa& (0+255),2,b
 14822                           
 14823                           ; BSR set to: 2
 14824                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 14825  00A0D6  0EF0               	movlw	-16
 14826  00A0D8  1707               	andwf	(_loRa+2)& (0+255),f,b
 14827                           
 14828                           ; BSR set to: 2
 14829                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 14830  00A0DA  0101               	movlb	1	; () banked
 14831  00A0DC  5110               	movf	(_rxPayload+2)& (0+255),w,b
 14832  00A0DE  1111               	iorwf	(_rxPayload+3)& (0+255),w,b
 14833  00A0E0  B4D8               	btfsc	status,2,c
 14834  00A0E2  0012               	return	
 14835                           
 14836                           ; BSR set to: 1
 14837                           ;lorawan.c: 1110: {;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 14838  00A0E4  D801               	call	u21598
 14839  00A0E6  0012               	return	
 14840  00A0E8                     u21598:
 14841  00A0E8  0005               	push	
 14842  00A0EA  6EFA               	movwf	pclath,c
 14843  00A0EC  5110               	movf	(_rxPayload+2)& (0+255),w,b
 14844  00A0EE  6EFD               	movwf	tosl,c
 14845  00A0F0  5111               	movf	(_rxPayload+3)& (0+255),w,b
 14846  00A0F2  6EFE               	movwf	tosh,c
 14847  00A0F4  6AFF               	clrf	tosu,c
 14848  00A0F6  50FA               	movf	pclath,w,c
 14849  00A0F8  0E00               	movlw	0
 14850  00A0FA  0012               	return		;indir
 14851  00A0FC                     __end_of_SetJoinFailState:
 14852                           	opt callstack 0
 14853                           
 14854 ;; *************** function _RxJoinResponse *****************
 14855 ;; Defined at:
 14856 ;;		line 76 in file "main.c"
 14857 ;; Parameters:    Size  Location     Type
 14858 ;;  status          1    wreg     unsigned char 
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;  status          1    0[BANK0 ] unsigned char 
 14861 ;; Return value:  Size  Location     Type
 14862 ;;                  1    wreg      void 
 14863 ;; Registers used:
 14864 ;;		wreg, status,2, status,0
 14865 ;; Tracked objects:
 14866 ;;		On entry : 0/0
 14867 ;;		On exit  : 0/0
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14871 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14873 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14874 ;;Total ram usage:        1 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; Hardware stack levels required when called:    7
 14877 ;; This function calls:
 14878 ;;		Nothing
 14879 ;; This function is called by:
 14880 ;;		_main
 14881 ;;		_SetJoinFailState
 14882 ;;		_UpdateJoinSuccessState
 14883 ;; This function uses a non-reentrant model
 14884 ;;
 14885                           
 14886                           	psect	text55
 14887  00A5BC                     __ptext55:
 14888                           	opt callstack 0
 14889  00A5BC                     _RxJoinResponse:
 14890                           	opt callstack 18
 14891                           
 14892                           ;incstack = 0
 14893                           ;RxJoinResponse@status stored from wreg
 14894  00A5BC  0100               	movlb	0	; () banked
 14895  00A5BE  6F60               	movwf	RxJoinResponse@status& (0+255),b
 14896                           
 14897                           ;main.c: 78: if (status == 1){
 14898  00A5C0  0100               	movlb	0	; () banked
 14899  00A5C2  0560               	decf	RxJoinResponse@status& (0+255),w,b
 14900  00A5C4  A4D8               	btfss	status,2,c
 14901  00A5C6  D004               	goto	l19840
 14902                           
 14903                           ; BSR set to: 0
 14904                           ;main.c: 81: joined = 1;
 14905  00A5C8  0E01               	movlw	1
 14906  00A5CA  0101               	movlb	1	; () banked
 14907  00A5CC  6F25               	movwf	_joined& (0+255),b
 14908                           
 14909                           ;main.c: 82: }
 14910  00A5CE  0012               	return	
 14911  00A5D0                     l19840:
 14912                           
 14913                           ; BSR set to: 0
 14914                           ;main.c: 83: else {;main.c: 84: joined = 0;
 14915  00A5D0  0E00               	movlw	0
 14916  00A5D2  0101               	movlb	1	; () banked
 14917  00A5D4  6F25               	movwf	_joined& (0+255),b
 14918                           
 14919                           ; BSR set to: 1
 14920  00A5D6  0012               	return		;funcret
 14921  00A5D8                     __end_of_RxJoinResponse:
 14922                           	opt callstack 0
 14923                           
 14924 ;; *************** function _MacExecuteCommands *****************
 14925 ;; Defined at:
 14926 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14927 ;; Parameters:    Size  Location     Type
 14928 ;;  buffer          2   70[BANK0 ] PTR unsigned char 
 14929 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14930 ;;  fOptsLen        1   72[BANK0 ] unsigned char 
 14931 ;; Auto vars:     Size  Location     Type
 14932 ;;  ptr             2   76[BANK0 ] PTR unsigned char 
 14933 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14934 ;;  done            1   75[BANK0 ] unsigned char 
 14935 ;; Return value:  Size  Location     Type
 14936 ;;                  2   70[BANK0 ] PTR unsigned char 
 14937 ;; Registers used:
 14938 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14939 ;; Tracked objects:
 14940 ;;		On entry : 0/0
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14944 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14945 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14946 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14947 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14948 ;;Total ram usage:        8 bytes
 14949 ;; Hardware stack levels used:    1
 14950 ;; Hardware stack levels required when called:   11
 14951 ;; This function calls:
 14952 ;;		_ExecuteDevStatus
 14953 ;;		_ExecuteDutyCycle
 14954 ;;		_ExecuteLinkAdr
 14955 ;;		_ExecuteLinkCheck
 14956 ;;		_ExecuteNewChannel
 14957 ;;		_ExecuteRxParamSetupReq
 14958 ;;		_ExecuteRxTimingSetup
 14959 ;; This function is called by:
 14960 ;;		_LORAWAN_RxDone
 14961 ;; This function uses a non-reentrant model
 14962 ;;
 14963                           
 14964                           	psect	text56
 14965  00433C                     __ptext56:
 14966                           	opt callstack 0
 14967  00433C                     _MacExecuteCommands:
 14968                           	opt callstack 13
 14969                           
 14970                           ;lorawan.c: 1577: bool done = 0;
 14971                           
 14972                           ; BSR set to: 1
 14973                           ;incstack = 0
 14974  00433C  0E00               	movlw	0
 14975  00433E  0100               	movlb	0	; () banked
 14976  004340  6FAB               	movwf	MacExecuteCommands@done& (0+255),b
 14977                           
 14978                           ; BSR set to: 0
 14979                           ;lorawan.c: 1578: uint8_t *ptr;;lorawan.c: 1579: ptr = buffer;
 14980  004342  C0A6  F0AC         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 14981  004346  C0A7  F0AD         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 14982                           
 14983                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 14984  00434A  D0E7               	goto	l20212
 14985  00434C                     l20176:
 14986                           
 14987                           ; BSR set to: 0
 14988                           ;lorawan.c: 1581: {;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAc
      +                          k = 0;
 14989  00434C  0102               	movlb	2	; () banked
 14990  00434E  51AC               	movf	(_loRa+167)& (0+255),w,b
 14991  004350  0D02               	mullw	2
 14992  004352  0EAE               	movlw	low (_loRa+169)
 14993  004354  24F3               	addwf	prodl,w,c
 14994  004356  6ED9               	movwf	fsr2l,c
 14995  004358  0E02               	movlw	high (_loRa+169)
 14996  00435A  20F4               	addwfc	prodh,w,c
 14997  00435C  6EDA               	movwf	fsr2h,c
 14998  00435E  90DF               	bcf	indf2,0,c
 14999                           
 15000                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 15001  004360  51AC               	movf	(_loRa+167)& (0+255),w,b
 15002  004362  0D02               	mullw	2
 15003  004364  0EAE               	movlw	low (_loRa+169)
 15004  004366  24F3               	addwf	prodl,w,c
 15005  004368  6ED9               	movwf	fsr2l,c
 15006  00436A  0E02               	movlw	high (_loRa+169)
 15007  00436C  20F4               	addwfc	prodh,w,c
 15008  00436E  6EDA               	movwf	fsr2h,c
 15009  004370  92DF               	bcf	indf2,1,c
 15010                           
 15011                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 15012  004372  51AC               	movf	(_loRa+167)& (0+255),w,b
 15013  004374  0D02               	mullw	2
 15014  004376  0EAE               	movlw	low (_loRa+169)
 15015  004378  24F3               	addwf	prodl,w,c
 15016  00437A  6ED9               	movwf	fsr2l,c
 15017  00437C  0E02               	movlw	high (_loRa+169)
 15018  00437E  20F4               	addwfc	prodh,w,c
 15019  004380  6EDA               	movwf	fsr2h,c
 15020  004382  94DF               	bcf	indf2,2,c
 15021                           
 15022                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 15023  004384  51AC               	movf	(_loRa+167)& (0+255),w,b
 15024  004386  0D02               	mullw	2
 15025  004388  0EAE               	movlw	low (_loRa+169)
 15026  00438A  24F3               	addwf	prodl,w,c
 15027  00438C  6ED9               	movwf	fsr2l,c
 15028  00438E  0E02               	movlw	high (_loRa+169)
 15029  004390  20F4               	addwfc	prodh,w,c
 15030  004392  6EDA               	movwf	fsr2h,c
 15031  004394  96DF               	bcf	indf2,3,c
 15032                           
 15033                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 15034  004396  51AC               	movf	(_loRa+167)& (0+255),w,b
 15035  004398  0D02               	mullw	2
 15036  00439A  0EAE               	movlw	low (_loRa+169)
 15037  00439C  24F3               	addwf	prodl,w,c
 15038  00439E  6ED9               	movwf	fsr2l,c
 15039  0043A0  0E02               	movlw	high (_loRa+169)
 15040  0043A2  20F4               	addwfc	prodh,w,c
 15041  0043A4  6EDA               	movwf	fsr2h,c
 15042  0043A6  98DF               	bcf	indf2,4,c
 15043                           
 15044                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 15045  0043A8  51AC               	movf	(_loRa+167)& (0+255),w,b
 15046  0043AA  0D02               	mullw	2
 15047  0043AC  0EAE               	movlw	low (_loRa+169)
 15048  0043AE  24F3               	addwf	prodl,w,c
 15049  0043B0  6ED9               	movwf	fsr2l,c
 15050  0043B2  0E02               	movlw	high (_loRa+169)
 15051  0043B4  20F4               	addwfc	prodh,w,c
 15052  0043B6  6EDA               	movwf	fsr2h,c
 15053  0043B8  9ADF               	bcf	indf2,5,c
 15054                           
 15055                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 15056  0043BA  51AC               	movf	(_loRa+167)& (0+255),w,b
 15057  0043BC  0D02               	mullw	2
 15058  0043BE  0EAE               	movlw	low (_loRa+169)
 15059  0043C0  24F3               	addwf	prodl,w,c
 15060  0043C2  6ED9               	movwf	fsr2l,c
 15061  0043C4  0E02               	movlw	high (_loRa+169)
 15062  0043C6  20F4               	addwfc	prodh,w,c
 15063  0043C8  6EDA               	movwf	fsr2h,c
 15064  0043CA  9CDF               	bcf	indf2,6,c
 15065                           
 15066                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 15067  0043CC  51AC               	movf	(_loRa+167)& (0+255),w,b
 15068  0043CE  0D02               	mullw	2
 15069  0043D0  0EAE               	movlw	low (_loRa+169)
 15070  0043D2  24F3               	addwf	prodl,w,c
 15071  0043D4  6ED9               	movwf	fsr2l,c
 15072  0043D6  0E02               	movlw	high (_loRa+169)
 15073  0043D8  20F4               	addwfc	prodh,w,c
 15074  0043DA  6EDA               	movwf	fsr2h,c
 15075  0043DC  9EDF               	bcf	indf2,7,c
 15076                           
 15077                           ; BSR set to: 2
 15078                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 15079  0043DE  C0AC  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15080  0043E2  C0AD  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15081  0043E6  51AC               	movf	(_loRa+167)& (0+255),w,b
 15082  0043E8  0D02               	mullw	2
 15083  0043EA  0EAD               	movlw	low (_loRa+168)
 15084  0043EC  24F3               	addwf	prodl,w,c
 15085  0043EE  6EE9               	movwf	fsr0l,c
 15086  0043F0  0E02               	movlw	high (_loRa+168)
 15087  0043F2  20F4               	addwfc	prodh,w,c
 15088  0043F4  6EEA               	movwf	fsr0h,c
 15089  0043F6  CFDF FFEF          	movff	indf2,indf0
 15090                           
 15091                           ;lorawan.c: 1595: switch (*ptr ++)
 15092  0043FA  D061               	goto	l20204
 15093  0043FC                     l20180:
 15094                           
 15095                           ; BSR set to: 0
 15096                           ;lorawan.c: 1598: {;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 15097  0043FC  C0AC  F060         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 15098  004400  C0AD  F061         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 15099  004404  ECA9  F04E         	call	_ExecuteLinkCheck
 15100  004408  C060  F0AC         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 15101  00440C  C061  F0AD         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 15102  004410                     l20182:
 15103                           
 15104                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 15105  004410  0102               	movlb	2	; () banked
 15106  004412  51AC               	movf	(_loRa+167)& (0+255),w,b
 15107  004414  0D02               	mullw	2
 15108  004416  0EAD               	movlw	low (_loRa+168)
 15109  004418  24F3               	addwf	prodl,w,c
 15110  00441A  6ED9               	movwf	fsr2l,c
 15111  00441C  0E02               	movlw	high (_loRa+168)
 15112  00441E  20F4               	addwfc	prodh,w,c
 15113  004420  6EDA               	movwf	fsr2h,c
 15114  004422  0EFF               	movlw	255
 15115  004424  6EDF               	movwf	indf2,c
 15116                           
 15117                           ;lorawan.c: 1602: } break;
 15118  004426  D069               	goto	l20206
 15119  004428                     l20184:
 15120                           
 15121                           ; BSR set to: 0
 15122                           ;lorawan.c: 1605: {;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 15123  004428  C0AC  F06F         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 15124  00442C  C0AD  F070         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 15125  004430  EC7E  F024         	call	_ExecuteLinkAdr	;wreg free
 15126  004434  C06F  F0AC         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 15127  004438  C070  F0AD         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 15128                           
 15129                           ;lorawan.c: 1607: } break;
 15130  00443C  D05E               	goto	l20206
 15131  00443E                     l20186:
 15132                           
 15133                           ; BSR set to: 0
 15134                           ;lorawan.c: 1610: {;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 15135  00443E  C0AC  F060         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 15136  004442  C0AD  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 15137  004446  EC70  F049         	call	_ExecuteDutyCycle	;wreg free
 15138  00444A  C060  F0AC         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 15139  00444E  C061  F0AD         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 15140                           
 15141                           ;lorawan.c: 1612: } break;
 15142  004452  D053               	goto	l20206
 15143  004454                     l20188:
 15144                           
 15145                           ; BSR set to: 0
 15146                           ;lorawan.c: 1615: {;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 15147  004454  C0AC  F09E         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 15148  004458  C0AD  F09F         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 15149  00445C  ECE6  F029         	call	_ExecuteRxParamSetupReq	;wreg free
 15150  004460  C09E  F0AC         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 15151  004464  C09F  F0AD         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 15152                           
 15153                           ;lorawan.c: 1617: } break;
 15154  004468  D048               	goto	l20206
 15155  00446A                     l20190:
 15156                           
 15157                           ; BSR set to: 0
 15158                           ;lorawan.c: 1620: {;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 15159  00446A  C0AC  F060         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 15160  00446E  C0AD  F061         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 15161  004472  EC13  F054         	call	_ExecuteDevStatus	;wreg free
 15162  004476  C060  F0AC         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 15163  00447A  C061  F0AD         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 15164                           
 15165                           ;lorawan.c: 1622: } break;
 15166  00447E  D03D               	goto	l20206
 15167  004480                     l20192:
 15168                           
 15169                           ; BSR set to: 0
 15170                           ;lorawan.c: 1625: {;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 15171  004480  C0AC  F09E         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 15172  004484  C0AD  F09F         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 15173  004488  ECA2  F022         	call	_ExecuteNewChannel	;wreg free
 15174  00448C  C09E  F0AC         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 15175  004490  C09F  F0AD         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 15176                           
 15177                           ;lorawan.c: 1628: } break;
 15178  004494  D032               	goto	l20206
 15179  004496                     l20194:
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;lorawan.c: 1631: {;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 15183  004496  C0AC  F067         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 15184  00449A  C0AD  F068         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 15185  00449E  ECFC  F050         	call	_ExecuteRxTimingSetup	;wreg free
 15186  0044A2  C067  F0AC         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 15187  0044A6  C068  F0AD         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 15188                           
 15189                           ;lorawan.c: 1633: } break;
 15190  0044AA  D027               	goto	l20206
 15191  0044AC                     l20196:
 15192                           
 15193                           ; BSR set to: 0
 15194                           ;lorawan.c: 1636: {;lorawan.c: 1637: done = 1;
 15195  0044AC  0E01               	movlw	1
 15196  0044AE  6FAB               	movwf	MacExecuteCommands@done& (0+255),b
 15197                           
 15198                           ; BSR set to: 0
 15199                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 15200  0044B0  51A8               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15201  0044B2  25A6               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 15202  0044B4  6FAC               	movwf	MacExecuteCommands@ptr& (0+255),b
 15203  0044B6  0E00               	movlw	0
 15204  0044B8  21A7               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 15205  0044BA  6FAD               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 15206  0044BC  D7A9               	goto	l20182
 15207  0044BE                     l20204:
 15208                           
 15209                           ; BSR set to: 2
 15210  0044BE  C0AC  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15211  0044C2  C0AD  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15212  0044C6  0100               	movlb	0	; () banked
 15213  0044C8  4BAC               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 15214  0044CA  2BAD               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 15215  0044CC  50DF               	movf	indf2,w,c
 15216                           
 15217                           ; Switch size 1, requested type "simple"
 15218                           ; Number of cases is 7, Range of values is 2 to 8
 15219                           ; switch strategies available:
 15220                           ; Name         Instructions Cycles
 15221                           ; simple_byte           22    12 (average)
 15222                           ;	Chosen strategy is simple_byte
 15223  0044CE  0A02               	xorlw	2	; case 2
 15224  0044D0  B4D8               	btfsc	status,2,c
 15225  0044D2  D794               	goto	l20180
 15226  0044D4  0A01               	xorlw	1	; case 3
 15227  0044D6  B4D8               	btfsc	status,2,c
 15228  0044D8  D7A7               	goto	l20184
 15229  0044DA  0A07               	xorlw	7	; case 4
 15230  0044DC  B4D8               	btfsc	status,2,c
 15231  0044DE  D7AF               	goto	l20186
 15232  0044E0  0A01               	xorlw	1	; case 5
 15233  0044E2  B4D8               	btfsc	status,2,c
 15234  0044E4  D7B7               	goto	l20188
 15235  0044E6  0A03               	xorlw	3	; case 6
 15236  0044E8  B4D8               	btfsc	status,2,c
 15237  0044EA  D7BF               	goto	l20190
 15238  0044EC  0A01               	xorlw	1	; case 7
 15239  0044EE  B4D8               	btfsc	status,2,c
 15240  0044F0  D7C7               	goto	l20192
 15241  0044F2  0A0F               	xorlw	15	; case 8
 15242  0044F4  B4D8               	btfsc	status,2,c
 15243  0044F6  D7CF               	goto	l20194
 15244  0044F8  D7D9               	goto	l20196
 15245  0044FA                     l20206:
 15246                           
 15247                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&;lora
      +                          wan.c: 1644: (loRa.crtMacCmdIndex < 16))
 15248  0044FA  0102               	movlb	2	; () banked
 15249  0044FC  51AC               	movf	(_loRa+167)& (0+255),w,b
 15250  0044FE  0D02               	mullw	2
 15251  004500  0EAD               	movlw	low (_loRa+168)
 15252  004502  24F3               	addwf	prodl,w,c
 15253  004504  6ED9               	movwf	fsr2l,c
 15254  004506  0E02               	movlw	high (_loRa+168)
 15255  004508  20F4               	addwfc	prodh,w,c
 15256  00450A  6EDA               	movwf	fsr2h,c
 15257  00450C  28DE               	incf	postinc2,w,c
 15258  00450E  B4D8               	btfsc	status,2,c
 15259  004510  D004               	goto	l20212
 15260                           
 15261                           ; BSR set to: 2
 15262  004512  0E10               	movlw	16
 15263  004514  61AC               	cpfslt	(_loRa+167)& (0+255),b
 15264  004516  D001               	goto	l20212
 15265                           
 15266                           ; BSR set to: 2
 15267                           ;lorawan.c: 1645: {;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 15268  004518  2BAC               	incf	(_loRa+167)& (0+255),f,b
 15269  00451A                     l20212:
 15270  00451A  0100               	movlb	0	; () banked
 15271  00451C  51A8               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15272  00451E  25A6               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 15273  004520  6FA9               	movwf	??_MacExecuteCommands& (0+255),b
 15274  004522  0E00               	movlw	0
 15275  004524  21A7               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 15276  004526  6FAA               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15277  004528  51A9               	movf	??_MacExecuteCommands& (0+255),w,b
 15278  00452A  5DAC               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 15279  00452C  51AA               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 15280  00452E  59AD               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 15281  004530  B0D8               	btfsc	status,0,c
 15282  004532  D003               	goto	u22130
 15283                           
 15284                           ; BSR set to: 0
 15285  004534  51AB               	movf	MacExecuteCommands@done& (0+255),w,b
 15286  004536  B4D8               	btfsc	status,2,c
 15287  004538  D709               	goto	l20176
 15288  00453A                     u22130:
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;lorawan.c: 1647: };lorawan.c: 1648: };lorawan.c: 1649: return ptr;
 15292  00453A  C0AC  F0A6         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 15293  00453E  C0AD  F0A7         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 15294                           
 15295                           ; BSR set to: 0
 15296  004542  0012               	return		;funcret
 15297  004544                     __end_of_MacExecuteCommands:
 15298                           	opt callstack 0
 15299                           
 15300 ;; *************** function _ExecuteRxTimingSetup *****************
 15301 ;; Defined at:
 15302 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15303 ;; Parameters:    Size  Location     Type
 15304 ;;  ptr             2    7[BANK0 ] PTR unsigned char 
 15305 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;  delay           1    9[BANK0 ] unsigned char 
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  2    7[BANK0 ] PTR unsigned char 
 15310 ;; Registers used:
 15311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15317 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15318 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15320 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15321 ;;Total ram usage:        3 bytes
 15322 ;; Hardware stack levels used:    1
 15323 ;; Hardware stack levels required when called:    9
 15324 ;; This function calls:
 15325 ;;		_UpdateReceiveDelays
 15326 ;; This function is called by:
 15327 ;;		_MacExecuteCommands
 15328 ;; This function uses a non-reentrant model
 15329 ;;
 15330                           
 15331                           	psect	text57
 15332  00A1F8                     __ptext57:
 15333                           	opt callstack 0
 15334  00A1F8                     _ExecuteRxTimingSetup:
 15335                           	opt callstack 14
 15336                           
 15337                           ;lorawan.c: 1661: uint8_t delay;;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 15338                           
 15339                           ; BSR set to: 0
 15340                           ;incstack = 0
 15341  00A1F8  C067  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 15342  00A1FC  C068  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 15343  00A200  50DF               	movf	indf2,w,c
 15344  00A202  0B0F               	andlw	15
 15345  00A204  0100               	movlb	0	; () banked
 15346  00A206  6F69               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 15347                           
 15348                           ; BSR set to: 0
 15349                           ;lorawan.c: 1664: ptr++;
 15350  00A208  4B67               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 15351  00A20A  2B68               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 15352                           
 15353                           ; BSR set to: 0
 15354                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 15355  00A20C  5169               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 15356  00A20E  ECE4  F04C         	call	_UpdateReceiveDelays
 15357                           
 15358                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 15359  00A212  0102               	movlb	2	; () banked
 15360  00A214  8109               	bsf	(_loRa+4)& (0+255),0,b
 15361                           
 15362                           ; BSR set to: 2
 15363                           ;lorawan.c: 1669: return ptr;
 15364  00A216  C067  F067         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 15365  00A21A  C068  F068         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 15366                           
 15367                           ; BSR set to: 2
 15368  00A21E  0012               	return		;funcret
 15369  00A220                     __end_of_ExecuteRxTimingSetup:
 15370                           	opt callstack 0
 15371                           
 15372 ;; *************** function _UpdateReceiveDelays *****************
 15373 ;; Defined at:
 15374 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15375 ;; Parameters:    Size  Location     Type
 15376 ;;  delay           1    wreg     unsigned char 
 15377 ;; Auto vars:     Size  Location     Type
 15378 ;;  delay           1    6[BANK0 ] unsigned char 
 15379 ;; Return value:  Size  Location     Type
 15380 ;;                  1    wreg      void 
 15381 ;; Registers used:
 15382 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15383 ;; Tracked objects:
 15384 ;;		On entry : 0/0
 15385 ;;		On exit  : 0/0
 15386 ;;		Unchanged: 0/0
 15387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15389 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15391 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15392 ;;Total ram usage:        1 bytes
 15393 ;; Hardware stack levels used:    1
 15394 ;; Hardware stack levels required when called:    8
 15395 ;; This function calls:
 15396 ;;		___wmul
 15397 ;; This function is called by:
 15398 ;;		_LORAWAN_RxDone
 15399 ;;		_ExecuteRxTimingSetup
 15400 ;; This function uses a non-reentrant model
 15401 ;;
 15402                           
 15403                           	psect	text58
 15404  0099C8                     __ptext58:
 15405                           	opt callstack 0
 15406  0099C8                     _UpdateReceiveDelays:
 15407                           	opt callstack 16
 15408                           
 15409                           ; BSR set to: 2
 15410                           ;incstack = 0
 15411                           ;UpdateReceiveDelays@delay stored from wreg
 15412  0099C8  0100               	movlb	0	; () banked
 15413  0099CA  6F66               	movwf	UpdateReceiveDelays@delay& (0+255),b
 15414                           
 15415                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 15416  0099CC  C066  F060         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 15417  0099D0  0100               	movlb	0	; () banked
 15418  0099D2  6B61               	clrf	(___wmul@multiplier+1)& (0+255),b
 15419  0099D4  0E03               	movlw	3
 15420  0099D6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15421  0099D8  0EE8               	movlw	232
 15422  0099DA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15423  0099DC  EC10  F051         	call	___wmul	;wreg free
 15424  0099E0  C060  F299         	movff	?___wmul,_loRa+148
 15425  0099E4  C061  F29A         	movff	?___wmul+1,_loRa+149
 15426                           
 15427                           ;lorawan.c: 2029: if (delay == 0)
 15428  0099E8  0100               	movlb	0	; () banked
 15429  0099EA  5166               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 15430  0099EC  A4D8               	btfss	status,2,c
 15431  0099EE  D005               	goto	l19210
 15432                           
 15433                           ; BSR set to: 0
 15434                           ;lorawan.c: 2030: {;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 15435  0099F0  0E03               	movlw	3
 15436  0099F2  0102               	movlb	2	; () banked
 15437  0099F4  6F9A               	movwf	(_loRa+149)& (0+255),b
 15438  0099F6  0EE8               	movlw	232
 15439  0099F8  6F99               	movwf	(_loRa+148)& (0+255),b
 15440  0099FA                     l19210:
 15441                           
 15442                           ;lorawan.c: 2032: };lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protoc
      +                          olParameters.receiveDelay1 + 1000;
 15443  0099FA  0EE8               	movlw	232
 15444  0099FC  0102               	movlb	2	; () banked
 15445  0099FE  2599               	addwf	(_loRa+148)& (0+255),w,b
 15446  009A00  6F9B               	movwf	(_loRa+150)& (0+255),b
 15447  009A02  0E03               	movlw	3
 15448  009A04  219A               	addwfc	(_loRa+149)& (0+255),w,b
 15449  009A06  6F9C               	movwf	(_loRa+151)& (0+255),b
 15450                           
 15451                           ; BSR set to: 2
 15452  009A08  0012               	return		;funcret
 15453  009A0A                     __end_of_UpdateReceiveDelays:
 15454                           	opt callstack 0
 15455                           
 15456 ;; *************** function ___wmul *****************
 15457 ;; Defined at:
 15458 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;  multiplier      2    0[BANK0 ] unsigned int 
 15461 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 15462 ;; Auto vars:     Size  Location     Type
 15463 ;;  product         2    4[BANK0 ] unsigned int 
 15464 ;; Return value:  Size  Location     Type
 15465 ;;                  2    0[BANK0 ] unsigned int 
 15466 ;; Registers used:
 15467 ;;		wreg, status,2, status,0, prodl, prodh
 15468 ;; Tracked objects:
 15469 ;;		On entry : 0/0
 15470 ;;		On exit  : 0/0
 15471 ;;		Unchanged: 0/0
 15472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15473 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15474 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15476 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15477 ;;Total ram usage:        6 bytes
 15478 ;; Hardware stack levels used:    1
 15479 ;; Hardware stack levels required when called:    7
 15480 ;; This function calls:
 15481 ;;		Nothing
 15482 ;; This function is called by:
 15483 ;;		_UpdateReceiveDelays
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487                           	psect	text59
 15488  00A220                     __ptext59:
 15489                           	opt callstack 0
 15490  00A220                     ___wmul:
 15491                           	opt callstack 16
 15492                           
 15493                           ; BSR set to: 2
 15494                           ;incstack = 0
 15495  00A220  0100               	movlb	0	; () banked
 15496  00A222  5160               	movf	___wmul@multiplier& (0+255),w,b
 15497  00A224  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15498  00A226  CFF3 F064          	movff	prodl,___wmul@product
 15499  00A22A  CFF4 F065          	movff	prodh,___wmul@product+1
 15500  00A22E  5160               	movf	___wmul@multiplier& (0+255),w,b
 15501  00A230  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15502  00A232  50F3               	movf	prodl,w,c
 15503  00A234  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15504  00A236  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15505  00A238  0362               	mulwf	___wmul@multiplicand& (0+255),b
 15506  00A23A  50F3               	movf	prodl,w,c
 15507  00A23C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 15508                           
 15509                           ; BSR set to: 0
 15510  00A23E  C064  F060         	movff	___wmul@product,?___wmul
 15511  00A242  C065  F061         	movff	___wmul@product+1,?___wmul+1
 15512                           
 15513                           ; BSR set to: 0
 15514  00A246  0012               	return		;funcret
 15515  00A248                     __end_of___wmul:
 15516                           	opt callstack 0
 15517                           
 15518 ;; *************** function _ExecuteRxParamSetupReq *****************
 15519 ;; Defined at:
 15520 ;;		line 741 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15521 ;; Parameters:    Size  Location     Type
 15522 ;;  ptr             2   62[BANK0 ] PTR unsigned char 
 15523 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15524 ;; Auto vars:     Size  Location     Type
 15525 ;;  frequency       4   64[BANK0 ] unsigned long 
 15526 ;;  dlSettings      1   68[BANK0 ] struct .
 15527 ;; Return value:  Size  Location     Type
 15528 ;;                  2   62[BANK0 ] PTR unsigned char 
 15529 ;; Registers used:
 15530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15531 ;; Tracked objects:
 15532 ;;		On entry : 0/0
 15533 ;;		On exit  : 0/0
 15534 ;;		Unchanged: 0/0
 15535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15536 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15537 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15539 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15540 ;;Total ram usage:        7 bytes
 15541 ;; Hardware stack levels used:    1
 15542 ;; Hardware stack levels required when called:    8
 15543 ;; This function calls:
 15544 ;;		_UpdateReceiveWindow2Parameters
 15545 ;;		_ValidateDataRate
 15546 ;;		_ValidateFrequency
 15547 ;;		_ValidateRxOffset
 15548 ;;		___lmul
 15549 ;; This function is called by:
 15550 ;;		_MacExecuteCommands
 15551 ;; This function uses a non-reentrant model
 15552 ;;
 15553                           
 15554                           	psect	text60
 15555  0053CC                     __ptext60:
 15556                           	opt callstack 0
 15557  0053CC                     _ExecuteRxParamSetupReq:
 15558                           	opt callstack 15
 15559                           
 15560                           ;lorawan_eu.c: 748: dlSettings.value = *(ptr++);
 15561                           
 15562                           ; BSR set to: 0
 15563                           ;incstack = 0
 15564  0053CC  C09E  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15565  0053D0  C09F  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15566  0053D4  50DF               	movf	indf2,w,c
 15567  0053D6  0100               	movlb	0	; () banked
 15568  0053D8  6FA4               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 15569                           
 15570                           ; BSR set to: 0
 15571  0053DA  4B9E               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 15572  0053DC  2B9F               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 15573                           
 15574                           ; BSR set to: 0
 15575                           ;lorawan_eu.c: 750: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15576  0053DE  C09E  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15577  0053E2  C09F  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15578  0053E6  0EFF               	movlw	255
 15579  0053E8  14DE               	andwf	postinc2,w,c
 15580  0053EA  6FA0               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15581  0053EC  0EFF               	movlw	255
 15582  0053EE  14DE               	andwf	postinc2,w,c
 15583  0053F0  6FA1               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15584  0053F2  0EFF               	movlw	255
 15585  0053F4  14DE               	andwf	postinc2,w,c
 15586  0053F6  6FA2               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15587  0053F8  0E00               	movlw	0
 15588  0053FA  14DE               	andwf	postinc2,w,c
 15589  0053FC  6FA3               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15590                           
 15591                           ; BSR set to: 0
 15592                           ;lorawan_eu.c: 751: frequency = frequency * 100;
 15593  0053FE  C0A0  F092         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 15594  005402  C0A1  F093         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 15595  005406  C0A2  F094         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 15596  00540A  C0A3  F095         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 15597  00540E  0E64               	movlw	100
 15598  005410  6F96               	movwf	___lmul@multiplicand& (0+255),b
 15599  005412  0E00               	movlw	0
 15600  005414  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15601  005416  0E00               	movlw	0
 15602  005418  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15603  00541A  0E00               	movlw	0
 15604  00541C  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15605  00541E  EC19  F049         	call	___lmul	;wreg free
 15606  005422  C092  F0A0         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 15607  005426  C093  F0A1         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 15608  00542A  C094  F0A2         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 15609  00542E  C095  F0A3         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 15610                           
 15611                           ;lorawan_eu.c: 752: ptr = ptr + 3;
 15612  005432  0E03               	movlw	3
 15613  005434  0100               	movlb	0	; () banked
 15614  005436  259E               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 15615  005438  6F9E               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 15616  00543A  0E00               	movlw	0
 15617  00543C  219F               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 15618  00543E  6F9F               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 15619                           
 15620                           ; BSR set to: 0
 15621                           ;lorawan_eu.c: 754: if (ValidateFrequency (frequency) == OK)
 15622  005440  C0A0  F060         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 15623  005444  C0A1  F061         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 15624  005448  C0A2  F062         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 15625  00544C  C0A3  F063         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 15626  005450  ECF7  F045         	call	_ValidateFrequency	;wreg free
 15627  005454  0900               	iorlw	0
 15628  005456  A4D8               	btfss	status,2,c
 15629  005458  D00A               	goto	l19648
 15630                           
 15631                           ;lorawan_eu.c: 755: {;lorawan_eu.c: 756: loRa.macCommands[loRa.crtMacCmdIndex].channelAc
      +                          k = 1;
 15632  00545A  0102               	movlb	2	; () banked
 15633  00545C  51AC               	movf	(_loRa+167)& (0+255),w,b
 15634  00545E  0D02               	mullw	2
 15635  005460  0EAE               	movlw	low (_loRa+169)
 15636  005462  24F3               	addwf	prodl,w,c
 15637  005464  6ED9               	movwf	fsr2l,c
 15638  005466  0E02               	movlw	high (_loRa+169)
 15639  005468  20F4               	addwfc	prodh,w,c
 15640  00546A  6EDA               	movwf	fsr2h,c
 15641  00546C  86DF               	bsf	indf2,3,c
 15642  00546E                     l19648:
 15643                           
 15644                           ;lorawan_eu.c: 757: };lorawan_eu.c: 759: if (ValidateDataRate (dlSettings.bits.rx2DataRa
      +                          te) == OK)
 15645  00546E  0100               	movlb	0	; () banked
 15646  005470  51A4               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15647  005472  0B0F               	andlw	15
 15648  005474  EC49  F053         	call	_ValidateDataRate
 15649  005478  0900               	iorlw	0
 15650  00547A  A4D8               	btfss	status,2,c
 15651  00547C  D00A               	goto	l19652
 15652                           
 15653                           ;lorawan_eu.c: 760: {;lorawan_eu.c: 761: loRa.macCommands[loRa.crtMacCmdIndex].dataRateR
      +                          eceiveWindowAck = 1;
 15654  00547E  0102               	movlb	2	; () banked
 15655  005480  51AC               	movf	(_loRa+167)& (0+255),w,b
 15656  005482  0D02               	mullw	2
 15657  005484  0EAE               	movlw	low (_loRa+169)
 15658  005486  24F3               	addwf	prodl,w,c
 15659  005488  6ED9               	movwf	fsr2l,c
 15660  00548A  0E02               	movlw	high (_loRa+169)
 15661  00548C  20F4               	addwfc	prodh,w,c
 15662  00548E  6EDA               	movwf	fsr2h,c
 15663  005490  88DF               	bsf	indf2,4,c
 15664  005492                     l19652:
 15665                           
 15666                           ;lorawan_eu.c: 762: };lorawan_eu.c: 764: if (ValidateRxOffset (dlSettings.bits.rx1DROffs
      +                          et) == OK)
 15667  005492  0100               	movlb	0	; () banked
 15668  005494  39A4               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15669  005496  0B07               	andlw	7
 15670  005498  EC3D  F053         	call	_ValidateRxOffset
 15671  00549C  0900               	iorlw	0
 15672  00549E  A4D8               	btfss	status,2,c
 15673  0054A0  D00A               	goto	l1145
 15674                           
 15675                           ;lorawan_eu.c: 765: {;lorawan_eu.c: 766: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffe
      +                          stAck = 1;
 15676  0054A2  0102               	movlb	2	; () banked
 15677  0054A4  51AC               	movf	(_loRa+167)& (0+255),w,b
 15678  0054A6  0D02               	mullw	2
 15679  0054A8  0EAE               	movlw	low (_loRa+169)
 15680  0054AA  24F3               	addwf	prodl,w,c
 15681  0054AC  6ED9               	movwf	fsr2l,c
 15682  0054AE  0E02               	movlw	high (_loRa+169)
 15683  0054B0  20F4               	addwfc	prodh,w,c
 15684  0054B2  6EDA               	movwf	fsr2h,c
 15685  0054B4  8ADF               	bsf	indf2,5,c
 15686  0054B6                     l1145:
 15687                           
 15688                           ;lorawan_eu.c: 767: };lorawan_eu.c: 769: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dat
      +                          aRateReceiveWindowAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) &
      +                          & (loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck == 1))
 15689  0054B6  0102               	movlb	2	; () banked
 15690  0054B8  51AC               	movf	(_loRa+167)& (0+255),w,b
 15691  0054BA  0D02               	mullw	2
 15692  0054BC  0EAE               	movlw	low (_loRa+169)
 15693  0054BE  24F3               	addwf	prodl,w,c
 15694  0054C0  6ED9               	movwf	fsr2l,c
 15695  0054C2  0E02               	movlw	high (_loRa+169)
 15696  0054C4  20F4               	addwfc	prodh,w,c
 15697  0054C6  6EDA               	movwf	fsr2h,c
 15698  0054C8  A8DF               	btfss	indf2,4,c
 15699  0054CA  D029               	goto	l19666
 15700                           
 15701                           ; BSR set to: 2
 15702  0054CC  51AC               	movf	(_loRa+167)& (0+255),w,b
 15703  0054CE  0D02               	mullw	2
 15704  0054D0  0EAE               	movlw	low (_loRa+169)
 15705  0054D2  24F3               	addwf	prodl,w,c
 15706  0054D4  6ED9               	movwf	fsr2l,c
 15707  0054D6  0E02               	movlw	high (_loRa+169)
 15708  0054D8  20F4               	addwfc	prodh,w,c
 15709  0054DA  6EDA               	movwf	fsr2h,c
 15710  0054DC  A6DF               	btfss	indf2,3,c
 15711  0054DE  D01F               	goto	l19666
 15712                           
 15713                           ; BSR set to: 2
 15714  0054E0  51AC               	movf	(_loRa+167)& (0+255),w,b
 15715  0054E2  0D02               	mullw	2
 15716  0054E4  0EAE               	movlw	low (_loRa+169)
 15717  0054E6  24F3               	addwf	prodl,w,c
 15718  0054E8  6ED9               	movwf	fsr2l,c
 15719  0054EA  0E02               	movlw	high (_loRa+169)
 15720  0054EC  20F4               	addwfc	prodh,w,c
 15721  0054EE  6EDA               	movwf	fsr2h,c
 15722  0054F0  AADF               	btfss	indf2,5,c
 15723  0054F2  D015               	goto	l19666
 15724                           
 15725                           ; BSR set to: 2
 15726                           ;lorawan_eu.c: 770: {;lorawan_eu.c: 771: loRa.offset = dlSettings.bits.rx1DROffset;
 15727  0054F4  0100               	movlb	0	; () banked
 15728  0054F6  39A4               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15729  0054F8  0B07               	andlw	7
 15730  0054FA  0102               	movlb	2	; () banked
 15731  0054FC  6FF4               	movwf	(_loRa+239)& (0+255),b
 15732                           
 15733                           ; BSR set to: 2
 15734                           ;lorawan_eu.c: 772: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 15735  0054FE  C0A0  F060         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 15736  005502  C0A1  F061         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 15737  005506  C0A2  F062         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 15738  00550A  C0A3  F063         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 15739  00550E  0100               	movlb	0	; () banked
 15740  005510  51A4               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15741  005512  0B0F               	andlw	15
 15742  005514  6F64               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 15743  005516  EC61  F053         	call	_UpdateReceiveWindow2Parameters	;wreg free
 15744                           
 15745                           ;lorawan_eu.c: 773: loRa.macStatus.secondReceiveWindowModified = 1;
 15746  00551A  0102               	movlb	2	; () banked
 15747  00551C  8F08               	bsf	(_loRa+3)& (0+255),7,b
 15748  00551E                     l19666:
 15749                           
 15750                           ; BSR set to: 2
 15751                           ;lorawan_eu.c: 774: };lorawan_eu.c: 776: return ptr;
 15752  00551E  C09E  F09E         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 15753  005522  C09F  F09F         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 15754                           
 15755                           ; BSR set to: 2
 15756  005526  0012               	return		;funcret
 15757  005528                     __end_of_ExecuteRxParamSetupReq:
 15758                           	opt callstack 0
 15759                           
 15760 ;; *************** function _ValidateRxOffset *****************
 15761 ;; Defined at:
 15762 ;;		line 1077 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15763 ;; Parameters:    Size  Location     Type
 15764 ;;  rxOffset        1    wreg     unsigned char 
 15765 ;; Auto vars:     Size  Location     Type
 15766 ;;  rxOffset        1    0[BANK0 ] unsigned char 
 15767 ;;  result          1    1[BANK0 ] enum E6118
 15768 ;; Return value:  Size  Location     Type
 15769 ;;                  1    wreg      enum E6118
 15770 ;; Registers used:
 15771 ;;		wreg, status,2, status,0
 15772 ;; Tracked objects:
 15773 ;;		On entry : 0/0
 15774 ;;		On exit  : 0/0
 15775 ;;		Unchanged: 0/0
 15776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15778 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15780 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15781 ;;Total ram usage:        2 bytes
 15782 ;; Hardware stack levels used:    1
 15783 ;; Hardware stack levels required when called:    7
 15784 ;; This function calls:
 15785 ;;		Nothing
 15786 ;; This function is called by:
 15787 ;;		_ExecuteRxParamSetupReq
 15788 ;; This function uses a non-reentrant model
 15789 ;;
 15790                           
 15791                           	psect	text61
 15792  00A67A                     __ptext61:
 15793                           	opt callstack 0
 15794  00A67A                     _ValidateRxOffset:
 15795                           	opt callstack 15
 15796                           
 15797                           ; BSR set to: 2
 15798                           ;incstack = 0
 15799                           ;ValidateRxOffset@rxOffset stored from wreg
 15800  00A67A  0100               	movlb	0	; () banked
 15801  00A67C  6F60               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 15802                           
 15803                           ;lorawan_eu.c: 1079: LorawanError_t result = OK;
 15804  00A67E  0E00               	movlw	0
 15805  00A680  0100               	movlb	0	; () banked
 15806  00A682  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 15807                           
 15808                           ; BSR set to: 0
 15809                           ;lorawan_eu.c: 1081: if (rxOffset > 5)
 15810  00A684  0E05               	movlw	5
 15811  00A686  6560               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 15812  00A688  D002               	goto	l1241
 15813                           
 15814                           ; BSR set to: 0
 15815                           ;lorawan_eu.c: 1082: {;lorawan_eu.c: 1083: result = INVALID_PARAMETER;
 15816  00A68A  0E03               	movlw	3
 15817  00A68C  6F61               	movwf	ValidateRxOffset@result& (0+255),b
 15818  00A68E                     l1241:
 15819                           
 15820                           ; BSR set to: 0
 15821                           ;lorawan_eu.c: 1084: };lorawan_eu.c: 1086: return result;
 15822  00A68E  5161               	movf	ValidateRxOffset@result& (0+255),w,b
 15823                           
 15824                           ; BSR set to: 0
 15825  00A690  0012               	return		;funcret
 15826  00A692                     __end_of_ValidateRxOffset:
 15827                           	opt callstack 0
 15828                           
 15829 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 15830 ;; Defined at:
 15831 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15832 ;; Parameters:    Size  Location     Type
 15833 ;;  frequency       4    0[BANK0 ] unsigned long 
 15834 ;;  dataRate        1    4[BANK0 ] unsigned char 
 15835 ;; Auto vars:     Size  Location     Type
 15836 ;;		None
 15837 ;; Return value:  Size  Location     Type
 15838 ;;                  1    wreg      void 
 15839 ;; Registers used:
 15840 ;;		None
 15841 ;; Tracked objects:
 15842 ;;		On entry : 0/0
 15843 ;;		On exit  : 0/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15846 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15849 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15850 ;;Total ram usage:        5 bytes
 15851 ;; Hardware stack levels used:    1
 15852 ;; Hardware stack levels required when called:    7
 15853 ;; This function calls:
 15854 ;;		Nothing
 15855 ;; This function is called by:
 15856 ;;		_ExecuteRxParamSetupReq
 15857 ;;		_LORAWAN_SetReceiveWindow2Parameters
 15858 ;; This function uses a non-reentrant model
 15859 ;;
 15860                           
 15861                           	psect	text62
 15862  00A6C2                     __ptext62:
 15863                           	opt callstack 0
 15864  00A6C2                     _UpdateReceiveWindow2Parameters:
 15865                           	opt callstack 15
 15866                           
 15867                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 15868                           
 15869                           ; BSR set to: 0
 15870                           ;incstack = 0
 15871  00A6C2  C064  F221         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 15872                           
 15873                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 15874  00A6C6  C060  F21D         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 15875  00A6CA  C061  F21E         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 15876  00A6CE  C062  F21F         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 15877  00A6D2  C063  F220         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 15878  00A6D6  0012               	return		;funcret
 15879  00A6D8                     __end_of_UpdateReceiveWindow2Parameters:
 15880                           	opt callstack 0
 15881                           
 15882 ;; *************** function _ExecuteNewChannel *****************
 15883 ;; Defined at:
 15884 ;;		line 678 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  ptr             2   62[BANK0 ] PTR unsigned char 
 15887 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;  frequency       4   65[BANK0 ] unsigned long 
 15890 ;;  channelIndex    1   69[BANK0 ] unsigned char 
 15891 ;;  drRange         1   64[BANK0 ] struct .
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  2   62[BANK0 ] PTR unsigned char 
 15894 ;; Registers used:
 15895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15901 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15902 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15904 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15905 ;;Total ram usage:        8 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:    9
 15908 ;; This function calls:
 15909 ;;		_LORAWAN_SetChannelIdStatus
 15910 ;;		_UpdateChannelIdStatus
 15911 ;;		_UpdateDataRange
 15912 ;;		_UpdateDutyCycle
 15913 ;;		_UpdateFrequency
 15914 ;;		_ValidateChannelId
 15915 ;;		_ValidateDataRange
 15916 ;;		_ValidateFrequency
 15917 ;;		___lmul
 15918 ;; This function is called by:
 15919 ;;		_MacExecuteCommands
 15920 ;; This function uses a non-reentrant model
 15921 ;;
 15922                           
 15923                           	psect	text63
 15924  004544                     __ptext63:
 15925                           	opt callstack 0
 15926  004544                     _ExecuteNewChannel:
 15927                           	opt callstack 14
 15928                           
 15929                           ;lorawan_eu.c: 684: channelIndex = *(ptr++);
 15930                           
 15931                           ;incstack = 0
 15932  004544  C09E  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15933  004548  C09F  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15934  00454C  50DF               	movf	indf2,w,c
 15935  00454E  0100               	movlb	0	; () banked
 15936  004550  6FA5               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 15937                           
 15938                           ; BSR set to: 0
 15939  004552  4B9E               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15940  004554  2B9F               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15941                           
 15942                           ; BSR set to: 0
 15943                           ;lorawan_eu.c: 686: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15944  004556  C09E  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15945  00455A  C09F  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15946  00455E  0EFF               	movlw	255
 15947  004560  14DE               	andwf	postinc2,w,c
 15948  004562  6FA1               	movwf	ExecuteNewChannel@frequency& (0+255),b
 15949  004564  0EFF               	movlw	255
 15950  004566  14DE               	andwf	postinc2,w,c
 15951  004568  6FA2               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 15952  00456A  0EFF               	movlw	255
 15953  00456C  14DE               	andwf	postinc2,w,c
 15954  00456E  6FA3               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 15955  004570  0E00               	movlw	0
 15956  004572  14DE               	andwf	postinc2,w,c
 15957  004574  6FA4               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 15958                           
 15959                           ; BSR set to: 0
 15960                           ;lorawan_eu.c: 687: frequency = frequency * 100;
 15961  004576  C0A1  F092         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 15962  00457A  C0A2  F093         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 15963  00457E  C0A3  F094         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 15964  004582  C0A4  F095         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 15965  004586  0E64               	movlw	100
 15966  004588  6F96               	movwf	___lmul@multiplicand& (0+255),b
 15967  00458A  0E00               	movlw	0
 15968  00458C  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15969  00458E  0E00               	movlw	0
 15970  004590  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15971  004592  0E00               	movlw	0
 15972  004594  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15973  004596  EC19  F049         	call	___lmul	;wreg free
 15974  00459A  C092  F0A1         	movff	?___lmul,ExecuteNewChannel@frequency
 15975  00459E  C093  F0A2         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 15976  0045A2  C094  F0A3         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 15977  0045A6  C095  F0A4         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 15978                           
 15979                           ;lorawan_eu.c: 688: ptr = ptr + 3;
 15980  0045AA  0E03               	movlw	3
 15981  0045AC  0100               	movlb	0	; () banked
 15982  0045AE  259E               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 15983  0045B0  6F9E               	movwf	ExecuteNewChannel@ptr& (0+255),b
 15984  0045B2  0E00               	movlw	0
 15985  0045B4  219F               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 15986  0045B6  6F9F               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 15987                           
 15988                           ; BSR set to: 0
 15989                           ;lorawan_eu.c: 690: drRange.value = *(ptr++);
 15990  0045B8  C09E  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15991  0045BC  C09F  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15992  0045C0  50DF               	movf	indf2,w,c
 15993  0045C2  6FA0               	movwf	ExecuteNewChannel@drRange& (0+255),b
 15994                           
 15995                           ; BSR set to: 0
 15996  0045C4  4B9E               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15997  0045C6  2B9F               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15998                           
 15999                           ; BSR set to: 0
 16000                           ;lorawan_eu.c: 692: if (ValidateChannelId (channelIndex, 0) == OK)
 16001  0045C8  0E00               	movlw	0
 16002  0045CA  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16003  0045CC  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16004  0045CE  EC5F  F051         	call	_ValidateChannelId
 16005  0045D2  0900               	iorlw	0
 16006  0045D4  A4D8               	btfss	status,2,c
 16007  0045D6  D02F               	goto	l1128
 16008                           
 16009                           ;lorawan_eu.c: 693: {;lorawan_eu.c: 694: if ( (ValidateFrequency (frequency) == OK) || (
      +                          frequency == 0) )
 16010  0045D8  C0A1  F060         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 16011  0045DC  C0A2  F061         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 16012  0045E0  C0A3  F062         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 16013  0045E4  C0A4  F063         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 16014  0045E8  ECF7  F045         	call	_ValidateFrequency	;wreg free
 16015  0045EC  0900               	iorlw	0
 16016  0045EE  B4D8               	btfsc	status,2,c
 16017  0045F0  D007               	goto	u21220
 16018  0045F2  0100               	movlb	0	; () banked
 16019  0045F4  51A1               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16020  0045F6  11A2               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16021  0045F8  11A3               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16022  0045FA  11A4               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16023  0045FC  A4D8               	btfss	status,2,c
 16024  0045FE  D00A               	goto	l19606
 16025  004600                     u21220:
 16026                           
 16027                           ;lorawan_eu.c: 695: {;lorawan_eu.c: 696: loRa.macCommands[loRa.crtMacCmdIndex].channelFr
      +                          equencyAck = 1;
 16028  004600  0102               	movlb	2	; () banked
 16029  004602  51AC               	movf	(_loRa+167)& (0+255),w,b
 16030  004604  0D02               	mullw	2
 16031  004606  0EAE               	movlw	low (_loRa+169)
 16032  004608  24F3               	addwf	prodl,w,c
 16033  00460A  6ED9               	movwf	fsr2l,c
 16034  00460C  0E02               	movlw	high (_loRa+169)
 16035  00460E  20F4               	addwfc	prodh,w,c
 16036  004610  6EDA               	movwf	fsr2h,c
 16037  004612  8EDF               	bsf	indf2,7,c
 16038  004614                     l19606:
 16039                           
 16040                           ;lorawan_eu.c: 697: };lorawan_eu.c: 699: if (ValidateDataRange (drRange.value) == OK)
 16041  004614  0100               	movlb	0	; () banked
 16042  004616  51A0               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 16043  004618  EC37  F04C         	call	_ValidateDataRange
 16044  00461C  0900               	iorlw	0
 16045  00461E  A4D8               	btfss	status,2,c
 16046  004620  D00A               	goto	l1128
 16047                           
 16048                           ;lorawan_eu.c: 700: {;lorawan_eu.c: 701: loRa.macCommands[loRa.crtMacCmdIndex].dataRateR
      +                          angeAck = 1;
 16049  004622  0102               	movlb	2	; () banked
 16050  004624  51AC               	movf	(_loRa+167)& (0+255),w,b
 16051  004626  0D02               	mullw	2
 16052  004628  0EAE               	movlw	low (_loRa+169)
 16053  00462A  24F3               	addwf	prodl,w,c
 16054  00462C  6ED9               	movwf	fsr2l,c
 16055  00462E  0E02               	movlw	high (_loRa+169)
 16056  004630  20F4               	addwfc	prodh,w,c
 16057  004632  6EDA               	movwf	fsr2h,c
 16058  004634  8CDF               	bsf	indf2,6,c
 16059  004636                     l1128:
 16060                           
 16061                           ;lorawan_eu.c: 702: };lorawan_eu.c: 703: };lorawan_eu.c: 705: if ( (loRa.macCommands[loR
      +                          a.crtMacCmdIndex].channelFrequencyAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].da
      +                          taRateRangeAck == 1) )
 16062  004636  0102               	movlb	2	; () banked
 16063  004638  51AC               	movf	(_loRa+167)& (0+255),w,b
 16064  00463A  0D02               	mullw	2
 16065  00463C  0EAE               	movlw	low (_loRa+169)
 16066  00463E  24F3               	addwf	prodl,w,c
 16067  004640  6ED9               	movwf	fsr2l,c
 16068  004642  0E02               	movlw	high (_loRa+169)
 16069  004644  20F4               	addwfc	prodh,w,c
 16070  004646  6EDA               	movwf	fsr2h,c
 16071  004648  AEDF               	btfss	indf2,7,c
 16072  00464A  D06D               	goto	l19628
 16073                           
 16074                           ; BSR set to: 2
 16075  00464C  51AC               	movf	(_loRa+167)& (0+255),w,b
 16076  00464E  0D02               	mullw	2
 16077  004650  0EAE               	movlw	low (_loRa+169)
 16078  004652  24F3               	addwf	prodl,w,c
 16079  004654  6ED9               	movwf	fsr2l,c
 16080  004656  0E02               	movlw	high (_loRa+169)
 16081  004658  20F4               	addwfc	prodh,w,c
 16082  00465A  6EDA               	movwf	fsr2h,c
 16083  00465C  ACDF               	btfss	indf2,6,c
 16084  00465E  D063               	goto	l19628
 16085                           
 16086                           ; BSR set to: 2
 16087                           ;lorawan_eu.c: 706: {;lorawan_eu.c: 707: if (loRa.lastUsedChannelIndex < 16)
 16088  004660  0E10               	movlw	16
 16089  004662  61DF               	cpfslt	(_loRa+218)& (0+255),b
 16090  004664  D02D               	goto	l19620
 16091                           
 16092                           ; BSR set to: 2
 16093                           ;lorawan_eu.c: 708: {;lorawan_eu.c: 709: if (frequency != 0)
 16094  004666  0100               	movlb	0	; () banked
 16095  004668  51A1               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16096  00466A  11A2               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16097  00466C  11A3               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16098  00466E  11A4               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16099  004670  B4D8               	btfsc	status,2,c
 16100  004672  D020               	goto	l19618
 16101                           
 16102                           ; BSR set to: 0
 16103                           ;lorawan_eu.c: 710: {;lorawan_eu.c: 711: UpdateFrequency (channelIndex, frequency);
 16104  004674  C0A1  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16105  004678  C0A2  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16106  00467C  C0A3  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16107  004680  C0A4  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16108  004684  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16109  004686  EC21  F04E         	call	_UpdateFrequency
 16110                           
 16111                           ;lorawan_eu.c: 712: UpdateDataRange (channelIndex, drRange.value);
 16112  00468A  C0A0  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16113  00468E  0100               	movlb	0	; () banked
 16114  004690  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16115  004692  EC5E  F032         	call	_UpdateDataRange
 16116                           
 16117                           ;lorawan_eu.c: 713: UpdateDutyCycle (channelIndex, 302);
 16118  004696  0E01               	movlw	1
 16119  004698  0100               	movlb	0	; () banked
 16120  00469A  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16121  00469C  0E2E               	movlw	46
 16122  00469E  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16123  0046A0  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16124  0046A2  EC75  F04E         	call	_UpdateDutyCycle
 16125                           
 16126                           ;lorawan_eu.c: 714: UpdateChannelIdStatus (channelIndex, 1);
 16127  0046A6  0E01               	movlw	1
 16128  0046A8  0100               	movlb	0	; () banked
 16129  0046AA  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16130  0046AC  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16131  0046AE  ECB7  F030         	call	_UpdateChannelIdStatus
 16132                           
 16133                           ;lorawan_eu.c: 715: }
 16134  0046B2  D037               	goto	l19626
 16135  0046B4                     l19618:
 16136                           
 16137                           ; BSR set to: 0
 16138                           ;lorawan_eu.c: 716: else;lorawan_eu.c: 717: {;lorawan_eu.c: 718: LORAWAN_SetChannelIdSta
      +                          tus (channelIndex, 0);
 16139  0046B4  0E00               	movlw	0
 16140  0046B6  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16141  0046B8  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16142  0046BA  ECC6  F04D         	call	_LORAWAN_SetChannelIdStatus
 16143  0046BE  D031               	goto	l19626
 16144  0046C0                     l19620:
 16145                           
 16146                           ; BSR set to: 2
 16147                           ;lorawan_eu.c: 721: else;lorawan_eu.c: 722: {;lorawan_eu.c: 723: if (frequency != 0)
 16148  0046C0  0100               	movlb	0	; () banked
 16149  0046C2  51A1               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16150  0046C4  11A2               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16151  0046C6  11A3               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16152  0046C8  11A4               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16153  0046CA  B4D8               	btfsc	status,2,c
 16154  0046CC  D024               	goto	l19624
 16155                           
 16156                           ; BSR set to: 0
 16157                           ;lorawan_eu.c: 724: {;lorawan_eu.c: 725: UpdateFrequency (channelIndex + 16, frequency);
 16158  0046CE  C0A1  F060         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16159  0046D2  C0A2  F061         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16160  0046D6  C0A3  F062         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16161  0046DA  C0A4  F063         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16162  0046DE  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16163  0046E0  0F10               	addlw	16
 16164  0046E2  EC21  F04E         	call	_UpdateFrequency
 16165                           
 16166                           ;lorawan_eu.c: 726: UpdateDataRange (channelIndex + 16, drRange.value);
 16167  0046E6  C0A0  F060         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16168  0046EA  0100               	movlb	0	; () banked
 16169  0046EC  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16170  0046EE  0F10               	addlw	16
 16171  0046F0  EC5E  F032         	call	_UpdateDataRange
 16172                           
 16173                           ;lorawan_eu.c: 727: UpdateDutyCycle (channelIndex + 16, 302);
 16174  0046F4  0E01               	movlw	1
 16175  0046F6  0100               	movlb	0	; () banked
 16176  0046F8  6F61               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16177  0046FA  0E2E               	movlw	46
 16178  0046FC  6F60               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16179  0046FE  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16180  004700  0F10               	addlw	16
 16181  004702  EC75  F04E         	call	_UpdateDutyCycle
 16182                           
 16183                           ;lorawan_eu.c: 728: UpdateChannelIdStatus (channelIndex + 16, 1);
 16184  004706  0E01               	movlw	1
 16185  004708  0100               	movlb	0	; () banked
 16186  00470A  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16187  00470C  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16188  00470E  0F10               	addlw	16
 16189  004710  ECB7  F030         	call	_UpdateChannelIdStatus
 16190                           
 16191                           ;lorawan_eu.c: 729: }
 16192  004714  D006               	goto	l19626
 16193  004716                     l19624:
 16194                           
 16195                           ; BSR set to: 0
 16196                           ;lorawan_eu.c: 730: else;lorawan_eu.c: 731: {;lorawan_eu.c: 732: LORAWAN_SetChannelIdSta
      +                          tus (channelIndex + 16, 0);
 16197  004716  0E00               	movlw	0
 16198  004718  6F64               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16199  00471A  51A5               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16200  00471C  0F10               	addlw	16
 16201  00471E  ECC6  F04D         	call	_LORAWAN_SetChannelIdStatus
 16202  004722                     l19626:
 16203                           
 16204                           ;lorawan_eu.c: 733: };lorawan_eu.c: 734: };lorawan_eu.c: 736: loRa.macStatus.channelsMod
      +                          ified = 1;
 16205  004722  0102               	movlb	2	; () banked
 16206  004724  8708               	bsf	(_loRa+3)& (0+255),3,b
 16207  004726                     l19628:
 16208                           
 16209                           ; BSR set to: 2
 16210                           ;lorawan_eu.c: 737: };lorawan_eu.c: 738: return ptr;
 16211  004726  C09E  F09E         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 16212  00472A  C09F  F09F         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 16213                           
 16214                           ; BSR set to: 2
 16215  00472E  0012               	return		;funcret
 16216  004730                     __end_of_ExecuteNewChannel:
 16217                           	opt callstack 0
 16218                           
 16219 ;; *************** function _ValidateFrequency *****************
 16220 ;; Defined at:
 16221 ;;		line 1089 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16222 ;; Parameters:    Size  Location     Type
 16223 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 16224 ;; Auto vars:     Size  Location     Type
 16225 ;;  result          1    4[BANK0 ] enum E6118
 16226 ;; Return value:  Size  Location     Type
 16227 ;;                  1    wreg      enum E6118
 16228 ;; Registers used:
 16229 ;;		wreg, status,2, status,0
 16230 ;; Tracked objects:
 16231 ;;		On entry : 0/0
 16232 ;;		On exit  : 0/0
 16233 ;;		Unchanged: 0/0
 16234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16235 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16238 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16239 ;;Total ram usage:        5 bytes
 16240 ;; Hardware stack levels used:    1
 16241 ;; Hardware stack levels required when called:    7
 16242 ;; This function calls:
 16243 ;;		Nothing
 16244 ;; This function is called by:
 16245 ;;		_ExecuteNewChannel
 16246 ;;		_ExecuteRxParamSetupReq
 16247 ;;		_UpdateCfList
 16248 ;;		_LORAWAN_SetReceiveWindow2Parameters
 16249 ;;		_LORAWAN_SetFrequency
 16250 ;; This function uses a non-reentrant model
 16251 ;;
 16252                           
 16253                           	psect	text64
 16254  008BEE                     __ptext64:
 16255                           	opt callstack 0
 16256  008BEE                     _ValidateFrequency:
 16257                           	opt callstack 16
 16258                           
 16259                           ;lorawan_eu.c: 1091: LorawanError_t result = OK;
 16260                           
 16261                           ; BSR set to: 2
 16262                           ;incstack = 0
 16263  008BEE  0E00               	movlw	0
 16264  008BF0  0100               	movlb	0	; () banked
 16265  008BF2  6F64               	movwf	ValidateFrequency@result& (0+255),b
 16266                           
 16267                           ;lorawan_eu.c: 1093: if(ISM_EU868 == loRa.ismBand)
 16268  008BF4  0102               	movlb	2	; () banked
 16269  008BF6  51A9               	movf	(_loRa+164)& (0+255),w,b
 16270  008BF8  A4D8               	btfss	status,2,c
 16271  008BFA  D018               	goto	l18954
 16272                           
 16273                           ; BSR set to: 2
 16274                           ;lorawan_eu.c: 1094: {;lorawan_eu.c: 1095: if ( (frequencyNew > 870000000) || (frequency
      +                          New < 863000000) )
 16275  008BFC  0E81               	movlw	129
 16276  008BFE  0100               	movlb	0	; () banked
 16277  008C00  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16278  008C02  0E25               	movlw	37
 16279  008C04  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16280  008C06  0EDB               	movlw	219
 16281  008C08  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16282  008C0A  0E33               	movlw	51
 16283  008C0C  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16284  008C0E  B0D8               	btfsc	status,0,c
 16285  008C10  D00A               	goto	u20230
 16286                           
 16287                           ; BSR set to: 0
 16288  008C12  0EC0               	movlw	192
 16289  008C14  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16290  008C16  0E55               	movlw	85
 16291  008C18  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16292  008C1A  0E70               	movlw	112
 16293  008C1C  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16294  008C1E  0E33               	movlw	51
 16295  008C20  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16296  008C22  B0D8               	btfsc	status,0,c
 16297  008C24  D018               	goto	l1249
 16298  008C26                     u20230:
 16299                           
 16300                           ; BSR set to: 0
 16301                           ;lorawan_eu.c: 1096: {;lorawan_eu.c: 1097: result = INVALID_PARAMETER ;
 16302  008C26  0E03               	movlw	3
 16303  008C28  6F64               	movwf	ValidateFrequency@result& (0+255),b
 16304  008C2A  D015               	goto	l1249
 16305  008C2C                     l18954:
 16306                           
 16307                           ; BSR set to: 2
 16308                           ;lorawan_eu.c: 1100: else;lorawan_eu.c: 1101: {;lorawan_eu.c: 1102: if ( (frequencyNew >
      +                           434790000) || (frequencyNew < 433050000) )
 16309  008C2C  0E71               	movlw	113
 16310  008C2E  0100               	movlb	0	; () banked
 16311  008C30  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16312  008C32  0E5E               	movlw	94
 16313  008C34  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16314  008C36  0EEA               	movlw	234
 16315  008C38  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16316  008C3A  0E19               	movlw	25
 16317  008C3C  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16318  008C3E  B0D8               	btfsc	status,0,c
 16319  008C40  D7F2               	goto	u20230
 16320                           
 16321                           ; BSR set to: 0
 16322  008C42  0E90               	movlw	144
 16323  008C44  5D60               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16324  008C46  0ED1               	movlw	209
 16325  008C48  5961               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16326  008C4A  0ECF               	movlw	207
 16327  008C4C  5962               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16328  008C4E  0E19               	movlw	25
 16329  008C50  5963               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16330  008C52  A0D8               	btfss	status,0,c
 16331  008C54  D7E8               	goto	u20230
 16332  008C56                     l1249:
 16333                           
 16334                           ; BSR set to: 0
 16335                           ;lorawan_eu.c: 1105: };lorawan_eu.c: 1106: };lorawan_eu.c: 1108: return result;
 16336  008C56  5164               	movf	ValidateFrequency@result& (0+255),w,b
 16337                           
 16338                           ; BSR set to: 0
 16339  008C58  0012               	return		;funcret
 16340  008C5A                     __end_of_ValidateFrequency:
 16341                           	opt callstack 0
 16342                           
 16343 ;; *************** function _ValidateDataRange *****************
 16344 ;; Defined at:
 16345 ;;		line 1111 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16346 ;; Parameters:    Size  Location     Type
 16347 ;;  dataRangeNew    1    wreg     unsigned char 
 16348 ;; Auto vars:     Size  Location     Type
 16349 ;;  dataRangeNew    1    3[BANK0 ] unsigned char 
 16350 ;;  dataRateMin     1    5[BANK0 ] unsigned char 
 16351 ;;  dataRateMax     1    4[BANK0 ] unsigned char 
 16352 ;;  result          1    2[BANK0 ] enum E6118
 16353 ;; Return value:  Size  Location     Type
 16354 ;;                  1    wreg      enum E6118
 16355 ;; Registers used:
 16356 ;;		wreg, status,2, status,0, cstack
 16357 ;; Tracked objects:
 16358 ;;		On entry : 0/0
 16359 ;;		On exit  : 0/0
 16360 ;;		Unchanged: 0/0
 16361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16363 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16365 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16366 ;;Total ram usage:        4 bytes
 16367 ;; Hardware stack levels used:    1
 16368 ;; Hardware stack levels required when called:    8
 16369 ;; This function calls:
 16370 ;;		_ValidateDataRate
 16371 ;; This function is called by:
 16372 ;;		_ExecuteNewChannel
 16373 ;;		_LORAWAN_SetDataRange
 16374 ;; This function uses a non-reentrant model
 16375 ;;
 16376                           
 16377                           	psect	text65
 16378  00986E                     __ptext65:
 16379                           	opt callstack 0
 16380  00986E                     _ValidateDataRange:
 16381                           	opt callstack 14
 16382                           
 16383                           ; BSR set to: 0
 16384                           ;incstack = 0
 16385                           ;ValidateDataRange@dataRangeNew stored from wreg
 16386  00986E  0100               	movlb	0	; () banked
 16387  009870  6F63               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 16388                           
 16389                           ;lorawan_eu.c: 1113: LorawanError_t result = OK;
 16390  009872  0E00               	movlw	0
 16391  009874  0100               	movlb	0	; () banked
 16392  009876  6F62               	movwf	ValidateDataRange@result& (0+255),b
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;lorawan_eu.c: 1114: uint8_t dataRateMax, dataRateMin;;lorawan_eu.c: 1116: dataRateMin =
      +                           dataRangeNew & 0x0F;
 16396  009878  5163               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16397  00987A  0B0F               	andlw	15
 16398  00987C  6F65               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;lorawan_eu.c: 1117: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 16402  00987E  3963               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16403  009880  0B0F               	andlw	15
 16404  009882  0B0F               	andlw	15
 16405  009884  6F64               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 16406                           
 16407                           ; BSR set to: 0
 16408                           ;lorawan_eu.c: 1119: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 16409  009886  5164               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 16410  009888  EC49  F053         	call	_ValidateDataRate
 16411  00988C  0900               	iorlw	0
 16412  00988E  A4D8               	btfss	status,2,c
 16413  009890  D00C               	goto	u20280
 16414  009892  0100               	movlb	0	; () banked
 16415  009894  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16416  009896  EC49  F053         	call	_ValidateDataRate
 16417  00989A  0900               	iorlw	0
 16418  00989C  A4D8               	btfss	status,2,c
 16419  00989E  D005               	goto	u20280
 16420  0098A0  0100               	movlb	0	; () banked
 16421  0098A2  5165               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16422  0098A4  5D64               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 16423  0098A6  B0D8               	btfsc	status,0,c
 16424  0098A8  D003               	goto	l1256
 16425  0098AA                     u20280:
 16426                           
 16427                           ;lorawan_eu.c: 1120: {;lorawan_eu.c: 1121: result = INVALID_PARAMETER;
 16428  0098AA  0E03               	movlw	3
 16429  0098AC  0100               	movlb	0	; () banked
 16430  0098AE  6F62               	movwf	ValidateDataRange@result& (0+255),b
 16431  0098B0                     l1256:
 16432                           
 16433                           ; BSR set to: 0
 16434                           ;lorawan_eu.c: 1122: };lorawan_eu.c: 1123: return result;
 16435  0098B0  5162               	movf	ValidateDataRange@result& (0+255),w,b
 16436                           
 16437                           ; BSR set to: 0
 16438  0098B2  0012               	return		;funcret
 16439  0098B4                     __end_of_ValidateDataRange:
 16440                           	opt callstack 0
 16441                           
 16442 ;; *************** function _UpdateFrequency *****************
 16443 ;; Defined at:
 16444 ;;		line 1155 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16445 ;; Parameters:    Size  Location     Type
 16446 ;;  channelId       1    wreg     unsigned char 
 16447 ;;  frequencyNew    4    0[BANK0 ] unsigned long 
 16448 ;; Auto vars:     Size  Location     Type
 16449 ;;  channelId       1    4[BANK0 ] unsigned char 
 16450 ;; Return value:  Size  Location     Type
 16451 ;;                  1    wreg      void 
 16452 ;; Registers used:
 16453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16454 ;; Tracked objects:
 16455 ;;		On entry : 0/0
 16456 ;;		On exit  : 0/0
 16457 ;;		Unchanged: 0/0
 16458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16459 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16460 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16462 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16463 ;;Total ram usage:        5 bytes
 16464 ;; Hardware stack levels used:    1
 16465 ;; Hardware stack levels required when called:    7
 16466 ;; This function calls:
 16467 ;;		Nothing
 16468 ;; This function is called by:
 16469 ;;		_ExecuteNewChannel
 16470 ;;		_LORAWAN_SetFrequency
 16471 ;; This function uses a non-reentrant model
 16472 ;;
 16473                           
 16474                           	psect	text66
 16475  009C42                     __ptext66:
 16476                           	opt callstack 0
 16477  009C42                     _UpdateFrequency:
 16478                           	opt callstack 15
 16479                           
 16480                           ; BSR set to: 0
 16481                           ;incstack = 0
 16482                           ;UpdateFrequency@channelId stored from wreg
 16483  009C42  0100               	movlb	0	; () banked
 16484  009C44  6F64               	movwf	UpdateFrequency@channelId& (0+255),b
 16485                           
 16486                           ;lorawan_eu.c: 1157: Channels[channelId].frequency = frequencyNew;
 16487  009C46  0100               	movlb	0	; () banked
 16488  009C48  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 16489  009C4A  0D0E               	mullw	14
 16490  009C4C  0E14               	movlw	low _Channels
 16491  009C4E  24F3               	addwf	prodl,w,c
 16492  009C50  6ED9               	movwf	fsr2l,c
 16493  009C52  0E04               	movlw	high _Channels
 16494  009C54  20F4               	addwfc	prodh,w,c
 16495  009C56  6EDA               	movwf	fsr2h,c
 16496  009C58  C060  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 16497  009C5C  C061  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 16498  009C60  C062  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 16499  009C64  C063  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 16500                           
 16501                           ;lorawan_eu.c: 1158: Channels[channelId].parametersDefined |= 0X01;
 16502  009C68  5164               	movf	UpdateFrequency@channelId& (0+255),w,b
 16503  009C6A  0D0E               	mullw	14
 16504  009C6C  0E21               	movlw	low (_Channels+13)
 16505  009C6E  24F3               	addwf	prodl,w,c
 16506  009C70  6ED9               	movwf	fsr2l,c
 16507  009C72  0E04               	movlw	high (_Channels+13)
 16508  009C74  20F4               	addwfc	prodh,w,c
 16509  009C76  6EDA               	movwf	fsr2h,c
 16510  009C78  0E00               	movlw	0
 16511  009C7A  80DB               	bsf	plusw2,0,c
 16512                           
 16513                           ; BSR set to: 0
 16514  009C7C  0012               	return		;funcret
 16515  009C7E                     __end_of_UpdateFrequency:
 16516                           	opt callstack 0
 16517                           
 16518 ;; *************** function _UpdateDutyCycle *****************
 16519 ;; Defined at:
 16520 ;;		line 1161 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16521 ;; Parameters:    Size  Location     Type
 16522 ;;  channelId       1    wreg     unsigned char 
 16523 ;;  dutyCycleNew    2    0[BANK0 ] unsigned int 
 16524 ;; Auto vars:     Size  Location     Type
 16525 ;;  channelId       1    2[BANK0 ] unsigned char 
 16526 ;; Return value:  Size  Location     Type
 16527 ;;                  1    wreg      void 
 16528 ;; Registers used:
 16529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16530 ;; Tracked objects:
 16531 ;;		On entry : 0/0
 16532 ;;		On exit  : 0/0
 16533 ;;		Unchanged: 0/0
 16534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16535 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16538 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16539 ;;Total ram usage:        3 bytes
 16540 ;; Hardware stack levels used:    1
 16541 ;; Hardware stack levels required when called:    7
 16542 ;; This function calls:
 16543 ;;		Nothing
 16544 ;; This function is called by:
 16545 ;;		_ExecuteNewChannel
 16546 ;;		_LORAWAN_SetDutyCycle
 16547 ;; This function uses a non-reentrant model
 16548 ;;
 16549                           
 16550                           	psect	text67
 16551  009CEA                     __ptext67:
 16552                           	opt callstack 0
 16553  009CEA                     _UpdateDutyCycle:
 16554                           	opt callstack 15
 16555                           
 16556                           ; BSR set to: 0
 16557                           ;incstack = 0
 16558                           ;UpdateDutyCycle@channelId stored from wreg
 16559  009CEA  0100               	movlb	0	; () banked
 16560  009CEC  6F62               	movwf	UpdateDutyCycle@channelId& (0+255),b
 16561                           
 16562                           ;lorawan_eu.c: 1163: Channels[channelId].dutyCycle = dutyCycleNew;
 16563  009CEE  0100               	movlb	0	; () banked
 16564  009CF0  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16565  009CF2  0D0E               	mullw	14
 16566  009CF4  0E1A               	movlw	low (_Channels+6)
 16567  009CF6  24F3               	addwf	prodl,w,c
 16568  009CF8  6ED9               	movwf	fsr2l,c
 16569  009CFA  0E04               	movlw	high (_Channels+6)
 16570  009CFC  20F4               	addwfc	prodh,w,c
 16571  009CFE  6EDA               	movwf	fsr2h,c
 16572  009D00  C060  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 16573  009D04  C061  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 16574                           
 16575                           ;lorawan_eu.c: 1164: Channels[channelId].parametersDefined |= 0x04;
 16576  009D08  5162               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16577  009D0A  0D0E               	mullw	14
 16578  009D0C  0E21               	movlw	low (_Channels+13)
 16579  009D0E  24F3               	addwf	prodl,w,c
 16580  009D10  6ED9               	movwf	fsr2l,c
 16581  009D12  0E04               	movlw	high (_Channels+13)
 16582  009D14  20F4               	addwfc	prodh,w,c
 16583  009D16  6EDA               	movwf	fsr2h,c
 16584  009D18  0E00               	movlw	0
 16585  009D1A  84DB               	bsf	plusw2,2,c
 16586                           
 16587                           ; BSR set to: 0
 16588  009D1C  0012               	return		;funcret
 16589  009D1E                     __end_of_UpdateDutyCycle:
 16590                           	opt callstack 0
 16591                           
 16592 ;; *************** function _UpdateDataRange *****************
 16593 ;; Defined at:
 16594 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16595 ;; Parameters:    Size  Location     Type
 16596 ;;  channelId       1    wreg     unsigned char 
 16597 ;;  dataRangeNew    1    0[BANK0 ] unsigned char 
 16598 ;; Auto vars:     Size  Location     Type
 16599 ;;  channelId       1    2[BANK0 ] unsigned char 
 16600 ;;  i               1    3[BANK0 ] unsigned char 
 16601 ;; Return value:  Size  Location     Type
 16602 ;;                  1    wreg      void 
 16603 ;; Registers used:
 16604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16605 ;; Tracked objects:
 16606 ;;		On entry : 0/0
 16607 ;;		On exit  : 0/0
 16608 ;;		Unchanged: 0/0
 16609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16610 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16611 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16613 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16614 ;;Total ram usage:        4 bytes
 16615 ;; Hardware stack levels used:    1
 16616 ;; Hardware stack levels required when called:    7
 16617 ;; This function calls:
 16618 ;;		Nothing
 16619 ;; This function is called by:
 16620 ;;		_ExecuteNewChannel
 16621 ;;		_LORAWAN_SetDataRange
 16622 ;; This function uses a non-reentrant model
 16623 ;;
 16624                           
 16625                           	psect	text68
 16626  0064BC                     __ptext68:
 16627                           	opt callstack 0
 16628  0064BC                     _UpdateDataRange:
 16629                           	opt callstack 15
 16630                           
 16631                           ; BSR set to: 0
 16632                           ;incstack = 0
 16633                           ;UpdateDataRange@channelId stored from wreg
 16634  0064BC  0100               	movlb	0	; () banked
 16635  0064BE  6F62               	movwf	UpdateDataRange@channelId& (0+255),b
 16636                           
 16637                           ;lorawan_eu.c: 1012: uint8_t i;;lorawan_eu.c: 1015: loRa.minDataRate = 7;
 16638  0064C0  0E07               	movlw	7
 16639  0064C2  0102               	movlb	2	; () banked
 16640  0064C4  6FF0               	movwf	(_loRa+235)& (0+255),b
 16641                           
 16642                           ;lorawan_eu.c: 1016: loRa.maxDataRate = 0;
 16643  0064C6  0E00               	movlw	0
 16644  0064C8  6FF1               	movwf	(_loRa+236)& (0+255),b
 16645                           
 16646                           ; BSR set to: 2
 16647                           ;lorawan_eu.c: 1018: Channels[channelId].dataRange.value = dataRangeNew;
 16648  0064CA  0100               	movlb	0	; () banked
 16649  0064CC  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16650  0064CE  0D0E               	mullw	14
 16651  0064D0  0E19               	movlw	low (_Channels+5)
 16652  0064D2  24F3               	addwf	prodl,w,c
 16653  0064D4  6ED9               	movwf	fsr2l,c
 16654  0064D6  0E04               	movlw	high (_Channels+5)
 16655  0064D8  20F4               	addwfc	prodh,w,c
 16656  0064DA  6EDA               	movwf	fsr2h,c
 16657  0064DC  C060  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 16658                           
 16659                           ; BSR set to: 0
 16660                           ;lorawan_eu.c: 1019: Channels[channelId].parametersDefined |= 0X02;
 16661  0064E0  5162               	movf	UpdateDataRange@channelId& (0+255),w,b
 16662  0064E2  0D0E               	mullw	14
 16663  0064E4  0E21               	movlw	low (_Channels+13)
 16664  0064E6  24F3               	addwf	prodl,w,c
 16665  0064E8  6ED9               	movwf	fsr2l,c
 16666  0064EA  0E04               	movlw	high (_Channels+13)
 16667  0064EC  20F4               	addwfc	prodh,w,c
 16668  0064EE  6EDA               	movwf	fsr2h,c
 16669  0064F0  0E00               	movlw	0
 16670  0064F2  82DB               	bsf	plusw2,1,c
 16671                           
 16672                           ; BSR set to: 0
 16673                           ;lorawan_eu.c: 1020: for (i=0; i < loRa.maxChannels; i++)
 16674  0064F4  0E00               	movlw	0
 16675  0064F6  6F63               	movwf	UpdateDataRange@i& (0+255),b
 16676  0064F8  D055               	goto	l19000
 16677  0064FA                     l18988:
 16678                           
 16679                           ; BSR set to: 0
 16680                           ;lorawan_eu.c: 1021: {;lorawan_eu.c: 1022: if ( (Channels[i].dataRange.min < loRa.minDat
      +                          aRate) && (Channels[i].status == 1) )
 16681  0064FA  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16682  0064FC  0D0E               	mullw	14
 16683  0064FE  0E19               	movlw	low (_Channels+5)
 16684  006500  24F3               	addwf	prodl,w,c
 16685  006502  6ED9               	movwf	fsr2l,c
 16686  006504  0E04               	movlw	high (_Channels+5)
 16687  006506  20F4               	addwfc	prodh,w,c
 16688  006508  6EDA               	movwf	fsr2h,c
 16689  00650A  0104               	movlb	4	; () banked
 16690  00650C  50DF               	movf	223,w,c
 16691  00650E  0B0F               	andlw	15
 16692  006510  0100               	movlb	0	; () banked
 16693  006512  6F61               	movwf	??_UpdateDataRange& (0+255),b
 16694  006514  0102               	movlb	2	; () banked
 16695  006516  51F0               	movf	(_loRa+235)& (0+255),w,b
 16696  006518  0100               	movlb	0	; () banked
 16697  00651A  5D61               	subwf	??_UpdateDataRange& (0+255),w,b
 16698  00651C  B0D8               	btfsc	status,0,c
 16699  00651E  D018               	goto	l1222
 16700                           
 16701                           ; BSR set to: 0
 16702  006520  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16703  006522  0D0E               	mullw	14
 16704  006524  0E18               	movlw	low (_Channels+4)
 16705  006526  24F3               	addwf	prodl,w,c
 16706  006528  6ED9               	movwf	fsr2l,c
 16707  00652A  0E04               	movlw	high (_Channels+4)
 16708  00652C  20F4               	addwfc	prodh,w,c
 16709  00652E  6EDA               	movwf	fsr2h,c
 16710  006530  04DE               	decf	postinc2,w,c
 16711  006532  A4D8               	btfss	status,2,c
 16712  006534  D00D               	goto	l1222
 16713                           
 16714                           ; BSR set to: 0
 16715                           ;lorawan_eu.c: 1023: {;lorawan_eu.c: 1024: loRa.minDataRate = Channels[i].dataRange.min;
 16716  006536  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16717  006538  0D0E               	mullw	14
 16718  00653A  0E19               	movlw	low (_Channels+5)
 16719  00653C  24F3               	addwf	prodl,w,c
 16720  00653E  6ED9               	movwf	fsr2l,c
 16721  006540  0E04               	movlw	high (_Channels+5)
 16722  006542  20F4               	addwfc	prodh,w,c
 16723  006544  6EDA               	movwf	fsr2h,c
 16724  006546  0104               	movlb	4	; () banked
 16725  006548  50DF               	movf	223,w,c
 16726  00654A  0B0F               	andlw	15
 16727  00654C  0102               	movlb	2	; () banked
 16728  00654E  6FF0               	movwf	(_loRa+235)& (0+255),b
 16729  006550                     l1222:
 16730                           
 16731                           ;lorawan_eu.c: 1025: };lorawan_eu.c: 1026: if ( (Channels[i].dataRange.max > loRa.maxDat
      +                          aRate) && (Channels[i].status == 1) )
 16732  006550  0100               	movlb	0	; () banked
 16733  006552  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16734  006554  0D0E               	mullw	14
 16735  006556  0E19               	movlw	low (_Channels+5)
 16736  006558  24F3               	addwf	prodl,w,c
 16737  00655A  6ED9               	movwf	fsr2l,c
 16738  00655C  0E04               	movlw	high (_Channels+5)
 16739  00655E  20F4               	addwfc	prodh,w,c
 16740  006560  6EDA               	movwf	fsr2h,c
 16741  006562  0104               	movlb	4	; () banked
 16742  006564  38DF               	swapf	223,w,c
 16743  006566  0B0F               	andlw	15
 16744  006568  0102               	movlb	2	; () banked
 16745  00656A  61F1               	cpfslt	(_loRa+236)& (0+255),b
 16746  00656C  D019               	goto	l18998
 16747                           
 16748                           ; BSR set to: 2
 16749  00656E  0100               	movlb	0	; () banked
 16750  006570  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16751  006572  0D0E               	mullw	14
 16752  006574  0E18               	movlw	low (_Channels+4)
 16753  006576  24F3               	addwf	prodl,w,c
 16754  006578  6ED9               	movwf	fsr2l,c
 16755  00657A  0E04               	movlw	high (_Channels+4)
 16756  00657C  20F4               	addwfc	prodh,w,c
 16757  00657E  6EDA               	movwf	fsr2h,c
 16758  006580  04DE               	decf	postinc2,w,c
 16759  006582  A4D8               	btfss	status,2,c
 16760  006584  D00D               	goto	l18998
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;lorawan_eu.c: 1027: {;lorawan_eu.c: 1028: loRa.maxDataRate = Channels[i].dataRange.max;
 16764  006586  5163               	movf	UpdateDataRange@i& (0+255),w,b
 16765  006588  0D0E               	mullw	14
 16766  00658A  0E19               	movlw	low (_Channels+5)
 16767  00658C  24F3               	addwf	prodl,w,c
 16768  00658E  6ED9               	movwf	fsr2l,c
 16769  006590  0E04               	movlw	high (_Channels+5)
 16770  006592  20F4               	addwfc	prodh,w,c
 16771  006594  6EDA               	movwf	fsr2h,c
 16772  006596  0104               	movlb	4	; () banked
 16773  006598  38DF               	swapf	223,w,c
 16774  00659A  0B0F               	andlw	15
 16775  00659C  0102               	movlb	2	; () banked
 16776  00659E  6FF1               	movwf	(_loRa+236)& (0+255),b
 16777  0065A0                     l18998:
 16778  0065A0  0100               	movlb	0	; () banked
 16779  0065A2  2B63               	incf	UpdateDataRange@i& (0+255),f,b
 16780  0065A4                     l19000:
 16781                           
 16782                           ; BSR set to: 0
 16783  0065A4  0102               	movlb	2	; () banked
 16784  0065A6  51F2               	movf	(_loRa+237)& (0+255),w,b
 16785  0065A8  0100               	movlb	0	; () banked
 16786  0065AA  5D63               	subwf	UpdateDataRange@i& (0+255),w,b
 16787  0065AC  A0D8               	btfss	status,0,c
 16788  0065AE  D7A5               	goto	l18988
 16789                           
 16790                           ; BSR set to: 0
 16791                           ;lorawan_eu.c: 1029: };lorawan_eu.c: 1030: };lorawan_eu.c: 1032: if (loRa.currentDataRat
      +                          e > loRa.maxDataRate)
 16792  0065B0  0102               	movlb	2	; () banked
 16793  0065B2  51E4               	movf	(_loRa+223)& (0+255),w,b
 16794  0065B4  5DF1               	subwf	(_loRa+236)& (0+255),w,b
 16795  0065B6  A0D8               	btfss	status,0,c
 16796                           
 16797                           ; BSR set to: 2
 16798                           ;lorawan_eu.c: 1033: {;lorawan_eu.c: 1034: loRa.currentDataRate = loRa.maxDataRate;
 16799  0065B8  C2F1  F2E4         	movff	_loRa+236,_loRa+223
 16800                           
 16801                           ; BSR set to: 2
 16802                           ;lorawan_eu.c: 1035: };lorawan_eu.c: 1037: if (loRa.currentDataRate < loRa.minDataRate)
 16803  0065BC  51F0               	movf	(_loRa+235)& (0+255),w,b
 16804  0065BE  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 16805  0065C0  B0D8               	btfsc	status,0,c
 16806  0065C2  0012               	return	
 16807                           
 16808                           ; BSR set to: 2
 16809                           ;lorawan_eu.c: 1038: {;lorawan_eu.c: 1039: loRa.currentDataRate = loRa.minDataRate;
 16810  0065C4  C2F0  F2E4         	movff	_loRa+235,_loRa+223
 16811                           
 16812                           ; BSR set to: 2
 16813  0065C8  0012               	return		;funcret
 16814  0065CA                     __end_of_UpdateDataRange:
 16815                           	opt callstack 0
 16816                           
 16817 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 16818 ;; Defined at:
 16819 ;;		line 283 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;  channelId       1    wreg     unsigned char 
 16822 ;;  statusNew       1    4[BANK0 ] unsigned char 
 16823 ;; Auto vars:     Size  Location     Type
 16824 ;;  channelId       1    6[BANK0 ] unsigned char 
 16825 ;;  result          1    0        enum E6118
 16826 ;; Return value:  Size  Location     Type
 16827 ;;                  1    wreg      enum E6118
 16828 ;; Registers used:
 16829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16830 ;; Tracked objects:
 16831 ;;		On entry : 0/0
 16832 ;;		On exit  : 0/0
 16833 ;;		Unchanged: 0/0
 16834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16835 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16836 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16838 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16839 ;;Total ram usage:        3 bytes
 16840 ;; Hardware stack levels used:    1
 16841 ;; Hardware stack levels required when called:    8
 16842 ;; This function calls:
 16843 ;;		_UpdateChannelIdStatus
 16844 ;;		_ValidateChannelId
 16845 ;; This function is called by:
 16846 ;;		_ExecuteNewChannel
 16847 ;;		_UpdateCfList
 16848 ;;		_resetAllChannels
 16849 ;; This function uses a non-reentrant model
 16850 ;;
 16851                           
 16852                           	psect	text69
 16853  009B8C                     __ptext69:
 16854                           	opt callstack 0
 16855  009B8C                     _LORAWAN_SetChannelIdStatus:
 16856                           	opt callstack 15
 16857                           
 16858                           ; BSR set to: 2
 16859                           ;incstack = 0
 16860                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 16861  009B8C  0100               	movlb	0	; () banked
 16862  009B8E  6F66               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 16863                           
 16864                           ;lorawan_eu.c: 288: if (ValidateChannelId (channelId, 1) != OK)
 16865  009B90  0E01               	movlw	1
 16866  009B92  0100               	movlb	0	; () banked
 16867  009B94  6F60               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16868  009B96  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16869  009B98  EC5F  F051         	call	_ValidateChannelId
 16870  009B9C  0900               	iorlw	0
 16871  009B9E  A4D8               	btfss	status,2,c
 16872  009BA0  0012               	return	
 16873                           
 16874                           ;lorawan_eu.c: 293: else;lorawan_eu.c: 294: {;lorawan_eu.c: 295: if ( (Channels[channelI
      +                          d].parametersDefined & (0X01 | 0X02 | 0x04) ) == (0X01 | 0X02 | 0x04) )
 16875                           
 16876                           ;lorawan_eu.c: 291: }
 16877  009BA2  0100               	movlb	0	; () banked
 16878  009BA4  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16879  009BA6  0D0E               	mullw	14
 16880  009BA8  0E21               	movlw	low (_Channels+13)
 16881  009BAA  24F3               	addwf	prodl,w,c
 16882  009BAC  6ED9               	movwf	fsr2l,c
 16883  009BAE  0E04               	movlw	high (_Channels+13)
 16884  009BB0  20F4               	addwfc	prodh,w,c
 16885  009BB2  6EDA               	movwf	fsr2h,c
 16886  009BB4  50DF               	movf	indf2,w,c
 16887  009BB6  0B07               	andlw	7
 16888  009BB8  0A07               	xorlw	7
 16889  009BBA  A4D8               	btfss	status,2,c
 16890  009BBC  0012               	return	
 16891                           
 16892                           ; BSR set to: 0
 16893                           ;lorawan_eu.c: 296: {;lorawan_eu.c: 297: UpdateChannelIdStatus (channelId, statusNew);
 16894  009BBE  C064  F060         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 16895  009BC2  5166               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16896  009BC4  ECB7  F030         	call	_UpdateChannelIdStatus
 16897                           
 16898                           ;lorawan_eu.c: 298: }
 16899  009BC8  0012               	return		;funcret
 16900  009BCA                     __end_of_LORAWAN_SetChannelIdStatus:
 16901                           	opt callstack 0
 16902                           
 16903 ;; *************** function _ValidateChannelId *****************
 16904 ;; Defined at:
 16905 ;;		line 1126 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16906 ;; Parameters:    Size  Location     Type
 16907 ;;  channelId       1    wreg     unsigned char 
 16908 ;;  allowedForDe    1    0[BANK0 ] unsigned char 
 16909 ;; Auto vars:     Size  Location     Type
 16910 ;;  channelId       1    2[BANK0 ] unsigned char 
 16911 ;;  result          1    1[BANK0 ] enum E6118
 16912 ;; Return value:  Size  Location     Type
 16913 ;;                  1    wreg      enum E6118
 16914 ;; Registers used:
 16915 ;;		wreg, status,2, status,0
 16916 ;; Tracked objects:
 16917 ;;		On entry : 0/0
 16918 ;;		On exit  : 0/0
 16919 ;;		Unchanged: 0/0
 16920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16921 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16922 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16924 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16925 ;;Total ram usage:        3 bytes
 16926 ;; Hardware stack levels used:    1
 16927 ;; Hardware stack levels required when called:    7
 16928 ;; This function calls:
 16929 ;;		Nothing
 16930 ;; This function is called by:
 16931 ;;		_LORAWAN_SetChannelIdStatus
 16932 ;;		_ExecuteNewChannel
 16933 ;;		_LORAWAN_SetDataRange
 16934 ;;		_LORAWAN_GetDataRange
 16935 ;;		_LORAWAN_GetChannelIdStatus
 16936 ;;		_LORAWAN_SetFrequency
 16937 ;;		_LORAWAN_SetDutyCycle
 16938 ;;		_LORAWAN_GetDutyCycle
 16939 ;; This function uses a non-reentrant model
 16940 ;;
 16941                           
 16942                           	psect	text70
 16943  00A2BE                     __ptext70:
 16944                           	opt callstack 0
 16945  00A2BE                     _ValidateChannelId:
 16946                           	opt callstack 15
 16947                           
 16948                           ;incstack = 0
 16949                           ;ValidateChannelId@channelId stored from wreg
 16950  00A2BE  0100               	movlb	0	; () banked
 16951  00A2C0  6F62               	movwf	ValidateChannelId@channelId& (0+255),b
 16952                           
 16953                           ;lorawan_eu.c: 1128: LorawanError_t result = OK;
 16954  00A2C2  0E00               	movlw	0
 16955  00A2C4  0100               	movlb	0	; () banked
 16956  00A2C6  6F61               	movwf	ValidateChannelId@result& (0+255),b
 16957                           
 16958                           ; BSR set to: 0
 16959                           ;lorawan_eu.c: 1130: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 16960  00A2C8  0E10               	movlw	16
 16961  00A2CA  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 16962  00A2CC  D006               	goto	u19820
 16963                           
 16964                           ; BSR set to: 0
 16965  00A2CE  5160               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 16966  00A2D0  A4D8               	btfss	status,2,c
 16967  00A2D2  D005               	goto	l1262
 16968                           
 16969                           ; BSR set to: 0
 16970  00A2D4  0E03               	movlw	3
 16971  00A2D6  6162               	cpfslt	ValidateChannelId@channelId& (0+255),b
 16972  00A2D8  D002               	goto	l1262
 16973  00A2DA                     u19820:
 16974                           
 16975                           ; BSR set to: 0
 16976                           ;lorawan_eu.c: 1131: {;lorawan_eu.c: 1132: result = INVALID_PARAMETER ;
 16977  00A2DA  0E03               	movlw	3
 16978  00A2DC  6F61               	movwf	ValidateChannelId@result& (0+255),b
 16979  00A2DE                     l1262:
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;lorawan_eu.c: 1133: };lorawan_eu.c: 1135: return result;
 16983  00A2DE  5161               	movf	ValidateChannelId@result& (0+255),w,b
 16984                           
 16985                           ; BSR set to: 0
 16986  00A2E0  0012               	return		;funcret
 16987  00A2E2                     __end_of_ValidateChannelId:
 16988                           	opt callstack 0
 16989                           
 16990 ;; *************** function _ExecuteLinkCheck *****************
 16991 ;; Defined at:
 16992 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16993 ;; Parameters:    Size  Location     Type
 16994 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 16995 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16996 ;; Auto vars:     Size  Location     Type
 16997 ;;		None
 16998 ;; Return value:  Size  Location     Type
 16999 ;;                  2    0[BANK0 ] PTR unsigned char 
 17000 ;; Registers used:
 17001 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17002 ;; Tracked objects:
 17003 ;;		On entry : 0/0
 17004 ;;		On exit  : 0/0
 17005 ;;		Unchanged: 0/0
 17006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17007 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17010 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17011 ;;Total ram usage:        2 bytes
 17012 ;; Hardware stack levels used:    1
 17013 ;; Hardware stack levels required when called:    7
 17014 ;; This function calls:
 17015 ;;		Nothing
 17016 ;; This function is called by:
 17017 ;;		_MacExecuteCommands
 17018 ;; This function uses a non-reentrant model
 17019 ;;
 17020                           
 17021                           	psect	text71
 17022  009D52                     __ptext71:
 17023                           	opt callstack 0
 17024  009D52                     _ExecuteLinkCheck:
 17025                           	opt callstack 16
 17026                           
 17027                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 17028                           
 17029                           ; BSR set to: 0
 17030                           ;incstack = 0
 17031  009D52  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 17032  009D56  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 17033  009D5A  50DF               	movf	indf2,w,c
 17034  009D5C  0102               	movlb	2	; () banked
 17035  009D5E  6FE2               	movwf	(_loRa+221)& (0+255),b
 17036                           
 17037                           ; BSR set to: 2
 17038  009D60  0100               	movlb	0	; () banked
 17039  009D62  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 17040  009D64  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 17044  009D66  C060  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 17045  009D6A  C061  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 17046  009D6E  50DF               	movf	indf2,w,c
 17047  009D70  0102               	movlb	2	; () banked
 17048  009D72  6FE3               	movwf	(_loRa+222)& (0+255),b
 17049  009D74  0100               	movlb	0	; () banked
 17050  009D76  4B60               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 17051  009D78  2B61               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 17052                           
 17053                           ; BSR set to: 0
 17054                           ;lorawan.c: 1656: return ptr;
 17055  009D7A  C060  F060         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 17056  009D7E  C061  F061         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 17057                           
 17058                           ; BSR set to: 0
 17059  009D82  0012               	return		;funcret
 17060  009D84                     __end_of_ExecuteLinkCheck:
 17061                           	opt callstack 0
 17062                           
 17063 ;; *************** function _ExecuteLinkAdr *****************
 17064 ;; Defined at:
 17065 ;;		line 614 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17066 ;; Parameters:    Size  Location     Type
 17067 ;;  ptr             2   15[BANK0 ] PTR unsigned char 
 17068 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17069 ;; Auto vars:     Size  Location     Type
 17070 ;;  redundancy      2   21[BANK0 ] PTR struct .
 17071 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 17072 ;;  channelMask     2   18[BANK0 ] unsigned int 
 17073 ;;  dataRate        1   23[BANK0 ] unsigned char 
 17074 ;;  txPower         1   20[BANK0 ] unsigned char 
 17075 ;; Return value:  Size  Location     Type
 17076 ;;                  2   15[BANK0 ] PTR unsigned char 
 17077 ;; Registers used:
 17078 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17079 ;; Tracked objects:
 17080 ;;		On entry : 0/0
 17081 ;;		On exit  : 0/0
 17082 ;;		Unchanged: 0/0
 17083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17084 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17085 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17086 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17087 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17088 ;;Total ram usage:        9 bytes
 17089 ;; Hardware stack levels used:    1
 17090 ;; Hardware stack levels required when called:   10
 17091 ;; This function calls:
 17092 ;;		_EnableChannels
 17093 ;;		_UpdateCurrentDataRate
 17094 ;;		_UpdateTxPower
 17095 ;;		_ValidateChannelMask
 17096 ;;		_ValidateChannelMaskCntl
 17097 ;;		_ValidateDataRate
 17098 ;;		_ValidateTxPower
 17099 ;; This function is called by:
 17100 ;;		_MacExecuteCommands
 17101 ;; This function uses a non-reentrant model
 17102 ;;
 17103                           
 17104                           	psect	text72
 17105  0048FC                     __ptext72:
 17106                           	opt callstack 0
 17107  0048FC                     _ExecuteLinkAdr:
 17108                           	opt callstack 13
 17109                           
 17110                           ;lorawan_eu.c: 616: uint8_t txPower, dataRate;;lorawan_eu.c: 617: uint16_t channelMask;;
      +                          lorawan_eu.c: 619: txPower = *(ptr) & 0x0F;
 17111                           
 17112                           ; BSR set to: 0
 17113                           ;incstack = 0
 17114  0048FC  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17115  004900  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17116  004904  50DF               	movf	indf2,w,c
 17117  004906  0B0F               	andlw	15
 17118  004908  0100               	movlb	0	; () banked
 17119  00490A  6F74               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 17120                           
 17121                           ;lorawan_eu.c: 620: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 17122  00490C  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17123  004910  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17124  004914  50DF               	movf	indf2,w,c
 17125  004916  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17126  004918  3971               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 17127  00491A  0B0F               	andlw	15
 17128  00491C  0B0F               	andlw	15
 17129  00491E  6F77               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 17130                           
 17131                           ; BSR set to: 0
 17132                           ;lorawan_eu.c: 621: ptr++;
 17133  004920  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 17134  004922  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 17135                           
 17136                           ; BSR set to: 0
 17137                           ;lorawan_eu.c: 622: channelMask = (*((uint16_t*)ptr));
 17138  004924  C06F  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 17139  004928  C070  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 17140  00492C  CFDE F072          	movff	postinc2,ExecuteLinkAdr@channelMask
 17141  004930  CFDD F073          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;lorawan_eu.c: 623: ptr = ptr + sizeof (channelMask);
 17145  004934  0E02               	movlw	2
 17146  004936  256F               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 17147  004938  6F6F               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 17148  00493A  0E00               	movlw	0
 17149  00493C  2170               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 17150  00493E  6F70               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 17151                           
 17152                           ; BSR set to: 0
 17153                           ;lorawan_eu.c: 624: Redundancy_t *redundancy;;lorawan_eu.c: 625: redundancy = (Redundanc
      +                          y_t*)(ptr++);
 17154  004940  C06F  F075         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 17155  004944  C070  F076         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 17156                           
 17157                           ; BSR set to: 0
 17158  004948  4B6F               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 17159  00494A  2B70               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 17160                           
 17161                           ; BSR set to: 0
 17162                           ;lorawan_eu.c: 627: if (1 == loRa.macStatus.adr)
 17163  00494C  0102               	movlb	2	; () banked
 17164  00494E  AD07               	btfss	(_loRa+2)& (0+255),6,b
 17165  004950  D09A               	goto	l19572
 17166                           
 17167                           ; BSR set to: 2
 17168                           ;lorawan_eu.c: 628: {;lorawan_eu.c: 629: if ( (ValidateChannelMaskCntl(redundancy->chMas
      +                          kCntl) == OK) && (ValidateChannelMask(channelMask) == OK) )
 17169  004952  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17170  004956  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17171  00495A  0100               	movlb	0	; () banked
 17172  00495C  38DF               	swapf	223,w,c
 17173  00495E  0B07               	andlw	7
 17174  004960  ECE8  F051         	call	_ValidateChannelMaskCntl
 17175  004964  0900               	iorlw	0
 17176  004966  A4D8               	btfss	status,2,c
 17177  004968  D013               	goto	l19540
 17178  00496A  C072  F060         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 17179  00496E  C073  F061         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 17180  004972  ECA7  F04B         	call	_ValidateChannelMask	;wreg free
 17181  004976  0900               	iorlw	0
 17182  004978  A4D8               	btfss	status,2,c
 17183  00497A  D00A               	goto	l19540
 17184                           
 17185                           ;lorawan_eu.c: 630: {;lorawan_eu.c: 631: loRa.macCommands[loRa.crtMacCmdIndex].channelMa
      +                          skAck = 1;
 17186  00497C  0102               	movlb	2	; () banked
 17187  00497E  51AC               	movf	(_loRa+167)& (0+255),w,b
 17188  004980  0D02               	mullw	2
 17189  004982  0EAE               	movlw	low (_loRa+169)
 17190  004984  24F3               	addwf	prodl,w,c
 17191  004986  6ED9               	movwf	fsr2l,c
 17192  004988  0E02               	movlw	high (_loRa+169)
 17193  00498A  20F4               	addwfc	prodh,w,c
 17194  00498C  6EDA               	movwf	fsr2h,c
 17195  00498E  80DF               	bsf	indf2,0,c
 17196  004990                     l19540:
 17197                           
 17198                           ;lorawan_eu.c: 632: };lorawan_eu.c: 634: if ( (ValidateDataRate (dataRate) == OK) && (da
      +                          taRate >= loRa.minDataRate) && (dataRate <= loRa.maxDataRate) )
 17199  004990  0100               	movlb	0	; () banked
 17200  004992  5177               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17201  004994  EC49  F053         	call	_ValidateDataRate
 17202  004998  0900               	iorlw	0
 17203  00499A  A4D8               	btfss	status,2,c
 17204  00499C  D014               	goto	l19548
 17205  00499E  0102               	movlb	2	; () banked
 17206  0049A0  51F0               	movf	(_loRa+235)& (0+255),w,b
 17207  0049A2  0100               	movlb	0	; () banked
 17208  0049A4  5D77               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17209  0049A6  A0D8               	btfss	status,0,c
 17210  0049A8  D00E               	goto	l19548
 17211                           
 17212                           ; BSR set to: 0
 17213  0049AA  5177               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17214  0049AC  0102               	movlb	2	; () banked
 17215  0049AE  5DF1               	subwf	(_loRa+236)& (0+255),w,b
 17216  0049B0  A0D8               	btfss	status,0,c
 17217  0049B2  D009               	goto	l19548
 17218                           
 17219                           ; BSR set to: 2
 17220                           ;lorawan_eu.c: 635: {;lorawan_eu.c: 636: loRa.macCommands[loRa.crtMacCmdIndex].dataRateA
      +                          ck = 1;
 17221  0049B4  51AC               	movf	(_loRa+167)& (0+255),w,b
 17222  0049B6  0D02               	mullw	2
 17223  0049B8  0EAE               	movlw	low (_loRa+169)
 17224  0049BA  24F3               	addwf	prodl,w,c
 17225  0049BC  6ED9               	movwf	fsr2l,c
 17226  0049BE  0E02               	movlw	high (_loRa+169)
 17227  0049C0  20F4               	addwfc	prodh,w,c
 17228  0049C2  6EDA               	movwf	fsr2h,c
 17229  0049C4  82DF               	bsf	indf2,1,c
 17230  0049C6                     l19548:
 17231                           
 17232                           ;lorawan_eu.c: 637: };lorawan_eu.c: 639: if (ValidateTxPower (txPower) == OK)
 17233  0049C6  0100               	movlb	0	; () banked
 17234  0049C8  5174               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17235  0049CA  EC94  F050         	call	_ValidateTxPower
 17236  0049CE  0900               	iorlw	0
 17237  0049D0  A4D8               	btfss	status,2,c
 17238  0049D2  D00A               	goto	l1117
 17239                           
 17240                           ;lorawan_eu.c: 640: {;lorawan_eu.c: 641: loRa.macCommands[loRa.crtMacCmdIndex].powerAck 
      +                          = 1;
 17241  0049D4  0102               	movlb	2	; () banked
 17242  0049D6  51AC               	movf	(_loRa+167)& (0+255),w,b
 17243  0049D8  0D02               	mullw	2
 17244  0049DA  0EAE               	movlw	low (_loRa+169)
 17245  0049DC  24F3               	addwf	prodl,w,c
 17246  0049DE  6ED9               	movwf	fsr2l,c
 17247  0049E0  0E02               	movlw	high (_loRa+169)
 17248  0049E2  20F4               	addwfc	prodh,w,c
 17249  0049E4  6EDA               	movwf	fsr2h,c
 17250  0049E6  84DF               	bsf	indf2,2,c
 17251  0049E8                     l1117:
 17252                           
 17253                           ;lorawan_eu.c: 642: };lorawan_eu.c: 644: if ( (loRa.macCommands[loRa.crtMacCmdIndex].pow
      +                          erAck == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macComm
      +                          ands[loRa.crtMacCmdIndex].channelMaskAck == 1) )
 17254  0049E8  0102               	movlb	2	; () banked
 17255  0049EA  51AC               	movf	(_loRa+167)& (0+255),w,b
 17256  0049EC  0D02               	mullw	2
 17257  0049EE  0EAE               	movlw	low (_loRa+169)
 17258  0049F0  24F3               	addwf	prodl,w,c
 17259  0049F2  6ED9               	movwf	fsr2l,c
 17260  0049F4  0E02               	movlw	high (_loRa+169)
 17261  0049F6  20F4               	addwfc	prodh,w,c
 17262  0049F8  6EDA               	movwf	fsr2h,c
 17263  0049FA  A4DF               	btfss	indf2,2,c
 17264  0049FC  D05F               	goto	l19574
 17265                           
 17266                           ; BSR set to: 2
 17267  0049FE  51AC               	movf	(_loRa+167)& (0+255),w,b
 17268  004A00  0D02               	mullw	2
 17269  004A02  0EAE               	movlw	low (_loRa+169)
 17270  004A04  24F3               	addwf	prodl,w,c
 17271  004A06  6ED9               	movwf	fsr2l,c
 17272  004A08  0E02               	movlw	high (_loRa+169)
 17273  004A0A  20F4               	addwfc	prodh,w,c
 17274  004A0C  6EDA               	movwf	fsr2h,c
 17275  004A0E  A2DF               	btfss	indf2,1,c
 17276  004A10  D055               	goto	l19574
 17277                           
 17278                           ; BSR set to: 2
 17279  004A12  51AC               	movf	(_loRa+167)& (0+255),w,b
 17280  004A14  0D02               	mullw	2
 17281  004A16  0EAE               	movlw	low (_loRa+169)
 17282  004A18  24F3               	addwf	prodl,w,c
 17283  004A1A  6ED9               	movwf	fsr2l,c
 17284  004A1C  0E02               	movlw	high (_loRa+169)
 17285  004A1E  20F4               	addwfc	prodh,w,c
 17286  004A20  6EDA               	movwf	fsr2h,c
 17287  004A22  A0DF               	btfss	indf2,0,c
 17288  004A24  D04B               	goto	l19574
 17289                           
 17290                           ; BSR set to: 2
 17291                           ;lorawan_eu.c: 645: {;lorawan_eu.c: 646: EnableChannels (channelMask, redundancy->chMask
      +                          Cntl);
 17292  004A26  C072  F06C         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 17293  004A2A  C073  F06D         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 17294  004A2E  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17295  004A32  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17296  004A36  0100               	movlb	0	; () banked
 17297  004A38  38DF               	swapf	223,w,c
 17298  004A3A  0B07               	andlw	7
 17299  004A3C  6F6E               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 17300  004A3E  ECEC  F052         	call	_EnableChannels	;wreg free
 17301                           
 17302                           ;lorawan_eu.c: 648: UpdateTxPower (txPower);
 17303  004A42  0100               	movlb	0	; () banked
 17304  004A44  5174               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17305  004A46  EC09  F054         	call	_UpdateTxPower
 17306                           
 17307                           ;lorawan_eu.c: 649: loRa.macStatus.txPowerModified = 1;
 17308  004A4A  0102               	movlb	2	; () banked
 17309  004A4C  8908               	bsf	(_loRa+3)& (0+255),4,b
 17310                           
 17311                           ; BSR set to: 2
 17312                           ;lorawan_eu.c: 650: UpdateCurrentDataRate (dataRate);
 17313  004A4E  0100               	movlb	0	; () banked
 17314  004A50  5177               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17315  004A52  EC0E  F054         	call	_UpdateCurrentDataRate
 17316                           
 17317                           ;lorawan_eu.c: 652: if (redundancy->nbRep == 0)
 17318  004A56  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17319  004A5A  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17320  004A5E  0100               	movlb	0	; () banked
 17321  004A60  50DF               	movf	223,w,c
 17322  004A62  0B0F               	andlw	15
 17323  004A64  0900               	iorlw	0
 17324  004A66  A4D8               	btfss	status,2,c
 17325  004A68  D002               	goto	l19568
 17326                           
 17327                           ; BSR set to: 0
 17328                           ;lorawan_eu.c: 653: {;lorawan_eu.c: 654: loRa.maxRepetitionsUnconfirmedUplink = 0;
 17329  004A6A  0E00               	movlw	0
 17330  004A6C  D008               	goto	L18
 17331  004A6E                     l19568:
 17332                           
 17333                           ; BSR set to: 0
 17334                           ;lorawan_eu.c: 656: else;lorawan_eu.c: 657: {;lorawan_eu.c: 658: loRa.maxRepetitionsUnco
      +                          nfirmedUplink = redundancy->nbRep - 1;
 17335  004A6E  C075  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17336  004A72  C076  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17337  004A76  50DF               	movf	223,w,c
 17338  004A78  0B0F               	andlw	15
 17339  004A7A  6F71               	movwf	??_ExecuteLinkAdr& (0+255),b
 17340  004A7C  0571               	decf	??_ExecuteLinkAdr& (0+255),w,b
 17341  004A7E                     L18:
 17342  004A7E  0102               	movlb	2	; () banked
 17343  004A80  6FDB               	movwf	(_loRa+214)& (0+255),b
 17344                           
 17345                           ; BSR set to: 2
 17346                           ;lorawan_eu.c: 659: };lorawan_eu.c: 660: loRa.macStatus.nbRepModified = 1;
 17347  004A82  8B08               	bsf	(_loRa+3)& (0+255),5,b
 17348  004A84  D01B               	goto	l19574
 17349  004A86                     l19572:
 17350                           
 17351                           ; BSR set to: 2
 17352                           ;lorawan_eu.c: 663: else;lorawan_eu.c: 664: {;lorawan_eu.c: 665: loRa.macCommands[loRa.c
      +                          rtMacCmdIndex].channelMaskAck = 0;
 17353  004A86  51AC               	movf	(_loRa+167)& (0+255),w,b
 17354  004A88  0D02               	mullw	2
 17355  004A8A  0EAE               	movlw	low (_loRa+169)
 17356  004A8C  24F3               	addwf	prodl,w,c
 17357  004A8E  6ED9               	movwf	fsr2l,c
 17358  004A90  0E02               	movlw	high (_loRa+169)
 17359  004A92  20F4               	addwfc	prodh,w,c
 17360  004A94  6EDA               	movwf	fsr2h,c
 17361  004A96  90DF               	bcf	indf2,0,c
 17362                           
 17363                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 17364  004A98  51AC               	movf	(_loRa+167)& (0+255),w,b
 17365  004A9A  0D02               	mullw	2
 17366  004A9C  0EAE               	movlw	low (_loRa+169)
 17367  004A9E  24F3               	addwf	prodl,w,c
 17368  004AA0  6ED9               	movwf	fsr2l,c
 17369  004AA2  0E02               	movlw	high (_loRa+169)
 17370  004AA4  20F4               	addwfc	prodh,w,c
 17371  004AA6  6EDA               	movwf	fsr2h,c
 17372  004AA8  92DF               	bcf	indf2,1,c
 17373                           
 17374                           ;lorawan_eu.c: 667: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 17375  004AAA  51AC               	movf	(_loRa+167)& (0+255),w,b
 17376  004AAC  0D02               	mullw	2
 17377  004AAE  0EAE               	movlw	low (_loRa+169)
 17378  004AB0  24F3               	addwf	prodl,w,c
 17379  004AB2  6ED9               	movwf	fsr2l,c
 17380  004AB4  0E02               	movlw	high (_loRa+169)
 17381  004AB6  20F4               	addwfc	prodh,w,c
 17382  004AB8  6EDA               	movwf	fsr2h,c
 17383  004ABA  94DF               	bcf	indf2,2,c
 17384  004ABC                     l19574:
 17385                           
 17386                           ; BSR set to: 2
 17387                           ;lorawan_eu.c: 668: };lorawan_eu.c: 670: return ptr;
 17388  004ABC  C06F  F06F         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 17389  004AC0  C070  F070         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 17390                           
 17391                           ; BSR set to: 2
 17392  004AC4  0012               	return		;funcret
 17393  004AC6                     __end_of_ExecuteLinkAdr:
 17394                           	opt callstack 0
 17395                           
 17396 ;; *************** function _ValidateTxPower *****************
 17397 ;; Defined at:
 17398 ;;		line 583 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17399 ;; Parameters:    Size  Location     Type
 17400 ;;  txPowerNew      1    wreg     unsigned char 
 17401 ;; Auto vars:     Size  Location     Type
 17402 ;;  txPowerNew      1    1[BANK0 ] unsigned char 
 17403 ;;  result          1    0[BANK0 ] enum E6118
 17404 ;; Return value:  Size  Location     Type
 17405 ;;                  1    wreg      enum E6118
 17406 ;; Registers used:
 17407 ;;		wreg, status,2, status,0
 17408 ;; Tracked objects:
 17409 ;;		On entry : 0/0
 17410 ;;		On exit  : 0/0
 17411 ;;		Unchanged: 0/0
 17412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17414 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17416 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17417 ;;Total ram usage:        2 bytes
 17418 ;; Hardware stack levels used:    1
 17419 ;; Hardware stack levels required when called:    7
 17420 ;; This function calls:
 17421 ;;		Nothing
 17422 ;; This function is called by:
 17423 ;;		_ExecuteLinkAdr
 17424 ;;		_LORAWAN_SetTxPower
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428                           	psect	text73
 17429  00A128                     __ptext73:
 17430                           	opt callstack 0
 17431  00A128                     _ValidateTxPower:
 17432                           	opt callstack 15
 17433                           
 17434                           ; BSR set to: 2
 17435                           ;incstack = 0
 17436                           ;ValidateTxPower@txPowerNew stored from wreg
 17437  00A128  0100               	movlb	0	; () banked
 17438  00A12A  6F61               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 17439                           
 17440                           ;lorawan_eu.c: 585: LorawanError_t result = OK;
 17441  00A12C  0E00               	movlw	0
 17442  00A12E  0100               	movlb	0	; () banked
 17443  00A130  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17444                           
 17445                           ; BSR set to: 0
 17446                           ;lorawan_eu.c: 587: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 17447  00A132  0102               	movlb	2	; () banked
 17448  00A134  51A9               	movf	(_loRa+164)& (0+255),w,b
 17449  00A136  A4D8               	btfss	status,2,c
 17450  00A138  D004               	goto	u20390
 17451                           
 17452                           ; BSR set to: 2
 17453  00A13A  0100               	movlb	0	; () banked
 17454  00A13C  5161               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 17455  00A13E  B4D8               	btfsc	status,2,c
 17456  00A140  D004               	goto	u20400
 17457  00A142                     u20390:
 17458  00A142  0E05               	movlw	5
 17459  00A144  0100               	movlb	0	; () banked
 17460  00A146  6561               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 17461  00A148  D002               	goto	l1101
 17462  00A14A                     u20400:
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;lorawan_eu.c: 588: {;lorawan_eu.c: 589: result = INVALID_PARAMETER;
 17466  00A14A  0E03               	movlw	3
 17467  00A14C  6F60               	movwf	ValidateTxPower@result& (0+255),b
 17468  00A14E                     l1101:
 17469                           
 17470                           ; BSR set to: 0
 17471                           ;lorawan_eu.c: 590: };lorawan_eu.c: 592: return result;
 17472  00A14E  5160               	movf	ValidateTxPower@result& (0+255),w,b
 17473                           
 17474                           ; BSR set to: 0
 17475  00A150  0012               	return		;funcret
 17476  00A152                     __end_of_ValidateTxPower:
 17477                           	opt callstack 0
 17478                           
 17479 ;; *************** function _ValidateDataRate *****************
 17480 ;; Defined at:
 17481 ;;		line 571 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17482 ;; Parameters:    Size  Location     Type
 17483 ;;  dataRate        1    wreg     unsigned char 
 17484 ;; Auto vars:     Size  Location     Type
 17485 ;;  dataRate        1    0[BANK0 ] unsigned char 
 17486 ;;  result          1    1[BANK0 ] enum E6118
 17487 ;; Return value:  Size  Location     Type
 17488 ;;                  1    wreg      enum E6118
 17489 ;; Registers used:
 17490 ;;		wreg, status,2, status,0
 17491 ;; Tracked objects:
 17492 ;;		On entry : 0/0
 17493 ;;		On exit  : 0/0
 17494 ;;		Unchanged: 0/0
 17495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17497 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17499 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17500 ;;Total ram usage:        2 bytes
 17501 ;; Hardware stack levels used:    1
 17502 ;; Hardware stack levels required when called:    7
 17503 ;; This function calls:
 17504 ;;		Nothing
 17505 ;; This function is called by:
 17506 ;;		_ExecuteLinkAdr
 17507 ;;		_ExecuteRxParamSetupReq
 17508 ;;		_ValidateDataRange
 17509 ;;		_LORAWAN_SetReceiveWindow2Parameters
 17510 ;;		_LORAWAN_SetCurrentDataRate
 17511 ;; This function uses a non-reentrant model
 17512 ;;
 17513                           
 17514                           	psect	text74
 17515  00A692                     __ptext74:
 17516                           	opt callstack 0
 17517  00A692                     _ValidateDataRate:
 17518                           	opt callstack 15
 17519                           
 17520                           ; BSR set to: 0
 17521                           ;incstack = 0
 17522                           ;ValidateDataRate@dataRate stored from wreg
 17523  00A692  0100               	movlb	0	; () banked
 17524  00A694  6F60               	movwf	ValidateDataRate@dataRate& (0+255),b
 17525                           
 17526                           ;lorawan_eu.c: 573: LorawanError_t result = OK;
 17527  00A696  0E00               	movlw	0
 17528  00A698  0100               	movlb	0	; () banked
 17529  00A69A  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17530                           
 17531                           ; BSR set to: 0
 17532                           ;lorawan_eu.c: 575: if ( dataRate > 7 )
 17533  00A69C  0E07               	movlw	7
 17534  00A69E  6560               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 17535  00A6A0  D002               	goto	l1097
 17536                           
 17537                           ; BSR set to: 0
 17538                           ;lorawan_eu.c: 576: {;lorawan_eu.c: 577: result = INVALID_PARAMETER;
 17539  00A6A2  0E03               	movlw	3
 17540  00A6A4  6F61               	movwf	ValidateDataRate@result& (0+255),b
 17541  00A6A6                     l1097:
 17542                           
 17543                           ; BSR set to: 0
 17544                           ;lorawan_eu.c: 578: };lorawan_eu.c: 580: return result;
 17545  00A6A6  5161               	movf	ValidateDataRate@result& (0+255),w,b
 17546                           
 17547                           ; BSR set to: 0
 17548  00A6A8  0012               	return		;funcret
 17549  00A6AA                     __end_of_ValidateDataRate:
 17550                           	opt callstack 0
 17551                           
 17552 ;; *************** function _ValidateChannelMaskCntl *****************
 17553 ;; Defined at:
 17554 ;;		line 1138 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17555 ;; Parameters:    Size  Location     Type
 17556 ;;  channelMaskC    1    wreg     unsigned char 
 17557 ;; Auto vars:     Size  Location     Type
 17558 ;;  channelMaskC    1    1[BANK0 ] unsigned char 
 17559 ;;  result          1    0[BANK0 ] enum E6118
 17560 ;; Return value:  Size  Location     Type
 17561 ;;                  1    wreg      enum E6118
 17562 ;; Registers used:
 17563 ;;		wreg, status,2, status,0
 17564 ;; Tracked objects:
 17565 ;;		On entry : 0/0
 17566 ;;		On exit  : 0/0
 17567 ;;		Unchanged: 0/0
 17568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17570 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17572 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17573 ;;Total ram usage:        2 bytes
 17574 ;; Hardware stack levels used:    1
 17575 ;; Hardware stack levels required when called:    7
 17576 ;; This function calls:
 17577 ;;		Nothing
 17578 ;; This function is called by:
 17579 ;;		_ExecuteLinkAdr
 17580 ;; This function uses a non-reentrant model
 17581 ;;
 17582                           
 17583                           	psect	text75
 17584  00A3D0                     __ptext75:
 17585                           	opt callstack 0
 17586  00A3D0                     _ValidateChannelMaskCntl:
 17587                           	opt callstack 15
 17588                           
 17589                           ; BSR set to: 0
 17590                           ;incstack = 0
 17591                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 17592  00A3D0  0100               	movlb	0	; () banked
 17593  00A3D2  6F61               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 17594                           
 17595                           ;lorawan_eu.c: 1140: LorawanError_t result = OK;
 17596  00A3D4  0E00               	movlw	0
 17597  00A3D6  0100               	movlb	0	; () banked
 17598  00A3D8  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17599                           
 17600                           ; BSR set to: 0
 17601                           ;lorawan_eu.c: 1142: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 17602  00A3DA  5161               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17603  00A3DC  B4D8               	btfsc	status,2,c
 17604  00A3DE  D006               	goto	l1268
 17605                           
 17606                           ; BSR set to: 0
 17607  00A3E0  0E06               	movlw	6
 17608  00A3E2  1961               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17609  00A3E4  B4D8               	btfsc	status,2,c
 17610  00A3E6  D002               	goto	l1268
 17611                           
 17612                           ; BSR set to: 0
 17613                           ;lorawan_eu.c: 1143: {;lorawan_eu.c: 1144: result = INVALID_PARAMETER;
 17614  00A3E8  0E03               	movlw	3
 17615  00A3EA  6F60               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17616  00A3EC                     l1268:
 17617                           
 17618                           ; BSR set to: 0
 17619                           ;lorawan_eu.c: 1145: };lorawan_eu.c: 1147: return result;
 17620  00A3EC  5160               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 17621                           
 17622                           ; BSR set to: 0
 17623  00A3EE  0012               	return		;funcret
 17624  00A3F0                     __end_of_ValidateChannelMaskCntl:
 17625                           	opt callstack 0
 17626                           
 17627 ;; *************** function _ValidateChannelMask *****************
 17628 ;; Defined at:
 17629 ;;		line 1167 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;  channelMask     2    0[BANK0 ] unsigned int 
 17632 ;; Auto vars:     Size  Location     Type
 17633 ;;  i               1    4[BANK0 ] unsigned char 
 17634 ;; Return value:  Size  Location     Type
 17635 ;;                  1    wreg      enum E6118
 17636 ;; Registers used:
 17637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17638 ;; Tracked objects:
 17639 ;;		On entry : 0/0
 17640 ;;		On exit  : 0/0
 17641 ;;		Unchanged: 0/0
 17642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17643 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17645 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17646 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17647 ;;Total ram usage:        5 bytes
 17648 ;; Hardware stack levels used:    1
 17649 ;; Hardware stack levels required when called:    7
 17650 ;; This function calls:
 17651 ;;		Nothing
 17652 ;; This function is called by:
 17653 ;;		_ExecuteLinkAdr
 17654 ;; This function uses a non-reentrant model
 17655 ;;
 17656                           
 17657                           	psect	text76
 17658  00974E                     __ptext76:
 17659                           	opt callstack 0
 17660  00974E                     _ValidateChannelMask:
 17661                           	opt callstack 15
 17662                           
 17663                           ;lorawan_eu.c: 1171: if(channelMask != 0x0000U)
 17664                           
 17665                           ; BSR set to: 0
 17666                           ;incstack = 0
 17667  00974E  0100               	movlb	0	; () banked
 17668  009750  5160               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 17669  009752  1161               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17670  009754  B4D8               	btfsc	status,2,c
 17671  009756  D011               	goto	u20450
 17672                           
 17673                           ; BSR set to: 0
 17674                           ;lorawan_eu.c: 1172: {;lorawan_eu.c: 1173: for (i = 0; i < 16; i++)
 17675  009758  0E00               	movlw	0
 17676  00975A  6F64               	movwf	ValidateChannelMask@i& (0+255),b
 17677  00975C                     l1282:
 17678                           
 17679                           ; BSR set to: 0
 17680                           ;lorawan_eu.c: 1174: {;lorawan_eu.c: 1175: if ( ( (channelMask & (1 << (0))) == (1 << (0
      +                          ))) && ( (Channels[i].parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04)
      +                           ) )
 17681  00975C  A160               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 17682  00975E  D00F               	goto	l19074
 17683                           
 17684                           ; BSR set to: 0
 17685  009760  5164               	movf	ValidateChannelMask@i& (0+255),w,b
 17686  009762  0D0E               	mullw	14
 17687  009764  0E21               	movlw	low (_Channels+13)
 17688  009766  24F3               	addwf	prodl,w,c
 17689  009768  6ED9               	movwf	fsr2l,c
 17690  00976A  0E04               	movlw	high (_Channels+13)
 17691  00976C  20F4               	addwfc	prodh,w,c
 17692  00976E  6EDA               	movwf	fsr2h,c
 17693  009770  50DF               	movf	indf2,w,c
 17694  009772  0B07               	andlw	7
 17695  009774  0A07               	xorlw	7
 17696  009776  B4D8               	btfsc	status,2,c
 17697  009778  D002               	goto	l19074
 17698  00977A                     u20450:
 17699                           
 17700                           ; BSR set to: 0
 17701                           ;lorawan_eu.c: 1176: {;lorawan_eu.c: 1177: return INVALID_PARAMETER;
 17702  00977A  0E03               	movlw	3
 17703  00977C  0012               	return	
 17704  00977E                     l19074:
 17705                           
 17706                           ; BSR set to: 0
 17707                           ;lorawan_eu.c: 1179: else;lorawan_eu.c: 1180: {;lorawan_eu.c: 1181: channelMask = channe
      +                          lMask >> (1);
 17708  00977E  90D8               	bcf	status,0,c
 17709  009780  3161               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17710  009782  6F62               	movwf	??_ValidateChannelMask& (0+255),b
 17711  009784  3160               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 17712  009786  6F60               	movwf	ValidateChannelMask@channelMask& (0+255),b
 17713  009788  C062  F061         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 17714                           
 17715                           ; BSR set to: 0
 17716  00978C  2B64               	incf	ValidateChannelMask@i& (0+255),f,b
 17717                           
 17718                           ; BSR set to: 0
 17719  00978E  0E0F               	movlw	15
 17720  009790  6564               	cpfsgt	ValidateChannelMask@i& (0+255),b
 17721  009792  D7E4               	goto	l1282
 17722                           
 17723                           ; BSR set to: 0
 17724                           ;lorawan_eu.c: 1182: };lorawan_eu.c: 1183: };lorawan_eu.c: 1185: return OK;
 17725  009794  0E00               	movlw	0
 17726                           
 17727                           ; BSR set to: 0
 17728  009796  0012               	return		;funcret
 17729  009798                     __end_of_ValidateChannelMask:
 17730                           	opt callstack 0
 17731                           
 17732 ;; *************** function _UpdateTxPower *****************
 17733 ;; Defined at:
 17734 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17735 ;; Parameters:    Size  Location     Type
 17736 ;;  txPowerNew      1    wreg     unsigned char 
 17737 ;; Auto vars:     Size  Location     Type
 17738 ;;  txPowerNew      1    0[BANK0 ] unsigned char 
 17739 ;; Return value:  Size  Location     Type
 17740 ;;                  1    wreg      void 
 17741 ;; Registers used:
 17742 ;;		wreg
 17743 ;; Tracked objects:
 17744 ;;		On entry : 0/0
 17745 ;;		On exit  : 0/0
 17746 ;;		Unchanged: 0/0
 17747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17749 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17751 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17752 ;;Total ram usage:        1 bytes
 17753 ;; Hardware stack levels used:    1
 17754 ;; Hardware stack levels required when called:    7
 17755 ;; This function calls:
 17756 ;;		Nothing
 17757 ;; This function is called by:
 17758 ;;		_ExecuteLinkAdr
 17759 ;;		_LORAWAN_SetTxPower
 17760 ;; This function uses a non-reentrant model
 17761 ;;
 17762                           
 17763                           	psect	text77
 17764  00A812                     __ptext77:
 17765                           	opt callstack 0
 17766  00A812                     _UpdateTxPower:
 17767                           	opt callstack 15
 17768                           
 17769                           ; BSR set to: 0
 17770                           ;incstack = 0
 17771                           ;UpdateTxPower@txPowerNew stored from wreg
 17772  00A812  0100               	movlb	0	; () banked
 17773  00A814  6F60               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 17774                           
 17775                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 17776  00A816  C060  F2E6         	movff	UpdateTxPower@txPowerNew,_loRa+225
 17777  00A81A  0012               	return		;funcret
 17778  00A81C                     __end_of_UpdateTxPower:
 17779                           	opt callstack 0
 17780                           
 17781 ;; *************** function _UpdateCurrentDataRate *****************
 17782 ;; Defined at:
 17783 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17784 ;; Parameters:    Size  Location     Type
 17785 ;;  valueNew        1    wreg     unsigned char 
 17786 ;; Auto vars:     Size  Location     Type
 17787 ;;  valueNew        1    0[BANK0 ] unsigned char 
 17788 ;; Return value:  Size  Location     Type
 17789 ;;                  1    wreg      void 
 17790 ;; Registers used:
 17791 ;;		wreg
 17792 ;; Tracked objects:
 17793 ;;		On entry : 0/0
 17794 ;;		On exit  : 0/0
 17795 ;;		Unchanged: 0/0
 17796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17798 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17800 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17801 ;;Total ram usage:        1 bytes
 17802 ;; Hardware stack levels used:    1
 17803 ;; Hardware stack levels required when called:    7
 17804 ;; This function calls:
 17805 ;;		Nothing
 17806 ;; This function is called by:
 17807 ;;		_ExecuteLinkAdr
 17808 ;;		_LORAWAN_SetCurrentDataRate
 17809 ;; This function uses a non-reentrant model
 17810 ;;
 17811                           
 17812                           	psect	text78
 17813  00A81C                     __ptext78:
 17814                           	opt callstack 0
 17815  00A81C                     _UpdateCurrentDataRate:
 17816                           	opt callstack 15
 17817                           
 17818                           ;incstack = 0
 17819                           ;UpdateCurrentDataRate@valueNew stored from wreg
 17820  00A81C  0100               	movlb	0	; () banked
 17821  00A81E  6F60               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 17822                           
 17823                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 17824  00A820  C060  F2E4         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 17825  00A824  0012               	return		;funcret
 17826  00A826                     __end_of_UpdateCurrentDataRate:
 17827                           	opt callstack 0
 17828                           
 17829 ;; *************** function _EnableChannels *****************
 17830 ;; Defined at:
 17831 ;;		line 1150 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;  channelMask     2   12[BANK0 ] unsigned int 
 17834 ;;  channelMaskC    1   14[BANK0 ] unsigned char 
 17835 ;; Auto vars:     Size  Location     Type
 17836 ;;		None
 17837 ;; Return value:  Size  Location     Type
 17838 ;;                  1    wreg      void 
 17839 ;; Registers used:
 17840 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17841 ;; Tracked objects:
 17842 ;;		On entry : 0/0
 17843 ;;		On exit  : 0/0
 17844 ;;		Unchanged: 0/0
 17845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17846 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17849 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17850 ;;Total ram usage:        3 bytes
 17851 ;; Hardware stack levels used:    1
 17852 ;; Hardware stack levels required when called:    9
 17853 ;; This function calls:
 17854 ;;		_EnableChannels1
 17855 ;; This function is called by:
 17856 ;;		_ExecuteLinkAdr
 17857 ;; This function uses a non-reentrant model
 17858 ;;
 17859                           
 17860                           	psect	text79
 17861  00A5D8                     __ptext79:
 17862                           	opt callstack 0
 17863  00A5D8                     _EnableChannels:
 17864                           	opt callstack 13
 17865                           
 17866                           ;lorawan_eu.c: 1152: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 17867                           
 17868                           ;incstack = 0
 17869  00A5D8  C06C  F064         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 17870  00A5DC  C06D  F065         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 17871  00A5E0  C06E  F066         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 17872  00A5E4  0E00               	movlw	0
 17873  00A5E6  0100               	movlb	0	; () banked
 17874  00A5E8  6F67               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 17875  00A5EA  0E10               	movlw	16
 17876  00A5EC  6F68               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 17877  00A5EE  EC63  F046         	call	_EnableChannels1	;wreg free
 17878  00A5F2  0012               	return		;funcret
 17879  00A5F4                     __end_of_EnableChannels:
 17880                           	opt callstack 0
 17881                           
 17882 ;; *************** function _EnableChannels1 *****************
 17883 ;; Defined at:
 17884 ;;		line 1194 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17885 ;; Parameters:    Size  Location     Type
 17886 ;;  channelMask     2    4[BANK0 ] unsigned int 
 17887 ;;  channelMaskC    1    6[BANK0 ] unsigned char 
 17888 ;;  channelIndex    1    7[BANK0 ] unsigned char 
 17889 ;;  channelIndex    1    8[BANK0 ] unsigned char 
 17890 ;; Auto vars:     Size  Location     Type
 17891 ;;  i               1   11[BANK0 ] unsigned char 
 17892 ;; Return value:  Size  Location     Type
 17893 ;;                  1    wreg      void 
 17894 ;; Registers used:
 17895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17896 ;; Tracked objects:
 17897 ;;		On entry : 0/0
 17898 ;;		On exit  : 0/0
 17899 ;;		Unchanged: 0/0
 17900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17901 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17902 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17903 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17904 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17905 ;;Total ram usage:        8 bytes
 17906 ;; Hardware stack levels used:    1
 17907 ;; Hardware stack levels required when called:    8
 17908 ;; This function calls:
 17909 ;;		_UpdateChannelIdStatus
 17910 ;; This function is called by:
 17911 ;;		_EnableChannels
 17912 ;; This function uses a non-reentrant model
 17913 ;;
 17914                           
 17915                           	psect	text80
 17916  008CC6                     __ptext80:
 17917                           	opt callstack 0
 17918  008CC6                     _EnableChannels1:
 17919                           	opt callstack 13
 17920                           
 17921                           ;lorawan_eu.c: 1196: uint8_t i;;lorawan_eu.c: 1198: if (channelMaskCntl == 6)
 17922                           
 17923                           ;incstack = 0
 17924  008CC6  0E06               	movlw	6
 17925  008CC8  0100               	movlb	0	; () banked
 17926  008CCA  1966               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17927  008CCC  A4D8               	btfss	status,2,c
 17928  008CCE  D00F               	goto	l18686
 17929                           
 17930                           ; BSR set to: 0
 17931                           ;lorawan_eu.c: 1199: {;lorawan_eu.c: 1200: for ( i = channelIndexMin; i < channelIndexMa
      +                          x; i++ )
 17932  008CD0  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17933  008CD4  D007               	goto	l18684
 17934  008CD6                     l18680:
 17935                           
 17936                           ; BSR set to: 0
 17937                           ;lorawan_eu.c: 1201: {;lorawan_eu.c: 1202: UpdateChannelIdStatus (i, 1);
 17938  008CD6  0E01               	movlw	1
 17939  008CD8  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17940  008CDA  516B               	movf	EnableChannels1@i& (0+255),w,b
 17941  008CDC  ECB7  F030         	call	_UpdateChannelIdStatus
 17942  008CE0  0100               	movlb	0	; () banked
 17943  008CE2  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 17944  008CE4                     l18684:
 17945                           
 17946                           ; BSR set to: 0
 17947  008CE4  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 17948  008CE6  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 17949  008CE8  B0D8               	btfsc	status,0,c
 17950  008CEA  0012               	return	
 17951  008CEC  D7F4               	goto	l18680
 17952  008CEE                     l18686:
 17953                           
 17954                           ; BSR set to: 0
 17955                           ;lorawan_eu.c: 1205: else if (channelMaskCntl == 0)
 17956  008CEE  5166               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17957  008CF0  A4D8               	btfss	status,2,c
 17958  008CF2  0012               	return	
 17959                           
 17960                           ; BSR set to: 0
 17961                           ;lorawan_eu.c: 1206: {;lorawan_eu.c: 1207: for ( i = channelIndexMin; i < channelIndexMa
      +                          x; i++ )
 17962  008CF4  C067  F06B         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 17963  008CF8  D016               	goto	l18698
 17964  008CFA                     l1297:
 17965                           
 17966                           ; BSR set to: 0
 17967                           ;lorawan_eu.c: 1208: {;lorawan_eu.c: 1209: if ( channelMask & (1 << (0)) == (1 << (0)))
 17968  008CFA  A164               	btfss	EnableChannels1@channelMask& (0+255),0,b
 17969  008CFC  D006               	goto	l18692
 17970                           
 17971                           ; BSR set to: 0
 17972                           ;lorawan_eu.c: 1210: {;lorawan_eu.c: 1211: UpdateChannelIdStatus (i, 1);
 17973  008CFE  0E01               	movlw	1
 17974  008D00  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17975  008D02  516B               	movf	EnableChannels1@i& (0+255),w,b
 17976  008D04  ECB7  F030         	call	_UpdateChannelIdStatus
 17977                           
 17978                           ;lorawan_eu.c: 1212: }
 17979  008D08  D005               	goto	l18694
 17980  008D0A                     l18692:
 17981                           
 17982                           ; BSR set to: 0
 17983                           ;lorawan_eu.c: 1213: else;lorawan_eu.c: 1214: {;lorawan_eu.c: 1215: UpdateChannelIdStatu
      +                          s (i, 0);
 17984  008D0A  0E00               	movlw	0
 17985  008D0C  6F60               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 17986  008D0E  516B               	movf	EnableChannels1@i& (0+255),w,b
 17987  008D10  ECB7  F030         	call	_UpdateChannelIdStatus
 17988  008D14                     l18694:
 17989                           
 17990                           ;lorawan_eu.c: 1216: };lorawan_eu.c: 1217: channelMask = channelMask >> (1);
 17991  008D14  90D8               	bcf	status,0,c
 17992  008D16  0100               	movlb	0	; () banked
 17993  008D18  3165               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 17994  008D1A  6F69               	movwf	??_EnableChannels1& (0+255),b
 17995  008D1C  3164               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 17996  008D1E  6F64               	movwf	EnableChannels1@channelMask& (0+255),b
 17997  008D20  C069  F065         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 17998                           
 17999                           ; BSR set to: 0
 18000  008D24  2B6B               	incf	EnableChannels1@i& (0+255),f,b
 18001  008D26                     l18698:
 18002                           
 18003                           ; BSR set to: 0
 18004  008D26  5168               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18005  008D28  5D6B               	subwf	EnableChannels1@i& (0+255),w,b
 18006  008D2A  B0D8               	btfsc	status,0,c
 18007  008D2C  0012               	return	
 18008  008D2E  D7E5               	goto	l1297
 18009  008D30                     __end_of_EnableChannels1:
 18010                           	opt callstack 0
 18011                           
 18012 ;; *************** function _UpdateChannelIdStatus *****************
 18013 ;; Defined at:
 18014 ;;		line 1043 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18015 ;; Parameters:    Size  Location     Type
 18016 ;;  channelId       1    wreg     unsigned char 
 18017 ;;  statusNew       1    0[BANK0 ] unsigned char 
 18018 ;; Auto vars:     Size  Location     Type
 18019 ;;  channelId       1    2[BANK0 ] unsigned char 
 18020 ;;  i               1    3[BANK0 ] unsigned char 
 18021 ;; Return value:  Size  Location     Type
 18022 ;;                  1    wreg      void 
 18023 ;; Registers used:
 18024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18025 ;; Tracked objects:
 18026 ;;		On entry : 0/0
 18027 ;;		On exit  : 0/0
 18028 ;;		Unchanged: 0/0
 18029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18030 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18031 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18033 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18034 ;;Total ram usage:        4 bytes
 18035 ;; Hardware stack levels used:    1
 18036 ;; Hardware stack levels required when called:    7
 18037 ;; This function calls:
 18038 ;;		Nothing
 18039 ;; This function is called by:
 18040 ;;		_LORAWAN_SetChannelIdStatus
 18041 ;;		_ExecuteNewChannel
 18042 ;;		_EnableChannels1
 18043 ;; This function uses a non-reentrant model
 18044 ;;
 18045                           
 18046                           	psect	text81
 18047  00616E                     __ptext81:
 18048                           	opt callstack 0
 18049  00616E                     _UpdateChannelIdStatus:
 18050                           	opt callstack 15
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;incstack = 0
 18054                           ;UpdateChannelIdStatus@channelId stored from wreg
 18055  00616E  0100               	movlb	0	; () banked
 18056  006170  6F62               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 18057                           
 18058                           ;lorawan_eu.c: 1045: uint8_t i;;lorawan_eu.c: 1047: Channels[channelId].status = statusN
      +                          ew;
 18059  006172  0100               	movlb	0	; () banked
 18060  006174  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18061  006176  0D0E               	mullw	14
 18062  006178  0E18               	movlw	low (_Channels+4)
 18063  00617A  24F3               	addwf	prodl,w,c
 18064  00617C  6ED9               	movwf	fsr2l,c
 18065  00617E  0E04               	movlw	high (_Channels+4)
 18066  006180  20F4               	addwfc	prodh,w,c
 18067  006182  6EDA               	movwf	fsr2h,c
 18068  006184  C060  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 18069                           
 18070                           ;lorawan_eu.c: 1048: if(Channels[channelId].status == 0)
 18071  006188  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18072  00618A  0D0E               	mullw	14
 18073  00618C  0E18               	movlw	low (_Channels+4)
 18074  00618E  24F3               	addwf	prodl,w,c
 18075  006190  6ED9               	movwf	fsr2l,c
 18076  006192  0E04               	movlw	high (_Channels+4)
 18077  006194  20F4               	addwfc	prodh,w,c
 18078  006196  6EDA               	movwf	fsr2h,c
 18079  006198  50DF               	movf	indf2,w,c
 18080  00619A  A4D8               	btfss	status,2,c
 18081  00619C  D00C               	goto	l18354
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;lorawan_eu.c: 1049: {;lorawan_eu.c: 1051: Channels[channelId].channelTimer = 0;
 18085  00619E  5162               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18086  0061A0  0D0E               	mullw	14
 18087  0061A2  0E1C               	movlw	low (_Channels+8)
 18088  0061A4  24F3               	addwf	prodl,w,c
 18089  0061A6  6ED9               	movwf	fsr2l,c
 18090  0061A8  0E04               	movlw	high (_Channels+8)
 18091  0061AA  20F4               	addwfc	prodh,w,c
 18092  0061AC  6EDA               	movwf	fsr2h,c
 18093  0061AE  6ADE               	clrf	postinc2,c
 18094  0061B0  6ADE               	clrf	postinc2,c
 18095  0061B2  6ADE               	clrf	postinc2,c
 18096  0061B4  6ADD               	clrf	postdec2,c
 18097  0061B6                     l18354:
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;lorawan_eu.c: 1052: };lorawan_eu.c: 1054: for (i = 0; i < loRa.maxChannels; i++)
 18101  0061B6  0E00               	movlw	0
 18102  0061B8  6F63               	movwf	UpdateChannelIdStatus@i& (0+255),b
 18103  0061BA  D055               	goto	l18368
 18104  0061BC                     l18356:
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;lorawan_eu.c: 1055: {;lorawan_eu.c: 1056: if ( (Channels[i].dataRange.min < loRa.minDat
      +                          aRate) && (Channels[i].status == 1) )
 18108  0061BC  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18109  0061BE  0D0E               	mullw	14
 18110  0061C0  0E19               	movlw	low (_Channels+5)
 18111  0061C2  24F3               	addwf	prodl,w,c
 18112  0061C4  6ED9               	movwf	fsr2l,c
 18113  0061C6  0E04               	movlw	high (_Channels+5)
 18114  0061C8  20F4               	addwfc	prodh,w,c
 18115  0061CA  6EDA               	movwf	fsr2h,c
 18116  0061CC  0104               	movlb	4	; () banked
 18117  0061CE  50DF               	movf	223,w,c
 18118  0061D0  0B0F               	andlw	15
 18119  0061D2  0100               	movlb	0	; () banked
 18120  0061D4  6F61               	movwf	??_UpdateChannelIdStatus& (0+255),b
 18121  0061D6  0102               	movlb	2	; () banked
 18122  0061D8  51F0               	movf	(_loRa+235)& (0+255),w,b
 18123  0061DA  0100               	movlb	0	; () banked
 18124  0061DC  5D61               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 18125  0061DE  B0D8               	btfsc	status,0,c
 18126  0061E0  D018               	goto	l1233
 18127                           
 18128                           ; BSR set to: 0
 18129  0061E2  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18130  0061E4  0D0E               	mullw	14
 18131  0061E6  0E18               	movlw	low (_Channels+4)
 18132  0061E8  24F3               	addwf	prodl,w,c
 18133  0061EA  6ED9               	movwf	fsr2l,c
 18134  0061EC  0E04               	movlw	high (_Channels+4)
 18135  0061EE  20F4               	addwfc	prodh,w,c
 18136  0061F0  6EDA               	movwf	fsr2h,c
 18137  0061F2  04DE               	decf	postinc2,w,c
 18138  0061F4  A4D8               	btfss	status,2,c
 18139  0061F6  D00D               	goto	l1233
 18140                           
 18141                           ; BSR set to: 0
 18142                           ;lorawan_eu.c: 1057: {;lorawan_eu.c: 1058: loRa.minDataRate = Channels[i].dataRange.min;
 18143  0061F8  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18144  0061FA  0D0E               	mullw	14
 18145  0061FC  0E19               	movlw	low (_Channels+5)
 18146  0061FE  24F3               	addwf	prodl,w,c
 18147  006200  6ED9               	movwf	fsr2l,c
 18148  006202  0E04               	movlw	high (_Channels+5)
 18149  006204  20F4               	addwfc	prodh,w,c
 18150  006206  6EDA               	movwf	fsr2h,c
 18151  006208  0104               	movlb	4	; () banked
 18152  00620A  50DF               	movf	223,w,c
 18153  00620C  0B0F               	andlw	15
 18154  00620E  0102               	movlb	2	; () banked
 18155  006210  6FF0               	movwf	(_loRa+235)& (0+255),b
 18156  006212                     l1233:
 18157                           
 18158                           ;lorawan_eu.c: 1059: };lorawan_eu.c: 1060: if ( (Channels[i].dataRange.max > loRa.maxDat
      +                          aRate) && (Channels[i].status == 1) )
 18159  006212  0100               	movlb	0	; () banked
 18160  006214  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18161  006216  0D0E               	mullw	14
 18162  006218  0E19               	movlw	low (_Channels+5)
 18163  00621A  24F3               	addwf	prodl,w,c
 18164  00621C  6ED9               	movwf	fsr2l,c
 18165  00621E  0E04               	movlw	high (_Channels+5)
 18166  006220  20F4               	addwfc	prodh,w,c
 18167  006222  6EDA               	movwf	fsr2h,c
 18168  006224  0104               	movlb	4	; () banked
 18169  006226  38DF               	swapf	223,w,c
 18170  006228  0B0F               	andlw	15
 18171  00622A  0102               	movlb	2	; () banked
 18172  00622C  61F1               	cpfslt	(_loRa+236)& (0+255),b
 18173  00622E  D019               	goto	l18366
 18174                           
 18175                           ; BSR set to: 2
 18176  006230  0100               	movlb	0	; () banked
 18177  006232  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18178  006234  0D0E               	mullw	14
 18179  006236  0E18               	movlw	low (_Channels+4)
 18180  006238  24F3               	addwf	prodl,w,c
 18181  00623A  6ED9               	movwf	fsr2l,c
 18182  00623C  0E04               	movlw	high (_Channels+4)
 18183  00623E  20F4               	addwfc	prodh,w,c
 18184  006240  6EDA               	movwf	fsr2h,c
 18185  006242  04DE               	decf	postinc2,w,c
 18186  006244  A4D8               	btfss	status,2,c
 18187  006246  D00D               	goto	l18366
 18188                           
 18189                           ; BSR set to: 0
 18190                           ;lorawan_eu.c: 1061: {;lorawan_eu.c: 1062: loRa.maxDataRate = Channels[i].dataRange.max;
 18191  006248  5163               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18192  00624A  0D0E               	mullw	14
 18193  00624C  0E19               	movlw	low (_Channels+5)
 18194  00624E  24F3               	addwf	prodl,w,c
 18195  006250  6ED9               	movwf	fsr2l,c
 18196  006252  0E04               	movlw	high (_Channels+5)
 18197  006254  20F4               	addwfc	prodh,w,c
 18198  006256  6EDA               	movwf	fsr2h,c
 18199  006258  0104               	movlb	4	; () banked
 18200  00625A  38DF               	swapf	223,w,c
 18201  00625C  0B0F               	andlw	15
 18202  00625E  0102               	movlb	2	; () banked
 18203  006260  6FF1               	movwf	(_loRa+236)& (0+255),b
 18204  006262                     l18366:
 18205  006262  0100               	movlb	0	; () banked
 18206  006264  2B63               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 18207  006266                     l18368:
 18208                           
 18209                           ; BSR set to: 0
 18210  006266  0102               	movlb	2	; () banked
 18211  006268  51F2               	movf	(_loRa+237)& (0+255),w,b
 18212  00626A  0100               	movlb	0	; () banked
 18213  00626C  5D63               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 18214  00626E  A0D8               	btfss	status,0,c
 18215  006270  D7A5               	goto	l18356
 18216                           
 18217                           ; BSR set to: 0
 18218                           ;lorawan_eu.c: 1063: };lorawan_eu.c: 1064: };lorawan_eu.c: 1066: if (loRa.currentDataRat
      +                          e > loRa.maxDataRate)
 18219  006272  0102               	movlb	2	; () banked
 18220  006274  51E4               	movf	(_loRa+223)& (0+255),w,b
 18221  006276  5DF1               	subwf	(_loRa+236)& (0+255),w,b
 18222  006278  A0D8               	btfss	status,0,c
 18223                           
 18224                           ; BSR set to: 2
 18225                           ;lorawan_eu.c: 1067: {;lorawan_eu.c: 1068: loRa.currentDataRate = loRa.maxDataRate;
 18226  00627A  C2F1  F2E4         	movff	_loRa+236,_loRa+223
 18227                           
 18228                           ; BSR set to: 2
 18229                           ;lorawan_eu.c: 1069: };lorawan_eu.c: 1071: if (loRa.currentDataRate < loRa.minDataRate)
 18230  00627E  51F0               	movf	(_loRa+235)& (0+255),w,b
 18231  006280  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 18232  006282  B0D8               	btfsc	status,0,c
 18233  006284  0012               	return	
 18234                           
 18235                           ; BSR set to: 2
 18236                           ;lorawan_eu.c: 1072: {;lorawan_eu.c: 1073: loRa.currentDataRate = loRa.minDataRate;
 18237  006286  C2F0  F2E4         	movff	_loRa+235,_loRa+223
 18238                           
 18239                           ; BSR set to: 2
 18240  00628A  0012               	return		;funcret
 18241  00628C                     __end_of_UpdateChannelIdStatus:
 18242                           	opt callstack 0
 18243                           
 18244 ;; *************** function _ExecuteDutyCycle *****************
 18245 ;; Defined at:
 18246 ;;		line 595 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18247 ;; Parameters:    Size  Location     Type
 18248 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18249 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18250 ;; Auto vars:     Size  Location     Type
 18251 ;;  maxDCycle       1    5[BANK0 ] unsigned char 
 18252 ;; Return value:  Size  Location     Type
 18253 ;;                  2    0[BANK0 ] PTR unsigned char 
 18254 ;; Registers used:
 18255 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18256 ;; Tracked objects:
 18257 ;;		On entry : 0/0
 18258 ;;		On exit  : 0/0
 18259 ;;		Unchanged: 0/0
 18260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18261 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18263 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18264 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18265 ;;Total ram usage:        6 bytes
 18266 ;; Hardware stack levels used:    1
 18267 ;; Hardware stack levels required when called:    7
 18268 ;; This function calls:
 18269 ;;		Nothing
 18270 ;; This function is called by:
 18271 ;;		_MacExecuteCommands
 18272 ;; This function uses a non-reentrant model
 18273 ;;
 18274                           
 18275                           	psect	text82
 18276  0092E0                     __ptext82:
 18277                           	opt callstack 0
 18278  0092E0                     _ExecuteDutyCycle:
 18279                           	opt callstack 16
 18280                           
 18281                           ;lorawan_eu.c: 597: uint8_t maxDCycle;;lorawan_eu.c: 599: maxDCycle = *(ptr++);
 18282                           
 18283                           ; BSR set to: 2
 18284                           ;incstack = 0
 18285  0092E0  C060  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 18286  0092E4  C061  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 18287  0092E8  50DF               	movf	indf2,w,c
 18288  0092EA  0100               	movlb	0	; () banked
 18289  0092EC  6F65               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 18290                           
 18291                           ; BSR set to: 0
 18292  0092EE  4B60               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 18293  0092F0  2B61               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 18294                           
 18295                           ; BSR set to: 0
 18296                           ;lorawan_eu.c: 600: if (maxDCycle < 15)
 18297  0092F2  0E0F               	movlw	15
 18298  0092F4  6165               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 18299  0092F6  D013               	goto	l1109
 18300                           
 18301                           ; BSR set to: 0
 18302                           ;lorawan_eu.c: 601: {;lorawan_eu.c: 602: loRa.prescaler = 1 << maxDCycle;
 18303  0092F8  C065  F062         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 18304  0092FC  0E01               	movlw	1
 18305  0092FE  6F63               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 18306  009300  0E00               	movlw	0
 18307  009302  6F64               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 18308  009304  2B62               	incf	??_ExecuteDutyCycle& (0+255),f,b
 18309  009306  D003               	goto	u21074
 18310  009308                     u21075:
 18311  009308  90D8               	bcf	status,0,c
 18312  00930A  3763               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 18313  00930C  3764               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 18314  00930E                     u21074:
 18315  00930E  2F62               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 18316  009310  D7FB               	goto	u21075
 18317  009312  C063  F2E0         	movff	??_ExecuteDutyCycle+1,_loRa+219
 18318  009316  C064  F2E1         	movff	??_ExecuteDutyCycle+2,_loRa+220
 18319                           
 18320                           ;lorawan_eu.c: 603: loRa.macStatus.prescalerModified = 1;
 18321  00931A  0102               	movlb	2	; () banked
 18322  00931C  8D08               	bsf	(_loRa+3)& (0+255),6,b
 18323  00931E                     l1109:
 18324                           
 18325                           ;lorawan_eu.c: 604: };lorawan_eu.c: 606: if (maxDCycle == 255)
 18326  00931E  0100               	movlb	0	; () banked
 18327  009320  2965               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 18328  009322  A4D8               	btfss	status,2,c
 18329  009324  D002               	goto	l19516
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;lorawan_eu.c: 607: {;lorawan_eu.c: 608: loRa.macStatus.silentImmediately = 1;
 18333  009326  0102               	movlb	2	; () banked
 18334  009328  8F07               	bsf	(_loRa+2)& (0+255),7,b
 18335  00932A                     l19516:
 18336                           
 18337                           ;lorawan_eu.c: 609: };lorawan_eu.c: 611: return ptr;
 18338  00932A  C060  F060         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 18339  00932E  C061  F061         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 18340  009332  0012               	return		;funcret
 18341  009334                     __end_of_ExecuteDutyCycle:
 18342                           	opt callstack 0
 18343                           
 18344 ;; *************** function _ExecuteDevStatus *****************
 18345 ;; Defined at:
 18346 ;;		line 673 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18347 ;; Parameters:    Size  Location     Type
 18348 ;;  ptr             2    0[BANK0 ] PTR unsigned char 
 18349 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18350 ;; Auto vars:     Size  Location     Type
 18351 ;;		None
 18352 ;; Return value:  Size  Location     Type
 18353 ;;                  2    0[BANK0 ] PTR unsigned char 
 18354 ;; Registers used:
 18355 ;;		wreg, status,2, status,0
 18356 ;; Tracked objects:
 18357 ;;		On entry : 0/0
 18358 ;;		On exit  : 0/0
 18359 ;;		Unchanged: 0/0
 18360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18361 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18364 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18365 ;;Total ram usage:        2 bytes
 18366 ;; Hardware stack levels used:    1
 18367 ;; Hardware stack levels required when called:    7
 18368 ;; This function calls:
 18369 ;;		Nothing
 18370 ;; This function is called by:
 18371 ;;		_MacExecuteCommands
 18372 ;; This function uses a non-reentrant model
 18373 ;;
 18374                           
 18375                           	psect	text83
 18376  00A826                     __ptext83:
 18377                           	opt callstack 0
 18378  00A826                     _ExecuteDevStatus:
 18379                           	opt callstack 16
 18380                           
 18381                           ;lorawan_eu.c: 675: return ptr;
 18382                           
 18383                           ;incstack = 0
 18384  00A826  C060  F060         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 18385  00A82A  C061  F061         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 18386  00A82E  0012               	return		;funcret
 18387  00A830                     __end_of_ExecuteDevStatus:
 18388                           	opt callstack 0
 18389                           
 18390 ;; *************** function _LORAWAN_Send *****************
 18391 ;; Defined at:
 18392 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18393 ;; Parameters:    Size  Location     Type
 18394 ;;  confirmed       1    wreg     enum E6086
 18395 ;;  port            1  116[BANK0 ] unsigned char 
 18396 ;;  buffer          2  117[BANK0 ] PTR void 
 18397 ;;		 -> sensorsString(40), NULL(0), 
 18398 ;;  bufferLength    1  119[BANK0 ] unsigned char 
 18399 ;; Auto vars:     Size  Location     Type
 18400 ;;  confirmed       1  121[BANK0 ] enum E6086
 18401 ;;  result          1  122[BANK0 ] enum E6059
 18402 ;; Return value:  Size  Location     Type
 18403 ;;                  1    wreg      enum E6059
 18404 ;; Registers used:
 18405 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18406 ;; Tracked objects:
 18407 ;;		On entry : 0/0
 18408 ;;		On exit  : 0/0
 18409 ;;		Unchanged: 0/0
 18410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18412 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18413 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18414 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18415 ;;Total ram usage:        7 bytes
 18416 ;; Hardware stack levels used:    1
 18417 ;; Hardware stack levels required when called:   13
 18418 ;; This function calls:
 18419 ;;		_AssemblePacket
 18420 ;;		_LORAWAN_GetMaxPayloadSize
 18421 ;;		_RADIO_ReceiveStop
 18422 ;;		_RADIO_Transmit
 18423 ;;		_SelectChannelForTransmission
 18424 ;; This function is called by:
 18425 ;;		_AutomaticReplyCallback
 18426 ;;		_LORAWAN_RxDone
 18427 ;;		_sendValue
 18428 ;; This function uses a non-reentrant model
 18429 ;;
 18430                           
 18431                           	psect	text84
 18432  006FC2                     __ptext84:
 18433                           	opt callstack 0
 18434  006FC2                     _LORAWAN_Send:
 18435                           	opt callstack 15
 18436                           
 18437                           ;incstack = 0
 18438                           ;LORAWAN_Send@confirmed stored from wreg
 18439  006FC2  0100               	movlb	0	; () banked
 18440  006FC4  6FD9               	movwf	LORAWAN_Send@confirmed& (0+255),b
 18441                           
 18442                           ;lorawan.c: 187: LorawanError_t result;;lorawan.c: 189: if (loRa.macStatus.macPause == 1
      +                          )
 18443  006FC6  0102               	movlb	2	; () banked
 18444  006FC8  A108               	btfss	(_loRa+3)& (0+255),0,b
 18445  006FCA  D002               	goto	l1527
 18446                           
 18447                           ; BSR set to: 2
 18448                           ;lorawan.c: 190: {;lorawan.c: 191: return MAC_PAUSED;
 18449  006FCC  0E08               	movlw	8
 18450  006FCE  0012               	return	
 18451  006FD0                     l1527:
 18452                           
 18453                           ; BSR set to: 2
 18454                           ;lorawan.c: 192: };lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 18455  006FD0  AF07               	btfss	(_loRa+2)& (0+255),7,b
 18456  006FD2  D002               	goto	l1529
 18457                           
 18458                           ; BSR set to: 2
 18459                           ;lorawan.c: 195: {;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 18460  006FD4  0E05               	movlw	5
 18461  006FD6  0012               	return	
 18462  006FD8                     l1529:
 18463                           
 18464                           ; BSR set to: 2
 18465                           ;lorawan.c: 197: };lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 18466  006FD8  B907               	btfsc	(_loRa+2)& (0+255),4,b
 18467  006FDA  D002               	goto	l19982
 18468                           
 18469                           ; BSR set to: 2
 18470                           ;lorawan.c: 200: {;lorawan.c: 201: return NETWORK_NOT_JOINED;
 18471  006FDC  0E01               	movlw	1
 18472  006FDE  0012               	return	
 18473  006FE0                     l19982:
 18474                           
 18475                           ; BSR set to: 2
 18476                           ;lorawan.c: 202: };lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 18477  006FE0  0100               	movlb	0	; () banked
 18478  006FE2  51D4               	movf	LORAWAN_Send@port& (0+255),w,b
 18479  006FE4  A4D8               	btfss	status,2,c
 18480  006FE6  D005               	goto	l19990
 18481                           
 18482                           ; BSR set to: 0
 18483  006FE8  51D7               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18484  006FEA  B4D8               	btfsc	status,2,c
 18485  006FEC  D002               	goto	l19990
 18486                           
 18487                           ; BSR set to: 0
 18488                           ;lorawan.c: 205: {;lorawan.c: 206: return INVALID_PARAMETER;
 18489  006FEE  0E03               	movlw	3
 18490  006FF0  0012               	return	
 18491  006FF2                     l19990:
 18492                           
 18493                           ; BSR set to: 0
 18494                           ;lorawan.c: 207: };lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 18495  006FF2  ECE4  F04A         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 18496  006FF6  0100               	movlb	0	; () banked
 18497  006FF8  6FD8               	movwf	??_LORAWAN_Send& (0+255),b
 18498  006FFA  51D7               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18499  006FFC  5DD8               	subwf	??_LORAWAN_Send& (0+255),w,b
 18500  006FFE  B0D8               	btfsc	status,0,c
 18501  007000  D002               	goto	l19996
 18502                           
 18503                           ; BSR set to: 0
 18504                           ;lorawan.c: 211: {;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 18505  007002  0E07               	movlw	7
 18506  007004  0012               	return	
 18507  007006                     l19996:
 18508                           
 18509                           ; BSR set to: 0
 18510                           ;lorawan.c: 213: };lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 18511  007006  0102               	movlb	2	; () banked
 18512  007008  290B               	incf	(_loRa+6)& (0+255),w,b
 18513  00700A  E10A               	bnz	l20004
 18514  00700C  290C               	incf	(_loRa+7)& (0+255),w,b
 18515  00700E  E108               	bnz	l20004
 18516  007010  290D               	incf	(_loRa+8)& (0+255),w,b
 18517  007012  E106               	bnz	l20004
 18518  007014  290E               	incf	(_loRa+9)& (0+255),w,b
 18519  007016  A4D8               	btfss	status,2,c
 18520  007018  D003               	goto	l20004
 18521                           
 18522                           ; BSR set to: 2
 18523                           ;lorawan.c: 216: {;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 18524  00701A  8309               	bsf	(_loRa+4)& (0+255),1,b
 18525                           
 18526                           ; BSR set to: 2
 18527                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 18528  00701C  0E06               	movlw	6
 18529  00701E  0012               	return	
 18530  007020                     l20004:
 18531                           
 18532                           ; BSR set to: 2
 18533                           ;lorawan.c: 220: };lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == 
      +                          loRa.deviceClass))
 18534  007020  5107               	movf	(_loRa+2)& (0+255),w,b
 18535  007022  0B0F               	andlw	15
 18536  007024  0900               	iorlw	0
 18537  007026  B4D8               	btfsc	status,2,c
 18538  007028  D005               	goto	l20012
 18539                           
 18540                           ; BSR set to: 2
 18541  00702A  5117               	movf	(_loRa+18)& (0+255),w,b
 18542  00702C  A4D8               	btfss	status,2,c
 18543  00702E  D002               	goto	l20012
 18544  007030                     u21810:
 18545                           
 18546                           ;lorawan.c: 223: {;lorawan.c: 224: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 18547  007030  0E02               	movlw	2
 18548  007032  0012               	return	
 18549  007034                     l20012:
 18550                           
 18551                           ; BSR set to: 2
 18552                           ;lorawan.c: 225: };lorawan.c: 227: result = SelectChannelForTransmission (1);
 18553  007034  0E01               	movlw	1
 18554  007036  ECCD  F046         	call	_SelectChannelForTransmission
 18555  00703A  0100               	movlb	0	; () banked
 18556  00703C  6FDA               	movwf	LORAWAN_Send@result& (0+255),b
 18557                           
 18558                           ; BSR set to: 0
 18559                           ;lorawan.c: 228: if (result != OK)
 18560  00703E  51DA               	movf	LORAWAN_Send@result& (0+255),w,b
 18561  007040  B4D8               	btfsc	status,2,c
 18562  007042  D002               	goto	l20022
 18563                           
 18564                           ; BSR set to: 0
 18565                           ;lorawan.c: 229: {;lorawan.c: 230: return result;
 18566  007044  51DA               	movf	LORAWAN_Send@result& (0+255),w,b
 18567  007046  0012               	return	
 18568  007048                     l20022:
 18569                           
 18570                           ; BSR set to: 0
 18571                           ;lorawan.c: 232: else;lorawan.c: 233: {;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 18572  007048  0E02               	movlw	2
 18573  00704A  0102               	movlb	2	; () banked
 18574  00704C  1917               	xorwf	(_loRa+18)& (0+255),w,b
 18575  00704E  B4D8               	btfsc	status,2,c
 18576                           
 18577                           ; BSR set to: 2
 18578                           ;lorawan.c: 235: {;lorawan.c: 236: RADIO_ReceiveStop();
 18579  007050  ECF8  F051         	call	_RADIO_ReceiveStop	;wreg free
 18580                           
 18581                           ;lorawan.c: 237: };lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength
      +                          );
 18582  007054  C0D4  F0C8         	movff	LORAWAN_Send@port,AssemblePacket@port
 18583  007058  C0D5  F0C9         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 18584  00705C  C0D6  F0CA         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 18585  007060  C0D7  F0CB         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 18586  007064  0100               	movlb	0	; () banked
 18587  007066  6BCC               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 18588  007068  51D9               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 18589  00706A  ECE8  F00B         	call	_AssemblePacket
 18590                           
 18591                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 18592  00706E  0EC8               	movlw	low (_macBuffer+16)
 18593  007070  0100               	movlb	0	; () banked
 18594  007072  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 18595  007074  0E06               	movlw	high (_macBuffer+16)
 18596  007076  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 18597  007078  C2D9  F0AB         	movff	_loRa+212,RADIO_Transmit@bufferLen
 18598  00707C  EC82  F01F         	call	_RADIO_Transmit	;wreg free
 18599  007080  0100               	movlb	0	; () banked
 18600  007082  51A9               	movf	?_RADIO_Transmit& (0+255),w,b
 18601  007084  11AA               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 18602  007086  A4D8               	btfss	status,2,c
 18603  007088  D7D3               	goto	u21810
 18604                           
 18605                           ; BSR set to: 0
 18606                           ;lorawan.c: 242: {;lorawan.c: 243: loRa.fCntUp.value ++;
 18607  00708A  0E01               	movlw	1
 18608  00708C  0102               	movlb	2	; () banked
 18609  00708E  270B               	addwf	(_loRa+6)& (0+255),f,b
 18610  007090  0E00               	movlw	0
 18611  007092  230C               	addwfc	(_loRa+7)& (0+255),f,b
 18612  007094  230D               	addwfc	(_loRa+8)& (0+255),f,b
 18613  007096  230E               	addwfc	(_loRa+9)& (0+255),f,b
 18614                           
 18615                           ;lorawan.c: 245: if (CNF == confirmed)
 18616  007098  0100               	movlb	0	; () banked
 18617  00709A  05D9               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 18618  00709C  A4D8               	btfss	status,2,c
 18619  00709E  D002               	goto	l1539
 18620                           
 18621                           ; BSR set to: 0
 18622                           ;lorawan.c: 246: {;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMess
      +                          age = 1;
 18623  0070A0  0102               	movlb	2	; () banked
 18624  0070A2  8105               	bsf	_loRa& (0+255),0,b
 18625  0070A4                     l1539:
 18626                           
 18627                           ;lorawan.c: 248: };lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 18628  0070A4  0102               	movlb	2	; () banked
 18629  0070A6  8B05               	bsf	_loRa& (0+255),5,b
 18630                           
 18631                           ; BSR set to: 2
 18632                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 18633  0070A8  5107               	movf	(_loRa+2)& (0+255),w,b
 18634  0070AA  0BF0               	andlw	-16
 18635  0070AC  0901               	iorlw	1
 18636  0070AE  6F07               	movwf	(_loRa+2)& (0+255),b
 18637                           
 18638                           ; BSR set to: 2
 18639                           ;lorawan.c: 255: };lorawan.c: 256: };lorawan.c: 258: return OK;
 18640                           
 18641                           ;lorawan.c: 251: }
 18642  0070B0  0E00               	movlw	0
 18643  0070B2  0012               	return		;funcret
 18644  0070B4                     __end_of_LORAWAN_Send:
 18645                           	opt callstack 0
 18646                           
 18647 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 18648 ;; Defined at:
 18649 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18650 ;; Parameters:    Size  Location     Type
 18651 ;;		None
 18652 ;; Auto vars:     Size  Location     Type
 18653 ;;  result          1   10[BANK0 ] unsigned char 
 18654 ;;  macCommandsL    1    9[BANK0 ] unsigned char 
 18655 ;; Return value:  Size  Location     Type
 18656 ;;                  1    wreg      unsigned char 
 18657 ;; Registers used:
 18658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18659 ;; Tracked objects:
 18660 ;;		On entry : 0/0
 18661 ;;		On exit  : 0/0
 18662 ;;		Unchanged: 0/0
 18663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18665 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18667 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18668 ;;Total ram usage:        3 bytes
 18669 ;; Hardware stack levels used:    1
 18670 ;; Hardware stack levels required when called:    8
 18671 ;; This function calls:
 18672 ;;		_CountfOptsLength
 18673 ;; This function is called by:
 18674 ;;		_LORAWAN_Send
 18675 ;;		_AckRetransmissionCallback
 18676 ;; This function uses a non-reentrant model
 18677 ;;
 18678                           
 18679                           	psect	text85
 18680  0095C8                     __ptext85:
 18681                           	opt callstack 0
 18682  0095C8                     _LORAWAN_GetMaxPayloadSize:
 18683                           	opt callstack 19
 18684                           
 18685                           ;lorawan.c: 1559: uint8_t macCommandsLength;;lorawan.c: 1561: macCommandsLength = Countf
      +                          OptsLength();
 18686                           
 18687                           ;incstack = 0
 18688  0095C8  EC73  F03B         	call	_CountfOptsLength	;wreg free
 18689  0095CC  0100               	movlb	0	; () banked
 18690  0095CE  6F69               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 18694  0095D0  0102               	movlb	2	; () banked
 18695  0095D2  51AC               	movf	(_loRa+167)& (0+255),w,b
 18696  0095D4  A4D8               	btfss	status,2,c
 18697  0095D6  D00D               	goto	l19678
 18698                           
 18699                           ; BSR set to: 2
 18700                           ;lorawan.c: 1564: {;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 18701  0095D8  0E17               	movlw	low _maxPayloadSize
 18702  0095DA  25E4               	addwf	(_loRa+223)& (0+255),w,b
 18703  0095DC  6EF6               	movwf	tblptrl,c
 18704  0095DE  6AF7               	clrf	tblptrh,c
 18705  0095E0  0EFF               	movlw	high _maxPayloadSize
 18706  0095E2  22F7               	addwfc	tblptrh,f,c
 18707  0095E4                     	if	1	;There are 3 active tblptr bytes
 18708  0095E4  6AF8               	clrf	tblptru,c
 18709  0095E6  0E00               	movlw	low (__mediumconst shr (0+16))
 18710  0095E8  22F8               	addwfc	tblptru,f,c
 18711  0095EA                     	endif
 18712  0095EA  0008               	tblrd		*
 18713  0095EC  CFF5 F06A          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 18714                           
 18715                           ;lorawan.c: 1566: }
 18716  0095F0  D010               	goto	l19680
 18717  0095F2                     l19678:
 18718                           
 18719                           ; BSR set to: 2
 18720                           ;lorawan.c: 1567: else;lorawan.c: 1568: {;lorawan.c: 1569: result = maxPayloadSize[loRa.
      +                          currentDataRate] - macCommandsLength ;
 18721  0095F2  0E17               	movlw	low _maxPayloadSize
 18722  0095F4  25E4               	addwf	(_loRa+223)& (0+255),w,b
 18723  0095F6  6EF6               	movwf	tblptrl,c
 18724  0095F8  6AF7               	clrf	tblptrh,c
 18725  0095FA  0EFF               	movlw	high _maxPayloadSize
 18726  0095FC  22F7               	addwfc	tblptrh,f,c
 18727  0095FE                     	if	1	;There are 3 active tblptr bytes
 18728  0095FE  6AF8               	clrf	tblptru,c
 18729  009600  0E00               	movlw	low (__mediumconst shr (0+16))
 18730  009602  22F8               	addwfc	tblptru,f,c
 18731  009604                     	endif
 18732  009604  0008               	tblrd		*
 18733  009606  CFF5 F068          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 18734  00960A  0100               	movlb	0	; () banked
 18735  00960C  5169               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 18736  00960E  5D68               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 18737  009610  6F6A               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18738  009612                     l19680:
 18739                           
 18740                           ;lorawan.c: 1570: };lorawan.c: 1572: return result;
 18741  009612  0100               	movlb	0	; () banked
 18742  009614  516A               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 18743                           
 18744                           ; BSR set to: 0
 18745  009616  0012               	return		;funcret
 18746  009618                     __end_of_LORAWAN_GetMaxPayloadSize:
 18747                           	opt callstack 0
 18748                           
 18749 ;; *************** function _AssemblePacket *****************
 18750 ;; Defined at:
 18751 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18752 ;; Parameters:    Size  Location     Type
 18753 ;;  confirmed       1    wreg     unsigned char 
 18754 ;;  port            1  104[BANK0 ] unsigned char 
 18755 ;;  buffer          2  105[BANK0 ] PTR unsigned char 
 18756 ;;		 -> sensorsString(40), NULL(0), 
 18757 ;;  bufferLength    2  107[BANK0 ] unsigned int 
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;  confirmed       1  111[BANK0 ] unsigned char 
 18760 ;;  bufferIndex     1  115[BANK0 ] unsigned char 
 18761 ;;  macCmdIdx       1  114[BANK0 ] unsigned char 
 18762 ;;  fCtrl           1  113[BANK0 ] struct .
 18763 ;;  mhdr            1  112[BANK0 ] struct .
 18764 ;; Return value:  Size  Location     Type
 18765 ;;                  1    wreg      void 
 18766 ;; Registers used:
 18767 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18768 ;; Tracked objects:
 18769 ;;		On entry : 0/0
 18770 ;;		On exit  : 0/0
 18771 ;;		Unchanged: 0/0
 18772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18773 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18774 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18775 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18776 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18777 ;;Total ram usage:       12 bytes
 18778 ;; Hardware stack levels used:    1
 18779 ;; Hardware stack levels required when called:   12
 18780 ;; This function calls:
 18781 ;;		_AESCmac
 18782 ;;		_AssembleEncryptionBlock
 18783 ;;		_CountfOptsLength
 18784 ;;		_EncryptFRMPayload
 18785 ;;		_FindSmallestDataRate
 18786 ;;		_IncludeMacCommandsResponse
 18787 ;;		_memcpy
 18788 ;;		_memset
 18789 ;; This function is called by:
 18790 ;;		_LORAWAN_Send
 18791 ;; This function uses a non-reentrant model
 18792 ;;
 18793                           
 18794                           	psect	text86
 18795  0017D0                     __ptext86:
 18796                           	opt callstack 0
 18797  0017D0                     _AssemblePacket:
 18798                           	opt callstack 15
 18799                           
 18800                           ; BSR set to: 0
 18801                           ;incstack = 0
 18802                           ;AssemblePacket@confirmed stored from wreg
 18803  0017D0  0100               	movlb	0	; () banked
 18804  0017D2  6FCF               	movwf	AssemblePacket@confirmed& (0+255),b
 18805                           
 18806                           ;lorawan.c: 1674: Mhdr_t mhdr;;lorawan.c: 1675: uint8_t bufferIndex = 16;
 18807  0017D4  0E10               	movlw	16
 18808  0017D6  0100               	movlb	0	; () banked
 18809  0017D8  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18810                           
 18811                           ;lorawan.c: 1676: FCtrl_t fCtrl;;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 18812  0017DA  0E00               	movlw	0
 18813  0017DC  6FD2               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 18817  0017DE  0ED0               	movlw	low AssemblePacket@mhdr
 18818  0017E0  6F60               	movwf	memset@p1& (0+255),b
 18819  0017E2  0E00               	movlw	high AssemblePacket@mhdr
 18820  0017E4  6F61               	movwf	(memset@p1+1)& (0+255),b
 18821  0017E6  0E00               	movlw	0
 18822  0017E8  6F63               	movwf	(memset@c+1)& (0+255),b
 18823  0017EA  0E00               	movlw	0
 18824  0017EC  6F62               	movwf	memset@c& (0+255),b
 18825  0017EE  0E00               	movlw	0
 18826  0017F0  6F65               	movwf	(memset@n+1)& (0+255),b
 18827  0017F2  0E01               	movlw	1
 18828  0017F4  6F64               	movwf	memset@n& (0+255),b
 18829  0017F6  EC0D  F050         	call	_memset	;wreg free
 18830                           
 18831                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 18832  0017FA  0EB8               	movlw	low _macBuffer
 18833  0017FC  0100               	movlb	0	; () banked
 18834  0017FE  6F60               	movwf	memset@p1& (0+255),b
 18835  001800  0E06               	movlw	high _macBuffer
 18836  001802  6F61               	movwf	(memset@p1+1)& (0+255),b
 18837  001804  0E00               	movlw	0
 18838  001806  6F63               	movwf	(memset@c+1)& (0+255),b
 18839  001808  0E00               	movlw	0
 18840  00180A  6F62               	movwf	memset@c& (0+255),b
 18841  00180C  0E01               	movlw	1
 18842  00180E  6F65               	movwf	(memset@n+1)& (0+255),b
 18843  001810  0E0F               	movlw	15
 18844  001812  6F64               	movwf	memset@n& (0+255),b
 18845  001814  EC0D  F050         	call	_memset	;wreg free
 18846                           
 18847                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 18848  001818  0E5F               	movlw	low _aesBuffer
 18849  00181A  0100               	movlb	0	; () banked
 18850  00181C  6F60               	movwf	memset@p1& (0+255),b
 18851  00181E  0E01               	movlw	high _aesBuffer
 18852  001820  6F61               	movwf	(memset@p1+1)& (0+255),b
 18853  001822  0E00               	movlw	0
 18854  001824  6F63               	movwf	(memset@c+1)& (0+255),b
 18855  001826  0E00               	movlw	0
 18856  001828  6F62               	movwf	memset@c& (0+255),b
 18857  00182A  0E00               	movlw	0
 18858  00182C  6F65               	movwf	(memset@n+1)& (0+255),b
 18859  00182E  0E10               	movlw	16
 18860  001830  6F64               	movwf	memset@n& (0+255),b
 18861  001832  EC0D  F050         	call	_memset	;wreg free
 18862                           
 18863                           ;lorawan.c: 1683: if (confirmed == 1)
 18864  001836  0100               	movlb	0	; () banked
 18865  001838  05CF               	decf	AssemblePacket@confirmed& (0+255),w,b
 18866  00183A  A4D8               	btfss	status,2,c
 18867  00183C  D007               	goto	l19698
 18868                           
 18869                           ; BSR set to: 0
 18870                           ;lorawan.c: 1684: {;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 18871  00183E  51D0               	movf	AssemblePacket@mhdr& (0+255),w,b
 18872  001840  0B1F               	andlw	-225
 18873  001842  0980               	iorlw	128
 18874  001844  6FD0               	movwf	AssemblePacket@mhdr& (0+255),b
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18878  001846  0102               	movlb	2	; () banked
 18879  001848  8105               	bsf	_loRa& (0+255),0,b
 18880                           
 18881                           ;lorawan.c: 1687: }
 18882  00184A  D004               	goto	l2024
 18883  00184C                     l19698:
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;lorawan.c: 1688: else;lorawan.c: 1689: {;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_
      +                          DATA_UNCONFIRMED_UP;
 18887  00184C  51D0               	movf	AssemblePacket@mhdr& (0+255),w,b
 18888  00184E  0B1F               	andlw	-225
 18889  001850  0940               	iorlw	64
 18890  001852  6FD0               	movwf	AssemblePacket@mhdr& (0+255),b
 18891  001854                     l2024:
 18892                           
 18893                           ;lorawan.c: 1691: };lorawan.c: 1692: mhdr.bits.major = 0;
 18894  001854  0EFC               	movlw	-4
 18895  001856  0100               	movlb	0	; () banked
 18896  001858  17D0               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18897                           
 18898                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 18899  00185A  0EE3               	movlw	-29
 18900  00185C  17D0               	andwf	AssemblePacket@mhdr& (0+255),f,b
 18901                           
 18902                           ; BSR set to: 0
 18903                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 18904  00185E  0EB8               	movlw	low _macBuffer
 18905  001860  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18906  001862  6ED9               	movwf	fsr2l,c
 18907  001864  6ADA               	clrf	fsr2h,c
 18908  001866  0E06               	movlw	high _macBuffer
 18909  001868  22DA               	addwfc	fsr2h,f,c
 18910  00186A  C0D0  FFDF         	movff	AssemblePacket@mhdr,indf2
 18911                           
 18912                           ; BSR set to: 0
 18913  00186E  2BD3               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 18914                           
 18915                           ; BSR set to: 0
 18916                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 18917  001870  0EB8               	movlw	low _macBuffer
 18918  001872  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 18919  001874  6F60               	movwf	memcpy@d1& (0+255),b
 18920  001876  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 18921  001878  0E06               	movlw	high _macBuffer
 18922  00187A  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 18923  00187C  0E23               	movlw	low (_loRa+30)
 18924  00187E  6F62               	movwf	memcpy@s1& (0+255),b
 18925  001880  0E02               	movlw	high (_loRa+30)
 18926  001882  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 18927  001884  0E00               	movlw	0
 18928  001886  6F65               	movwf	(memcpy@n+1)& (0+255),b
 18929  001888  0E04               	movlw	4
 18930  00188A  6F64               	movwf	memcpy@n& (0+255),b
 18931  00188C  EC2F  F048         	call	_memcpy	;wreg free
 18932                           
 18933                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 18934  001890  0100               	movlb	0	; () banked
 18935  001892  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 18936  001894  0F04               	addlw	4
 18937  001896  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;lorawan.c: 1699: fCtrl.value = 0;
 18941  001898  0E00               	movlw	0
 18942  00189A  6FD1               	movwf	AssemblePacket@fCtrl& (0+255),b
 18943                           
 18944                           ; BSR set to: 0
 18945                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 18946  00189C  0102               	movlb	2	; () banked
 18947  00189E  AD07               	btfss	(_loRa+2)& (0+255),6,b
 18948  0018A0  D046               	goto	l2028
 18949                           
 18950                           ; BSR set to: 2
 18951                           ;lorawan.c: 1702: {;lorawan.c: 1703: fCtrl.adr = 1;
 18952  0018A2  0100               	movlb	0	; () banked
 18953  0018A4  8FD1               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 18954                           
 18955                           ; BSR set to: 0
 18956                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 18957  0018A6  0102               	movlb	2	; () banked
 18958  0018A8  51E4               	movf	(_loRa+223)& (0+255),w,b
 18959  0018AA  5DF0               	subwf	(_loRa+235)& (0+255),w,b
 18960  0018AC  B0D8               	btfsc	status,0,c
 18961  0018AE  D03D               	goto	L20
 18962                           
 18963                           ; BSR set to: 2
 18964                           ;lorawan.c: 1705: {;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 18965  0018B0  0100               	movlb	0	; () banked
 18966  0018B2  8DD1               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 18967                           
 18968                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 18969  0018B4  0102               	movlb	2	; () banked
 18970  0018B6  8905               	bsf	_loRa& (0+255),4,b
 18971                           
 18972                           ; BSR set to: 2
 18973                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 18974  0018B8  4BD5               	infsnz	(_loRa+208)& (0+255),f,b
 18975  0018BA  2BD6               	incf	(_loRa+209)& (0+255),f,b
 18976                           
 18977                           ; BSR set to: 2
 18978                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 18979  0018BC  51A7               	movf	(_loRa+162)& (0+255),w,b
 18980  0018BE  0100               	movlb	0	; () banked
 18981  0018C0  6FCD               	movwf	??_AssemblePacket& (0+255),b
 18982  0018C2  6BCE               	clrf	(??_AssemblePacket+1)& (0+255),b
 18983  0018C4  0102               	movlb	2	; () banked
 18984  0018C6  51D5               	movf	(_loRa+208)& (0+255),w,b
 18985  0018C8  0100               	movlb	0	; () banked
 18986  0018CA  19CD               	xorwf	??_AssemblePacket& (0+255),w,b
 18987  0018CC  E10B               	bnz	l19728
 18988  0018CE  0102               	movlb	2	; () banked
 18989  0018D0  51D6               	movf	(_loRa+209)& (0+255),w,b
 18990  0018D2  0100               	movlb	0	; () banked
 18991  0018D4  19CE               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 18992  0018D6  A4D8               	btfss	status,2,c
 18993  0018D8  D005               	goto	l19728
 18994                           
 18995                           ; BSR set to: 0
 18996                           ;lorawan.c: 1711: {;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 18997  0018DA  0E00               	movlw	0
 18998  0018DC  0102               	movlb	2	; () banked
 18999  0018DE  6FF3               	movwf	(_loRa+238)& (0+255),b
 19000  0018E0                     l19724:
 19001                           
 19002                           ; BSR set to: 2
 19003                           ;lorawan.c: 1713: fCtrl.adrAckReq = 0;
 19004  0018E0  0100               	movlb	0	; () banked
 19005  0018E2  D022               	goto	l2029
 19006  0018E4                     l19728:
 19007                           
 19008                           ; BSR set to: 0
 19009                           ;lorawan.c: 1716: else;lorawan.c: 1717: {;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.pro
      +                          tocolParameters.adrAckLimit)
 19010  0018E4  0102               	movlb	2	; () banked
 19011  0018E6  51A7               	movf	(_loRa+162)& (0+255),w,b
 19012  0018E8  0100               	movlb	0	; () banked
 19013  0018EA  6FCD               	movwf	??_AssemblePacket& (0+255),b
 19014  0018EC  6BCE               	clrf	(??_AssemblePacket+1)& (0+255),b
 19015  0018EE  0102               	movlb	2	; () banked
 19016  0018F0  51D5               	movf	(_loRa+208)& (0+255),w,b
 19017  0018F2  0100               	movlb	0	; () banked
 19018  0018F4  5DCD               	subwf	??_AssemblePacket& (0+255),w,b
 19019  0018F6  0102               	movlb	2	; () banked
 19020  0018F8  51D6               	movf	(_loRa+209)& (0+255),w,b
 19021  0018FA  0100               	movlb	0	; () banked
 19022  0018FC  59CE               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 19023  0018FE  B0D8               	btfsc	status,0,c
 19024  001900  D013               	goto	l2029
 19025                           
 19026                           ; BSR set to: 0
 19027                           ;lorawan.c: 1719: {;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 19028  001902  0102               	movlb	2	; () banked
 19029  001904  2BF3               	incf	(_loRa+238)& (0+255),f,b
 19030                           
 19031                           ; BSR set to: 2
 19032                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 19033  001906  51F3               	movf	(_loRa+238)& (0+255),w,b
 19034  001908  5DA8               	subwf	(_loRa+163)& (0+255),w,b
 19035  00190A  B0D8               	btfsc	status,0,c
 19036  00190C  D010               	goto	l2028
 19037                           
 19038                           ; BSR set to: 2
 19039                           ;lorawan.c: 1725: {;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 19040  00190E  0E00               	movlw	0
 19041  001910  6FF3               	movwf	(_loRa+238)& (0+255),b
 19042                           
 19043                           ; BSR set to: 2
 19044                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 19045  001912  ECFF  F03C         	call	_FindSmallestDataRate	;wreg free
 19046  001916  0900               	iorlw	0
 19047  001918  A4D8               	btfss	status,2,c
 19048  00191A  D009               	goto	l2028
 19049                           
 19050                           ;lorawan.c: 1729: {;lorawan.c: 1731: loRa.adrAckCnt = 0;
 19051  00191C  0E00               	movlw	0
 19052  00191E  0102               	movlb	2	; () banked
 19053  001920  6FD6               	movwf	(_loRa+209)& (0+255),b
 19054  001922  0E00               	movlw	0
 19055  001924  6FD5               	movwf	(_loRa+208)& (0+255),b
 19056  001926  D7DC               	goto	l19724
 19057  001928                     l2029:
 19058                           
 19059                           ; BSR set to: 0
 19060                           ;lorawan.c: 1737: else;lorawan.c: 1738: {;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 19061  001928  9DD1               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 19062  00192A                     L20:
 19063                           
 19064                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 19065  00192A  0102               	movlb	2	; () banked
 19066  00192C  9905               	bcf	_loRa& (0+255),4,b
 19067  00192E                     l2028:
 19068                           
 19069                           ;lorawan.c: 1747: };lorawan.c: 1748: };lorawan.c: 1750: if (loRa.lorawanMacStatus.ackReq
      +                          uiredFromNextUplinkMessage == 1)
 19070                           
 19071                           ;lorawan.c: 1741: };lorawan.c: 1742: };lorawan.c: 1743: }
 19072  00192E  0102               	movlb	2	; () banked
 19073  001930  A305               	btfss	_loRa& (0+255),1,b
 19074  001932  D004               	goto	l2034
 19075                           
 19076                           ; BSR set to: 2
 19077                           ;lorawan.c: 1751: {;lorawan.c: 1752: fCtrl.ack = 1;
 19078  001934  0100               	movlb	0	; () banked
 19079  001936  8BD1               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 19080                           
 19081                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 19082  001938  0102               	movlb	2	; () banked
 19083  00193A  9305               	bcf	_loRa& (0+255),1,b
 19084  00193C                     l2034:
 19085                           
 19086                           ; BSR set to: 2
 19087                           ;lorawan.c: 1754: };lorawan.c: 1756: fCtrl.fPending = 0;
 19088  00193C  0100               	movlb	0	; () banked
 19089  00193E  99D1               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 19090                           
 19091                           ; BSR set to: 0
 19092                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 19093  001940  0102               	movlb	2	; () banked
 19094  001942  51AC               	movf	(_loRa+167)& (0+255),w,b
 19095  001944  B4D8               	btfsc	status,2,c
 19096  001946  D005               	goto	u21450
 19097                           
 19098                           ; BSR set to: 2
 19099  001948  0100               	movlb	0	; () banked
 19100  00194A  51CB               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19101  00194C  11CC               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19102  00194E  A4D8               	btfss	status,2,c
 19103  001950  D004               	goto	l19752
 19104  001952                     u21450:
 19105                           
 19106                           ;lorawan.c: 1759: {;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 19107  001952  0EF0               	movlw	-16
 19108  001954  0100               	movlb	0	; () banked
 19109  001956  17D1               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 19110                           
 19111                           ;lorawan.c: 1761: }
 19112  001958  D009               	goto	l19754
 19113  00195A                     l19752:
 19114                           
 19115                           ; BSR set to: 0
 19116                           ;lorawan.c: 1763: else;lorawan.c: 1764: {;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLe
      +                          ngth();
 19117  00195A  EC73  F03B         	call	_CountfOptsLength	;wreg free
 19118  00195E  0100               	movlb	0	; () banked
 19119  001960  6FCD               	movwf	??_AssemblePacket& (0+255),b
 19120  001962  51D1               	movf	AssemblePacket@fCtrl& (0+255),w,b
 19121  001964  19CD               	xorwf	??_AssemblePacket& (0+255),w,b
 19122  001966  0BF0               	andlw	-16
 19123  001968  19CD               	xorwf	??_AssemblePacket& (0+255),w,b
 19124  00196A  6FD1               	movwf	AssemblePacket@fCtrl& (0+255),b
 19125  00196C                     l19754:
 19126                           
 19127                           ; BSR set to: 0
 19128                           ;lorawan.c: 1766: };lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 19129  00196C  0EB8               	movlw	low _macBuffer
 19130  00196E  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19131  001970  6ED9               	movwf	fsr2l,c
 19132  001972  6ADA               	clrf	fsr2h,c
 19133  001974  0E06               	movlw	high _macBuffer
 19134  001976  22DA               	addwfc	fsr2h,f,c
 19135  001978  C0D1  FFDF         	movff	AssemblePacket@fCtrl,indf2
 19136                           
 19137                           ; BSR set to: 0
 19138  00197C  2BD3               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19139                           
 19140                           ; BSR set to: 0
 19141                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 19142  00197E  0EB8               	movlw	low _macBuffer
 19143  001980  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19144  001982  6F60               	movwf	memcpy@d1& (0+255),b
 19145  001984  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19146  001986  0E06               	movlw	high _macBuffer
 19147  001988  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19148  00198A  0E0B               	movlw	low (_loRa+6)
 19149  00198C  6F62               	movwf	memcpy@s1& (0+255),b
 19150  00198E  0E02               	movlw	high (_loRa+6)
 19151  001990  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19152  001992  0E00               	movlw	0
 19153  001994  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19154  001996  0E02               	movlw	2
 19155  001998  6F64               	movwf	memcpy@n& (0+255),b
 19156  00199A  EC2F  F048         	call	_memcpy	;wreg free
 19157                           
 19158                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 19159  00199E  0100               	movlb	0	; () banked
 19160  0019A0  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19161  0019A2  0F02               	addlw	2
 19162  0019A4  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19163                           
 19164                           ; BSR set to: 0
 19165                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 19166  0019A6  0102               	movlb	2	; () banked
 19167  0019A8  51AC               	movf	(_loRa+167)& (0+255),w,b
 19168  0019AA  B4D8               	btfsc	status,2,c
 19169  0019AC  D011               	goto	l19768
 19170                           
 19171                           ; BSR set to: 2
 19172  0019AE  0100               	movlb	0	; () banked
 19173  0019B0  51CB               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19174  0019B2  11CC               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19175  0019B4  B4D8               	btfsc	status,2,c
 19176  0019B6  D00C               	goto	l19768
 19177                           
 19178                           ; BSR set to: 0
 19179                           ;lorawan.c: 1774: {;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex
      +                          , 1);
 19180  0019B8  0EB8               	movlw	low _macBuffer
 19181  0019BA  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19182  0019BC  0E06               	movlw	high _macBuffer
 19183  0019BE  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19184  0019C0  0ED3               	movlw	low AssemblePacket@bufferIndex
 19185  0019C2  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19186  0019C4  0E00               	movlw	high AssemblePacket@bufferIndex
 19187  0019C6  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19188  0019C8  0E01               	movlw	1
 19189  0019CA  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19190  0019CC  EC9E  F012         	call	_IncludeMacCommandsResponse	;wreg free
 19191  0019D0                     l19768:
 19192                           
 19193                           ;lorawan.c: 1776: };lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 19194  0019D0  0EB8               	movlw	low _macBuffer
 19195  0019D2  0100               	movlb	0	; () banked
 19196  0019D4  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19197  0019D6  6ED9               	movwf	fsr2l,c
 19198  0019D8  6ADA               	clrf	fsr2h,c
 19199  0019DA  0E06               	movlw	high _macBuffer
 19200  0019DC  22DA               	addwfc	fsr2h,f,c
 19201  0019DE  C0C8  FFDF         	movff	AssemblePacket@port,indf2
 19202                           
 19203                           ; BSR set to: 0
 19204  0019E2  2BD3               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;lorawan.c: 1780: if (bufferLength != 0)
 19208  0019E4  51CB               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19209  0019E6  11CC               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19210  0019E8  B4D8               	btfsc	status,2,c
 19211  0019EA  D033               	goto	l19780
 19212                           
 19213                           ; BSR set to: 0
 19214                           ;lorawan.c: 1781: {;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLeng
      +                          th);
 19215  0019EC  0EB8               	movlw	low _macBuffer
 19216  0019EE  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19217  0019F0  6F60               	movwf	memcpy@d1& (0+255),b
 19218  0019F2  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19219  0019F4  0E06               	movlw	high _macBuffer
 19220  0019F6  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19221  0019F8  C0C9  F062         	movff	AssemblePacket@buffer,memcpy@s1
 19222  0019FC  C0CA  F063         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 19223  001A00  C0CB  F064         	movff	AssemblePacket@bufferLength,memcpy@n
 19224  001A04  C0CC  F065         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 19225  001A08  EC2F  F048         	call	_memcpy	;wreg free
 19226                           
 19227                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 19228  001A0C  C0C9  F092         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 19229  001A10  C0CA  F093         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 19230  001A14  C0CB  F094         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 19231  001A18  0E00               	movlw	0
 19232  001A1A  0100               	movlb	0	; () banked
 19233  001A1C  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 19234  001A1E  C20B  F096         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19235  001A22  C20C  F097         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19236  001A26  C20D  F098         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19237  001A2A  C20E  F099         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19238  001A2E  0E37               	movlw	low (_loRa+50)
 19239  001A30  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 19240  001A32  0E02               	movlw	high (_loRa+50)
 19241  001A34  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19242  001A36  C0D3  F09C         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19243  001A3A  0EB8               	movlw	low _macBuffer
 19244  001A3C  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19245  001A3E  0E06               	movlw	high _macBuffer
 19246  001A40  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19247  001A42  0E00               	movlw	0
 19248  001A44  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19249  001A46  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 19250                           
 19251                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 19252  001A4A  0100               	movlb	0	; () banked
 19253  001A4C  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19254  001A4E  25CB               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 19255  001A50  D033               	goto	L19
 19256  001A52                     l19780:
 19257                           
 19258                           ; BSR set to: 0
 19259                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 19260  001A52  0102               	movlb	2	; () banked
 19261  001A54  51AC               	movf	(_loRa+167)& (0+255),w,b
 19262  001A56  B4D8               	btfsc	status,2,c
 19263  001A58  D030               	goto	l19786
 19264                           
 19265                           ; BSR set to: 2
 19266                           ;lorawan.c: 1787: {;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx
      +                          , 0 );
 19267  001A5A  0EC7               	movlw	low _radioBuffer
 19268  001A5C  0100               	movlb	0	; () banked
 19269  001A5E  6F60               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19270  001A60  0E07               	movlw	high _radioBuffer
 19271  001A62  6F61               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19272  001A64  0ED2               	movlw	low AssemblePacket@macCmdIdx
 19273  001A66  6F62               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19274  001A68  0E00               	movlw	high AssemblePacket@macCmdIdx
 19275  001A6A  6F63               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 19276  001A6C  0E00               	movlw	0
 19277  001A6E  6F64               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19278  001A70  EC9E  F012         	call	_IncludeMacCommandsResponse	;wreg free
 19279                           
 19280                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 19281  001A74  0EC7               	movlw	low _radioBuffer
 19282  001A76  0100               	movlb	0	; () banked
 19283  001A78  6F92               	movwf	EncryptFRMPayload@buffer& (0+255),b
 19284  001A7A  0E07               	movlw	high _radioBuffer
 19285  001A7C  6F93               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 19286  001A7E  C0D2  F094         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 19287  001A82  0E00               	movlw	0
 19288  001A84  6F95               	movwf	EncryptFRMPayload@dir& (0+255),b
 19289  001A86  C20B  F096         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19290  001A8A  C20C  F097         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19291  001A8E  C20D  F098         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19292  001A92  C20E  F099         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19293  001A96  0E27               	movlw	low (_loRa+34)
 19294  001A98  6F9A               	movwf	EncryptFRMPayload@key& (0+255),b
 19295  001A9A  0E02               	movlw	high (_loRa+34)
 19296  001A9C  6F9B               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19297  001A9E  C0D3  F09C         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19298  001AA2  0EB8               	movlw	low _macBuffer
 19299  001AA4  6F9D               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19300  001AA6  0E06               	movlw	high _macBuffer
 19301  001AA8  6F9E               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19302  001AAA  0E00               	movlw	0
 19303  001AAC  6F9F               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 19304  001AAE  EC11  F027         	call	_EncryptFRMPayload	;wreg free
 19305                           
 19306                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 19307  001AB2  0100               	movlb	0	; () banked
 19308  001AB4  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19309  001AB6  25D2               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 19310  001AB8                     L19:
 19311  001AB8  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19312  001ABA                     l19786:
 19313                           
 19314                           ;lorawan.c: 1793: };lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, buff
      +                          erIndex - 16, 0x49, 0);
 19315  001ABA  C20B  F06B         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 19316  001ABE  C20C  F06C         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 19317  001AC2  C20D  F06D         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 19318  001AC6  C20E  F06E         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 19319  001ACA  0100               	movlb	0	; () banked
 19320  001ACC  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19321  001ACE  0FF0               	addlw	240
 19322  001AD0  6F6F               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 19323  001AD2  0E49               	movlw	73
 19324  001AD4  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19325  001AD6  0E00               	movlw	0
 19326  001AD8  6F71               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 19327  001ADA  0E00               	movlw	0
 19328  001ADC  EC0A  F03B         	call	_AssembleEncryptionBlock
 19329                           
 19330                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 19331  001AE0  0EB8               	movlw	low _macBuffer
 19332  001AE2  0100               	movlb	0	; () banked
 19333  001AE4  6F60               	movwf	memcpy@d1& (0+255),b
 19334  001AE6  0E06               	movlw	high _macBuffer
 19335  001AE8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 19336  001AEA  0E5F               	movlw	low _aesBuffer
 19337  001AEC  6F62               	movwf	memcpy@s1& (0+255),b
 19338  001AEE  0E01               	movlw	high _aesBuffer
 19339  001AF0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19340  001AF2  0E00               	movlw	0
 19341  001AF4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19342  001AF6  0E10               	movlw	16
 19343  001AF8  6F64               	movwf	memcpy@n& (0+255),b
 19344  001AFA  EC2F  F048         	call	_memcpy	;wreg free
 19345                           
 19346                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 19347  001AFE  0E27               	movlw	low (_loRa+34)
 19348  001B00  0100               	movlb	0	; () banked
 19349  001B02  6FBA               	movwf	AESCmac@key& (0+255),b
 19350  001B04  0E02               	movlw	high (_loRa+34)
 19351  001B06  6FBB               	movwf	(AESCmac@key+1)& (0+255),b
 19352  001B08  0E5F               	movlw	low _aesBuffer
 19353  001B0A  6FBC               	movwf	AESCmac@output& (0+255),b
 19354  001B0C  0E01               	movlw	high _aesBuffer
 19355  001B0E  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 19356  001B10  0EB8               	movlw	low _macBuffer
 19357  001B12  6FBE               	movwf	AESCmac@input& (0+255),b
 19358  001B14  0E06               	movlw	high _macBuffer
 19359  001B16  6FBF               	movwf	(AESCmac@input+1)& (0+255),b
 19360  001B18  C0D3  F0C0         	movff	AssemblePacket@bufferIndex,AESCmac@size
 19361  001B1C  ECAD  F00D         	call	_AESCmac	;wreg free
 19362                           
 19363                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 19364  001B20  0EB8               	movlw	low _macBuffer
 19365  001B22  0100               	movlb	0	; () banked
 19366  001B24  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19367  001B26  6F60               	movwf	memcpy@d1& (0+255),b
 19368  001B28  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 19369  001B2A  0E06               	movlw	high _macBuffer
 19370  001B2C  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19371  001B2E  0E5F               	movlw	low _aesBuffer
 19372  001B30  6F62               	movwf	memcpy@s1& (0+255),b
 19373  001B32  0E01               	movlw	high _aesBuffer
 19374  001B34  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 19375  001B36  0E00               	movlw	0
 19376  001B38  6F65               	movwf	(memcpy@n+1)& (0+255),b
 19377  001B3A  0E04               	movlw	4
 19378  001B3C  6F64               	movwf	memcpy@n& (0+255),b
 19379  001B3E  EC2F  F048         	call	_memcpy	;wreg free
 19380                           
 19381                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 19382  001B42  0100               	movlb	0	; () banked
 19383  001B44  51D3               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19384  001B46  0F04               	addlw	4
 19385  001B48  6FD3               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19386                           
 19387                           ; BSR set to: 0
 19388                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 19389  001B4A  0EF0               	movlw	240
 19390  001B4C  25D3               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19391  001B4E  0102               	movlb	2	; () banked
 19392  001B50  6FD9               	movwf	(_loRa+212)& (0+255),b
 19393  001B52  6BDA               	clrf	(_loRa+213)& (0+255),b
 19394  001B54  0EFF               	movlw	255
 19395  001B56  23DA               	addwfc	(_loRa+213)& (0+255),f,b
 19396                           
 19397                           ; BSR set to: 2
 19398  001B58  0012               	return		;funcret
 19399  001B5A                     __end_of_AssemblePacket:
 19400                           	opt callstack 0
 19401                           
 19402 ;; *************** function _IncludeMacCommandsResponse *****************
 19403 ;; Defined at:
 19404 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19405 ;; Parameters:    Size  Location     Type
 19406 ;;  macBuffer       2    0[BANK0 ] PTR unsigned char 
 19407 ;;		 -> macBuffer(271), radioBuffer(271), 
 19408 ;;  pBufferIndex    2    2[BANK0 ] PTR unsigned char 
 19409 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 19410 ;;  bIncludeInFo    1    4[BANK0 ] unsigned char 
 19411 ;; Auto vars:     Size  Location     Type
 19412 ;;  bufferIndex     1   13[BANK0 ] unsigned char 
 19413 ;;  i               1   12[BANK0 ] unsigned char 
 19414 ;; Return value:  Size  Location     Type
 19415 ;;                  1    wreg      void 
 19416 ;; Registers used:
 19417 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19418 ;; Tracked objects:
 19419 ;;		On entry : 0/0
 19420 ;;		On exit  : 0/0
 19421 ;;		Unchanged: 0/0
 19422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19423 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19425 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19426 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19427 ;;Total ram usage:       14 bytes
 19428 ;; Hardware stack levels used:    1
 19429 ;; Hardware stack levels required when called:    8
 19430 ;; This function calls:
 19431 ;;		_RADIO_GetPacketSnr
 19432 ;; This function is called by:
 19433 ;;		_AssemblePacket
 19434 ;; This function uses a non-reentrant model
 19435 ;;
 19436                           
 19437                           	psect	text87
 19438  00253C                     __ptext87:
 19439                           	opt callstack 0
 19440  00253C                     _IncludeMacCommandsResponse:
 19441                           	opt callstack 18
 19442                           
 19443                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 19444                           
 19445                           ; BSR set to: 2
 19446                           ;incstack = 0
 19447  00253C  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19448  002540  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19449  002544  50DF               	movf	indf2,w,c
 19450  002546  0100               	movlb	0	; () banked
 19451  002548  6F6D               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 19452                           
 19453                           ; BSR set to: 0
 19454                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 19455  00254A  0E00               	movlw	0
 19456  00254C  6F6C               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 19457  00254E  D182               	goto	l19372
 19458  002550                     l19274:
 19459                           
 19460                           ; BSR set to: 0
 19461                           ;lorawan.c: 1851: {;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receiv
      +                          edCid != 0xFF))
 19462  002550  5164               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 19463  002552  B4D8               	btfsc	status,2,c
 19464  002554  D160               	goto	l19368
 19465                           
 19466                           ; BSR set to: 0
 19467  002556  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19468  002558  0D02               	mullw	2
 19469  00255A  0EAD               	movlw	low (_loRa+168)
 19470  00255C  24F3               	addwf	prodl,w,c
 19471  00255E  6ED9               	movwf	fsr2l,c
 19472  002560  0E02               	movlw	high (_loRa+168)
 19473  002562  20F4               	addwfc	prodh,w,c
 19474  002564  6EDA               	movwf	fsr2h,c
 19475  002566  28DE               	incf	postinc2,w,c
 19476  002568  B4D8               	btfsc	status,2,c
 19477  00256A  D155               	goto	l19368
 19478                           
 19479                           ; BSR set to: 0
 19480                           ;lorawan.c: 1853: {;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdRep
      +                          lyLen[loRa.macCommands[i].receivedCid - 2]) > 0x0F)
 19481  00256C  0EFE               	movlw	254
 19482  00256E  6F65               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19483  002570  0EFF               	movlw	255
 19484  002572  6F66               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19485  002574  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19486  002576  0D02               	mullw	2
 19487  002578  0EAD               	movlw	low (_loRa+168)
 19488  00257A  24F3               	addwf	prodl,w,c
 19489  00257C  6ED9               	movwf	fsr2l,c
 19490  00257E  0E02               	movlw	high (_loRa+168)
 19491  002580  20F4               	addwfc	prodh,w,c
 19492  002582  6EDA               	movwf	fsr2h,c
 19493  002584  50DF               	movf	indf2,w,c
 19494  002586  6F67               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 19495  002588  6B68               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 19496  00258A  5165               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 19497  00258C  2767               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 19498  00258E  5166               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19499  002590  2368               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 19500  002592  0E27               	movlw	low _macEndDevCmdReplyLen
 19501  002594  2567               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 19502  002596  6EF6               	movwf	tblptrl,c
 19503  002598  0EFF               	movlw	high _macEndDevCmdReplyLen
 19504  00259A  2168               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 19505  00259C  6EF7               	movwf	tblptrh,c
 19506  00259E                     	if	1	;There are 3 active tblptr bytes
 19507  00259E  6AF8               	clrf	tblptru,c
 19508  0025A0  0E00               	movlw	low (__mediumconst shr (0+16))
 19509  0025A2  22F8               	addwfc	tblptru,f,c
 19510  0025A4                     	endif
 19511  0025A4  0008               	tblrd		*
 19512  0025A6  50F5               	movf	tablat,w,c
 19513  0025A8  C06D  F069         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 19514  0025AC  6B6A               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 19515  0025AE  2769               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19516  0025B0  0E00               	movlw	0
 19517  0025B2  236A               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19518  0025B4  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19519  0025B8  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19520  0025BC  50DF               	movf	indf2,w,c
 19521  0025BE  6F6B               	movwf	(??_IncludeMacCommandsResponse+6)& (0+255),b
 19522  0025C0  516B               	movf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 19523  0025C2  5F69               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19524  0025C4  0E00               	movlw	0
 19525  0025C6  5B6A               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19526  0025C8  BF6A               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 19527  0025CA  D125               	goto	l19368
 19528  0025CC  516A               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 19529  0025CE  E105               	bnz	u20790
 19530  0025D0  0E10               	movlw	16
 19531  0025D2  5D69               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 19532  0025D4  B0D8               	btfsc	status,0,c
 19533  0025D6  D144               	goto	u20900
 19534  0025D8  D11E               	goto	l19368
 19535  0025DA                     u20790:
 19536  0025DA  D142               	goto	u20900
 19537  0025DC                     l19282:
 19538                           
 19539                           ; BSR set to: 0
 19540                           ;lorawan.c: 1862: {;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 19541  0025DC  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19542  0025DE  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19543  0025E0  6ED9               	movwf	fsr2l,c
 19544  0025E2  0E00               	movlw	0
 19545  0025E4  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19546  0025E6  6EDA               	movwf	fsr2h,c
 19547  0025E8  0E03               	movlw	3
 19548  0025EA  6EDF               	movwf	indf2,c
 19549                           
 19550                           ; BSR set to: 0
 19551  0025EC  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19552                           
 19553                           ; BSR set to: 0
 19554                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 19555  0025EE  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19556  0025F0  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19557  0025F2  6ED9               	movwf	fsr2l,c
 19558  0025F4  0E00               	movlw	0
 19559  0025F6  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19560  0025F8  6EDA               	movwf	fsr2h,c
 19561  0025FA  0E00               	movlw	0
 19562  0025FC  6EDF               	movwf	indf2,c
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 19566  0025FE  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19567  002600  0D02               	mullw	2
 19568  002602  0EAE               	movlw	low (_loRa+169)
 19569  002604  24F3               	addwf	prodl,w,c
 19570  002606  6ED9               	movwf	fsr2l,c
 19571  002608  0E02               	movlw	high (_loRa+169)
 19572  00260A  20F4               	addwfc	prodh,w,c
 19573  00260C  6EDA               	movwf	fsr2h,c
 19574  00260E  0102               	movlb	2	; () banked
 19575  002610  A0DF               	btfss	indf2,0,c
 19576  002612  D009               	goto	l19292
 19577                           
 19578                           ; BSR set to: 2
 19579                           ;lorawan.c: 1866: {;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 19580  002614  0100               	movlb	0	; () banked
 19581  002616  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19582  002618  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19583  00261A  6ED9               	movwf	fsr2l,c
 19584  00261C  0E00               	movlw	0
 19585  00261E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19586  002620  6EDA               	movwf	fsr2h,c
 19587  002622  0E00               	movlw	0
 19588  002624  80DB               	bsf	plusw2,0,c
 19589  002626                     l19292:
 19590                           
 19591                           ;lorawan.c: 1868: };lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 19592  002626  0100               	movlb	0	; () banked
 19593  002628  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19594  00262A  0D02               	mullw	2
 19595  00262C  0EAE               	movlw	low (_loRa+169)
 19596  00262E  24F3               	addwf	prodl,w,c
 19597  002630  6ED9               	movwf	fsr2l,c
 19598  002632  0E02               	movlw	high (_loRa+169)
 19599  002634  20F4               	addwfc	prodh,w,c
 19600  002636  6EDA               	movwf	fsr2h,c
 19601  002638  0102               	movlb	2	; () banked
 19602  00263A  A2DF               	btfss	indf2,1,c
 19603  00263C  D009               	goto	l19296
 19604                           
 19605                           ; BSR set to: 2
 19606                           ;lorawan.c: 1871: {;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 19607  00263E  0100               	movlb	0	; () banked
 19608  002640  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19609  002642  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19610  002644  6ED9               	movwf	fsr2l,c
 19611  002646  0E00               	movlw	0
 19612  002648  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19613  00264A  6EDA               	movwf	fsr2h,c
 19614  00264C  0E00               	movlw	0
 19615  00264E  82DB               	bsf	plusw2,1,c
 19616  002650                     l19296:
 19617                           
 19618                           ;lorawan.c: 1873: };lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 19619  002650  0100               	movlb	0	; () banked
 19620  002652  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19621  002654  0D02               	mullw	2
 19622  002656  0EAE               	movlw	low (_loRa+169)
 19623  002658  24F3               	addwf	prodl,w,c
 19624  00265A  6ED9               	movwf	fsr2l,c
 19625  00265C  0E02               	movlw	high (_loRa+169)
 19626  00265E  20F4               	addwfc	prodh,w,c
 19627  002660  6EDA               	movwf	fsr2h,c
 19628  002662  0102               	movlb	2	; () banked
 19629  002664  A4DF               	btfss	indf2,2,c
 19630  002666  D009               	goto	l19300
 19631  002668                     u20820:
 19632                           
 19633                           ; BSR set to: 2
 19634                           ;lorawan.c: 1876: {;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 19635  002668  0100               	movlb	0	; () banked
 19636  00266A  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19637  00266C  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19638  00266E  6ED9               	movwf	fsr2l,c
 19639  002670  0E00               	movlw	0
 19640  002672  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19641  002674  6EDA               	movwf	fsr2h,c
 19642  002676  0E00               	movlw	0
 19643  002678  84DB               	bsf	plusw2,2,c
 19644  00267A                     l19300:
 19645                           
 19646                           ;lorawan.c: 1878: };lorawan.c: 1879: bufferIndex ++;
 19647  00267A  0100               	movlb	0	; () banked
 19648  00267C  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19649                           
 19650                           ;lorawan.c: 1880: };lorawan.c: 1881: break;
 19651  00267E  D0E9               	goto	l19370
 19652  002680                     l19302:
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;lorawan.c: 1884: {;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 19656  002680  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19657  002682  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19658  002684  6ED9               	movwf	fsr2l,c
 19659  002686  0E00               	movlw	0
 19660  002688  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19661  00268A  6EDA               	movwf	fsr2h,c
 19662  00268C  0E05               	movlw	5
 19663  00268E  6EDF               	movwf	indf2,c
 19664                           
 19665                           ; BSR set to: 0
 19666  002690  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19667                           
 19668                           ; BSR set to: 0
 19669                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 19670  002692  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19671  002694  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19672  002696  6ED9               	movwf	fsr2l,c
 19673  002698  0E00               	movlw	0
 19674  00269A  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19675  00269C  6EDA               	movwf	fsr2h,c
 19676  00269E  0E00               	movlw	0
 19677  0026A0  6EDF               	movwf	indf2,c
 19678                           
 19679                           ; BSR set to: 0
 19680                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 19681  0026A2  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19682  0026A4  0D02               	mullw	2
 19683  0026A6  0EAE               	movlw	low (_loRa+169)
 19684  0026A8  24F3               	addwf	prodl,w,c
 19685  0026AA  6ED9               	movwf	fsr2l,c
 19686  0026AC  0E02               	movlw	high (_loRa+169)
 19687  0026AE  20F4               	addwfc	prodh,w,c
 19688  0026B0  6EDA               	movwf	fsr2h,c
 19689  0026B2  0102               	movlb	2	; () banked
 19690  0026B4  A6DF               	btfss	indf2,3,c
 19691  0026B6  D009               	goto	l19312
 19692                           
 19693                           ; BSR set to: 2
 19694                           ;lorawan.c: 1888: {;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 19695  0026B8  0100               	movlb	0	; () banked
 19696  0026BA  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19697  0026BC  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19698  0026BE  6ED9               	movwf	fsr2l,c
 19699  0026C0  0E00               	movlw	0
 19700  0026C2  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19701  0026C4  6EDA               	movwf	fsr2h,c
 19702  0026C6  0E00               	movlw	0
 19703  0026C8  80DB               	bsf	plusw2,0,c
 19704  0026CA                     l19312:
 19705                           
 19706                           ;lorawan.c: 1890: };lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck ==
      +                           1)
 19707  0026CA  0100               	movlb	0	; () banked
 19708  0026CC  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19709  0026CE  0D02               	mullw	2
 19710  0026D0  0EAE               	movlw	low (_loRa+169)
 19711  0026D2  24F3               	addwf	prodl,w,c
 19712  0026D4  6ED9               	movwf	fsr2l,c
 19713  0026D6  0E02               	movlw	high (_loRa+169)
 19714  0026D8  20F4               	addwfc	prodh,w,c
 19715  0026DA  6EDA               	movwf	fsr2h,c
 19716  0026DC  0102               	movlb	2	; () banked
 19717  0026DE  A8DF               	btfss	indf2,4,c
 19718  0026E0  D009               	goto	l19316
 19719                           
 19720                           ; BSR set to: 2
 19721                           ;lorawan.c: 1893: {;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 19722  0026E2  0100               	movlb	0	; () banked
 19723  0026E4  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19724  0026E6  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19725  0026E8  6ED9               	movwf	fsr2l,c
 19726  0026EA  0E00               	movlw	0
 19727  0026EC  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19728  0026EE  6EDA               	movwf	fsr2h,c
 19729  0026F0  0E00               	movlw	0
 19730  0026F2  82DB               	bsf	plusw2,1,c
 19731  0026F4                     l19316:
 19732                           
 19733                           ;lorawan.c: 1895: };lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 19734  0026F4  0100               	movlb	0	; () banked
 19735  0026F6  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19736  0026F8  0D02               	mullw	2
 19737  0026FA  0EAE               	movlw	low (_loRa+169)
 19738  0026FC  24F3               	addwf	prodl,w,c
 19739  0026FE  6ED9               	movwf	fsr2l,c
 19740  002700  0E02               	movlw	high (_loRa+169)
 19741  002702  20F4               	addwfc	prodh,w,c
 19742  002704  6EDA               	movwf	fsr2h,c
 19743  002706  0102               	movlb	2	; () banked
 19744  002708  BADF               	btfsc	indf2,5,c
 19745  00270A  D7AE               	goto	u20820
 19746  00270C  D7B6               	goto	l19300
 19747  00270E                     l19322:
 19748                           
 19749                           ; BSR set to: 0
 19750                           ;lorawan.c: 1907: {;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 19751  00270E  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19752  002710  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19753  002712  6ED9               	movwf	fsr2l,c
 19754  002714  0E00               	movlw	0
 19755  002716  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19756  002718  6EDA               	movwf	fsr2h,c
 19757  00271A  0E06               	movlw	6
 19758  00271C  6EDF               	movwf	indf2,c
 19759                           
 19760                           ; BSR set to: 0
 19761  00271E  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19762                           
 19763                           ; BSR set to: 0
 19764                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 19765  002720  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19766  002722  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19767  002724  6ED9               	movwf	fsr2l,c
 19768  002726  0E00               	movlw	0
 19769  002728  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19770  00272A  6EDA               	movwf	fsr2h,c
 19771  00272C  C2E5  FFDF         	movff	_loRa+224,indf2
 19772  002730  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 19776  002732  EC87  F054         	call	_RADIO_GetPacketSnr	;wreg free
 19777  002736  0A80               	xorlw	128
 19778  002738  0FA0               	addlw	160
 19779  00273A  A0D8               	btfss	status,0,c
 19780  00273C  D006               	goto	u20870
 19781  00273E  EC87  F054         	call	_RADIO_GetPacketSnr	;wreg free
 19782  002742  0A80               	xorlw	128
 19783  002744  0F60               	addlw	-160
 19784  002746  A0D8               	btfss	status,0,c
 19785  002748  D009               	goto	l19336
 19786  00274A                     u20870:
 19787                           
 19788                           ;lorawan.c: 1911: {;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 19789  00274A  0100               	movlb	0	; () banked
 19790  00274C  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19791  00274E  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19792  002750  6ED9               	movwf	fsr2l,c
 19793  002752  0E00               	movlw	0
 19794  002754  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19795  002756  6EDA               	movwf	fsr2h,c
 19796  002758  0E20               	movlw	32
 19797  00275A  D00A               	goto	L21
 19798  00275C                     l19336:
 19799                           
 19800                           ;lorawan.c: 1914: else;lorawan.c: 1915: {;lorawan.c: 1916: macBuffer[bufferIndex++] = ((
      +                          uint8_t)RADIO_GetPacketSnr() & 0x3F);
 19801  00275C  0100               	movlb	0	; () banked
 19802  00275E  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19803  002760  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19804  002762  6ED9               	movwf	fsr2l,c
 19805  002764  0E00               	movlw	0
 19806  002766  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19807  002768  6EDA               	movwf	fsr2h,c
 19808  00276A  EC87  F054         	call	_RADIO_GetPacketSnr	;wreg free
 19809  00276E  0B3F               	andlw	63
 19810  002770                     L21:
 19811  002770  6EDF               	movwf	indf2,c
 19812  002772  D783               	goto	l19300
 19813  002774                     l19340:
 19814                           
 19815                           ; BSR set to: 0
 19816                           ;lorawan.c: 1922: {;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 19817  002774  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19818  002776  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19819  002778  6ED9               	movwf	fsr2l,c
 19820  00277A  0E00               	movlw	0
 19821  00277C  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19822  00277E  6EDA               	movwf	fsr2h,c
 19823  002780  0E07               	movlw	7
 19824  002782  6EDF               	movwf	indf2,c
 19825                           
 19826                           ; BSR set to: 0
 19827  002784  2B6D               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19828                           
 19829                           ; BSR set to: 0
 19830                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 19831  002786  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19832  002788  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19833  00278A  6ED9               	movwf	fsr2l,c
 19834  00278C  0E00               	movlw	0
 19835  00278E  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19836  002790  6EDA               	movwf	fsr2h,c
 19837  002792  0E00               	movlw	0
 19838  002794  6EDF               	movwf	indf2,c
 19839                           
 19840                           ; BSR set to: 0
 19841                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 19842  002796  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19843  002798  0D02               	mullw	2
 19844  00279A  0EAE               	movlw	low (_loRa+169)
 19845  00279C  24F3               	addwf	prodl,w,c
 19846  00279E  6ED9               	movwf	fsr2l,c
 19847  0027A0  0E02               	movlw	high (_loRa+169)
 19848  0027A2  20F4               	addwfc	prodh,w,c
 19849  0027A4  6EDA               	movwf	fsr2h,c
 19850  0027A6  0102               	movlb	2	; () banked
 19851  0027A8  AEDF               	btfss	indf2,7,c
 19852  0027AA  D009               	goto	l19350
 19853                           
 19854                           ; BSR set to: 2
 19855                           ;lorawan.c: 1926: {;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 19856  0027AC  0100               	movlb	0	; () banked
 19857  0027AE  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19858  0027B0  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19859  0027B2  6ED9               	movwf	fsr2l,c
 19860  0027B4  0E00               	movlw	0
 19861  0027B6  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19862  0027B8  6EDA               	movwf	fsr2h,c
 19863  0027BA  0E00               	movlw	0
 19864  0027BC  80DB               	bsf	plusw2,0,c
 19865  0027BE                     l19350:
 19866                           
 19867                           ;lorawan.c: 1928: };lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 19868  0027BE  0100               	movlb	0	; () banked
 19869  0027C0  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19870  0027C2  0D02               	mullw	2
 19871  0027C4  0EAE               	movlw	low (_loRa+169)
 19872  0027C6  24F3               	addwf	prodl,w,c
 19873  0027C8  6ED9               	movwf	fsr2l,c
 19874  0027CA  0E02               	movlw	high (_loRa+169)
 19875  0027CC  20F4               	addwfc	prodh,w,c
 19876  0027CE  6EDA               	movwf	fsr2h,c
 19877  0027D0  0102               	movlb	2	; () banked
 19878  0027D2  ACDF               	btfss	indf2,6,c
 19879  0027D4  D752               	goto	l19300
 19880                           
 19881                           ; BSR set to: 2
 19882                           ;lorawan.c: 1931: {;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 19883  0027D6  0100               	movlb	0	; () banked
 19884  0027D8  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19885  0027DA  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19886  0027DC  6ED9               	movwf	fsr2l,c
 19887  0027DE  0E00               	movlw	0
 19888  0027E0  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19889  0027E2  6EDA               	movwf	fsr2h,c
 19890  0027E4  0E00               	movlw	0
 19891  0027E6  82DB               	bsf	plusw2,1,c
 19892  0027E8  D748               	goto	l19300
 19893  0027EA                     l2076:
 19894                           
 19895                           ; BSR set to: 0
 19896                           ;lorawan.c: 1939: {;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 19897  0027EA  0102               	movlb	2	; () banked
 19898  0027EC  69E2               	setf	(_loRa+221)& (0+255),b
 19899                           
 19900                           ; BSR set to: 2
 19901                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 19902  0027EE  0E00               	movlw	0
 19903  0027F0  6FE3               	movwf	(_loRa+222)& (0+255),b
 19904  0027F2                     l19358:
 19905                           
 19906                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 19907  0027F2  0100               	movlb	0	; () banked
 19908  0027F4  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19909  0027F6  0D02               	mullw	2
 19910  0027F8  0EAD               	movlw	low (_loRa+168)
 19911  0027FA  24F3               	addwf	prodl,w,c
 19912  0027FC  6ED9               	movwf	fsr2l,c
 19913  0027FE  0E02               	movlw	high (_loRa+168)
 19914  002800  20F4               	addwfc	prodh,w,c
 19915  002802  6EDA               	movwf	fsr2h,c
 19916  002804  516D               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19917  002806  2560               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19918  002808  6EE9               	movwf	fsr0l,c
 19919  00280A  0E00               	movlw	0
 19920  00280C  2161               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19921  00280E  6EEA               	movwf	fsr0h,c
 19922  002810  CFDF FFEF          	movff	indf2,indf0
 19923  002814  D732               	goto	l19300
 19924  002816                     l19368:
 19925                           
 19926                           ; BSR set to: 0
 19927  002816  516C               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19928  002818  0D02               	mullw	2
 19929  00281A  0EAD               	movlw	low (_loRa+168)
 19930  00281C  24F3               	addwf	prodl,w,c
 19931  00281E  6ED9               	movwf	fsr2l,c
 19932  002820  0E02               	movlw	high (_loRa+168)
 19933  002822  20F4               	addwfc	prodh,w,c
 19934  002824  6EDA               	movwf	fsr2h,c
 19935  002826  50DF               	movf	indf2,w,c
 19936                           
 19937                           ; Switch size 1, requested type "simple"
 19938                           ; Number of cases is 7, Range of values is 2 to 8
 19939                           ; switch strategies available:
 19940                           ; Name         Instructions Cycles
 19941                           ; simple_byte           22    12 (average)
 19942                           ;	Chosen strategy is simple_byte
 19943  002828  0A02               	xorlw	2	; case 2
 19944  00282A  B4D8               	btfsc	status,2,c
 19945  00282C  D7DE               	goto	l2076
 19946  00282E  0A01               	xorlw	1	; case 3
 19947  002830  B4D8               	btfsc	status,2,c
 19948  002832  D6D4               	goto	l19282
 19949  002834  0A07               	xorlw	7	; case 4
 19950  002836  B4D8               	btfsc	status,2,c
 19951  002838  D7DC               	goto	l19358
 19952  00283A  0A01               	xorlw	1	; case 5
 19953  00283C  B4D8               	btfsc	status,2,c
 19954  00283E  D720               	goto	l19302
 19955  002840  0A03               	xorlw	3	; case 6
 19956  002842  B4D8               	btfsc	status,2,c
 19957  002844  D764               	goto	l19322
 19958  002846  0A01               	xorlw	1	; case 7
 19959  002848  B4D8               	btfsc	status,2,c
 19960  00284A  D794               	goto	l19340
 19961  00284C  0A0F               	xorlw	15	; case 8
 19962  00284E  B4D8               	btfsc	status,2,c
 19963  002850  D7D0               	goto	l19358
 19964  002852                     l19370:
 19965                           
 19966                           ; BSR set to: 0
 19967  002852  2B6C               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 19968  002854                     l19372:
 19969                           
 19970                           ; BSR set to: 0
 19971  002854  0102               	movlb	2	; () banked
 19972  002856  51AC               	movf	(_loRa+167)& (0+255),w,b
 19973  002858  0100               	movlb	0	; () banked
 19974  00285A  5D6C               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 19975  00285C  A0D8               	btfss	status,0,c
 19976  00285E  D678               	goto	l19274
 19977  002860                     u20900:
 19978                           
 19979                           ; BSR set to: 0
 19980                           ;lorawan.c: 1957: };lorawan.c: 1959: *pBufferIndex = bufferIndex;
 19981  002860  C062  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 19982  002864  C063  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 19983  002868  C06D  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 19984                           
 19985                           ; BSR set to: 0
 19986  00286C  0012               	return		;funcret
 19987  00286E                     __end_of_IncludeMacCommandsResponse:
 19988                           	opt callstack 0
 19989                           
 19990 ;; *************** function _RADIO_GetPacketSnr *****************
 19991 ;; Defined at:
 19992 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 19993 ;; Parameters:    Size  Location     Type
 19994 ;;		None
 19995 ;; Auto vars:     Size  Location     Type
 19996 ;;		None
 19997 ;; Return value:  Size  Location     Type
 19998 ;;                  1    wreg      char 
 19999 ;; Registers used:
 20000 ;;		wreg, status,2
 20001 ;; Tracked objects:
 20002 ;;		On entry : 0/0
 20003 ;;		On exit  : 0/0
 20004 ;;		Unchanged: 0/0
 20005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20010 ;;Total ram usage:        0 bytes
 20011 ;; Hardware stack levels used:    1
 20012 ;; Hardware stack levels required when called:    7
 20013 ;; This function calls:
 20014 ;;		Nothing
 20015 ;; This function is called by:
 20016 ;;		_IncludeMacCommandsResponse
 20017 ;; This function uses a non-reentrant model
 20018 ;;
 20019                           
 20020                           	psect	text88
 20021  00A90E                     __ptext88:
 20022                           	opt callstack 0
 20023  00A90E                     _RADIO_GetPacketSnr:
 20024                           	opt callstack 18
 20025                           
 20026                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 20027                           
 20028                           ; BSR set to: 0
 20029                           ;incstack = 0
 20030  00A90E  0101               	movlb	1	; () banked
 20031  00A910  515B               	movf	(_RadioConfiguration+50)& (0+255),w,b
 20032                           
 20033                           ; BSR set to: 1
 20034  00A912  0012               	return		;funcret
 20035  00A914                     __end_of_RADIO_GetPacketSnr:
 20036                           	opt callstack 0
 20037                           
 20038 ;; *************** function _FindSmallestDataRate *****************
 20039 ;; Defined at:
 20040 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20041 ;; Parameters:    Size  Location     Type
 20042 ;;		None
 20043 ;; Auto vars:     Size  Location     Type
 20044 ;;  dataRate        1    3[BANK0 ] unsigned char 
 20045 ;;  i               1    2[BANK0 ] unsigned char 
 20046 ;;  found           1    1[BANK0 ] unsigned char 
 20047 ;; Return value:  Size  Location     Type
 20048 ;;                  1    wreg      unsigned char 
 20049 ;; Registers used:
 20050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20051 ;; Tracked objects:
 20052 ;;		On entry : 0/0
 20053 ;;		On exit  : 0/0
 20054 ;;		Unchanged: 0/0
 20055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20057 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20059 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20060 ;;Total ram usage:        4 bytes
 20061 ;; Hardware stack levels used:    1
 20062 ;; Hardware stack levels required when called:    7
 20063 ;; This function calls:
 20064 ;;		Nothing
 20065 ;; This function is called by:
 20066 ;;		_AckRetransmissionCallback
 20067 ;;		_AssemblePacket
 20068 ;; This function uses a non-reentrant model
 20069 ;;
 20070                           
 20071                           	psect	text89
 20072  0079FE                     __ptext89:
 20073                           	opt callstack 0
 20074  0079FE                     _FindSmallestDataRate:
 20075                           	opt callstack 19
 20076                           
 20077                           ;lorawan.c: 1966: bool found = 0;
 20078                           
 20079                           ; BSR set to: 1
 20080                           ;incstack = 0
 20081  0079FE  0E00               	movlw	0
 20082  007A00  0100               	movlb	0	; () banked
 20083  007A02  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20084                           
 20085                           ; BSR set to: 0
 20086                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 20087  007A04  0102               	movlb	2	; () banked
 20088  007A06  51E4               	movf	(_loRa+223)& (0+255),w,b
 20089  007A08  5DF0               	subwf	(_loRa+235)& (0+255),w,b
 20090  007A0A  B0D8               	btfsc	status,0,c
 20091  007A0C  D056               	goto	l19200
 20092                           
 20093                           ; BSR set to: 2
 20094                           ;lorawan.c: 1969: {;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 20095  007A0E  05E4               	decf	(_loRa+223)& (0+255),w,b
 20096  007A10  0100               	movlb	0	; () banked
 20097  007A12  D044               	goto	L22
 20098  007A14                     l19172:
 20099                           
 20100                           ; BSR set to: 0
 20101                           ;lorawan.c: 1973: {;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 20102  007A14  0E00               	movlw	0
 20103  007A16  6F62               	movwf	FindSmallestDataRate@i& (0+255),b
 20104  007A18  D031               	goto	l19184
 20105  007A1A                     l19174:
 20106                           
 20107                           ; BSR set to: 0
 20108                           ;lorawan.c: 1975: {;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (da
      +                          taRate <= Channels[i].dataRange.max ) && ( Channels[i].status == 1 ) )
 20109  007A1A  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20110  007A1C  0D0E               	mullw	14
 20111  007A1E  0E19               	movlw	low (_Channels+5)
 20112  007A20  24F3               	addwf	prodl,w,c
 20113  007A22  6ED9               	movwf	fsr2l,c
 20114  007A24  0E04               	movlw	high (_Channels+5)
 20115  007A26  20F4               	addwfc	prodh,w,c
 20116  007A28  6EDA               	movwf	fsr2h,c
 20117  007A2A  0104               	movlb	4	; () banked
 20118  007A2C  50DF               	movf	223,w,c
 20119  007A2E  0B0F               	andlw	15
 20120  007A30  0100               	movlb	0	; () banked
 20121  007A32  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20122  007A34  5160               	movf	??_FindSmallestDataRate& (0+255),w,b
 20123  007A36  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20124  007A38  A0D8               	btfss	status,0,c
 20125  007A3A  D01F               	goto	l19182
 20126                           
 20127                           ; BSR set to: 0
 20128  007A3C  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20129  007A3E  0D0E               	mullw	14
 20130  007A40  0E19               	movlw	low (_Channels+5)
 20131  007A42  24F3               	addwf	prodl,w,c
 20132  007A44  6ED9               	movwf	fsr2l,c
 20133  007A46  0E04               	movlw	high (_Channels+5)
 20134  007A48  20F4               	addwfc	prodh,w,c
 20135  007A4A  6EDA               	movwf	fsr2h,c
 20136  007A4C  0104               	movlb	4	; () banked
 20137  007A4E  38DF               	swapf	223,w,c
 20138  007A50  0B0F               	andlw	15
 20139  007A52  0100               	movlb	0	; () banked
 20140  007A54  6F60               	movwf	??_FindSmallestDataRate& (0+255),b
 20141  007A56  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20142  007A58  5D60               	subwf	??_FindSmallestDataRate& (0+255),w,b
 20143  007A5A  A0D8               	btfss	status,0,c
 20144  007A5C  D00E               	goto	l19182
 20145                           
 20146                           ; BSR set to: 0
 20147  007A5E  5162               	movf	FindSmallestDataRate@i& (0+255),w,b
 20148  007A60  0D0E               	mullw	14
 20149  007A62  0E18               	movlw	low (_Channels+4)
 20150  007A64  24F3               	addwf	prodl,w,c
 20151  007A66  6ED9               	movwf	fsr2l,c
 20152  007A68  0E04               	movlw	high (_Channels+4)
 20153  007A6A  20F4               	addwfc	prodh,w,c
 20154  007A6C  6EDA               	movwf	fsr2h,c
 20155  007A6E  04DE               	decf	postinc2,w,c
 20156  007A70  A4D8               	btfss	status,2,c
 20157  007A72  D003               	goto	l19182
 20158                           
 20159                           ; BSR set to: 0
 20160                           ;lorawan.c: 1977: {;lorawan.c: 1978: found = 1;
 20161  007A74  0E01               	movlw	1
 20162  007A76  6F61               	movwf	FindSmallestDataRate@found& (0+255),b
 20163                           
 20164                           ;lorawan.c: 1979: break;
 20165  007A78  D007               	goto	u20630
 20166  007A7A                     l19182:
 20167                           
 20168                           ; BSR set to: 0
 20169  007A7A  2B62               	incf	FindSmallestDataRate@i& (0+255),f,b
 20170  007A7C                     l19184:
 20171                           
 20172                           ; BSR set to: 0
 20173  007A7C  0102               	movlb	2	; () banked
 20174  007A7E  51F2               	movf	(_loRa+237)& (0+255),w,b
 20175  007A80  0100               	movlb	0	; () banked
 20176  007A82  5D62               	subwf	FindSmallestDataRate@i& (0+255),w,b
 20177  007A84  A0D8               	btfss	status,0,c
 20178  007A86  D7C9               	goto	l19174
 20179  007A88                     u20630:
 20180                           
 20181                           ; BSR set to: 0
 20182                           ;lorawan.c: 1980: };lorawan.c: 1981: };lorawan.c: 1982: if ( (found == 0) && (dataRate >
      +                           loRa.minDataRate) )
 20183  007A88  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20184  007A8A  A4D8               	btfss	status,2,c
 20185  007A8C  D008               	goto	l19192
 20186                           
 20187                           ; BSR set to: 0
 20188  007A8E  5163               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20189  007A90  0102               	movlb	2	; () banked
 20190  007A92  5DF0               	subwf	(_loRa+235)& (0+255),w,b
 20191  007A94  B0D8               	btfsc	status,0,c
 20192  007A96  D003               	goto	l19192
 20193                           
 20194                           ; BSR set to: 2
 20195                           ;lorawan.c: 1983: {;lorawan.c: 1984: dataRate = dataRate - 1;
 20196  007A98  0100               	movlb	0	; () banked
 20197  007A9A  0563               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 20198  007A9C                     L22:
 20199  007A9C  6F63               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 20200  007A9E                     l19192:
 20201  007A9E  0100               	movlb	0	; () banked
 20202  007AA0  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20203  007AA2  A4D8               	btfss	status,2,c
 20204  007AA4  D006               	goto	u20670
 20205                           
 20206                           ; BSR set to: 0
 20207  007AA6  0102               	movlb	2	; () banked
 20208  007AA8  51F0               	movf	(_loRa+235)& (0+255),w,b
 20209  007AAA  0100               	movlb	0	; () banked
 20210  007AAC  5D63               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20211  007AAE  B0D8               	btfsc	status,0,c
 20212  007AB0  D7B1               	goto	l19172
 20213  007AB2                     u20670:
 20214                           
 20215                           ; BSR set to: 0
 20216                           ;lorawan.c: 1985: };lorawan.c: 1986: };lorawan.c: 1988: if (found == 1)
 20217  007AB2  0561               	decf	FindSmallestDataRate@found& (0+255),w,b
 20218  007AB4  B4D8               	btfsc	status,2,c
 20219                           
 20220                           ; BSR set to: 0
 20221                           ;lorawan.c: 1989: {;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 20222  007AB6  C063  F2E4         	movff	FindSmallestDataRate@dataRate,_loRa+223
 20223  007ABA                     l19200:
 20224                           
 20225                           ;lorawan.c: 1991: };lorawan.c: 1992: };lorawan.c: 1994: return found;
 20226  007ABA  0100               	movlb	0	; () banked
 20227  007ABC  5161               	movf	FindSmallestDataRate@found& (0+255),w,b
 20228                           
 20229                           ; BSR set to: 0
 20230  007ABE  0012               	return		;funcret
 20231  007AC0                     __end_of_FindSmallestDataRate:
 20232                           	opt callstack 0
 20233                           
 20234 ;; *************** function _EncryptFRMPayload *****************
 20235 ;; Defined at:
 20236 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20237 ;; Parameters:    Size  Location     Type
 20238 ;;  buffer          2   50[BANK0 ] PTR unsigned char 
 20239 ;;		 -> sensorsString(40), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 20240 ;;  bufferLength    1   52[BANK0 ] unsigned char 
 20241 ;;  dir             1   53[BANK0 ] unsigned char 
 20242 ;;  frameCounter    4   54[BANK0 ] unsigned long 
 20243 ;;  key             2   58[BANK0 ] PTR unsigned char 
 20244 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20245 ;;  macBufferInd    1   60[BANK0 ] unsigned char 
 20246 ;;  bufferToBeEn    2   61[BANK0 ] PTR unsigned char 
 20247 ;;		 -> macBuffer(271), radioBuffer(271), 
 20248 ;;  multicastSta    1   63[BANK0 ] unsigned char 
 20249 ;; Auto vars:     Size  Location     Type
 20250 ;;  j               1   71[BANK0 ] unsigned char 
 20251 ;;  i               1   70[BANK0 ] unsigned char 
 20252 ;;  k               1   69[BANK0 ] unsigned char 
 20253 ;; Return value:  Size  Location     Type
 20254 ;;                  1    wreg      void 
 20255 ;; Registers used:
 20256 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20257 ;; Tracked objects:
 20258 ;;		On entry : 0/0
 20259 ;;		On exit  : 0/0
 20260 ;;		Unchanged: 0/0
 20261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20262 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20263 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20264 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20265 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20266 ;;Total ram usage:       22 bytes
 20267 ;; Hardware stack levels used:    1
 20268 ;; Hardware stack levels required when called:   10
 20269 ;; This function calls:
 20270 ;;		_AESEncodeLoRa
 20271 ;;		_AssembleEncryptionBlock
 20272 ;;		___awdiv
 20273 ;; This function is called by:
 20274 ;;		_LORAWAN_RxDone
 20275 ;;		_AssemblePacket
 20276 ;; This function uses a non-reentrant model
 20277 ;;
 20278                           
 20279                           	psect	text90
 20280  004E22                     __ptext90:
 20281                           	opt callstack 0
 20282  004E22                     _EncryptFRMPayload:
 20283                           	opt callstack 16
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;incstack = 0
 20287  004E22  0E00               	movlw	0
 20288  004E24  0100               	movlb	0	; () banked
 20289  004E26  6FA6               	movwf	EncryptFRMPayload@i& (0+255),b
 20290  004E28  0E00               	movlw	0
 20291  004E2A  6FA7               	movwf	EncryptFRMPayload@j& (0+255),b
 20292                           
 20293                           ; BSR set to: 0
 20294                           ;lorawan.c: 2209: k = bufferLength / 16;
 20295  004E2C  C094  F060         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 20296  004E30  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 20297  004E32  0E00               	movlw	0
 20298  004E34  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 20299  004E36  0E10               	movlw	16
 20300  004E38  6F62               	movwf	___awdiv@divisor& (0+255),b
 20301  004E3A  EC11  F042         	call	___awdiv	;wreg free
 20302  004E3E  0100               	movlb	0	; () banked
 20303  004E40  5160               	movf	?___awdiv& (0+255),w,b
 20304  004E42  6FA5               	movwf	EncryptFRMPayload@k& (0+255),b
 20305                           
 20306                           ; BSR set to: 0
 20307                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 20308  004E44  0E01               	movlw	1
 20309  004E46  6FA6               	movwf	EncryptFRMPayload@i& (0+255),b
 20310  004E48  D054               	goto	l19236
 20311  004E4A                     l19218:
 20312                           
 20313                           ; BSR set to: 0
 20314                           ;lorawan.c: 2211: {;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01
      +                          , multicastStatus);
 20315  004E4A  C096  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20316  004E4E  C097  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20317  004E52  C098  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20318  004E56  C099  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20319  004E5A  C0A6  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20320  004E5E  0E01               	movlw	1
 20321  004E60  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20322  004E62  C09F  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20323  004E66  5195               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20324  004E68  EC0A  F03B         	call	_AssembleEncryptionBlock
 20325                           
 20326                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 20327  004E6C  0E5F               	movlw	low _aesBuffer
 20328  004E6E  0100               	movlb	0	; () banked
 20329  004E70  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 20330  004E72  0E01               	movlw	high _aesBuffer
 20331  004E74  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20332  004E76  C09A  F080         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20333  004E7A  C09B  F081         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20334  004E7E  EC5A  F04E         	call	_AESEncodeLoRa	;wreg free
 20335                           
 20336                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 20337  004E82  0E00               	movlw	0
 20338  004E84  0100               	movlb	0	; () banked
 20339  004E86  6FA7               	movwf	EncryptFRMPayload@j& (0+255),b
 20340  004E88                     l19226:
 20341                           
 20342                           ; BSR set to: 0
 20343                           ;lorawan.c: 2216: {;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j
      +                          ] ^ buffer[16*(i-1) + j];
 20344  004E88  519C               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20345  004E8A  259D               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20346  004E8C  6ED9               	movwf	fsr2l,c
 20347  004E8E  0E00               	movlw	0
 20348  004E90  219E               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20349  004E92  6EDA               	movwf	fsr2h,c
 20350  004E94  51A6               	movf	EncryptFRMPayload@i& (0+255),w,b
 20351  004E96  6FA0               	movwf	??_EncryptFRMPayload& (0+255),b
 20352  004E98  6BA1               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 20353  004E9A  3BA0               	swapf	??_EncryptFRMPayload& (0+255),f,b
 20354  004E9C  3BA1               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20355  004E9E  0EF0               	movlw	240
 20356  004EA0  17A1               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20357  004EA2  51A0               	movf	??_EncryptFRMPayload& (0+255),w,b
 20358  004EA4  0B0F               	andlw	15
 20359  004EA6  13A1               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20360  004EA8  0EF0               	movlw	240
 20361  004EAA  17A0               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20362  004EAC  C092  F0A2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 20363  004EB0  C093  F0A3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 20364  004EB4  51A0               	movf	??_EncryptFRMPayload& (0+255),w,b
 20365  004EB6  27A2               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20366  004EB8  51A1               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 20367  004EBA  23A3               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20368  004EBC  51A7               	movf	EncryptFRMPayload@j& (0+255),w,b
 20369  004EBE  27A2               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20370  004EC0  0E00               	movlw	0
 20371  004EC2  23A3               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20372  004EC4  0EF0               	movlw	240
 20373  004EC6  25A2               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20374  004EC8  6EE9               	movwf	fsr0l,c
 20375  004ECA  0EFF               	movlw	255
 20376  004ECC  21A3               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 20377  004ECE  6EEA               	movwf	fsr0h,c
 20378  004ED0  50EF               	movf	indf0,w,c
 20379  004ED2  6FA4               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 20380  004ED4  0E5F               	movlw	low _aesBuffer
 20381  004ED6  25A7               	addwf	EncryptFRMPayload@j& (0+255),w,b
 20382  004ED8  6EE9               	movwf	fsr0l,c
 20383  004EDA  6AEA               	clrf	fsr0h,c
 20384  004EDC  0E01               	movlw	high _aesBuffer
 20385  004EDE  22EA               	addwfc	fsr0h,f,c
 20386  004EE0  50EF               	movf	indf0,w,c
 20387  004EE2  19A4               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 20388  004EE4  6EDF               	movwf	indf2,c
 20389                           
 20390                           ; BSR set to: 0
 20391  004EE6  2B9C               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20392                           
 20393                           ; BSR set to: 0
 20394  004EE8  2BA7               	incf	EncryptFRMPayload@j& (0+255),f,b
 20395                           
 20396                           ; BSR set to: 0
 20397  004EEA  0E0F               	movlw	15
 20398  004EEC  65A7               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 20399  004EEE  D7CC               	goto	l19226
 20400                           
 20401                           ; BSR set to: 0
 20402  004EF0  2BA6               	incf	EncryptFRMPayload@i& (0+255),f,b
 20403  004EF2                     l19236:
 20404                           
 20405                           ; BSR set to: 0
 20406  004EF2  51A6               	movf	EncryptFRMPayload@i& (0+255),w,b
 20407  004EF4  5DA5               	subwf	EncryptFRMPayload@k& (0+255),w,b
 20408  004EF6  B0D8               	btfsc	status,0,c
 20409  004EF8  D7A8               	goto	l19218
 20410                           
 20411                           ; BSR set to: 0
 20412                           ;lorawan.c: 2218: };lorawan.c: 2219: };lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 20413  004EFA  C094  F0A0         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20414  004EFE  0E0F               	movlw	15
 20415  004F00  17A0               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20416  004F02  B4D8               	btfsc	status,2,c
 20417  004F04  0012               	return	
 20418                           
 20419                           ; BSR set to: 0
 20420                           ;lorawan.c: 2222: {;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01
      +                          , multicastStatus);
 20421  004F06  C096  F06B         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20422  004F0A  C097  F06C         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20423  004F0E  C098  F06D         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20424  004F12  C099  F06E         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20425  004F16  C0A6  F06F         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20426  004F1A  0E01               	movlw	1
 20427  004F1C  6F70               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20428  004F1E  C09F  F071         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20429  004F22  5195               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20430  004F24  EC0A  F03B         	call	_AssembleEncryptionBlock
 20431                           
 20432                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 20433  004F28  0E5F               	movlw	low _aesBuffer
 20434  004F2A  0100               	movlb	0	; () banked
 20435  004F2C  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 20436  004F2E  0E01               	movlw	high _aesBuffer
 20437  004F30  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20438  004F32  C09A  F080         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20439  004F36  C09B  F081         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20440  004F3A  EC5A  F04E         	call	_AESEncodeLoRa	;wreg free
 20441                           
 20442                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 20443  004F3E  0E00               	movlw	0
 20444  004F40  0100               	movlb	0	; () banked
 20445  004F42  6FA7               	movwf	EncryptFRMPayload@j& (0+255),b
 20446  004F44  D023               	goto	l19250
 20447  004F46                     l19244:
 20448                           
 20449                           ; BSR set to: 0
 20450                           ;lorawan.c: 2227: {;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j
      +                          ] ^ buffer[(16*k) + j];
 20451  004F46  519C               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20452  004F48  259D               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20453  004F4A  6ED9               	movwf	fsr2l,c
 20454  004F4C  0E00               	movlw	0
 20455  004F4E  219E               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20456  004F50  6EDA               	movwf	fsr2h,c
 20457  004F52  51A5               	movf	EncryptFRMPayload@k& (0+255),w,b
 20458  004F54  0D10               	mullw	16
 20459  004F56  C092  F0A0         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 20460  004F5A  C093  F0A1         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 20461  004F5E  50F3               	movf	prodl,w,c
 20462  004F60  27A0               	addwf	??_EncryptFRMPayload& (0+255),f,b
 20463  004F62  50F4               	movf	prodh,w,c
 20464  004F64  23A1               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 20465  004F66  51A7               	movf	EncryptFRMPayload@j& (0+255),w,b
 20466  004F68  25A0               	addwf	??_EncryptFRMPayload& (0+255),w,b
 20467  004F6A  6EE9               	movwf	fsr0l,c
 20468  004F6C  0E00               	movlw	0
 20469  004F6E  21A1               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 20470  004F70  6EEA               	movwf	fsr0h,c
 20471  004F72  50EF               	movf	indf0,w,c
 20472  004F74  6FA2               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 20473  004F76  0E5F               	movlw	low _aesBuffer
 20474  004F78  25A7               	addwf	EncryptFRMPayload@j& (0+255),w,b
 20475  004F7A  6EE9               	movwf	fsr0l,c
 20476  004F7C  6AEA               	clrf	fsr0h,c
 20477  004F7E  0E01               	movlw	high _aesBuffer
 20478  004F80  22EA               	addwfc	fsr0h,f,c
 20479  004F82  50EF               	movf	indf0,w,c
 20480  004F84  19A2               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20481  004F86  6EDF               	movwf	indf2,c
 20482                           
 20483                           ; BSR set to: 0
 20484  004F88  2B9C               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20485                           
 20486                           ; BSR set to: 0
 20487  004F8A  2BA7               	incf	EncryptFRMPayload@j& (0+255),f,b
 20488  004F8C                     l19250:
 20489                           
 20490                           ; BSR set to: 0
 20491  004F8C  C094  F0A0         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20492  004F90  0E0F               	movlw	15
 20493  004F92  17A0               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20494  004F94  51A0               	movf	??_EncryptFRMPayload& (0+255),w,b
 20495  004F96  5DA7               	subwf	EncryptFRMPayload@j& (0+255),w,b
 20496  004F98  B0D8               	btfsc	status,0,c
 20497  004F9A  0012               	return	
 20498  004F9C  D7D4               	goto	l19244
 20499  004F9E                     __end_of_EncryptFRMPayload:
 20500                           	opt callstack 0
 20501                           
 20502 ;; *************** function ___awdiv *****************
 20503 ;; Defined at:
 20504 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 20505 ;; Parameters:    Size  Location     Type
 20506 ;;  dividend        2    0[BANK0 ] int 
 20507 ;;  divisor         2    2[BANK0 ] int 
 20508 ;; Auto vars:     Size  Location     Type
 20509 ;;  quotient        2    6[BANK0 ] int 
 20510 ;;  sign            1    5[BANK0 ] unsigned char 
 20511 ;;  counter         1    4[BANK0 ] unsigned char 
 20512 ;; Return value:  Size  Location     Type
 20513 ;;                  2    0[BANK0 ] int 
 20514 ;; Registers used:
 20515 ;;		wreg, status,2, status,0
 20516 ;; Tracked objects:
 20517 ;;		On entry : 0/0
 20518 ;;		On exit  : 0/0
 20519 ;;		Unchanged: 0/0
 20520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20522 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20524 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20525 ;;Total ram usage:        8 bytes
 20526 ;; Hardware stack levels used:    1
 20527 ;; Hardware stack levels required when called:    7
 20528 ;; This function calls:
 20529 ;;		Nothing
 20530 ;; This function is called by:
 20531 ;;		_EncryptFRMPayload
 20532 ;;		_timerHandler16
 20533 ;; This function uses a non-reentrant model
 20534 ;;
 20535                           
 20536                           	psect	text91
 20537  008422                     __ptext91:
 20538                           	opt callstack 0
 20539  008422                     ___awdiv:
 20540                           	opt callstack 18
 20541                           
 20542                           ; BSR set to: 0
 20543                           ;incstack = 0
 20544  008422  0E00               	movlw	0
 20545  008424  0100               	movlb	0	; () banked
 20546  008426  6F65               	movwf	___awdiv@sign& (0+255),b
 20547                           
 20548                           ; BSR set to: 0
 20549  008428  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 20550  00842A  D006               	goto	l18742
 20551                           
 20552                           ; BSR set to: 0
 20553  00842C  6D62               	negf	___awdiv@divisor& (0+255),b
 20554  00842E  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 20555  008430  B0D8               	btfsc	status,0,c
 20556  008432  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 20557                           
 20558                           ; BSR set to: 0
 20559  008434  0E01               	movlw	1
 20560  008436  6F65               	movwf	___awdiv@sign& (0+255),b
 20561  008438                     l18742:
 20562                           
 20563                           ; BSR set to: 0
 20564  008438  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 20565  00843A  D006               	goto	l18748
 20566                           
 20567                           ; BSR set to: 0
 20568  00843C  6D60               	negf	___awdiv@dividend& (0+255),b
 20569  00843E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 20570  008440  B0D8               	btfsc	status,0,c
 20571  008442  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 20572                           
 20573                           ; BSR set to: 0
 20574  008444  0E01               	movlw	1
 20575  008446  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 20576  008448                     l18748:
 20577                           
 20578                           ; BSR set to: 0
 20579  008448  0E00               	movlw	0
 20580  00844A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 20581  00844C  0E00               	movlw	0
 20582  00844E  6F66               	movwf	___awdiv@quotient& (0+255),b
 20583                           
 20584                           ; BSR set to: 0
 20585  008450  5162               	movf	___awdiv@divisor& (0+255),w,b
 20586  008452  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 20587  008454  B4D8               	btfsc	status,2,c
 20588  008456  D01C               	goto	l18770
 20589                           
 20590                           ; BSR set to: 0
 20591  008458  0E01               	movlw	1
 20592  00845A  6F64               	movwf	___awdiv@counter& (0+255),b
 20593  00845C  D004               	goto	l18756
 20594  00845E                     l18754:
 20595                           
 20596                           ; BSR set to: 0
 20597  00845E  90D8               	bcf	status,0,c
 20598  008460  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 20599  008462  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 20600  008464  2B64               	incf	___awdiv@counter& (0+255),f,b
 20601  008466                     l18756:
 20602                           
 20603                           ; BSR set to: 0
 20604  008466  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 20605  008468  D7FA               	goto	l18754
 20606  00846A                     u19930:
 20607                           
 20608                           ; BSR set to: 0
 20609  00846A  90D8               	bcf	status,0,c
 20610  00846C  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 20611  00846E  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 20612                           
 20613                           ; BSR set to: 0
 20614  008470  5162               	movf	___awdiv@divisor& (0+255),w,b
 20615  008472  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 20616  008474  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20617  008476  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 20618  008478  A0D8               	btfss	status,0,c
 20619  00847A  D005               	goto	l18766
 20620                           
 20621                           ; BSR set to: 0
 20622  00847C  5162               	movf	___awdiv@divisor& (0+255),w,b
 20623  00847E  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 20624  008480  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 20625  008482  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 20626                           
 20627                           ; BSR set to: 0
 20628  008484  8166               	bsf	___awdiv@quotient& (0+255),0,b
 20629  008486                     l18766:
 20630                           
 20631                           ; BSR set to: 0
 20632  008486  90D8               	bcf	status,0,c
 20633  008488  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 20634  00848A  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 20635                           
 20636                           ; BSR set to: 0
 20637  00848C  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 20638  00848E  D7ED               	goto	u19930
 20639  008490                     l18770:
 20640                           
 20641                           ; BSR set to: 0
 20642  008490  5165               	movf	___awdiv@sign& (0+255),w,b
 20643  008492  B4D8               	btfsc	status,2,c
 20644  008494  D004               	goto	l18774
 20645                           
 20646                           ; BSR set to: 0
 20647  008496  6D66               	negf	___awdiv@quotient& (0+255),b
 20648  008498  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 20649  00849A  B0D8               	btfsc	status,0,c
 20650  00849C  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 20651  00849E                     l18774:
 20652                           
 20653                           ; BSR set to: 0
 20654  00849E  C066  F060         	movff	___awdiv@quotient,?___awdiv
 20655  0084A2  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 20656                           
 20657                           ; BSR set to: 0
 20658  0084A6  0012               	return		;funcret
 20659  0084A8                     __end_of___awdiv:
 20660                           	opt callstack 0
 20661                           
 20662 ;; *************** function _AssembleEncryptionBlock *****************
 20663 ;; Defined at:
 20664 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20665 ;; Parameters:    Size  Location     Type
 20666 ;;  dir             1    wreg     unsigned char 
 20667 ;;  frameCounter    4   11[BANK0 ] unsigned long 
 20668 ;;  blockId         1   15[BANK0 ] unsigned char 
 20669 ;;  firstByte       1   16[BANK0 ] unsigned char 
 20670 ;;  multicastSta    1   17[BANK0 ] unsigned char 
 20671 ;; Auto vars:     Size  Location     Type
 20672 ;;  dir             1   18[BANK0 ] unsigned char 
 20673 ;;  bufferIndex     1   19[BANK0 ] unsigned char 
 20674 ;; Return value:  Size  Location     Type
 20675 ;;                  1    wreg      void 
 20676 ;; Registers used:
 20677 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20678 ;; Tracked objects:
 20679 ;;		On entry : 0/0
 20680 ;;		On exit  : 0/0
 20681 ;;		Unchanged: 0/0
 20682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20683 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20684 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20686 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20687 ;;Total ram usage:        9 bytes
 20688 ;; Hardware stack levels used:    1
 20689 ;; Hardware stack levels required when called:    8
 20690 ;; This function calls:
 20691 ;;		_memcpy
 20692 ;;		_memset
 20693 ;; This function is called by:
 20694 ;;		_LORAWAN_RxDone
 20695 ;;		_AssemblePacket
 20696 ;;		_EncryptFRMPayload
 20697 ;; This function uses a non-reentrant model
 20698 ;;
 20699                           
 20700                           	psect	text92
 20701  007614                     __ptext92:
 20702                           	opt callstack 0
 20703  007614                     _AssembleEncryptionBlock:
 20704                           	opt callstack 17
 20705                           
 20706                           ; BSR set to: 0
 20707                           ;incstack = 0
 20708                           ;AssembleEncryptionBlock@dir stored from wreg
 20709  007614  0100               	movlb	0	; () banked
 20710  007616  6F72               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 20711                           
 20712                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 20713  007618  0E00               	movlw	0
 20714  00761A  0100               	movlb	0	; () banked
 20715  00761C  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20716                           
 20717                           ; BSR set to: 0
 20718                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 20719  00761E  0E5F               	movlw	low _aesBuffer
 20720  007620  6F60               	movwf	memset@p1& (0+255),b
 20721  007622  0E01               	movlw	high _aesBuffer
 20722  007624  6F61               	movwf	(memset@p1+1)& (0+255),b
 20723  007626  0E00               	movlw	0
 20724  007628  6F63               	movwf	(memset@c+1)& (0+255),b
 20725  00762A  0E00               	movlw	0
 20726  00762C  6F62               	movwf	memset@c& (0+255),b
 20727  00762E  0E00               	movlw	0
 20728  007630  6F65               	movwf	(memset@n+1)& (0+255),b
 20729  007632  0E10               	movlw	16
 20730  007634  6F64               	movwf	memset@n& (0+255),b
 20731  007636  EC0D  F050         	call	_memset	;wreg free
 20732                           
 20733                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 20734  00763A  C070  F15F         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 20735                           
 20736                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 20737  00763E  0100               	movlb	0	; () banked
 20738  007640  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20739  007642  0F05               	addlw	5
 20740  007644  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20741                           
 20742                           ; BSR set to: 0
 20743                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 20744  007646  0E5F               	movlw	low _aesBuffer
 20745  007648  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20746  00764A  6ED9               	movwf	fsr2l,c
 20747  00764C  6ADA               	clrf	fsr2h,c
 20748  00764E  0E01               	movlw	high _aesBuffer
 20749  007650  22DA               	addwfc	fsr2h,f,c
 20750  007652  C072  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 20751                           
 20752                           ; BSR set to: 0
 20753  007656  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20754                           
 20755                           ; BSR set to: 0
 20756                           ;lorawan.c: 2168: if (0 == multicastStatus)
 20757  007658  5171               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 20758  00765A  A4D8               	btfss	status,2,c
 20759  00765C  D015               	goto	l18718
 20760                           
 20761                           ; BSR set to: 0
 20762                           ;lorawan.c: 2169: {;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationPa
      +                          rameters.deviceAddress, sizeof (loRa.activationParameters.deviceAddress));
 20763  00765E  0E5F               	movlw	low _aesBuffer
 20764  007660  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20765  007662  6F60               	movwf	memcpy@d1& (0+255),b
 20766  007664  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 20767  007666  0E01               	movlw	high _aesBuffer
 20768  007668  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20769  00766A  0E23               	movlw	low (_loRa+30)
 20770  00766C  6F62               	movwf	memcpy@s1& (0+255),b
 20771  00766E  0E02               	movlw	high (_loRa+30)
 20772  007670  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20773  007672  0E00               	movlw	0
 20774  007674  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20775  007676  0E04               	movlw	4
 20776  007678  6F64               	movwf	memcpy@n& (0+255),b
 20777  00767A  EC2F  F048         	call	_memcpy	;wreg free
 20778  00767E                     l18716:
 20779                           
 20780                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 20781  00767E  0100               	movlb	0	; () banked
 20782  007680  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20783  007682  0F04               	addlw	4
 20784  007684  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20785                           
 20786                           ;lorawan.c: 2172: }
 20787  007686  D011               	goto	l18722
 20788  007688                     l18718:
 20789                           
 20790                           ; BSR set to: 0
 20791                           ;lorawan.c: 2173: else;lorawan.c: 2174: {;lorawan.c: 2175: memcpy (&aesBuffer[bufferInde
      +                          x], &loRa.activationParameters.mcastDeviceAddress, sizeof (loRa.activationParameters.mca
      +                          stDeviceAddress));
 20792  007688  0E5F               	movlw	low _aesBuffer
 20793  00768A  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20794  00768C  6F60               	movwf	memcpy@d1& (0+255),b
 20795  00768E  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 20796  007690  0E01               	movlw	high _aesBuffer
 20797  007692  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20798  007694  0E67               	movlw	low (_loRa+98)
 20799  007696  6F62               	movwf	memcpy@s1& (0+255),b
 20800  007698  0E02               	movlw	high (_loRa+98)
 20801  00769A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20802  00769C  0E00               	movlw	0
 20803  00769E  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20804  0076A0  0E04               	movlw	4
 20805  0076A2  6F64               	movwf	memcpy@n& (0+255),b
 20806  0076A4  EC2F  F048         	call	_memcpy	;wreg free
 20807  0076A8  D7EA               	goto	l18716
 20808  0076AA                     l18722:
 20809                           
 20810                           ; BSR set to: 0
 20811                           ;lorawan.c: 2177: };lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, siz
      +                          eof (frameCounter));
 20812  0076AA  0E5F               	movlw	low _aesBuffer
 20813  0076AC  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20814  0076AE  6F60               	movwf	memcpy@d1& (0+255),b
 20815  0076B0  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 20816  0076B2  0E01               	movlw	high _aesBuffer
 20817  0076B4  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20818  0076B6  0E6B               	movlw	low AssembleEncryptionBlock@frameCounter
 20819  0076B8  6F62               	movwf	memcpy@s1& (0+255),b
 20820  0076BA  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 20821  0076BC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 20822  0076BE  0E00               	movlw	0
 20823  0076C0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 20824  0076C2  0E04               	movlw	4
 20825  0076C4  6F64               	movwf	memcpy@n& (0+255),b
 20826  0076C6  EC2F  F048         	call	_memcpy	;wreg free
 20827                           
 20828                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 20829  0076CA  0100               	movlb	0	; () banked
 20830  0076CC  5173               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20831  0076CE  0F04               	addlw	4
 20832  0076D0  6F73               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20833                           
 20834                           ; BSR set to: 0
 20835                           ;lorawan.c: 2182: bufferIndex ++;
 20836  0076D2  2B73               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20837                           
 20838                           ; BSR set to: 0
 20839                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 20840  0076D4  0E5F               	movlw	low _aesBuffer
 20841  0076D6  2573               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20842  0076D8  6ED9               	movwf	fsr2l,c
 20843  0076DA  6ADA               	clrf	fsr2h,c
 20844  0076DC  0E01               	movlw	high _aesBuffer
 20845  0076DE  22DA               	addwfc	fsr2h,f,c
 20846  0076E0  C06F  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 20847                           
 20848                           ; BSR set to: 0
 20849  0076E4  0012               	return		;funcret
 20850  0076E6                     __end_of_AssembleEncryptionBlock:
 20851                           	opt callstack 0
 20852                           
 20853 ;; *************** function _CountfOptsLength *****************
 20854 ;; Defined at:
 20855 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20856 ;; Parameters:    Size  Location     Type
 20857 ;;		None
 20858 ;; Auto vars:     Size  Location     Type
 20859 ;;  i               1    7[BANK0 ] unsigned char 
 20860 ;;  macCommandLe    1    6[BANK0 ] unsigned char 
 20861 ;; Return value:  Size  Location     Type
 20862 ;;                  1    wreg      unsigned char 
 20863 ;; Registers used:
 20864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 20865 ;; Tracked objects:
 20866 ;;		On entry : 0/0
 20867 ;;		On exit  : 0/0
 20868 ;;		Unchanged: 0/0
 20869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20871 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20872 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20873 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20874 ;;Total ram usage:        8 bytes
 20875 ;; Hardware stack levels used:    1
 20876 ;; Hardware stack levels required when called:    7
 20877 ;; This function calls:
 20878 ;;		Nothing
 20879 ;; This function is called by:
 20880 ;;		_LORAWAN_GetMaxPayloadSize
 20881 ;;		_AssemblePacket
 20882 ;; This function uses a non-reentrant model
 20883 ;;
 20884                           
 20885                           	psect	text93
 20886  0076E6                     __ptext93:
 20887                           	opt callstack 0
 20888  0076E6                     _CountfOptsLength:
 20889                           	opt callstack 19
 20890                           
 20891                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 20892                           
 20893                           ; BSR set to: 0
 20894                           ;incstack = 0
 20895  0076E6  0E00               	movlw	0
 20896  0076E8  0100               	movlb	0	; () banked
 20897  0076EA  6F66               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 20898                           
 20899                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 20900  0076EC  0E00               	movlw	0
 20901  0076EE  6F67               	movwf	CountfOptsLength@i& (0+255),b
 20902  0076F0  D057               	goto	l19262
 20903  0076F2                     l19254:
 20904                           
 20905                           ; BSR set to: 0
 20906                           ;lorawan.c: 2139: {;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 20907  0076F2  5167               	movf	CountfOptsLength@i& (0+255),w,b
 20908  0076F4  0D02               	mullw	2
 20909  0076F6  0EAD               	movlw	low (_loRa+168)
 20910  0076F8  24F3               	addwf	prodl,w,c
 20911  0076FA  6ED9               	movwf	fsr2l,c
 20912  0076FC  0E02               	movlw	high (_loRa+168)
 20913  0076FE  20F4               	addwfc	prodh,w,c
 20914  007700  6EDA               	movwf	fsr2h,c
 20915  007702  28DE               	incf	postinc2,w,c
 20916  007704  B4D8               	btfsc	status,2,c
 20917  007706  D04B               	goto	l19260
 20918                           
 20919                           ; BSR set to: 0
 20920                           ;lorawan.c: 2141: {;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.ma
      +                          cCommands[i].receivedCid - 2]) <= 0x0F)
 20921  007708  0EFE               	movlw	254
 20922  00770A  6F60               	movwf	??_CountfOptsLength& (0+255),b
 20923  00770C  0EFF               	movlw	255
 20924  00770E  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 20925  007710  5167               	movf	CountfOptsLength@i& (0+255),w,b
 20926  007712  0D02               	mullw	2
 20927  007714  0EAD               	movlw	low (_loRa+168)
 20928  007716  24F3               	addwf	prodl,w,c
 20929  007718  6ED9               	movwf	fsr2l,c
 20930  00771A  0E02               	movlw	high (_loRa+168)
 20931  00771C  20F4               	addwfc	prodh,w,c
 20932  00771E  6EDA               	movwf	fsr2h,c
 20933  007720  50DF               	movf	indf2,w,c
 20934  007722  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20935  007724  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20936  007726  5160               	movf	??_CountfOptsLength& (0+255),w,b
 20937  007728  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20938  00772A  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20939  00772C  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20940  00772E  0E27               	movlw	low _macEndDevCmdReplyLen
 20941  007730  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20942  007732  6EF6               	movwf	tblptrl,c
 20943  007734  0EFF               	movlw	high _macEndDevCmdReplyLen
 20944  007736  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20945  007738  6EF7               	movwf	tblptrh,c
 20946  00773A                     	if	1	;There are 3 active tblptr bytes
 20947  00773A  6AF8               	clrf	tblptru,c
 20948  00773C  0E00               	movlw	low (__mediumconst shr (0+16))
 20949  00773E  22F8               	addwfc	tblptru,f,c
 20950  007740                     	endif
 20951  007740  0008               	tblrd		*
 20952  007742  50F5               	movf	tablat,w,c
 20953  007744  C066  F064         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 20954  007748  6B65               	clrf	(??_CountfOptsLength+5)& (0+255),b
 20955  00774A  2764               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 20956  00774C  0E00               	movlw	0
 20957  00774E  2365               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 20958  007750  BF65               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 20959  007752  D006               	goto	u20750
 20960  007754  5165               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 20961  007756  E12A               	bnz	l19264
 20962  007758  0E10               	movlw	16
 20963  00775A  5D64               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 20964  00775C  B0D8               	btfsc	status,0,c
 20965  00775E  D026               	goto	u20760
 20966  007760                     u20750:
 20967                           
 20968                           ; BSR set to: 0
 20969                           ;lorawan.c: 2143: {;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCo
      +                          mmands[i].receivedCid - 2];
 20970  007760  0EFE               	movlw	254
 20971  007762  6F60               	movwf	??_CountfOptsLength& (0+255),b
 20972  007764  0EFF               	movlw	255
 20973  007766  6F61               	movwf	(??_CountfOptsLength+1)& (0+255),b
 20974  007768  5167               	movf	CountfOptsLength@i& (0+255),w,b
 20975  00776A  0D02               	mullw	2
 20976  00776C  0EAD               	movlw	low (_loRa+168)
 20977  00776E  24F3               	addwf	prodl,w,c
 20978  007770  6ED9               	movwf	fsr2l,c
 20979  007772  0E02               	movlw	high (_loRa+168)
 20980  007774  20F4               	addwfc	prodh,w,c
 20981  007776  6EDA               	movwf	fsr2h,c
 20982  007778  50DF               	movf	indf2,w,c
 20983  00777A  6F62               	movwf	(??_CountfOptsLength+2)& (0+255),b
 20984  00777C  6B63               	clrf	(??_CountfOptsLength+3)& (0+255),b
 20985  00777E  5160               	movf	??_CountfOptsLength& (0+255),w,b
 20986  007780  2762               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 20987  007782  5161               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 20988  007784  2363               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 20989  007786  0E27               	movlw	low _macEndDevCmdReplyLen
 20990  007788  2562               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 20991  00778A  6EF6               	movwf	tblptrl,c
 20992  00778C  0EFF               	movlw	high _macEndDevCmdReplyLen
 20993  00778E  2163               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 20994  007790  6EF7               	movwf	tblptrh,c
 20995  007792                     	if	1	;There are 3 active tblptr bytes
 20996  007792  6AF8               	clrf	tblptru,c
 20997  007794  0E00               	movlw	low (__mediumconst shr (0+16))
 20998  007796  22F8               	addwfc	tblptru,f,c
 20999  007798                     	endif
 21000  007798  0008               	tblrd		*
 21001  00779A  50F5               	movf	tablat,w,c
 21002  00779C  2766               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 21003  00779E                     l19260:
 21004                           
 21005                           ; BSR set to: 0
 21006  00779E  2B67               	incf	CountfOptsLength@i& (0+255),f,b
 21007  0077A0                     l19262:
 21008                           
 21009                           ; BSR set to: 0
 21010  0077A0  0102               	movlb	2	; () banked
 21011  0077A2  51AC               	movf	(_loRa+167)& (0+255),w,b
 21012  0077A4  0100               	movlb	0	; () banked
 21013  0077A6  5D67               	subwf	CountfOptsLength@i& (0+255),w,b
 21014  0077A8  A0D8               	btfss	status,0,c
 21015  0077AA  D7A3               	goto	l19254
 21016  0077AC                     u20760:
 21017  0077AC                     l19264:
 21018                           
 21019                           ; BSR set to: 0
 21020                           ;lorawan.c: 2149: };lorawan.c: 2150: };lorawan.c: 2151: };lorawan.c: 2153: return macCom
      +                          mandLength;
 21021  0077AC  5166               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 21022                           
 21023                           ; BSR set to: 0
 21024  0077AE  0012               	return		;funcret
 21025  0077B0                     __end_of_CountfOptsLength:
 21026                           	opt callstack 0
 21027                           
 21028 ;; *************** function _ExtractMic *****************
 21029 ;; Defined at:
 21030 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21031 ;; Parameters:    Size  Location     Type
 21032 ;;  buffer          2   11[BANK0 ] PTR unsigned char 
 21033 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21034 ;;  bufferLength    1   13[BANK0 ] unsigned char 
 21035 ;; Auto vars:     Size  Location     Type
 21036 ;;  mic             4   17[BANK0 ] unsigned long 
 21037 ;; Return value:  Size  Location     Type
 21038 ;;                  4   11[BANK0 ] unsigned long 
 21039 ;; Registers used:
 21040 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21041 ;; Tracked objects:
 21042 ;;		On entry : 0/0
 21043 ;;		On exit  : 0/0
 21044 ;;		Unchanged: 0/0
 21045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21046 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21047 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21049 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21050 ;;Total ram usage:       10 bytes
 21051 ;; Hardware stack levels used:    1
 21052 ;; Hardware stack levels required when called:    8
 21053 ;; This function calls:
 21054 ;;		_memcpy
 21055 ;; This function is called by:
 21056 ;;		_LORAWAN_RxDone
 21057 ;; This function uses a non-reentrant model
 21058 ;;
 21059                           
 21060                           	psect	text94
 21061  009618                     __ptext94:
 21062                           	opt callstack 0
 21063  009618                     _ExtractMic:
 21064                           	opt callstack 16
 21065                           
 21066                           ;lorawan.c: 2189: uint32_t mic = 0;
 21067                           
 21068                           ; BSR set to: 0
 21069                           ;incstack = 0
 21070  009618  0E00               	movlw	0
 21071  00961A  0100               	movlb	0	; () banked
 21072  00961C  6F71               	movwf	ExtractMic@mic& (0+255),b
 21073  00961E  0E00               	movlw	0
 21074  009620  6F72               	movwf	(ExtractMic@mic+1)& (0+255),b
 21075  009622  0E00               	movlw	0
 21076  009624  6F73               	movwf	(ExtractMic@mic+2)& (0+255),b
 21077  009626  0E00               	movlw	0
 21078  009628  6F74               	movwf	(ExtractMic@mic+3)& (0+255),b
 21079                           
 21080                           ; BSR set to: 0
 21081                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 21082  00962A  0E71               	movlw	low ExtractMic@mic
 21083  00962C  6F60               	movwf	memcpy@d1& (0+255),b
 21084  00962E  0E00               	movlw	high ExtractMic@mic
 21085  009630  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21086  009632  516D               	movf	ExtractMic@bufferLength& (0+255),w,b
 21087  009634  256B               	addwf	ExtractMic@buffer& (0+255),w,b
 21088  009636  6F6F               	movwf	??_ExtractMic& (0+255),b
 21089  009638  0E00               	movlw	0
 21090  00963A  216C               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 21091  00963C  6F70               	movwf	(??_ExtractMic+1)& (0+255),b
 21092  00963E  0EFC               	movlw	252
 21093  009640  256F               	addwf	??_ExtractMic& (0+255),w,b
 21094  009642  6F62               	movwf	memcpy@s1& (0+255),b
 21095  009644  0EFF               	movlw	255
 21096  009646  2170               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 21097  009648  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21098  00964A  0E00               	movlw	0
 21099  00964C  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21100  00964E  0E04               	movlw	4
 21101  009650  6F64               	movwf	memcpy@n& (0+255),b
 21102  009652  EC2F  F048         	call	_memcpy	;wreg free
 21103                           
 21104                           ;lorawan.c: 2191: return mic;
 21105  009656  C071  F06B         	movff	ExtractMic@mic,?_ExtractMic
 21106  00965A  C072  F06C         	movff	ExtractMic@mic+1,?_ExtractMic+1
 21107  00965E  C073  F06D         	movff	ExtractMic@mic+2,?_ExtractMic+2
 21108  009662  C074  F06E         	movff	ExtractMic@mic+3,?_ExtractMic+3
 21109  009666  0012               	return		;funcret
 21110  009668                     __end_of_ExtractMic:
 21111                           	opt callstack 0
 21112                           
 21113 ;; *************** function _ComputeSessionKeys *****************
 21114 ;; Defined at:
 21115 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21116 ;; Parameters:    Size  Location     Type
 21117 ;;  joinAcceptBu    2   50[BANK0 ] PTR struct .
 21118 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21119 ;; Auto vars:     Size  Location     Type
 21120 ;;		None
 21121 ;; Return value:  Size  Location     Type
 21122 ;;                  1    wreg      void 
 21123 ;; Registers used:
 21124 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21125 ;; Tracked objects:
 21126 ;;		On entry : 0/0
 21127 ;;		On exit  : 0/0
 21128 ;;		Unchanged: 0/0
 21129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21133 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21134 ;;Total ram usage:        2 bytes
 21135 ;; Hardware stack levels used:    1
 21136 ;; Hardware stack levels required when called:   10
 21137 ;; This function calls:
 21138 ;;		_AESEncodeLoRa
 21139 ;;		_PrepareSessionKeys
 21140 ;; This function is called by:
 21141 ;;		_LORAWAN_RxDone
 21142 ;; This function uses a non-reentrant model
 21143 ;;
 21144                           
 21145                           	psect	text95
 21146  0084A8                     __ptext95:
 21147                           	opt callstack 0
 21148  0084A8                     _ComputeSessionKeys:
 21149                           	opt callstack 14
 21150                           
 21151                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21152                           
 21153                           ;incstack = 0
 21154  0084A8  0E37               	movlw	low (_loRa+50)
 21155  0084AA  0100               	movlb	0	; () banked
 21156  0084AC  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21157  0084AE  0E02               	movlw	high (_loRa+50)
 21158  0084B0  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21159  0084B2  0E01               	movlw	1
 21160  0084B4  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21161  0084B6  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21162  0084B8  0E00               	movlw	0
 21163  0084BA  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21164  0084BC  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21165  0084BE  0E04               	movlw	4
 21166  0084C0  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21167  0084C2  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21168  0084C4  0E00               	movlw	0
 21169  0084C6  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21170  0084C8  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21171  0084CA  EC6A  F040         	call	_PrepareSessionKeys	;wreg free
 21172                           
 21173                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 21174  0084CE  0E02               	movlw	2
 21175  0084D0  0102               	movlb	2	; () banked
 21176  0084D2  6F37               	movwf	(_loRa+50)& (0+255),b
 21177                           
 21178                           ; BSR set to: 2
 21179                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 21180  0084D4  0E37               	movlw	low (_loRa+50)
 21181  0084D6  0100               	movlb	0	; () banked
 21182  0084D8  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 21183  0084DA  0E02               	movlw	high (_loRa+50)
 21184  0084DC  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21185  0084DE  0E47               	movlw	low (_loRa+66)
 21186  0084E0  6F80               	movwf	AESEncodeLoRa@key& (0+255),b
 21187  0084E2  0E02               	movlw	high (_loRa+66)
 21188  0084E4  6F81               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21189  0084E6  EC5A  F04E         	call	_AESEncodeLoRa	;wreg free
 21190                           
 21191                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21192  0084EA  0E27               	movlw	low (_loRa+34)
 21193  0084EC  0100               	movlb	0	; () banked
 21194  0084EE  6F6B               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21195  0084F0  0E02               	movlw	high (_loRa+34)
 21196  0084F2  6F6C               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21197  0084F4  0E01               	movlw	1
 21198  0084F6  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21199  0084F8  6F6D               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21200  0084FA  0E00               	movlw	0
 21201  0084FC  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21202  0084FE  6F6E               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21203  008500  0E04               	movlw	4
 21204  008502  2592               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21205  008504  6F6F               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21206  008506  0E00               	movlw	0
 21207  008508  2193               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21208  00850A  6F70               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21209  00850C  EC6A  F040         	call	_PrepareSessionKeys	;wreg free
 21210                           
 21211                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 21212  008510  0E01               	movlw	1
 21213  008512  0102               	movlb	2	; () banked
 21214  008514  6F27               	movwf	(_loRa+34)& (0+255),b
 21215                           
 21216                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 21217  008516  0E27               	movlw	low (_loRa+34)
 21218  008518  0100               	movlb	0	; () banked
 21219  00851A  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 21220  00851C  0E02               	movlw	high (_loRa+34)
 21221  00851E  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21222  008520  0E47               	movlw	low (_loRa+66)
 21223  008522  6F80               	movwf	AESEncodeLoRa@key& (0+255),b
 21224  008524  0E02               	movlw	high (_loRa+66)
 21225  008526  6F81               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21226  008528  EC5A  F04E         	call	_AESEncodeLoRa	;wreg free
 21227  00852C  0012               	return		;funcret
 21228  00852E                     __end_of_ComputeSessionKeys:
 21229                           	opt callstack 0
 21230                           
 21231 ;; *************** function _PrepareSessionKeys *****************
 21232 ;; Defined at:
 21233 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21234 ;; Parameters:    Size  Location     Type
 21235 ;;  sessionKey      2   11[BANK0 ] PTR unsigned char 
 21236 ;;		 -> loRa.activationParameters(105), loRa(245), 
 21237 ;;  appNonce        2   13[BANK0 ] PTR unsigned char 
 21238 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21239 ;;  networkId       2   15[BANK0 ] PTR unsigned char 
 21240 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21241 ;; Auto vars:     Size  Location     Type
 21242 ;;  index           1   17[BANK0 ] unsigned char 
 21243 ;; Return value:  Size  Location     Type
 21244 ;;                  1    wreg      void 
 21245 ;; Registers used:
 21246 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21247 ;; Tracked objects:
 21248 ;;		On entry : 0/0
 21249 ;;		On exit  : 0/0
 21250 ;;		Unchanged: 0/0
 21251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21252 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21253 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21255 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21256 ;;Total ram usage:        7 bytes
 21257 ;; Hardware stack levels used:    1
 21258 ;; Hardware stack levels required when called:    8
 21259 ;; This function calls:
 21260 ;;		_memcpy
 21261 ;;		_memset
 21262 ;; This function is called by:
 21263 ;;		_ComputeSessionKeys
 21264 ;; This function uses a non-reentrant model
 21265 ;;
 21266                           
 21267                           	psect	text96
 21268  0080D4                     __ptext96:
 21269                           	opt callstack 0
 21270  0080D4                     _PrepareSessionKeys:
 21271                           	opt callstack 15
 21272                           
 21273                           ;lorawan.c: 2047: uint8_t index = 0;
 21274                           
 21275                           ;incstack = 0
 21276  0080D4  0E00               	movlw	0
 21277  0080D6  0100               	movlb	0	; () banked
 21278  0080D8  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 21279                           
 21280                           ; BSR set to: 0
 21281                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 21282  0080DA  C06B  F060         	movff	PrepareSessionKeys@sessionKey,memset@p1
 21283  0080DE  C06C  F061         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 21284  0080E2  0E00               	movlw	0
 21285  0080E4  6F63               	movwf	(memset@c+1)& (0+255),b
 21286  0080E6  0E00               	movlw	0
 21287  0080E8  6F62               	movwf	memset@c& (0+255),b
 21288  0080EA  0E00               	movlw	0
 21289  0080EC  6F65               	movwf	(memset@n+1)& (0+255),b
 21290  0080EE  0E10               	movlw	16
 21291  0080F0  6F64               	movwf	memset@n& (0+255),b
 21292  0080F2  EC0D  F050         	call	_memset	;wreg free
 21293                           
 21294                           ;lorawan.c: 2050: index ++;
 21295  0080F6  0100               	movlb	0	; () banked
 21296  0080F8  2B71               	incf	PrepareSessionKeys@index& (0+255),f,b
 21297                           
 21298                           ; BSR set to: 0
 21299                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 21300  0080FA  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21301  0080FC  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21302  0080FE  6F60               	movwf	memcpy@d1& (0+255),b
 21303  008100  0E00               	movlw	0
 21304  008102  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21305  008104  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21306  008106  C06D  F062         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 21307  00810A  C06E  F063         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 21308  00810E  0E00               	movlw	0
 21309  008110  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21310  008112  0E03               	movlw	3
 21311  008114  6F64               	movwf	memcpy@n& (0+255),b
 21312  008116  EC2F  F048         	call	_memcpy	;wreg free
 21313                           
 21314                           ;lorawan.c: 2053: index = index + 3;
 21315  00811A  0100               	movlb	0	; () banked
 21316  00811C  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21317  00811E  0F03               	addlw	3
 21318  008120  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 21319                           
 21320                           ; BSR set to: 0
 21321                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 21322  008122  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21323  008124  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21324  008126  6F60               	movwf	memcpy@d1& (0+255),b
 21325  008128  0E00               	movlw	0
 21326  00812A  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21327  00812C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21328  00812E  C06F  F062         	movff	PrepareSessionKeys@networkId,memcpy@s1
 21329  008132  C070  F063         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 21330  008136  0E00               	movlw	0
 21331  008138  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21332  00813A  0E03               	movlw	3
 21333  00813C  6F64               	movwf	memcpy@n& (0+255),b
 21334  00813E  EC2F  F048         	call	_memcpy	;wreg free
 21335                           
 21336                           ;lorawan.c: 2056: index = index + 3;
 21337  008142  0100               	movlb	0	; () banked
 21338  008144  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21339  008146  0F03               	addlw	3
 21340  008148  6F71               	movwf	PrepareSessionKeys@index& (0+255),b
 21341                           
 21342                           ; BSR set to: 0
 21343                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 21344  00814A  5171               	movf	PrepareSessionKeys@index& (0+255),w,b
 21345  00814C  256B               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21346  00814E  6F60               	movwf	memcpy@d1& (0+255),b
 21347  008150  0E00               	movlw	0
 21348  008152  216C               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21349  008154  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 21350  008156  0ED7               	movlw	low (_loRa+210)
 21351  008158  6F62               	movwf	memcpy@s1& (0+255),b
 21352  00815A  0E02               	movlw	high (_loRa+210)
 21353  00815C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 21354  00815E  0E00               	movlw	0
 21355  008160  6F65               	movwf	(memcpy@n+1)& (0+255),b
 21356  008162  0E02               	movlw	2
 21357  008164  6F64               	movwf	memcpy@n& (0+255),b
 21358  008166  EC2F  F048         	call	_memcpy	;wreg free
 21359  00816A  0012               	return		;funcret
 21360  00816C                     __end_of_PrepareSessionKeys:
 21361                           	opt callstack 0
 21362                           
 21363 ;; *************** function _CheckMcastFlags *****************
 21364 ;; Defined at:
 21365 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21366 ;; Parameters:    Size  Location     Type
 21367 ;;  hdr             2    0[BANK0 ] PTR struct .
 21368 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21369 ;; Auto vars:     Size  Location     Type
 21370 ;;		None
 21371 ;; Return value:  Size  Location     Type
 21372 ;;                  1    wreg      unsigned char 
 21373 ;; Registers used:
 21374 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21375 ;; Tracked objects:
 21376 ;;		On entry : 0/0
 21377 ;;		On exit  : 0/0
 21378 ;;		Unchanged: 0/0
 21379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21383 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21384 ;;Total ram usage:        2 bytes
 21385 ;; Hardware stack levels used:    1
 21386 ;; Hardware stack levels required when called:    7
 21387 ;; This function calls:
 21388 ;;		Nothing
 21389 ;; This function is called by:
 21390 ;;		_LORAWAN_RxDone
 21391 ;; This function uses a non-reentrant model
 21392 ;;
 21393                           
 21394                           	psect	text97
 21395  0087B6                     __ptext97:
 21396                           	opt callstack 0
 21397  0087B6                     _CheckMcastFlags:
 21398                           	opt callstack 17
 21399                           
 21400                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 21401                           
 21402                           ;incstack = 0
 21403  0087B6  0100               	movlb	0	; () banked
 21404  0087B8  EE20 F005          	lfsr	2,5
 21405  0087BC  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21406  0087BE  26D9               	addwf	fsr2l,f,c
 21407  0087C0  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21408  0087C2  22DA               	addwfc	fsr2h,f,c
 21409  0087C4  BADF               	btfsc	indf2,5,c
 21410  0087C6  D012               	goto	u21950
 21411                           
 21412                           ; BSR set to: 0
 21413  0087C8  EE20 F005          	lfsr	2,5
 21414  0087CC  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21415  0087CE  26D9               	addwf	fsr2l,f,c
 21416  0087D0  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21417  0087D2  22DA               	addwfc	fsr2h,f,c
 21418  0087D4  BCDF               	btfsc	indf2,6,c
 21419  0087D6  D00A               	goto	u21950
 21420                           
 21421                           ; BSR set to: 0
 21422  0087D8  C060  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 21423  0087DC  C061  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 21424  0087E0  38DF               	swapf	223,w,c
 21425  0087E2  32E8               	rrcf	wreg,f,c
 21426  0087E4  0B07               	andlw	7
 21427  0087E6  0A03               	xorlw	3
 21428  0087E8  B4D8               	btfsc	status,2,c
 21429  0087EA  D002               	goto	l20112
 21430  0087EC                     u21950:
 21431                           
 21432                           ; BSR set to: 0
 21433                           ;lorawan.c: 2110: {;lorawan.c: 2111: return 0;
 21434  0087EC  0E00               	movlw	0
 21435  0087EE  0012               	return	
 21436  0087F0                     l20112:
 21437                           
 21438                           ; BSR set to: 0
 21439                           ;lorawan.c: 2112: };lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 21440  0087F0  EE20 F005          	lfsr	2,5
 21441  0087F4  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21442  0087F6  26D9               	addwf	fsr2l,f,c
 21443  0087F8  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21444  0087FA  22DA               	addwfc	fsr2h,f,c
 21445  0087FC  50DF               	movf	223,w,c
 21446  0087FE  0B0F               	andlw	15
 21447  008800  0900               	iorlw	0
 21448  008802  A4D8               	btfss	status,2,c
 21449  008804  D7F3               	goto	u21950
 21450                           
 21451                           ; BSR set to: 0
 21452                           ;lorawan.c: 2118: else;lorawan.c: 2119: {;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) 
      +                          + 8))
 21453  008806  EE20 F008          	lfsr	2,8
 21454  00880A  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21455  00880C  26D9               	addwf	fsr2l,f,c
 21456  00880E  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21457  008810  22DA               	addwfc	fsr2h,f,c
 21458  008812  50DF               	movf	indf2,w,c
 21459  008814  B4D8               	btfsc	status,2,c
 21460  008816  D7EA               	goto	u21950
 21461                           
 21462                           ; BSR set to: 0
 21463                           ;lorawan.c: 2123: };lorawan.c: 2124: };lorawan.c: 2126: if (hdr->members.fCtrl.fPending 
      +                          == 1)
 21464  008818  EE20 F005          	lfsr	2,5
 21465  00881C  5160               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21466  00881E  26D9               	addwf	fsr2l,f,c
 21467  008820  5161               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21468  008822  22DA               	addwfc	fsr2h,f,c
 21469  008824  A8DF               	btfss	indf2,4,c
 21470  008826  D002               	goto	l20130
 21471                           
 21472                           ; BSR set to: 0
 21473                           ;lorawan.c: 2127: {;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 21474  008828  0102               	movlb	2	; () banked
 21475  00882A  8705               	bsf	_loRa& (0+255),3,b
 21476  00882C                     l20130:
 21477                           
 21478                           ;lorawan.c: 2129: };lorawan.c: 2131: return 1;
 21479  00882C  0E01               	movlw	1
 21480  00882E  0012               	return		;funcret
 21481  008830                     __end_of_CheckMcastFlags:
 21482                           	opt callstack 0
 21483                           
 21484 ;; *************** function _CheckFlags *****************
 21485 ;; Defined at:
 21486 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21487 ;; Parameters:    Size  Location     Type
 21488 ;;  hdr             2    0[BANK0 ] PTR struct .
 21489 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21490 ;; Auto vars:     Size  Location     Type
 21491 ;;		None
 21492 ;; Return value:  Size  Location     Type
 21493 ;;                  1    wreg      void 
 21494 ;; Registers used:
 21495 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21496 ;; Tracked objects:
 21497 ;;		On entry : 0/0
 21498 ;;		On exit  : 0/0
 21499 ;;		Unchanged: 0/0
 21500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21501 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21504 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21505 ;;Total ram usage:        2 bytes
 21506 ;; Hardware stack levels used:    1
 21507 ;; Hardware stack levels required when called:    7
 21508 ;; This function calls:
 21509 ;;		Nothing
 21510 ;; This function is called by:
 21511 ;;		_LORAWAN_RxDone
 21512 ;; This function uses a non-reentrant model
 21513 ;;
 21514                           
 21515                           	psect	text98
 21516  00911C                     __ptext98:
 21517                           	opt callstack 0
 21518  00911C                     _CheckFlags:
 21519                           	opt callstack 17
 21520                           
 21521                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 21522                           
 21523                           ;incstack = 0
 21524  00911C  0100               	movlb	0	; () banked
 21525  00911E  EE20 F005          	lfsr	2,5
 21526  009122  5160               	movf	CheckFlags@hdr& (0+255),w,b
 21527  009124  26D9               	addwf	fsr2l,f,c
 21528  009126  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21529  009128  22DA               	addwfc	fsr2h,f,c
 21530  00912A  AEDF               	btfss	indf2,7,c
 21531  00912C  D002               	goto	l20160
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;lorawan.c: 2077: {;lorawan.c: 2078: loRa.macStatus.adr = 1;
 21535  00912E  0102               	movlb	2	; () banked
 21536  009130  8D07               	bsf	(_loRa+2)& (0+255),6,b
 21537  009132                     l20160:
 21538                           
 21539                           ;lorawan.c: 2079: };lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 21540  009132  0100               	movlb	0	; () banked
 21541  009134  EE20 F005          	lfsr	2,5
 21542  009138  5160               	movf	CheckFlags@hdr& (0+255),w,b
 21543  00913A  26D9               	addwf	fsr2l,f,c
 21544  00913C  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21545  00913E  22DA               	addwfc	fsr2h,f,c
 21546  009140  A8DF               	btfss	indf2,4,c
 21547  009142  D002               	goto	l20164
 21548                           
 21549                           ; BSR set to: 0
 21550                           ;lorawan.c: 2082: {;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 21551  009144  0102               	movlb	2	; () banked
 21552  009146  8705               	bsf	_loRa& (0+255),3,b
 21553  009148                     l20164:
 21554                           
 21555                           ;lorawan.c: 2084: };lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 21556  009148  0100               	movlb	0	; () banked
 21557  00914A  EE20 F005          	lfsr	2,5
 21558  00914E  5160               	movf	CheckFlags@hdr& (0+255),w,b
 21559  009150  26D9               	addwf	fsr2l,f,c
 21560  009152  5161               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21561  009154  22DA               	addwfc	fsr2h,f,c
 21562  009156  ACDF               	btfss	indf2,6,c
 21563  009158  D002               	goto	l20168
 21564                           
 21565                           ; BSR set to: 0
 21566                           ;lorawan.c: 2087: {;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 21567  00915A  0102               	movlb	2	; () banked
 21568  00915C  8905               	bsf	_loRa& (0+255),4,b
 21569  00915E                     l20168:
 21570                           
 21571                           ;lorawan.c: 2089: };lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA
      +                          _CONFIRMED_DOWN)
 21572  00915E  C060  FFD9         	movff	CheckFlags@hdr,fsr2l
 21573  009162  C061  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 21574  009166  0100               	movlb	0	; () banked
 21575  009168  38DF               	swapf	223,w,c
 21576  00916A  32E8               	rrcf	wreg,f,c
 21577  00916C  0B07               	andlw	7
 21578  00916E  0A05               	xorlw	5
 21579  009170  A4D8               	btfss	status,2,c
 21580  009172  0012               	return	
 21581                           
 21582                           ; BSR set to: 0
 21583                           ;lorawan.c: 2092: {;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMess
      +                          age = 1;
 21584  009174  0102               	movlb	2	; () banked
 21585  009176  8305               	bsf	_loRa& (0+255),1,b
 21586  009178  0012               	return		;funcret
 21587  00917A                     __end_of_CheckFlags:
 21588                           	opt callstack 0
 21589                           
 21590 ;; *************** function _RADIO_FSKPacketSent *****************
 21591 ;; Defined at:
 21592 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 21593 ;; Parameters:    Size  Location     Type
 21594 ;;		None
 21595 ;; Auto vars:     Size  Location     Type
 21596 ;;  timeOnAir       4  119[BANK0 ] unsigned long 
 21597 ;;  irqFlags        1  127[BANK0 ] unsigned char 
 21598 ;; Return value:  Size  Location     Type
 21599 ;;                  1    wreg      void 
 21600 ;; Registers used:
 21601 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21602 ;; Tracked objects:
 21603 ;;		On entry : 0/0
 21604 ;;		On exit  : 0/0
 21605 ;;		Unchanged: 0/0
 21606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21608 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21610 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21611 ;;Total ram usage:        9 bytes
 21612 ;; Hardware stack levels used:    1
 21613 ;; Hardware stack levels required when called:   15
 21614 ;; This function calls:
 21615 ;;		_LORAWAN_TxDone
 21616 ;;		_RADIO_RegisterRead
 21617 ;;		_RADIO_WriteMode
 21618 ;;		_SwTimerReadValue
 21619 ;;		_SwTimerStop
 21620 ;;		___lmul
 21621 ;; This function is called by:
 21622 ;;		_RADIO_DIO0
 21623 ;; This function uses a non-reentrant model
 21624 ;;
 21625                           
 21626                           	psect	text99
 21627  0065CA                     __ptext99:
 21628                           	opt callstack 0
 21629  0065CA                     _RADIO_FSKPacketSent:
 21630                           	opt callstack 11
 21631                           
 21632                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;;radio_driver_SX1276.c: 1096: uint32_t ti
      +                          meOnAir;;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 21633                           
 21634                           ;incstack = 0
 21635  0065CA  0E3F               	movlw	63
 21636  0065CC  EC38  F051         	call	_RADIO_RegisterRead
 21637  0065D0  0100               	movlb	0	; () banked
 21638  0065D2  6FDF               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 21639                           
 21640                           ; BSR set to: 0
 21641                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 21642  0065D4  A7DF               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 21643  0065D6  0012               	return	
 21644                           
 21645                           ; BSR set to: 0
 21646                           ;radio_driver_SX1276.c: 1100: {;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP,
      +                           RadioConfiguration.modulation, 0);
 21647  0065D8  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 21648  0065DC  0E00               	movlw	0
 21649  0065DE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 21650  0065E0  0E00               	movlw	0
 21651  0065E2  ECEB  F035         	call	_RADIO_WriteMode
 21652                           
 21653                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 21654  0065E6  0101               	movlb	1	; () banked
 21655  0065E8  914C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 21656                           
 21657                           ; BSR set to: 1
 21658                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 21659  0065EA  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 21660  0065EC  EC18  F052         	call	_SwTimerStop
 21661                           
 21662                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 21663  0065F0  0101               	movlb	1	; () banked
 21664  0065F2  B94C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 21665  0065F4  0012               	return	
 21666                           
 21667                           ; BSR set to: 1
 21668                           ;radio_driver_SX1276.c: 1107: {;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)2000
      +                          0) - ((SwTimerReadValue(RadioConfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint
      +                          32_t)(SwTimerReadValue(RadioConfiguration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((
      +                          uint32_t)(SwTimerReadValue(RadioConfiguration.t
 21669  0065F6  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21670  0065F8  EC47  F04D         	call	_SwTimerReadValue
 21671  0065FC  0100               	movlb	0	; () banked
 21672  0065FE  518C               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 21673  006600  E108               	bnz	u23600
 21674  006602  0E1F               	movlw	31
 21675  006604  5D89               	subwf	?_SwTimerReadValue& (0+255),w,b
 21676  006606  0EAC               	movlw	172
 21677  006608  598A               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 21678  00660A  0EDF               	movlw	223
 21679  00660C  598B               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 21680  00660E  A0D8               	btfss	status,0,c
 21681  006610  D021               	goto	l20984
 21682  006612                     u23600:
 21683                           
 21684                           ; BSR set to: 0
 21685  006612  0101               	movlb	1	; () banked
 21686  006614  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21687  006616  EC47  F04D         	call	_SwTimerReadValue
 21688  00661A  0E0D               	movlw	13
 21689  00661C  D006               	goto	u23610
 21690  00661E                     u23615:
 21691  00661E  0100               	movlb	0	; () banked
 21692  006620  90D8               	bcf	status,0,c
 21693  006622  338C               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 21694  006624  338B               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 21695  006626  338A               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 21696  006628  3389               	rrcf	?_SwTimerReadValue& (0+255),f,b
 21697  00662A                     u23610:
 21698  00662A  2EE8               	decfsz	wreg,f,c
 21699  00662C  D7F8               	goto	u23615
 21700  00662E  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 21701  006632  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 21702  006636  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 21703  00663A  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 21704  00663E  0E7D               	movlw	125
 21705  006640  6F96               	movwf	___lmul@multiplicand& (0+255),b
 21706  006642  0E00               	movlw	0
 21707  006644  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21708  006646  0E00               	movlw	0
 21709  006648  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21710  00664A  0E00               	movlw	0
 21711  00664C  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21712  00664E  EC19  F049         	call	___lmul	;wreg free
 21713  006652  D021               	goto	L23
 21714  006654                     l20984:
 21715                           
 21716                           ; BSR set to: 0
 21717  006654  0101               	movlb	1	; () banked
 21718  006656  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21719  006658  EC47  F04D         	call	_SwTimerReadValue
 21720  00665C  C089  F092         	movff	?_SwTimerReadValue,___lmul@multiplier
 21721  006660  C08A  F093         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 21722  006664  C08B  F094         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 21723  006668  C08C  F095         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 21724  00666C  0E7D               	movlw	125
 21725  00666E  0100               	movlb	0	; () banked
 21726  006670  6F96               	movwf	___lmul@multiplicand& (0+255),b
 21727  006672  0E00               	movlw	0
 21728  006674  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 21729  006676  0E00               	movlw	0
 21730  006678  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 21731  00667A  0E00               	movlw	0
 21732  00667C  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 21733  00667E  EC19  F049         	call	___lmul	;wreg free
 21734  006682  0E0D               	movlw	13
 21735  006684  D006               	goto	u23620
 21736  006686                     u23625:
 21737  006686  0100               	movlb	0	; () banked
 21738  006688  90D8               	bcf	status,0,c
 21739  00668A  3395               	rrcf	(?___lmul+3)& (0+255),f,b
 21740  00668C  3394               	rrcf	(?___lmul+2)& (0+255),f,b
 21741  00668E  3393               	rrcf	(?___lmul+1)& (0+255),f,b
 21742  006690  3392               	rrcf	?___lmul& (0+255),f,b
 21743  006692                     u23620:
 21744  006692  2EE8               	decfsz	wreg,f,c
 21745  006694  D7F8               	goto	u23625
 21746  006696                     L23:
 21747  006696  C092  F0DB         	movff	?___lmul,_RADIO_FSKPacketSent$800
 21748  00669A  C093  F0DC         	movff	?___lmul+1,_RADIO_FSKPacketSent$800+1
 21749  00669E  C094  F0DD         	movff	?___lmul+2,_RADIO_FSKPacketSent$800+2
 21750  0066A2  C095  F0DE         	movff	?___lmul+3,_RADIO_FSKPacketSent$800+3
 21751  0066A6  0100               	movlb	0	; () banked
 21752  0066A8  51DB               	movf	_RADIO_FSKPacketSent$800& (0+255),w,b
 21753  0066AA  0820               	sublw	32
 21754  0066AC  6FD7               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 21755  0066AE  0E4E               	movlw	78
 21756  0066B0  55DC               	subfwb	(_RADIO_FSKPacketSent$800+1)& (0+255),w,b
 21757  0066B2  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 21758  0066B4  0E00               	movlw	0
 21759  0066B6  55DD               	subfwb	(_RADIO_FSKPacketSent$800+2)& (0+255),w,b
 21760  0066B8  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 21761  0066BA  0E00               	movlw	0
 21762  0066BC  55DE               	subfwb	(_RADIO_FSKPacketSent$800+3)& (0+255),w,b
 21763  0066BE  6FDA               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 21764                           
 21765                           ; BSR set to: 0
 21766                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 21767  0066C0  0101               	movlb	1	; () banked
 21768  0066C2  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 21769  0066C4  EC18  F052         	call	_SwTimerStop
 21770                           
 21771                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 21772  0066C8  C0D7  F0B3         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 21773  0066CC  C0D8  F0B4         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 21774  0066D0  ECEC  F005         	call	_LORAWAN_TxDone	;wreg free
 21775  0066D4  0012               	return		;funcret
 21776  0066D6                     __end_of_RADIO_FSKPacketSent:
 21777                           	opt callstack 0
 21778                           
 21779 ;; *************** function _LORAWAN_TxDone *****************
 21780 ;; Defined at:
 21781 ;;		line 366 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 21782 ;; Parameters:    Size  Location     Type
 21783 ;;  timeOnAir       2   83[BANK0 ] unsigned int 
 21784 ;; Auto vars:     Size  Location     Type
 21785 ;;  minim           4  114[BANK0 ] unsigned long 
 21786 ;;  ticks           4  110[BANK0 ] unsigned long 
 21787 ;;  delta           4  102[BANK0 ] unsigned long 
 21788 ;;  i               1  118[BANK0 ] unsigned char 
 21789 ;;  found           1  101[BANK0 ] unsigned char 
 21790 ;; Return value:  Size  Location     Type
 21791 ;;                  1    wreg      void 
 21792 ;; Registers used:
 21793 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21794 ;; Tracked objects:
 21795 ;;		On entry : 0/0
 21796 ;;		On exit  : 0/0
 21797 ;;		Unchanged: 0/0
 21798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21799 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21800 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21801 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21802 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21803 ;;Total ram usage:       36 bytes
 21804 ;; Hardware stack levels used:    1
 21805 ;; Hardware stack levels required when called:   14
 21806 ;; This function calls:
 21807 ;;		_LORAWAN_EnterContinuousReceive
 21808 ;;		_RADIO_GetStatus
 21809 ;;		_RxData
 21810 ;;		_SwTimerIsRunning
 21811 ;;		_SwTimerReadValue
 21812 ;;		_SwTimerSetTimeout
 21813 ;;		_SwTimerStart
 21814 ;;		_SwTimerStop
 21815 ;;		___lldiv
 21816 ;;		___lmul
 21817 ;; This function is called by:
 21818 ;;		_RADIO_TxDone
 21819 ;;		_RADIO_FSKPacketSent
 21820 ;;		_RADIO_WatchdogTimeout
 21821 ;; This function uses a non-reentrant model
 21822 ;;
 21823                           
 21824                           	psect	text100
 21825  000BD8                     __ptext100:
 21826                           	opt callstack 0
 21827  000BD8                     _LORAWAN_TxDone:
 21828                           	opt callstack 11
 21829                           
 21830                           ;lorawan_eu.c: 368: if (loRa.macStatus.macPause == 0)
 21831                           
 21832                           ;incstack = 0
 21833  000BD8  0102               	movlb	2	; () banked
 21834  000BDA  B108               	btfsc	(_loRa+3)& (0+255),0,b
 21835  000BDC  D348               	goto	l20796
 21836                           
 21837                           ; BSR set to: 2
 21838                           ;lorawan_eu.c: 369: {;lorawan_eu.c: 370: bool found = 0;
 21839  000BDE  0E00               	movlw	0
 21840  000BE0  0100               	movlb	0	; () banked
 21841  000BE2  6FC5               	movwf	LORAWAN_TxDone@found& (0+255),b
 21842                           
 21843                           ;lorawan_eu.c: 371: uint8_t i;;lorawan_eu.c: 372: uint32_t delta = 0, minim = (429496729
      +                          5UL), ticks;
 21844  000BE4  0E00               	movlw	0
 21845  000BE6  6FC6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 21846  000BE8  0E00               	movlw	0
 21847  000BEA  6FC7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 21848  000BEC  0E00               	movlw	0
 21849  000BEE  6FC8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 21850  000BF0  0E00               	movlw	0
 21851  000BF2  6FC9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 21852                           
 21853                           ; BSR set to: 0
 21854  000BF4  69D2               	setf	LORAWAN_TxDone@minim& (0+255),b
 21855  000BF6  69D3               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 21856  000BF8  69D4               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 21857  000BFA  69D5               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 21858                           
 21859                           ;lorawan_eu.c: 375: loRa.rx2DelayExpired = 0;
 21860  000BFC  0E00               	movlw	0
 21861  000BFE  0102               	movlb	2	; () banked
 21862  000C00  6FF6               	movwf	(_loRa+241)& (0+255),b
 21863                           
 21864                           ;lorawan_eu.c: 377: loRa.macStatus.macState = BEFORE_RX1;
 21865  000C02  5107               	movf	(_loRa+2)& (0+255),w,b
 21866  000C04  0BF0               	andlw	-16
 21867  000C06  0902               	iorlw	2
 21868  000C08  6F07               	movwf	(_loRa+2)& (0+255),b
 21869                           
 21870                           ; BSR set to: 2
 21871                           ;lorawan_eu.c: 379: i = loRa.lastUsedChannelIndex;
 21872  000C0A  C2DF  F0D6         	movff	_loRa+218,LORAWAN_TxDone@i
 21873                           
 21874                           ; BSR set to: 2
 21875                           ;lorawan_eu.c: 382: if (loRa.lorawanMacStatus.joining == 1)
 21876  000C0E  A505               	btfss	_loRa& (0+255),2,b
 21877  000C10  D0B6               	goto	l20730
 21878                           
 21879                           ; BSR set to: 2
 21880                           ;lorawan_eu.c: 383: {;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( ((
      +                          (uint32_t)(loRa.protocolParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1
      +                          Parameters.dataRate])) << (12)) / 125UL ));
 21881  000C12  0E0F               	movlw	low _rxWindowOffset
 21882  000C14  251C               	addwf	(_loRa+23)& (0+255),w,b
 21883  000C16  6EF6               	movwf	tblptrl,c
 21884  000C18  6AF7               	clrf	tblptrh,c
 21885  000C1A  0EFF               	movlw	high _rxWindowOffset
 21886  000C1C  22F7               	addwfc	tblptrh,f,c
 21887  000C1E                     	if	1	;There are 3 active tblptr bytes
 21888  000C1E  6AF8               	clrf	tblptru,c
 21889  000C20  0E00               	movlw	low (__mediumconst shr (0+16))
 21890  000C22  22F8               	addwfc	tblptru,f,c
 21891  000C24                     	endif
 21892  000C24  0008               	tblrd		*
 21893  000C26  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 21894  000C2A  519D               	movf	(_loRa+152)& (0+255),w,b
 21895  000C2C  0100               	movlb	0	; () banked
 21896  000C2E  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21897  000C30  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21898  000C32  0E00               	movlw	0
 21899  000C34  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21900  000C36  0EFF               	movlw	255
 21901  000C38  0102               	movlb	2	; () banked
 21902  000C3A  219E               	addwfc	(_loRa+153)& (0+255),w,b
 21903  000C3C  0100               	movlb	0	; () banked
 21904  000C3E  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21905  000C40  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21906  000C42  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21907  000C44  0E0C               	movlw	12
 21908  000C46                     u23135:
 21909  000C46  90D8               	bcf	status,0,c
 21910  000C48  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21911  000C4A  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21912  000C4C  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21913  000C4E  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21914  000C50  2EE8               	decfsz	wreg,f,c
 21915  000C52  D7F9               	goto	u23135
 21916  000C54  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21917  000C58  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21918  000C5C  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21919  000C60  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21920  000C64  0E7D               	movlw	125
 21921  000C66  6F64               	movwf	___lldiv@divisor& (0+255),b
 21922  000C68  0E00               	movlw	0
 21923  000C6A  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 21924  000C6C  0E00               	movlw	0
 21925  000C6E  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 21926  000C70  0E00               	movlw	0
 21927  000C72  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 21928  000C74  ECD9  F042         	call	___lldiv	;wreg free
 21929  000C78  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21930  000C7C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21931  000C80  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21932  000C84  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21933  000C88  0102               	movlb	2	; () banked
 21934  000C8A  51E7               	movf	(_loRa+226)& (0+255),w,b
 21935  000C8C  ECC2  F04C         	call	_SwTimerSetTimeout
 21936                           
 21937                           ;lorawan_eu.c: 385: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 21938  000C90  0E0F               	movlw	low _rxWindowOffset
 21939  000C92  0102               	movlb	2	; () banked
 21940  000C94  2521               	addwf	(_loRa+28)& (0+255),w,b
 21941  000C96  6EF6               	movwf	tblptrl,c
 21942  000C98  6AF7               	clrf	tblptrh,c
 21943  000C9A  0EFF               	movlw	high _rxWindowOffset
 21944  000C9C  22F7               	addwfc	tblptrh,f,c
 21945  000C9E                     	if	1	;There are 3 active tblptr bytes
 21946  000C9E  6AF8               	clrf	tblptru,c
 21947  000CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 21948  000CA2  22F8               	addwfc	tblptru,f,c
 21949  000CA4                     	endif
 21950  000CA4  0008               	tblrd		*
 21951  000CA6  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 21952  000CAA  519F               	movf	(_loRa+154)& (0+255),w,b
 21953  000CAC  0100               	movlb	0	; () banked
 21954  000CAE  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 21955  000CB0  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 21956  000CB2  0E00               	movlw	0
 21957  000CB4  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 21958  000CB6  0EFF               	movlw	255
 21959  000CB8  0102               	movlb	2	; () banked
 21960  000CBA  21A0               	addwfc	(_loRa+155)& (0+255),w,b
 21961  000CBC  0100               	movlb	0	; () banked
 21962  000CBE  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 21963  000CC0  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 21964  000CC2  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 21965  000CC4  0E0C               	movlw	12
 21966  000CC6                     u23145:
 21967  000CC6  90D8               	bcf	status,0,c
 21968  000CC8  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 21969  000CCA  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 21970  000CCC  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 21971  000CCE  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 21972  000CD0  2EE8               	decfsz	wreg,f,c
 21973  000CD2  D7F9               	goto	u23145
 21974  000CD4  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 21975  000CD8  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 21976  000CDC  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 21977  000CE0  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 21978  000CE4  0E7D               	movlw	125
 21979  000CE6  6F64               	movwf	___lldiv@divisor& (0+255),b
 21980  000CE8  0E00               	movlw	0
 21981  000CEA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 21982  000CEC  0E00               	movlw	0
 21983  000CEE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 21984  000CF0  0E00               	movlw	0
 21985  000CF2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 21986  000CF4  ECD9  F042         	call	___lldiv	;wreg free
 21987  000CF8  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 21988  000CFC  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 21989  000D00  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 21990  000D04  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 21991  000D08  0102               	movlb	2	; () banked
 21992  000D0A  51E8               	movf	(_loRa+227)& (0+255),w,b
 21993  000D0C  ECC2  F04C         	call	_SwTimerSetTimeout
 21994                           
 21995                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept1TimerId);
 21996  000D10  0102               	movlb	2	; () banked
 21997  000D12  51E7               	movf	(_loRa+226)& (0+255),w,b
 21998  000D14  ECB6  F040         	call	_SwTimerStart
 21999                           
 22000                           ;lorawan_eu.c: 387: SwTimerStart(loRa.joinAccept2TimerId);
 22001  000D18  0102               	movlb	2	; () banked
 22002  000D1A  51E8               	movf	(_loRa+227)& (0+255),w,b
 22003  000D1C  ECB6  F040         	call	_SwTimerStart
 22004                           
 22005                           ;lorawan_eu.c: 389: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 22006  000D20  C2E0  F092         	movff	_loRa+219,___lmul@multiplier
 22007  000D24  C2E1  F093         	movff	_loRa+220,___lmul@multiplier+1
 22008  000D28  0100               	movlb	0	; () banked
 22009  000D2A  6B94               	clrf	(___lmul@multiplier+2)& (0+255),b
 22010  000D2C  6B95               	clrf	(___lmul@multiplier+3)& (0+255),b
 22011  000D2E  0ED6               	movlw	214
 22012  000D30  6F96               	movwf	___lmul@multiplicand& (0+255),b
 22013  000D32  0E0B               	movlw	11
 22014  000D34  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22015  000D36  0E00               	movlw	0
 22016  000D38  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22017  000D3A  0E00               	movlw	0
 22018  000D3C  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22019  000D3E  EC19  F049         	call	___lmul	;wreg free
 22020  000D42  0EFF               	movlw	255
 22021  000D44  0100               	movlb	0	; () banked
 22022  000D46  2592               	addwf	?___lmul& (0+255),w,b
 22023  000D48  6FCA               	movwf	_LORAWAN_TxDone$6790& (0+255),b
 22024  000D4A  0EFF               	movlw	255
 22025  000D4C  2193               	addwfc	(?___lmul+1)& (0+255),w,b
 22026  000D4E  6FCB               	movwf	(_LORAWAN_TxDone$6790+1)& (0+255),b
 22027  000D50  0EFF               	movlw	255
 22028  000D52  2194               	addwfc	(?___lmul+2)& (0+255),w,b
 22029  000D54  6FCC               	movwf	(_LORAWAN_TxDone$6790+2)& (0+255),b
 22030  000D56  0EFF               	movlw	255
 22031  000D58  2195               	addwfc	(?___lmul+3)& (0+255),w,b
 22032  000D5A  6FCD               	movwf	(_LORAWAN_TxDone$6790+3)& (0+255),b
 22033                           
 22034                           ; BSR set to: 0
 22035                           ;lorawan_eu.c: 389: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 22036  000D5C  C0CA  F092         	movff	_LORAWAN_TxDone$6790,___lmul@multiplier
 22037  000D60  C0CB  F093         	movff	_LORAWAN_TxDone$6790+1,___lmul@multiplier+1
 22038  000D64  C0CC  F094         	movff	_LORAWAN_TxDone$6790+2,___lmul@multiplier+2
 22039  000D68  C0CD  F095         	movff	_LORAWAN_TxDone$6790+3,___lmul@multiplier+3
 22040  000D6C  C0B3  F096         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 22041  000D70  C0B4  F097         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 22042  000D74  6B98               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22043  000D76  6B99               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22044  000D78  EC19  F049         	call	___lmul	;wreg free
 22045  000D7C  D0CE               	goto	L24
 22046  000D7E                     l20730:
 22047                           
 22048                           ; BSR set to: 2
 22049                           ;lorawan_eu.c: 391: else;lorawan_eu.c: 392: {;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.
      +                          receiveWindow1TimerId, ( (((uint32_t)(loRa.protocolParameters.receiveDelay1 + rxWindowOf
      +                          fset[loRa.receiveWindow1Parameters.dataRate])) << (12)) / 125UL ));
 22050  000D7E  0E0F               	movlw	low _rxWindowOffset
 22051  000D80  251C               	addwf	(_loRa+23)& (0+255),w,b
 22052  000D82  6EF6               	movwf	tblptrl,c
 22053  000D84  6AF7               	clrf	tblptrh,c
 22054  000D86  0EFF               	movlw	high _rxWindowOffset
 22055  000D88  22F7               	addwfc	tblptrh,f,c
 22056  000D8A                     	if	1	;There are 3 active tblptr bytes
 22057  000D8A  6AF8               	clrf	tblptru,c
 22058  000D8C  0E00               	movlw	low (__mediumconst shr (0+16))
 22059  000D8E  22F8               	addwfc	tblptru,f,c
 22060  000D90                     	endif
 22061  000D90  0008               	tblrd		*
 22062  000D92  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 22063  000D96  5199               	movf	(_loRa+148)& (0+255),w,b
 22064  000D98  0100               	movlb	0	; () banked
 22065  000D9A  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22066  000D9C  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22067  000D9E  0E00               	movlw	0
 22068  000DA0  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22069  000DA2  0EFF               	movlw	255
 22070  000DA4  0102               	movlb	2	; () banked
 22071  000DA6  219A               	addwfc	(_loRa+149)& (0+255),w,b
 22072  000DA8  0100               	movlb	0	; () banked
 22073  000DAA  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22074  000DAC  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22075  000DAE  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22076  000DB0  0E0C               	movlw	12
 22077  000DB2                     u23155:
 22078  000DB2  90D8               	bcf	status,0,c
 22079  000DB4  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22080  000DB6  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22081  000DB8  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22082  000DBA  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22083  000DBC  2EE8               	decfsz	wreg,f,c
 22084  000DBE  D7F9               	goto	u23155
 22085  000DC0  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22086  000DC4  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22087  000DC8  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22088  000DCC  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22089  000DD0  0E7D               	movlw	125
 22090  000DD2  6F64               	movwf	___lldiv@divisor& (0+255),b
 22091  000DD4  0E00               	movlw	0
 22092  000DD6  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22093  000DD8  0E00               	movlw	0
 22094  000DDA  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22095  000DDC  0E00               	movlw	0
 22096  000DDE  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22097  000DE0  ECD9  F042         	call	___lldiv	;wreg free
 22098  000DE4  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22099  000DE8  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22100  000DEC  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22101  000DF0  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22102  000DF4  0102               	movlb	2	; () banked
 22103  000DF6  51E9               	movf	(_loRa+228)& (0+255),w,b
 22104  000DF8  ECC2  F04C         	call	_SwTimerSetTimeout
 22105                           
 22106                           ;lorawan_eu.c: 394: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22107  000DFC  0E0F               	movlw	low _rxWindowOffset
 22108  000DFE  0102               	movlb	2	; () banked
 22109  000E00  2521               	addwf	(_loRa+28)& (0+255),w,b
 22110  000E02  6EF6               	movwf	tblptrl,c
 22111  000E04  6AF7               	clrf	tblptrh,c
 22112  000E06  0EFF               	movlw	high _rxWindowOffset
 22113  000E08  22F7               	addwfc	tblptrh,f,c
 22114  000E0A                     	if	1	;There are 3 active tblptr bytes
 22115  000E0A  6AF8               	clrf	tblptru,c
 22116  000E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 22117  000E0E  22F8               	addwfc	tblptru,f,c
 22118  000E10                     	endif
 22119  000E10  0008               	tblrd		*
 22120  000E12  CFF5 F0B5          	movff	tablat,??_LORAWAN_TxDone
 22121  000E16  519B               	movf	(_loRa+150)& (0+255),w,b
 22122  000E18  0100               	movlb	0	; () banked
 22123  000E1A  25B5               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22124  000E1C  6FB6               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22125  000E1E  0E00               	movlw	0
 22126  000E20  BFB5               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22127  000E22  0EFF               	movlw	255
 22128  000E24  0102               	movlb	2	; () banked
 22129  000E26  219C               	addwfc	(_loRa+151)& (0+255),w,b
 22130  000E28  0100               	movlb	0	; () banked
 22131  000E2A  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22132  000E2C  6BB8               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22133  000E2E  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22134  000E30  0E0C               	movlw	12
 22135  000E32                     u23165:
 22136  000E32  90D8               	bcf	status,0,c
 22137  000E34  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22138  000E36  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22139  000E38  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22140  000E3A  37B9               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22141  000E3C  2EE8               	decfsz	wreg,f,c
 22142  000E3E  D7F9               	goto	u23165
 22143  000E40  C0B6  F060         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22144  000E44  C0B7  F061         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22145  000E48  C0B8  F062         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22146  000E4C  C0B9  F063         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22147  000E50  0E7D               	movlw	125
 22148  000E52  6F64               	movwf	___lldiv@divisor& (0+255),b
 22149  000E54  0E00               	movlw	0
 22150  000E56  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22151  000E58  0E00               	movlw	0
 22152  000E5A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22153  000E5C  0E00               	movlw	0
 22154  000E5E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22155  000E60  ECD9  F042         	call	___lldiv	;wreg free
 22156  000E64  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22157  000E68  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22158  000E6C  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22159  000E70  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22160  000E74  0102               	movlb	2	; () banked
 22161  000E76  51EA               	movf	(_loRa+229)& (0+255),w,b
 22162  000E78  ECC2  F04C         	call	_SwTimerSetTimeout
 22163                           
 22164                           ;lorawan_eu.c: 395: SwTimerStart(loRa.receiveWindow1TimerId);
 22165  000E7C  0102               	movlb	2	; () banked
 22166  000E7E  51E9               	movf	(_loRa+228)& (0+255),w,b
 22167  000E80  ECB6  F040         	call	_SwTimerStart
 22168                           
 22169                           ;lorawan_eu.c: 396: if (CLASS_A == loRa.deviceClass)
 22170  000E84  0102               	movlb	2	; () banked
 22171  000E86  5117               	movf	(_loRa+18)& (0+255),w,b
 22172  000E88  A4D8               	btfss	status,2,c
 22173  000E8A  D003               	goto	l1040
 22174                           
 22175                           ; BSR set to: 2
 22176                           ;lorawan_eu.c: 397: {;lorawan_eu.c: 398: SwTimerStart(loRa.receiveWindow2TimerId);
 22177  000E8C  51EA               	movf	(_loRa+229)& (0+255),w,b
 22178  000E8E  ECB6  F040         	call	_SwTimerStart
 22179  000E92                     l1040:
 22180                           
 22181                           ;lorawan_eu.c: 399: };lorawan_eu.c: 401: Channels[i].channelTimer = ((uint32_t)timeOnAir
      +                          ) * (((uint32_t)Channels[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 22182  000E92  0100               	movlb	0	; () banked
 22183  000E94  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22184  000E96  0D0E               	mullw	14
 22185  000E98  0E1A               	movlw	low (_Channels+6)
 22186  000E9A  24F3               	addwf	prodl,w,c
 22187  000E9C  6ED9               	movwf	fsr2l,c
 22188  000E9E  0E04               	movlw	high (_Channels+6)
 22189  000EA0  20F4               	addwfc	prodh,w,c
 22190  000EA2  6EDA               	movwf	fsr2h,c
 22191  000EA4  CFDE F0B5          	movff	postinc2,??_LORAWAN_TxDone
 22192  000EA8  CFDD F0B6          	movff	postdec2,??_LORAWAN_TxDone+1
 22193  000EAC  51B5               	movf	??_LORAWAN_TxDone& (0+255),w,b
 22194  000EAE  6FB7               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22195  000EB0  51B6               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22196  000EB2  6FB8               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22197  000EB4  6BB9               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22198  000EB6  6BBA               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 22199  000EB8  0E01               	movlw	1
 22200  000EBA  25B7               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22201  000EBC  6F92               	movwf	___lmul@multiplier& (0+255),b
 22202  000EBE  0E00               	movlw	0
 22203  000EC0  21B8               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22204  000EC2  6F93               	movwf	(___lmul@multiplier+1)& (0+255),b
 22205  000EC4  0E00               	movlw	0
 22206  000EC6  21B9               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 22207  000EC8  6F94               	movwf	(___lmul@multiplier+2)& (0+255),b
 22208  000ECA  0E00               	movlw	0
 22209  000ECC  21BA               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 22210  000ECE  6F95               	movwf	(___lmul@multiplier+3)& (0+255),b
 22211  000ED0  C2E0  F096         	movff	_loRa+219,___lmul@multiplicand
 22212  000ED4  C2E1  F097         	movff	_loRa+220,___lmul@multiplicand+1
 22213  000ED8  6B98               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22214  000EDA  6B99               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22215  000EDC  EC19  F049         	call	___lmul	;wreg free
 22216  000EE0  0EFF               	movlw	255
 22217  000EE2  0100               	movlb	0	; () banked
 22218  000EE4  2592               	addwf	?___lmul& (0+255),w,b
 22219  000EE6  6FCA               	movwf	_LORAWAN_TxDone$6790& (0+255),b
 22220  000EE8  0EFF               	movlw	255
 22221  000EEA  2193               	addwfc	(?___lmul+1)& (0+255),w,b
 22222  000EEC  6FCB               	movwf	(_LORAWAN_TxDone$6790+1)& (0+255),b
 22223  000EEE  0EFF               	movlw	255
 22224  000EF0  2194               	addwfc	(?___lmul+2)& (0+255),w,b
 22225  000EF2  6FCC               	movwf	(_LORAWAN_TxDone$6790+2)& (0+255),b
 22226  000EF4  0EFF               	movlw	255
 22227  000EF6  2195               	addwfc	(?___lmul+3)& (0+255),w,b
 22228  000EF8  6FCD               	movwf	(_LORAWAN_TxDone$6790+3)& (0+255),b
 22229                           
 22230                           ;lorawan_eu.c: 399: };lorawan_eu.c: 401: Channels[i].channelTimer = ((uint32_t)timeOnAir
      +                          ) * (((uint32_t)Channels[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 22231  000EFA  C0CA  F092         	movff	_LORAWAN_TxDone$6790,___lmul@multiplier
 22232  000EFE  C0CB  F093         	movff	_LORAWAN_TxDone$6790+1,___lmul@multiplier+1
 22233  000F02  C0CC  F094         	movff	_LORAWAN_TxDone$6790+2,___lmul@multiplier+2
 22234  000F06  C0CD  F095         	movff	_LORAWAN_TxDone$6790+3,___lmul@multiplier+3
 22235  000F0A  C0B3  F096         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 22236  000F0E  C0B4  F097         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 22237  000F12  6B98               	clrf	(___lmul@multiplicand+2)& (0+255),b
 22238  000F14  6B99               	clrf	(___lmul@multiplicand+3)& (0+255),b
 22239  000F16  EC19  F049         	call	___lmul	;wreg free
 22240  000F1A                     L24:
 22241  000F1A  0100               	movlb	0	; () banked
 22242  000F1C  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22243  000F1E  0D0E               	mullw	14
 22244  000F20  0E1C               	movlw	low (_Channels+8)
 22245  000F22  24F3               	addwf	prodl,w,c
 22246  000F24  6ED9               	movwf	fsr2l,c
 22247  000F26  0E04               	movlw	high (_Channels+8)
 22248  000F28  20F4               	addwfc	prodh,w,c
 22249  000F2A  6EDA               	movwf	fsr2h,c
 22250  000F2C  C092  FFDE         	movff	?___lmul,postinc2
 22251  000F30  C093  FFDE         	movff	?___lmul+1,postinc2
 22252  000F34  C094  FFDE         	movff	?___lmul+2,postinc2
 22253  000F38  C095  FFDE         	movff	?___lmul+3,postinc2
 22254                           
 22255                           ; BSR set to: 0
 22256                           ;lorawan_eu.c: 402: };lorawan_eu.c: 404: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 22257  000F3C  0102               	movlb	2	; () banked
 22258  000F3E  51EE               	movf	(_loRa+233)& (0+255),w,b
 22259  000F40  EC83  F051         	call	_SwTimerIsRunning
 22260  000F44  0900               	iorlw	0
 22261  000F46  B4D8               	btfsc	status,2,c
 22262  000F48  D078               	goto	l20748
 22263                           
 22264                           ;lorawan_eu.c: 405: {;lorawan_eu.c: 406: SwTimerStop(loRa.dutyCycleTimerId);
 22265  000F4A  0102               	movlb	2	; () banked
 22266  000F4C  51EE               	movf	(_loRa+233)& (0+255),w,b
 22267  000F4E  EC18  F052         	call	_SwTimerStop
 22268                           
 22269                           ;lorawan_eu.c: 408: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 22270  000F52  0102               	movlb	2	; () banked
 22271  000F54  51EE               	movf	(_loRa+233)& (0+255),w,b
 22272  000F56  EC47  F04D         	call	_SwTimerReadValue
 22273  000F5A  C089  F0CE         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 22274  000F5E  C08A  F0CF         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 22275  000F62  C08B  F0D0         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 22276  000F66  C08C  F0D1         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 22277                           
 22278                           ;lorawan_eu.c: 409: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 22279  000F6A  0100               	movlb	0	; () banked
 22280  000F6C  51D1               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 22281  000F6E  E108               	bnz	u23190
 22282  000F70  0E1F               	movlw	31
 22283  000F72  5DCE               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 22284  000F74  0EAC               	movlw	172
 22285  000F76  59CF               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 22286  000F78  0EDF               	movlw	223
 22287  000F7A  59D0               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 22288  000F7C  A0D8               	btfss	status,0,c
 22289  000F7E  D024               	goto	l20744
 22290  000F80                     u23190:
 22291                           
 22292                           ; BSR set to: 0
 22293  000F80  C0CE  F0B5         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 22294  000F84  C0CF  F0B6         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 22295  000F88  C0D0  F0B7         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 22296  000F8C  C0D1  F0B8         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 22297  000F90  0E0D               	movlw	13
 22298  000F92  D005               	goto	u23200
 22299  000F94                     u23205:
 22300  000F94  90D8               	bcf	status,0,c
 22301  000F96  33B8               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22302  000F98  33B7               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22303  000F9A  33B6               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22304  000F9C  33B5               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 22305  000F9E                     u23200:
 22306  000F9E  2EE8               	decfsz	wreg,f,c
 22307  000FA0  D7F9               	goto	u23205
 22308  000FA2  C0B5  F092         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 22309  000FA6  C0B6  F093         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 22310  000FAA  C0B7  F094         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 22311  000FAE  C0B8  F095         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 22312  000FB2  0E7D               	movlw	125
 22313  000FB4  6F96               	movwf	___lmul@multiplicand& (0+255),b
 22314  000FB6  0E00               	movlw	0
 22315  000FB8  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22316  000FBA  0E00               	movlw	0
 22317  000FBC  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22318  000FBE  0E00               	movlw	0
 22319  000FC0  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22320  000FC2  EC19  F049         	call	___lmul	;wreg free
 22321  000FC6  D01C               	goto	L25
 22322  000FC8                     l20744:
 22323                           
 22324                           ; BSR set to: 0
 22325  000FC8  C0CE  F092         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 22326  000FCC  C0CF  F093         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 22327  000FD0  C0D0  F094         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 22328  000FD4  C0D1  F095         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 22329  000FD8  0E7D               	movlw	125
 22330  000FDA  6F96               	movwf	___lmul@multiplicand& (0+255),b
 22331  000FDC  0E00               	movlw	0
 22332  000FDE  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 22333  000FE0  0E00               	movlw	0
 22334  000FE2  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 22335  000FE4  0E00               	movlw	0
 22336  000FE6  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 22337  000FE8  EC19  F049         	call	___lmul	;wreg free
 22338  000FEC  0E0D               	movlw	13
 22339  000FEE  D006               	goto	u23210
 22340  000FF0                     u23215:
 22341  000FF0  0100               	movlb	0	; () banked
 22342  000FF2  90D8               	bcf	status,0,c
 22343  000FF4  3395               	rrcf	(?___lmul+3)& (0+255),f,b
 22344  000FF6  3394               	rrcf	(?___lmul+2)& (0+255),f,b
 22345  000FF8  3393               	rrcf	(?___lmul+1)& (0+255),f,b
 22346  000FFA  3392               	rrcf	?___lmul& (0+255),f,b
 22347  000FFC                     u23210:
 22348  000FFC  2EE8               	decfsz	wreg,f,c
 22349  000FFE  D7F8               	goto	u23215
 22350  001000                     L25:
 22351  001000  C092  F0BD         	movff	?___lmul,_LORAWAN_TxDone$1673
 22352  001004  C093  F0BE         	movff	?___lmul+1,_LORAWAN_TxDone$1673+1
 22353  001008  C094  F0BF         	movff	?___lmul+2,_LORAWAN_TxDone$1673+2
 22354  00100C  C095  F0C0         	movff	?___lmul+3,_LORAWAN_TxDone$1673+3
 22355  001010  0100               	movlb	0	; () banked
 22356  001012  51BD               	movf	_LORAWAN_TxDone$1673& (0+255),w,b
 22357  001014  0102               	movlb	2	; () banked
 22358  001016  5DCD               	subwf	(_loRa+200)& (0+255),w,b
 22359  001018  0100               	movlb	0	; () banked
 22360  00101A  6FC6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 22361  00101C  51BE               	movf	(_LORAWAN_TxDone$1673+1)& (0+255),w,b
 22362  00101E  0102               	movlb	2	; () banked
 22363  001020  59CE               	subwfb	(_loRa+201)& (0+255),w,b
 22364  001022  0100               	movlb	0	; () banked
 22365  001024  6FC7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 22366  001026  51BF               	movf	(_LORAWAN_TxDone$1673+2)& (0+255),w,b
 22367  001028  0102               	movlb	2	; () banked
 22368  00102A  59CF               	subwfb	(_loRa+202)& (0+255),w,b
 22369  00102C  0100               	movlb	0	; () banked
 22370  00102E  6FC8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 22371  001030  51C0               	movf	(_LORAWAN_TxDone$1673+3)& (0+255),w,b
 22372  001032  0102               	movlb	2	; () banked
 22373  001034  59D0               	subwfb	(_loRa+203)& (0+255),w,b
 22374  001036  0100               	movlb	0	; () banked
 22375  001038  6FC9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 22376  00103A                     l20748:
 22377                           
 22378                           ;lorawan_eu.c: 410: };lorawan_eu.c: 412: for (i=0; i < 16; i++)
 22379  00103A  0E00               	movlw	0
 22380  00103C  0100               	movlb	0	; () banked
 22381  00103E  6FD6               	movwf	LORAWAN_TxDone@i& (0+255),b
 22382  001040                     l20754:
 22383                           
 22384                           ; BSR set to: 0
 22385                           ;lorawan_eu.c: 413: {;lorawan_eu.c: 414: if ((Channels[i].status == 1) && ( Channels[i].
      +                          channelTimer != 0 ))
 22386  001040  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22387  001042  0D0E               	mullw	14
 22388  001044  0E18               	movlw	low (_Channels+4)
 22389  001046  24F3               	addwf	prodl,w,c
 22390  001048  6ED9               	movwf	fsr2l,c
 22391  00104A  0E04               	movlw	high (_Channels+4)
 22392  00104C  20F4               	addwfc	prodh,w,c
 22393  00104E  6EDA               	movwf	fsr2h,c
 22394  001050  04DE               	decf	postinc2,w,c
 22395  001052  A4D8               	btfss	status,2,c
 22396  001054  D092               	goto	l20772
 22397                           
 22398                           ; BSR set to: 0
 22399  001056  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22400  001058  0D0E               	mullw	14
 22401  00105A  0E1C               	movlw	low (_Channels+8)
 22402  00105C  24F3               	addwf	prodl,w,c
 22403  00105E  6ED9               	movwf	fsr2l,c
 22404  001060  0E04               	movlw	high (_Channels+8)
 22405  001062  20F4               	addwfc	prodh,w,c
 22406  001064  6EDA               	movwf	fsr2h,c
 22407  001066  50DE               	movf	postinc2,w,c
 22408  001068  10DE               	iorwf	postinc2,w,c
 22409  00106A  10DE               	iorwf	postinc2,w,c
 22410  00106C  10DE               	iorwf	postinc2,w,c
 22411  00106E  B4D8               	btfsc	status,2,c
 22412  001070  D084               	goto	l20772
 22413                           
 22414                           ; BSR set to: 0
 22415                           ;lorawan_eu.c: 415: {;lorawan_eu.c: 416: if( i != loRa.lastUsedChannelIndex )
 22416  001072  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22417  001074  0102               	movlb	2	; () banked
 22418  001076  19DF               	xorwf	(_loRa+218)& (0+255),w,b
 22419  001078  B4D8               	btfsc	status,2,c
 22420  00107A  D04C               	goto	l1049
 22421                           
 22422                           ; BSR set to: 2
 22423                           ;lorawan_eu.c: 417: {;lorawan_eu.c: 418: if (Channels[i].channelTimer > delta)
 22424  00107C  0100               	movlb	0	; () banked
 22425  00107E  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22426  001080  0D0E               	mullw	14
 22427  001082  0E1C               	movlw	low (_Channels+8)
 22428  001084  24F3               	addwf	prodl,w,c
 22429  001086  6ED9               	movwf	fsr2l,c
 22430  001088  0E04               	movlw	high (_Channels+8)
 22431  00108A  20F4               	addwfc	prodh,w,c
 22432  00108C  6EDA               	movwf	fsr2h,c
 22433  00108E  50DE               	movf	postinc2,w,c
 22434  001090  5DC6               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 22435  001092  50DE               	movf	postinc2,w,c
 22436  001094  59C7               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22437  001096  50DE               	movf	postinc2,w,c
 22438  001098  59C8               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22439  00109A  50DE               	movf	postinc2,w,c
 22440  00109C  59C9               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22441  00109E  B0D8               	btfsc	status,0,c
 22442  0010A0  D02D               	goto	l20764
 22443                           
 22444                           ; BSR set to: 0
 22445                           ;lorawan_eu.c: 419: {;lorawan_eu.c: 420: Channels[i].channelTimer = Channels[i].channelT
      +                          imer - delta;
 22446  0010A2  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22447  0010A4  0D0E               	mullw	14
 22448  0010A6  0E1C               	movlw	low (_Channels+8)
 22449  0010A8  24F3               	addwf	prodl,w,c
 22450  0010AA  6ED9               	movwf	fsr2l,c
 22451  0010AC  0E04               	movlw	high (_Channels+8)
 22452  0010AE  20F4               	addwfc	prodh,w,c
 22453  0010B0  6EDA               	movwf	fsr2h,c
 22454  0010B2  CFDE F0B5          	movff	postinc2,??_LORAWAN_TxDone
 22455  0010B6  CFDE F0B6          	movff	postinc2,??_LORAWAN_TxDone+1
 22456  0010BA  CFDE F0B7          	movff	postinc2,??_LORAWAN_TxDone+2
 22457  0010BE  CFDE F0B8          	movff	postinc2,??_LORAWAN_TxDone+3
 22458  0010C2  51C6               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 22459  0010C4  5DB5               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 22460  0010C6  6FB9               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22461  0010C8  51C7               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 22462  0010CA  59B6               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 22463  0010CC  6FBA               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22464  0010CE  51C8               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 22465  0010D0  59B7               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 22466  0010D2  6FBB               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22467  0010D4  51C9               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 22468  0010D6  59B8               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 22469  0010D8  6FBC               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22470  0010DA  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22471  0010DC  0D0E               	mullw	14
 22472  0010DE  0E1C               	movlw	low (_Channels+8)
 22473  0010E0  24F3               	addwf	prodl,w,c
 22474  0010E2  6ED9               	movwf	fsr2l,c
 22475  0010E4  0E04               	movlw	high (_Channels+8)
 22476  0010E6  20F4               	addwfc	prodh,w,c
 22477  0010E8  6EDA               	movwf	fsr2h,c
 22478  0010EA  C0B9  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 22479  0010EE  C0BA  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 22480  0010F2  C0BB  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 22481  0010F6  C0BC  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 22482                           
 22483                           ;lorawan_eu.c: 421: }
 22484  0010FA  D00C               	goto	l1049
 22485  0010FC                     l20764:
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;lorawan_eu.c: 422: else;lorawan_eu.c: 423: {;lorawan_eu.c: 424: Channels[i].channelTime
      +                          r = 0;
 22489  0010FC  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22490  0010FE  0D0E               	mullw	14
 22491  001100  0E1C               	movlw	low (_Channels+8)
 22492  001102  24F3               	addwf	prodl,w,c
 22493  001104  6ED9               	movwf	fsr2l,c
 22494  001106  0E04               	movlw	high (_Channels+8)
 22495  001108  20F4               	addwfc	prodh,w,c
 22496  00110A  6EDA               	movwf	fsr2h,c
 22497  00110C  6ADE               	clrf	postinc2,c
 22498  00110E  6ADE               	clrf	postinc2,c
 22499  001110  6ADE               	clrf	postinc2,c
 22500  001112  6ADD               	clrf	postdec2,c
 22501  001114                     l1049:
 22502                           
 22503                           ;lorawan_eu.c: 425: };lorawan_eu.c: 426: };lorawan_eu.c: 427: if ( (Channels[i].channelT
      +                          imer <= minim) && (Channels[i].channelTimer !=0) )
 22504  001114  0100               	movlb	0	; () banked
 22505  001116  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22506  001118  0D0E               	mullw	14
 22507  00111A  0E1C               	movlw	low (_Channels+8)
 22508  00111C  24F3               	addwf	prodl,w,c
 22509  00111E  6ED9               	movwf	fsr2l,c
 22510  001120  0E04               	movlw	high (_Channels+8)
 22511  001122  20F4               	addwfc	prodh,w,c
 22512  001124  6EDA               	movwf	fsr2h,c
 22513  001126  50DE               	movf	postinc2,w,c
 22514  001128  5DD2               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 22515  00112A  50DE               	movf	postinc2,w,c
 22516  00112C  59D3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22517  00112E  50DE               	movf	postinc2,w,c
 22518  001130  59D4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22519  001132  50DE               	movf	postinc2,w,c
 22520  001134  59D5               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22521  001136  A0D8               	btfss	status,0,c
 22522  001138  D020               	goto	l20772
 22523                           
 22524                           ; BSR set to: 0
 22525  00113A  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22526  00113C  0D0E               	mullw	14
 22527  00113E  0E1C               	movlw	low (_Channels+8)
 22528  001140  24F3               	addwf	prodl,w,c
 22529  001142  6ED9               	movwf	fsr2l,c
 22530  001144  0E04               	movlw	high (_Channels+8)
 22531  001146  20F4               	addwfc	prodh,w,c
 22532  001148  6EDA               	movwf	fsr2h,c
 22533  00114A  50DE               	movf	postinc2,w,c
 22534  00114C  10DE               	iorwf	postinc2,w,c
 22535  00114E  10DE               	iorwf	postinc2,w,c
 22536  001150  10DE               	iorwf	postinc2,w,c
 22537  001152  B4D8               	btfsc	status,2,c
 22538  001154  D012               	goto	l20772
 22539                           
 22540                           ; BSR set to: 0
 22541                           ;lorawan_eu.c: 428: {;lorawan_eu.c: 429: minim = Channels[i].channelTimer;
 22542  001156  51D6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22543  001158  0D0E               	mullw	14
 22544  00115A  0E1C               	movlw	low (_Channels+8)
 22545  00115C  24F3               	addwf	prodl,w,c
 22546  00115E  6ED9               	movwf	fsr2l,c
 22547  001160  0E04               	movlw	high (_Channels+8)
 22548  001162  20F4               	addwfc	prodh,w,c
 22549  001164  6EDA               	movwf	fsr2h,c
 22550  001166  CFDE F0D2          	movff	postinc2,LORAWAN_TxDone@minim
 22551  00116A  CFDE F0D3          	movff	postinc2,LORAWAN_TxDone@minim+1
 22552  00116E  CFDE F0D4          	movff	postinc2,LORAWAN_TxDone@minim+2
 22553  001172  CFDE F0D5          	movff	postinc2,LORAWAN_TxDone@minim+3
 22554                           
 22555                           ; BSR set to: 0
 22556                           ;lorawan_eu.c: 430: found = 1;
 22557  001176  0E01               	movlw	1
 22558  001178  6FC5               	movwf	LORAWAN_TxDone@found& (0+255),b
 22559  00117A                     l20772:
 22560                           
 22561                           ; BSR set to: 0
 22562  00117A  2BD6               	incf	LORAWAN_TxDone@i& (0+255),f,b
 22563                           
 22564                           ; BSR set to: 0
 22565  00117C  0E0F               	movlw	15
 22566  00117E  65D6               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 22567  001180  D75F               	goto	l20754
 22568                           
 22569                           ; BSR set to: 0
 22570                           ;lorawan_eu.c: 431: };lorawan_eu.c: 432: };lorawan_eu.c: 433: };lorawan_eu.c: 434: if (f
      +                          ound == 1)
 22571  001182  05C5               	decf	LORAWAN_TxDone@found& (0+255),w,b
 22572  001184  A4D8               	btfss	status,2,c
 22573  001186  D067               	goto	l20790
 22574                           
 22575                           ; BSR set to: 0
 22576                           ;lorawan_eu.c: 435: {;lorawan_eu.c: 436: loRa.lastTimerValue = minim;
 22577  001188  C0D2  F2CD         	movff	LORAWAN_TxDone@minim,_loRa+200
 22578  00118C  C0D3  F2CE         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 22579  001190  C0D4  F2CF         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 22580  001194  C0D5  F2D0         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;lorawan_eu.c: 437: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 22584  001198  51D5               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 22585  00119A  E107               	bnz	u23300
 22586  00119C  29D2               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 22587  00119E  0EFF               	movlw	255
 22588  0011A0  59D3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 22589  0011A2  0E0F               	movlw	15
 22590  0011A4  59D4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 22591  0011A6  A0D8               	btfss	status,0,c
 22592  0011A8  D01C               	goto	l20784
 22593  0011AA                     u23300:
 22594                           
 22595                           ; BSR set to: 0
 22596  0011AA  C0D2  F060         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 22597  0011AE  C0D3  F061         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 22598  0011B2  C0D4  F062         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 22599  0011B6  C0D5  F063         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 22600  0011BA  0E7D               	movlw	125
 22601  0011BC  6F64               	movwf	___lldiv@divisor& (0+255),b
 22602  0011BE  0E00               	movlw	0
 22603  0011C0  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22604  0011C2  0E00               	movlw	0
 22605  0011C4  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22606  0011C6  0E00               	movlw	0
 22607  0011C8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22608  0011CA  ECD9  F042         	call	___lldiv	;wreg free
 22609  0011CE  0E0C               	movlw	12
 22610  0011D0                     u23315:
 22611  0011D0  90D8               	bcf	status,0,c
 22612  0011D2  0100               	movlb	0	; () banked
 22613  0011D4  3760               	rlcf	?___lldiv& (0+255),f,b
 22614  0011D6  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 22615  0011D8  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 22616  0011DA  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 22617  0011DC  2EE8               	decfsz	wreg,f,c
 22618  0011DE  D7F8               	goto	u23315
 22619  0011E0  D022               	goto	L26
 22620  0011E2                     l20784:
 22621                           
 22622                           ; BSR set to: 0
 22623  0011E2  C0D2  F0B5         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 22624  0011E6  C0D3  F0B6         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 22625  0011EA  C0D4  F0B7         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 22626  0011EE  C0D5  F0B8         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 22627  0011F2  0E0C               	movlw	12
 22628  0011F4                     u23325:
 22629  0011F4  90D8               	bcf	status,0,c
 22630  0011F6  37B5               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 22631  0011F8  37B6               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22632  0011FA  37B7               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22633  0011FC  37B8               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22634  0011FE  2EE8               	decfsz	wreg,f,c
 22635  001200  D7F9               	goto	u23325
 22636  001202  C0B5  F060         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 22637  001206  C0B6  F061         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 22638  00120A  C0B7  F062         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 22639  00120E  C0B8  F063         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 22640  001212  0E7D               	movlw	125
 22641  001214  6F64               	movwf	___lldiv@divisor& (0+255),b
 22642  001216  0E00               	movlw	0
 22643  001218  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 22644  00121A  0E00               	movlw	0
 22645  00121C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 22646  00121E  0E00               	movlw	0
 22647  001220  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 22648  001222  ECD9  F042         	call	___lldiv	;wreg free
 22649  001226                     L26:
 22650  001226  C060  F0C1         	movff	?___lldiv,_LORAWAN_TxDone$1674
 22651  00122A  C061  F0C2         	movff	?___lldiv+1,_LORAWAN_TxDone$1674+1
 22652  00122E  C062  F0C3         	movff	?___lldiv+2,_LORAWAN_TxDone$1674+2
 22653  001232  C063  F0C4         	movff	?___lldiv+3,_LORAWAN_TxDone$1674+3
 22654  001236  C0C1  F06D         	movff	_LORAWAN_TxDone$1674,SwTimerSetTimeout@timeout
 22655  00123A  C0C2  F06E         	movff	_LORAWAN_TxDone$1674+1,SwTimerSetTimeout@timeout+1
 22656  00123E  C0C3  F06F         	movff	_LORAWAN_TxDone$1674+2,SwTimerSetTimeout@timeout+2
 22657  001242  C0C4  F070         	movff	_LORAWAN_TxDone$1674+3,SwTimerSetTimeout@timeout+3
 22658  001246  0102               	movlb	2	; () banked
 22659  001248  51EE               	movf	(_loRa+233)& (0+255),w,b
 22660  00124A  ECC2  F04C         	call	_SwTimerSetTimeout
 22661                           
 22662                           ;lorawan_eu.c: 438: SwTimerStart (loRa.dutyCycleTimerId);
 22663  00124E  0102               	movlb	2	; () banked
 22664  001250  51EE               	movf	(_loRa+233)& (0+255),w,b
 22665  001252  ECB6  F040         	call	_SwTimerStart
 22666  001256                     l20790:
 22667                           
 22668                           ;lorawan_eu.c: 439: };lorawan_eu.c: 440: if (CLASS_C == loRa.deviceClass)
 22669  001256  0E02               	movlw	2
 22670  001258  0102               	movlb	2	; () banked
 22671  00125A  1917               	xorwf	(_loRa+18)& (0+255),w,b
 22672  00125C  A4D8               	btfss	status,2,c
 22673  00125E  0012               	return	
 22674                           
 22675                           ; BSR set to: 2
 22676                           ;lorawan_eu.c: 441: {;lorawan_eu.c: 442: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 22677  001260  5107               	movf	(_loRa+2)& (0+255),w,b
 22678  001262  0BF0               	andlw	-16
 22679  001264  0908               	iorlw	8
 22680  001266  6F07               	movwf	(_loRa+2)& (0+255),b
 22681                           
 22682                           ; BSR set to: 2
 22683                           ;lorawan_eu.c: 443: LORAWAN_EnterContinuousReceive();
 22684  001268  EC18  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 22685  00126C  0012               	return	
 22686  00126E                     l20796:
 22687                           
 22688                           ; BSR set to: 2
 22689                           ;lorawan_eu.c: 446: else;lorawan_eu.c: 447: {;lorawan_eu.c: 448: if ((RADIO_GetStatus() 
      +                          & (1 << (4))) != 0)
 22690  00126E  EC8A  F054         	call	_RADIO_GetStatus	;wreg free
 22691  001272  0100               	movlb	0	; () banked
 22692  001274  6FB5               	movwf	??_LORAWAN_TxDone& (0+255),b
 22693  001276  A9B5               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 22694  001278  D014               	goto	l20800
 22695                           
 22696                           ; BSR set to: 0
 22697                           ;lorawan_eu.c: 449: {;lorawan_eu.c: 451: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 22698  00127A  0E00               	movlw	0
 22699  00127C  6F60               	movwf	RxData@pData& (0+255),b
 22700  00127E  0E00               	movlw	0
 22701  001280  6F61               	movwf	(RxData@pData+1)& (0+255),b
 22702  001282  0E00               	movlw	0
 22703  001284  6F62               	movwf	RxData@dataLength& (0+255),b
 22704  001286  0E02               	movlw	2
 22705  001288  6F63               	movwf	RxData@status& (0+255),b
 22706  00128A  D801               	call	u23358
 22707  00128C  0012               	return	
 22708  00128E                     u23358:
 22709  00128E  0005               	push	
 22710  001290  6EFA               	movwf	pclath,c
 22711  001292  0101               	movlb	1	; () banked
 22712  001294  510E               	movf	_rxPayload& (0+255),w,b
 22713  001296  6EFD               	movwf	tosl,c
 22714  001298  510F               	movf	(_rxPayload+1)& (0+255),w,b
 22715  00129A  6EFE               	movwf	tosh,c
 22716  00129C  6AFF               	clrf	tosu,c
 22717  00129E  50FA               	movf	pclath,w,c
 22718  0012A0  0012               	return		;indir
 22719  0012A2                     l20800:
 22720                           
 22721                           ; BSR set to: 0
 22722                           ;lorawan_eu.c: 453: else;lorawan_eu.c: 454: {;lorawan_eu.c: 456: if ( rxPayload.RxAppDat
      +                          a != (0) )
 22723  0012A2  0101               	movlb	1	; () banked
 22724  0012A4  510E               	movf	_rxPayload& (0+255),w,b
 22725  0012A6  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 22726  0012A8  B4D8               	btfsc	status,2,c
 22727  0012AA  0012               	return	
 22728                           
 22729                           ; BSR set to: 1
 22730                           ;lorawan_eu.c: 457: {;lorawan_eu.c: 458: rxPayload.RxAppData( (0), 0, RADIO_OK );
 22731  0012AC  0E00               	movlw	0
 22732  0012AE  0100               	movlb	0	; () banked
 22733  0012B0  6F60               	movwf	RxData@pData& (0+255),b
 22734  0012B2  0E00               	movlw	0
 22735  0012B4  6F61               	movwf	(RxData@pData+1)& (0+255),b
 22736  0012B6  0E00               	movlw	0
 22737  0012B8  6F62               	movwf	RxData@dataLength& (0+255),b
 22738  0012BA  0E03               	movlw	3
 22739  0012BC  6F63               	movwf	RxData@status& (0+255),b
 22740  0012BE  D801               	call	u23378
 22741  0012C0  0012               	return	
 22742  0012C2                     u23378:
 22743  0012C2  0005               	push	
 22744  0012C4  6EFA               	movwf	pclath,c
 22745  0012C6  0101               	movlb	1	; () banked
 22746  0012C8  510E               	movf	_rxPayload& (0+255),w,b
 22747  0012CA  6EFD               	movwf	tosl,c
 22748  0012CC  510F               	movf	(_rxPayload+1)& (0+255),w,b
 22749  0012CE  6EFE               	movwf	tosh,c
 22750  0012D0  6AFF               	clrf	tosu,c
 22751  0012D2  50FA               	movf	pclath,w,c
 22752  0012D4  0012               	return		;indir
 22753  0012D6                     __end_of_LORAWAN_TxDone:
 22754                           	opt callstack 0
 22755                           
 22756 ;; *************** function _SwTimerReadValue *****************
 22757 ;; Defined at:
 22758 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22759 ;; Parameters:    Size  Location     Type
 22760 ;;  timerId         1    wreg     unsigned char 
 22761 ;; Auto vars:     Size  Location     Type
 22762 ;;  timerId         1   49[BANK0 ] unsigned char 
 22763 ;;  ticksCount      4   45[BANK0 ] unsigned long 
 22764 ;; Return value:  Size  Location     Type
 22765 ;;                  4   41[BANK0 ] unsigned long 
 22766 ;; Registers used:
 22767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22768 ;; Tracked objects:
 22769 ;;		On entry : 0/0
 22770 ;;		On exit  : 0/0
 22771 ;;		Unchanged: 0/0
 22772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22773 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22774 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22776 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22777 ;;Total ram usage:        9 bytes
 22778 ;; Hardware stack levels used:    1
 22779 ;; Hardware stack levels required when called:   10
 22780 ;; This function calls:
 22781 ;;		_SwTimersInterrupt
 22782 ;; This function is called by:
 22783 ;;		_RADIO_TxDone
 22784 ;;		_RADIO_FSKPacketSent
 22785 ;;		_LORAWAN_TxDone
 22786 ;;		_LORAWAN_Pause
 22787 ;; This function uses a non-reentrant model
 22788 ;;
 22789                           
 22790                           	psect	text101
 22791  009A8E                     __ptext101:
 22792                           	opt callstack 0
 22793  009A8E                     _SwTimerReadValue:
 22794                           	opt callstack 14
 22795                           
 22796                           ;incstack = 0
 22797                           ;SwTimerReadValue@timerId stored from wreg
 22798  009A8E  0100               	movlb	0	; () banked
 22799  009A90  6F91               	movwf	SwTimerReadValue@timerId& (0+255),b
 22800                           
 22801                           ;sw_timer.c: 195: uint32_t ticksCount;;sw_timer.c: 197: (INTCONbits.GIE = 0);
 22802  009A92  9EF2               	bcf	4082,7,c	;volatile
 22803                           
 22804                           ;sw_timer.c: 200: SwTimersInterrupt();
 22805  009A94  ECEE  F034         	call	_SwTimersInterrupt	;wreg free
 22806                           
 22807                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 22808  009A98  0100               	movlb	0	; () banked
 22809  009A9A  5191               	movf	SwTimerReadValue@timerId& (0+255),w,b
 22810  009A9C  0D08               	mullw	8
 22811  009A9E  0E00               	movlw	low _swTimers
 22812  009AA0  24F3               	addwf	prodl,w,c
 22813  009AA2  6ED9               	movwf	fsr2l,c
 22814  009AA4  0E03               	movlw	high _swTimers
 22815  009AA6  20F4               	addwfc	prodh,w,c
 22816  009AA8  6EDA               	movwf	fsr2h,c
 22817  009AAA  CFDE F08D          	movff	postinc2,SwTimerReadValue@ticksCount
 22818  009AAE  CFDE F08E          	movff	postinc2,SwTimerReadValue@ticksCount+1
 22819  009AB2  CFDE F08F          	movff	postinc2,SwTimerReadValue@ticksCount+2
 22820  009AB6  CFDE F090          	movff	postinc2,SwTimerReadValue@ticksCount+3
 22821                           
 22822                           ; BSR set to: 0
 22823                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 22824  009ABA  8EF2               	bsf	4082,7,c	;volatile
 22825                           
 22826                           ; BSR set to: 0
 22827                           ;sw_timer.c: 204: return ticksCount;
 22828  009ABC  C08D  F089         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 22829  009AC0  C08E  F08A         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 22830  009AC4  C08F  F08B         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 22831  009AC8  C090  F08C         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 22832                           
 22833                           ; BSR set to: 0
 22834  009ACC  0012               	return		;funcret
 22835  009ACE                     __end_of_SwTimerReadValue:
 22836                           	opt callstack 0
 22837                           
 22838 ;; *************** function _SwTimerIsRunning *****************
 22839 ;; Defined at:
 22840 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 22841 ;; Parameters:    Size  Location     Type
 22842 ;;  timerId         1    wreg     unsigned char 
 22843 ;; Auto vars:     Size  Location     Type
 22844 ;;  timerId         1    0[BANK0 ] unsigned char 
 22845 ;;  isRunning       1    1[BANK0 ] unsigned char 
 22846 ;; Return value:  Size  Location     Type
 22847 ;;                  1    wreg      unsigned char 
 22848 ;; Registers used:
 22849 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22850 ;; Tracked objects:
 22851 ;;		On entry : 0/0
 22852 ;;		On exit  : 0/0
 22853 ;;		Unchanged: 0/0
 22854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22856 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22858 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22859 ;;Total ram usage:        2 bytes
 22860 ;; Hardware stack levels used:    1
 22861 ;; Hardware stack levels required when called:    7
 22862 ;; This function calls:
 22863 ;;		Nothing
 22864 ;; This function is called by:
 22865 ;;		_LORAWAN_TxDone
 22866 ;; This function uses a non-reentrant model
 22867 ;;
 22868                           
 22869                           	psect	text102
 22870  00A306                     __ptext102:
 22871                           	opt callstack 0
 22872  00A306                     _SwTimerIsRunning:
 22873                           	opt callstack 17
 22874                           
 22875                           ; BSR set to: 0
 22876                           ;incstack = 0
 22877                           ;SwTimerIsRunning@timerId stored from wreg
 22878  00A306  0100               	movlb	0	; () banked
 22879  00A308  6F60               	movwf	SwTimerIsRunning@timerId& (0+255),b
 22880                           
 22881                           ;sw_timer.c: 209: uint8_t isRunning;;sw_timer.c: 211: (INTCONbits.GIE = 0);
 22882  00A30A  9EF2               	bcf	4082,7,c	;volatile
 22883                           
 22884                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 22885  00A30C  0100               	movlb	0	; () banked
 22886  00A30E  5160               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 22887  00A310  0D08               	mullw	8
 22888  00A312  0E04               	movlw	low (_swTimers+4)
 22889  00A314  24F3               	addwf	prodl,w,c
 22890  00A316  6ED9               	movwf	fsr2l,c
 22891  00A318  0E03               	movlw	high (_swTimers+4)
 22892  00A31A  20F4               	addwfc	prodh,w,c
 22893  00A31C  6EDA               	movwf	fsr2h,c
 22894  00A31E  50DF               	movf	indf2,w,c
 22895  00A320  6F61               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 22896                           
 22897                           ; BSR set to: 0
 22898                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 22899  00A322  8EF2               	bsf	4082,7,c	;volatile
 22900                           
 22901                           ; BSR set to: 0
 22902                           ;sw_timer.c: 215: return isRunning;
 22903  00A324  5161               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 22904                           
 22905                           ; BSR set to: 0
 22906  00A326  0012               	return		;funcret
 22907  00A328                     __end_of_SwTimerIsRunning:
 22908                           	opt callstack 0
 22909                           
 22910 ;; *************** function _RADIO_GetStatus *****************
 22911 ;; Defined at:
 22912 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22913 ;; Parameters:    Size  Location     Type
 22914 ;;		None
 22915 ;; Auto vars:     Size  Location     Type
 22916 ;;		None
 22917 ;; Return value:  Size  Location     Type
 22918 ;;                  1    wreg      unsigned char 
 22919 ;; Registers used:
 22920 ;;		wreg, status,2
 22921 ;; Tracked objects:
 22922 ;;		On entry : 0/0
 22923 ;;		On exit  : 0/0
 22924 ;;		Unchanged: 0/0
 22925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22930 ;;Total ram usage:        0 bytes
 22931 ;; Hardware stack levels used:    1
 22932 ;; Hardware stack levels required when called:    7
 22933 ;; This function calls:
 22934 ;;		Nothing
 22935 ;; This function is called by:
 22936 ;;		_LORAWAN_TxDone
 22937 ;;		_LORAWAN_ReceiveWindow2Callback
 22938 ;;		_LORAWAN_RxDone
 22939 ;; This function uses a non-reentrant model
 22940 ;;
 22941                           
 22942                           	psect	text103
 22943  00A914                     __ptext103:
 22944                           	opt callstack 0
 22945  00A914                     _RADIO_GetStatus:
 22946                           	opt callstack 17
 22947                           
 22948                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 22949                           
 22950                           ; BSR set to: 0
 22951                           ;incstack = 0
 22952  00A914  0101               	movlb	1	; () banked
 22953  00A916  514C               	movf	(_RadioConfiguration+35)& (0+255),w,b
 22954                           
 22955                           ; BSR set to: 1
 22956  00A918  0012               	return		;funcret
 22957  00A91A                     __end_of_RADIO_GetStatus:
 22958                           	opt callstack 0
 22959                           
 22960 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 22961 ;; Defined at:
 22962 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22963 ;; Parameters:    Size  Location     Type
 22964 ;;		None
 22965 ;; Auto vars:     Size  Location     Type
 22966 ;;		None
 22967 ;; Return value:  Size  Location     Type
 22968 ;;                  1    wreg      void 
 22969 ;; Registers used:
 22970 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22971 ;; Tracked objects:
 22972 ;;		On entry : 0/0
 22973 ;;		On exit  : 0/0
 22974 ;;		Unchanged: 0/0
 22975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22980 ;;Total ram usage:        0 bytes
 22981 ;; Hardware stack levels used:    1
 22982 ;; Hardware stack levels required when called:   13
 22983 ;; This function calls:
 22984 ;;		_ConfigureRadioRx
 22985 ;;		_RADIO_ReceiveStart
 22986 ;;		_RADIO_ReceiveStop
 22987 ;;		_RADIO_ReleaseData
 22988 ;;		_ResetParametersForConfirmedTransmission
 22989 ;;		_ResetParametersForUnconfirmedTransmission
 22990 ;;		_RxData
 22991 ;; This function is called by:
 22992 ;;		_LORAWAN_TxDone
 22993 ;;		_LORAWAN_ReceiveWindow2Callback
 22994 ;;		_LORAWAN_RxDone
 22995 ;;		_SetReceptionNotOkState
 22996 ;; This function uses a non-reentrant model
 22997 ;;
 22998                           
 22999                           	psect	text104
 23000  008830                     __ptext104:
 23001                           	opt callstack 0
 23002  008830                     _LORAWAN_EnterContinuousReceive:
 23003                           	opt callstack 11
 23004                           
 23005                           ;lorawan.c: 917: RADIO_ReceiveStop();
 23006                           
 23007                           ; BSR set to: 1
 23008                           ;incstack = 0
 23009  008830  ECF8  F051         	call	_RADIO_ReceiveStop	;wreg free
 23010                           
 23011                           ;lorawan.c: 918: RADIO_ReleaseData();
 23012  008834  EC8D  F054         	call	_RADIO_ReleaseData	;wreg free
 23013                           
 23014                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 23015  008838  C21D  F073         	movff	_loRa+24,ConfigureRadioRx@freq
 23016  00883C  C21E  F074         	movff	_loRa+25,ConfigureRadioRx@freq+1
 23017  008840  C21F  F075         	movff	_loRa+26,ConfigureRadioRx@freq+2
 23018  008844  C220  F076         	movff	_loRa+27,ConfigureRadioRx@freq+3
 23019  008848  0102               	movlb	2	; () banked
 23020  00884A  5121               	movf	(_loRa+28)& (0+255),w,b
 23021  00884C  ECA9  F050         	call	_ConfigureRadioRx
 23022                           
 23023                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 23024  008850  0E00               	movlw	0
 23025  008852  0100               	movlb	0	; () banked
 23026  008854  6FAA               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 23027  008856  0E00               	movlw	0
 23028  008858  6FA9               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 23029  00885A  EC6A  F01E         	call	_RADIO_ReceiveStart	;wreg free
 23030  00885E  0100               	movlb	0	; () banked
 23031  008860  51A9               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 23032  008862  11AA               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 23033  008864  B4D8               	btfsc	status,2,c
 23034  008866  0012               	return	
 23035                           
 23036                           ; BSR set to: 0
 23037                           ;lorawan.c: 923: {;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 23038  008868  ECD3  F053         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23039                           
 23040                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 23041  00886C  ECA3  F053         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 23042                           
 23043                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 23044  008870  0EF0               	movlw	-16
 23045  008872  0102               	movlb	2	; () banked
 23046  008874  1707               	andwf	(_loRa+2)& (0+255),f,b
 23047                           
 23048                           ; BSR set to: 2
 23049                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 23050  008876  0101               	movlb	1	; () banked
 23051  008878  510E               	movf	_rxPayload& (0+255),w,b
 23052  00887A  110F               	iorwf	(_rxPayload+1)& (0+255),w,b
 23053  00887C  B4D8               	btfsc	status,2,c
 23054  00887E  0012               	return	
 23055                           
 23056                           ; BSR set to: 1
 23057                           ;lorawan.c: 928: {;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 23058  008880  0E00               	movlw	0
 23059  008882  0100               	movlb	0	; () banked
 23060  008884  6F60               	movwf	RxData@pData& (0+255),b
 23061  008886  0E00               	movlw	0
 23062  008888  6F61               	movwf	(RxData@pData+1)& (0+255),b
 23063  00888A  0E00               	movlw	0
 23064  00888C  6F62               	movwf	RxData@dataLength& (0+255),b
 23065  00888E  0E00               	movlw	0
 23066  008890  6F63               	movwf	RxData@status& (0+255),b
 23067  008892  D801               	call	u21048
 23068  008894  0012               	return	
 23069  008896                     u21048:
 23070  008896  0005               	push	
 23071  008898  6EFA               	movwf	pclath,c
 23072  00889A  0101               	movlb	1	; () banked
 23073  00889C  510E               	movf	_rxPayload& (0+255),w,b
 23074  00889E  6EFD               	movwf	tosl,c
 23075  0088A0  510F               	movf	(_rxPayload+1)& (0+255),w,b
 23076  0088A2  6EFE               	movwf	tosh,c
 23077  0088A4  6AFF               	clrf	tosu,c
 23078  0088A6  50FA               	movf	pclath,w,c
 23079  0088A8  0012               	return		;indir
 23080  0088AA                     __end_of_LORAWAN_EnterContinuousReceive:
 23081                           	opt callstack 0
 23082                           
 23083 ;; *************** function _RxData *****************
 23084 ;; Defined at:
 23085 ;;		line 73 in file "main.c"
 23086 ;; Parameters:    Size  Location     Type
 23087 ;;  pData           2    0[BANK0 ] PTR unsigned char 
 23088 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 23089 ;;  dataLength      1    2[BANK0 ] unsigned char 
 23090 ;;  status          1    3[BANK0 ] enum E6285
 23091 ;; Auto vars:     Size  Location     Type
 23092 ;;		None
 23093 ;; Return value:  Size  Location     Type
 23094 ;;                  1    wreg      void 
 23095 ;; Registers used:
 23096 ;;		None
 23097 ;; Tracked objects:
 23098 ;;		On entry : 0/0
 23099 ;;		On exit  : 0/0
 23100 ;;		Unchanged: 0/0
 23101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23102 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23105 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23106 ;;Total ram usage:        4 bytes
 23107 ;; Hardware stack levels used:    1
 23108 ;; Hardware stack levels required when called:    7
 23109 ;; This function calls:
 23110 ;;		Nothing
 23111 ;; This function is called by:
 23112 ;;		_main
 23113 ;;		_LORAWAN_EnterContinuousReceive
 23114 ;;		_LORAWAN_ReceiveWindow2Callback
 23115 ;;		_SetReceptionNotOkState
 23116 ;;		_LORAWAN_RxDone
 23117 ;;		_LORAWAN_RxTimeout
 23118 ;;		_LORAWAN_TxDone
 23119 ;;		_AckRetransmissionCallback
 23120 ;;		_UnconfirmedTransmissionCallback
 23121 ;; This function uses a non-reentrant model
 23122 ;;
 23123                           
 23124                           	psect	text105
 23125  00A962                     __ptext105:
 23126                           	opt callstack 0
 23127  00A962                     _RxData:
 23128                           	opt callstack 18
 23129                           
 23130                           ;incstack = 0
 23131  00A962  0012               	return		;funcret
 23132  00A964                     __end_of_RxData:
 23133                           	opt callstack 0
 23134                           
 23135 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 23136 ;; Defined at:
 23137 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23138 ;; Parameters:    Size  Location     Type
 23139 ;;		None
 23140 ;; Auto vars:     Size  Location     Type
 23141 ;;		None
 23142 ;; Return value:  Size  Location     Type
 23143 ;;                  1    wreg      void 
 23144 ;; Registers used:
 23145 ;;		wreg, status,2
 23146 ;; Tracked objects:
 23147 ;;		On entry : 0/0
 23148 ;;		On exit  : 0/0
 23149 ;;		Unchanged: 0/0
 23150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23155 ;;Total ram usage:        0 bytes
 23156 ;; Hardware stack levels used:    1
 23157 ;; Hardware stack levels required when called:    7
 23158 ;; This function calls:
 23159 ;;		Nothing
 23160 ;; This function is called by:
 23161 ;;		_LORAWAN_RxTimeout
 23162 ;;		_LORAWAN_ReceiveWindow2Callback
 23163 ;;		_LORAWAN_EnterContinuousReceive
 23164 ;;		_UnconfirmedTransmissionCallback
 23165 ;; This function uses a non-reentrant model
 23166 ;;
 23167                           
 23168                           	psect	text106
 23169  00A746                     __ptext106:
 23170                           	opt callstack 0
 23171  00A746                     _ResetParametersForUnconfirmedTransmission:
 23172                           	opt callstack 18
 23173                           
 23174                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 23175                           
 23176                           ;incstack = 0
 23177  00A746  0EF0               	movlw	-16
 23178  00A748  0102               	movlb	2	; () banked
 23179  00A74A  1707               	andwf	(_loRa+2)& (0+255),f,b
 23180                           
 23181                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 23182  00A74C  0E01               	movlw	1
 23183  00A74E  6FDD               	movwf	(_loRa+216)& (0+255),b
 23184                           
 23185                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 23186  00A750  0E00               	movlw	0
 23187  00A752  6FAC               	movwf	(_loRa+167)& (0+255),b
 23188                           
 23189                           ; BSR set to: 2
 23190  00A754  0012               	return		;funcret
 23191  00A756                     __end_of_ResetParametersForUnconfirmedTransmission:
 23192                           	opt callstack 0
 23193                           
 23194 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 23195 ;; Defined at:
 23196 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23197 ;; Parameters:    Size  Location     Type
 23198 ;;		None
 23199 ;; Auto vars:     Size  Location     Type
 23200 ;;		None
 23201 ;; Return value:  Size  Location     Type
 23202 ;;                  1    wreg      void 
 23203 ;; Registers used:
 23204 ;;		wreg, status,2
 23205 ;; Tracked objects:
 23206 ;;		On entry : 0/0
 23207 ;;		On exit  : 0/0
 23208 ;;		Unchanged: 0/0
 23209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23214 ;;Total ram usage:        0 bytes
 23215 ;; Hardware stack levels used:    1
 23216 ;; Hardware stack levels required when called:    7
 23217 ;; This function calls:
 23218 ;;		Nothing
 23219 ;; This function is called by:
 23220 ;;		_LORAWAN_RxTimeout
 23221 ;;		_LORAWAN_ReceiveWindow2Callback
 23222 ;;		_LORAWAN_EnterContinuousReceive
 23223 ;;		_AckRetransmissionCallback
 23224 ;; This function uses a non-reentrant model
 23225 ;;
 23226                           
 23227                           	psect	text107
 23228  00A7A6                     __ptext107:
 23229                           	opt callstack 0
 23230  00A7A6                     _ResetParametersForConfirmedTransmission:
 23231                           	opt callstack 16
 23232                           
 23233                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 23234                           
 23235                           ; BSR set to: 2
 23236                           ;incstack = 0
 23237  00A7A6  0EF0               	movlw	-16
 23238  00A7A8  0102               	movlb	2	; () banked
 23239  00A7AA  1707               	andwf	(_loRa+2)& (0+255),f,b
 23240                           
 23241                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 23242  00A7AC  0E01               	movlw	1
 23243  00A7AE  6FDE               	movwf	(_loRa+217)& (0+255),b
 23244                           
 23245                           ; BSR set to: 2
 23246                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 23247  00A7B0  9105               	bcf	_loRa& (0+255),0,b
 23248                           
 23249                           ; BSR set to: 2
 23250  00A7B2  0012               	return		;funcret
 23251  00A7B4                     __end_of_ResetParametersForConfirmedTransmission:
 23252                           	opt callstack 0
 23253                           
 23254 ;; *************** function _RADIO_ReleaseData *****************
 23255 ;; Defined at:
 23256 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23257 ;; Parameters:    Size  Location     Type
 23258 ;;		None
 23259 ;; Auto vars:     Size  Location     Type
 23260 ;;		None
 23261 ;; Return value:  Size  Location     Type
 23262 ;;                  1    wreg      void 
 23263 ;; Registers used:
 23264 ;;		status,2, status,0
 23265 ;; Tracked objects:
 23266 ;;		On entry : 0/0
 23267 ;;		On exit  : 0/0
 23268 ;;		Unchanged: 0/0
 23269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23274 ;;Total ram usage:        0 bytes
 23275 ;; Hardware stack levels used:    1
 23276 ;; Hardware stack levels required when called:    7
 23277 ;; This function calls:
 23278 ;;		Nothing
 23279 ;; This function is called by:
 23280 ;;		_LORAWAN_ReceiveWindow1Callback
 23281 ;;		_LORAWAN_ReceiveWindow2Callback
 23282 ;;		_LORAWAN_EnterContinuousReceive
 23283 ;;		_LORAWAN_RxDone
 23284 ;; This function uses a non-reentrant model
 23285 ;;
 23286                           
 23287                           	psect	text108
 23288  00A91A                     __ptext108:
 23289                           	opt callstack 0
 23290  00A91A                     _RADIO_ReleaseData:
 23291                           	opt callstack 16
 23292                           
 23293                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 23294                           
 23295                           ; BSR set to: 2
 23296                           ;incstack = 0
 23297  00A91A  0101               	movlb	1	; () banked
 23298  00A91C  954C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 23299                           
 23300                           ; BSR set to: 1
 23301  00A91E  0012               	return		;funcret
 23302  00A920                     __end_of_RADIO_ReleaseData:
 23303                           	opt callstack 0
 23304                           
 23305 ;; *************** function _RADIO_ReceiveStop *****************
 23306 ;; Defined at:
 23307 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23308 ;; Parameters:    Size  Location     Type
 23309 ;;		None
 23310 ;; Auto vars:     Size  Location     Type
 23311 ;;		None
 23312 ;; Return value:  Size  Location     Type
 23313 ;;                  1    wreg      void 
 23314 ;; Registers used:
 23315 ;;		wreg, status,2, status,0, cstack
 23316 ;; Tracked objects:
 23317 ;;		On entry : 0/0
 23318 ;;		On exit  : 0/0
 23319 ;;		Unchanged: 0/0
 23320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23325 ;;Total ram usage:        0 bytes
 23326 ;; Hardware stack levels used:    1
 23327 ;; Hardware stack levels required when called:   11
 23328 ;; This function calls:
 23329 ;;		_RADIO_WriteMode
 23330 ;; This function is called by:
 23331 ;;		_LORAWAN_Send
 23332 ;;		_LORAWAN_ReceiveWindow1Callback
 23333 ;;		_LORAWAN_ReceiveWindow2Callback
 23334 ;;		_LORAWAN_EnterContinuousReceive
 23335 ;;		_LORAWAN_SetClass
 23336 ;; This function uses a non-reentrant model
 23337 ;;
 23338                           
 23339                           	psect	text109
 23340  00A3F0                     __ptext109:
 23341                           	opt callstack 0
 23342  00A3F0                     _RADIO_ReceiveStop:
 23343                           	opt callstack 16
 23344                           
 23345                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 23346                           
 23347                           ; BSR set to: 1
 23348                           ;incstack = 0
 23349  00A3F0  0E02               	movlw	2
 23350  00A3F2  0101               	movlb	1	; () banked
 23351  00A3F4  194C               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 23352  00A3F6  A4D8               	btfss	status,2,c
 23353  00A3F8  0012               	return	
 23354                           
 23355                           ; BSR set to: 1
 23356                           ;radio_driver_SX1276.c: 954: {;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, R
      +                          adioConfiguration.modulation, 0);
 23357  00A3FA  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23358  00A3FE  0E00               	movlw	0
 23359  00A400  0100               	movlb	0	; () banked
 23360  00A402  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23361  00A404  0E00               	movlw	0
 23362  00A406  ECEB  F035         	call	_RADIO_WriteMode
 23363                           
 23364                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 23365  00A40A  0101               	movlb	1	; () banked
 23366  00A40C  934C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 23367                           
 23368                           ; BSR set to: 1
 23369  00A40E  0012               	return		;funcret
 23370  00A410                     __end_of_RADIO_ReceiveStop:
 23371                           	opt callstack 0
 23372                           
 23373 ;; *************** function _RADIO_ReceiveStart *****************
 23374 ;; Defined at:
 23375 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23376 ;; Parameters:    Size  Location     Type
 23377 ;;  rxWindowSize    2   73[BANK0 ] unsigned int 
 23378 ;; Auto vars:     Size  Location     Type
 23379 ;;		None
 23380 ;; Return value:  Size  Location     Type
 23381 ;;                  2   73[BANK0 ] enum E5907
 23382 ;; Registers used:
 23383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23384 ;; Tracked objects:
 23385 ;;		On entry : 0/0
 23386 ;;		On exit  : 0/0
 23387 ;;		Unchanged: 0/0
 23388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23390 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23391 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23392 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23393 ;;Total ram usage:       10 bytes
 23394 ;; Hardware stack levels used:    1
 23395 ;; Hardware stack levels required when called:   12
 23396 ;; This function calls:
 23397 ;;		_RADIO_RegisterWrite
 23398 ;;		_RADIO_WriteConfiguration
 23399 ;;		_RADIO_WriteMode
 23400 ;;		_SwTimerSetTimeout
 23401 ;;		_SwTimerStart
 23402 ;;		___lldiv
 23403 ;; This function is called by:
 23404 ;;		_LORAWAN_ReceiveWindow1Callback
 23405 ;;		_LORAWAN_ReceiveWindow2Callback
 23406 ;;		_LORAWAN_EnterContinuousReceive
 23407 ;; This function uses a non-reentrant model
 23408 ;;
 23409                           
 23410                           	psect	text110
 23411  003CD4                     __ptext110:
 23412                           	opt callstack 0
 23413  003CD4                     _RADIO_ReceiveStart:
 23414                           	opt callstack 11
 23415                           
 23416                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 23417                           
 23418                           ; BSR set to: 1
 23419                           ;incstack = 0
 23420  003CD4  0101               	movlb	1	; () banked
 23421  003CD6  A54C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 23422  003CD8  D006               	goto	l18886
 23423                           
 23424                           ; BSR set to: 1
 23425                           ;radio_driver_SX1276.c: 878: {;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 23426  003CDA  0E80               	movlw	128
 23427  003CDC  0100               	movlb	0	; () banked
 23428  003CDE  6FAA               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23429  003CE0  0E03               	movlw	3
 23430  003CE2  6FA9               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23431  003CE4  0012               	return	
 23432  003CE6                     l18886:
 23433                           
 23434                           ; BSR set to: 1
 23435                           ;radio_driver_SX1276.c: 880: };radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags
      +                           & ((1 << (0)) | (1 << (1)))) != 0)
 23436  003CE6  C14C  F0AB         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 23437  003CEA  0E03               	movlw	3
 23438  003CEC  0100               	movlb	0	; () banked
 23439  003CEE  17AB               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 23440  003CF0  B4D8               	btfsc	status,2,c
 23441  003CF2  D005               	goto	l18892
 23442                           
 23443                           ; BSR set to: 0
 23444                           ;radio_driver_SX1276.c: 883: {;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 23445  003CF4  0E80               	movlw	128
 23446  003CF6  6FAA               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23447  003CF8  0E04               	movlw	4
 23448  003CFA  6FA9               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23449  003CFC  0012               	return	
 23450  003CFE                     l18892:
 23451                           
 23452                           ; BSR set to: 0
 23453                           ;radio_driver_SX1276.c: 885: };radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 23454  003CFE  51A9               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23455  003D00  11AA               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23456  003D02  A4D8               	btfss	status,2,c
 23457  003D04  D007               	goto	l18896
 23458                           
 23459                           ; BSR set to: 0
 23460                           ;radio_driver_SX1276.c: 888: {;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 23461  003D06  0E00               	movlw	0
 23462  003D08  6F9F               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 23463  003D0A  0E04               	movlw	4
 23464  003D0C  6F9E               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 23465  003D0E  EC6B  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23466                           
 23467                           ;radio_driver_SX1276.c: 890: }
 23468  003D12  D006               	goto	l18898
 23469  003D14                     l18896:
 23470                           
 23471                           ; BSR set to: 0
 23472                           ;radio_driver_SX1276.c: 891: else;radio_driver_SX1276.c: 892: {;radio_driver_SX1276.c: 8
      +                          93: RADIO_WriteConfiguration(rxWindowSize);
 23473  003D14  C0A9  F09E         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 23474  003D18  C0AA  F09F         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 23475  003D1C  EC6B  F009         	call	_RADIO_WriteConfiguration	;wreg free
 23476  003D20                     l18898:
 23477                           
 23478                           ;radio_driver_SX1276.c: 894: };radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioC
      +                          onfiguration.modulation)
 23479  003D20  0101               	movlb	1	; () banked
 23480  003D22  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23481  003D24  A4D8               	btfss	status,2,c
 23482  003D26  D013               	goto	l18902
 23483                           
 23484                           ; BSR set to: 1
 23485                           ;radio_driver_SX1276.c: 897: {;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x0
      +                          1);
 23486  003D28  0E01               	movlw	1
 23487  003D2A  0100               	movlb	0	; () banked
 23488  003D2C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23489  003D2E  0E22               	movlw	34
 23490  003D30  EC08  F052         	call	_RADIO_RegisterWrite
 23491                           
 23492                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 23493  003D34  0E00               	movlw	0
 23494  003D36  0100               	movlb	0	; () banked
 23495  003D38  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23496  003D3A  0E40               	movlw	64
 23497  003D3C  EC08  F052         	call	_RADIO_RegisterWrite
 23498                           
 23499                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 23500  003D40  0E00               	movlw	0
 23501  003D42  0100               	movlb	0	; () banked
 23502  003D44  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23503  003D46  0E41               	movlw	65
 23504  003D48  EC08  F052         	call	_RADIO_RegisterWrite
 23505                           
 23506                           ;radio_driver_SX1276.c: 908: }
 23507  003D4C  D016               	goto	l18904
 23508  003D4E                     l18902:
 23509                           
 23510                           ; BSR set to: 1
 23511                           ;radio_driver_SX1276.c: 909: else;radio_driver_SX1276.c: 910: {;radio_driver_SX1276.c: 9
      +                          11: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 23512  003D4E  C15D  F062         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 23513  003D52  0E12               	movlw	18
 23514  003D54  EC08  F052         	call	_RADIO_RegisterWrite
 23515                           
 23516                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 23517  003D58  C15E  F062         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 23518  003D5C  0E13               	movlw	19
 23519  003D5E  EC08  F052         	call	_RADIO_RegisterWrite
 23520                           
 23521                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 23522  003D62  0E00               	movlw	0
 23523  003D64  0100               	movlb	0	; () banked
 23524  003D66  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23525  003D68  0E40               	movlw	64
 23526  003D6A  EC08  F052         	call	_RADIO_RegisterWrite
 23527                           
 23528                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 23529  003D6E  0E00               	movlw	0
 23530  003D70  0100               	movlb	0	; () banked
 23531  003D72  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 23532  003D74  0E41               	movlw	65
 23533  003D76  EC08  F052         	call	_RADIO_RegisterWrite
 23534  003D7A                     l18904:
 23535                           
 23536                           ;radio_driver_SX1276.c: 917: };radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (
      +                          1 << (1));
 23537  003D7A  0101               	movlb	1	; () banked
 23538  003D7C  834C               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 23539                           
 23540                           ; BSR set to: 1
 23541                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 23542  003D7E  0EE7               	movlw	231
 23543  003D80  174C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 23544                           
 23545                           ; BSR set to: 1
 23546                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 23547  003D82  0100               	movlb	0	; () banked
 23548  003D84  51A9               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23549  003D86  11AA               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23550  003D88  A4D8               	btfss	status,2,c
 23551  003D8A  D008               	goto	l18912
 23552                           
 23553                           ; BSR set to: 0
 23554                           ;radio_driver_SX1276.c: 925: {;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, 
      +                          RadioConfiguration.modulation, 0);
 23555  003D8C  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 23556  003D90  0E00               	movlw	0
 23557  003D92  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23558  003D94  0E05               	movlw	5
 23559  003D96  ECEB  F035         	call	_RADIO_WriteMode
 23560                           
 23561                           ;radio_driver_SX1276.c: 927: }
 23562  003D9A  D046               	goto	l18922
 23563  003D9C                     l18912:
 23564                           
 23565                           ; BSR set to: 0
 23566                           ;radio_driver_SX1276.c: 928: else;radio_driver_SX1276.c: 929: {;radio_driver_SX1276.c: 9
      +                          30: if (MODULATION_LORA == RadioConfiguration.modulation)
 23567  003D9C  0101               	movlb	1	; () banked
 23568  003D9E  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 23569  003DA0  A4D8               	btfss	status,2,c
 23570  003DA2  D009               	goto	l18916
 23571                           
 23572                           ; BSR set to: 1
 23573                           ;radio_driver_SX1276.c: 931: {;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE
      +                          , MODULATION_LORA, 0);
 23574  003DA4  0E01               	movlw	1
 23575  003DA6  0100               	movlb	0	; () banked
 23576  003DA8  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23577  003DAA  0E00               	movlw	0
 23578  003DAC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23579  003DAE  0E06               	movlw	6
 23580  003DB0  ECEB  F035         	call	_RADIO_WriteMode
 23581                           
 23582                           ;radio_driver_SX1276.c: 933: }
 23583  003DB4  D039               	goto	l18922
 23584  003DB6                     l18916:
 23585                           
 23586                           ; BSR set to: 1
 23587                           ;radio_driver_SX1276.c: 934: else;radio_driver_SX1276.c: 935: {;radio_driver_SX1276.c: 9
      +                          36: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 23588  003DB6  0E00               	movlw	0
 23589  003DB8  0100               	movlb	0	; () banked
 23590  003DBA  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 23591  003DBC  0E00               	movlw	0
 23592  003DBE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 23593  003DC0  0E05               	movlw	5
 23594  003DC2  ECEB  F035         	call	_RADIO_WriteMode
 23595                           
 23596                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 23597  003DC6  0100               	movlb	0	; () banked
 23598  003DC8  51A9               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 23599  003DCA  6FAB               	movwf	??_RADIO_ReceiveStart& (0+255),b
 23600  003DCC  51AA               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 23601  003DCE  6FAC               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 23602  003DD0  6BAD               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 23603  003DD2  6BAE               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 23604  003DD4  0E0C               	movlw	12
 23605  003DD6                     u20155:
 23606  003DD6  90D8               	bcf	status,0,c
 23607  003DD8  37AB               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23608  003DDA  37AC               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23609  003DDC  37AD               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23610  003DDE  37AE               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23611  003DE0  2EE8               	decfsz	wreg,f,c
 23612  003DE2  D7F9               	goto	u20155
 23613  003DE4  C0AB  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23614  003DE8  C0AC  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23615  003DEC  C0AD  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23616  003DF0  C0AE  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23617  003DF4  0E7D               	movlw	125
 23618  003DF6  6F64               	movwf	___lldiv@divisor& (0+255),b
 23619  003DF8  0E00               	movlw	0
 23620  003DFA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23621  003DFC  0E00               	movlw	0
 23622  003DFE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23623  003E00  0E00               	movlw	0
 23624  003E02  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23625  003E04  ECD9  F042         	call	___lldiv	;wreg free
 23626  003E08  C060  F06D         	movff	?___lldiv,SwTimerSetTimeout@timeout
 23627  003E0C  C061  F06E         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 23628  003E10  C062  F06F         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 23629  003E14  C063  F070         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 23630  003E18  0101               	movlb	1	; () banked
 23631  003E1A  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23632  003E1C  ECC2  F04C         	call	_SwTimerSetTimeout
 23633                           
 23634                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 23635  003E20  0101               	movlb	1	; () banked
 23636  003E22  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 23637  003E24  ECB6  F040         	call	_SwTimerStart
 23638  003E28                     l18922:
 23639                           
 23640                           ;radio_driver_SX1276.c: 939: };radio_driver_SX1276.c: 940: };radio_driver_SX1276.c: 942:
      +                           if (0 != RadioConfiguration.watchdogTimerTimeout)
 23641  003E28  0101               	movlb	1	; () banked
 23642  003E2A  5153               	movf	(_RadioConfiguration+42)& (0+255),w,b
 23643  003E2C  1154               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 23644  003E2E  1155               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 23645  003E30  1156               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 23646  003E32  B4D8               	btfsc	status,2,c
 23647  003E34  D061               	goto	l18934
 23648                           
 23649                           ; BSR set to: 1
 23650                           ;radio_driver_SX1276.c: 943: {;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfig
      +                          uration.watchdogTimerId, ((RadioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (
      +                          ((uint32_t)(RadioConfiguration.watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t
      +                          )(RadioConfiguration.watchdogTimerTimeout)) /
 23651  003E36  5156               	movf	(_RadioConfiguration+45)& (0+255),w,b
 23652  003E38  E107               	bnz	u20170
 23653  003E3A  2953               	incf	(_RadioConfiguration+42)& (0+255),w,b
 23654  003E3C  0EFF               	movlw	255
 23655  003E3E  5954               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 23656  003E40  0E0F               	movlw	15
 23657  003E42  5955               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 23658  003E44  A0D8               	btfss	status,0,c
 23659  003E46  D01D               	goto	l18928
 23660  003E48                     u20170:
 23661                           
 23662                           ; BSR set to: 1
 23663  003E48  C153  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 23664  003E4C  C154  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 23665  003E50  C155  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 23666  003E54  C156  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 23667  003E58  0E7D               	movlw	125
 23668  003E5A  0100               	movlb	0	; () banked
 23669  003E5C  6F64               	movwf	___lldiv@divisor& (0+255),b
 23670  003E5E  0E00               	movlw	0
 23671  003E60  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23672  003E62  0E00               	movlw	0
 23673  003E64  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23674  003E66  0E00               	movlw	0
 23675  003E68  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23676  003E6A  ECD9  F042         	call	___lldiv	;wreg free
 23677  003E6E  0E0C               	movlw	12
 23678  003E70                     u20185:
 23679  003E70  90D8               	bcf	status,0,c
 23680  003E72  0100               	movlb	0	; () banked
 23681  003E74  3760               	rlcf	?___lldiv& (0+255),f,b
 23682  003E76  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 23683  003E78  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 23684  003E7A  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 23685  003E7C  2EE8               	decfsz	wreg,f,c
 23686  003E7E  D7F8               	goto	u20185
 23687  003E80  D023               	goto	L27
 23688  003E82                     l18928:
 23689                           
 23690                           ; BSR set to: 1
 23691  003E82  C153  F0AB         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 23692  003E86  C154  F0AC         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 23693  003E8A  C155  F0AD         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 23694  003E8E  C156  F0AE         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 23695  003E92  0E0C               	movlw	12
 23696  003E94                     u20195:
 23697  003E94  90D8               	bcf	status,0,c
 23698  003E96  0100               	movlb	0	; () banked
 23699  003E98  37AB               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 23700  003E9A  37AC               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 23701  003E9C  37AD               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 23702  003E9E  37AE               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 23703  003EA0  2EE8               	decfsz	wreg,f,c
 23704  003EA2  D7F8               	goto	u20195
 23705  003EA4  C0AB  F060         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 23706  003EA8  C0AC  F061         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 23707  003EAC  C0AD  F062         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 23708  003EB0  C0AE  F063         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 23709  003EB4  0E7D               	movlw	125
 23710  003EB6  6F64               	movwf	___lldiv@divisor& (0+255),b
 23711  003EB8  0E00               	movlw	0
 23712  003EBA  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 23713  003EBC  0E00               	movlw	0
 23714  003EBE  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 23715  003EC0  0E00               	movlw	0
 23716  003EC2  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 23717  003EC4  ECD9  F042         	call	___lldiv	;wreg free
 23718  003EC8                     L27:
 23719  003EC8  C060  F0AF         	movff	?___lldiv,_RADIO_ReceiveStart$784
 23720  003ECC  C061  F0B0         	movff	?___lldiv+1,_RADIO_ReceiveStart$784+1
 23721  003ED0  C062  F0B1         	movff	?___lldiv+2,_RADIO_ReceiveStart$784+2
 23722  003ED4  C063  F0B2         	movff	?___lldiv+3,_RADIO_ReceiveStart$784+3
 23723  003ED8  C0AF  F06D         	movff	_RADIO_ReceiveStart$784,SwTimerSetTimeout@timeout
 23724  003EDC  C0B0  F06E         	movff	_RADIO_ReceiveStart$784+1,SwTimerSetTimeout@timeout+1
 23725  003EE0  C0B1  F06F         	movff	_RADIO_ReceiveStart$784+2,SwTimerSetTimeout@timeout+2
 23726  003EE4  C0B2  F070         	movff	_RADIO_ReceiveStart$784+3,SwTimerSetTimeout@timeout+3
 23727  003EE8  0101               	movlb	1	; () banked
 23728  003EEA  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23729  003EEC  ECC2  F04C         	call	_SwTimerSetTimeout
 23730                           
 23731                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 23732  003EF0  0101               	movlb	1	; () banked
 23733  003EF2  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 23734  003EF4  ECB6  F040         	call	_SwTimerStart
 23735  003EF8                     l18934:
 23736                           
 23737                           ;radio_driver_SX1276.c: 946: };radio_driver_SX1276.c: 947: return ERR_NONE;
 23738  003EF8  0E00               	movlw	0
 23739  003EFA  0100               	movlb	0	; () banked
 23740  003EFC  6FAA               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 23741  003EFE  0E00               	movlw	0
 23742  003F00  6FA9               	movwf	?_RADIO_ReceiveStart& (0+255),b
 23743                           
 23744                           ; BSR set to: 0
 23745  003F02  0012               	return		;funcret
 23746  003F04                     __end_of_RADIO_ReceiveStart:
 23747                           	opt callstack 0
 23748                           
 23749 ;; *************** function _ConfigureRadioRx *****************
 23750 ;; Defined at:
 23751 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23752 ;; Parameters:    Size  Location     Type
 23753 ;;  dataRate        1    wreg     unsigned char 
 23754 ;;  freq            4   19[BANK0 ] unsigned long 
 23755 ;; Auto vars:     Size  Location     Type
 23756 ;;  dataRate        1   23[BANK0 ] unsigned char 
 23757 ;; Return value:  Size  Location     Type
 23758 ;;                  1    wreg      void 
 23759 ;; Registers used:
 23760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23761 ;; Tracked objects:
 23762 ;;		On entry : 0/0
 23763 ;;		On exit  : 0/0
 23764 ;;		Unchanged: 0/0
 23765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23766 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23769 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23770 ;;Total ram usage:        5 bytes
 23771 ;; Hardware stack levels used:    1
 23772 ;; Hardware stack levels required when called:   10
 23773 ;; This function calls:
 23774 ;;		_ConfigureRadio
 23775 ;;		_RADIO_SetCRC
 23776 ;;		_RADIO_SetIQInverted
 23777 ;; This function is called by:
 23778 ;;		_LORAWAN_ReceiveWindow1Callback
 23779 ;;		_LORAWAN_ReceiveWindow2Callback
 23780 ;;		_LORAWAN_EnterContinuousReceive
 23781 ;; This function uses a non-reentrant model
 23782 ;;
 23783                           
 23784                           	psect	text111
 23785  00A152                     __ptext111:
 23786                           	opt callstack 0
 23787  00A152                     _ConfigureRadioRx:
 23788                           	opt callstack 13
 23789                           
 23790                           ; BSR set to: 0
 23791                           ;incstack = 0
 23792                           ;ConfigureRadioRx@dataRate stored from wreg
 23793  00A152  0100               	movlb	0	; () banked
 23794  00A154  6F77               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 23795                           
 23796                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 23797  00A156  C073  F06E         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 23798  00A15A  C074  F06F         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 23799  00A15E  C075  F070         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 23800  00A162  C076  F071         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 23801  00A166  0100               	movlb	0	; () banked
 23802  00A168  5177               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 23803  00A16A  EC1D  F040         	call	_ConfigureRadio
 23804                           
 23805                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 23806  00A16E  0E00               	movlw	0
 23807  00A170  EC4F  F054         	call	_RADIO_SetCRC
 23808                           
 23809                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 23810  00A174  0E01               	movlw	1
 23811  00A176  EC4A  F054         	call	_RADIO_SetIQInverted
 23812  00A17A  0012               	return		;funcret
 23813  00A17C                     __end_of_ConfigureRadioRx:
 23814                           	opt callstack 0
 23815                           
 23816 ;; *************** function _INTERRUPT_GetDioStatus *****************
 23817 ;; Defined at:
 23818 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 23819 ;; Parameters:    Size  Location     Type
 23820 ;;		None
 23821 ;; Auto vars:     Size  Location     Type
 23822 ;;  a               1    0[BANK0 ] unsigned char 
 23823 ;; Return value:  Size  Location     Type
 23824 ;;                  1    wreg      unsigned char 
 23825 ;; Registers used:
 23826 ;;		wreg, status,2
 23827 ;; Tracked objects:
 23828 ;;		On entry : 0/0
 23829 ;;		On exit  : 0/0
 23830 ;;		Unchanged: 0/0
 23831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23833 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23835 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23836 ;;Total ram usage:        1 bytes
 23837 ;; Hardware stack levels used:    1
 23838 ;; Hardware stack levels required when called:    7
 23839 ;; This function calls:
 23840 ;;		Nothing
 23841 ;; This function is called by:
 23842 ;;		_LORAWAN_Mainloop
 23843 ;; This function uses a non-reentrant model
 23844 ;;
 23845                           
 23846                           	psect	text112
 23847  00A6FE                     __ptext112:
 23848                           	opt callstack 0
 23849  00A6FE                     _INTERRUPT_GetDioStatus:
 23850                           	opt callstack 20
 23851                           
 23852                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;;interrupt_manager_lora_addons.c: 51: (I
      +                          NTCONbits.GIE = 0);
 23853                           
 23854                           ;incstack = 0
 23855  00A6FE  9EF2               	bcf	4082,7,c	;volatile
 23856                           
 23857                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 23858  00A700  C045  F060         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 23859                           
 23860                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 23861  00A704  0E00               	movlw	0
 23862  00A706  6E45               	movwf	_dioStatus,c	;volatile
 23863                           
 23864                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 23865  00A708  8EF2               	bsf	4082,7,c	;volatile
 23866                           
 23867                           ;interrupt_manager_lora_addons.c: 55: return a;
 23868  00A70A  0100               	movlb	0	; () banked
 23869  00A70C  5160               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 23870                           
 23871                           ; BSR set to: 0
 23872  00A70E  0012               	return		;funcret
 23873  00A710                     __end_of_INTERRUPT_GetDioStatus:
 23874                           	opt callstack 0
 23875                           
 23876 ;; *************** function _lightSensAcquisition *****************
 23877 ;; Defined at:
 23878 ;;		line 304 in file "acuadori.c"
 23879 ;; Parameters:    Size  Location     Type
 23880 ;;		None
 23881 ;; Auto vars:     Size  Location     Type
 23882 ;;		None
 23883 ;; Return value:  Size  Location     Type
 23884 ;;                  1    wreg      void 
 23885 ;; Registers used:
 23886 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 23887 ;; Tracked objects:
 23888 ;;		On entry : 0/0
 23889 ;;		On exit  : 0/0
 23890 ;;		Unchanged: 0/0
 23891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23896 ;;Total ram usage:        0 bytes
 23897 ;; Hardware stack levels used:    1
 23898 ;; Hardware stack levels required when called:   11
 23899 ;; This function calls:
 23900 ;;		_GPIODigitalWrite
 23901 ;;		_acquisitionData
 23902 ;;		_adaptString
 23903 ;;		_rn2483_delaysec
 23904 ;; This function is called by:
 23905 ;;		_acuadoriApp
 23906 ;; This function uses a non-reentrant model
 23907 ;;
 23908                           
 23909                           	psect	text113
 23910  009668                     __ptext113:
 23911                           	opt callstack 0
 23912  009668                     _lightSensAcquisition:
 23913                           	opt callstack 18
 23914                           
 23915                           ;acuadori.c: 307: GPIODigitalWrite(0xFF, 1);
 23916                           
 23917                           ; BSR set to: 0
 23918                           ;incstack = 0
 23919  009668  0E01               	movlw	1
 23920  00966A  0100               	movlb	0	; () banked
 23921  00966C  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 23922  00966E  0EFF               	movlw	255
 23923  009670  ECE7  F036         	call	_GPIODigitalWrite
 23924                           
 23925                           ;acuadori.c: 309: rn2483_delaysec(1);
 23926  009674  0E00               	movlw	0
 23927  009676  0100               	movlb	0	; () banked
 23928  009678  6F61               	movwf	(rn2483_delaysec@length+1)& (0+255),b
 23929  00967A  0E01               	movlw	1
 23930  00967C  6F60               	movwf	rn2483_delaysec@length& (0+255),b
 23931  00967E  EC67  F04D         	call	_rn2483_delaysec	;wreg free
 23932                           
 23933                           ;acuadori.c: 310: acquisitionData(0x03, stringValue);
 23934  009682  0E6F               	movlw	low _stringValue
 23935  009684  0100               	movlb	0	; () banked
 23936  009686  6FAB               	movwf	acquisitionData@string& (0+255),b
 23937  009688  0E01               	movlw	high _stringValue
 23938  00968A  6FAC               	movwf	(acquisitionData@string+1)& (0+255),b
 23939  00968C  0E03               	movlw	3
 23940  00968E  EC94  F051         	call	_acquisitionData
 23941                           
 23942                           ;acuadori.c: 311: stringValueLength = adaptString(stringValue, 5);
 23943  009692  0E6F               	movlw	low _stringValue
 23944  009694  0100               	movlb	0	; () banked
 23945  009696  6F60               	movwf	adaptString@string& (0+255),b
 23946  009698  0E01               	movlw	high _stringValue
 23947  00969A  6F61               	movwf	(adaptString@string+1)& (0+255),b
 23948  00969C  0E05               	movlw	5
 23949  00969E  6F62               	movwf	adaptString@length& (0+255),b
 23950  0096A0  ECCE  F044         	call	_adaptString	;wreg free
 23951  0096A4  0101               	movlb	1	; () banked
 23952  0096A6  6FF9               	movwf	_stringValueLength& (0+255),b
 23953                           
 23954                           ; BSR set to: 1
 23955                           ;acuadori.c: 315: GPIODigitalWrite(0xFF, 0);
 23956  0096A8  0E00               	movlw	0
 23957  0096AA  0100               	movlb	0	; () banked
 23958  0096AC  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 23959  0096AE  0EFF               	movlw	255
 23960  0096B0  ECE7  F036         	call	_GPIODigitalWrite
 23961  0096B4  0012               	return		;funcret
 23962  0096B6                     __end_of_lightSensAcquisition:
 23963                           	opt callstack 0
 23964                           
 23965 ;; *************** function _rn2483_delaysec *****************
 23966 ;; Defined at:
 23967 ;;		line 24 in file "rn2483APP.c"
 23968 ;; Parameters:    Size  Location     Type
 23969 ;;  length          2    0[BANK0 ] unsigned int 
 23970 ;; Auto vars:     Size  Location     Type
 23971 ;;  counter         2    3[BANK0 ] unsigned int 
 23972 ;; Return value:  Size  Location     Type
 23973 ;;                  1    wreg      void 
 23974 ;; Registers used:
 23975 ;;		wreg, status,2, status,0
 23976 ;; Tracked objects:
 23977 ;;		On entry : 0/0
 23978 ;;		On exit  : 0/0
 23979 ;;		Unchanged: 0/0
 23980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23982 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23984 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23985 ;;Total ram usage:        5 bytes
 23986 ;; Hardware stack levels used:    1
 23987 ;; Hardware stack levels required when called:    7
 23988 ;; This function calls:
 23989 ;;		Nothing
 23990 ;; This function is called by:
 23991 ;;		_acuadoriApp
 23992 ;;		_lightSensAcquisition
 23993 ;; This function uses a non-reentrant model
 23994 ;;
 23995                           
 23996                           	psect	text114
 23997  009ACE                     __ptext114:
 23998                           	opt callstack 0
 23999  009ACE                     _rn2483_delaysec:
 24000                           	opt callstack 22
 24001                           
 24002                           ;rn2483APP.c: 26: uint16_t counter;;rn2483APP.c: 27: while(length){
 24003                           
 24004                           ;incstack = 0
 24005  009ACE  D019               	goto	l16102
 24006  009AD0                     l16090:
 24007                           
 24008                           ; BSR set to: 0
 24009                           ;rn2483APP.c: 28: for(counter = 0; counter < 1000; counter++)
 24010  009AD0  0E00               	movlw	0
 24011  009AD2  6F64               	movwf	(rn2483_delaysec@counter+1)& (0+255),b
 24012  009AD4  0E00               	movlw	0
 24013  009AD6  6F63               	movwf	rn2483_delaysec@counter& (0+255),b
 24014  009AD8                     l16096:
 24015                           
 24016                           ; BSR set to: 0
 24017                           ;rn2483APP.c: 29: {;rn2483APP.c: 30: _delay((unsigned long)((1)*(16000000/4000.0)));
 24018  009AD8  0E06               	movlw	6
 24019  009ADA  0100               	movlb	0	; () banked
 24020  009ADC  6F62               	movwf	??_rn2483_delaysec& (0+255),b
 24021  009ADE  0E30               	movlw	48
 24022  009AE0                     u25247:
 24023  009AE0  2EE8               	decfsz	wreg,f,c
 24024  009AE2  D7FE               	bra	u25247
 24025  009AE4  2F62               	decfsz	??_rn2483_delaysec& (0+255),f,b
 24026  009AE6  D7FC               	bra	u25247
 24027  009AE8  F000               	nop	
 24028  009AEA  0100               	movlb	0	; () banked
 24029  009AEC  4B63               	infsnz	rn2483_delaysec@counter& (0+255),f,b
 24030  009AEE  2B64               	incf	(rn2483_delaysec@counter+1)& (0+255),f,b
 24031  009AF0  0EE8               	movlw	232
 24032  009AF2  5D63               	subwf	rn2483_delaysec@counter& (0+255),w,b
 24033  009AF4  0E03               	movlw	3
 24034  009AF6  5964               	subwfb	(rn2483_delaysec@counter+1)& (0+255),w,b
 24035  009AF8  A0D8               	btfss	status,0,c
 24036  009AFA  D7EE               	goto	l16096
 24037                           
 24038                           ; BSR set to: 0
 24039                           ;rn2483APP.c: 31: };rn2483APP.c: 32: length--;
 24040  009AFC  0760               	decf	rn2483_delaysec@length& (0+255),f,b
 24041  009AFE  A0D8               	btfss	status,0,c
 24042  009B00  0761               	decf	(rn2483_delaysec@length+1)& (0+255),f,b
 24043  009B02                     l16102:
 24044  009B02  0100               	movlb	0	; () banked
 24045  009B04  5160               	movf	rn2483_delaysec@length& (0+255),w,b
 24046  009B06  1161               	iorwf	(rn2483_delaysec@length+1)& (0+255),w,b
 24047  009B08  B4D8               	btfsc	status,2,c
 24048  009B0A  0012               	return	
 24049  009B0C  D7E1               	goto	l16090
 24050  009B0E                     __end_of_rn2483_delaysec:
 24051                           	opt callstack 0
 24052                           
 24053 ;; *************** function _leafSensAcquisition *****************
 24054 ;; Defined at:
 24055 ;;		line 319 in file "acuadori.c"
 24056 ;; Parameters:    Size  Location     Type
 24057 ;;		None
 24058 ;; Auto vars:     Size  Location     Type
 24059 ;;		None
 24060 ;; Return value:  Size  Location     Type
 24061 ;;                  1    wreg      void 
 24062 ;; Registers used:
 24063 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, cstack
 24064 ;; Tracked objects:
 24065 ;;		On entry : 0/0
 24066 ;;		On exit  : 0/0
 24067 ;;		Unchanged: 0/0
 24068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24073 ;;Total ram usage:        0 bytes
 24074 ;; Hardware stack levels used:    1
 24075 ;; Hardware stack levels required when called:   11
 24076 ;; This function calls:
 24077 ;;		_acquisitionData
 24078 ;;		_adaptString
 24079 ;; This function is called by:
 24080 ;;		_acuadoriApp
 24081 ;; This function uses a non-reentrant model
 24082 ;;
 24083                           
 24084                           	psect	text115
 24085  00A248                     __ptext115:
 24086                           	opt callstack 0
 24087  00A248                     _leafSensAcquisition:
 24088                           	opt callstack 18
 24089                           
 24090                           ;acuadori.c: 320: acquisitionData(0x01, stringValue);
 24091                           
 24092                           ; BSR set to: 0
 24093                           ;incstack = 0
 24094  00A248  0E6F               	movlw	low _stringValue
 24095  00A24A  0100               	movlb	0	; () banked
 24096  00A24C  6FAB               	movwf	acquisitionData@string& (0+255),b
 24097  00A24E  0E01               	movlw	high _stringValue
 24098  00A250  6FAC               	movwf	(acquisitionData@string+1)& (0+255),b
 24099  00A252  0E01               	movlw	1
 24100  00A254  EC94  F051         	call	_acquisitionData
 24101                           
 24102                           ;acuadori.c: 321: stringValueLength = adaptString(stringValue, 5);
 24103  00A258  0E6F               	movlw	low _stringValue
 24104  00A25A  0100               	movlb	0	; () banked
 24105  00A25C  6F60               	movwf	adaptString@string& (0+255),b
 24106  00A25E  0E01               	movlw	high _stringValue
 24107  00A260  6F61               	movwf	(adaptString@string+1)& (0+255),b
 24108  00A262  0E05               	movlw	5
 24109  00A264  6F62               	movwf	adaptString@length& (0+255),b
 24110  00A266  ECCE  F044         	call	_adaptString	;wreg free
 24111  00A26A  0101               	movlb	1	; () banked
 24112  00A26C  6FF9               	movwf	_stringValueLength& (0+255),b
 24113                           
 24114                           ; BSR set to: 1
 24115  00A26E  0012               	return		;funcret
 24116  00A270                     __end_of_leafSensAcquisition:
 24117                           	opt callstack 0
 24118                           
 24119 ;; *************** function _acquisitionData *****************
 24120 ;; Defined at:
 24121 ;;		line 300 in file "rn2483APP.c"
 24122 ;; Parameters:    Size  Location     Type
 24123 ;;  GPIO            1    wreg     unsigned char 
 24124 ;;  string          2   75[BANK0 ] PTR unsigned char 
 24125 ;;		 -> stringValue(5), 
 24126 ;; Auto vars:     Size  Location     Type
 24127 ;;  GPIO            1   77[BANK0 ] unsigned char 
 24128 ;; Return value:  Size  Location     Type
 24129 ;;                  1    wreg      void 
 24130 ;; Registers used:
 24131 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24132 ;; Tracked objects:
 24133 ;;		On entry : 0/0
 24134 ;;		On exit  : 0/0
 24135 ;;		Unchanged: 0/0
 24136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24137 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24140 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24141 ;;Total ram usage:        3 bytes
 24142 ;; Hardware stack levels used:    1
 24143 ;; Hardware stack levels required when called:   10
 24144 ;; This function calls:
 24145 ;;		_GPIOAverageRead
 24146 ;;		_uint16ToString
 24147 ;; This function is called by:
 24148 ;;		_lightSensAcquisition
 24149 ;;		_leafSensAcquisition
 24150 ;; This function uses a non-reentrant model
 24151 ;;
 24152                           
 24153                           	psect	text116
 24154  00A328                     __ptext116:
 24155                           	opt callstack 0
 24156  00A328                     _acquisitionData:
 24157                           	opt callstack 18
 24158                           
 24159                           ; BSR set to: 1
 24160                           ;incstack = 0
 24161                           ;acquisitionData@GPIO stored from wreg
 24162  00A328  0100               	movlb	0	; () banked
 24163  00A32A  6FAD               	movwf	acquisitionData@GPIO& (0+255),b
 24164                           
 24165                           ;rn2483APP.c: 302: uint16ToString(GPIOAverageRead(GPIO), string);
 24166  00A32C  0100               	movlb	0	; () banked
 24167  00A32E  51AD               	movf	acquisitionData@GPIO& (0+255),w,b
 24168  00A330  EC55  F044         	call	_GPIOAverageRead
 24169  00A334  C06D  F0A5         	movff	?_GPIOAverageRead,uint16ToString@value
 24170  00A338  C06E  F0A6         	movff	?_GPIOAverageRead+1,uint16ToString@value+1
 24171  00A33C  C0AB  F0A7         	movff	acquisitionData@string,uint16ToString@output
 24172  00A340  C0AC  F0A8         	movff	acquisitionData@string+1,uint16ToString@output+1
 24173  00A344  EC87  F02C         	call	_uint16ToString	;wreg free
 24174  00A348  0012               	return		;funcret
 24175  00A34A                     __end_of_acquisitionData:
 24176                           	opt callstack 0
 24177                           
 24178 ;; *************** function _GPIOAverageRead *****************
 24179 ;; Defined at:
 24180 ;;		line 287 in file "rn2483APP.c"
 24181 ;; Parameters:    Size  Location     Type
 24182 ;;  GPIO            1    wreg     unsigned char 
 24183 ;; Auto vars:     Size  Location     Type
 24184 ;;  GPIO            1   18[BANK0 ] unsigned char 
 24185 ;;  i               2   19[BANK0 ] unsigned int 
 24186 ;;  finalValue      3   21[BANK0 ] unsigned um
 24187 ;; Return value:  Size  Location     Type
 24188 ;;                  2   13[BANK0 ] unsigned int 
 24189 ;; Registers used:
 24190 ;;		wreg, status,2, status,0, cstack
 24191 ;; Tracked objects:
 24192 ;;		On entry : 0/0
 24193 ;;		On exit  : 0/0
 24194 ;;		Unchanged: 0/0
 24195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24197 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24198 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24199 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24200 ;;Total ram usage:       11 bytes
 24201 ;; Hardware stack levels used:    1
 24202 ;; Hardware stack levels required when called:    9
 24203 ;; This function calls:
 24204 ;;		_GPIOAnalogRead
 24205 ;;		___ltdiv
 24206 ;; This function is called by:
 24207 ;;		_acquisitionData
 24208 ;;		_tempSensAcquisition
 24209 ;; This function uses a non-reentrant model
 24210 ;;
 24211                           
 24212                           	psect	text117
 24213  0088AA                     __ptext117:
 24214                           	opt callstack 0
 24215  0088AA                     _GPIOAverageRead:
 24216                           	opt callstack 19
 24217                           
 24218                           ;incstack = 0
 24219                           ;GPIOAverageRead@GPIO stored from wreg
 24220  0088AA  0100               	movlb	0	; () banked
 24221  0088AC  6F72               	movwf	GPIOAverageRead@GPIO& (0+255),b
 24222                           
 24223                           ;rn2483APP.c: 289: uint24_t finalValue = 0;
 24224  0088AE  0E00               	movlw	0
 24225  0088B0  0100               	movlb	0	; () banked
 24226  0088B2  6F75               	movwf	GPIOAverageRead@finalValue& (0+255),b
 24227  0088B4  0E00               	movlw	0
 24228  0088B6  6F76               	movwf	(GPIOAverageRead@finalValue+1)& (0+255),b
 24229  0088B8  0E00               	movlw	0
 24230  0088BA  6F77               	movwf	(GPIOAverageRead@finalValue+2)& (0+255),b
 24231                           
 24232                           ;rn2483APP.c: 291: for(uint16_t i=0; i<(1000); i++){
 24233  0088BC  0E00               	movlw	0
 24234  0088BE  6F74               	movwf	(GPIOAverageRead@i+1)& (0+255),b
 24235  0088C0  0E00               	movlw	0
 24236  0088C2  6F73               	movwf	GPIOAverageRead@i& (0+255),b
 24237  0088C4                     l15506:
 24238                           
 24239                           ; BSR set to: 0
 24240                           ;rn2483APP.c: 292: finalValue += GPIOAnalogRead(GPIO);
 24241  0088C4  5172               	movf	GPIOAverageRead@GPIO& (0+255),w,b
 24242  0088C6  EC88  F052         	call	_GPIOAnalogRead
 24243  0088CA  0100               	movlb	0	; () banked
 24244  0088CC  C068  F06F         	movff	?_GPIOAnalogRead,??_GPIOAverageRead
 24245  0088D0  C069  F070         	movff	?_GPIOAnalogRead+1,??_GPIOAverageRead+1
 24246  0088D4  6B71               	clrf	(??_GPIOAverageRead+2)& (0+255),b
 24247  0088D6  516F               	movf	??_GPIOAverageRead& (0+255),w,b
 24248  0088D8  2775               	addwf	GPIOAverageRead@finalValue& (0+255),f,b
 24249  0088DA  5170               	movf	(??_GPIOAverageRead+1)& (0+255),w,b
 24250  0088DC  2376               	addwfc	(GPIOAverageRead@finalValue+1)& (0+255),f,b
 24251  0088DE  5171               	movf	(??_GPIOAverageRead+2)& (0+255),w,b
 24252  0088E0  2377               	addwfc	(GPIOAverageRead@finalValue+2)& (0+255),f,b
 24253                           
 24254                           ; BSR set to: 0
 24255  0088E2  4B73               	infsnz	GPIOAverageRead@i& (0+255),f,b
 24256  0088E4  2B74               	incf	(GPIOAverageRead@i+1)& (0+255),f,b
 24257                           
 24258                           ; BSR set to: 0
 24259  0088E6  0EE8               	movlw	232
 24260  0088E8  5D73               	subwf	GPIOAverageRead@i& (0+255),w,b
 24261  0088EA  0E03               	movlw	3
 24262  0088EC  5974               	subwfb	(GPIOAverageRead@i+1)& (0+255),w,b
 24263  0088EE  A0D8               	btfss	status,0,c
 24264  0088F0  D7E9               	goto	l15506
 24265                           
 24266                           ; BSR set to: 0
 24267                           ;rn2483APP.c: 293: };rn2483APP.c: 294: finalValue/= 1000;
 24268  0088F2  C075  F060         	movff	GPIOAverageRead@finalValue,___ltdiv@dividend
 24269  0088F6  C076  F061         	movff	GPIOAverageRead@finalValue+1,___ltdiv@dividend+1
 24270  0088FA  C077  F062         	movff	GPIOAverageRead@finalValue+2,___ltdiv@dividend+2
 24271  0088FE  0EE8               	movlw	232
 24272  008900  6F63               	movwf	___ltdiv@divisor& (0+255),b
 24273  008902  0E03               	movlw	3
 24274  008904  6F64               	movwf	(___ltdiv@divisor+1)& (0+255),b
 24275  008906  0E00               	movlw	0
 24276  008908  6F65               	movwf	(___ltdiv@divisor+2)& (0+255),b
 24277  00890A  EC2D  F046         	call	___ltdiv	;wreg free
 24278  00890E  C060  F075         	movff	?___ltdiv,GPIOAverageRead@finalValue
 24279  008912  C061  F076         	movff	?___ltdiv+1,GPIOAverageRead@finalValue+1
 24280  008916  C062  F077         	movff	?___ltdiv+2,GPIOAverageRead@finalValue+2
 24281                           
 24282                           ;rn2483APP.c: 295: return finalValue;
 24283  00891A  C075  F06D         	movff	GPIOAverageRead@finalValue,?_GPIOAverageRead
 24284  00891E  C076  F06E         	movff	GPIOAverageRead@finalValue+1,?_GPIOAverageRead+1
 24285  008922  0012               	return		;funcret
 24286  008924                     __end_of_GPIOAverageRead:
 24287                           	opt callstack 0
 24288                           
 24289 ;; *************** function _GPIOAnalogRead *****************
 24290 ;; Defined at:
 24291 ;;		line 308 in file "rn2483APP.c"
 24292 ;; Parameters:    Size  Location     Type
 24293 ;;  GPIO            1    wreg     unsigned char 
 24294 ;; Auto vars:     Size  Location     Type
 24295 ;;  GPIO            1   12[BANK0 ] unsigned char 
 24296 ;;  result          2   10[BANK0 ] unsigned int 
 24297 ;; Return value:  Size  Location     Type
 24298 ;;                  2    8[BANK0 ] unsigned int 
 24299 ;; Registers used:
 24300 ;;		wreg, status,2, status,0, cstack
 24301 ;; Tracked objects:
 24302 ;;		On entry : 0/0
 24303 ;;		On exit  : 0/0
 24304 ;;		Unchanged: 0/0
 24305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24306 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24307 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24309 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24310 ;;Total ram usage:        5 bytes
 24311 ;; Hardware stack levels used:    1
 24312 ;; Hardware stack levels required when called:    8
 24313 ;; This function calls:
 24314 ;;		_ADC_GetConversion
 24315 ;; This function is called by:
 24316 ;;		_GPIOAverageRead
 24317 ;; This function uses a non-reentrant model
 24318 ;;
 24319                           
 24320                           	psect	text118
 24321  00A510                     __ptext118:
 24322                           	opt callstack 0
 24323  00A510                     _GPIOAnalogRead:
 24324                           	opt callstack 19
 24325                           
 24326                           ;incstack = 0
 24327                           ;GPIOAnalogRead@GPIO stored from wreg
 24328  00A510  0100               	movlb	0	; () banked
 24329  00A512  6F6C               	movwf	GPIOAnalogRead@GPIO& (0+255),b
 24330                           
 24331                           ;rn2483APP.c: 310: adc_result_t result;;rn2483APP.c: 312: result = ADC_GetConversion(GPI
      +                          O);
 24332  00A514  0100               	movlb	0	; () banked
 24333  00A516  516C               	movf	GPIOAnalogRead@GPIO& (0+255),w,b
 24334  00A518  EC9A  F049         	call	_ADC_GetConversion
 24335  00A51C  C060  F06A         	movff	?_ADC_GetConversion,GPIOAnalogRead@result
 24336  00A520  C061  F06B         	movff	?_ADC_GetConversion+1,GPIOAnalogRead@result+1
 24337                           
 24338                           ;rn2483APP.c: 314: return result;
 24339  00A524  C06A  F068         	movff	GPIOAnalogRead@result,?_GPIOAnalogRead
 24340  00A528  C06B  F069         	movff	GPIOAnalogRead@result+1,?_GPIOAnalogRead+1
 24341  00A52C  0012               	return		;funcret
 24342  00A52E                     __end_of_GPIOAnalogRead:
 24343                           	opt callstack 0
 24344                           
 24345 ;; *************** function _ADC_GetConversion *****************
 24346 ;; Defined at:
 24347 ;;		line 110 in file "mcc_generated_files/adc.c"
 24348 ;; Parameters:    Size  Location     Type
 24349 ;;  channel         1    wreg     enum E5859
 24350 ;; Auto vars:     Size  Location     Type
 24351 ;;  channel         1    7[BANK0 ] enum E5859
 24352 ;;  result          2    5[BANK0 ] unsigned int 
 24353 ;; Return value:  Size  Location     Type
 24354 ;;                  2    0[BANK0 ] unsigned int 
 24355 ;; Registers used:
 24356 ;;		wreg, status,2, status,0
 24357 ;; Tracked objects:
 24358 ;;		On entry : 0/0
 24359 ;;		On exit  : 0/0
 24360 ;;		Unchanged: 0/0
 24361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24362 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24363 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24364 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24365 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24366 ;;Total ram usage:        8 bytes
 24367 ;; Hardware stack levels used:    1
 24368 ;; Hardware stack levels required when called:    7
 24369 ;; This function calls:
 24370 ;;		Nothing
 24371 ;; This function is called by:
 24372 ;;		_GPIOAnalogRead
 24373 ;; This function uses a non-reentrant model
 24374 ;;
 24375                           
 24376                           	psect	text119
 24377  009334                     __ptext119:
 24378                           	opt callstack 0
 24379  009334                     _ADC_GetConversion:
 24380                           	opt callstack 19
 24381                           
 24382                           ;incstack = 0
 24383                           ;ADC_GetConversion@channel stored from wreg
 24384  009334  0100               	movlb	0	; () banked
 24385  009336  6F67               	movwf	ADC_GetConversion@channel& (0+255),b
 24386                           
 24387                           ;adc.c: 113: ADCON0bits.CHS = channel;
 24388  009338  C067  F062         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
 24389  00933C  0100               	movlb	0	; () banked
 24390  00933E  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 24391  009340  4762               	rlncf	??_ADC_GetConversion& (0+255),f,b
 24392  009342  50C2               	movf	4034,w,c	;volatile
 24393  009344  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 24394  009346  0B83               	andlw	-125
 24395  009348  1962               	xorwf	??_ADC_GetConversion& (0+255),w,b
 24396  00934A  6EC2               	movwf	4034,c	;volatile
 24397                           
 24398                           ; BSR set to: 0
 24399                           ;adc.c: 116: ADCON0bits.ADON = 1;
 24400  00934C  80C2               	bsf	4034,0,c	;volatile
 24401                           
 24402                           ; BSR set to: 0
 24403                           ;adc.c: 119: ADCON0bits.GO_nDONE = 1;
 24404  00934E  82C2               	bsf	4034,1,c	;volatile
 24405  009350                     l2528:
 24406  009350  B2C2               	btfsc	4034,1,c	;volatile
 24407  009352  D7FE               	goto	l2528
 24408                           
 24409                           ;adc.c: 124: };adc.c: 127: adc_result_t result = ((adc_result_t)((ADRESH << 8) + ADRESL)
      +                          );
 24410  009354  50C4               	movf	4036,w,c	;volatile
 24411  009356  0100               	movlb	0	; () banked
 24412  009358  6F63               	movwf	(??_ADC_GetConversion+1)& (0+255),b
 24413  00935A  6B62               	clrf	??_ADC_GetConversion& (0+255),b
 24414  00935C  50C3               	movf	4035,w,c	;volatile
 24415  00935E  2562               	addwf	??_ADC_GetConversion& (0+255),w,b
 24416  009360  6F65               	movwf	ADC_GetConversion@result& (0+255),b
 24417  009362  0E00               	movlw	0
 24418  009364  2163               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
 24419  009366  6F66               	movwf	(ADC_GetConversion@result+1)& (0+255),b
 24420                           
 24421                           ;adc.c: 128: return result>>6;
 24422  009368  C065  F062         	movff	ADC_GetConversion@result,??_ADC_GetConversion
 24423  00936C  C066  F063         	movff	ADC_GetConversion@result+1,??_ADC_GetConversion+1
 24424  009370  0E06               	movlw	6
 24425  009372  6F64               	movwf	(??_ADC_GetConversion+2)& (0+255),b
 24426  009374                     u13985:
 24427  009374  90D8               	bcf	status,0,c
 24428  009376  3363               	rrcf	(??_ADC_GetConversion+1)& (0+255),f,b
 24429  009378  3362               	rrcf	??_ADC_GetConversion& (0+255),f,b
 24430  00937A  2F64               	decfsz	(??_ADC_GetConversion+2)& (0+255),f,b
 24431  00937C  D7FB               	goto	u13985
 24432  00937E  C062  F060         	movff	??_ADC_GetConversion,?_ADC_GetConversion
 24433  009382  C063  F061         	movff	??_ADC_GetConversion+1,?_ADC_GetConversion+1
 24434                           
 24435                           ; BSR set to: 0
 24436  009386  0012               	return		;funcret
 24437  009388                     __end_of_ADC_GetConversion:
 24438                           	opt callstack 0
 24439                           
 24440 ;; *************** function _impedenceAcquisition *****************
 24441 ;; Defined at:
 24442 ;;		line 325 in file "acuadori.c"
 24443 ;; Parameters:    Size  Location     Type
 24444 ;;		None
 24445 ;; Auto vars:     Size  Location     Type
 24446 ;;		None
 24447 ;; Return value:  Size  Location     Type
 24448 ;;                  1    wreg      void 
 24449 ;; Registers used:
 24450 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24451 ;; Tracked objects:
 24452 ;;		On entry : 0/0
 24453 ;;		On exit  : 0/0
 24454 ;;		Unchanged: 0/0
 24455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24460 ;;Total ram usage:        0 bytes
 24461 ;; Hardware stack levels used:    1
 24462 ;; Hardware stack levels required when called:   11
 24463 ;; This function calls:
 24464 ;;		_adaptString
 24465 ;;		_averageMeasure
 24466 ;;		_sinGenStart
 24467 ;;		_uint16ToString
 24468 ;; This function is called by:
 24469 ;;		_acuadoriApp
 24470 ;; This function uses a non-reentrant model
 24471 ;;
 24472                           
 24473                           	psect	text120
 24474  009C7E                     __ptext120:
 24475                           	opt callstack 0
 24476  009C7E                     _impedenceAcquisition:
 24477                           	opt callstack 18
 24478                           
 24479                           ;acuadori.c: 326: sinGenStart();
 24480                           
 24481                           ; BSR set to: 0
 24482                           ;incstack = 0
 24483  009C7E  ECC6  F02D         	call	_sinGenStart	;wreg free
 24484                           
 24485                           ;acuadori.c: 327: uint16ToString(averageMeasure(), stringValue);
 24486  009C82  ECCD  F041         	call	_averageMeasure	;wreg free
 24487  009C86  C06A  F0A5         	movff	?_averageMeasure,uint16ToString@value
 24488  009C8A  C06B  F0A6         	movff	?_averageMeasure+1,uint16ToString@value+1
 24489  009C8E  0E6F               	movlw	low _stringValue
 24490  009C90  0100               	movlb	0	; () banked
 24491  009C92  6FA7               	movwf	uint16ToString@output& (0+255),b
 24492  009C94  0E01               	movlw	high _stringValue
 24493  009C96  6FA8               	movwf	(uint16ToString@output+1)& (0+255),b
 24494  009C98  EC87  F02C         	call	_uint16ToString	;wreg free
 24495                           
 24496                           ;acuadori.c: 328: stringValueLength = adaptString(stringValue, 5);
 24497  009C9C  0E6F               	movlw	low _stringValue
 24498  009C9E  0100               	movlb	0	; () banked
 24499  009CA0  6F60               	movwf	adaptString@string& (0+255),b
 24500  009CA2  0E01               	movlw	high _stringValue
 24501  009CA4  6F61               	movwf	(adaptString@string+1)& (0+255),b
 24502  009CA6  0E05               	movlw	5
 24503  009CA8  6F62               	movwf	adaptString@length& (0+255),b
 24504  009CAA  ECCE  F044         	call	_adaptString	;wreg free
 24505  009CAE  0101               	movlb	1	; () banked
 24506  009CB0  6FF9               	movwf	_stringValueLength& (0+255),b
 24507                           
 24508                           ; BSR set to: 1
 24509  009CB2  0012               	return		;funcret
 24510  009CB4                     __end_of_impedenceAcquisition:
 24511                           	opt callstack 0
 24512                           
 24513 ;; *************** function _uint16ToString *****************
 24514 ;; Defined at:
 24515 ;;		line 257 in file "rn2483APP.c"
 24516 ;; Parameters:    Size  Location     Type
 24517 ;;  value           2   69[BANK0 ] unsigned int 
 24518 ;;  output          2   71[BANK0 ] PTR unsigned char 
 24519 ;;		 -> stringValue(5), 
 24520 ;; Auto vars:     Size  Location     Type
 24521 ;;  position        2    0        unsigned int 
 24522 ;; Return value:  Size  Location     Type
 24523 ;;                  1    wreg      void 
 24524 ;; Registers used:
 24525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24526 ;; Tracked objects:
 24527 ;;		On entry : 0/0
 24528 ;;		On exit  : 0/0
 24529 ;;		Unchanged: 0/0
 24530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24531 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24532 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24534 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24535 ;;Total ram usage:        6 bytes
 24536 ;; Hardware stack levels used:    1
 24537 ;; Hardware stack levels required when called:    8
 24538 ;; This function calls:
 24539 ;;		___lwdiv
 24540 ;;		___lwmod
 24541 ;; This function is called by:
 24542 ;;		_acquisitionData
 24543 ;;		_tempSensAcquisition
 24544 ;;		_impedenceAcquisition
 24545 ;; This function uses a non-reentrant model
 24546 ;;
 24547                           
 24548                           	psect	text121
 24549  00590E                     __ptext121:
 24550                           	opt callstack 0
 24551  00590E                     _uint16ToString:
 24552                           	opt callstack 20
 24553                           
 24554                           ;rn2483APP.c: 271: output[position + 4] = '0' + (value % 10);
 24555                           
 24556                           ; BSR set to: 1
 24557                           ;incstack = 0
 24558  00590E  0100               	movlb	0	; () banked
 24559  005910  EE20 F004          	lfsr	2,4
 24560  005914  51A7               	movf	uint16ToString@output& (0+255),w,b
 24561  005916  26D9               	addwf	fsr2l,f,c
 24562  005918  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24563  00591A  22DA               	addwfc	fsr2h,f,c
 24564  00591C  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24565  005920  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24566  005924  0E00               	movlw	0
 24567  005926  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24568  005928  0E0A               	movlw	10
 24569  00592A  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24570  00592C  ECA0  F04C         	call	___lwmod	;wreg free
 24571  005930  0100               	movlb	0	; () banked
 24572  005932  51A0               	movf	?___lwmod& (0+255),w,b
 24573  005934  0F30               	addlw	48
 24574  005936  6EDF               	movwf	indf2,c
 24575                           
 24576                           ; BSR set to: 0
 24577                           ;rn2483APP.c: 272: value /= 10;
 24578  005938  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24579  00593C  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24580  005940  0E00               	movlw	0
 24581  005942  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24582  005944  0E0A               	movlw	10
 24583  005946  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24584  005948  ECC4  F049         	call	___lwdiv	;wreg free
 24585  00594C  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24586  005950  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24587                           
 24588                           ;rn2483APP.c: 273: output[position + 3] = '0' + (value % 10);
 24589  005954  0100               	movlb	0	; () banked
 24590  005956  EE20 F003          	lfsr	2,3
 24591  00595A  51A7               	movf	uint16ToString@output& (0+255),w,b
 24592  00595C  26D9               	addwf	fsr2l,f,c
 24593  00595E  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24594  005960  22DA               	addwfc	fsr2h,f,c
 24595  005962  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24596  005966  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24597  00596A  0E00               	movlw	0
 24598  00596C  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24599  00596E  0E0A               	movlw	10
 24600  005970  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24601  005972  ECA0  F04C         	call	___lwmod	;wreg free
 24602  005976  0100               	movlb	0	; () banked
 24603  005978  51A0               	movf	?___lwmod& (0+255),w,b
 24604  00597A  0F30               	addlw	48
 24605  00597C  6EDF               	movwf	indf2,c
 24606                           
 24607                           ; BSR set to: 0
 24608                           ;rn2483APP.c: 274: value /= 10;
 24609  00597E  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24610  005982  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24611  005986  0E00               	movlw	0
 24612  005988  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24613  00598A  0E0A               	movlw	10
 24614  00598C  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24615  00598E  ECC4  F049         	call	___lwdiv	;wreg free
 24616  005992  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24617  005996  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24618                           
 24619                           ;rn2483APP.c: 275: output[position + 2] = '0' + (value % 10);
 24620  00599A  0100               	movlb	0	; () banked
 24621  00599C  EE20 F002          	lfsr	2,2
 24622  0059A0  51A7               	movf	uint16ToString@output& (0+255),w,b
 24623  0059A2  26D9               	addwf	fsr2l,f,c
 24624  0059A4  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24625  0059A6  22DA               	addwfc	fsr2h,f,c
 24626  0059A8  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24627  0059AC  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24628  0059B0  0E00               	movlw	0
 24629  0059B2  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24630  0059B4  0E0A               	movlw	10
 24631  0059B6  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24632  0059B8  ECA0  F04C         	call	___lwmod	;wreg free
 24633  0059BC  0100               	movlb	0	; () banked
 24634  0059BE  51A0               	movf	?___lwmod& (0+255),w,b
 24635  0059C0  0F30               	addlw	48
 24636  0059C2  6EDF               	movwf	indf2,c
 24637                           
 24638                           ; BSR set to: 0
 24639                           ;rn2483APP.c: 276: value /= 10;
 24640  0059C4  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24641  0059C8  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24642  0059CC  0E00               	movlw	0
 24643  0059CE  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24644  0059D0  0E0A               	movlw	10
 24645  0059D2  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24646  0059D4  ECC4  F049         	call	___lwdiv	;wreg free
 24647  0059D8  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24648  0059DC  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24649                           
 24650                           ;rn2483APP.c: 277: output[position + 1] = '0' + (value % 10);
 24651  0059E0  0100               	movlb	0	; () banked
 24652  0059E2  EE20 F001          	lfsr	2,1
 24653  0059E6  51A7               	movf	uint16ToString@output& (0+255),w,b
 24654  0059E8  26D9               	addwf	fsr2l,f,c
 24655  0059EA  51A8               	movf	(uint16ToString@output+1)& (0+255),w,b
 24656  0059EC  22DA               	addwfc	fsr2h,f,c
 24657  0059EE  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24658  0059F2  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24659  0059F6  0E00               	movlw	0
 24660  0059F8  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24661  0059FA  0E0A               	movlw	10
 24662  0059FC  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24663  0059FE  ECA0  F04C         	call	___lwmod	;wreg free
 24664  005A02  0100               	movlb	0	; () banked
 24665  005A04  51A0               	movf	?___lwmod& (0+255),w,b
 24666  005A06  0F30               	addlw	48
 24667  005A08  6EDF               	movwf	indf2,c
 24668                           
 24669                           ; BSR set to: 0
 24670                           ;rn2483APP.c: 278: value /= 10;
 24671  005A0A  C0A5  F060         	movff	uint16ToString@value,___lwdiv@dividend
 24672  005A0E  C0A6  F061         	movff	uint16ToString@value+1,___lwdiv@dividend+1
 24673  005A12  0E00               	movlw	0
 24674  005A14  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 24675  005A16  0E0A               	movlw	10
 24676  005A18  6F62               	movwf	___lwdiv@divisor& (0+255),b
 24677  005A1A  ECC4  F049         	call	___lwdiv	;wreg free
 24678  005A1E  C060  F0A5         	movff	?___lwdiv,uint16ToString@value
 24679  005A22  C061  F0A6         	movff	?___lwdiv+1,uint16ToString@value+1
 24680                           
 24681                           ;rn2483APP.c: 279: output[position] = '0' + (value % 10);
 24682  005A26  C0A5  F0A0         	movff	uint16ToString@value,___lwmod@dividend
 24683  005A2A  C0A6  F0A1         	movff	uint16ToString@value+1,___lwmod@dividend+1
 24684  005A2E  0E00               	movlw	0
 24685  005A30  0100               	movlb	0	; () banked
 24686  005A32  6FA3               	movwf	(___lwmod@divisor+1)& (0+255),b
 24687  005A34  0E0A               	movlw	10
 24688  005A36  6FA2               	movwf	___lwmod@divisor& (0+255),b
 24689  005A38  ECA0  F04C         	call	___lwmod	;wreg free
 24690  005A3C  0100               	movlb	0	; () banked
 24691  005A3E  51A0               	movf	?___lwmod& (0+255),w,b
 24692  005A40  0F30               	addlw	48
 24693  005A42  C0A7  FFD9         	movff	uint16ToString@output,fsr2l
 24694  005A46  C0A8  FFDA         	movff	uint16ToString@output+1,fsr2h
 24695  005A4A  6EDF               	movwf	indf2,c
 24696                           
 24697                           ; BSR set to: 0
 24698  005A4C  0012               	return		;funcret
 24699  005A4E                     __end_of_uint16ToString:
 24700                           	opt callstack 0
 24701                           
 24702 ;; *************** function ___lwdiv *****************
 24703 ;; Defined at:
 24704 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 24705 ;; Parameters:    Size  Location     Type
 24706 ;;  dividend        2    0[BANK0 ] unsigned int 
 24707 ;;  divisor         2    2[BANK0 ] unsigned int 
 24708 ;; Auto vars:     Size  Location     Type
 24709 ;;  quotient        2    4[BANK0 ] unsigned int 
 24710 ;;  counter         1    6[BANK0 ] unsigned char 
 24711 ;; Return value:  Size  Location     Type
 24712 ;;                  2    0[BANK0 ] unsigned int 
 24713 ;; Registers used:
 24714 ;;		wreg, status,2, status,0
 24715 ;; Tracked objects:
 24716 ;;		On entry : 0/0
 24717 ;;		On exit  : 0/0
 24718 ;;		Unchanged: 0/0
 24719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24721 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24723 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24724 ;;Total ram usage:        7 bytes
 24725 ;; Hardware stack levels used:    1
 24726 ;; Hardware stack levels required when called:    7
 24727 ;; This function calls:
 24728 ;;		Nothing
 24729 ;; This function is called by:
 24730 ;;		_uint16ToString
 24731 ;; This function uses a non-reentrant model
 24732 ;;
 24733                           
 24734                           	psect	text122
 24735  009388                     __ptext122:
 24736                           	opt callstack 0
 24737  009388                     ___lwdiv:
 24738                           	opt callstack 20
 24739                           
 24740                           ; BSR set to: 0
 24741                           ;incstack = 0
 24742  009388  0E00               	movlw	0
 24743  00938A  0100               	movlb	0	; () banked
 24744  00938C  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 24745  00938E  0E00               	movlw	0
 24746  009390  6F64               	movwf	___lwdiv@quotient& (0+255),b
 24747                           
 24748                           ; BSR set to: 0
 24749  009392  5162               	movf	___lwdiv@divisor& (0+255),w,b
 24750  009394  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 24751  009396  B4D8               	btfsc	status,2,c
 24752  009398  D01C               	goto	l3998
 24753                           
 24754                           ; BSR set to: 0
 24755  00939A  0E01               	movlw	1
 24756  00939C  6F66               	movwf	___lwdiv@counter& (0+255),b
 24757  00939E  D004               	goto	l15204
 24758  0093A0                     l15202:
 24759                           
 24760                           ; BSR set to: 0
 24761  0093A0  90D8               	bcf	status,0,c
 24762  0093A2  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 24763  0093A4  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 24764  0093A6  2B66               	incf	___lwdiv@counter& (0+255),f,b
 24765  0093A8                     l15204:
 24766                           
 24767                           ; BSR set to: 0
 24768  0093A8  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 24769  0093AA  D7FA               	goto	l15202
 24770  0093AC                     u15610:
 24771                           
 24772                           ; BSR set to: 0
 24773  0093AC  90D8               	bcf	status,0,c
 24774  0093AE  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 24775  0093B0  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 24776                           
 24777                           ; BSR set to: 0
 24778  0093B2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 24779  0093B4  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 24780  0093B6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24781  0093B8  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 24782  0093BA  A0D8               	btfss	status,0,c
 24783  0093BC  D005               	goto	l15214
 24784                           
 24785                           ; BSR set to: 0
 24786  0093BE  5162               	movf	___lwdiv@divisor& (0+255),w,b
 24787  0093C0  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 24788  0093C2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24789  0093C4  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 24790                           
 24791                           ; BSR set to: 0
 24792  0093C6  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 24793  0093C8                     l15214:
 24794                           
 24795                           ; BSR set to: 0
 24796  0093C8  90D8               	bcf	status,0,c
 24797  0093CA  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 24798  0093CC  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 24799                           
 24800                           ; BSR set to: 0
 24801  0093CE  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 24802  0093D0  D7ED               	goto	u15610
 24803  0093D2                     l3998:
 24804                           
 24805                           ; BSR set to: 0
 24806  0093D2  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 24807  0093D6  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 24808                           
 24809                           ; BSR set to: 0
 24810  0093DA  0012               	return		;funcret
 24811  0093DC                     __end_of___lwdiv:
 24812                           	opt callstack 0
 24813                           
 24814 ;; *************** function _sinGenStart *****************
 24815 ;; Defined at:
 24816 ;;		line 154 in file "acuadori.c"
 24817 ;; Parameters:    Size  Location     Type
 24818 ;;		None
 24819 ;; Auto vars:     Size  Location     Type
 24820 ;;  i               2    8[BANK0 ] int 
 24821 ;;  t               1   13[BANK0 ] unsigned char 
 24822 ;;  i               1   12[BANK0 ] char 
 24823 ;;  d               2   10[BANK0 ] unsigned int 
 24824 ;; Return value:  Size  Location     Type
 24825 ;;                  1    wreg      void 
 24826 ;; Registers used:
 24827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24828 ;; Tracked objects:
 24829 ;;		On entry : 0/0
 24830 ;;		On exit  : 0/0
 24831 ;;		Unchanged: 0/0
 24832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24834 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24836 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24837 ;;Total ram usage:        8 bytes
 24838 ;; Hardware stack levels used:    1
 24839 ;; Hardware stack levels required when called:   10
 24840 ;; This function calls:
 24841 ;;		_TMR3_StartTimer
 24842 ;;		_TMR3_StopTimer
 24843 ;;		_TMR5_StartTimer
 24844 ;;		_TMR5_StopTimer
 24845 ;;		_i2c_sendData
 24846 ;;		_i2c_stop
 24847 ;;		_i2c_waitACK
 24848 ;; This function is called by:
 24849 ;;		_impedenceAcquisition
 24850 ;; This function uses a non-reentrant model
 24851 ;;
 24852                           
 24853                           	psect	text123
 24854  005B8C                     __ptext123:
 24855                           	opt callstack 0
 24856  005B8C                     _sinGenStart:
 24857                           	opt callstack 18
 24858                           
 24859                           ;acuadori.c: 156: for(uint16_t d=0; d<200; d++){
 24860                           
 24861                           ; BSR set to: 0
 24862                           ;incstack = 0
 24863  005B8C  0E00               	movlw	0
 24864  005B8E  0100               	movlb	0	; () banked
 24865  005B90  6F6B               	movwf	(sinGenStart@d+1)& (0+255),b
 24866  005B92  0E00               	movlw	0
 24867  005B94  6F6A               	movwf	sinGenStart@d& (0+255),b
 24868  005B96                     l16138:
 24869                           
 24870                           ; BSR set to: 0
 24871                           ;acuadori.c: 158: TMR5_StopTimer();
 24872  005B96  EC90  F054         	call	_TMR5_StopTimer	;wreg free
 24873                           
 24874                           ;acuadori.c: 159: TMR3_StartTimer();
 24875  005B9A  EC9D  F054         	call	_TMR3_StartTimer	;wreg free
 24876  005B9E                     l3317:
 24877  005B9E  A084               	btfss	3972,0,c	;volatile
 24878  005BA0  D7FE               	goto	l3317
 24879                           
 24880                           ;acuadori.c: 165: LATE &= ~0x2;
 24881  005BA2  928D               	bcf	3981,1,c	;volatile
 24882                           
 24883                           ;acuadori.c: 167: for(int8_t i = 7; i > -1; i--){
 24884  005BA4  0E07               	movlw	7
 24885  005BA6  0100               	movlb	0	; () banked
 24886  005BA8  6F6C               	movwf	sinGenStart@i& (0+255),b
 24887  005BAA                     l16148:
 24888                           
 24889                           ; BSR set to: 0
 24890                           ;acuadori.c: 168: if(flag){
 24891  005BAA  5041               	movf	_flag,w,c
 24892  005BAC  B4D8               	btfsc	status,2,c
 24893  005BAE  D002               	goto	u16820
 24894  005BB0                     u16810:
 24895  005BB0  A084               	btfss	3972,0,c	;volatile
 24896  005BB2  D7FE               	goto	u16810
 24897  005BB4                     u16820:
 24898  005BB4  B084               	btfsc	3972,0,c	;volatile
 24899  005BB6  D7FE               	goto	u16820
 24900                           
 24901                           ;acuadori.c: 176: if(address & (1 << i)){
 24902  005BB8  C06C  F066         	movff	sinGenStart@i,??_sinGenStart
 24903  005BBC  0E01               	movlw	1
 24904  005BBE  0100               	movlb	0	; () banked
 24905  005BC0  6F67               	movwf	(??_sinGenStart+1)& (0+255),b
 24906  005BC2  2B66               	incf	??_sinGenStart& (0+255),f,b
 24907  005BC4  D002               	goto	u16844
 24908  005BC6                     u16845:
 24909  005BC6  90D8               	bcf	status,0,c
 24910  005BC8  3767               	rlcf	(??_sinGenStart+1)& (0+255),f,b
 24911  005BCA                     u16844:
 24912  005BCA  2F66               	decfsz	??_sinGenStart& (0+255),f,b
 24913  005BCC  D7FC               	goto	u16845
 24914  005BCE  0E90               	movlw	144
 24915  005BD0  0100               	movlb	0	; () banked
 24916  005BD2  1767               	andwf	(??_sinGenStart+1)& (0+255),f,b
 24917  005BD4  B4D8               	btfsc	status,2,c
 24918  005BD6  D002               	goto	l16156
 24919                           
 24920                           ; BSR set to: 0
 24921                           ;acuadori.c: 178: LATE |= 0x2;
 24922  005BD8  828D               	bsf	3981,1,c	;volatile
 24923                           
 24924                           ;acuadori.c: 180: }
 24925  005BDA  D001               	goto	l16158
 24926  005BDC                     l16156:
 24927                           
 24928                           ; BSR set to: 0
 24929                           ;acuadori.c: 181: else{;acuadori.c: 183: LATE &= ~ 0x2;
 24930  005BDC  928D               	bcf	3981,1,c	;volatile
 24931  005BDE                     l16158:
 24932                           
 24933                           ; BSR set to: 0
 24934                           ;acuadori.c: 185: };acuadori.c: 186: flag = 1;
 24935  005BDE  0E01               	movlw	1
 24936  005BE0  6E41               	movwf	_flag,c
 24937                           
 24938                           ; BSR set to: 0
 24939  005BE2  076C               	decf	sinGenStart@i& (0+255),f,b
 24940                           
 24941                           ; BSR set to: 0
 24942  005BE4  AF6C               	btfss	sinGenStart@i& (0+255),7,b
 24943  005BE6  D7E1               	goto	l16148
 24944  005BE8                     u16860:
 24945  005BE8  A084               	btfss	3972,0,c	;volatile
 24946  005BEA  D7FE               	goto	u16860
 24947  005BEC                     u16870:
 24948  005BEC  B084               	btfsc	3972,0,c	;volatile
 24949  005BEE  D7FE               	goto	u16870
 24950                           
 24951                           ;acuadori.c: 191: if(!i2c_waitACK() || 1){
 24952  005BF0  EC16  F053         	call	_i2c_waitACK	;wreg free
 24953                           
 24954                           ;acuadori.c: 194: for(uint8_t t=0; t<2; t++){
 24955  005BF4  0E00               	movlw	0
 24956  005BF6  0100               	movlb	0	; () banked
 24957  005BF8  6F6D               	movwf	sinGenStart@t& (0+255),b
 24958  005BFA                     l16172:
 24959                           
 24960                           ; BSR set to: 0
 24961                           ;acuadori.c: 196: i2c_sendData(pulseSignal[t]);
 24962  005BFA  516D               	movf	sinGenStart@t& (0+255),w,b
 24963  005BFC  0D02               	mullw	2
 24964  005BFE  0EF3               	movlw	low _pulseSignal
 24965  005C00  24F3               	addwf	prodl,w,c
 24966  005C02  6ED9               	movwf	fsr2l,c
 24967  005C04  0E01               	movlw	high _pulseSignal
 24968  005C06  20F4               	addwfc	prodh,w,c
 24969  005C08  6EDA               	movwf	fsr2h,c
 24970  005C0A  CFDE F064          	movff	postinc2,i2c_sendData@data
 24971  005C0E  CFDD F065          	movff	postdec2,i2c_sendData@data+1
 24972  005C12  EC3B  F04F         	call	_i2c_sendData	;wreg free
 24973  005C16  0100               	movlb	0	; () banked
 24974  005C18  2B6D               	incf	sinGenStart@t& (0+255),f,b
 24975                           
 24976                           ; BSR set to: 0
 24977  005C1A  0E01               	movlw	1
 24978  005C1C  656D               	cpfsgt	sinGenStart@t& (0+255),b
 24979  005C1E  D7ED               	goto	l16172
 24980                           
 24981                           ; BSR set to: 0
 24982                           ;acuadori.c: 199: };acuadori.c: 200: TMR3_StopTimer();
 24983  005C20  EC9B  F054         	call	_TMR3_StopTimer	;wreg free
 24984                           
 24985                           ;acuadori.c: 202: for(int i=0; i<70; i++){
 24986  005C24  0E00               	movlw	0
 24987  005C26  0100               	movlb	0	; () banked
 24988  005C28  6F69               	movwf	(sinGenStart@i_5307+1)& (0+255),b
 24989  005C2A  0E00               	movlw	0
 24990  005C2C  6F68               	movwf	sinGenStart@i_5307& (0+255),b
 24991  005C2E                     l3342:
 24992                           
 24993                           ; BSR set to: 0
 24994                           ;acuadori.c: 203: _delay((unsigned long)((1)*(16000000/4000000.0)));
 24995  005C2E  D000               	nop2		;2 cycle nop
 24996  005C30  D000               	nop2		;2 cycle nop
 24997  005C32  0100               	movlb	0	; () banked
 24998  005C34  4B68               	infsnz	sinGenStart@i_5307& (0+255),f,b
 24999  005C36  2B69               	incf	(sinGenStart@i_5307+1)& (0+255),f,b
 25000                           
 25001                           ; BSR set to: 0
 25002  005C38  BF69               	btfsc	(sinGenStart@i_5307+1)& (0+255),7,b
 25003  005C3A  D7F9               	goto	l3342
 25004  005C3C  5169               	movf	(sinGenStart@i_5307+1)& (0+255),w,b
 25005  005C3E  E104               	bnz	u16900
 25006  005C40  0E46               	movlw	70
 25007  005C42  5D68               	subwf	sinGenStart@i_5307& (0+255),w,b
 25008  005C44  A0D8               	btfss	status,0,c
 25009  005C46  D7F3               	goto	l3342
 25010  005C48                     u16900:
 25011                           
 25012                           ; BSR set to: 0
 25013                           ;acuadori.c: 204: };acuadori.c: 208: ADCON0bits.CHS = 0x02;
 25014  005C48  50C2               	movf	4034,w,c	;volatile
 25015  005C4A  0B83               	andlw	-125
 25016  005C4C  0908               	iorlw	8
 25017  005C4E  6EC2               	movwf	4034,c	;volatile
 25018                           
 25019                           ; BSR set to: 0
 25020                           ;acuadori.c: 211: ADCON0bits.ADON = 1;
 25021  005C50  80C2               	bsf	4034,0,c	;volatile
 25022                           
 25023                           ; BSR set to: 0
 25024                           ;acuadori.c: 214: ADCON0bits.GO_nDONE = 1;
 25025  005C52  82C2               	bsf	4034,1,c	;volatile
 25026  005C54                     l3344:
 25027  005C54  B2C2               	btfsc	4034,1,c	;volatile
 25028  005C56  D7FE               	goto	l3344
 25029                           
 25030                           ;acuadori.c: 219: };acuadori.c: 222: result = ((adc_result_t)((ADRESH << 8) + ADRESL));
 25031  005C58  50C4               	movf	4036,w,c	;volatile
 25032  005C5A  0100               	movlb	0	; () banked
 25033  005C5C  6F67               	movwf	(??_sinGenStart+1)& (0+255),b
 25034  005C5E  6B66               	clrf	??_sinGenStart& (0+255),b
 25035  005C60  50C3               	movf	4035,w,c	;volatile
 25036  005C62  2566               	addwf	??_sinGenStart& (0+255),w,b
 25037  005C64  0101               	movlb	1	; () banked
 25038  005C66  6F18               	movwf	_result& (0+255),b
 25039  005C68  0E00               	movlw	0
 25040  005C6A  0100               	movlb	0	; () banked
 25041  005C6C  2167               	addwfc	(??_sinGenStart+1)& (0+255),w,b
 25042  005C6E  0101               	movlb	1	; () banked
 25043  005C70  6F19               	movwf	(_result+1)& (0+255),b
 25044                           
 25045                           ;acuadori.c: 223: result>>=6;
 25046  005C72  0E06               	movlw	6
 25047  005C74  0100               	movlb	0	; () banked
 25048  005C76  6F66               	movwf	??_sinGenStart& (0+255),b
 25049  005C78                     u16925:
 25050  005C78  90D8               	bcf	status,0,c
 25051  005C7A  0101               	movlb	1	; () banked
 25052  005C7C  3319               	rrcf	(_result+1)& (0+255),f,b
 25053  005C7E  3318               	rrcf	_result& (0+255),f,b
 25054  005C80  0100               	movlb	0	; () banked
 25055  005C82  2F66               	decfsz	??_sinGenStart& (0+255),f,b
 25056  005C84  D7F9               	goto	u16925
 25057                           
 25058                           ; BSR set to: 0
 25059                           ;acuadori.c: 224: capValues[d] = result;
 25060  005C86  90D8               	bcf	status,0,c
 25061  005C88  356A               	rlcf	sinGenStart@d& (0+255),w,b
 25062  005C8A  6ED9               	movwf	fsr2l,c
 25063  005C8C  356B               	rlcf	(sinGenStart@d+1)& (0+255),w,b
 25064  005C8E  6EDA               	movwf	fsr2h,c
 25065  005C90  0E28               	movlw	low _capValues
 25066  005C92  26D9               	addwf	fsr2l,f,c
 25067  005C94  0E05               	movlw	high _capValues
 25068  005C96  22DA               	addwfc	fsr2h,f,c
 25069  005C98  C118  FFDE         	movff	_result,postinc2
 25070  005C9C  C119  FFDD         	movff	_result+1,postdec2
 25071                           
 25072                           ; BSR set to: 0
 25073                           ;acuadori.c: 225: TMR3_StartTimer();
 25074  005CA0  EC9D  F054         	call	_TMR3_StartTimer	;wreg free
 25075                           
 25076                           ;acuadori.c: 226: };acuadori.c: 228: i2c_stop();
 25077  005CA4  EC23  F04F         	call	_i2c_stop	;wreg free
 25078                           
 25079                           ;acuadori.c: 229: TMR3_StopTimer();
 25080  005CA8  EC9B  F054         	call	_TMR3_StopTimer	;wreg free
 25081                           
 25082                           ;acuadori.c: 230: TMR5_StartTimer();
 25083  005CAC  EC93  F054         	call	_TMR5_StartTimer	;wreg free
 25084  005CB0  0100               	movlb	0	; () banked
 25085  005CB2  4B6A               	infsnz	sinGenStart@d& (0+255),f,b
 25086  005CB4  2B6B               	incf	(sinGenStart@d+1)& (0+255),f,b
 25087                           
 25088                           ; BSR set to: 0
 25089  005CB6  516B               	movf	(sinGenStart@d+1)& (0+255),w,b
 25090  005CB8  E105               	bnz	u16930
 25091  005CBA  0EC8               	movlw	200
 25092  005CBC  5D6A               	subwf	sinGenStart@d& (0+255),w,b
 25093  005CBE  B0D8               	btfsc	status,0,c
 25094  005CC0  0012               	return	
 25095  005CC2  D769               	goto	l16138
 25096  005CC4                     u16930:
 25097                           
 25098                           ; BSR set to: 0
 25099  005CC4  0012               	return		;funcret
 25100  005CC6                     __end_of_sinGenStart:
 25101                           	opt callstack 0
 25102                           
 25103 ;; *************** function _i2c_stop *****************
 25104 ;; Defined at:
 25105 ;;		line 38 in file "I2C.c"
 25106 ;; Parameters:    Size  Location     Type
 25107 ;;		None
 25108 ;; Auto vars:     Size  Location     Type
 25109 ;;		None
 25110 ;; Return value:  Size  Location     Type
 25111 ;;                  1    wreg      void 
 25112 ;; Registers used:
 25113 ;;		wreg, status,2, status,0, cstack
 25114 ;; Tracked objects:
 25115 ;;		On entry : 0/0
 25116 ;;		On exit  : 0/0
 25117 ;;		Unchanged: 0/0
 25118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25123 ;;Total ram usage:        0 bytes
 25124 ;; Hardware stack levels used:    1
 25125 ;; Hardware stack levels required when called:    9
 25126 ;; This function calls:
 25127 ;;		_GPIODigitalRead
 25128 ;;		_i2c_usdelay
 25129 ;;		_resetSDA
 25130 ;;		_setSDA
 25131 ;; This function is called by:
 25132 ;;		_sinGenStart
 25133 ;; This function uses a non-reentrant model
 25134 ;;
 25135                           
 25136                           	psect	text124
 25137  009E46                     __ptext124:
 25138                           	opt callstack 0
 25139  009E46                     _i2c_stop:
 25140                           	opt callstack 18
 25141                           
 25142                           ;I2C.c: 40: resetSDA();
 25143                           
 25144                           ; BSR set to: 0
 25145                           ;incstack = 0
 25146  009E46  ECE1  F053         	call	_resetSDA	;wreg free
 25147  009E4A                     l15532:
 25148  009E4A  0E05               	movlw	5
 25149  009E4C  EC60  F03D         	call	_GPIODigitalRead
 25150  009E50  0900               	iorlw	0
 25151  009E52  B4D8               	btfsc	status,2,c
 25152  009E54  D7FA               	goto	l15532
 25153                           
 25154                           ;I2C.c: 43: setSDA();
 25155  009E56  ECDA  F053         	call	_setSDA	;wreg free
 25156                           
 25157                           ;I2C.c: 44: i2c_usdelay(1);
 25158  009E5A  0E00               	movlw	0
 25159  009E5C  0100               	movlb	0	; () banked
 25160  009E5E  6F61               	movwf	(i2c_usdelay@time+1)& (0+255),b
 25161  009E60  0E01               	movlw	1
 25162  009E62  6F60               	movwf	i2c_usdelay@time& (0+255),b
 25163  009E64  EC71  F051         	call	_i2c_usdelay	;wreg free
 25164  009E68                     l15536:
 25165  009E68  0E05               	movlw	5
 25166  009E6A  EC60  F03D         	call	_GPIODigitalRead
 25167  009E6E  0900               	iorlw	0
 25168  009E70  B4D8               	btfsc	status,2,c
 25169  009E72  0012               	return	
 25170  009E74  D7F9               	goto	l15536
 25171  009E76                     __end_of_i2c_stop:
 25172                           	opt callstack 0
 25173                           
 25174 ;; *************** function _setSDA *****************
 25175 ;; Defined at:
 25176 ;;		line 161 in file "I2C.c"
 25177 ;; Parameters:    Size  Location     Type
 25178 ;;		None
 25179 ;; Auto vars:     Size  Location     Type
 25180 ;;		None
 25181 ;; Return value:  Size  Location     Type
 25182 ;;                  1    wreg      void 
 25183 ;; Registers used:
 25184 ;;		wreg, status,2, status,0, cstack
 25185 ;; Tracked objects:
 25186 ;;		On entry : 0/0
 25187 ;;		On exit  : 0/0
 25188 ;;		Unchanged: 0/0
 25189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25194 ;;Total ram usage:        0 bytes
 25195 ;; Hardware stack levels used:    1
 25196 ;; Hardware stack levels required when called:    8
 25197 ;; This function calls:
 25198 ;;		_GPIODigitalWrite
 25199 ;; This function is called by:
 25200 ;;		_i2c_stop
 25201 ;; This function uses a non-reentrant model
 25202 ;;
 25203                           
 25204                           	psect	text125
 25205  00A7B4                     __ptext125:
 25206                           	opt callstack 0
 25207  00A7B4                     _setSDA:
 25208                           	opt callstack 18
 25209                           
 25210                           ;I2C.c: 162: GPIODigitalWrite(0x06, 1);
 25211                           
 25212                           ;incstack = 0
 25213  00A7B4  0E01               	movlw	1
 25214  00A7B6  0100               	movlb	0	; () banked
 25215  00A7B8  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 25216  00A7BA  0E06               	movlw	6
 25217  00A7BC  ECE7  F036         	call	_GPIODigitalWrite
 25218  00A7C0  0012               	return		;funcret
 25219  00A7C2                     __end_of_setSDA:
 25220                           	opt callstack 0
 25221                           
 25222 ;; *************** function _resetSDA *****************
 25223 ;; Defined at:
 25224 ;;		line 168 in file "I2C.c"
 25225 ;; Parameters:    Size  Location     Type
 25226 ;;		None
 25227 ;; Auto vars:     Size  Location     Type
 25228 ;;		None
 25229 ;; Return value:  Size  Location     Type
 25230 ;;                  1    wreg      void 
 25231 ;; Registers used:
 25232 ;;		wreg, status,2, status,0, cstack
 25233 ;; Tracked objects:
 25234 ;;		On entry : 0/0
 25235 ;;		On exit  : 0/0
 25236 ;;		Unchanged: 0/0
 25237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25242 ;;Total ram usage:        0 bytes
 25243 ;; Hardware stack levels used:    1
 25244 ;; Hardware stack levels required when called:    8
 25245 ;; This function calls:
 25246 ;;		_GPIODigitalWrite
 25247 ;; This function is called by:
 25248 ;;		_i2c_stop
 25249 ;; This function uses a non-reentrant model
 25250 ;;
 25251                           
 25252                           	psect	text126
 25253  00A7C2                     __ptext126:
 25254                           	opt callstack 0
 25255  00A7C2                     _resetSDA:
 25256                           	opt callstack 18
 25257                           
 25258                           ;I2C.c: 169: GPIODigitalWrite(0x06, 0);
 25259                           
 25260                           ;incstack = 0
 25261  00A7C2  0E00               	movlw	0
 25262  00A7C4  0100               	movlb	0	; () banked
 25263  00A7C6  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 25264  00A7C8  0E06               	movlw	6
 25265  00A7CA  ECE7  F036         	call	_GPIODigitalWrite
 25266  00A7CE  0012               	return		;funcret
 25267  00A7D0                     __end_of_resetSDA:
 25268                           	opt callstack 0
 25269                           
 25270 ;; *************** function _i2c_usdelay *****************
 25271 ;; Defined at:
 25272 ;;		line 155 in file "I2C.c"
 25273 ;; Parameters:    Size  Location     Type
 25274 ;;  time            2    0[BANK0 ] unsigned int 
 25275 ;; Auto vars:     Size  Location     Type
 25276 ;;  i               2    2[BANK0 ] int 
 25277 ;; Return value:  Size  Location     Type
 25278 ;;                  1    wreg      void 
 25279 ;; Registers used:
 25280 ;;		wreg, status,2, status,0
 25281 ;; Tracked objects:
 25282 ;;		On entry : 0/0
 25283 ;;		On exit  : 0/0
 25284 ;;		Unchanged: 0/0
 25285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25286 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25287 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25289 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25290 ;;Total ram usage:        4 bytes
 25291 ;; Hardware stack levels used:    1
 25292 ;; Hardware stack levels required when called:    7
 25293 ;; This function calls:
 25294 ;;		Nothing
 25295 ;; This function is called by:
 25296 ;;		_i2c_stop
 25297 ;; This function uses a non-reentrant model
 25298 ;;
 25299                           
 25300                           	psect	text127
 25301  00A2E2                     __ptext127:
 25302                           	opt callstack 0
 25303  00A2E2                     _i2c_usdelay:
 25304                           	opt callstack 19
 25305                           
 25306                           ;I2C.c: 156: for (int i=0; i< time; i++){
 25307                           
 25308                           ;incstack = 0
 25309  00A2E2  0E00               	movlw	0
 25310  00A2E4  0100               	movlb	0	; () banked
 25311  00A2E6  6F63               	movwf	(i2c_usdelay@i+1)& (0+255),b
 25312  00A2E8  0E00               	movlw	0
 25313  00A2EA  6F62               	movwf	i2c_usdelay@i& (0+255),b
 25314  00A2EC  D005               	goto	l15148
 25315  00A2EE                     l3502:
 25316                           
 25317                           ; BSR set to: 0
 25318                           ;I2C.c: 157: _delay((unsigned long)((1)*(16000000/4000000.0)));
 25319  00A2EE  D000               	nop2		;2 cycle nop
 25320  00A2F0  D000               	nop2		;2 cycle nop
 25321  00A2F2  0100               	movlb	0	; () banked
 25322  00A2F4  4B62               	infsnz	i2c_usdelay@i& (0+255),f,b
 25323  00A2F6  2B63               	incf	(i2c_usdelay@i+1)& (0+255),f,b
 25324  00A2F8                     l15148:
 25325                           
 25326                           ; BSR set to: 0
 25327  00A2F8  5160               	movf	i2c_usdelay@time& (0+255),w,b
 25328  00A2FA  5D62               	subwf	i2c_usdelay@i& (0+255),w,b
 25329  00A2FC  5161               	movf	(i2c_usdelay@time+1)& (0+255),w,b
 25330  00A2FE  5963               	subwfb	(i2c_usdelay@i+1)& (0+255),w,b
 25331  00A300  B0D8               	btfsc	status,0,c
 25332  00A302  0012               	return	
 25333  00A304  D7F4               	goto	l3502
 25334  00A306                     __end_of_i2c_usdelay:
 25335                           	opt callstack 0
 25336                           
 25337 ;; *************** function _GPIODigitalRead *****************
 25338 ;; Defined at:
 25339 ;;		line 173 in file "rn2483APP.c"
 25340 ;; Parameters:    Size  Location     Type
 25341 ;;  GPIO            1    wreg     unsigned char 
 25342 ;; Auto vars:     Size  Location     Type
 25343 ;;  GPIO            1    0[BANK0 ] unsigned char 
 25344 ;; Return value:  Size  Location     Type
 25345 ;;                  1    wreg      unsigned char 
 25346 ;; Registers used:
 25347 ;;		wreg, status,2, status,0
 25348 ;; Tracked objects:
 25349 ;;		On entry : 0/0
 25350 ;;		On exit  : 0/0
 25351 ;;		Unchanged: 0/0
 25352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25356 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25357 ;;Total ram usage:        1 bytes
 25358 ;; Hardware stack levels used:    1
 25359 ;; Hardware stack levels required when called:    7
 25360 ;; This function calls:
 25361 ;;		Nothing
 25362 ;; This function is called by:
 25363 ;;		_i2c_stop
 25364 ;; This function uses a non-reentrant model
 25365 ;;
 25366                           
 25367                           	psect	text128
 25368  007AC0                     __ptext128:
 25369                           	opt callstack 0
 25370  007AC0                     _GPIODigitalRead:
 25371                           	opt callstack 19
 25372                           
 25373                           ; BSR set to: 0
 25374                           ;incstack = 0
 25375                           ;GPIODigitalRead@GPIO stored from wreg
 25376  007AC0  0100               	movlb	0	; () banked
 25377  007AC2  6F60               	movwf	GPIODigitalRead@GPIO& (0+255),b
 25378                           
 25379                           ;rn2483APP.c: 174: switch(GPIO){
 25380  007AC4  D035               	goto	l15132
 25381  007AC6                     l15058:
 25382                           
 25383                           ; BSR set to: 0
 25384                           ;rn2483APP.c: 176: return ((PORTA & 0x1) >> 0x0);
 25385  007AC6  5080               	movf	3968,w,c	;volatile
 25386  007AC8  0B01               	andlw	1
 25387  007ACA  0012               	return	
 25388  007ACC                     l15064:
 25389                           
 25390                           ; BSR set to: 0
 25391                           ;rn2483APP.c: 179: return ((PORTA & 0x2) >> 0x1);
 25392  007ACC  90D8               	bcf	status,0,c
 25393  007ACE  3080               	rrcf	3968,w,c	;volatile
 25394  007AD0  0B01               	andlw	1
 25395  007AD2  0012               	return	
 25396  007AD4                     l15070:
 25397                           
 25398                           ; BSR set to: 0
 25399                           ;rn2483APP.c: 182: return ((PORTA & 0x4) >> 0x2);
 25400  007AD4  4080               	rrncf	3968,w,c	;volatile
 25401  007AD6  42E8               	rrncf	wreg,f,c
 25402  007AD8  0B3F               	andlw	63
 25403  007ADA  0B01               	andlw	1
 25404  007ADC  0012               	return	
 25405  007ADE                     l15076:
 25406                           
 25407                           ; BSR set to: 0
 25408                           ;rn2483APP.c: 185: return ((PORTA & 0x8) >> 0x3);
 25409  007ADE  3880               	swapf	3968,w,c	;volatile
 25410  007AE0  46E8               	rlncf	wreg,f,c
 25411  007AE2  0B1F               	andlw	31
 25412  007AE4  0B01               	andlw	1
 25413  007AE6  0012               	return	
 25414  007AE8                     l15082:
 25415                           
 25416                           ; BSR set to: 0
 25417                           ;rn2483APP.c: 188: return ((PORTA & 0x10) >> 0x4);
 25418  007AE8  3880               	swapf	3968,w,c	;volatile
 25419  007AEA  0B0F               	andlw	15
 25420  007AEC  0B01               	andlw	1
 25421  007AEE  0012               	return	
 25422  007AF0                     l15088:
 25423                           
 25424                           ; BSR set to: 0
 25425                           ;rn2483APP.c: 191: return ((PORTA & 0x20) >> 0x5);
 25426  007AF0  3880               	swapf	3968,w,c	;volatile
 25427  007AF2  42E8               	rrncf	wreg,f,c
 25428  007AF4  0B07               	andlw	7
 25429  007AF6  0B01               	andlw	1
 25430  007AF8  0012               	return	
 25431  007AFA                     l15094:
 25432                           
 25433                           ; BSR set to: 0
 25434                           ;rn2483APP.c: 194: return ((PORTE & 0x1) >> 0x0);
 25435  007AFA  5084               	movf	3972,w,c	;volatile
 25436  007AFC  0B01               	andlw	1
 25437  007AFE  0012               	return	
 25438  007B00                     l15100:
 25439                           
 25440                           ; BSR set to: 0
 25441                           ;rn2483APP.c: 197: return ((PORTE & 0x2) >> 0x1);
 25442  007B00  90D8               	bcf	status,0,c
 25443  007B02  3084               	rrcf	3972,w,c	;volatile
 25444  007B04  0B01               	andlw	1
 25445  007B06  0012               	return	
 25446  007B08                     l15106:
 25447                           
 25448                           ; BSR set to: 0
 25449                           ;rn2483APP.c: 200: return ((PORTD & 0x4) >> 0x2);
 25450  007B08  4083               	rrncf	3971,w,c	;volatile
 25451  007B0A  42E8               	rrncf	wreg,f,c
 25452  007B0C  0B3F               	andlw	63
 25453  007B0E  0B01               	andlw	1
 25454  007B10  0012               	return	
 25455  007B12                     l15112:
 25456                           
 25457                           ; BSR set to: 0
 25458                           ;rn2483APP.c: 203: return ((PORTE & 0x4) >> 0x2);
 25459  007B12  4084               	rrncf	3972,w,c	;volatile
 25460  007B14  42E8               	rrncf	wreg,f,c
 25461  007B16  0B3F               	andlw	63
 25462  007B18  0B01               	andlw	1
 25463  007B1A  0012               	return	
 25464  007B1C                     l15118:
 25465                           
 25466                           ; BSR set to: 0
 25467                           ;rn2483APP.c: 206: return ((PORTC & 0x20) >> 0x5);
 25468  007B1C  3882               	swapf	3970,w,c	;volatile
 25469  007B1E  42E8               	rrncf	wreg,f,c
 25470  007B20  0B07               	andlw	7
 25471  007B22  0B01               	andlw	1
 25472  007B24  0012               	return	
 25473  007B26                     l15124:
 25474                           
 25475                           ; BSR set to: 0
 25476                           ;rn2483APP.c: 209: return ((PORTD & 0x20) >> 0x5);
 25477  007B26  3883               	swapf	3971,w,c	;volatile
 25478  007B28  42E8               	rrncf	wreg,f,c
 25479  007B2A  0B07               	andlw	7
 25480  007B2C  0B01               	andlw	1
 25481  007B2E  0012               	return	
 25482  007B30                     l15132:
 25483  007B30  0100               	movlb	0	; () banked
 25484  007B32  5160               	movf	GPIODigitalRead@GPIO& (0+255),w,b
 25485                           
 25486                           ; Switch size 1, requested type "simple"
 25487                           ; Number of cases is 12, Range of values is 0 to 255
 25488                           ; switch strategies available:
 25489                           ; Name         Instructions Cycles
 25490                           ; simple_byte           37    19 (average)
 25491                           ;	Chosen strategy is simple_byte
 25492  007B34  0A00               	xorlw	0	; case 0
 25493  007B36  B4D8               	btfsc	status,2,c
 25494  007B38  D7C6               	goto	l15058
 25495  007B3A  0A01               	xorlw	1	; case 1
 25496  007B3C  B4D8               	btfsc	status,2,c
 25497  007B3E  D7C6               	goto	l15064
 25498  007B40  0A03               	xorlw	3	; case 2
 25499  007B42  B4D8               	btfsc	status,2,c
 25500  007B44  D7C7               	goto	l15070
 25501  007B46  0A01               	xorlw	1	; case 3
 25502  007B48  B4D8               	btfsc	status,2,c
 25503  007B4A  D7C9               	goto	l15076
 25504  007B4C  0A07               	xorlw	7	; case 4
 25505  007B4E  B4D8               	btfsc	status,2,c
 25506  007B50  D7CF               	goto	l15088
 25507  007B52  0A01               	xorlw	1	; case 5
 25508  007B54  B4D8               	btfsc	status,2,c
 25509  007B56  D7D1               	goto	l15094
 25510  007B58  0A03               	xorlw	3	; case 6
 25511  007B5A  B4D8               	btfsc	status,2,c
 25512  007B5C  D7D1               	goto	l15100
 25513  007B5E  0A01               	xorlw	1	; case 7
 25514  007B60  B4D8               	btfsc	status,2,c
 25515  007B62  D7D7               	goto	l15112
 25516  007B64  0A16               	xorlw	22	; case 17
 25517  007B66  B4D8               	btfsc	status,2,c
 25518  007B68  D7D9               	goto	l15118
 25519  007B6A  0A07               	xorlw	7	; case 22
 25520  007B6C  B4D8               	btfsc	status,2,c
 25521  007B6E  D7CC               	goto	l15106
 25522  007B70  0A0F               	xorlw	15	; case 25
 25523  007B72  B4D8               	btfsc	status,2,c
 25524  007B74  D7D8               	goto	l15124
 25525  007B76  0AE6               	xorlw	230	; case 255
 25526  007B78  A4D8               	btfss	status,2,c
 25527  007B7A  0012               	return	
 25528  007B7C  D7B5               	goto	l15082
 25529  007B7E                     __end_of_GPIODigitalRead:
 25530                           	opt callstack 0
 25531                           
 25532 ;; *************** function _i2c_sendData *****************
 25533 ;; Defined at:
 25534 ;;		line 134 in file "I2C.c"
 25535 ;; Parameters:    Size  Location     Type
 25536 ;;  data            2    4[BANK0 ] unsigned int 
 25537 ;; Auto vars:     Size  Location     Type
 25538 ;;		None
 25539 ;; Return value:  Size  Location     Type
 25540 ;;                  1    wreg      unsigned char 
 25541 ;; Registers used:
 25542 ;;		wreg, status,2, status,0, cstack
 25543 ;; Tracked objects:
 25544 ;;		On entry : 0/0
 25545 ;;		On exit  : 0/0
 25546 ;;		Unchanged: 0/0
 25547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25548 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25551 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25552 ;;Total ram usage:        2 bytes
 25553 ;; Hardware stack levels used:    1
 25554 ;; Hardware stack levels required when called:    9
 25555 ;; This function calls:
 25556 ;;		_i2c_sdaWrite
 25557 ;; This function is called by:
 25558 ;;		_sinGenStart
 25559 ;; This function uses a non-reentrant model
 25560 ;;
 25561                           
 25562                           	psect	text129
 25563  009E76                     __ptext129:
 25564                           	opt callstack 0
 25565  009E76                     _i2c_sendData:
 25566                           	opt callstack 18
 25567                           
 25568                           ;I2C.c: 136: data <<= 2;
 25569                           
 25570                           ; BSR set to: 0
 25571                           ;incstack = 0
 25572  009E76  0100               	movlb	0	; () banked
 25573  009E78  90D8               	bcf	status,0,c
 25574  009E7A  3764               	rlcf	i2c_sendData@data& (0+255),f,b
 25575  009E7C  3765               	rlcf	(i2c_sendData@data+1)& (0+255),f,b
 25576  009E7E  90D8               	bcf	status,0,c
 25577  009E80  3764               	rlcf	i2c_sendData@data& (0+255),f,b
 25578  009E82  3765               	rlcf	(i2c_sendData@data+1)& (0+255),f,b
 25579                           
 25580                           ; BSR set to: 0
 25581                           ;I2C.c: 137: data &= 0x0FFC;
 25582  009E84  0EFC               	movlw	252
 25583  009E86  1764               	andwf	i2c_sendData@data& (0+255),f,b
 25584  009E88  0E0F               	movlw	15
 25585  009E8A  1765               	andwf	(i2c_sendData@data+1)& (0+255),f,b
 25586                           
 25587                           ; BSR set to: 0
 25588                           ;I2C.c: 138: high = data >>8;
 25589  009E8C  5165               	movf	(i2c_sendData@data+1)& (0+255),w,b
 25590  009E8E  0101               	movlb	1	; () banked
 25591  009E90  6F22               	movwf	_high& (0+255),b
 25592                           
 25593                           ; BSR set to: 1
 25594                           ;I2C.c: 139: low = data & 0x00FF;
 25595  009E92  C064  F121         	movff	i2c_sendData@data,_low
 25596                           
 25597                           ; BSR set to: 1
 25598                           ;I2C.c: 140: i2c_sdaWrite(high);
 25599  009E96  5122               	movf	_high& (0+255),w,b
 25600  009E98  ECBD  F048         	call	_i2c_sdaWrite
 25601                           
 25602                           ;I2C.c: 141: i2c_sdaWrite(low);
 25603  009E9C  0101               	movlb	1	; () banked
 25604  009E9E  5121               	movf	_low& (0+255),w,b
 25605  009EA0  ECBD  F048         	call	_i2c_sdaWrite
 25606  009EA4  0012               	return		;funcret
 25607  009EA6                     __end_of_i2c_sendData:
 25608                           	opt callstack 0
 25609                           
 25610 ;; *************** function _i2c_sdaWrite *****************
 25611 ;; Defined at:
 25612 ;;		line 53 in file "I2C.c"
 25613 ;; Parameters:    Size  Location     Type
 25614 ;;  data            1    wreg     unsigned char 
 25615 ;; Auto vars:     Size  Location     Type
 25616 ;;  data            1    2[BANK0 ] unsigned char 
 25617 ;;  i               1    3[BANK0 ] char 
 25618 ;; Return value:  Size  Location     Type
 25619 ;;                  1    wreg      unsigned char 
 25620 ;; Registers used:
 25621 ;;		wreg, status,2, status,0, cstack
 25622 ;; Tracked objects:
 25623 ;;		On entry : 0/0
 25624 ;;		On exit  : 0/0
 25625 ;;		Unchanged: 0/0
 25626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25628 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25629 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25630 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25631 ;;Total ram usage:        4 bytes
 25632 ;; Hardware stack levels used:    1
 25633 ;; Hardware stack levels required when called:    8
 25634 ;; This function calls:
 25635 ;;		_i2c_waitACK
 25636 ;; This function is called by:
 25637 ;;		_i2c_sendData
 25638 ;; This function uses a non-reentrant model
 25639 ;;
 25640                           
 25641                           	psect	text130
 25642  00917A                     __ptext130:
 25643                           	opt callstack 0
 25644  00917A                     _i2c_sdaWrite:
 25645                           	opt callstack 18
 25646                           
 25647                           ;incstack = 0
 25648                           ;i2c_sdaWrite@data stored from wreg
 25649  00917A  0100               	movlb	0	; () banked
 25650  00917C  6F62               	movwf	i2c_sdaWrite@data& (0+255),b
 25651                           
 25652                           ;I2C.c: 55: flag = 0;
 25653  00917E  0E00               	movlw	0
 25654  009180  6E40               	movwf	I2C@flag,c
 25655                           
 25656                           ;I2C.c: 57: for(int8_t i = 7; i > -1; i--){
 25657  009182  0E07               	movlw	7
 25658  009184  0100               	movlb	0	; () banked
 25659  009186  6F63               	movwf	i2c_sdaWrite@i& (0+255),b
 25660  009188                     l15156:
 25661                           
 25662                           ; BSR set to: 0
 25663                           ;I2C.c: 58: if(flag){
 25664  009188  5040               	movf	I2C@flag,w,c
 25665  00918A  B4D8               	btfsc	status,2,c
 25666  00918C  D002               	goto	u15500
 25667  00918E                     u15490:
 25668  00918E  A084               	btfss	3972,0,c	;volatile
 25669  009190  D7FE               	goto	u15490
 25670  009192                     u15500:
 25671  009192  B084               	btfsc	3972,0,c	;volatile
 25672  009194  D7FE               	goto	u15500
 25673                           
 25674                           ;I2C.c: 63: if(data & (1 << i)){
 25675  009196  C063  F060         	movff	i2c_sdaWrite@i,??_i2c_sdaWrite
 25676  00919A  0E01               	movlw	1
 25677  00919C  0100               	movlb	0	; () banked
 25678  00919E  6F61               	movwf	(??_i2c_sdaWrite+1)& (0+255),b
 25679  0091A0  2B60               	incf	??_i2c_sdaWrite& (0+255),f,b
 25680  0091A2  D002               	goto	u15524
 25681  0091A4                     u15525:
 25682  0091A4  90D8               	bcf	status,0,c
 25683  0091A6  3761               	rlcf	(??_i2c_sdaWrite+1)& (0+255),f,b
 25684  0091A8                     u15524:
 25685  0091A8  2F60               	decfsz	??_i2c_sdaWrite& (0+255),f,b
 25686  0091AA  D7FC               	goto	u15525
 25687  0091AC  0100               	movlb	0	; () banked
 25688  0091AE  5161               	movf	(??_i2c_sdaWrite+1)& (0+255),w,b
 25689  0091B0  1562               	andwf	i2c_sdaWrite@data& (0+255),w,b
 25690  0091B2  0900               	iorlw	0
 25691  0091B4  B4D8               	btfsc	status,2,c
 25692  0091B6  D002               	goto	l15164
 25693                           
 25694                           ; BSR set to: 0
 25695                           ;I2C.c: 64: LATE |= 0x2;
 25696  0091B8  828D               	bsf	3981,1,c	;volatile
 25697                           
 25698                           ;I2C.c: 65: }
 25699  0091BA  D001               	goto	l15166
 25700  0091BC                     l15164:
 25701                           
 25702                           ; BSR set to: 0
 25703                           ;I2C.c: 66: else{;I2C.c: 67: LATE &= ~0x2;
 25704  0091BC  928D               	bcf	3981,1,c	;volatile
 25705  0091BE                     l15166:
 25706                           
 25707                           ; BSR set to: 0
 25708                           ;I2C.c: 68: };I2C.c: 69: flag = 1;
 25709  0091BE  0E01               	movlw	1
 25710  0091C0  6E40               	movwf	I2C@flag,c
 25711                           
 25712                           ; BSR set to: 0
 25713  0091C2  0763               	decf	i2c_sdaWrite@i& (0+255),f,b
 25714                           
 25715                           ; BSR set to: 0
 25716  0091C4  AF63               	btfss	i2c_sdaWrite@i& (0+255),7,b
 25717  0091C6  D7E0               	goto	l15156
 25718  0091C8                     u15540:
 25719  0091C8  A084               	btfss	3972,0,c	;volatile
 25720  0091CA  D7FE               	goto	u15540
 25721  0091CC                     u15550:
 25722  0091CC  B084               	btfsc	3972,0,c	;volatile
 25723  0091CE  D7FE               	goto	u15550
 25724                           
 25725                           ;I2C.c: 73: return i2c_waitACK();;	Return value of _i2c_sdaWrite is never used
 25726  0091D0  EC16  F053         	call	_i2c_waitACK	;wreg free
 25727  0091D4  0012               	return		;funcret
 25728  0091D6                     __end_of_i2c_sdaWrite:
 25729                           	opt callstack 0
 25730                           
 25731 ;; *************** function _i2c_waitACK *****************
 25732 ;; Defined at:
 25733 ;;		line 112 in file "I2C.c"
 25734 ;; Parameters:    Size  Location     Type
 25735 ;;		None
 25736 ;; Auto vars:     Size  Location     Type
 25737 ;;		None
 25738 ;; Return value:  Size  Location     Type
 25739 ;;                  1    wreg      unsigned char 
 25740 ;; Registers used:
 25741 ;;		wreg, status,2, status,0
 25742 ;; Tracked objects:
 25743 ;;		On entry : 0/0
 25744 ;;		On exit  : 0/0
 25745 ;;		Unchanged: 0/0
 25746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25751 ;;Total ram usage:        0 bytes
 25752 ;; Hardware stack levels used:    1
 25753 ;; Hardware stack levels required when called:    7
 25754 ;; This function calls:
 25755 ;;		Nothing
 25756 ;; This function is called by:
 25757 ;;		_sinGenStart
 25758 ;;		_i2c_sdaWrite
 25759 ;;		_i2c_sdaAddress
 25760 ;; This function uses a non-reentrant model
 25761 ;;
 25762                           
 25763                           	psect	text131
 25764  00A62C                     __ptext131:
 25765                           	opt callstack 0
 25766  00A62C                     _i2c_waitACK:
 25767                           	opt callstack 20
 25768                           
 25769                           ;I2C.c: 118: TRISE |= (0x2);
 25770                           
 25771                           ;incstack = 0
 25772  00A62C  8296               	bsf	3990,1,c	;volatile
 25773  00A62E                     l3483:
 25774  00A62E  A084               	btfss	3972,0,c	;volatile
 25775  00A630  D7FE               	goto	l3483
 25776                           
 25777                           ;I2C.c: 125: nACK = (PORTE & 0x2);
 25778  00A632  5084               	movf	3972,w,c	;volatile
 25779  00A634  0B02               	andlw	2
 25780  00A636  0101               	movlb	1	; () banked
 25781  00A638  6F20               	movwf	_nACK& (0+255),b
 25782                           
 25783                           ; BSR set to: 1
 25784                           ;I2C.c: 127: TRISE &= ~(0x2);
 25785  00A63A  9296               	bcf	3990,1,c	;volatile
 25786  00A63C                     l3486:
 25787  00A63C  B084               	btfsc	3972,0,c	;volatile
 25788  00A63E  D7FE               	goto	l3486
 25789                           
 25790                           ;I2C.c: 131: return nACK;
 25791  00A640  0101               	movlb	1	; () banked
 25792  00A642  5120               	movf	_nACK& (0+255),w,b
 25793                           
 25794                           ; BSR set to: 1
 25795  00A644  0012               	return		;funcret
 25796  00A646                     __end_of_i2c_waitACK:
 25797                           	opt callstack 0
 25798                           
 25799 ;; *************** function _TMR5_StopTimer *****************
 25800 ;; Defined at:
 25801 ;;		line 104 in file "mcc_generated_files/tmr5.c"
 25802 ;; Parameters:    Size  Location     Type
 25803 ;;		None
 25804 ;; Auto vars:     Size  Location     Type
 25805 ;;		None
 25806 ;; Return value:  Size  Location     Type
 25807 ;;                  1    wreg      void 
 25808 ;; Registers used:
 25809 ;;		None
 25810 ;; Tracked objects:
 25811 ;;		On entry : 0/0
 25812 ;;		On exit  : 0/0
 25813 ;;		Unchanged: 0/0
 25814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25819 ;;Total ram usage:        0 bytes
 25820 ;; Hardware stack levels used:    1
 25821 ;; Hardware stack levels required when called:    7
 25822 ;; This function calls:
 25823 ;;		Nothing
 25824 ;; This function is called by:
 25825 ;;		_sinGenStart
 25826 ;; This function uses a non-reentrant model
 25827 ;;
 25828                           
 25829                           	psect	text132
 25830  00A920                     __ptext132:
 25831                           	opt callstack 0
 25832  00A920                     _TMR5_StopTimer:
 25833                           	opt callstack 20
 25834                           
 25835                           ;tmr5.c: 107: T5CONbits.TMR5ON = 0;
 25836                           
 25837                           ; BSR set to: 1
 25838                           ;incstack = 0
 25839  00A920  010F               	movlb	15	; () banked
 25840  00A922  914E               	bcf	78,0,b	;volatile
 25841                           
 25842                           ; BSR set to: 15
 25843  00A924  0012               	return		;funcret
 25844  00A926                     __end_of_TMR5_StopTimer:
 25845                           	opt callstack 0
 25846                           
 25847 ;; *************** function _TMR5_StartTimer *****************
 25848 ;; Defined at:
 25849 ;;		line 97 in file "mcc_generated_files/tmr5.c"
 25850 ;; Parameters:    Size  Location     Type
 25851 ;;		None
 25852 ;; Auto vars:     Size  Location     Type
 25853 ;;		None
 25854 ;; Return value:  Size  Location     Type
 25855 ;;                  1    wreg      void 
 25856 ;; Registers used:
 25857 ;;		None
 25858 ;; Tracked objects:
 25859 ;;		On entry : 0/0
 25860 ;;		On exit  : 0/0
 25861 ;;		Unchanged: 0/0
 25862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25867 ;;Total ram usage:        0 bytes
 25868 ;; Hardware stack levels used:    1
 25869 ;; Hardware stack levels required when called:    7
 25870 ;; This function calls:
 25871 ;;		Nothing
 25872 ;; This function is called by:
 25873 ;;		_main
 25874 ;;		_sinGenStart
 25875 ;; This function uses a non-reentrant model
 25876 ;;
 25877                           
 25878                           	psect	text133
 25879  00A926                     __ptext133:
 25880                           	opt callstack 0
 25881  00A926                     _TMR5_StartTimer:
 25882                           	opt callstack 20
 25883                           
 25884                           ;tmr5.c: 100: T5CONbits.TMR5ON = 1;
 25885                           
 25886                           ; BSR set to: 15
 25887                           ;incstack = 0
 25888  00A926  010F               	movlb	15	; () banked
 25889  00A928  814E               	bsf	78,0,b	;volatile
 25890                           
 25891                           ; BSR set to: 15
 25892  00A92A  0012               	return		;funcret
 25893  00A92C                     __end_of_TMR5_StartTimer:
 25894                           	opt callstack 0
 25895                           
 25896 ;; *************** function _TMR3_StopTimer *****************
 25897 ;; Defined at:
 25898 ;;		line 101 in file "mcc_generated_files/tmr3.c"
 25899 ;; Parameters:    Size  Location     Type
 25900 ;;		None
 25901 ;; Auto vars:     Size  Location     Type
 25902 ;;		None
 25903 ;; Return value:  Size  Location     Type
 25904 ;;                  1    wreg      void 
 25905 ;; Registers used:
 25906 ;;		None
 25907 ;; Tracked objects:
 25908 ;;		On entry : 0/0
 25909 ;;		On exit  : 0/0
 25910 ;;		Unchanged: 0/0
 25911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25916 ;;Total ram usage:        0 bytes
 25917 ;; Hardware stack levels used:    1
 25918 ;; Hardware stack levels required when called:    7
 25919 ;; This function calls:
 25920 ;;		Nothing
 25921 ;; This function is called by:
 25922 ;;		_sinGenStart
 25923 ;;		_i2c_sclStop
 25924 ;; This function uses a non-reentrant model
 25925 ;;
 25926                           
 25927                           	psect	text134
 25928  00A936                     __ptext134:
 25929                           	opt callstack 0
 25930  00A936                     _TMR3_StopTimer:
 25931                           	opt callstack 20
 25932                           
 25933                           ;tmr3.c: 104: T3CONbits.TMR3ON = 0;
 25934                           
 25935                           ; BSR set to: 15
 25936                           ;incstack = 0
 25937  00A936  90B1               	bcf	4017,0,c	;volatile
 25938  00A938  0012               	return		;funcret
 25939  00A93A                     __end_of_TMR3_StopTimer:
 25940                           	opt callstack 0
 25941                           
 25942 ;; *************** function _TMR3_StartTimer *****************
 25943 ;; Defined at:
 25944 ;;		line 95 in file "mcc_generated_files/tmr3.c"
 25945 ;; Parameters:    Size  Location     Type
 25946 ;;		None
 25947 ;; Auto vars:     Size  Location     Type
 25948 ;;		None
 25949 ;; Return value:  Size  Location     Type
 25950 ;;                  1    wreg      void 
 25951 ;; Registers used:
 25952 ;;		None
 25953 ;; Tracked objects:
 25954 ;;		On entry : 0/0
 25955 ;;		On exit  : 0/0
 25956 ;;		Unchanged: 0/0
 25957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25962 ;;Total ram usage:        0 bytes
 25963 ;; Hardware stack levels used:    1
 25964 ;; Hardware stack levels required when called:    7
 25965 ;; This function calls:
 25966 ;;		Nothing
 25967 ;; This function is called by:
 25968 ;;		_sinGenStart
 25969 ;;		_i2c_sclStart
 25970 ;; This function uses a non-reentrant model
 25971 ;;
 25972                           
 25973                           	psect	text135
 25974  00A93A                     __ptext135:
 25975                           	opt callstack 0
 25976  00A93A                     _TMR3_StartTimer:
 25977                           	opt callstack 20
 25978                           
 25979                           ;tmr3.c: 98: T3CONbits.TMR3ON = 1;
 25980                           
 25981                           ;incstack = 0
 25982  00A93A  80B1               	bsf	4017,0,c	;volatile
 25983  00A93C  0012               	return		;funcret
 25984  00A93E                     __end_of_TMR3_StartTimer:
 25985                           	opt callstack 0
 25986                           
 25987 ;; *************** function _averageMeasure *****************
 25988 ;; Defined at:
 25989 ;;		line 435 in file "acuadori.c"
 25990 ;; Parameters:    Size  Location     Type
 25991 ;;		None
 25992 ;; Auto vars:     Size  Location     Type
 25993 ;;  i               2   20[BANK0 ] unsigned int 
 25994 ;;  value           3   17[BANK0 ] unsigned um
 25995 ;; Return value:  Size  Location     Type
 25996 ;;                  2   10[BANK0 ] unsigned int 
 25997 ;; Registers used:
 25998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25999 ;; Tracked objects:
 26000 ;;		On entry : 0/0
 26001 ;;		On exit  : 0/0
 26002 ;;		Unchanged: 0/0
 26003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26004 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26005 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26006 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26007 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26008 ;;Total ram usage:       12 bytes
 26009 ;; Hardware stack levels used:    1
 26010 ;; Hardware stack levels required when called:    8
 26011 ;; This function calls:
 26012 ;;		___ltdiv
 26013 ;; This function is called by:
 26014 ;;		_impedenceAcquisition
 26015 ;; This function uses a non-reentrant model
 26016 ;;
 26017                           
 26018                           	psect	text136
 26019  00839A                     __ptext136:
 26020                           	opt callstack 0
 26021  00839A                     _averageMeasure:
 26022                           	opt callstack 20
 26023                           
 26024                           ;acuadori.c: 436: uint24_t value = 0;
 26025                           
 26026                           ;incstack = 0
 26027  00839A  0E00               	movlw	0
 26028  00839C  0100               	movlb	0	; () banked
 26029  00839E  6F71               	movwf	averageMeasure@value& (0+255),b
 26030  0083A0  0E00               	movlw	0
 26031  0083A2  6F72               	movwf	(averageMeasure@value+1)& (0+255),b
 26032  0083A4  0E00               	movlw	0
 26033  0083A6  6F73               	movwf	(averageMeasure@value+2)& (0+255),b
 26034                           
 26035                           ;acuadori.c: 437: for(uint16_t i=0; i<(200); i++){
 26036  0083A8  0E00               	movlw	0
 26037  0083AA  6F75               	movwf	(averageMeasure@i+1)& (0+255),b
 26038  0083AC  0E00               	movlw	0
 26039  0083AE  6F74               	movwf	averageMeasure@i& (0+255),b
 26040  0083B0                     l16264:
 26041                           
 26042                           ; BSR set to: 0
 26043                           ;acuadori.c: 438: value += capValues[i];
 26044  0083B0  90D8               	bcf	status,0,c
 26045  0083B2  3574               	rlcf	averageMeasure@i& (0+255),w,b
 26046  0083B4  6ED9               	movwf	fsr2l,c
 26047  0083B6  3575               	rlcf	(averageMeasure@i+1)& (0+255),w,b
 26048  0083B8  6EDA               	movwf	fsr2h,c
 26049  0083BA  0E28               	movlw	low _capValues
 26050  0083BC  26D9               	addwf	fsr2l,f,c
 26051  0083BE  0E05               	movlw	high _capValues
 26052  0083C0  22DA               	addwfc	fsr2h,f,c
 26053  0083C2  CFDE F06C          	movff	postinc2,??_averageMeasure
 26054  0083C6  CFDD F06D          	movff	postdec2,??_averageMeasure+1
 26055  0083CA  C06C  F06E         	movff	??_averageMeasure,??_averageMeasure+2
 26056  0083CE  C06D  F06F         	movff	??_averageMeasure+1,??_averageMeasure+3
 26057  0083D2  6B70               	clrf	(??_averageMeasure+4)& (0+255),b
 26058  0083D4  516E               	movf	(??_averageMeasure+2)& (0+255),w,b
 26059  0083D6  2771               	addwf	averageMeasure@value& (0+255),f,b
 26060  0083D8  516F               	movf	(??_averageMeasure+3)& (0+255),w,b
 26061  0083DA  2372               	addwfc	(averageMeasure@value+1)& (0+255),f,b
 26062  0083DC  5170               	movf	(??_averageMeasure+4)& (0+255),w,b
 26063  0083DE  2373               	addwfc	(averageMeasure@value+2)& (0+255),f,b
 26064                           
 26065                           ; BSR set to: 0
 26066  0083E0  4B74               	infsnz	averageMeasure@i& (0+255),f,b
 26067  0083E2  2B75               	incf	(averageMeasure@i+1)& (0+255),f,b
 26068                           
 26069                           ; BSR set to: 0
 26070  0083E4  5175               	movf	(averageMeasure@i+1)& (0+255),w,b
 26071  0083E6  E104               	bnz	u16950
 26072  0083E8  0EC8               	movlw	200
 26073  0083EA  5D74               	subwf	averageMeasure@i& (0+255),w,b
 26074  0083EC  A0D8               	btfss	status,0,c
 26075  0083EE  D7E0               	goto	l16264
 26076  0083F0                     u16950:
 26077                           
 26078                           ; BSR set to: 0
 26079                           ;acuadori.c: 439: };acuadori.c: 440: value/= 200;
 26080  0083F0  C071  F060         	movff	averageMeasure@value,___ltdiv@dividend
 26081  0083F4  C072  F061         	movff	averageMeasure@value+1,___ltdiv@dividend+1
 26082  0083F8  C073  F062         	movff	averageMeasure@value+2,___ltdiv@dividend+2
 26083  0083FC  0EC8               	movlw	200
 26084  0083FE  6F63               	movwf	___ltdiv@divisor& (0+255),b
 26085  008400  0E00               	movlw	0
 26086  008402  6F64               	movwf	(___ltdiv@divisor+1)& (0+255),b
 26087  008404  0E00               	movlw	0
 26088  008406  6F65               	movwf	(___ltdiv@divisor+2)& (0+255),b
 26089  008408  EC2D  F046         	call	___ltdiv	;wreg free
 26090  00840C  C060  F071         	movff	?___ltdiv,averageMeasure@value
 26091  008410  C061  F072         	movff	?___ltdiv+1,averageMeasure@value+1
 26092  008414  C062  F073         	movff	?___ltdiv+2,averageMeasure@value+2
 26093                           
 26094                           ;acuadori.c: 441: return value;
 26095  008418  C071  F06A         	movff	averageMeasure@value,?_averageMeasure
 26096  00841C  C072  F06B         	movff	averageMeasure@value+1,?_averageMeasure+1
 26097  008420  0012               	return		;funcret
 26098  008422                     __end_of_averageMeasure:
 26099                           	opt callstack 0
 26100                           
 26101 ;; *************** function ___ltdiv *****************
 26102 ;; Defined at:
 26103 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ltdiv.c"
 26104 ;; Parameters:    Size  Location     Type
 26105 ;;  dividend        3    0[BANK0 ] unsigned um
 26106 ;;  divisor         3    3[BANK0 ] unsigned um
 26107 ;; Auto vars:     Size  Location     Type
 26108 ;;  quotient        3    6[BANK0 ] unsigned um
 26109 ;;  counter         1    9[BANK0 ] unsigned char 
 26110 ;; Return value:  Size  Location     Type
 26111 ;;                  3    0[BANK0 ] unsigned um
 26112 ;; Registers used:
 26113 ;;		wreg, status,2, status,0
 26114 ;; Tracked objects:
 26115 ;;		On entry : 0/0
 26116 ;;		On exit  : 0/0
 26117 ;;		Unchanged: 0/0
 26118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26119 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26120 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26122 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26123 ;;Total ram usage:       10 bytes
 26124 ;; Hardware stack levels used:    1
 26125 ;; Hardware stack levels required when called:    7
 26126 ;; This function calls:
 26127 ;;		Nothing
 26128 ;; This function is called by:
 26129 ;;		_GPIOAverageRead
 26130 ;;		_averageMeasure
 26131 ;; This function uses a non-reentrant model
 26132 ;;
 26133                           
 26134                           	psect	text137
 26135  008C5A                     __ptext137:
 26136                           	opt callstack 0
 26137  008C5A                     ___ltdiv:
 26138                           	opt callstack 20
 26139                           
 26140                           ;incstack = 0
 26141  008C5A  0E00               	movlw	0
 26142  008C5C  0100               	movlb	0	; () banked
 26143  008C5E  6F66               	movwf	___ltdiv@quotient& (0+255),b
 26144  008C60  0E00               	movlw	0
 26145  008C62  6F67               	movwf	(___ltdiv@quotient+1)& (0+255),b
 26146  008C64  0E00               	movlw	0
 26147  008C66  6F68               	movwf	(___ltdiv@quotient+2)& (0+255),b
 26148                           
 26149                           ; BSR set to: 0
 26150  008C68  5163               	movf	___ltdiv@divisor& (0+255),w,b
 26151  008C6A  1164               	iorwf	(___ltdiv@divisor+1)& (0+255),w,b
 26152  008C6C  1165               	iorwf	(___ltdiv@divisor+2)& (0+255),w,b
 26153  008C6E  B4D8               	btfsc	status,2,c
 26154  008C70  D023               	goto	l3973
 26155                           
 26156                           ; BSR set to: 0
 26157  008C72  0E01               	movlw	1
 26158  008C74  6F69               	movwf	___ltdiv@counter& (0+255),b
 26159  008C76  D005               	goto	l15184
 26160  008C78                     l15182:
 26161                           
 26162                           ; BSR set to: 0
 26163  008C78  90D8               	bcf	status,0,c
 26164  008C7A  3763               	rlcf	___ltdiv@divisor& (0+255),f,b
 26165  008C7C  3764               	rlcf	(___ltdiv@divisor+1)& (0+255),f,b
 26166  008C7E  3765               	rlcf	(___ltdiv@divisor+2)& (0+255),f,b
 26167  008C80  2B69               	incf	___ltdiv@counter& (0+255),f,b
 26168  008C82                     l15184:
 26169                           
 26170                           ; BSR set to: 0
 26171  008C82  AF65               	btfss	(___ltdiv@divisor+2)& (0+255),7,b
 26172  008C84  D7F9               	goto	l15182
 26173  008C86                     u15580:
 26174                           
 26175                           ; BSR set to: 0
 26176  008C86  90D8               	bcf	status,0,c
 26177  008C88  3766               	rlcf	___ltdiv@quotient& (0+255),f,b
 26178  008C8A  3767               	rlcf	(___ltdiv@quotient+1)& (0+255),f,b
 26179  008C8C  3768               	rlcf	(___ltdiv@quotient+2)& (0+255),f,b
 26180                           
 26181                           ; BSR set to: 0
 26182  008C8E  5163               	movf	___ltdiv@divisor& (0+255),w,b
 26183  008C90  5D60               	subwf	___ltdiv@dividend& (0+255),w,b
 26184  008C92  5164               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 26185  008C94  5961               	subwfb	(___ltdiv@dividend+1)& (0+255),w,b
 26186  008C96  5165               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 26187  008C98  5962               	subwfb	(___ltdiv@dividend+2)& (0+255),w,b
 26188  008C9A  A0D8               	btfss	status,0,c
 26189  008C9C  D007               	goto	l3978
 26190                           
 26191                           ; BSR set to: 0
 26192  008C9E  5163               	movf	___ltdiv@divisor& (0+255),w,b
 26193  008CA0  5F60               	subwf	___ltdiv@dividend& (0+255),f,b
 26194  008CA2  5164               	movf	(___ltdiv@divisor+1)& (0+255),w,b
 26195  008CA4  5B61               	subwfb	(___ltdiv@dividend+1)& (0+255),f,b
 26196  008CA6  5165               	movf	(___ltdiv@divisor+2)& (0+255),w,b
 26197  008CA8  5B62               	subwfb	(___ltdiv@dividend+2)& (0+255),f,b
 26198                           
 26199                           ; BSR set to: 0
 26200  008CAA  8166               	bsf	___ltdiv@quotient& (0+255),0,b
 26201  008CAC                     l3978:
 26202                           
 26203                           ; BSR set to: 0
 26204  008CAC  90D8               	bcf	status,0,c
 26205  008CAE  3365               	rrcf	(___ltdiv@divisor+2)& (0+255),f,b
 26206  008CB0  3364               	rrcf	(___ltdiv@divisor+1)& (0+255),f,b
 26207  008CB2  3363               	rrcf	___ltdiv@divisor& (0+255),f,b
 26208                           
 26209                           ; BSR set to: 0
 26210  008CB4  2F69               	decfsz	___ltdiv@counter& (0+255),f,b
 26211  008CB6  D7E7               	goto	u15580
 26212  008CB8                     l3973:
 26213                           
 26214                           ; BSR set to: 0
 26215  008CB8  C066  F060         	movff	___ltdiv@quotient,?___ltdiv
 26216  008CBC  C067  F061         	movff	___ltdiv@quotient+1,?___ltdiv+1
 26217  008CC0  C068  F062         	movff	___ltdiv@quotient+2,?___ltdiv+2
 26218                           
 26219                           ; BSR set to: 0
 26220  008CC4  0012               	return		;funcret
 26221  008CC6                     __end_of___ltdiv:
 26222                           	opt callstack 0
 26223                           
 26224 ;; *************** function _adaptString *****************
 26225 ;; Defined at:
 26226 ;;		line 363 in file "rn2483APP.c"
 26227 ;; Parameters:    Size  Location     Type
 26228 ;;  string          2    0[BANK0 ] PTR unsigned char 
 26229 ;;		 -> stringValue(5), 
 26230 ;;  length          1    2[BANK0 ] unsigned char 
 26231 ;; Auto vars:     Size  Location     Type
 26232 ;;  i               1    7[BANK0 ] unsigned char 
 26233 ;;  deleteElem      1    6[BANK0 ] unsigned char 
 26234 ;;  flag            1    5[BANK0 ] unsigned char 
 26235 ;; Return value:  Size  Location     Type
 26236 ;;                  1    wreg      unsigned char 
 26237 ;; Registers used:
 26238 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 26239 ;; Tracked objects:
 26240 ;;		On entry : 0/0
 26241 ;;		On exit  : 0/0
 26242 ;;		Unchanged: 0/0
 26243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26244 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26245 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26246 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26247 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26248 ;;Total ram usage:        8 bytes
 26249 ;; Hardware stack levels used:    1
 26250 ;; Hardware stack levels required when called:    7
 26251 ;; This function calls:
 26252 ;;		Nothing
 26253 ;; This function is called by:
 26254 ;;		_tempSensAcquisition
 26255 ;;		_lightSensAcquisition
 26256 ;;		_leafSensAcquisition
 26257 ;;		_impedenceAcquisition
 26258 ;; This function uses a non-reentrant model
 26259 ;;
 26260                           
 26261                           	psect	text138
 26262  00899C                     __ptext138:
 26263                           	opt callstack 0
 26264  00899C                     _adaptString:
 26265                           	opt callstack 21
 26266                           
 26267                           ;rn2483APP.c: 364: uint8_t deleteElem = 0;
 26268                           
 26269                           ; BSR set to: 0
 26270                           ;incstack = 0
 26271  00899C  0E00               	movlw	0
 26272  00899E  0100               	movlb	0	; () banked
 26273  0089A0  6F66               	movwf	adaptString@deleteElem& (0+255),b
 26274                           
 26275                           ;rn2483APP.c: 365: bool flag = 0;
 26276  0089A2  0E00               	movlw	0
 26277  0089A4  6F65               	movwf	adaptString@flag& (0+255),b
 26278                           
 26279                           ;rn2483APP.c: 367: for(uint8_t i = 0; i<length; i++){
 26280  0089A6  0E00               	movlw	0
 26281  0089A8  6F67               	movwf	adaptString@i& (0+255),b
 26282  0089AA  D027               	goto	l16120
 26283  0089AC                     l16108:
 26284                           
 26285                           ; BSR set to: 0
 26286                           ;rn2483APP.c: 368: if(string[i]== 0x30 && !flag){
 26287  0089AC  5167               	movf	adaptString@i& (0+255),w,b
 26288  0089AE  2560               	addwf	adaptString@string& (0+255),w,b
 26289  0089B0  6ED9               	movwf	fsr2l,c
 26290  0089B2  0E00               	movlw	0
 26291  0089B4  2161               	addwfc	(adaptString@string+1)& (0+255),w,b
 26292  0089B6  6EDA               	movwf	fsr2h,c
 26293  0089B8  0E30               	movlw	48
 26294  0089BA  18DE               	xorwf	postinc2,w,c
 26295  0089BC  A4D8               	btfss	status,2,c
 26296  0089BE  D005               	goto	l16114
 26297                           
 26298                           ; BSR set to: 0
 26299  0089C0  5165               	movf	adaptString@flag& (0+255),w,b
 26300  0089C2  A4D8               	btfss	status,2,c
 26301  0089C4  D002               	goto	l16114
 26302                           
 26303                           ; BSR set to: 0
 26304                           ;rn2483APP.c: 369: deleteElem++;
 26305  0089C6  2B66               	incf	adaptString@deleteElem& (0+255),f,b
 26306                           
 26307                           ;rn2483APP.c: 370: }
 26308  0089C8  D017               	goto	l16118
 26309  0089CA                     l16114:
 26310                           
 26311                           ; BSR set to: 0
 26312                           ;rn2483APP.c: 371: else{;rn2483APP.c: 372: string[i-deleteElem] = string[i];
 26313  0089CA  5167               	movf	adaptString@i& (0+255),w,b
 26314  0089CC  2560               	addwf	adaptString@string& (0+255),w,b
 26315  0089CE  6ED9               	movwf	fsr2l,c
 26316  0089D0  0E00               	movlw	0
 26317  0089D2  2161               	addwfc	(adaptString@string+1)& (0+255),w,b
 26318  0089D4  6EDA               	movwf	fsr2h,c
 26319  0089D6  5167               	movf	adaptString@i& (0+255),w,b
 26320  0089D8  2560               	addwf	adaptString@string& (0+255),w,b
 26321  0089DA  6F63               	movwf	??_adaptString& (0+255),b
 26322  0089DC  0E00               	movlw	0
 26323  0089DE  2161               	addwfc	(adaptString@string+1)& (0+255),w,b
 26324  0089E0  6F64               	movwf	(??_adaptString+1)& (0+255),b
 26325  0089E2  5166               	movf	adaptString@deleteElem& (0+255),w,b
 26326  0089E4  5D63               	subwf	??_adaptString& (0+255),w,b
 26327  0089E6  6EE9               	movwf	fsr0l,c
 26328  0089E8  5164               	movf	(??_adaptString+1)& (0+255),w,b
 26329  0089EA  A0D8               	btfss	status,0,c
 26330  0089EC  0564               	decf	(??_adaptString+1)& (0+255),w,b
 26331  0089EE  6EEA               	movwf	fsr0h,c
 26332  0089F0  CFDF FFEF          	movff	indf2,indf0
 26333                           
 26334                           ; BSR set to: 0
 26335                           ;rn2483APP.c: 373: flag=1;
 26336  0089F4  0E01               	movlw	1
 26337  0089F6  6F65               	movwf	adaptString@flag& (0+255),b
 26338  0089F8                     l16118:
 26339                           
 26340                           ; BSR set to: 0
 26341  0089F8  2B67               	incf	adaptString@i& (0+255),f,b
 26342  0089FA                     l16120:
 26343                           
 26344                           ; BSR set to: 0
 26345  0089FA  5162               	movf	adaptString@length& (0+255),w,b
 26346  0089FC  5D67               	subwf	adaptString@i& (0+255),w,b
 26347  0089FE  A0D8               	btfss	status,0,c
 26348  008A00  D7D5               	goto	l16108
 26349                           
 26350                           ; BSR set to: 0
 26351                           ;rn2483APP.c: 374: };rn2483APP.c: 375: };rn2483APP.c: 377: if (deleteElem == length){
 26352  008A02  5162               	movf	adaptString@length& (0+255),w,b
 26353  008A04  1966               	xorwf	adaptString@deleteElem& (0+255),w,b
 26354  008A06  A4D8               	btfss	status,2,c
 26355  008A08  D002               	goto	l16128
 26356                           
 26357                           ; BSR set to: 0
 26358                           ;rn2483APP.c: 378: return 1;
 26359  008A0A  0E01               	movlw	1
 26360  008A0C  0012               	return	
 26361  008A0E                     l16128:
 26362                           
 26363                           ; BSR set to: 0
 26364                           ;rn2483APP.c: 379: };rn2483APP.c: 380: return length-deleteElem;
 26365  008A0E  5166               	movf	adaptString@deleteElem& (0+255),w,b
 26366  008A10  5D62               	subwf	adaptString@length& (0+255),w,b
 26367                           
 26368                           ; BSR set to: 0
 26369  008A12  0012               	return		;funcret
 26370  008A14                     __end_of_adaptString:
 26371                           	opt callstack 0
 26372                           
 26373 ;; *************** function _LORAWAN_SetUplinkCounter *****************
 26374 ;; Defined at:
 26375 ;;		line 486 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26376 ;; Parameters:    Size  Location     Type
 26377 ;;  ctr             4    0[BANK0 ] unsigned long 
 26378 ;; Auto vars:     Size  Location     Type
 26379 ;;		None
 26380 ;; Return value:  Size  Location     Type
 26381 ;;                  1    wreg      void 
 26382 ;; Registers used:
 26383 ;;		None
 26384 ;; Tracked objects:
 26385 ;;		On entry : 0/0
 26386 ;;		On exit  : 0/0
 26387 ;;		Unchanged: 0/0
 26388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26389 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26392 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26393 ;;Total ram usage:        4 bytes
 26394 ;; Hardware stack levels used:    1
 26395 ;; Hardware stack levels required when called:    7
 26396 ;; This function calls:
 26397 ;;		Nothing
 26398 ;; This function is called by:
 26399 ;;		_acuadoriApp
 26400 ;; This function uses a non-reentrant model
 26401 ;;
 26402                           
 26403                           	psect	text139
 26404  00A710                     __ptext139:
 26405                           	opt callstack 0
 26406  00A710                     _LORAWAN_SetUplinkCounter:
 26407                           	opt callstack 22
 26408                           
 26409                           ;lorawan.c: 488: loRa.fCntUp.value = ctr;
 26410                           
 26411                           ; BSR set to: 0
 26412                           ;incstack = 0
 26413  00A710  C060  F20B         	movff	LORAWAN_SetUplinkCounter@ctr,_loRa+6
 26414  00A714  C061  F20C         	movff	LORAWAN_SetUplinkCounter@ctr+1,_loRa+7
 26415  00A718  C062  F20D         	movff	LORAWAN_SetUplinkCounter@ctr+2,_loRa+8
 26416  00A71C  C063  F20E         	movff	LORAWAN_SetUplinkCounter@ctr+3,_loRa+9
 26417  00A720  0012               	return		;funcret
 26418  00A722                     __end_of_LORAWAN_SetUplinkCounter:
 26419                           	opt callstack 0
 26420                           
 26421 ;; *************** function _LORAWAN_GetUplinkCounter *****************
 26422 ;; Defined at:
 26423 ;;		line 491 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26424 ;; Parameters:    Size  Location     Type
 26425 ;;		None
 26426 ;; Auto vars:     Size  Location     Type
 26427 ;;		None
 26428 ;; Return value:  Size  Location     Type
 26429 ;;                  4    0[BANK0 ] unsigned long 
 26430 ;; Registers used:
 26431 ;;		None
 26432 ;; Tracked objects:
 26433 ;;		On entry : 0/0
 26434 ;;		On exit  : 0/0
 26435 ;;		Unchanged: 0/0
 26436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26437 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26440 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26441 ;;Total ram usage:        4 bytes
 26442 ;; Hardware stack levels used:    1
 26443 ;; Hardware stack levels required when called:    7
 26444 ;; This function calls:
 26445 ;;		Nothing
 26446 ;; This function is called by:
 26447 ;;		_acuadoriApp
 26448 ;; This function uses a non-reentrant model
 26449 ;;
 26450                           
 26451                           	psect	text140
 26452  00A722                     __ptext140:
 26453                           	opt callstack 0
 26454  00A722                     _LORAWAN_GetUplinkCounter:
 26455                           	opt callstack 22
 26456                           
 26457                           ;lorawan.c: 493: return loRa.fCntUp.value;
 26458                           
 26459                           ;incstack = 0
 26460  00A722  C20B  F060         	movff	_loRa+6,?_LORAWAN_GetUplinkCounter
 26461  00A726  C20C  F061         	movff	_loRa+7,?_LORAWAN_GetUplinkCounter+1
 26462  00A72A  C20D  F062         	movff	_loRa+8,?_LORAWAN_GetUplinkCounter+2
 26463  00A72E  C20E  F063         	movff	_loRa+9,?_LORAWAN_GetUplinkCounter+3
 26464  00A732  0012               	return		;funcret
 26465  00A734                     __end_of_LORAWAN_GetUplinkCounter:
 26466                           	opt callstack 0
 26467                           
 26468 ;; *************** function _SYSTEM_Initialize *****************
 26469 ;; Defined at:
 26470 ;;		line 50 in file "mcc_generated_files/mcc.c"
 26471 ;; Parameters:    Size  Location     Type
 26472 ;;		None
 26473 ;; Auto vars:     Size  Location     Type
 26474 ;;		None
 26475 ;; Return value:  Size  Location     Type
 26476 ;;                  1    wreg      void 
 26477 ;; Registers used:
 26478 ;;		wreg, status,2, status,0, cstack
 26479 ;; Tracked objects:
 26480 ;;		On entry : 0/0
 26481 ;;		On exit  : 0/0
 26482 ;;		Unchanged: 0/0
 26483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26488 ;;Total ram usage:        0 bytes
 26489 ;; Hardware stack levels used:    1
 26490 ;; Hardware stack levels required when called:   10
 26491 ;; This function calls:
 26492 ;;		_ADC_Initialize
 26493 ;;		_EUSART2_Initialize
 26494 ;;		_EXT_INT_Initialize
 26495 ;;		_INTERRUPT_Initialize
 26496 ;;		_LORAWAN_PlatformInit
 26497 ;;		_OSCILLATOR_Initialize
 26498 ;;		_PIN_MANAGER_Initialize
 26499 ;;		_SPI2_Initialize
 26500 ;;		_TMR1_Initialize
 26501 ;;		_TMR3_Initialize
 26502 ;;		_TMR5_Initialize
 26503 ;; This function is called by:
 26504 ;;		_main
 26505 ;; This function uses a non-reentrant model
 26506 ;;
 26507                           
 26508                           	psect	text141
 26509  009F34                     __ptext141:
 26510                           	opt callstack 0
 26511  009F34                     _SYSTEM_Initialize:
 26512                           	opt callstack 20
 26513                           
 26514                           ;mcc.c: 53: INTERRUPT_Initialize();
 26515                           
 26516                           ;incstack = 0
 26517  009F34  EC9F  F054         	call	_INTERRUPT_Initialize	;wreg free
 26518                           
 26519                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 26520  009F38  ECEE  F049         	call	_PIN_MANAGER_Initialize	;wreg free
 26521                           
 26522                           ;mcc.c: 55: OSCILLATOR_Initialize();
 26523  009F3C  ECEF  F053         	call	_OSCILLATOR_Initialize	;wreg free
 26524                           
 26525                           ;mcc.c: 56: SPI2_Initialize();
 26526  009F40  ECE8  F053         	call	_SPI2_Initialize	;wreg free
 26527                           
 26528                           ;mcc.c: 57: ADC_Initialize();
 26529  009F44  EC55  F053         	call	_ADC_Initialize	;wreg free
 26530                           
 26531                           ;mcc.c: 58: TMR3_Initialize();
 26532  009F48  EC7E  F050         	call	_TMR3_Initialize	;wreg free
 26533                           
 26534                           ;mcc.c: 59: TMR5_Initialize();
 26535  009F4C  ECC2  F04E         	call	_TMR5_Initialize	;wreg free
 26536                           
 26537                           ;mcc.c: 60: EXT_INT_Initialize();
 26538  009F50  ECBE  F050         	call	_EXT_INT_Initialize	;wreg free
 26539                           
 26540                           ;mcc.c: 61: TMR1_Initialize();
 26541  009F54  ECB1  F04F         	call	_TMR1_Initialize	;wreg free
 26542                           
 26543                           ;mcc.c: 62: EUSART2_Initialize();
 26544  009F58  EC5A  F04C         	call	_EUSART2_Initialize	;wreg free
 26545                           
 26546                           ;mcc.c: 63: LORAWAN_PlatformInit();
 26547  009F5C  ECA5  F051         	call	_LORAWAN_PlatformInit	;wreg free
 26548  009F60  0012               	return		;funcret
 26549  009F62                     __end_of_SYSTEM_Initialize:
 26550                           	opt callstack 0
 26551                           
 26552 ;; *************** function _TMR5_Initialize *****************
 26553 ;; Defined at:
 26554 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 26555 ;; Parameters:    Size  Location     Type
 26556 ;;		None
 26557 ;; Auto vars:     Size  Location     Type
 26558 ;;		None
 26559 ;; Return value:  Size  Location     Type
 26560 ;;                  1    wreg      void 
 26561 ;; Registers used:
 26562 ;;		wreg, status,2, status,0, cstack
 26563 ;; Tracked objects:
 26564 ;;		On entry : 0/0
 26565 ;;		On exit  : 0/0
 26566 ;;		Unchanged: 0/0
 26567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26572 ;;Total ram usage:        0 bytes
 26573 ;; Hardware stack levels used:    1
 26574 ;; Hardware stack levels required when called:    8
 26575 ;; This function calls:
 26576 ;;		_TMR5_SetInterruptHandler
 26577 ;; This function is called by:
 26578 ;;		_SYSTEM_Initialize
 26579 ;; This function uses a non-reentrant model
 26580 ;;
 26581                           
 26582                           	psect	text142
 26583  009D84                     __ptext142:
 26584                           	opt callstack 0
 26585  009D84                     _TMR5_Initialize:
 26586                           	opt callstack 21
 26587                           
 26588                           ;tmr5.c: 71: T5GCON = 0x00;
 26589                           
 26590                           ;incstack = 0
 26591  009D84  0E00               	movlw	0
 26592  009D86  010F               	movlb	15	; () banked
 26593  009D88  6F4D               	movwf	77,b	;volatile
 26594                           
 26595                           ;tmr5.c: 74: TMR5H = 0xFE;
 26596  009D8A  0EFE               	movlw	254
 26597  009D8C  6F50               	movwf	80,b	;volatile
 26598                           
 26599                           ;tmr5.c: 77: TMR5L = 0x0C;
 26600  009D8E  0E0C               	movlw	12
 26601  009D90  6F4F               	movwf	79,b	;volatile
 26602                           
 26603                           ; BSR set to: 15
 26604                           ;tmr5.c: 80: timer5ReloadVal=TMR5;
 26605  009D92  CF4F F1DF          	movff	3919,_timer5ReloadVal	;volatile
 26606  009D96  CF50 F1E0          	movff	3920,_timer5ReloadVal+1	;volatile
 26607                           
 26608                           ; BSR set to: 15
 26609                           ;tmr5.c: 83: PIR5bits.TMR5IF = 0;
 26610  009D9A  927E               	bcf	3966,1,c	;volatile
 26611                           
 26612                           ; BSR set to: 15
 26613                           ;tmr5.c: 86: PIE5bits.TMR5IE = 1;
 26614  009D9C  827D               	bsf	3965,1,c	;volatile
 26615                           
 26616                           ; BSR set to: 15
 26617                           ;tmr5.c: 88: IPR5bits.TMR5IP = 0;
 26618  009D9E  927F               	bcf	3967,1,c	;volatile
 26619                           
 26620                           ; BSR set to: 15
 26621                           ;tmr5.c: 91: TMR5_SetInterruptHandler(TMR5_InterruptTicker);
 26622  009DA0  0EDA               	movlw	low _TMR5_InterruptTicker
 26623  009DA2  0100               	movlb	0	; () banked
 26624  009DA4  6F60               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 26625  009DA6  0EA8               	movlw	high _TMR5_InterruptTicker
 26626  009DA8  6F61               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 26627  009DAA  EC18  F054         	call	_TMR5_SetInterruptHandler	;wreg free
 26628                           
 26629                           ;tmr5.c: 94: T5CON = 0x35;
 26630  009DAE  0E35               	movlw	53
 26631  009DB0  010F               	movlb	15	; () banked
 26632  009DB2  6F4E               	movwf	78,b	;volatile
 26633                           
 26634                           ; BSR set to: 15
 26635  009DB4  0012               	return		;funcret
 26636  009DB6                     __end_of_TMR5_Initialize:
 26637                           	opt callstack 0
 26638                           
 26639 ;; *************** function _TMR5_SetInterruptHandler *****************
 26640 ;; Defined at:
 26641 ;;		line 179 in file "mcc_generated_files/tmr5.c"
 26642 ;; Parameters:    Size  Location     Type
 26643 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 26644 ;;		 -> TMR5_InterruptTicker(1), 
 26645 ;; Auto vars:     Size  Location     Type
 26646 ;;		None
 26647 ;; Return value:  Size  Location     Type
 26648 ;;                  1    wreg      void 
 26649 ;; Registers used:
 26650 ;;		wreg, status,2, status,0
 26651 ;; Tracked objects:
 26652 ;;		On entry : 0/0
 26653 ;;		On exit  : 0/0
 26654 ;;		Unchanged: 0/0
 26655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26656 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26659 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26660 ;;Total ram usage:        2 bytes
 26661 ;; Hardware stack levels used:    1
 26662 ;; Hardware stack levels required when called:    7
 26663 ;; This function calls:
 26664 ;;		Nothing
 26665 ;; This function is called by:
 26666 ;;		_TMR5_Initialize
 26667 ;; This function uses a non-reentrant model
 26668 ;;
 26669                           
 26670                           	psect	text143
 26671  00A830                     __ptext143:
 26672                           	opt callstack 0
 26673  00A830                     _TMR5_SetInterruptHandler:
 26674                           	opt callstack 21
 26675                           
 26676                           ;tmr5.c: 180: TMR5_InterruptHandler = InterruptHandler;
 26677                           
 26678                           ; BSR set to: 15
 26679                           ;incstack = 0
 26680  00A830  C060  F1DD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 26681  00A834  C061  F1DE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 26682  00A838  0012               	return		;funcret
 26683  00A83A                     __end_of_TMR5_SetInterruptHandler:
 26684                           	opt callstack 0
 26685                           
 26686 ;; *************** function _TMR3_Initialize *****************
 26687 ;; Defined at:
 26688 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 26689 ;; Parameters:    Size  Location     Type
 26690 ;;		None
 26691 ;; Auto vars:     Size  Location     Type
 26692 ;;		None
 26693 ;; Return value:  Size  Location     Type
 26694 ;;                  1    wreg      void 
 26695 ;; Registers used:
 26696 ;;		wreg, status,2, status,0, cstack
 26697 ;; Tracked objects:
 26698 ;;		On entry : 0/0
 26699 ;;		On exit  : 0/0
 26700 ;;		Unchanged: 0/0
 26701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26706 ;;Total ram usage:        0 bytes
 26707 ;; Hardware stack levels used:    1
 26708 ;; Hardware stack levels required when called:    8
 26709 ;; This function calls:
 26710 ;;		_TMR3_SetInterruptHandler
 26711 ;; This function is called by:
 26712 ;;		_SYSTEM_Initialize
 26713 ;; This function uses a non-reentrant model
 26714 ;;
 26715                           
 26716                           	psect	text144
 26717  00A0FC                     __ptext144:
 26718                           	opt callstack 0
 26719  00A0FC                     _TMR3_Initialize:
 26720                           	opt callstack 21
 26721                           
 26722                           ;tmr3.c: 69: T3GCON = 0x00;
 26723                           
 26724                           ;incstack = 0
 26725  00A0FC  0E00               	movlw	0
 26726  00A0FE  6EB4               	movwf	4020,c	;volatile
 26727                           
 26728                           ;tmr3.c: 72: TMR3H = 0xFF;
 26729  00A100  68B3               	setf	4019,c	;volatile
 26730                           
 26731                           ;tmr3.c: 75: TMR3L = 0xC4;
 26732  00A102  0EC4               	movlw	196
 26733  00A104  6EB2               	movwf	4018,c	;volatile
 26734                           
 26735                           ;tmr3.c: 78: timer3ReloadVal=TMR3;
 26736  00A106  CFB2 F1E3          	movff	4018,_timer3ReloadVal	;volatile
 26737  00A10A  CFB3 F1E4          	movff	4019,_timer3ReloadVal+1	;volatile
 26738                           
 26739                           ;tmr3.c: 81: PIR2bits.TMR3IF = 0;
 26740  00A10E  92A1               	bcf	4001,1,c	;volatile
 26741                           
 26742                           ;tmr3.c: 84: PIE2bits.TMR3IE = 1;
 26743  00A110  82A0               	bsf	4000,1,c	;volatile
 26744                           
 26745                           ;tmr3.c: 86: IPR2bits.TMR3IP = 1;
 26746  00A112  82A2               	bsf	4002,1,c	;volatile
 26747                           
 26748                           ;tmr3.c: 89: TMR3_SetInterruptHandler(TMR3ISRClock);
 26749  00A114  0E2C               	movlw	low _TMR3ISRClock
 26750  00A116  0100               	movlb	0	; () banked
 26751  00A118  6F60               	movwf	TMR3_SetInterruptHandler@InterruptHandler& (0+255),b
 26752  00A11A  0EA9               	movlw	high _TMR3ISRClock
 26753  00A11C  6F61               	movwf	(TMR3_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 26754  00A11E  EC1D  F054         	call	_TMR3_SetInterruptHandler	;wreg free
 26755                           
 26756                           ;tmr3.c: 92: T3CON = 0x10;
 26757  00A122  0E10               	movlw	16
 26758  00A124  6EB1               	movwf	4017,c	;volatile
 26759  00A126  0012               	return		;funcret
 26760  00A128                     __end_of_TMR3_Initialize:
 26761                           	opt callstack 0
 26762                           
 26763 ;; *************** function _TMR3_SetInterruptHandler *****************
 26764 ;; Defined at:
 26765 ;;		line 174 in file "mcc_generated_files/tmr3.c"
 26766 ;; Parameters:    Size  Location     Type
 26767 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 26768 ;;		 -> TMR3ISRClock(1), 
 26769 ;; Auto vars:     Size  Location     Type
 26770 ;;		None
 26771 ;; Return value:  Size  Location     Type
 26772 ;;                  1    wreg      void 
 26773 ;; Registers used:
 26774 ;;		wreg, status,2, status,0
 26775 ;; Tracked objects:
 26776 ;;		On entry : 0/0
 26777 ;;		On exit  : 0/0
 26778 ;;		Unchanged: 0/0
 26779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26780 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26783 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26784 ;;Total ram usage:        2 bytes
 26785 ;; Hardware stack levels used:    1
 26786 ;; Hardware stack levels required when called:    7
 26787 ;; This function calls:
 26788 ;;		Nothing
 26789 ;; This function is called by:
 26790 ;;		_TMR3_Initialize
 26791 ;; This function uses a non-reentrant model
 26792 ;;
 26793                           
 26794                           	psect	text145
 26795  00A83A                     __ptext145:
 26796                           	opt callstack 0
 26797  00A83A                     _TMR3_SetInterruptHandler:
 26798                           	opt callstack 21
 26799                           
 26800                           ;tmr3.c: 175: TMR3_InterruptHandler = InterruptHandler;
 26801                           
 26802                           ;incstack = 0
 26803  00A83A  C060  F1E1         	movff	TMR3_SetInterruptHandler@InterruptHandler,_TMR3_InterruptHandler
 26804  00A83E  C061  F1E2         	movff	TMR3_SetInterruptHandler@InterruptHandler+1,_TMR3_InterruptHandler+1
 26805  00A842  0012               	return		;funcret
 26806  00A844                     __end_of_TMR3_SetInterruptHandler:
 26807                           	opt callstack 0
 26808                           
 26809 ;; *************** function _TMR1_Initialize *****************
 26810 ;; Defined at:
 26811 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 26812 ;; Parameters:    Size  Location     Type
 26813 ;;		None
 26814 ;; Auto vars:     Size  Location     Type
 26815 ;;		None
 26816 ;; Return value:  Size  Location     Type
 26817 ;;                  1    wreg      void 
 26818 ;; Registers used:
 26819 ;;		wreg, status,2, status,0, cstack
 26820 ;; Tracked objects:
 26821 ;;		On entry : 0/0
 26822 ;;		On exit  : 0/0
 26823 ;;		Unchanged: 0/0
 26824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26829 ;;Total ram usage:        0 bytes
 26830 ;; Hardware stack levels used:    1
 26831 ;; Hardware stack levels required when called:    8
 26832 ;; This function calls:
 26833 ;;		_TMR1_SetInterruptHandler
 26834 ;; This function is called by:
 26835 ;;		_SYSTEM_Initialize
 26836 ;; This function uses a non-reentrant model
 26837 ;;
 26838                           
 26839                           	psect	text146
 26840  009F62                     __ptext146:
 26841                           	opt callstack 0
 26842  009F62                     _TMR1_Initialize:
 26843                           	opt callstack 21
 26844                           
 26845                           ;tmr1.c: 69: T1GCON = 0x00;
 26846                           
 26847                           ;incstack = 0
 26848  009F62  0E00               	movlw	0
 26849  009F64  6ECC               	movwf	4044,c	;volatile
 26850                           
 26851                           ;tmr1.c: 72: TMR1H = 0x00;
 26852  009F66  0E00               	movlw	0
 26853  009F68  6ECF               	movwf	4047,c	;volatile
 26854                           
 26855                           ;tmr1.c: 75: TMR1L = 0x00;
 26856  009F6A  0E00               	movlw	0
 26857  009F6C  6ECE               	movwf	4046,c	;volatile
 26858                           
 26859                           ;tmr1.c: 78: timer1ReloadVal=TMR1;
 26860  009F6E  CFCE F1E7          	movff	4046,_timer1ReloadVal	;volatile
 26861  009F72  CFCF F1E8          	movff	4047,_timer1ReloadVal+1	;volatile
 26862                           
 26863                           ;tmr1.c: 81: PIR1bits.TMR1IF = 0;
 26864  009F76  909E               	bcf	3998,0,c	;volatile
 26865                           
 26866                           ;tmr1.c: 84: PIE1bits.TMR1IE = 1;
 26867  009F78  809D               	bsf	3997,0,c	;volatile
 26868                           
 26869                           ;tmr1.c: 86: IPR1bits.TMR1IP = 0;
 26870  009F7A  909F               	bcf	3999,0,c	;volatile
 26871                           
 26872                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
 26873  009F7C  0E6A               	movlw	low _TMR1_DefaultInterruptHandler
 26874  009F7E  0100               	movlb	0	; () banked
 26875  009F80  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 26876  009F82  0EA9               	movlw	high _TMR1_DefaultInterruptHandler
 26877  009F84  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 26878  009F86  EC22  F054         	call	_TMR1_SetInterruptHandler	;wreg free
 26879                           
 26880                           ;tmr1.c: 92: T1CON = 0x8D;
 26881  009F8A  0E8D               	movlw	141
 26882  009F8C  6ECD               	movwf	4045,c	;volatile
 26883  009F8E  0012               	return		;funcret
 26884  009F90                     __end_of_TMR1_Initialize:
 26885                           	opt callstack 0
 26886                           
 26887 ;; *************** function _SPI2_Initialize *****************
 26888 ;; Defined at:
 26889 ;;		line 65 in file "mcc_generated_files/spi2.c"
 26890 ;; Parameters:    Size  Location     Type
 26891 ;;		None
 26892 ;; Auto vars:     Size  Location     Type
 26893 ;;		None
 26894 ;; Return value:  Size  Location     Type
 26895 ;;                  1    wreg      void 
 26896 ;; Registers used:
 26897 ;;		wreg, status,2
 26898 ;; Tracked objects:
 26899 ;;		On entry : 0/0
 26900 ;;		On exit  : 0/0
 26901 ;;		Unchanged: 0/0
 26902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26907 ;;Total ram usage:        0 bytes
 26908 ;; Hardware stack levels used:    1
 26909 ;; Hardware stack levels required when called:    7
 26910 ;; This function calls:
 26911 ;;		Nothing
 26912 ;; This function is called by:
 26913 ;;		_SYSTEM_Initialize
 26914 ;; This function uses a non-reentrant model
 26915 ;;
 26916                           
 26917                           	psect	text147
 26918  00A7D0                     __ptext147:
 26919                           	opt callstack 0
 26920  00A7D0                     _SPI2_Initialize:
 26921                           	opt callstack 22
 26922                           
 26923                           ;spi2.c: 70: SSP2STAT = 0x40;
 26924                           
 26925                           ;incstack = 0
 26926  00A7D0  0E40               	movlw	64
 26927  00A7D2  6E6D               	movwf	3949,c	;volatile
 26928                           
 26929                           ;spi2.c: 73: SSP2CON1 = 0x20;
 26930  00A7D4  0E20               	movlw	32
 26931  00A7D6  6E6C               	movwf	3948,c	;volatile
 26932                           
 26933                           ;spi2.c: 76: SSP2ADD = 0x00;
 26934  00A7D8  0E00               	movlw	0
 26935  00A7DA  6E6E               	movwf	3950,c	;volatile
 26936  00A7DC  0012               	return		;funcret
 26937  00A7DE                     __end_of_SPI2_Initialize:
 26938                           	opt callstack 0
 26939                           
 26940 ;; *************** function _PIN_MANAGER_Initialize *****************
 26941 ;; Defined at:
 26942 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 26943 ;; Parameters:    Size  Location     Type
 26944 ;;		None
 26945 ;; Auto vars:     Size  Location     Type
 26946 ;;		None
 26947 ;; Return value:  Size  Location     Type
 26948 ;;                  1    wreg      void 
 26949 ;; Registers used:
 26950 ;;		wreg, status,2, status,0, cstack
 26951 ;; Tracked objects:
 26952 ;;		On entry : 0/0
 26953 ;;		On exit  : 0/0
 26954 ;;		Unchanged: 0/0
 26955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26960 ;;Total ram usage:        0 bytes
 26961 ;; Hardware stack levels used:    1
 26962 ;; Hardware stack levels required when called:    8
 26963 ;; This function calls:
 26964 ;;		_IOCB4_SetInterruptHandler
 26965 ;; This function is called by:
 26966 ;;		_SYSTEM_Initialize
 26967 ;; This function uses a non-reentrant model
 26968 ;;
 26969                           
 26970                           	psect	text148
 26971  0093DC                     __ptext148:
 26972                           	opt callstack 0
 26973  0093DC                     _PIN_MANAGER_Initialize:
 26974                           	opt callstack 21
 26975                           
 26976                           ;pin_manager.c: 62: LATE = 0x00;
 26977                           
 26978                           ;incstack = 0
 26979  0093DC  0E00               	movlw	0
 26980  0093DE  6E8D               	movwf	3981,c	;volatile
 26981                           
 26982                           ;pin_manager.c: 63: LATD = 0x00;
 26983  0093E0  0E00               	movlw	0
 26984  0093E2  6E8C               	movwf	3980,c	;volatile
 26985                           
 26986                           ;pin_manager.c: 64: LATA = 0x00;
 26987  0093E4  0E00               	movlw	0
 26988  0093E6  6E89               	movwf	3977,c	;volatile
 26989                           
 26990                           ;pin_manager.c: 65: LATB = 0x00;
 26991  0093E8  0E00               	movlw	0
 26992  0093EA  6E8A               	movwf	3978,c	;volatile
 26993                           
 26994                           ;pin_manager.c: 66: LATC = 0x00;
 26995  0093EC  0E00               	movlw	0
 26996  0093EE  6E8B               	movwf	3979,c	;volatile
 26997                           
 26998                           ;pin_manager.c: 71: TRISE = 0x07;
 26999  0093F0  0E07               	movlw	7
 27000  0093F2  6E96               	movwf	3990,c	;volatile
 27001                           
 27002                           ;pin_manager.c: 72: TRISA = 0xFF;
 27003  0093F4  6892               	setf	3986,c	;volatile
 27004                           
 27005                           ;pin_manager.c: 73: TRISB = 0xFF;
 27006  0093F6  6893               	setf	3987,c	;volatile
 27007                           
 27008                           ;pin_manager.c: 74: TRISC = 0xFE;
 27009  0093F8  0EFE               	movlw	254
 27010  0093FA  6E94               	movwf	3988,c	;volatile
 27011                           
 27012                           ;pin_manager.c: 75: TRISD = 0xE6;
 27013  0093FC  0EE6               	movlw	230
 27014  0093FE  6E95               	movwf	3989,c	;volatile
 27015                           
 27016                           ;pin_manager.c: 80: ANSELD = 0xE4;
 27017  009400  0EE4               	movlw	228
 27018  009402  010F               	movlb	15	; () banked
 27019  009404  6F3B               	movwf	59,b	;volatile
 27020                           
 27021                           ;pin_manager.c: 81: ANSELC = 0xF8;
 27022  009406  0EF8               	movlw	248
 27023  009408  6F3A               	movwf	58,b	;volatile
 27024                           
 27025                           ;pin_manager.c: 82: ANSELB = 0x28;
 27026  00940A  0E28               	movlw	40
 27027  00940C  6F39               	movwf	57,b	;volatile
 27028                           
 27029                           ;pin_manager.c: 83: ANSELE = 0x07;
 27030  00940E  0E07               	movlw	7
 27031  009410  6F3C               	movwf	60,b	;volatile
 27032                           
 27033                           ;pin_manager.c: 84: ANSELA = 0x2F;
 27034  009412  0E2F               	movlw	47
 27035  009414  6F38               	movwf	56,b	;volatile
 27036                           
 27037                           ;pin_manager.c: 89: WPUB = 0x17;
 27038  009416  0E17               	movlw	23
 27039  009418  6E61               	movwf	3937,c	;volatile
 27040                           
 27041                           ; BSR set to: 15
 27042                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
 27043  00941A  8EF1               	bsf	4081,7,c	;volatile
 27044                           
 27045                           ; BSR set to: 15
 27046                           ;pin_manager.c: 99: IOCBbits.IOCB4 = 1;
 27047  00941C  8862               	bsf	3938,4,c	;volatile
 27048                           
 27049                           ; BSR set to: 15
 27050                           ;pin_manager.c: 104: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
 27051  00941E  0E6C               	movlw	low _IOCB4_DefaultInterruptHandler
 27052  009420  0100               	movlb	0	; () banked
 27053  009422  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 27054  009424  0EA9               	movlw	high _IOCB4_DefaultInterruptHandler
 27055  009426  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27056  009428  EC27  F054         	call	_IOCB4_SetInterruptHandler	;wreg free
 27057                           
 27058                           ;pin_manager.c: 107: INTCONbits.RBIE = 1;
 27059  00942C  86F2               	bsf	4082,3,c	;volatile
 27060  00942E  0012               	return		;funcret
 27061  009430                     __end_of_PIN_MANAGER_Initialize:
 27062                           	opt callstack 0
 27063                           
 27064 ;; *************** function _OSCILLATOR_Initialize *****************
 27065 ;; Defined at:
 27066 ;;		line 66 in file "mcc_generated_files/mcc.c"
 27067 ;; Parameters:    Size  Location     Type
 27068 ;;		None
 27069 ;; Auto vars:     Size  Location     Type
 27070 ;;		None
 27071 ;; Return value:  Size  Location     Type
 27072 ;;                  1    wreg      void 
 27073 ;; Registers used:
 27074 ;;		wreg, status,2
 27075 ;; Tracked objects:
 27076 ;;		On entry : 0/0
 27077 ;;		On exit  : 0/0
 27078 ;;		Unchanged: 0/0
 27079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27084 ;;Total ram usage:        0 bytes
 27085 ;; Hardware stack levels used:    1
 27086 ;; Hardware stack levels required when called:    7
 27087 ;; This function calls:
 27088 ;;		Nothing
 27089 ;; This function is called by:
 27090 ;;		_SYSTEM_Initialize
 27091 ;; This function uses a non-reentrant model
 27092 ;;
 27093                           
 27094                           	psect	text149
 27095  00A7DE                     __ptext149:
 27096                           	opt callstack 0
 27097  00A7DE                     _OSCILLATOR_Initialize:
 27098                           	opt callstack 22
 27099                           
 27100                           ;mcc.c: 69: OSCCON = 0x70;
 27101                           
 27102                           ;incstack = 0
 27103  00A7DE  0E70               	movlw	112
 27104  00A7E0  6ED3               	movwf	4051,c	;volatile
 27105                           
 27106                           ;mcc.c: 71: OSCCON2 = 0x04;
 27107  00A7E2  0E04               	movlw	4
 27108  00A7E4  6ED2               	movwf	4050,c	;volatile
 27109                           
 27110                           ;mcc.c: 73: OSCTUNE = 0x00;
 27111  00A7E6  0E00               	movlw	0
 27112  00A7E8  6E9B               	movwf	3995,c	;volatile
 27113  00A7EA  0012               	return		;funcret
 27114  00A7EC                     __end_of_OSCILLATOR_Initialize:
 27115                           	opt callstack 0
 27116                           
 27117 ;; *************** function _LORAWAN_PlatformInit *****************
 27118 ;; Defined at:
 27119 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27120 ;; Parameters:    Size  Location     Type
 27121 ;;		None
 27122 ;; Auto vars:     Size  Location     Type
 27123 ;;		None
 27124 ;; Return value:  Size  Location     Type
 27125 ;;                  1    wreg      void 
 27126 ;; Registers used:
 27127 ;;		wreg, status,2, status,0, cstack
 27128 ;; Tracked objects:
 27129 ;;		On entry : 0/0
 27130 ;;		On exit  : 0/0
 27131 ;;		Unchanged: 0/0
 27132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27137 ;;Total ram usage:        0 bytes
 27138 ;; Hardware stack levels used:    1
 27139 ;; Hardware stack levels required when called:    9
 27140 ;; This function calls:
 27141 ;;		_DIO0_ISR_Lora_Init
 27142 ;;		_DIO1_ISR_Lora_Init
 27143 ;;		_DIO2_ISR_Lora_Init
 27144 ;;		_DIO3_ISR_Lora_Init
 27145 ;;		_DIO4_ISR_Lora_Init
 27146 ;;		_DIO5_ISR_Lora_Init
 27147 ;;		_SystemTimerInit
 27148 ;;		_TMR_ISR_Lora_Init
 27149 ;; This function is called by:
 27150 ;;		_SYSTEM_Initialize
 27151 ;; This function uses a non-reentrant model
 27152 ;;
 27153                           
 27154                           	psect	text150
 27155  00A34A                     __ptext150:
 27156                           	opt callstack 0
 27157  00A34A                     _LORAWAN_PlatformInit:
 27158                           	opt callstack 20
 27159                           
 27160                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
 27161                           
 27162                           ;incstack = 0
 27163  00A34A  ECAB  F053         	call	_TMR_ISR_Lora_Init	;wreg free
 27164                           
 27165                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
 27166  00A34E  ECC3  F053         	call	_DIO0_ISR_Lora_Init	;wreg free
 27167                           
 27168                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
 27169  00A352  ECBB  F053         	call	_DIO1_ISR_Lora_Init	;wreg free
 27170                           
 27171                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
 27172  00A356  ECB3  F053         	call	_DIO2_ISR_Lora_Init	;wreg free
 27173                           
 27174                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
 27175  00A35A  ECB4  F054         	call	_DIO3_ISR_Lora_Init	;wreg free
 27176                           
 27177                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
 27178  00A35E  ECB3  F054         	call	_DIO4_ISR_Lora_Init	;wreg free
 27179                           
 27180                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
 27181  00A362  ECB2  F054         	call	_DIO5_ISR_Lora_Init	;wreg free
 27182                           
 27183                           ;lorawan_init.c: 81: SystemTimerInit();
 27184  00A366  EC77  F054         	call	_SystemTimerInit	;wreg free
 27185  00A36A  0012               	return		;funcret
 27186  00A36C                     __end_of_LORAWAN_PlatformInit:
 27187                           	opt callstack 0
 27188                           
 27189 ;; *************** function _TMR_ISR_Lora_Init *****************
 27190 ;; Defined at:
 27191 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 27192 ;; Parameters:    Size  Location     Type
 27193 ;;		None
 27194 ;; Auto vars:     Size  Location     Type
 27195 ;;		None
 27196 ;; Return value:  Size  Location     Type
 27197 ;;                  1    wreg      void 
 27198 ;; Registers used:
 27199 ;;		wreg, status,2, status,0, cstack
 27200 ;; Tracked objects:
 27201 ;;		On entry : 0/0
 27202 ;;		On exit  : 0/0
 27203 ;;		Unchanged: 0/0
 27204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27209 ;;Total ram usage:        0 bytes
 27210 ;; Hardware stack levels used:    1
 27211 ;; Hardware stack levels required when called:    8
 27212 ;; This function calls:
 27213 ;;		_TMR1_SetInterruptHandler
 27214 ;; This function is called by:
 27215 ;;		_LORAWAN_PlatformInit
 27216 ;; This function uses a non-reentrant model
 27217 ;;
 27218                           
 27219                           	psect	text151
 27220  00A756                     __ptext151:
 27221                           	opt callstack 0
 27222  00A756                     _TMR_ISR_Lora_Init:
 27223                           	opt callstack 20
 27224                           
 27225                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
 27226                           
 27227                           ;incstack = 0
 27228  00A756  0E8A               	movlw	low _TMR_ISR_lora
 27229  00A758  0100               	movlb	0	; () banked
 27230  00A75A  6F60               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
 27231  00A75C  0E92               	movlw	high _TMR_ISR_lora
 27232  00A75E  6F61               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27233  00A760  EC22  F054         	call	_TMR1_SetInterruptHandler	;wreg free
 27234  00A764  0012               	return		;funcret
 27235  00A766                     __end_of_TMR_ISR_Lora_Init:
 27236                           	opt callstack 0
 27237                           
 27238 ;; *************** function _TMR1_SetInterruptHandler *****************
 27239 ;; Defined at:
 27240 ;;		line 182 in file "mcc_generated_files/tmr1.c"
 27241 ;; Parameters:    Size  Location     Type
 27242 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27243 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
 27244 ;; Auto vars:     Size  Location     Type
 27245 ;;		None
 27246 ;; Return value:  Size  Location     Type
 27247 ;;                  1    wreg      void 
 27248 ;; Registers used:
 27249 ;;		wreg, status,2, status,0
 27250 ;; Tracked objects:
 27251 ;;		On entry : 0/0
 27252 ;;		On exit  : 0/0
 27253 ;;		Unchanged: 0/0
 27254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27258 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27259 ;;Total ram usage:        2 bytes
 27260 ;; Hardware stack levels used:    1
 27261 ;; Hardware stack levels required when called:    7
 27262 ;; This function calls:
 27263 ;;		Nothing
 27264 ;; This function is called by:
 27265 ;;		_TMR_ISR_Lora_Init
 27266 ;;		_TMR1_Initialize
 27267 ;; This function uses a non-reentrant model
 27268 ;;
 27269                           
 27270                           	psect	text152
 27271  00A844                     __ptext152:
 27272                           	opt callstack 0
 27273  00A844                     _TMR1_SetInterruptHandler:
 27274                           	opt callstack 21
 27275                           
 27276                           ;tmr1.c: 183: TMR1_InterruptHandler = InterruptHandler;
 27277                           
 27278                           ;incstack = 0
 27279  00A844  C060  F1E5         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
 27280  00A848  C061  F1E6         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
 27281  00A84C  0012               	return		;funcret
 27282  00A84E                     __end_of_TMR1_SetInterruptHandler:
 27283                           	opt callstack 0
 27284                           
 27285 ;; *************** function _SystemTimerInit *****************
 27286 ;; Defined at:
 27287 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 27288 ;; Parameters:    Size  Location     Type
 27289 ;;		None
 27290 ;; Auto vars:     Size  Location     Type
 27291 ;;		None
 27292 ;; Return value:  Size  Location     Type
 27293 ;;                  1    wreg      void 
 27294 ;; Registers used:
 27295 ;;		wreg, status,2
 27296 ;; Tracked objects:
 27297 ;;		On entry : 0/0
 27298 ;;		On exit  : 0/0
 27299 ;;		Unchanged: 0/0
 27300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27305 ;;Total ram usage:        0 bytes
 27306 ;; Hardware stack levels used:    1
 27307 ;; Hardware stack levels required when called:    7
 27308 ;; This function calls:
 27309 ;;		Nothing
 27310 ;; This function is called by:
 27311 ;;		_LORAWAN_PlatformInit
 27312 ;; This function uses a non-reentrant model
 27313 ;;
 27314                           
 27315                           	psect	text153
 27316  00A8EE                     __ptext153:
 27317                           	opt callstack 0
 27318  00A8EE                     _SystemTimerInit:
 27319                           	opt callstack 21
 27320                           
 27321                           ;sw_timer.c: 137: allocatedTimers = 0;
 27322                           
 27323                           ;incstack = 0
 27324  00A8EE  0E00               	movlw	0
 27325  00A8F0  0101               	movlb	1	; () banked
 27326  00A8F2  6F28               	movwf	_allocatedTimers& (0+255),b	;volatile
 27327                           
 27328                           ; BSR set to: 1
 27329  00A8F4  0012               	return		;funcret
 27330  00A8F6                     __end_of_SystemTimerInit:
 27331                           	opt callstack 0
 27332                           
 27333 ;; *************** function _DIO5_ISR_Lora_Init *****************
 27334 ;; Defined at:
 27335 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27336 ;; Parameters:    Size  Location     Type
 27337 ;;		None
 27338 ;; Auto vars:     Size  Location     Type
 27339 ;;		None
 27340 ;; Return value:  Size  Location     Type
 27341 ;;                  1    wreg      void 
 27342 ;; Registers used:
 27343 ;;		None
 27344 ;; Tracked objects:
 27345 ;;		On entry : 0/0
 27346 ;;		On exit  : 0/0
 27347 ;;		Unchanged: 0/0
 27348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27353 ;;Total ram usage:        0 bytes
 27354 ;; Hardware stack levels used:    1
 27355 ;; Hardware stack levels required when called:    7
 27356 ;; This function calls:
 27357 ;;		Nothing
 27358 ;; This function is called by:
 27359 ;;		_LORAWAN_PlatformInit
 27360 ;; This function uses a non-reentrant model
 27361 ;;
 27362                           
 27363                           	psect	text154
 27364  00A964                     __ptext154:
 27365                           	opt callstack 0
 27366  00A964                     _DIO5_ISR_Lora_Init:
 27367                           	opt callstack 21
 27368                           
 27369                           ; BSR set to: 1
 27370                           ;incstack = 0
 27371  00A964  0012               	return		;funcret
 27372  00A966                     __end_of_DIO5_ISR_Lora_Init:
 27373                           	opt callstack 0
 27374                           
 27375 ;; *************** function _DIO4_ISR_Lora_Init *****************
 27376 ;; Defined at:
 27377 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27378 ;; Parameters:    Size  Location     Type
 27379 ;;		None
 27380 ;; Auto vars:     Size  Location     Type
 27381 ;;		None
 27382 ;; Return value:  Size  Location     Type
 27383 ;;                  1    wreg      void 
 27384 ;; Registers used:
 27385 ;;		None
 27386 ;; Tracked objects:
 27387 ;;		On entry : 0/0
 27388 ;;		On exit  : 0/0
 27389 ;;		Unchanged: 0/0
 27390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27395 ;;Total ram usage:        0 bytes
 27396 ;; Hardware stack levels used:    1
 27397 ;; Hardware stack levels required when called:    7
 27398 ;; This function calls:
 27399 ;;		Nothing
 27400 ;; This function is called by:
 27401 ;;		_LORAWAN_PlatformInit
 27402 ;; This function uses a non-reentrant model
 27403 ;;
 27404                           
 27405                           	psect	text155
 27406  00A966                     __ptext155:
 27407                           	opt callstack 0
 27408  00A966                     _DIO4_ISR_Lora_Init:
 27409                           	opt callstack 21
 27410                           
 27411                           ;incstack = 0
 27412  00A966  0012               	return		;funcret
 27413  00A968                     __end_of_DIO4_ISR_Lora_Init:
 27414                           	opt callstack 0
 27415                           
 27416 ;; *************** function _DIO3_ISR_Lora_Init *****************
 27417 ;; Defined at:
 27418 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27419 ;; Parameters:    Size  Location     Type
 27420 ;;		None
 27421 ;; Auto vars:     Size  Location     Type
 27422 ;;		None
 27423 ;; Return value:  Size  Location     Type
 27424 ;;                  1    wreg      void 
 27425 ;; Registers used:
 27426 ;;		None
 27427 ;; Tracked objects:
 27428 ;;		On entry : 0/0
 27429 ;;		On exit  : 0/0
 27430 ;;		Unchanged: 0/0
 27431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27436 ;;Total ram usage:        0 bytes
 27437 ;; Hardware stack levels used:    1
 27438 ;; Hardware stack levels required when called:    7
 27439 ;; This function calls:
 27440 ;;		Nothing
 27441 ;; This function is called by:
 27442 ;;		_LORAWAN_PlatformInit
 27443 ;; This function uses a non-reentrant model
 27444 ;;
 27445                           
 27446                           	psect	text156
 27447  00A968                     __ptext156:
 27448                           	opt callstack 0
 27449  00A968                     _DIO3_ISR_Lora_Init:
 27450                           	opt callstack 21
 27451                           
 27452                           ;incstack = 0
 27453  00A968  0012               	return		;funcret
 27454  00A96A                     __end_of_DIO3_ISR_Lora_Init:
 27455                           	opt callstack 0
 27456                           
 27457 ;; *************** function _DIO2_ISR_Lora_Init *****************
 27458 ;; Defined at:
 27459 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27460 ;; Parameters:    Size  Location     Type
 27461 ;;		None
 27462 ;; Auto vars:     Size  Location     Type
 27463 ;;		None
 27464 ;; Return value:  Size  Location     Type
 27465 ;;                  1    wreg      void 
 27466 ;; Registers used:
 27467 ;;		wreg, status,2, status,0, cstack
 27468 ;; Tracked objects:
 27469 ;;		On entry : 0/0
 27470 ;;		On exit  : 0/0
 27471 ;;		Unchanged: 0/0
 27472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27477 ;;Total ram usage:        0 bytes
 27478 ;; Hardware stack levels used:    1
 27479 ;; Hardware stack levels required when called:    8
 27480 ;; This function calls:
 27481 ;;		_IOCB4_SetInterruptHandler
 27482 ;; This function is called by:
 27483 ;;		_LORAWAN_PlatformInit
 27484 ;; This function uses a non-reentrant model
 27485 ;;
 27486                           
 27487                           	psect	text157
 27488  00A766                     __ptext157:
 27489                           	opt callstack 0
 27490  00A766                     _DIO2_ISR_Lora_Init:
 27491                           	opt callstack 20
 27492                           
 27493                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
 27494                           
 27495                           ;incstack = 0
 27496  00A766  0E52               	movlw	low _DIO2_ISR_Lora
 27497  00A768  0100               	movlb	0	; () banked
 27498  00A76A  6F60               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
 27499  00A76C  0EA9               	movlw	high _DIO2_ISR_Lora
 27500  00A76E  6F61               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27501  00A770  EC27  F054         	call	_IOCB4_SetInterruptHandler	;wreg free
 27502  00A774  0012               	return		;funcret
 27503  00A776                     __end_of_DIO2_ISR_Lora_Init:
 27504                           	opt callstack 0
 27505                           
 27506 ;; *************** function _IOCB4_SetInterruptHandler *****************
 27507 ;; Defined at:
 27508 ;;		line 139 in file "mcc_generated_files/pin_manager.c"
 27509 ;; Parameters:    Size  Location     Type
 27510 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27511 ;;		 -> IOCB4_DefaultInterruptHandler(1), DIO2_ISR_Lora(1), 
 27512 ;; Auto vars:     Size  Location     Type
 27513 ;;		None
 27514 ;; Return value:  Size  Location     Type
 27515 ;;                  1    wreg      void 
 27516 ;; Registers used:
 27517 ;;		wreg, status,2, status,0
 27518 ;; Tracked objects:
 27519 ;;		On entry : 0/0
 27520 ;;		On exit  : 0/0
 27521 ;;		Unchanged: 0/0
 27522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27523 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27526 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27527 ;;Total ram usage:        2 bytes
 27528 ;; Hardware stack levels used:    1
 27529 ;; Hardware stack levels required when called:    7
 27530 ;; This function calls:
 27531 ;;		Nothing
 27532 ;; This function is called by:
 27533 ;;		_DIO2_ISR_Lora_Init
 27534 ;;		_PIN_MANAGER_Initialize
 27535 ;; This function uses a non-reentrant model
 27536 ;;
 27537                           
 27538                           	psect	text158
 27539  00A84E                     __ptext158:
 27540                           	opt callstack 0
 27541  00A84E                     _IOCB4_SetInterruptHandler:
 27542                           	opt callstack 21
 27543                           
 27544                           ;pin_manager.c: 140: IOCB4_InterruptHandler = InterruptHandler;
 27545                           
 27546                           ;incstack = 0
 27547  00A84E  C060  F1E9         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
 27548  00A852  C061  F1EA         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
 27549  00A856  0012               	return		;funcret
 27550  00A858                     __end_of_IOCB4_SetInterruptHandler:
 27551                           	opt callstack 0
 27552                           
 27553 ;; *************** function _DIO1_ISR_Lora_Init *****************
 27554 ;; Defined at:
 27555 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27556 ;; Parameters:    Size  Location     Type
 27557 ;;		None
 27558 ;; Auto vars:     Size  Location     Type
 27559 ;;		None
 27560 ;; Return value:  Size  Location     Type
 27561 ;;                  1    wreg      void 
 27562 ;; Registers used:
 27563 ;;		wreg, status,2, status,0, cstack
 27564 ;; Tracked objects:
 27565 ;;		On entry : 0/0
 27566 ;;		On exit  : 0/0
 27567 ;;		Unchanged: 0/0
 27568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27573 ;;Total ram usage:        0 bytes
 27574 ;; Hardware stack levels used:    1
 27575 ;; Hardware stack levels required when called:    8
 27576 ;; This function calls:
 27577 ;;		_INT2_SetInterruptHandler
 27578 ;; This function is called by:
 27579 ;;		_LORAWAN_PlatformInit
 27580 ;; This function uses a non-reentrant model
 27581 ;;
 27582                           
 27583                           	psect	text159
 27584  00A776                     __ptext159:
 27585                           	opt callstack 0
 27586  00A776                     _DIO1_ISR_Lora_Init:
 27587                           	opt callstack 20
 27588                           
 27589                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
 27590                           
 27591                           ;incstack = 0
 27592  00A776  0E56               	movlw	low _DIO1_ISR_Lora
 27593  00A778  0100               	movlb	0	; () banked
 27594  00A77A  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 27595  00A77C  0EA9               	movlw	high _DIO1_ISR_Lora
 27596  00A77E  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27597  00A780  EC2C  F054         	call	_INT2_SetInterruptHandler	;wreg free
 27598  00A784  0012               	return		;funcret
 27599  00A786                     __end_of_DIO1_ISR_Lora_Init:
 27600                           	opt callstack 0
 27601                           
 27602 ;; *************** function _DIO0_ISR_Lora_Init *****************
 27603 ;; Defined at:
 27604 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
 27605 ;; Parameters:    Size  Location     Type
 27606 ;;		None
 27607 ;; Auto vars:     Size  Location     Type
 27608 ;;		None
 27609 ;; Return value:  Size  Location     Type
 27610 ;;                  1    wreg      void 
 27611 ;; Registers used:
 27612 ;;		wreg, status,2, status,0, cstack
 27613 ;; Tracked objects:
 27614 ;;		On entry : 0/0
 27615 ;;		On exit  : 0/0
 27616 ;;		Unchanged: 0/0
 27617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27622 ;;Total ram usage:        0 bytes
 27623 ;; Hardware stack levels used:    1
 27624 ;; Hardware stack levels required when called:    8
 27625 ;; This function calls:
 27626 ;;		_INT1_SetInterruptHandler
 27627 ;; This function is called by:
 27628 ;;		_LORAWAN_PlatformInit
 27629 ;; This function uses a non-reentrant model
 27630 ;;
 27631                           
 27632                           	psect	text160
 27633  00A786                     __ptext160:
 27634                           	opt callstack 0
 27635  00A786                     _DIO0_ISR_Lora_Init:
 27636                           	opt callstack 20
 27637                           
 27638                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
 27639                           
 27640                           ;incstack = 0
 27641  00A786  0E5A               	movlw	low _DIO0_ISR_Lora
 27642  00A788  0100               	movlb	0	; () banked
 27643  00A78A  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 27644  00A78C  0EA9               	movlw	high _DIO0_ISR_Lora
 27645  00A78E  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27646  00A790  EC31  F054         	call	_INT1_SetInterruptHandler	;wreg free
 27647  00A794  0012               	return		;funcret
 27648  00A796                     __end_of_DIO0_ISR_Lora_Init:
 27649                           	opt callstack 0
 27650                           
 27651 ;; *************** function _INTERRUPT_Initialize *****************
 27652 ;; Defined at:
 27653 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 27654 ;; Parameters:    Size  Location     Type
 27655 ;;		None
 27656 ;; Auto vars:     Size  Location     Type
 27657 ;;		None
 27658 ;; Return value:  Size  Location     Type
 27659 ;;                  1    wreg      void 
 27660 ;; Registers used:
 27661 ;;		None
 27662 ;; Tracked objects:
 27663 ;;		On entry : 0/0
 27664 ;;		On exit  : 0/0
 27665 ;;		Unchanged: 0/0
 27666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27671 ;;Total ram usage:        0 bytes
 27672 ;; Hardware stack levels used:    1
 27673 ;; Hardware stack levels required when called:    7
 27674 ;; This function calls:
 27675 ;;		Nothing
 27676 ;; This function is called by:
 27677 ;;		_SYSTEM_Initialize
 27678 ;; This function uses a non-reentrant model
 27679 ;;
 27680                           
 27681                           	psect	text161
 27682  00A93E                     __ptext161:
 27683                           	opt callstack 0
 27684  00A93E                     _INTERRUPT_Initialize:
 27685                           	opt callstack 22
 27686                           
 27687                           ;interrupt_manager.c: 55: RCONbits.IPEN = 0;
 27688                           
 27689                           ;incstack = 0
 27690  00A93E  9ED0               	bcf	4048,7,c	;volatile
 27691  00A940  0012               	return		;funcret
 27692  00A942                     __end_of_INTERRUPT_Initialize:
 27693                           	opt callstack 0
 27694                           
 27695 ;; *************** function _EXT_INT_Initialize *****************
 27696 ;; Defined at:
 27697 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 27698 ;; Parameters:    Size  Location     Type
 27699 ;;		None
 27700 ;; Auto vars:     Size  Location     Type
 27701 ;;		None
 27702 ;; Return value:  Size  Location     Type
 27703 ;;                  1    wreg      void 
 27704 ;; Registers used:
 27705 ;;		wreg, status,2, status,0, cstack
 27706 ;; Tracked objects:
 27707 ;;		On entry : 0/0
 27708 ;;		On exit  : 0/0
 27709 ;;		Unchanged: 0/0
 27710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27715 ;;Total ram usage:        0 bytes
 27716 ;; Hardware stack levels used:    1
 27717 ;; Hardware stack levels required when called:    8
 27718 ;; This function calls:
 27719 ;;		_INT1_SetInterruptHandler
 27720 ;;		_INT2_SetInterruptHandler
 27721 ;; This function is called by:
 27722 ;;		_SYSTEM_Initialize
 27723 ;; This function uses a non-reentrant model
 27724 ;;
 27725                           
 27726                           	psect	text162
 27727  00A17C                     __ptext162:
 27728                           	opt callstack 0
 27729  00A17C                     _EXT_INT_Initialize:
 27730                           	opt callstack 21
 27731                           
 27732                           ;ext_int.c: 91: (INTCON3bits.INT1IF = 0);
 27733                           
 27734                           ;incstack = 0
 27735  00A17C  90F0               	bcf	4080,0,c	;volatile
 27736                           
 27737                           ;ext_int.c: 92: (INTCON2bits.INTEDG1 = 1);
 27738  00A17E  8AF1               	bsf	4081,5,c	;volatile
 27739                           
 27740                           ;ext_int.c: 94: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
 27741  00A180  0E70               	movlw	low _INT1_DefaultInterruptHandler
 27742  00A182  0100               	movlb	0	; () banked
 27743  00A184  6F60               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
 27744  00A186  0EA9               	movlw	high _INT1_DefaultInterruptHandler
 27745  00A188  6F61               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27746  00A18A  EC31  F054         	call	_INT1_SetInterruptHandler	;wreg free
 27747                           
 27748                           ;ext_int.c: 95: (INTCON3bits.INT1IE = 1);
 27749  00A18E  86F0               	bsf	4080,3,c	;volatile
 27750                           
 27751                           ;ext_int.c: 100: (INTCON3bits.INT2IF = 0);
 27752  00A190  92F0               	bcf	4080,1,c	;volatile
 27753                           
 27754                           ;ext_int.c: 101: (INTCON2bits.INTEDG2 = 1);
 27755  00A192  88F1               	bsf	4081,4,c	;volatile
 27756                           
 27757                           ;ext_int.c: 103: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
 27758  00A194  0E6E               	movlw	low _INT2_DefaultInterruptHandler
 27759  00A196  0100               	movlb	0	; () banked
 27760  00A198  6F60               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
 27761  00A19A  0EA9               	movlw	high _INT2_DefaultInterruptHandler
 27762  00A19C  6F61               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 27763  00A19E  EC2C  F054         	call	_INT2_SetInterruptHandler	;wreg free
 27764                           
 27765                           ;ext_int.c: 104: (INTCON3bits.INT2IE = 1);
 27766  00A1A2  88F0               	bsf	4080,4,c	;volatile
 27767  00A1A4  0012               	return		;funcret
 27768  00A1A6                     __end_of_EXT_INT_Initialize:
 27769                           	opt callstack 0
 27770                           
 27771 ;; *************** function _INT2_SetInterruptHandler *****************
 27772 ;; Defined at:
 27773 ;;		line 77 in file "mcc_generated_files/ext_int.c"
 27774 ;; Parameters:    Size  Location     Type
 27775 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27776 ;;		 -> INT2_DefaultInterruptHandler(1), DIO1_ISR_Lora(1), 
 27777 ;; Auto vars:     Size  Location     Type
 27778 ;;		None
 27779 ;; Return value:  Size  Location     Type
 27780 ;;                  1    wreg      void 
 27781 ;; Registers used:
 27782 ;;		wreg, status,2, status,0
 27783 ;; Tracked objects:
 27784 ;;		On entry : 0/0
 27785 ;;		On exit  : 0/0
 27786 ;;		Unchanged: 0/0
 27787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27788 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27791 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27792 ;;Total ram usage:        2 bytes
 27793 ;; Hardware stack levels used:    1
 27794 ;; Hardware stack levels required when called:    7
 27795 ;; This function calls:
 27796 ;;		Nothing
 27797 ;; This function is called by:
 27798 ;;		_DIO1_ISR_Lora_Init
 27799 ;;		_EXT_INT_Initialize
 27800 ;; This function uses a non-reentrant model
 27801 ;;
 27802                           
 27803                           	psect	text163
 27804  00A858                     __ptext163:
 27805                           	opt callstack 0
 27806  00A858                     _INT2_SetInterruptHandler:
 27807                           	opt callstack 20
 27808                           
 27809                           ;ext_int.c: 78: INT2_InterruptHandler = InterruptHandler;
 27810                           
 27811                           ;incstack = 0
 27812  00A858  C060  F1EB         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
 27813  00A85C  C061  F1EC         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
 27814  00A860  0012               	return		;funcret
 27815  00A862                     __end_of_INT2_SetInterruptHandler:
 27816                           	opt callstack 0
 27817                           
 27818 ;; *************** function _INT1_SetInterruptHandler *****************
 27819 ;; Defined at:
 27820 ;;		line 51 in file "mcc_generated_files/ext_int.c"
 27821 ;; Parameters:    Size  Location     Type
 27822 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 27823 ;;		 -> INT1_DefaultInterruptHandler(1), DIO0_ISR_Lora(1), 
 27824 ;; Auto vars:     Size  Location     Type
 27825 ;;		None
 27826 ;; Return value:  Size  Location     Type
 27827 ;;                  1    wreg      void 
 27828 ;; Registers used:
 27829 ;;		wreg, status,2, status,0
 27830 ;; Tracked objects:
 27831 ;;		On entry : 0/0
 27832 ;;		On exit  : 0/0
 27833 ;;		Unchanged: 0/0
 27834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27838 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27839 ;;Total ram usage:        2 bytes
 27840 ;; Hardware stack levels used:    1
 27841 ;; Hardware stack levels required when called:    7
 27842 ;; This function calls:
 27843 ;;		Nothing
 27844 ;; This function is called by:
 27845 ;;		_DIO0_ISR_Lora_Init
 27846 ;;		_EXT_INT_Initialize
 27847 ;; This function uses a non-reentrant model
 27848 ;;
 27849                           
 27850                           	psect	text164
 27851  00A862                     __ptext164:
 27852                           	opt callstack 0
 27853  00A862                     _INT1_SetInterruptHandler:
 27854                           	opt callstack 20
 27855                           
 27856                           ;ext_int.c: 52: INT1_InterruptHandler = InterruptHandler;
 27857                           
 27858                           ;incstack = 0
 27859  00A862  C060  F1ED         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
 27860  00A866  C061  F1EE         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
 27861  00A86A  0012               	return		;funcret
 27862  00A86C                     __end_of_INT1_SetInterruptHandler:
 27863                           	opt callstack 0
 27864                           
 27865 ;; *************** function _EUSART2_Initialize *****************
 27866 ;; Defined at:
 27867 ;;		line 65 in file "mcc_generated_files/eusart2.c"
 27868 ;; Parameters:    Size  Location     Type
 27869 ;;		None
 27870 ;; Auto vars:     Size  Location     Type
 27871 ;;		None
 27872 ;; Return value:  Size  Location     Type
 27873 ;;                  1    wreg      void 
 27874 ;; Registers used:
 27875 ;;		wreg, status,2, status,0, cstack
 27876 ;; Tracked objects:
 27877 ;;		On entry : 0/0
 27878 ;;		On exit  : 0/0
 27879 ;;		Unchanged: 0/0
 27880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27885 ;;Total ram usage:        0 bytes
 27886 ;; Hardware stack levels used:    1
 27887 ;; Hardware stack levels required when called:    8
 27888 ;; This function calls:
 27889 ;;		_EUSART2_SetErrorHandler
 27890 ;;		_EUSART2_SetFramingErrorHandler
 27891 ;;		_EUSART2_SetOverrunErrorHandler
 27892 ;; This function is called by:
 27893 ;;		_SYSTEM_Initialize
 27894 ;; This function uses a non-reentrant model
 27895 ;;
 27896                           
 27897                           	psect	text165
 27898  0098B4                     __ptext165:
 27899                           	opt callstack 0
 27900  0098B4                     _EUSART2_Initialize:
 27901                           	opt callstack 21
 27902                           
 27903                           ;eusart2.c: 70: BAUDCON2 = 0x08;
 27904                           
 27905                           ;incstack = 0
 27906  0098B4  0E08               	movlw	8
 27907  0098B6  6E70               	movwf	3952,c	;volatile
 27908                           
 27909                           ;eusart2.c: 73: RCSTA2 = 0x80;
 27910  0098B8  0E80               	movlw	128
 27911  0098BA  6E71               	movwf	3953,c	;volatile
 27912                           
 27913                           ;eusart2.c: 76: TXSTA2 = 0x04;
 27914  0098BC  0E04               	movlw	4
 27915  0098BE  6E72               	movwf	3954,c	;volatile
 27916                           
 27917                           ;eusart2.c: 79: SPBRG2 = 0xA0;
 27918  0098C0  0EA0               	movlw	160
 27919  0098C2  6E75               	movwf	3957,c	;volatile
 27920                           
 27921                           ;eusart2.c: 82: SPBRGH2 = 0x01;
 27922  0098C4  0E01               	movlw	1
 27923  0098C6  6E76               	movwf	3958,c	;volatile
 27924                           
 27925                           ;eusart2.c: 85: EUSART2_SetFramingErrorHandler(EUSART2_DefaultFramingErrorHandler);
 27926  0098C8  0E00               	movlw	0
 27927  0098CA  0100               	movlb	0	; () banked
 27928  0098CC  6F60               	movwf	EUSART2_SetFramingErrorHandler@interruptHandler& (0+255),b
 27929  0098CE  0E00               	movlw	0
 27930  0098D0  6F61               	movwf	(EUSART2_SetFramingErrorHandler@interruptHandler+1)& (0+255),b
 27931  0098D2  EC3B  F054         	call	_EUSART2_SetFramingErrorHandler	;wreg free
 27932                           
 27933                           ;eusart2.c: 86: EUSART2_SetOverrunErrorHandler(EUSART2_DefaultOverrunErrorHandler);
 27934  0098D6  0E00               	movlw	0
 27935  0098D8  0100               	movlb	0	; () banked
 27936  0098DA  6F60               	movwf	EUSART2_SetOverrunErrorHandler@interruptHandler& (0+255),b
 27937  0098DC  0E00               	movlw	0
 27938  0098DE  6F61               	movwf	(EUSART2_SetOverrunErrorHandler@interruptHandler+1)& (0+255),b
 27939  0098E0  EC36  F054         	call	_EUSART2_SetOverrunErrorHandler	;wreg free
 27940                           
 27941                           ;eusart2.c: 87: EUSART2_SetErrorHandler(EUSART2_DefaultErrorHandler);
 27942  0098E4  0E00               	movlw	0
 27943  0098E6  0100               	movlb	0	; () banked
 27944  0098E8  6F60               	movwf	EUSART2_SetErrorHandler@interruptHandler& (0+255),b
 27945  0098EA  0E00               	movlw	0
 27946  0098EC  6F61               	movwf	(EUSART2_SetErrorHandler@interruptHandler+1)& (0+255),b
 27947  0098EE  EC40  F054         	call	_EUSART2_SetErrorHandler	;wreg free
 27948                           
 27949                           ;eusart2.c: 89: eusart2RxLastError.status = 0;
 27950  0098F2  0E00               	movlw	0
 27951  0098F4  0101               	movlb	1	; () banked
 27952  0098F6  6F26               	movwf	_eusart2RxLastError& (0+255),b	;volatile
 27953                           
 27954                           ; BSR set to: 1
 27955  0098F8  0012               	return		;funcret
 27956  0098FA                     __end_of_EUSART2_Initialize:
 27957                           	opt callstack 0
 27958                           
 27959 ;; *************** function _EUSART2_SetOverrunErrorHandler *****************
 27960 ;; Defined at:
 27961 ;;		line 160 in file "mcc_generated_files/eusart2.c"
 27962 ;; Parameters:    Size  Location     Type
 27963 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 27964 ;;		 -> EUSART2_DefaultOverrunErrorHandler(1), 
 27965 ;; Auto vars:     Size  Location     Type
 27966 ;;		None
 27967 ;; Return value:  Size  Location     Type
 27968 ;;                  1    wreg      void 
 27969 ;; Registers used:
 27970 ;;		wreg, status,2, status,0
 27971 ;; Tracked objects:
 27972 ;;		On entry : 0/0
 27973 ;;		On exit  : 0/0
 27974 ;;		Unchanged: 0/0
 27975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27976 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27979 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27980 ;;Total ram usage:        2 bytes
 27981 ;; Hardware stack levels used:    1
 27982 ;; Hardware stack levels required when called:    7
 27983 ;; This function calls:
 27984 ;;		Nothing
 27985 ;; This function is called by:
 27986 ;;		_EUSART2_Initialize
 27987 ;; This function uses a non-reentrant model
 27988 ;;
 27989                           
 27990                           	psect	text166
 27991  00A86C                     __ptext166:
 27992                           	opt callstack 0
 27993  00A86C                     _EUSART2_SetOverrunErrorHandler:
 27994                           	opt callstack 21
 27995                           
 27996                           ;eusart2.c: 161: EUSART2_OverrunErrorHandler = interruptHandler;
 27997                           
 27998                           ; BSR set to: 1
 27999                           ;incstack = 0
 28000  00A86C  C060  F2FC         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler,_EUSART2_OverrunErrorHandler
 28001  00A870  C061  F2FD         	movff	EUSART2_SetOverrunErrorHandler@interruptHandler+1,_EUSART2_OverrunErrorHandler+1
 28002  00A874  0012               	return		;funcret
 28003  00A876                     __end_of_EUSART2_SetOverrunErrorHandler:
 28004                           	opt callstack 0
 28005                           
 28006 ;; *************** function _EUSART2_SetFramingErrorHandler *****************
 28007 ;; Defined at:
 28008 ;;		line 156 in file "mcc_generated_files/eusart2.c"
 28009 ;; Parameters:    Size  Location     Type
 28010 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 28011 ;;		 -> EUSART2_DefaultFramingErrorHandler(1), 
 28012 ;; Auto vars:     Size  Location     Type
 28013 ;;		None
 28014 ;; Return value:  Size  Location     Type
 28015 ;;                  1    wreg      void 
 28016 ;; Registers used:
 28017 ;;		wreg, status,2, status,0
 28018 ;; Tracked objects:
 28019 ;;		On entry : 0/0
 28020 ;;		On exit  : 0/0
 28021 ;;		Unchanged: 0/0
 28022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28026 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28027 ;;Total ram usage:        2 bytes
 28028 ;; Hardware stack levels used:    1
 28029 ;; Hardware stack levels required when called:    7
 28030 ;; This function calls:
 28031 ;;		Nothing
 28032 ;; This function is called by:
 28033 ;;		_EUSART2_Initialize
 28034 ;; This function uses a non-reentrant model
 28035 ;;
 28036                           
 28037                           	psect	text167
 28038  00A876                     __ptext167:
 28039                           	opt callstack 0
 28040  00A876                     _EUSART2_SetFramingErrorHandler:
 28041                           	opt callstack 21
 28042                           
 28043                           ;eusart2.c: 157: EUSART2_FramingErrorHandler = interruptHandler;
 28044                           
 28045                           ;incstack = 0
 28046  00A876  C060  F2FE         	movff	EUSART2_SetFramingErrorHandler@interruptHandler,_EUSART2_FramingErrorHandler
 28047  00A87A  C061  F2FF         	movff	EUSART2_SetFramingErrorHandler@interruptHandler+1,_EUSART2_FramingErrorHandler+1
 28048  00A87E  0012               	return		;funcret
 28049  00A880                     __end_of_EUSART2_SetFramingErrorHandler:
 28050                           	opt callstack 0
 28051                           
 28052 ;; *************** function _EUSART2_SetErrorHandler *****************
 28053 ;; Defined at:
 28054 ;;		line 164 in file "mcc_generated_files/eusart2.c"
 28055 ;; Parameters:    Size  Location     Type
 28056 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
 28057 ;;		 -> EUSART2_DefaultErrorHandler(1), 
 28058 ;; Auto vars:     Size  Location     Type
 28059 ;;		None
 28060 ;; Return value:  Size  Location     Type
 28061 ;;                  1    wreg      void 
 28062 ;; Registers used:
 28063 ;;		wreg, status,2, status,0
 28064 ;; Tracked objects:
 28065 ;;		On entry : 0/0
 28066 ;;		On exit  : 0/0
 28067 ;;		Unchanged: 0/0
 28068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28069 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28072 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28073 ;;Total ram usage:        2 bytes
 28074 ;; Hardware stack levels used:    1
 28075 ;; Hardware stack levels required when called:    7
 28076 ;; This function calls:
 28077 ;;		Nothing
 28078 ;; This function is called by:
 28079 ;;		_EUSART2_Initialize
 28080 ;; This function uses a non-reentrant model
 28081 ;;
 28082                           
 28083                           	psect	text168
 28084  00A880                     __ptext168:
 28085                           	opt callstack 0
 28086  00A880                     _EUSART2_SetErrorHandler:
 28087                           	opt callstack 21
 28088                           
 28089                           ;eusart2.c: 165: EUSART2_ErrorHandler = interruptHandler;
 28090                           
 28091                           ;incstack = 0
 28092  00A880  C060  F2FA         	movff	EUSART2_SetErrorHandler@interruptHandler,_EUSART2_ErrorHandler
 28093  00A884  C061  F2FB         	movff	EUSART2_SetErrorHandler@interruptHandler+1,_EUSART2_ErrorHandler+1
 28094  00A888  0012               	return		;funcret
 28095  00A88A                     __end_of_EUSART2_SetErrorHandler:
 28096                           	opt callstack 0
 28097                           
 28098 ;; *************** function _ADC_Initialize *****************
 28099 ;; Defined at:
 28100 ;;		line 60 in file "mcc_generated_files/adc.c"
 28101 ;; Parameters:    Size  Location     Type
 28102 ;;		None
 28103 ;; Auto vars:     Size  Location     Type
 28104 ;;		None
 28105 ;; Return value:  Size  Location     Type
 28106 ;;                  1    wreg      void 
 28107 ;; Registers used:
 28108 ;;		wreg, status,2
 28109 ;; Tracked objects:
 28110 ;;		On entry : 0/0
 28111 ;;		On exit  : 0/0
 28112 ;;		Unchanged: 0/0
 28113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28118 ;;Total ram usage:        0 bytes
 28119 ;; Hardware stack levels used:    1
 28120 ;; Hardware stack levels required when called:    7
 28121 ;; This function calls:
 28122 ;;		Nothing
 28123 ;; This function is called by:
 28124 ;;		_SYSTEM_Initialize
 28125 ;; This function uses a non-reentrant model
 28126 ;;
 28127                           
 28128                           	psect	text169
 28129  00A6AA                     __ptext169:
 28130                           	opt callstack 0
 28131  00A6AA                     _ADC_Initialize:
 28132                           	opt callstack 22
 28133                           
 28134                           ;adc.c: 65: ADCON0 = 0x01;
 28135                           
 28136                           ;incstack = 0
 28137  00A6AA  0E01               	movlw	1
 28138  00A6AC  6EC2               	movwf	4034,c	;volatile
 28139                           
 28140                           ;adc.c: 68: ADCON1 = 0x00;
 28141  00A6AE  0E00               	movlw	0
 28142  00A6B0  6EC1               	movwf	4033,c	;volatile
 28143                           
 28144                           ;adc.c: 71: ADCON2 = 0x00;
 28145  00A6B2  0E00               	movlw	0
 28146  00A6B4  6EC0               	movwf	4032,c	;volatile
 28147                           
 28148                           ;adc.c: 74: ADRESL = 0x00;
 28149  00A6B6  0E00               	movlw	0
 28150  00A6B8  6EC3               	movwf	4035,c	;volatile
 28151                           
 28152                           ;adc.c: 77: ADRESH = 0x00;
 28153  00A6BA  0E00               	movlw	0
 28154  00A6BC  6EC4               	movwf	4036,c	;volatile
 28155                           
 28156                           ;adc.c: 80: PIE1bits.ADIE = 1;
 28157  00A6BE  8C9D               	bsf	3997,6,c	;volatile
 28158  00A6C0  0012               	return		;funcret
 28159  00A6C2                     __end_of_ADC_Initialize:
 28160                           	opt callstack 0
 28161                           
 28162 ;; *************** function _LORAWAN_SetDeviceEui *****************
 28163 ;; Defined at:
 28164 ;;		line 337 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28165 ;; Parameters:    Size  Location     Type
 28166 ;;  deviceEuiNew    2   11[BANK0 ] PTR unsigned char 
 28167 ;;		 -> deviceEui(8), 
 28168 ;; Auto vars:     Size  Location     Type
 28169 ;;		None
 28170 ;; Return value:  Size  Location     Type
 28171 ;;                  1    wreg      void 
 28172 ;; Registers used:
 28173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28174 ;; Tracked objects:
 28175 ;;		On entry : 0/0
 28176 ;;		On exit  : 0/0
 28177 ;;		Unchanged: 0/0
 28178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28179 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28182 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28183 ;;Total ram usage:        2 bytes
 28184 ;; Hardware stack levels used:    1
 28185 ;; Hardware stack levels required when called:    8
 28186 ;; This function calls:
 28187 ;;		_memcpy
 28188 ;; This function is called by:
 28189 ;;		_main
 28190 ;; This function uses a non-reentrant model
 28191 ;;
 28192                           
 28193                           	psect	text170
 28194  009F90                     __ptext170:
 28195                           	opt callstack 0
 28196  009F90                     _LORAWAN_SetDeviceEui:
 28197                           	opt callstack 22
 28198                           
 28199                           ;lorawan.c: 339: if (deviceEuiNew != (0))
 28200                           
 28201                           ;incstack = 0
 28202  009F90  0100               	movlb	0	; () banked
 28203  009F92  516B               	movf	LORAWAN_SetDeviceEui@deviceEuiNew& (0+255),w,b
 28204  009F94  116C               	iorwf	(LORAWAN_SetDeviceEui@deviceEuiNew+1)& (0+255),w,b
 28205  009F96  B4D8               	btfsc	status,2,c
 28206  009F98  0012               	return	
 28207                           
 28208                           ; BSR set to: 0
 28209                           ;lorawan.c: 340: {;lorawan.c: 341: memcpy(loRa.activationParameters.deviceEui.buffer, de
      +                          viceEuiNew, sizeof(loRa.activationParameters.deviceEui) );
 28210  009F9A  0E5F               	movlw	low (_loRa+90)
 28211  009F9C  6F60               	movwf	memcpy@d1& (0+255),b
 28212  009F9E  0E02               	movlw	high (_loRa+90)
 28213  009FA0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28214  009FA2  C06B  F062         	movff	LORAWAN_SetDeviceEui@deviceEuiNew,memcpy@s1
 28215  009FA6  C06C  F063         	movff	LORAWAN_SetDeviceEui@deviceEuiNew+1,memcpy@s1+1
 28216  009FAA  0E00               	movlw	0
 28217  009FAC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28218  009FAE  0E08               	movlw	8
 28219  009FB0  6F64               	movwf	memcpy@n& (0+255),b
 28220  009FB2  EC2F  F048         	call	_memcpy	;wreg free
 28221                           
 28222                           ;lorawan.c: 342: loRa.macKeys.deviceEui = 1;
 28223  009FB6  0102               	movlb	2	; () banked
 28224  009FB8  81AA               	bsf	(_loRa+165)& (0+255),0,b
 28225                           
 28226                           ; BSR set to: 2
 28227                           ;lorawan.c: 343: loRa.macStatus.networkJoined = 0;
 28228  009FBA  9907               	bcf	(_loRa+2)& (0+255),4,b
 28229  009FBC  0012               	return		;funcret
 28230  009FBE                     __end_of_LORAWAN_SetDeviceEui:
 28231                           	opt callstack 0
 28232                           
 28233 ;; *************** function _LORAWAN_SetApplicationKey *****************
 28234 ;; Defined at:
 28235 ;;		line 409 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28236 ;; Parameters:    Size  Location     Type
 28237 ;;  applicationK    2   11[BANK0 ] PTR unsigned char 
 28238 ;;		 -> appKey(16), 
 28239 ;; Auto vars:     Size  Location     Type
 28240 ;;		None
 28241 ;; Return value:  Size  Location     Type
 28242 ;;                  1    wreg      void 
 28243 ;; Registers used:
 28244 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28245 ;; Tracked objects:
 28246 ;;		On entry : 0/0
 28247 ;;		On exit  : 0/0
 28248 ;;		Unchanged: 0/0
 28249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28250 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28253 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28254 ;;Total ram usage:        2 bytes
 28255 ;; Hardware stack levels used:    1
 28256 ;; Hardware stack levels required when called:    8
 28257 ;; This function calls:
 28258 ;;		_memcpy
 28259 ;; This function is called by:
 28260 ;;		_main
 28261 ;; This function uses a non-reentrant model
 28262 ;;
 28263                           
 28264                           	psect	text171
 28265  009FBE                     __ptext171:
 28266                           	opt callstack 0
 28267  009FBE                     _LORAWAN_SetApplicationKey:
 28268                           	opt callstack 22
 28269                           
 28270                           ;lorawan.c: 411: if (applicationKeyNew != (0))
 28271                           
 28272                           ;incstack = 0
 28273  009FBE  0100               	movlb	0	; () banked
 28274  009FC0  516B               	movf	LORAWAN_SetApplicationKey@applicationKeyNew& (0+255),w,b
 28275  009FC2  116C               	iorwf	(LORAWAN_SetApplicationKey@applicationKeyNew+1)& (0+255),w,b
 28276  009FC4  B4D8               	btfsc	status,2,c
 28277  009FC6  0012               	return	
 28278                           
 28279                           ; BSR set to: 0
 28280                           ;lorawan.c: 412: {;lorawan.c: 413: memcpy( loRa.activationParameters.applicationKey, app
      +                          licationKeyNew, 16);
 28281  009FC8  0E47               	movlw	low (_loRa+66)
 28282  009FCA  6F60               	movwf	memcpy@d1& (0+255),b
 28283  009FCC  0E02               	movlw	high (_loRa+66)
 28284  009FCE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28285  009FD0  C06B  F062         	movff	LORAWAN_SetApplicationKey@applicationKeyNew,memcpy@s1
 28286  009FD4  C06C  F063         	movff	LORAWAN_SetApplicationKey@applicationKeyNew+1,memcpy@s1+1
 28287  009FD8  0E00               	movlw	0
 28288  009FDA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28289  009FDC  0E10               	movlw	16
 28290  009FDE  6F64               	movwf	memcpy@n& (0+255),b
 28291  009FE0  EC2F  F048         	call	_memcpy	;wreg free
 28292                           
 28293                           ;lorawan.c: 414: loRa.macKeys.applicationKey = 1;
 28294  009FE4  0102               	movlb	2	; () banked
 28295  009FE6  87AA               	bsf	(_loRa+165)& (0+255),3,b
 28296                           
 28297                           ; BSR set to: 2
 28298                           ;lorawan.c: 415: loRa.macStatus.networkJoined = 0;
 28299  009FE8  9907               	bcf	(_loRa+2)& (0+255),4,b
 28300  009FEA  0012               	return		;funcret
 28301  009FEC                     __end_of_LORAWAN_SetApplicationKey:
 28302                           	opt callstack 0
 28303                           
 28304 ;; *************** function _LORAWAN_SetApplicationEui *****************
 28305 ;; Defined at:
 28306 ;;		line 352 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28307 ;; Parameters:    Size  Location     Type
 28308 ;;  applicationE    2   11[BANK0 ] PTR unsigned char 
 28309 ;;		 -> appEui(8), 
 28310 ;; Auto vars:     Size  Location     Type
 28311 ;;		None
 28312 ;; Return value:  Size  Location     Type
 28313 ;;                  1    wreg      void 
 28314 ;; Registers used:
 28315 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28316 ;; Tracked objects:
 28317 ;;		On entry : 0/0
 28318 ;;		On exit  : 0/0
 28319 ;;		Unchanged: 0/0
 28320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28324 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28325 ;;Total ram usage:        2 bytes
 28326 ;; Hardware stack levels used:    1
 28327 ;; Hardware stack levels required when called:    8
 28328 ;; This function calls:
 28329 ;;		_memcpy
 28330 ;; This function is called by:
 28331 ;;		_main
 28332 ;; This function uses a non-reentrant model
 28333 ;;
 28334                           
 28335                           	psect	text172
 28336  009FEC                     __ptext172:
 28337                           	opt callstack 0
 28338  009FEC                     _LORAWAN_SetApplicationEui:
 28339                           	opt callstack 22
 28340                           
 28341                           ;lorawan.c: 354: if (applicationEuiNew != (0))
 28342                           
 28343                           ;incstack = 0
 28344  009FEC  0100               	movlb	0	; () banked
 28345  009FEE  516B               	movf	LORAWAN_SetApplicationEui@applicationEuiNew& (0+255),w,b
 28346  009FF0  116C               	iorwf	(LORAWAN_SetApplicationEui@applicationEuiNew+1)& (0+255),w,b
 28347  009FF2  B4D8               	btfsc	status,2,c
 28348  009FF4  0012               	return	
 28349                           
 28350                           ; BSR set to: 0
 28351                           ;lorawan.c: 355: {;lorawan.c: 356: memcpy(loRa.activationParameters.applicationEui.buffe
      +                          r, applicationEuiNew, 8);
 28352  009FF6  0E57               	movlw	low (_loRa+82)
 28353  009FF8  6F60               	movwf	memcpy@d1& (0+255),b
 28354  009FFA  0E02               	movlw	high (_loRa+82)
 28355  009FFC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 28356  009FFE  C06B  F062         	movff	LORAWAN_SetApplicationEui@applicationEuiNew,memcpy@s1
 28357  00A002  C06C  F063         	movff	LORAWAN_SetApplicationEui@applicationEuiNew+1,memcpy@s1+1
 28358  00A006  0E00               	movlw	0
 28359  00A008  6F65               	movwf	(memcpy@n+1)& (0+255),b
 28360  00A00A  0E08               	movlw	8
 28361  00A00C  6F64               	movwf	memcpy@n& (0+255),b
 28362  00A00E  EC2F  F048         	call	_memcpy	;wreg free
 28363                           
 28364                           ;lorawan.c: 357: loRa.macKeys.applicationEui = 1;
 28365  00A012  0102               	movlb	2	; () banked
 28366  00A014  83AA               	bsf	(_loRa+165)& (0+255),1,b
 28367                           
 28368                           ; BSR set to: 2
 28369                           ;lorawan.c: 358: loRa.macStatus.networkJoined = 0;
 28370  00A016  9907               	bcf	(_loRa+2)& (0+255),4,b
 28371  00A018  0012               	return		;funcret
 28372  00A01A                     __end_of_LORAWAN_SetApplicationEui:
 28373                           	opt callstack 0
 28374                           
 28375 ;; *************** function _LORAWAN_Join *****************
 28376 ;; Defined at:
 28377 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28378 ;; Parameters:    Size  Location     Type
 28379 ;;  activationTy    1    wreg     enum E6082
 28380 ;; Auto vars:     Size  Location     Type
 28381 ;;  activationTy    1  124[BANK0 ] enum E6082
 28382 ;;  result          1  123[BANK0 ] enum E6059
 28383 ;;  bufferIndex     1  122[BANK0 ] unsigned char 
 28384 ;; Return value:  Size  Location     Type
 28385 ;;                  1    wreg      enum E6059
 28386 ;; Registers used:
 28387 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28388 ;; Tracked objects:
 28389 ;;		On entry : 0/0
 28390 ;;		On exit  : 0/0
 28391 ;;		Unchanged: 0/0
 28392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28394 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28396 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28397 ;;Total ram usage:        3 bytes
 28398 ;; Hardware stack levels used:    1
 28399 ;; Hardware stack levels required when called:   14
 28400 ;; This function calls:
 28401 ;;		_PrepareJoinRequestFrame
 28402 ;;		_RADIO_Transmit
 28403 ;;		_SelectChannelForTransmission
 28404 ;;		_SwTimerSetTimeout
 28405 ;;		_SwTimerStart
 28406 ;;		_UpdateJoinInProgress
 28407 ;; This function is called by:
 28408 ;;		_main
 28409 ;; This function uses a non-reentrant model
 28410 ;;
 28411                           
 28412                           	psect	text173
 28413  007E5A                     __ptext173:
 28414                           	opt callstack 0
 28415  007E5A                     _LORAWAN_Join:
 28416                           	opt callstack 16
 28417                           
 28418                           ;incstack = 0
 28419                           ;LORAWAN_Join@activationTypeNew stored from wreg
 28420  007E5A  0100               	movlb	0	; () banked
 28421  007E5C  6FDC               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 28422                           
 28423                           ;lorawan.c: 117: uint8_t bufferIndex;;lorawan.c: 118: LorawanError_t result;;lorawan.c: 
      +                          120: if (loRa.macStatus.macPause == 1)
 28424  007E5E  0102               	movlb	2	; () banked
 28425  007E60  B108               	btfsc	(_loRa+3)& (0+255),0,b
 28426  007E62  0012               	return	
 28427                           
 28428                           ; BSR set to: 2
 28429                           ;lorawan.c: 123: };lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 28430  007E64  BF07               	btfsc	(_loRa+2)& (0+255),7,b
 28431  007E66  0012               	return	
 28432                           
 28433                           ; BSR set to: 2
 28434                           ;lorawan.c: 128: };lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 28435  007E68  5107               	movf	(_loRa+2)& (0+255),w,b
 28436  007E6A  0B0F               	andlw	15
 28437  007E6C  0900               	iorlw	0
 28438  007E6E  A4D8               	btfss	status,2,c
 28439  007E70  0012               	return	
 28440                           
 28441                           ; BSR set to: 2
 28442                           ;lorawan.c: 133: };lorawan.c: 135: loRa.activationParameters.activationType = activation
      +                          TypeNew;
 28443  007E72  C0DC  F222         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 28444                           
 28445                           ; BSR set to: 2
 28446                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 28447  007E76  0100               	movlb	0	; () banked
 28448  007E78  51DC               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 28449  007E7A  A4D8               	btfss	status,2,c
 28450  007E7C  D024               	goto	l1511
 28451                           
 28452                           ; BSR set to: 0
 28453                           ;lorawan.c: 138: {;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.a
      +                          pplicationEui == 0) || (loRa.macKeys.applicationKey == 0) )
 28454  007E7E  0102               	movlb	2	; () banked
 28455  007E80  A1AA               	btfss	(_loRa+165)& (0+255),0,b
 28456  007E82  0012               	return	
 28457                           
 28458                           ; BSR set to: 2
 28459  007E84  A3AA               	btfss	(_loRa+165)& (0+255),1,b
 28460  007E86  0012               	return	
 28461                           
 28462                           ; BSR set to: 2
 28463  007E88  A7AA               	btfss	(_loRa+165)& (0+255),3,b
 28464  007E8A  0012               	return	
 28465                           
 28466                           ; BSR set to: 2
 28467                           ;lorawan.c: 144: else;lorawan.c: 145: {;lorawan.c: 146: bufferIndex = PrepareJoinRequest
      +                          Frame ();
 28468  007E8C  EC3D  F02B         	call	_PrepareJoinRequestFrame	;wreg free
 28469  007E90  0100               	movlb	0	; () banked
 28470  007E92  6FDA               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 28471                           
 28472                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 28473  007E94  0E00               	movlw	0
 28474  007E96  ECCD  F046         	call	_SelectChannelForTransmission
 28475  007E9A  0100               	movlb	0	; () banked
 28476  007E9C  6FDB               	movwf	LORAWAN_Join@result& (0+255),b
 28477                           
 28478                           ; BSR set to: 0
 28479                           ;lorawan.c: 149: if (result == OK)
 28480  007E9E  51DB               	movf	LORAWAN_Join@result& (0+255),w,b
 28481  007EA0  A4D8               	btfss	status,2,c
 28482  007EA2  0012               	return	
 28483                           
 28484                           ; BSR set to: 0
 28485                           ;lorawan.c: 150: {;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 28486  007EA4  0EB8               	movlw	low _macBuffer
 28487  007EA6  6FA9               	movwf	RADIO_Transmit@buffer& (0+255),b
 28488  007EA8  0E06               	movlw	high _macBuffer
 28489  007EAA  6FAA               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 28490  007EAC  C0DA  F0AB         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 28491  007EB0  EC82  F01F         	call	_RADIO_Transmit	;wreg free
 28492  007EB4  0100               	movlb	0	; () banked
 28493  007EB6  51A9               	movf	?_RADIO_Transmit& (0+255),w,b
 28494  007EB8  11AA               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 28495  007EBA  A4D8               	btfss	status,2,c
 28496  007EBC  0012               	return	
 28497                           
 28498                           ; BSR set to: 0
 28499                           ;lorawan.c: 152: {;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 28500  007EBE  0E01               	movlw	1
 28501  007EC0  EC23  F053         	call	_UpdateJoinInProgress
 28502  007EC4  0012               	return	
 28503  007EC6                     l1511:
 28504                           
 28505                           ; BSR set to: 0
 28506                           ;lorawan.c: 167: else;lorawan.c: 168: {;lorawan.c: 170: if ( (loRa.macKeys.applicationSe
      +                          ssionKey == 0) || (loRa.macKeys.networkSessionKey == 0) || (loRa.macKeys.deviceAddress =
      +                          = 0) )
 28507  007EC6  0102               	movlb	2	; () banked
 28508  007EC8  ABAA               	btfss	(_loRa+165)& (0+255),5,b
 28509  007ECA  0012               	return	
 28510                           
 28511                           ; BSR set to: 2
 28512  007ECC  A9AA               	btfss	(_loRa+165)& (0+255),4,b
 28513  007ECE  0012               	return	
 28514                           
 28515                           ; BSR set to: 2
 28516  007ED0  A5AA               	btfss	(_loRa+165)& (0+255),2,b
 28517  007ED2  0012               	return	
 28518                           
 28519                           ; BSR set to: 2
 28520                           ;lorawan.c: 174: else;lorawan.c: 175: {;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 28521  007ED4  0E07               	movlw	7
 28522  007ED6  EC23  F053         	call	_UpdateJoinInProgress
 28523                           
 28524                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 28525  007EDA  0E8F               	movlw	143
 28526  007EDC  0100               	movlb	0	; () banked
 28527  007EDE  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 28528  007EE0  0E02               	movlw	2
 28529  007EE2  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 28530  007EE4  0E00               	movlw	0
 28531  007EE6  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 28532  007EE8  0E00               	movlw	0
 28533  007EEA  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 28534  007EEC  0102               	movlb	2	; () banked
 28535  007EEE  51F8               	movf	(_loRa+243)& (0+255),w,b
 28536  007EF0  ECC2  F04C         	call	_SwTimerSetTimeout
 28537                           
 28538                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 28539  007EF4  0102               	movlb	2	; () banked
 28540  007EF6  51F8               	movf	(_loRa+243)& (0+255),w,b
 28541  007EF8  ECB6  F040         	call	_SwTimerStart
 28542  007EFC  0012               	return		;funcret
 28543  007EFE                     __end_of_LORAWAN_Join:
 28544                           	opt callstack 0
 28545                           
 28546 ;; *************** function _UpdateJoinInProgress *****************
 28547 ;; Defined at:
 28548 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28549 ;; Parameters:    Size  Location     Type
 28550 ;;  state           1    wreg     unsigned char 
 28551 ;; Auto vars:     Size  Location     Type
 28552 ;;  state           1    0[BANK0 ] unsigned char 
 28553 ;; Return value:  Size  Location     Type
 28554 ;;                  1    wreg      void 
 28555 ;; Registers used:
 28556 ;;		wreg, status,2, status,0
 28557 ;; Tracked objects:
 28558 ;;		On entry : 0/0
 28559 ;;		On exit  : 0/0
 28560 ;;		Unchanged: 0/0
 28561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28563 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28565 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28566 ;;Total ram usage:        1 bytes
 28567 ;; Hardware stack levels used:    1
 28568 ;; Hardware stack levels required when called:    7
 28569 ;; This function calls:
 28570 ;;		Nothing
 28571 ;; This function is called by:
 28572 ;;		_LORAWAN_Join
 28573 ;; This function uses a non-reentrant model
 28574 ;;
 28575                           
 28576                           	psect	text174
 28577  00A646                     __ptext174:
 28578                           	opt callstack 0
 28579  00A646                     _UpdateJoinInProgress:
 28580                           	opt callstack 22
 28581                           
 28582                           ;incstack = 0
 28583                           ;UpdateJoinInProgress@state stored from wreg
 28584  00A646  0100               	movlb	0	; () banked
 28585  00A648  6F60               	movwf	UpdateJoinInProgress@state& (0+255),b
 28586                           
 28587                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 28588  00A64A  0102               	movlb	2	; () banked
 28589  00A64C  9907               	bcf	(_loRa+2)& (0+255),4,b
 28590                           
 28591                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 28592  00A64E  8505               	bsf	_loRa& (0+255),2,b
 28593                           
 28594                           ; BSR set to: 2
 28595                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 28596  00A650  5107               	movf	(_loRa+2)& (0+255),w,b
 28597  00A652  0100               	movlb	0	; () banked
 28598  00A654  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28599  00A656  0BF0               	andlw	-16
 28600  00A658  1960               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28601  00A65A  0102               	movlb	2	; () banked
 28602  00A65C  6F07               	movwf	(_loRa+2)& (0+255),b
 28603                           
 28604                           ; BSR set to: 2
 28605  00A65E  0012               	return		;funcret
 28606  00A660                     __end_of_UpdateJoinInProgress:
 28607                           	opt callstack 0
 28608                           
 28609 ;; *************** function _SelectChannelForTransmission *****************
 28610 ;; Defined at:
 28611 ;;		line 920 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28612 ;; Parameters:    Size  Location     Type
 28613 ;;  transmission    1    wreg     unsigned char 
 28614 ;; Auto vars:     Size  Location     Type
 28615 ;;  transmission    1   83[BANK0 ] unsigned char 
 28616 ;;  channelIndex    1   85[BANK0 ] unsigned char 
 28617 ;;  result          1   84[BANK0 ] enum E6118
 28618 ;; Return value:  Size  Location     Type
 28619 ;;                  1    wreg      enum E6118
 28620 ;; Registers used:
 28621 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28622 ;; Tracked objects:
 28623 ;;		On entry : 0/0
 28624 ;;		On exit  : 0/0
 28625 ;;		Unchanged: 0/0
 28626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28628 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28630 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28631 ;;Total ram usage:        3 bytes
 28632 ;; Hardware stack levels used:    1
 28633 ;; Hardware stack levels required when called:   11
 28634 ;; This function calls:
 28635 ;;		_ConfigureRadioTx
 28636 ;;		_SearchAvailableChannel
 28637 ;; This function is called by:
 28638 ;;		_LORAWAN_RxTimeout
 28639 ;;		_LORAWAN_Join
 28640 ;;		_LORAWAN_Send
 28641 ;;		_AckRetransmissionCallback
 28642 ;;		_UnconfirmedTransmissionCallback
 28643 ;; This function uses a non-reentrant model
 28644 ;;
 28645                           
 28646                           	psect	text175
 28647  008D9A                     __ptext175:
 28648                           	opt callstack 0
 28649  008D9A                     _SelectChannelForTransmission:
 28650                           	opt callstack 16
 28651                           
 28652                           ; BSR set to: 2
 28653                           ;incstack = 0
 28654                           ;SelectChannelForTransmission@transmissionType stored from wreg
 28655  008D9A  0100               	movlb	0	; () banked
 28656  008D9C  6FB3               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 28657                           
 28658                           ;lorawan_eu.c: 923: uint8_t channelIndex;;lorawan_eu.c: 925: result = SearchAvailableCha
      +                          nnel (16, transmissionType, &channelIndex);
 28659  008D9E  C0B3  F0A7         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 28660  008DA2  0EB5               	movlw	low SelectChannelForTransmission@channelIndex
 28661  008DA4  0100               	movlb	0	; () banked
 28662  008DA6  6FA8               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 28663  008DA8  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 28664  008DAA  6FA9               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 28665  008DAC  0E10               	movlw	16
 28666  008DAE  ECED  F033         	call	_SearchAvailableChannel
 28667  008DB2  0100               	movlb	0	; () banked
 28668  008DB4  6FB4               	movwf	SelectChannelForTransmission@result& (0+255),b
 28669                           
 28670                           ; BSR set to: 0
 28671                           ;lorawan_eu.c: 927: if (result == OK)
 28672  008DB6  51B4               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28673  008DB8  A4D8               	btfss	status,2,c
 28674  008DBA  D020               	goto	l19500
 28675                           
 28676                           ; BSR set to: 0
 28677                           ;lorawan_eu.c: 928: {;lorawan_eu.c: 929: loRa.lastUsedChannelIndex = channelIndex;
 28678  008DBC  C0B5  F2DF         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 28679                           
 28680                           ; BSR set to: 0
 28681                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 28682  008DC0  51B5               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 28683  008DC2  0D0E               	mullw	14
 28684  008DC4  0E14               	movlw	low _Channels
 28685  008DC6  24F3               	addwf	prodl,w,c
 28686  008DC8  6ED9               	movwf	fsr2l,c
 28687  008DCA  0E04               	movlw	high _Channels
 28688  008DCC  20F4               	addwfc	prodh,w,c
 28689  008DCE  6EDA               	movwf	fsr2h,c
 28690  008DD0  CFDE F218          	movff	postinc2,_loRa+19
 28691  008DD4  CFDE F219          	movff	postinc2,_loRa+20
 28692  008DD8  CFDE F21A          	movff	postinc2,_loRa+21
 28693  008DDC  CFDE F21B          	movff	postinc2,_loRa+22
 28694                           
 28695                           ; BSR set to: 0
 28696                           ;lorawan_eu.c: 931: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 28697  008DE0  C2E4  F21C         	movff	_loRa+223,_loRa+23
 28698                           
 28699                           ; BSR set to: 0
 28700                           ;lorawan_eu.c: 933: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 28701  008DE4  C218  F073         	movff	_loRa+19,ConfigureRadioTx@freq
 28702  008DE8  C219  F074         	movff	_loRa+20,ConfigureRadioTx@freq+1
 28703  008DEC  C21A  F075         	movff	_loRa+21,ConfigureRadioTx@freq+2
 28704  008DF0  C21B  F076         	movff	_loRa+22,ConfigureRadioTx@freq+3
 28705  008DF4  0102               	movlb	2	; () banked
 28706  008DF6  511C               	movf	(_loRa+23)& (0+255),w,b
 28707  008DF8  EC81  F04B         	call	_ConfigureRadioTx
 28708  008DFC                     l19500:
 28709                           
 28710                           ;lorawan_eu.c: 934: };lorawan_eu.c: 935: return result;
 28711  008DFC  0100               	movlb	0	; () banked
 28712  008DFE  51B4               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28713                           
 28714                           ; BSR set to: 0
 28715  008E00  0012               	return		;funcret
 28716  008E02                     __end_of_SelectChannelForTransmission:
 28717                           	opt callstack 0
 28718                           
 28719 ;; *************** function _SearchAvailableChannel *****************
 28720 ;; Defined at:
 28721 ;;		line 779 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28722 ;; Parameters:    Size  Location     Type
 28723 ;;  maxChannels     1    wreg     unsigned char 
 28724 ;;  transmission    1   71[BANK0 ] unsigned char 
 28725 ;;  channelIndex    2   72[BANK0 ] PTR unsigned char 
 28726 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 28727 ;; Auto vars:     Size  Location     Type
 28728 ;;  maxChannels     1   80[BANK0 ] unsigned char 
 28729 ;;  i               1   82[BANK0 ] unsigned char 
 28730 ;;  randomNumber    1   81[BANK0 ] unsigned char 
 28731 ;;  result          1   79[BANK0 ] enum E6118
 28732 ;;  randomNumber    1   78[BANK0 ] unsigned char 
 28733 ;; Return value:  Size  Location     Type
 28734 ;;                  1    wreg      enum E6118
 28735 ;; Registers used:
 28736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28737 ;; Tracked objects:
 28738 ;;		On entry : 0/0
 28739 ;;		On exit  : 0/0
 28740 ;;		Unchanged: 0/0
 28741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28742 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28743 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28744 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28745 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28746 ;;Total ram usage:       12 bytes
 28747 ;; Hardware stack levels used:    1
 28748 ;; Hardware stack levels required when called:   10
 28749 ;; This function calls:
 28750 ;;		_Random
 28751 ;; This function is called by:
 28752 ;;		_SelectChannelForTransmission
 28753 ;;		_LORAWAN_RxDone
 28754 ;; This function uses a non-reentrant model
 28755 ;;
 28756                           
 28757                           	psect	text176
 28758  0067DA                     __ptext176:
 28759                           	opt callstack 0
 28760  0067DA                     _SearchAvailableChannel:
 28761                           	opt callstack 16
 28762                           
 28763                           ; BSR set to: 0
 28764                           ;incstack = 0
 28765                           ;SearchAvailableChannel@maxChannels stored from wreg
 28766  0067DA  0100               	movlb	0	; () banked
 28767  0067DC  6FB0               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 28768                           
 28769                           ;lorawan_eu.c: 781: uint8_t randomNumberCopy, randomNumber, i;;lorawan_eu.c: 782: Lorawa
      +                          nError_t result = OK;
 28770  0067DE  0E00               	movlw	0
 28771  0067E0  0100               	movlb	0	; () banked
 28772  0067E2  6FAF               	movwf	SearchAvailableChannel@result& (0+255),b
 28773                           
 28774                           ; BSR set to: 0
 28775                           ;lorawan_eu.c: 784: randomNumber = Random (maxChannels) + 1;
 28776  0067E4  C0B0  F0A5         	movff	SearchAvailableChannel@maxChannels,Random@max
 28777  0067E8  6BA6               	clrf	(Random@max+1)& (0+255),b
 28778  0067EA  ECB6  F051         	call	_Random	;wreg free
 28779  0067EE  0100               	movlb	0	; () banked
 28780  0067F0  29A5               	incf	?_Random& (0+255),w,b
 28781  0067F2  6FB1               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 28782                           
 28783                           ; BSR set to: 0
 28784                           ;lorawan_eu.c: 785: randomNumberCopy = randomNumber;
 28785  0067F4  C0B1  F0AE         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 28786                           
 28787                           ;lorawan_eu.c: 787: while (randomNumber)
 28788  0067F8  D060               	goto	l19136
 28789  0067FA                     l19110:
 28790                           
 28791                           ; BSR set to: 0
 28792                           ;lorawan_eu.c: 788: {;lorawan_eu.c: 789: for (i=0; (i < maxChannels) && (randomNumber !=
      +                           0) ; i++)
 28793  0067FA  0E00               	movlw	0
 28794  0067FC  6FB2               	movwf	SearchAvailableChannel@i& (0+255),b
 28795  0067FE  D04F               	goto	l19128
 28796  006800                     l19112:
 28797                           
 28798                           ; BSR set to: 0
 28799                           ;lorawan_eu.c: 790: {;lorawan_eu.c: 791: if ( ( Channels[i].status == 1 ) && ( Channels[
      +                          i].channelTimer == 0 ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loR
      +                          a.currentDataRate <= Channels[i].dataRange.max ) )
 28800  006800  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28801  006802  0D0E               	mullw	14
 28802  006804  0E18               	movlw	low (_Channels+4)
 28803  006806  24F3               	addwf	prodl,w,c
 28804  006808  6ED9               	movwf	fsr2l,c
 28805  00680A  0E04               	movlw	high (_Channels+4)
 28806  00680C  20F4               	addwfc	prodh,w,c
 28807  00680E  6EDA               	movwf	fsr2h,c
 28808  006810  04DE               	decf	postinc2,w,c
 28809  006812  A4D8               	btfss	status,2,c
 28810  006814  D042               	goto	l1154
 28811                           
 28812                           ; BSR set to: 0
 28813  006816  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28814  006818  0D0E               	mullw	14
 28815  00681A  0E1C               	movlw	low (_Channels+8)
 28816  00681C  24F3               	addwf	prodl,w,c
 28817  00681E  6ED9               	movwf	fsr2l,c
 28818  006820  0E04               	movlw	high (_Channels+8)
 28819  006822  20F4               	addwfc	prodh,w,c
 28820  006824  6EDA               	movwf	fsr2h,c
 28821  006826  50DE               	movf	postinc2,w,c
 28822  006828  10DE               	iorwf	postinc2,w,c
 28823  00682A  10DE               	iorwf	postinc2,w,c
 28824  00682C  10DE               	iorwf	postinc2,w,c
 28825  00682E  A4D8               	btfss	status,2,c
 28826  006830  D034               	goto	l1154
 28827                           
 28828                           ; BSR set to: 0
 28829  006832  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28830  006834  0D0E               	mullw	14
 28831  006836  0E19               	movlw	low (_Channels+5)
 28832  006838  24F3               	addwf	prodl,w,c
 28833  00683A  6ED9               	movwf	fsr2l,c
 28834  00683C  0E04               	movlw	high (_Channels+5)
 28835  00683E  20F4               	addwfc	prodh,w,c
 28836  006840  6EDA               	movwf	fsr2h,c
 28837  006842  0104               	movlb	4	; () banked
 28838  006844  50DF               	movf	223,w,c
 28839  006846  0B0F               	andlw	15
 28840  006848  0100               	movlb	0	; () banked
 28841  00684A  6FAA               	movwf	??_SearchAvailableChannel& (0+255),b
 28842  00684C  51AA               	movf	??_SearchAvailableChannel& (0+255),w,b
 28843  00684E  0102               	movlb	2	; () banked
 28844  006850  5DE4               	subwf	(_loRa+223)& (0+255),w,b
 28845  006852  A0D8               	btfss	status,0,c
 28846  006854  D022               	goto	l1154
 28847                           
 28848                           ; BSR set to: 2
 28849  006856  0100               	movlb	0	; () banked
 28850  006858  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28851  00685A  0D0E               	mullw	14
 28852  00685C  0E19               	movlw	low (_Channels+5)
 28853  00685E  24F3               	addwf	prodl,w,c
 28854  006860  6ED9               	movwf	fsr2l,c
 28855  006862  0E04               	movlw	high (_Channels+5)
 28856  006864  20F4               	addwfc	prodh,w,c
 28857  006866  6EDA               	movwf	fsr2h,c
 28858  006868  0104               	movlb	4	; () banked
 28859  00686A  38DF               	swapf	223,w,c
 28860  00686C  0B0F               	andlw	15
 28861  00686E  0100               	movlb	0	; () banked
 28862  006870  6FAA               	movwf	??_SearchAvailableChannel& (0+255),b
 28863  006872  0102               	movlb	2	; () banked
 28864  006874  51E4               	movf	(_loRa+223)& (0+255),w,b
 28865  006876  0100               	movlb	0	; () banked
 28866  006878  5DAA               	subwf	??_SearchAvailableChannel& (0+255),w,b
 28867  00687A  A0D8               	btfss	status,0,c
 28868  00687C  D00E               	goto	l1154
 28869                           
 28870                           ; BSR set to: 0
 28871                           ;lorawan_eu.c: 792: {;lorawan_eu.c: 793: if (transmissionType == 0)
 28872  00687E  51A7               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 28873  006880  A4D8               	btfss	status,2,c
 28874  006882  D00A               	goto	u20530
 28875                           
 28876                           ; BSR set to: 0
 28877                           ;lorawan_eu.c: 794: {;lorawan_eu.c: 795: if ( Channels[i].joinRequestChannel == 1 )
 28878  006884  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28879  006886  0D0E               	mullw	14
 28880  006888  0E20               	movlw	low (_Channels+12)
 28881  00688A  24F3               	addwf	prodl,w,c
 28882  00688C  6ED9               	movwf	fsr2l,c
 28883  00688E  0E04               	movlw	high (_Channels+12)
 28884  006890  20F4               	addwfc	prodh,w,c
 28885  006892  6EDA               	movwf	fsr2h,c
 28886  006894  04DE               	decf	postinc2,w,c
 28887  006896  B4D8               	btfsc	status,2,c
 28888  006898                     u20530:
 28889                           
 28890                           ; BSR set to: 0
 28891                           ;lorawan_eu.c: 796: {;lorawan_eu.c: 797: randomNumber --;
 28892  006898  07B1               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 28893  00689A                     l1154:
 28894  00689A  0100               	movlb	0	; () banked
 28895  00689C  2BB2               	incf	SearchAvailableChannel@i& (0+255),f,b
 28896  00689E                     l19128:
 28897                           
 28898                           ; BSR set to: 0
 28899  00689E  51B0               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 28900  0068A0  5DB2               	subwf	SearchAvailableChannel@i& (0+255),w,b
 28901  0068A2  B0D8               	btfsc	status,0,c
 28902  0068A4  D003               	goto	u20550
 28903                           
 28904                           ; BSR set to: 0
 28905  0068A6  51B1               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28906  0068A8  A4D8               	btfss	status,2,c
 28907  0068AA  D7AA               	goto	l19112
 28908  0068AC                     u20550:
 28909                           
 28910                           ; BSR set to: 0
 28911                           ;lorawan_eu.c: 803: };lorawan_eu.c: 804: };lorawan_eu.c: 805: };lorawan_eu.c: 807: if ( 
      +                          randomNumber == randomNumberCopy )
 28912  0068AC  51AE               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 28913  0068AE  19B1               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28914  0068B0  A4D8               	btfss	status,2,c
 28915  0068B2  D003               	goto	l19136
 28916                           
 28917                           ; BSR set to: 0
 28918                           ;lorawan_eu.c: 808: {;lorawan_eu.c: 809: result = NO_CHANNELS_FOUND;
 28919  0068B4  0E09               	movlw	9
 28920  0068B6  6FAF               	movwf	SearchAvailableChannel@result& (0+255),b
 28921                           
 28922                           ;lorawan_eu.c: 810: break;
 28923  0068B8  D003               	goto	u20570
 28924  0068BA                     l19136:
 28925                           
 28926                           ; BSR set to: 0
 28927  0068BA  51B1               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28928  0068BC  A4D8               	btfss	status,2,c
 28929  0068BE  D79D               	goto	l19110
 28930  0068C0                     u20570:
 28931                           
 28932                           ; BSR set to: 0
 28933                           ;lorawan_eu.c: 811: };lorawan_eu.c: 812: };lorawan_eu.c: 814: if ( i != 0)
 28934  0068C0  51B2               	movf	SearchAvailableChannel@i& (0+255),w,b
 28935  0068C2  B4D8               	btfsc	status,2,c
 28936  0068C4  D007               	goto	l19142
 28937                           
 28938                           ; BSR set to: 0
 28939                           ;lorawan_eu.c: 815: {;lorawan_eu.c: 816: *channelIndex = i - 1;
 28940  0068C6  05B2               	decf	SearchAvailableChannel@i& (0+255),w,b
 28941  0068C8  C0A8  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 28942  0068CC  C0A9  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 28943  0068D0  6EDF               	movwf	indf2,c
 28944                           
 28945                           ;lorawan_eu.c: 817: }
 28946  0068D2  D002               	goto	l1164
 28947  0068D4                     l19142:
 28948                           
 28949                           ; BSR set to: 0
 28950                           ;lorawan_eu.c: 818: else;lorawan_eu.c: 819: {;lorawan_eu.c: 820: result = NO_CHANNELS_FO
      +                          UND;
 28951  0068D4  0E09               	movlw	9
 28952  0068D6  6FAF               	movwf	SearchAvailableChannel@result& (0+255),b
 28953  0068D8                     l1164:
 28954                           
 28955                           ; BSR set to: 0
 28956                           ;lorawan_eu.c: 821: };lorawan_eu.c: 822: return result;
 28957  0068D8  51AF               	movf	SearchAvailableChannel@result& (0+255),w,b
 28958                           
 28959                           ; BSR set to: 0
 28960  0068DA  0012               	return		;funcret
 28961  0068DC                     __end_of_SearchAvailableChannel:
 28962                           	opt callstack 0
 28963                           
 28964 ;; *************** function _ConfigureRadioTx *****************
 28965 ;; Defined at:
 28966 ;;		line 1256 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28967 ;; Parameters:    Size  Location     Type
 28968 ;;  dataRate        1    wreg     unsigned char 
 28969 ;;  freq            4   19[BANK0 ] unsigned long 
 28970 ;; Auto vars:     Size  Location     Type
 28971 ;;  dataRate        1   23[BANK0 ] unsigned char 
 28972 ;;  txPower         1   24[BANK0 ] char 
 28973 ;; Return value:  Size  Location     Type
 28974 ;;                  1    wreg      void 
 28975 ;; Registers used:
 28976 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 28977 ;; Tracked objects:
 28978 ;;		On entry : 0/0
 28979 ;;		On exit  : 0/0
 28980 ;;		Unchanged: 0/0
 28981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28982 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28983 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28985 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28986 ;;Total ram usage:        6 bytes
 28987 ;; Hardware stack levels used:    1
 28988 ;; Hardware stack levels required when called:   10
 28989 ;; This function calls:
 28990 ;;		_ConfigureRadio
 28991 ;;		_RADIO_SetCRC
 28992 ;;		_RADIO_SetIQInverted
 28993 ;;		_RADIO_SetOutputPower
 28994 ;; This function is called by:
 28995 ;;		_SelectChannelForTransmission
 28996 ;; This function uses a non-reentrant model
 28997 ;;
 28998                           
 28999                           	psect	text177
 29000  009702                     __ptext177:
 29001                           	opt callstack 0
 29002  009702                     _ConfigureRadioTx:
 29003                           	opt callstack 16
 29004                           
 29005                           ; BSR set to: 0
 29006                           ;incstack = 0
 29007                           ;ConfigureRadioTx@dataRate stored from wreg
 29008  009702  0100               	movlb	0	; () banked
 29009  009704  6F77               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 29010                           
 29011                           ;lorawan_eu.c: 1258: int8_t txPower;;lorawan_eu.c: 1260: ConfigureRadio(dataRate, freq);
 29012  009706  C073  F06E         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 29013  00970A  C074  F06F         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 29014  00970E  C075  F070         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 29015  009712  C076  F071         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 29016  009716  0100               	movlb	0	; () banked
 29017  009718  5177               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 29018  00971A  EC1D  F040         	call	_ConfigureRadio
 29019                           
 29020                           ;lorawan_eu.c: 1263: {;lorawan_eu.c: 1264: txPower = txPower868[loRa.txPower];
 29021  00971E  0E42               	movlw	low _txPower868
 29022  009720  0102               	movlb	2	; () banked
 29023  009722  25E6               	addwf	(_loRa+225)& (0+255),w,b
 29024  009724  6EF6               	movwf	tblptrl,c
 29025  009726  6AF7               	clrf	tblptrh,c
 29026  009728  0EFF               	movlw	high _txPower868
 29027  00972A  22F7               	addwfc	tblptrh,f,c
 29028  00972C                     	if	1	;There are 3 active tblptr bytes
 29029  00972C  6AF8               	clrf	tblptru,c
 29030  00972E  0E00               	movlw	low (__mediumconst shr (0+16))
 29031  009730  22F8               	addwfc	tblptru,f,c
 29032  009732                     	endif
 29033  009732  0008               	tblrd		*
 29034  009734  CFF5 F078          	movff	tablat,ConfigureRadioTx@txPower
 29035                           
 29036                           ; BSR set to: 2
 29037                           ;lorawan_eu.c: 1269: };lorawan_eu.c: 1271: RADIO_SetOutputPower (txPower);
 29038                           
 29039                           ;lorawan_eu.c: 1265: }
 29040  009738  0100               	movlb	0	; () banked
 29041  00973A  5178               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 29042  00973C  EC45  F054         	call	_RADIO_SetOutputPower
 29043                           
 29044                           ;lorawan_eu.c: 1273: RADIO_SetCRC(1);
 29045  009740  0E01               	movlw	1
 29046  009742  EC4F  F054         	call	_RADIO_SetCRC
 29047                           
 29048                           ;lorawan_eu.c: 1274: RADIO_SetIQInverted(0);
 29049  009746  0E00               	movlw	0
 29050  009748  EC4A  F054         	call	_RADIO_SetIQInverted
 29051  00974C  0012               	return		;funcret
 29052  00974E                     __end_of_ConfigureRadioTx:
 29053                           	opt callstack 0
 29054                           
 29055 ;; *************** function _RADIO_SetOutputPower *****************
 29056 ;; Defined at:
 29057 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29058 ;; Parameters:    Size  Location     Type
 29059 ;;  power           1    wreg     char 
 29060 ;; Auto vars:     Size  Location     Type
 29061 ;;  power           1    0[BANK0 ] char 
 29062 ;; Return value:  Size  Location     Type
 29063 ;;                  1    wreg      void 
 29064 ;; Registers used:
 29065 ;;		wreg
 29066 ;; Tracked objects:
 29067 ;;		On entry : 0/0
 29068 ;;		On exit  : 0/0
 29069 ;;		Unchanged: 0/0
 29070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29072 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29074 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29075 ;;Total ram usage:        1 bytes
 29076 ;; Hardware stack levels used:    1
 29077 ;; Hardware stack levels required when called:    7
 29078 ;; This function calls:
 29079 ;;		Nothing
 29080 ;; This function is called by:
 29081 ;;		_ConfigureRadioTx
 29082 ;; This function uses a non-reentrant model
 29083 ;;
 29084                           
 29085                           	psect	text178
 29086  00A88A                     __ptext178:
 29087                           	opt callstack 0
 29088  00A88A                     _RADIO_SetOutputPower:
 29089                           	opt callstack 18
 29090                           
 29091                           ;incstack = 0
 29092                           ;RADIO_SetOutputPower@power stored from wreg
 29093  00A88A  0100               	movlb	0	; () banked
 29094  00A88C  6F60               	movwf	RADIO_SetOutputPower@power& (0+255),b
 29095                           
 29096                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 29097  00A88E  C060  F144         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 29098  00A892  0012               	return		;funcret
 29099  00A894                     __end_of_RADIO_SetOutputPower:
 29100                           	opt callstack 0
 29101                           
 29102 ;; *************** function _RADIO_SetIQInverted *****************
 29103 ;; Defined at:
 29104 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29105 ;; Parameters:    Size  Location     Type
 29106 ;;  iqInverted      1    wreg     unsigned char 
 29107 ;; Auto vars:     Size  Location     Type
 29108 ;;  iqInverted      1    0[BANK0 ] unsigned char 
 29109 ;; Return value:  Size  Location     Type
 29110 ;;                  1    wreg      void 
 29111 ;; Registers used:
 29112 ;;		wreg
 29113 ;; Tracked objects:
 29114 ;;		On entry : 0/0
 29115 ;;		On exit  : 0/0
 29116 ;;		Unchanged: 0/0
 29117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29119 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29121 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29122 ;;Total ram usage:        1 bytes
 29123 ;; Hardware stack levels used:    1
 29124 ;; Hardware stack levels required when called:    7
 29125 ;; This function calls:
 29126 ;;		Nothing
 29127 ;; This function is called by:
 29128 ;;		_ConfigureRadioTx
 29129 ;;		_ConfigureRadioRx
 29130 ;; This function uses a non-reentrant model
 29131 ;;
 29132                           
 29133                           	psect	text179
 29134  00A894                     __ptext179:
 29135                           	opt callstack 0
 29136  00A894                     _RADIO_SetIQInverted:
 29137                           	opt callstack 18
 29138                           
 29139                           ;incstack = 0
 29140                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 29141  00A894  0100               	movlb	0	; () banked
 29142  00A896  6F60               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 29143                           
 29144                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 29145  00A898  C060  F149         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 29146  00A89C  0012               	return		;funcret
 29147  00A89E                     __end_of_RADIO_SetIQInverted:
 29148                           	opt callstack 0
 29149                           
 29150 ;; *************** function _RADIO_SetCRC *****************
 29151 ;; Defined at:
 29152 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29153 ;; Parameters:    Size  Location     Type
 29154 ;;  crc             1    wreg     unsigned char 
 29155 ;; Auto vars:     Size  Location     Type
 29156 ;;  crc             1    0[BANK0 ] unsigned char 
 29157 ;; Return value:  Size  Location     Type
 29158 ;;                  1    wreg      void 
 29159 ;; Registers used:
 29160 ;;		wreg
 29161 ;; Tracked objects:
 29162 ;;		On entry : 0/0
 29163 ;;		On exit  : 0/0
 29164 ;;		Unchanged: 0/0
 29165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29167 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29169 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29170 ;;Total ram usage:        1 bytes
 29171 ;; Hardware stack levels used:    1
 29172 ;; Hardware stack levels required when called:    7
 29173 ;; This function calls:
 29174 ;;		Nothing
 29175 ;; This function is called by:
 29176 ;;		_ConfigureRadioTx
 29177 ;;		_ConfigureRadioRx
 29178 ;; This function uses a non-reentrant model
 29179 ;;
 29180                           
 29181                           	psect	text180
 29182  00A89E                     __ptext180:
 29183                           	opt callstack 0
 29184  00A89E                     _RADIO_SetCRC:
 29185                           	opt callstack 18
 29186                           
 29187                           ;incstack = 0
 29188                           ;RADIO_SetCRC@crc stored from wreg
 29189  00A89E  0100               	movlb	0	; () banked
 29190  00A8A0  6F60               	movwf	RADIO_SetCRC@crc& (0+255),b
 29191                           
 29192                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 29193  00A8A2  C060  F145         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 29194  00A8A6  0012               	return		;funcret
 29195  00A8A8                     __end_of_RADIO_SetCRC:
 29196                           	opt callstack 0
 29197                           
 29198 ;; *************** function _ConfigureRadio *****************
 29199 ;; Defined at:
 29200 ;;		line 864 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29201 ;; Parameters:    Size  Location     Type
 29202 ;;  dataRate        1    wreg     unsigned char 
 29203 ;;  freq            4   14[BANK0 ] unsigned long 
 29204 ;; Auto vars:     Size  Location     Type
 29205 ;;  dataRate        1   18[BANK0 ] unsigned char 
 29206 ;; Return value:  Size  Location     Type
 29207 ;;                  1    wreg      void 
 29208 ;; Registers used:
 29209 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29210 ;; Tracked objects:
 29211 ;;		On entry : 0/0
 29212 ;;		On exit  : 0/0
 29213 ;;		Unchanged: 0/0
 29214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29215 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29218 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29219 ;;Total ram usage:        5 bytes
 29220 ;; Hardware stack levels used:    1
 29221 ;; Hardware stack levels required when called:    9
 29222 ;; This function calls:
 29223 ;;		_RADIO_SetBandwidth
 29224 ;;		_RADIO_SetChannelFrequency
 29225 ;;		_RADIO_SetFSKSyncWord
 29226 ;;		_RADIO_SetFrequencyHopPeriod
 29227 ;;		_RADIO_SetLoRaSyncWord
 29228 ;;		_RADIO_SetModulation
 29229 ;;		_RADIO_SetSpreadingFactor
 29230 ;; This function is called by:
 29231 ;;		_ConfigureRadioTx
 29232 ;;		_ConfigureRadioRx
 29233 ;; This function uses a non-reentrant model
 29234 ;;
 29235                           
 29236                           	psect	text181
 29237  00803A                     __ptext181:
 29238                           	opt callstack 0
 29239  00803A                     _ConfigureRadio:
 29240                           	opt callstack 16
 29241                           
 29242                           ;incstack = 0
 29243                           ;ConfigureRadio@dataRate stored from wreg
 29244  00803A  0100               	movlb	0	; () banked
 29245  00803C  6F72               	movwf	ConfigureRadio@dataRate& (0+255),b
 29246                           
 29247                           ;lorawan_eu.c: 866: RADIO_SetModulation (modulation[dataRate]);
 29248  00803E  0E07               	movlw	low _modulation
 29249  008040  0100               	movlb	0	; () banked
 29250  008042  2572               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 29251  008044  6EF6               	movwf	tblptrl,c
 29252  008046  6AF7               	clrf	tblptrh,c
 29253  008048  0EFF               	movlw	high _modulation
 29254  00804A  22F7               	addwfc	tblptrh,f,c
 29255  00804C                     	if	1	;There are 3 active tblptr bytes
 29256  00804C  6AF8               	clrf	tblptru,c
 29257  00804E  0E00               	movlw	low (__mediumconst shr (0+16))
 29258  008050  22F8               	addwfc	tblptru,f,c
 29259  008052                     	endif
 29260  008052  0008               	tblrd		*
 29261  008054  50F5               	movf	tablat,w,c
 29262  008056  EC59  F054         	call	_RADIO_SetModulation
 29263                           
 29264                           ;lorawan_eu.c: 867: RADIO_SetChannelFrequency (freq);
 29265  00805A  C06E  F060         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 29266  00805E  C06F  F061         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 29267  008062  C070  F062         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 29268  008066  C071  F063         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 29269  00806A  EC88  F041         	call	_RADIO_SetChannelFrequency	;wreg free
 29270                           
 29271                           ;lorawan_eu.c: 868: RADIO_SetFrequencyHopPeriod (0);
 29272  00806E  0E00               	movlw	0
 29273  008070  0100               	movlb	0	; () banked
 29274  008072  6F61               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 29275  008074  0E00               	movlw	0
 29276  008076  6F60               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 29277  008078  EC5E  F054         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 29278                           
 29279                           ;lorawan_eu.c: 870: if (dataRate <= 6)
 29280  00807C  0E07               	movlw	7
 29281  00807E  0100               	movlb	0	; () banked
 29282  008080  6172               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 29283  008082  D020               	goto	l18674
 29284                           
 29285                           ; BSR set to: 0
 29286                           ;lorawan_eu.c: 871: {;lorawan_eu.c: 873: RADIO_SetSpreadingFactor (spreadingFactor[dataR
      +                          ate]);
 29287  008084  0E35               	movlw	low _spreadingFactor
 29288  008086  2572               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 29289  008088  6EF6               	movwf	tblptrl,c
 29290  00808A  6AF7               	clrf	tblptrh,c
 29291  00808C  0EFF               	movlw	high _spreadingFactor
 29292  00808E  22F7               	addwfc	tblptrh,f,c
 29293  008090                     	if	1	;There are 3 active tblptr bytes
 29294  008090  6AF8               	clrf	tblptru,c
 29295  008092  0E00               	movlw	low (__mediumconst shr (0+16))
 29296  008094  22F8               	addwfc	tblptru,f,c
 29297  008096                     	endif
 29298  008096  0008               	tblrd		*
 29299  008098  50F5               	movf	tablat,w,c
 29300  00809A  EC54  F054         	call	_RADIO_SetSpreadingFactor
 29301                           
 29302                           ;lorawan_eu.c: 874: RADIO_SetBandwidth (bandwidth[dataRate]);
 29303  00809E  0E2E               	movlw	low _bandwidth
 29304  0080A0  0100               	movlb	0	; () banked
 29305  0080A2  2572               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 29306  0080A4  6EF6               	movwf	tblptrl,c
 29307  0080A6  6AF7               	clrf	tblptrh,c
 29308  0080A8  0EFF               	movlw	high _bandwidth
 29309  0080AA  22F7               	addwfc	tblptrh,f,c
 29310  0080AC                     	if	1	;There are 3 active tblptr bytes
 29311  0080AC  6AF8               	clrf	tblptru,c
 29312  0080AE  0E00               	movlw	low (__mediumconst shr (0+16))
 29313  0080B0  22F8               	addwfc	tblptru,f,c
 29314  0080B2                     	endif
 29315  0080B2  0008               	tblrd		*
 29316  0080B4  50F5               	movf	tablat,w,c
 29317  0080B6  EC63  F054         	call	_RADIO_SetBandwidth
 29318                           
 29319                           ;lorawan_eu.c: 875: RADIO_SetLoRaSyncWord(loRa.syncWord);
 29320  0080BA  0102               	movlb	2	; () banked
 29321  0080BC  51F9               	movf	(_loRa+244)& (0+255),w,b
 29322  0080BE  EC68  F054         	call	_RADIO_SetLoRaSyncWord
 29323                           
 29324                           ;lorawan_eu.c: 876: }
 29325  0080C2  0012               	return	
 29326  0080C4                     l18674:
 29327                           
 29328                           ; BSR set to: 0
 29329                           ;lorawan_eu.c: 877: else;lorawan_eu.c: 878: {;lorawan_eu.c: 880: RADIO_SetFSKSyncWord(si
      +                          zeof(FskSyncWordBuff) / sizeof(FskSyncWordBuff[0]), (uint8_t*)FskSyncWordBuff);
 29330  0080C4  0EF2               	movlw	low _FskSyncWordBuff
 29331  0080C6  6F6B               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 29332  0080C8  0EFF               	movlw	high _FskSyncWordBuff
 29333  0080CA  6F6C               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 29334  0080CC  0E03               	movlw	3
 29335  0080CE  EC53  F04F         	call	_RADIO_SetFSKSyncWord
 29336  0080D2  0012               	return		;funcret
 29337  0080D4                     __end_of_ConfigureRadio:
 29338                           	opt callstack 0
 29339                           
 29340 ;; *************** function _RADIO_SetSpreadingFactor *****************
 29341 ;; Defined at:
 29342 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29343 ;; Parameters:    Size  Location     Type
 29344 ;;  spreadingFac    1    wreg     enum E5863
 29345 ;; Auto vars:     Size  Location     Type
 29346 ;;  spreadingFac    1    0[BANK0 ] enum E5863
 29347 ;; Return value:  Size  Location     Type
 29348 ;;                  1    wreg      void 
 29349 ;; Registers used:
 29350 ;;		wreg
 29351 ;; Tracked objects:
 29352 ;;		On entry : 0/0
 29353 ;;		On exit  : 0/0
 29354 ;;		Unchanged: 0/0
 29355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29359 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29360 ;;Total ram usage:        1 bytes
 29361 ;; Hardware stack levels used:    1
 29362 ;; Hardware stack levels required when called:    7
 29363 ;; This function calls:
 29364 ;;		Nothing
 29365 ;; This function is called by:
 29366 ;;		_ConfigureRadio
 29367 ;; This function uses a non-reentrant model
 29368 ;;
 29369                           
 29370                           	psect	text182
 29371  00A8A8                     __ptext182:
 29372                           	opt callstack 0
 29373  00A8A8                     _RADIO_SetSpreadingFactor:
 29374                           	opt callstack 17
 29375                           
 29376                           ;incstack = 0
 29377                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 29378  00A8A8  0100               	movlb	0	; () banked
 29379  00A8AA  6F60               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 29380                           
 29381                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 29382  00A8AC  C060  F142         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 29383  00A8B0  0012               	return		;funcret
 29384  00A8B2                     __end_of_RADIO_SetSpreadingFactor:
 29385                           	opt callstack 0
 29386                           
 29387 ;; *************** function _RADIO_SetModulation *****************
 29388 ;; Defined at:
 29389 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29390 ;; Parameters:    Size  Location     Type
 29391 ;;  modulation      1    wreg     enum E5853
 29392 ;; Auto vars:     Size  Location     Type
 29393 ;;  modulation      1    0[BANK0 ] enum E5853
 29394 ;; Return value:  Size  Location     Type
 29395 ;;                  1    wreg      void 
 29396 ;; Registers used:
 29397 ;;		wreg
 29398 ;; Tracked objects:
 29399 ;;		On entry : 0/0
 29400 ;;		On exit  : 0/0
 29401 ;;		Unchanged: 0/0
 29402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29404 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29406 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29407 ;;Total ram usage:        1 bytes
 29408 ;; Hardware stack levels used:    1
 29409 ;; Hardware stack levels required when called:    7
 29410 ;; This function calls:
 29411 ;;		Nothing
 29412 ;; This function is called by:
 29413 ;;		_ConfigureRadio
 29414 ;; This function uses a non-reentrant model
 29415 ;;
 29416                           
 29417                           	psect	text183
 29418  00A8B2                     __ptext183:
 29419                           	opt callstack 0
 29420  00A8B2                     _RADIO_SetModulation:
 29421                           	opt callstack 17
 29422                           
 29423                           ;incstack = 0
 29424                           ;RADIO_SetModulation@modulation stored from wreg
 29425  00A8B2  0100               	movlb	0	; () banked
 29426  00A8B4  6F60               	movwf	RADIO_SetModulation@modulation& (0+255),b
 29427                           
 29428                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 29429  00A8B6  C060  F141         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 29430  00A8BA  0012               	return		;funcret
 29431  00A8BC                     __end_of_RADIO_SetModulation:
 29432                           	opt callstack 0
 29433                           
 29434 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 29435 ;; Defined at:
 29436 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29437 ;; Parameters:    Size  Location     Type
 29438 ;;  frequencyHop    2    0[BANK0 ] unsigned int 
 29439 ;; Auto vars:     Size  Location     Type
 29440 ;;		None
 29441 ;; Return value:  Size  Location     Type
 29442 ;;                  1    wreg      void 
 29443 ;; Registers used:
 29444 ;;		None
 29445 ;; Tracked objects:
 29446 ;;		On entry : 0/0
 29447 ;;		On exit  : 0/0
 29448 ;;		Unchanged: 0/0
 29449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29454 ;;Total ram usage:        2 bytes
 29455 ;; Hardware stack levels used:    1
 29456 ;; Hardware stack levels required when called:    7
 29457 ;; This function calls:
 29458 ;;		Nothing
 29459 ;; This function is called by:
 29460 ;;		_ConfigureRadio
 29461 ;; This function uses a non-reentrant model
 29462 ;;
 29463                           
 29464                           	psect	text184
 29465  00A8BC                     __ptext184:
 29466                           	opt callstack 0
 29467  00A8BC                     _RADIO_SetFrequencyHopPeriod:
 29468                           	opt callstack 17
 29469                           
 29470                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 29471                           
 29472                           ;incstack = 0
 29473  00A8BC  C060  F147         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 29474  00A8C0  C061  F148         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 29475  00A8C4  0012               	return		;funcret
 29476  00A8C6                     __end_of_RADIO_SetFrequencyHopPeriod:
 29477                           	opt callstack 0
 29478                           
 29479 ;; *************** function _RADIO_SetFSKSyncWord *****************
 29480 ;; Defined at:
 29481 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29482 ;; Parameters:    Size  Location     Type
 29483 ;;  syncWordLen     1    wreg     unsigned char 
 29484 ;;  syncWord        2   11[BANK0 ] PTR unsigned char 
 29485 ;;		 -> FskSyncWordBuff(3), 
 29486 ;; Auto vars:     Size  Location     Type
 29487 ;;  syncWordLen     1   13[BANK0 ] unsigned char 
 29488 ;; Return value:  Size  Location     Type
 29489 ;;                  1    wreg      void 
 29490 ;; Registers used:
 29491 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29492 ;; Tracked objects:
 29493 ;;		On entry : 0/0
 29494 ;;		On exit  : 0/0
 29495 ;;		Unchanged: 0/0
 29496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29497 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29500 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29501 ;;Total ram usage:        3 bytes
 29502 ;; Hardware stack levels used:    1
 29503 ;; Hardware stack levels required when called:    8
 29504 ;; This function calls:
 29505 ;;		_memcpy
 29506 ;; This function is called by:
 29507 ;;		_ConfigureRadio
 29508 ;; This function uses a non-reentrant model
 29509 ;;
 29510                           
 29511                           	psect	text185
 29512  009EA6                     __ptext185:
 29513                           	opt callstack 0
 29514  009EA6                     _RADIO_SetFSKSyncWord:
 29515                           	opt callstack 16
 29516                           
 29517                           ;incstack = 0
 29518                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 29519  009EA6  0100               	movlb	0	; () banked
 29520  009EA8  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29521                           
 29522                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 29523  009EAA  0E08               	movlw	8
 29524  009EAC  0100               	movlb	0	; () banked
 29525  009EAE  656D               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29526  009EB0  D002               	goto	l18346
 29527                           
 29528                           ; BSR set to: 0
 29529                           ;radio_driver_SX1276.c: 1627: {;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 29530  009EB2  0E08               	movlw	8
 29531  009EB4  6F6D               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29532  009EB6                     l18346:
 29533                           
 29534                           ; BSR set to: 0
 29535                           ;radio_driver_SX1276.c: 1629: };radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.s
      +                          yncWord, syncWord, syncWordLen);
 29536  009EB6  0E38               	movlw	low (_RadioConfiguration+15)
 29537  009EB8  6F60               	movwf	memcpy@d1& (0+255),b
 29538  009EBA  0E01               	movlw	high (_RadioConfiguration+15)
 29539  009EBC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 29540  009EBE  C06B  F062         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 29541  009EC2  C06C  F063         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 29542  009EC6  C06D  F064         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 29543  009ECA  6B65               	clrf	(memcpy@n+1)& (0+255),b
 29544  009ECC  EC2F  F048         	call	_memcpy	;wreg free
 29545                           
 29546                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 29547  009ED0  C06D  F140         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 29548  009ED4  0012               	return		;funcret
 29549  009ED6                     __end_of_RADIO_SetFSKSyncWord:
 29550                           	opt callstack 0
 29551                           
 29552 ;; *************** function _RADIO_SetChannelFrequency *****************
 29553 ;; Defined at:
 29554 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29555 ;; Parameters:    Size  Location     Type
 29556 ;;  frequency       4    0[BANK0 ] unsigned long 
 29557 ;; Auto vars:     Size  Location     Type
 29558 ;;		None
 29559 ;; Return value:  Size  Location     Type
 29560 ;;                  2    0[BANK0 ] enum E5907
 29561 ;; Registers used:
 29562 ;;		wreg, status,2, status,0
 29563 ;; Tracked objects:
 29564 ;;		On entry : 0/0
 29565 ;;		On exit  : 0/0
 29566 ;;		Unchanged: 0/0
 29567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29568 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29571 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29572 ;;Total ram usage:        4 bytes
 29573 ;; Hardware stack levels used:    1
 29574 ;; Hardware stack levels required when called:    7
 29575 ;; This function calls:
 29576 ;;		Nothing
 29577 ;; This function is called by:
 29578 ;;		_ConfigureRadio
 29579 ;; This function uses a non-reentrant model
 29580 ;;
 29581                           
 29582                           	psect	text186
 29583  008310                     __ptext186:
 29584                           	opt callstack 0
 29585  008310                     _RADIO_SetChannelFrequency:
 29586                           	opt callstack 17
 29587                           
 29588                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||;
      +                          radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 29589                           
 29590                           ;incstack = 0
 29591  008310  0E40               	movlw	64
 29592  008312  0100               	movlb	0	; () banked
 29593  008314  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29594  008316  0E74               	movlw	116
 29595  008318  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29596  00831A  0E2A               	movlw	42
 29597  00831C  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29598  00831E  0E08               	movlw	8
 29599  008320  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29600  008322  A0D8               	btfss	status,0,c
 29601  008324  D00A               	goto	u19310
 29602                           
 29603                           ; BSR set to: 0
 29604  008326  0EC1               	movlw	193
 29605  008328  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29606  00832A  0E49               	movlw	73
 29607  00832C  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29608  00832E  0E6E               	movlw	110
 29609  008330  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29610  008332  0E0A               	movlw	10
 29611  008334  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29612  008336  A0D8               	btfss	status,0,c
 29613  008338  D027               	goto	u19350
 29614  00833A                     u19310:
 29615                           
 29616                           ; BSR set to: 0
 29617  00833A  0E80               	movlw	128
 29618  00833C  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29619  00833E  0E1A               	movlw	26
 29620  008340  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29621  008342  0E70               	movlw	112
 29622  008344  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29623  008346  0E18               	movlw	24
 29624  008348  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29625  00834A  A0D8               	btfss	status,0,c
 29626  00834C  D00A               	goto	u19330
 29627                           
 29628                           ; BSR set to: 0
 29629  00834E  0E41               	movlw	65
 29630  008350  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29631  008352  0EDD               	movlw	221
 29632  008354  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29633  008356  0E4A               	movlw	74
 29634  008358  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29635  00835A  0E1F               	movlw	31
 29636  00835C  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29637  00835E  A0D8               	btfss	status,0,c
 29638  008360  D013               	goto	u19350
 29639  008362                     u19330:
 29640                           
 29641                           ; BSR set to: 0
 29642  008362  0E80               	movlw	128
 29643  008364  5D60               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29644  008366  0E13               	movlw	19
 29645  008368  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29646  00836A  0E61               	movlw	97
 29647  00836C  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29648  00836E  0E33               	movlw	51
 29649  008370  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29650  008372  A0D8               	btfss	status,0,c
 29651  008374  0012               	return	
 29652                           
 29653                           ; BSR set to: 0
 29654  008376  0560               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29655  008378  0EF7               	movlw	247
 29656  00837A  5961               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29657  00837C  0ECB               	movlw	203
 29658  00837E  5962               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29659  008380  0E3C               	movlw	60
 29660  008382  5963               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29661  008384  B0D8               	btfsc	status,0,c
 29662  008386  0012               	return	
 29663  008388                     u19350:
 29664                           
 29665                           ; BSR set to: 0
 29666                           ;radio_driver_SX1276.c: 1449: {;radio_driver_SX1276.c: 1450: RadioConfiguration.frequenc
      +                          y = frequency;
 29667  008388  C060  F129         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 29668  00838C  C061  F12A         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 29669  008390  C062  F12B         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 29670  008394  C063  F12C         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 29671                           
 29672                           ; BSR set to: 0
 29673                           
 29674                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;;	Return value of _RADIO_SetChannelFrequen
      +                          cy is never used
 29675  008398  0012               	return		;funcret
 29676  00839A                     __end_of_RADIO_SetChannelFrequency:
 29677                           	opt callstack 0
 29678                           
 29679 ;; *************** function _RADIO_SetBandwidth *****************
 29680 ;; Defined at:
 29681 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29682 ;; Parameters:    Size  Location     Type
 29683 ;;  bandwidth       1    wreg     enum E5871
 29684 ;; Auto vars:     Size  Location     Type
 29685 ;;  bandwidth       1    0[BANK0 ] enum E5871
 29686 ;; Return value:  Size  Location     Type
 29687 ;;                  1    wreg      void 
 29688 ;; Registers used:
 29689 ;;		wreg
 29690 ;; Tracked objects:
 29691 ;;		On entry : 0/0
 29692 ;;		On exit  : 0/0
 29693 ;;		Unchanged: 0/0
 29694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29698 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29699 ;;Total ram usage:        1 bytes
 29700 ;; Hardware stack levels used:    1
 29701 ;; Hardware stack levels required when called:    7
 29702 ;; This function calls:
 29703 ;;		Nothing
 29704 ;; This function is called by:
 29705 ;;		_ConfigureRadio
 29706 ;; This function uses a non-reentrant model
 29707 ;;
 29708                           
 29709                           	psect	text187
 29710  00A8C6                     __ptext187:
 29711                           	opt callstack 0
 29712  00A8C6                     _RADIO_SetBandwidth:
 29713                           	opt callstack 17
 29714                           
 29715                           ; BSR set to: 0
 29716                           ;incstack = 0
 29717                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 29718  00A8C6  0100               	movlb	0	; () banked
 29719  00A8C8  6F60               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 29720                           
 29721                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 29722  00A8CA  C060  F143         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 29723  00A8CE  0012               	return		;funcret
 29724  00A8D0                     __end_of_RADIO_SetBandwidth:
 29725                           	opt callstack 0
 29726                           
 29727 ;; *************** function _RADIO_Transmit *****************
 29728 ;; Defined at:
 29729 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29730 ;; Parameters:    Size  Location     Type
 29731 ;;  buffer          2   73[BANK0 ] PTR unsigned char 
 29732 ;;		 -> macBuffer(271), 
 29733 ;;  bufferLen       1   75[BANK0 ] unsigned char 
 29734 ;; Auto vars:     Size  Location     Type
 29735 ;;  i               1   89[BANK0 ] unsigned char 
 29736 ;;  regValue        1   88[BANK0 ] unsigned char 
 29737 ;; Return value:  Size  Location     Type
 29738 ;;                  2   73[BANK0 ] enum E5907
 29739 ;; Registers used:
 29740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29741 ;; Tracked objects:
 29742 ;;		On entry : 0/0
 29743 ;;		On exit  : 0/0
 29744 ;;		Unchanged: 0/0
 29745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29746 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29747 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29748 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29749 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29750 ;;Total ram usage:       17 bytes
 29751 ;; Hardware stack levels used:    1
 29752 ;; Hardware stack levels required when called:   12
 29753 ;; This function calls:
 29754 ;;		_HALSPICSAssert
 29755 ;;		_HALSPICSDeassert
 29756 ;;		_HALSPISend
 29757 ;;		_RADIO_RegisterRead
 29758 ;;		_RADIO_RegisterWrite
 29759 ;;		_RADIO_WriteConfiguration
 29760 ;;		_RADIO_WriteMode
 29761 ;;		_SwTimerSetTimeout
 29762 ;;		_SwTimerStart
 29763 ;;		_SwTimerStop
 29764 ;;		___lldiv
 29765 ;; This function is called by:
 29766 ;;		_LORAWAN_RxTimeout
 29767 ;;		_LORAWAN_Join
 29768 ;;		_LORAWAN_Send
 29769 ;;		_AckRetransmissionCallback
 29770 ;;		_UnconfirmedTransmissionCallback
 29771 ;; This function uses a non-reentrant model
 29772 ;;
 29773                           
 29774                           	psect	text188
 29775  003F04                     __ptext188:
 29776                           	opt callstack 0
 29777  003F04                     _RADIO_Transmit:
 29778                           	opt callstack 15
 29779                           
 29780                           ;radio_driver_SX1276.c: 788: uint8_t regValue;;radio_driver_SX1276.c: 789: uint8_t i;;ra
      +                          dio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 29781                           
 29782                           ;incstack = 0
 29783  003F04  0101               	movlb	1	; () banked
 29784  003F06  A54C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 29785  003F08  D006               	goto	l19382
 29786                           
 29787                           ; BSR set to: 1
 29788                           ;radio_driver_SX1276.c: 792: {;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 29789  003F0A  0E80               	movlw	128
 29790  003F0C  0100               	movlb	0	; () banked
 29791  003F0E  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29792  003F10  0E03               	movlw	3
 29793  003F12  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 29794  003F14  0012               	return	
 29795  003F16                     l19382:
 29796                           
 29797                           ; BSR set to: 1
 29798                           ;radio_driver_SX1276.c: 794: };radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags
      +                           & ((1 << (0)) | (1 << (1)))) != 0)
 29799  003F16  C14C  F0AC         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 29800  003F1A  0E03               	movlw	3
 29801  003F1C  0100               	movlb	0	; () banked
 29802  003F1E  17AC               	andwf	??_RADIO_Transmit& (0+255),f,b
 29803  003F20  B4D8               	btfsc	status,2,c
 29804  003F22  D005               	goto	l19388
 29805                           
 29806                           ; BSR set to: 0
 29807                           ;radio_driver_SX1276.c: 797: {;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 29808  003F24  0E80               	movlw	128
 29809  003F26  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29810  003F28  0E04               	movlw	4
 29811  003F2A  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 29812  003F2C  0012               	return	
 29813  003F2E                     l19388:
 29814                           
 29815                           ; BSR set to: 0
 29816                           ;radio_driver_SX1276.c: 799: };radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioC
      +                          onfiguration.modulation) && (bufferLen > 64))
 29817  003F2E  0101               	movlb	1	; () banked
 29818  003F30  5141               	movf	(_RadioConfiguration+24)& (0+255),w,b
 29819  003F32  A4D8               	btfss	status,2,c
 29820  003F34  D009               	goto	l19396
 29821                           
 29822                           ; BSR set to: 1
 29823  003F36  0E40               	movlw	64
 29824  003F38  0100               	movlb	0	; () banked
 29825  003F3A  65AB               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 29826  003F3C  D005               	goto	l19396
 29827                           
 29828                           ; BSR set to: 0
 29829                           ;radio_driver_SX1276.c: 802: {;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 29830  003F3E  0E80               	movlw	128
 29831  003F40  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29832  003F42  0E02               	movlw	2
 29833  003F44  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 29834  003F46  0012               	return	
 29835  003F48                     l19396:
 29836                           
 29837                           ;radio_driver_SX1276.c: 804: };radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguratio
      +                          n.timeOnAirTimerId);
 29838  003F48  0101               	movlb	1	; () banked
 29839  003F4A  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 29840  003F4C  EC18  F052         	call	_SwTimerStop
 29841                           
 29842                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 29843  003F50  0E00               	movlw	0
 29844  003F52  0100               	movlb	0	; () banked
 29845  003F54  6F9F               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 29846  003F56  0E04               	movlw	4
 29847  003F58  6F9E               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 29848  003F5A  EC6B  F009         	call	_RADIO_WriteConfiguration	;wreg free
 29849                           
 29850                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 29851  003F5E  0101               	movlb	1	; () banked
 29852  003F60  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 29853  003F62  A4D8               	btfss	status,2,c
 29854  003F64  D027               	goto	l19416
 29855                           
 29856                           ; BSR set to: 1
 29857                           ;radio_driver_SX1276.c: 813: {;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, buf
      +                          ferLen);
 29858  003F66  C0AB  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 29859  003F6A  0E22               	movlw	34
 29860  003F6C  EC08  F052         	call	_RADIO_RegisterWrite
 29861                           
 29862                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 29863  003F70  0E0A               	movlw	10
 29864  003F72  EC38  F051         	call	_RADIO_RegisterRead
 29865  003F76  0100               	movlb	0	; () banked
 29866  003F78  6FB8               	movwf	RADIO_Transmit@regValue& (0+255),b
 29867                           
 29868                           ; BSR set to: 0
 29869                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 29870  003F7A  0EF0               	movlw	240
 29871  003F7C  17B8               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 29872                           
 29873                           ; BSR set to: 0
 29874                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 29875  003F7E  87B8               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 29876                           
 29877                           ; BSR set to: 0
 29878                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 29879  003F80  C0B8  F062         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 29880  003F84  0E0A               	movlw	10
 29881  003F86  EC08  F052         	call	_RADIO_RegisterWrite
 29882                           
 29883                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 29884  003F8A  0E40               	movlw	64
 29885  003F8C  0100               	movlb	0	; () banked
 29886  003F8E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29887  003F90  0E40               	movlw	64
 29888  003F92  EC08  F052         	call	_RADIO_RegisterWrite
 29889                           
 29890                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 29891  003F96  0E00               	movlw	0
 29892  003F98  0100               	movlb	0	; () banked
 29893  003F9A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29894  003F9C  0E41               	movlw	65
 29895  003F9E  EC08  F052         	call	_RADIO_RegisterWrite
 29896                           
 29897                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 29898  003FA2  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 29899  003FA6  0E01               	movlw	1
 29900  003FA8  0100               	movlb	0	; () banked
 29901  003FAA  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 29902  003FAC  0E01               	movlw	1
 29903  003FAE  ECEB  F035         	call	_RADIO_WriteMode
 29904                           
 29905                           ;radio_driver_SX1276.c: 828: }
 29906  003FB2  D00C               	goto	l19418
 29907  003FB4                     l19416:
 29908                           
 29909                           ; BSR set to: 1
 29910                           ;radio_driver_SX1276.c: 829: else;radio_driver_SX1276.c: 830: {;radio_driver_SX1276.c: 8
      +                          32: RADIO_RegisterWrite(0x40, 0x00);
 29911  003FB4  0E00               	movlw	0
 29912  003FB6  0100               	movlb	0	; () banked
 29913  003FB8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29914  003FBA  0E40               	movlw	64
 29915  003FBC  EC08  F052         	call	_RADIO_RegisterWrite
 29916                           
 29917                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 29918  003FC0  0E00               	movlw	0
 29919  003FC2  0100               	movlb	0	; () banked
 29920  003FC4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 29921  003FC6  0E41               	movlw	65
 29922  003FC8  EC08  F052         	call	_RADIO_RegisterWrite
 29923  003FCC                     l19418:
 29924                           
 29925                           ;radio_driver_SX1276.c: 834: };radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioCo
      +                          nfiguration.modulation)
 29926  003FCC  0101               	movlb	1	; () banked
 29927  003FCE  5141               	movf	(_RadioConfiguration+24)& (0+255),w,b
 29928  003FD0  A4D8               	btfss	status,2,c
 29929  003FD2  D005               	goto	l19422
 29930                           
 29931                           ; BSR set to: 1
 29932                           ;radio_driver_SX1276.c: 837: {;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, buf
      +                          ferLen);
 29933  003FD4  C0AB  F062         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 29934  003FD8  0E00               	movlw	0
 29935  003FDA  EC08  F052         	call	_RADIO_RegisterWrite
 29936  003FDE                     l19422:
 29937                           
 29938                           ;radio_driver_SX1276.c: 840: };radio_driver_SX1276.c: 842: HALSPICSAssert();
 29939  003FDE  ECA3  F054         	call	_HALSPICSAssert	;wreg free
 29940                           
 29941                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 29942  003FE2  0E80               	movlw	128
 29943  003FE4  ECF6  F053         	call	_HALSPISend
 29944                           
 29945                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 29946  003FE8  0E00               	movlw	0
 29947  003FEA  0100               	movlb	0	; () banked
 29948  003FEC  6FB9               	movwf	RADIO_Transmit@i& (0+255),b
 29949  003FEE  D00B               	goto	l19432
 29950  003FF0                     l19428:
 29951                           
 29952                           ; BSR set to: 0
 29953                           ;radio_driver_SX1276.c: 846: {;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 29954  003FF0  51B9               	movf	RADIO_Transmit@i& (0+255),w,b
 29955  003FF2  25A9               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 29956  003FF4  6ED9               	movwf	fsr2l,c
 29957  003FF6  0E00               	movlw	0
 29958  003FF8  21AA               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 29959  003FFA  6EDA               	movwf	fsr2h,c
 29960  003FFC  50DF               	movf	indf2,w,c
 29961  003FFE  ECF6  F053         	call	_HALSPISend
 29962  004002  0100               	movlb	0	; () banked
 29963  004004  2BB9               	incf	RADIO_Transmit@i& (0+255),f,b
 29964  004006                     l19432:
 29965                           
 29966                           ; BSR set to: 0
 29967  004006  51AB               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 29968  004008  5DB9               	subwf	RADIO_Transmit@i& (0+255),w,b
 29969  00400A  A0D8               	btfss	status,0,c
 29970  00400C  D7F1               	goto	l19428
 29971                           
 29972                           ; BSR set to: 0
 29973                           ;radio_driver_SX1276.c: 848: };radio_driver_SX1276.c: 849: HALSPICSDeassert();
 29974  00400E  ECA1  F054         	call	_HALSPICSDeassert	;wreg free
 29975                           
 29976                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 29977  004012  0101               	movlb	1	; () banked
 29978  004014  814C               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 29979                           
 29980                           ; BSR set to: 1
 29981                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 29982  004016  0EE7               	movlw	231
 29983  004018  174C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 29984                           
 29985                           ; BSR set to: 1
 29986                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 29987  00401A  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 29988  00401E  0E00               	movlw	0
 29989  004020  0100               	movlb	0	; () banked
 29990  004022  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 29991  004024  0E03               	movlw	3
 29992  004026  ECEB  F035         	call	_RADIO_WriteMode
 29993                           
 29994                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 29995  00402A  0E00               	movlw	0
 29996  00402C  0100               	movlb	0	; () banked
 29997  00402E  6F6D               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 29998  004030  0E00               	movlw	0
 29999  004032  6F6E               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 30000  004034  0E0A               	movlw	10
 30001  004036  6F6F               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 30002  004038  0E00               	movlw	0
 30003  00403A  6F70               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 30004  00403C  0101               	movlb	1	; () banked
 30005  00403E  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30006  004040  ECC2  F04C         	call	_SwTimerSetTimeout
 30007                           
 30008                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 30009  004044  0101               	movlb	1	; () banked
 30010  004046  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30011  004048  ECB6  F040         	call	_SwTimerStart
 30012                           
 30013                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 30014  00404C  0101               	movlb	1	; () banked
 30015  00404E  5153               	movf	(_RadioConfiguration+42)& (0+255),w,b
 30016  004050  1154               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 30017  004052  1155               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 30018  004054  1156               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 30019  004056  B4D8               	btfsc	status,2,c
 30020  004058  D061               	goto	l19462
 30021                           
 30022                           ; BSR set to: 1
 30023                           ;radio_driver_SX1276.c: 866: {;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfig
      +                          uration.watchdogTimerId, ((RadioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (
      +                          ((uint32_t)(RadioConfiguration.watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t
      +                          )(RadioConfiguration.watchdogTimerTimeout)) /
 30024  00405A  5156               	movf	(_RadioConfiguration+45)& (0+255),w,b
 30025  00405C  E107               	bnz	u20990
 30026  00405E  2953               	incf	(_RadioConfiguration+42)& (0+255),w,b
 30027  004060  0EFF               	movlw	255
 30028  004062  5954               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 30029  004064  0E0F               	movlw	15
 30030  004066  5955               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 30031  004068  A0D8               	btfss	status,0,c
 30032  00406A  D01D               	goto	l19456
 30033  00406C                     u20990:
 30034                           
 30035                           ; BSR set to: 1
 30036  00406C  C153  F060         	movff	_RadioConfiguration+42,___lldiv@dividend
 30037  004070  C154  F061         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 30038  004074  C155  F062         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 30039  004078  C156  F063         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 30040  00407C  0E7D               	movlw	125
 30041  00407E  0100               	movlb	0	; () banked
 30042  004080  6F64               	movwf	___lldiv@divisor& (0+255),b
 30043  004082  0E00               	movlw	0
 30044  004084  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30045  004086  0E00               	movlw	0
 30046  004088  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30047  00408A  0E00               	movlw	0
 30048  00408C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30049  00408E  ECD9  F042         	call	___lldiv	;wreg free
 30050  004092  0E0C               	movlw	12
 30051  004094                     u21005:
 30052  004094  90D8               	bcf	status,0,c
 30053  004096  0100               	movlb	0	; () banked
 30054  004098  3760               	rlcf	?___lldiv& (0+255),f,b
 30055  00409A  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 30056  00409C  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 30057  00409E  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 30058  0040A0  2EE8               	decfsz	wreg,f,c
 30059  0040A2  D7F8               	goto	u21005
 30060  0040A4  D023               	goto	L28
 30061  0040A6                     l19456:
 30062                           
 30063                           ; BSR set to: 1
 30064  0040A6  C153  F0AC         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 30065  0040AA  C154  F0AD         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 30066  0040AE  C155  F0AE         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 30067  0040B2  C156  F0AF         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 30068  0040B6  0E0C               	movlw	12
 30069  0040B8                     u21015:
 30070  0040B8  90D8               	bcf	status,0,c
 30071  0040BA  0100               	movlb	0	; () banked
 30072  0040BC  37AC               	rlcf	??_RADIO_Transmit& (0+255),f,b
 30073  0040BE  37AD               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 30074  0040C0  37AE               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 30075  0040C2  37AF               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 30076  0040C4  2EE8               	decfsz	wreg,f,c
 30077  0040C6  D7F8               	goto	u21015
 30078  0040C8  C0AC  F060         	movff	??_RADIO_Transmit,___lldiv@dividend
 30079  0040CC  C0AD  F061         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 30080  0040D0  C0AE  F062         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 30081  0040D4  C0AF  F063         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 30082  0040D8  0E7D               	movlw	125
 30083  0040DA  6F64               	movwf	___lldiv@divisor& (0+255),b
 30084  0040DC  0E00               	movlw	0
 30085  0040DE  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 30086  0040E0  0E00               	movlw	0
 30087  0040E2  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 30088  0040E4  0E00               	movlw	0
 30089  0040E6  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 30090  0040E8  ECD9  F042         	call	___lldiv	;wreg free
 30091  0040EC                     L28:
 30092  0040EC  C060  F0B4         	movff	?___lldiv,_RADIO_Transmit$781
 30093  0040F0  C061  F0B5         	movff	?___lldiv+1,_RADIO_Transmit$781+1
 30094  0040F4  C062  F0B6         	movff	?___lldiv+2,_RADIO_Transmit$781+2
 30095  0040F8  C063  F0B7         	movff	?___lldiv+3,_RADIO_Transmit$781+3
 30096  0040FC  C0B4  F06D         	movff	_RADIO_Transmit$781,SwTimerSetTimeout@timeout
 30097  004100  C0B5  F06E         	movff	_RADIO_Transmit$781+1,SwTimerSetTimeout@timeout+1
 30098  004104  C0B6  F06F         	movff	_RADIO_Transmit$781+2,SwTimerSetTimeout@timeout+2
 30099  004108  C0B7  F070         	movff	_RADIO_Transmit$781+3,SwTimerSetTimeout@timeout+3
 30100  00410C  0101               	movlb	1	; () banked
 30101  00410E  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30102  004110  ECC2  F04C         	call	_SwTimerSetTimeout
 30103                           
 30104                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 30105  004114  0101               	movlb	1	; () banked
 30106  004116  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30107  004118  ECB6  F040         	call	_SwTimerStart
 30108  00411C                     l19462:
 30109                           
 30110                           ;radio_driver_SX1276.c: 869: };radio_driver_SX1276.c: 871: return ERR_NONE;
 30111  00411C  0E00               	movlw	0
 30112  00411E  0100               	movlb	0	; () banked
 30113  004120  6FAA               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30114  004122  0E00               	movlw	0
 30115  004124  6FA9               	movwf	?_RADIO_Transmit& (0+255),b
 30116                           
 30117                           ; BSR set to: 0
 30118  004126  0012               	return		;funcret
 30119  004128                     __end_of_RADIO_Transmit:
 30120                           	opt callstack 0
 30121                           
 30122 ;; *************** function _RADIO_WriteConfiguration *****************
 30123 ;; Defined at:
 30124 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 30125 ;; Parameters:    Size  Location     Type
 30126 ;;  symbolTimeou    2   62[BANK0 ] unsigned int 
 30127 ;; Auto vars:     Size  Location     Type
 30128 ;;  tempValue       4   68[BANK0 ] unsigned long 
 30129 ;;  regValue        1   72[BANK0 ] unsigned char 
 30130 ;;  i               1   67[BANK0 ] unsigned char 
 30131 ;; Return value:  Size  Location     Type
 30132 ;;                  1    wreg      void 
 30133 ;; Registers used:
 30134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30135 ;; Tracked objects:
 30136 ;;		On entry : 0/0
 30137 ;;		On exit  : 0/0
 30138 ;;		Unchanged: 0/0
 30139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30140 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30141 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30142 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30143 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30144 ;;Total ram usage:       11 bytes
 30145 ;; Hardware stack levels used:    1
 30146 ;; Hardware stack levels required when called:   11
 30147 ;; This function calls:
 30148 ;;		_RADIO_RegisterRead
 30149 ;;		_RADIO_RegisterWrite
 30150 ;;		_RADIO_WriteFSKBitRate
 30151 ;;		_RADIO_WriteFSKFrequencyDeviation
 30152 ;;		_RADIO_WriteFrequency
 30153 ;;		_RADIO_WriteMode
 30154 ;;		_RADIO_WritePower
 30155 ;;		___lmul
 30156 ;; This function is called by:
 30157 ;;		_RADIO_Transmit
 30158 ;;		_RADIO_ReceiveStart
 30159 ;;		_RADIO_TransmitCW
 30160 ;; This function uses a non-reentrant model
 30161 ;;
 30162                           
 30163                           	psect	text189
 30164  0012D6                     __ptext189:
 30165                           	opt callstack 0
 30166  0012D6                     _RADIO_WriteConfiguration:
 30167                           	opt callstack 15
 30168                           
 30169                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;;radio_driver_SX1276.c: 536: uint8_t reg
      +                          Value;;radio_driver_SX1276.c: 537: uint8_t i;;radio_driver_SX1276.c: 540: RADIO_WriteMod
      +                          e(MODE_SLEEP, RadioConfiguration.modulation, 0);
 30170                           
 30171                           ; BSR set to: 0
 30172                           ;incstack = 0
 30173  0012D6  C141  F065         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30174  0012DA  0E00               	movlw	0
 30175  0012DC  0100               	movlb	0	; () banked
 30176  0012DE  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30177  0012E0  0E00               	movlw	0
 30178  0012E2  ECEB  F035         	call	_RADIO_WriteMode
 30179                           
 30180                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 30181  0012E6  C129  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 30182  0012EA  C12A  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 30183  0012EE  C12B  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 30184  0012F2  C12C  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 30185  0012F6  EC5A  F038         	call	_RADIO_WriteFrequency	;wreg free
 30186                           
 30187                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 30188  0012FA  0101               	movlb	1	; () banked
 30189  0012FC  5144               	movf	(_RadioConfiguration+27)& (0+255),w,b
 30190  0012FE  ECD2  F038         	call	_RADIO_WritePower
 30191                           
 30192                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 30193  001302  0101               	movlb	1	; () banked
 30194  001304  0541               	decf	(_RadioConfiguration+24)& (0+255),w,b
 30195  001306  A4D8               	btfss	status,2,c
 30196  001308  D1EC               	goto	l18600
 30197                           
 30198                           ; BSR set to: 1
 30199                           ;radio_driver_SX1276.c: 545: {;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, Rad
      +                          ioConfiguration.syncWordLoRa);
 30200  00130A  C137  F062         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 30201  00130E  0E39               	movlw	57
 30202  001310  EC08  F052         	call	_RADIO_RegisterWrite
 30203                           
 30204                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,;radio_driver_SX1276.c: 549: (Radi
      +                          oConfiguration.bandWidth << (4)) |;radio_driver_SX1276.c: 550: (RadioConfiguration.error
      +                          CodingRate << (1)) |;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode 
      +                          & 0x01));
 30205  001314  C14B  F0A0         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 30206  001318  0E01               	movlw	1
 30207  00131A  0100               	movlb	0	; () banked
 30208  00131C  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30209  00131E  0101               	movlb	1	; () banked
 30210  001320  90D8               	bcf	status,0,c
 30211  001322  354A               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 30212  001324  0100               	movlb	0	; () banked
 30213  001326  6FA1               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30214  001328  0101               	movlb	1	; () banked
 30215  00132A  3943               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 30216  00132C  0BF0               	andlw	240
 30217  00132E  0100               	movlb	0	; () banked
 30218  001330  11A1               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 30219  001332  11A0               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30220  001334  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30221  001336  0E1D               	movlw	29
 30222  001338  EC08  F052         	call	_RADIO_RegisterWrite
 30223                           
 30224                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,;radio_driver_SX1276.c: 554: (Radi
      +                          oConfiguration.dataRate << (4)) |;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn
      +                           & 0x01) << (2)) |;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 30225  00133C  C09E  F0A0         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 30226  001340  C09F  F0A1         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 30227  001344  C0A1  F0A0         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 30228  001348  0100               	movlb	0	; () banked
 30229  00134A  6BA1               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30230  00134C  0E03               	movlw	3
 30231  00134E  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30232  001350  C145  F0A2         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 30233  001354  0E01               	movlw	1
 30234  001356  17A2               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30235  001358  90D8               	bcf	status,0,c
 30236  00135A  37A2               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30237  00135C  90D8               	bcf	status,0,c
 30238  00135E  37A2               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30239  001360  0101               	movlb	1	; () banked
 30240  001362  3942               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 30241  001364  0BF0               	andlw	240
 30242  001366  0100               	movlb	0	; () banked
 30243  001368  11A2               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 30244  00136A  11A0               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30245  00136C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30246  00136E  0E1E               	movlw	30
 30247  001370  EC08  F052         	call	_RADIO_RegisterWrite
 30248                           
 30249                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 30250  001374  0101               	movlb	1	; () banked
 30251  001376  5147               	movf	(_RadioConfiguration+30)& (0+255),w,b
 30252  001378  1148               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 30253  00137A  B4D8               	btfsc	status,2,c
 30254  00137C  D06F               	goto	l18490
 30255                           
 30256                           ; BSR set to: 1
 30257                           ;radio_driver_SX1276.c: 561: {;radio_driver_SX1276.c: 562: tempValue = RadioConfiguratio
      +                          n.frequencyHopPeriod;
 30258  00137E  C147  F0A4         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 30259  001382  C148  F0A5         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 30260  001386  0100               	movlb	0	; () banked
 30261  001388  6BA6               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30262  00138A  6BA7               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30263                           
 30264                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 30265  00138C  D04E               	goto	l18486
 30266  00138E                     l18476:
 30267                           
 30268                           ; BSR set to: 1
 30269                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 30270  00138E  C0A4  F092         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30271  001392  C0A5  F093         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30272  001396  C0A6  F094         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30273  00139A  C0A7  F095         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30274  00139E  0E7D               	movlw	125
 30275  0013A0  0100               	movlb	0	; () banked
 30276  0013A2  6F96               	movwf	___lmul@multiplicand& (0+255),b
 30277  0013A4  0E00               	movlw	0
 30278  0013A6  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30279  0013A8  0E00               	movlw	0
 30280  0013AA  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30281  0013AC  0E00               	movlw	0
 30282  0013AE  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30283  0013B0  EC19  F049         	call	___lmul	;wreg free
 30284  0013B4  D027               	goto	L30
 30285  0013B6                     l18478:
 30286                           
 30287                           ; BSR set to: 1
 30288                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 30289  0013B6  C0A4  F092         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30290  0013BA  C0A5  F093         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30291  0013BE  C0A6  F094         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30292  0013C2  C0A7  F095         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30293  0013C6  0EFA               	movlw	250
 30294  0013C8  0100               	movlb	0	; () banked
 30295  0013CA  6F96               	movwf	___lmul@multiplicand& (0+255),b
 30296  0013CC  0E00               	movlw	0
 30297  0013CE  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30298  0013D0  0E00               	movlw	0
 30299  0013D2  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30300  0013D4  0E00               	movlw	0
 30301  0013D6  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30302  0013D8  EC19  F049         	call	___lmul	;wreg free
 30303  0013DC  D013               	goto	L30
 30304  0013DE                     l18480:
 30305                           
 30306                           ; BSR set to: 1
 30307                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 30308  0013DE  C0A4  F092         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30309  0013E2  C0A5  F093         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30310  0013E6  C0A6  F094         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30311  0013EA  C0A7  F095         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30312  0013EE  0EF4               	movlw	244
 30313  0013F0  0100               	movlb	0	; () banked
 30314  0013F2  6F96               	movwf	___lmul@multiplicand& (0+255),b
 30315  0013F4  0E01               	movlw	1
 30316  0013F6  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30317  0013F8  0E00               	movlw	0
 30318  0013FA  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30319  0013FC  0E00               	movlw	0
 30320  0013FE  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30321  001400  EC19  F049         	call	___lmul	;wreg free
 30322  001404                     L30:
 30323  001404  C092  F0A4         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 30324  001408  C093  F0A5         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 30325  00140C  C094  F0A6         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 30326  001410  C095  F0A7         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 30327                           
 30328                           ;radio_driver_SX1276.c: 574: break;
 30329  001414  D016               	goto	l18488
 30330  001416                     l18482:
 30331                           
 30332                           ; BSR set to: 1
 30333                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 30334  001416  0E00               	movlw	0
 30335  001418  0100               	movlb	0	; () banked
 30336  00141A  6FA4               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30337  00141C  0E00               	movlw	0
 30338  00141E  6FA5               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30339  001420  0E00               	movlw	0
 30340  001422  6FA6               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30341  001424  0E00               	movlw	0
 30342  001426  6FA7               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30343                           
 30344                           ;radio_driver_SX1276.c: 578: break;
 30345  001428  D00C               	goto	l18488
 30346  00142A                     l18486:
 30347                           
 30348                           ; BSR set to: 0
 30349  00142A  0101               	movlb	1	; () banked
 30350  00142C  5143               	movf	(_RadioConfiguration+26)& (0+255),w,b
 30351                           
 30352                           ; Switch size 1, requested type "simple"
 30353                           ; Number of cases is 3, Range of values is 7 to 9
 30354                           ; switch strategies available:
 30355                           ; Name         Instructions Cycles
 30356                           ; simple_byte           10     6 (average)
 30357                           ;	Chosen strategy is simple_byte
 30358  00142E  0A07               	xorlw	7	; case 7
 30359  001430  B4D8               	btfsc	status,2,c
 30360  001432  D7AD               	goto	l18476
 30361  001434  0A0F               	xorlw	15	; case 8
 30362  001436  B4D8               	btfsc	status,2,c
 30363  001438  D7BE               	goto	l18478
 30364  00143A  0A01               	xorlw	1	; case 9
 30365  00143C  B4D8               	btfsc	status,2,c
 30366  00143E  D7CF               	goto	l18480
 30367  001440  D7EA               	goto	l18482
 30368  001442                     l18488:
 30369                           
 30370                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 30371  001442  0101               	movlb	1	; () banked
 30372  001444  2942               	incf	(_RadioConfiguration+25)& (0+255),w,b
 30373  001446  0100               	movlb	0	; () banked
 30374  001448  6FA0               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 30375  00144A  D005               	goto	u19560
 30376  00144C                     u19565:
 30377  00144C  90D8               	bcf	status,0,c
 30378  00144E  33A7               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 30379  001450  33A6               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 30380  001452  33A5               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 30381  001454  33A4               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 30382  001456                     u19560:
 30383  001456  2FA0               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 30384  001458  D7F9               	goto	u19565
 30385                           
 30386                           ;radio_driver_SX1276.c: 582: }
 30387  00145A  D009               	goto	l18492
 30388  00145C                     l18490:
 30389                           
 30390                           ; BSR set to: 1
 30391                           ;radio_driver_SX1276.c: 583: else;radio_driver_SX1276.c: 584: {;radio_driver_SX1276.c: 5
      +                          85: tempValue = 0;
 30392  00145C  0E00               	movlw	0
 30393  00145E  0100               	movlb	0	; () banked
 30394  001460  6FA4               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30395  001462  0E00               	movlw	0
 30396  001464  6FA5               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30397  001466  0E00               	movlw	0
 30398  001468  6FA6               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30399  00146A  0E00               	movlw	0
 30400  00146C  6FA7               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30401  00146E                     l18492:
 30402                           
 30403                           ;radio_driver_SX1276.c: 586: };radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (ui
      +                          nt8_t)tempValue);
 30404  00146E  C0A4  F062         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 30405  001472  0E24               	movlw	36
 30406  001474  EC08  F052         	call	_RADIO_RegisterWrite
 30407                           
 30408                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 30409  001478  C09E  F062         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 30410  00147C  0E1F               	movlw	31
 30411  00147E  EC08  F052         	call	_RADIO_RegisterWrite
 30412                           
 30413                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 30414  001482  0E26               	movlw	38
 30415  001484  EC38  F051         	call	_RADIO_RegisterRead
 30416  001488  0100               	movlb	0	; () banked
 30417  00148A  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30418                           
 30419                           ; BSR set to: 0
 30420                           ;radio_driver_SX1276.c: 596: if (;radio_driver_SX1276.c: 597: (;radio_driver_SX1276.c: 5
      +                          98: (SF_12 == RadioConfiguration.dataRate) &&;radio_driver_SX1276.c: 599: ((BW_125KHZ ==
      +                           RadioConfiguration.bandWidth) || (BW_250KHZ == RadioConfiguration.bandWidth));radio_dri
      +                          ver_SX1276.c: 600: ) ||;radio_driver_SX1276.c: 601: (;radio_driver_SX1276.c: 602: (SF_11
      +                           == RadioConfiguration.dataRate) &&;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfi
      +                          guration.bandWidth);radio_driver_SX1276.c: 604: );radio_driver_SX1276.c: 605: )
 30421  00148C  0E0C               	movlw	12
 30422  00148E  0101               	movlb	1	; () banked
 30423  001490  1942               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30424  001492  A4D8               	btfss	status,2,c
 30425  001494  D008               	goto	u19590
 30426                           
 30427                           ; BSR set to: 1
 30428  001496  0E07               	movlw	7
 30429  001498  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30430  00149A  B4D8               	btfsc	status,2,c
 30431  00149C  D00C               	goto	u19610
 30432                           
 30433                           ; BSR set to: 1
 30434  00149E  0E08               	movlw	8
 30435  0014A0  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30436  0014A2  B4D8               	btfsc	status,2,c
 30437  0014A4  D008               	goto	u19610
 30438  0014A6                     u19590:
 30439                           
 30440                           ; BSR set to: 1
 30441  0014A6  0E0B               	movlw	11
 30442  0014A8  1942               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30443  0014AA  A4D8               	btfss	status,2,c
 30444  0014AC  D007               	goto	l18510
 30445                           
 30446                           ; BSR set to: 1
 30447  0014AE  0E07               	movlw	7
 30448  0014B0  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30449  0014B2  A4D8               	btfss	status,2,c
 30450  0014B4  D003               	goto	l18510
 30451  0014B6                     u19610:
 30452                           
 30453                           ; BSR set to: 1
 30454                           ;radio_driver_SX1276.c: 606: {;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 30455  0014B6  0100               	movlb	0	; () banked
 30456  0014B8  87A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30457                           
 30458                           ;radio_driver_SX1276.c: 608: }
 30459  0014BA  D002               	goto	l478
 30460  0014BC                     l18510:
 30461                           
 30462                           ; BSR set to: 1
 30463                           ;radio_driver_SX1276.c: 609: else;radio_driver_SX1276.c: 610: {;radio_driver_SX1276.c: 6
      +                          11: regValue &= ~(1 << (3));
 30464  0014BC  0100               	movlb	0	; () banked
 30465  0014BE  97A8               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30466  0014C0                     l478:
 30467                           
 30468                           ; BSR set to: 0
 30469                           ;radio_driver_SX1276.c: 612: };radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 30470  0014C0  85A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 30471                           
 30472                           ; BSR set to: 0
 30473                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 30474  0014C2  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30475  0014C6  0E26               	movlw	38
 30476  0014C8  EC08  F052         	call	_RADIO_RegisterWrite
 30477                           
 30478                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 30479  0014CC  0E31               	movlw	49
 30480  0014CE  EC38  F051         	call	_RADIO_RegisterRead
 30481  0014D2  0100               	movlb	0	; () banked
 30482  0014D4  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30483                           
 30484                           ; BSR set to: 0
 30485                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 30486  0014D6  0EF8               	movlw	248
 30487  0014D8  17A8               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30488                           
 30489                           ; BSR set to: 0
 30490                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 30491  0014DA  0E03               	movlw	3
 30492  0014DC  13A8               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30493                           
 30494                           ; BSR set to: 0
 30495                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 30496  0014DE  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30497  0014E2  0E31               	movlw	49
 30498  0014E4  EC08  F052         	call	_RADIO_RegisterWrite
 30499                           
 30500                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 30501  0014E8  0E0A               	movlw	10
 30502  0014EA  0100               	movlb	0	; () banked
 30503  0014EC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30504  0014EE  0E37               	movlw	55
 30505  0014F0  EC08  F052         	call	_RADIO_RegisterWrite
 30506                           
 30507                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 30508  0014F4  0E12               	movlw	18
 30509  0014F6  0101               	movlb	1	; () banked
 30510  0014F8  195A               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30511  0014FA  A4D8               	btfss	status,2,c
 30512  0014FC  D02F               	goto	l18548
 30513                           
 30514                           ; BSR set to: 1
 30515                           ;radio_driver_SX1276.c: 626: {;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfi
      +                          guration.bandWidth) ||;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.band
      +                          Width) )
 30516  0014FE  0E07               	movlw	7
 30517  001500  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30518  001502  B4D8               	btfsc	status,2,c
 30519  001504  D004               	goto	u19640
 30520                           
 30521                           ; BSR set to: 1
 30522  001506  0E08               	movlw	8
 30523  001508  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30524  00150A  A4D8               	btfss	status,2,c
 30525  00150C  D017               	goto	l18540
 30526  00150E                     u19640:
 30527                           
 30528                           ; BSR set to: 1
 30529                           ;radio_driver_SX1276.c: 631: {;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead
      +                          (0x31);
 30530  00150E  0E31               	movlw	49
 30531  001510  EC38  F051         	call	_RADIO_RegisterRead
 30532  001514  0100               	movlb	0	; () banked
 30533  001516  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30534                           
 30535                           ; BSR set to: 0
 30536                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 30537  001518  9FA8               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30538                           
 30539                           ; BSR set to: 0
 30540                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 30541  00151A  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30542  00151E  0E31               	movlw	49
 30543  001520  EC08  F052         	call	_RADIO_RegisterWrite
 30544                           
 30545                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 30546  001524  0E40               	movlw	64
 30547  001526  0100               	movlb	0	; () banked
 30548  001528  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30549  00152A  0E2F               	movlw	47
 30550  00152C  EC08  F052         	call	_RADIO_RegisterWrite
 30551                           
 30552                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 30553  001530  0E00               	movlw	0
 30554  001532  0100               	movlb	0	; () banked
 30555  001534  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30556  001536  0E30               	movlw	48
 30557  001538  EC08  F052         	call	_RADIO_RegisterWrite
 30558  00153C                     l18540:
 30559                           
 30560                           ;radio_driver_SX1276.c: 637: };radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfigu
      +                          ration.bandWidth)
 30561  00153C  0E09               	movlw	9
 30562  00153E  0101               	movlb	1	; () banked
 30563  001540  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30564  001542  A4D8               	btfss	status,2,c
 30565  001544  D00B               	goto	l18548
 30566                           
 30567                           ; BSR set to: 1
 30568                           ;radio_driver_SX1276.c: 640: {;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead
      +                          (0x31);
 30569  001546  0E31               	movlw	49
 30570  001548  EC38  F051         	call	_RADIO_RegisterRead
 30571  00154C  0100               	movlb	0	; () banked
 30572  00154E  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30573                           
 30574                           ; BSR set to: 0
 30575                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 30576  001550  8FA8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30577                           
 30578                           ; BSR set to: 0
 30579                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 30580  001552  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30581  001556  0E31               	movlw	49
 30582  001558  EC08  F052         	call	_RADIO_RegisterWrite
 30583  00155C                     l18548:
 30584                           
 30585                           ;radio_driver_SX1276.c: 644: };radio_driver_SX1276.c: 645: };radio_driver_SX1276.c: 647:
      +                           regValue = RADIO_RegisterRead(0x33);
 30586  00155C  0E33               	movlw	51
 30587  00155E  EC38  F051         	call	_RADIO_RegisterRead
 30588  001562  0100               	movlb	0	; () banked
 30589  001564  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30590                           
 30591                           ; BSR set to: 0
 30592                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 30593  001566  9DA8               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 30594                           
 30595                           ; BSR set to: 0
 30596                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 30597  001568  81A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 30598                           
 30599                           ; BSR set to: 0
 30600                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 30601  00156A  C149  F0A0         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30602  00156E  0E01               	movlw	1
 30603  001570  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30604  001572  0E06               	movlw	6
 30605  001574  6FA1               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30606  001576                     u19665:
 30607  001576  90D8               	bcf	status,0,c
 30608  001578  37A0               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30609  00157A  2FA1               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 30610  00157C  D7FC               	goto	u19665
 30611  00157E  51A0               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 30612  001580  13A8               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30613                           
 30614                           ; BSR set to: 0
 30615                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 30616  001582  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30617  001586  0E33               	movlw	51
 30618  001588  EC08  F052         	call	_RADIO_RegisterWrite
 30619                           
 30620                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 30621  00158C  C149  F0A0         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30622  001590  0E01               	movlw	1
 30623  001592  0100               	movlb	0	; () banked
 30624  001594  17A0               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30625  001596  90D8               	bcf	status,0,c
 30626  001598  37A0               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30627  00159A  90D8               	bcf	status,0,c
 30628  00159C  35A0               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 30629  00159E  0AFF               	xorlw	255
 30630  0015A0  0B1D               	andlw	29
 30631  0015A2  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30632                           
 30633                           ; BSR set to: 0
 30634                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 30635  0015A4  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30636  0015A8  0E3B               	movlw	59
 30637  0015AA  EC08  F052         	call	_RADIO_RegisterWrite
 30638                           
 30639                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 30640  0015AE  0101               	movlb	1	; () banked
 30641  0015B0  5136               	movf	(_RadioConfiguration+13)& (0+255),w,b
 30642  0015B2  0100               	movlb	0	; () banked
 30643  0015B4  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30644  0015B6  0E20               	movlw	32
 30645  0015B8  EC08  F052         	call	_RADIO_RegisterWrite
 30646                           
 30647                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 30648  0015BC  C135  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 30649  0015C0  0E21               	movlw	33
 30650  0015C2  EC08  F052         	call	_RADIO_RegisterWrite
 30651                           
 30652                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 30653  0015C6  0E00               	movlw	0
 30654  0015C8  0100               	movlb	0	; () banked
 30655  0015CA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30656  0015CC  0E0D               	movlw	13
 30657  0015CE  EC08  F052         	call	_RADIO_RegisterWrite
 30658                           
 30659                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 30660  0015D2  0E00               	movlw	0
 30661  0015D4  0100               	movlb	0	; () banked
 30662  0015D6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30663  0015D8  0E0E               	movlw	14
 30664  0015DA  EC08  F052         	call	_RADIO_RegisterWrite
 30665                           
 30666                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 30667  0015DE  0E00               	movlw	0
 30668  0015E0  0100               	movlb	0	; () banked
 30669  0015E2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30670  0015E4  0E0F               	movlw	15
 30671  0015E6  EC08  F052         	call	_RADIO_RegisterWrite
 30672                           
 30673                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 30674  0015EA  0E12               	movlw	18
 30675  0015EC  0101               	movlb	1	; () banked
 30676  0015EE  195A               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30677  0015F0  A4D8               	btfss	status,2,c
 30678  0015F2  D070               	goto	l484
 30679                           
 30680                           ; BSR set to: 1
 30681                           ;radio_driver_SX1276.c: 665: {;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfi
      +                          guration.bandWidth) &&;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 8620
      +                          00000) &&;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000);radio
      +                          _driver_SX1276.c: 669: )
 30682  0015F4  0E09               	movlw	9
 30683  0015F6  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30684  0015F8  A4D8               	btfss	status,2,c
 30685  0015FA  D020               	goto	l18582
 30686                           
 30687                           ; BSR set to: 1
 30688  0015FC  0E80               	movlw	128
 30689  0015FE  5D29               	subwf	_RadioConfiguration& (0+255),w,b
 30690  001600  0E13               	movlw	19
 30691  001602  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30692  001604  0E61               	movlw	97
 30693  001606  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30694  001608  0E33               	movlw	51
 30695  00160A  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30696  00160C  A0D8               	btfss	status,0,c
 30697  00160E  D016               	goto	l18582
 30698                           
 30699                           ; BSR set to: 1
 30700  001610  0529               	decf	_RadioConfiguration& (0+255),w,b
 30701  001612  0EF7               	movlw	247
 30702  001614  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30703  001616  0ECB               	movlw	203
 30704  001618  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30705  00161A  0E3C               	movlw	60
 30706  00161C  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30707  00161E  B0D8               	btfsc	status,0,c
 30708  001620  D00D               	goto	l18582
 30709                           
 30710                           ; BSR set to: 1
 30711                           ;radio_driver_SX1276.c: 670: {;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x0
      +                          2);
 30712  001622  0E02               	movlw	2
 30713  001624  0100               	movlb	0	; () banked
 30714  001626  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30715  001628  0E36               	movlw	54
 30716  00162A  EC08  F052         	call	_RADIO_RegisterWrite
 30717                           
 30718                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 30719  00162E  0E64               	movlw	100
 30720  001630  0100               	movlb	0	; () banked
 30721  001632  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30722  001634  0E3A               	movlw	58
 30723  001636  EC08  F052         	call	_RADIO_RegisterWrite
 30724                           
 30725                           ;radio_driver_SX1276.c: 673: }
 30726  00163A  D02B               	goto	l18592
 30727  00163C                     l18582:
 30728                           
 30729                           ; BSR set to: 1
 30730                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&;ra
      +                          dio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&;radio_driver_SX
      +                          1276.c: 676: (RadioConfiguration.frequency <= 525000000);radio_driver_SX1276.c: 677: )
 30731  00163C  0E09               	movlw	9
 30732  00163E  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30733  001640  A4D8               	btfss	status,2,c
 30734  001642  D021               	goto	l18590
 30735                           
 30736                           ; BSR set to: 1
 30737  001644  0E80               	movlw	128
 30738  001646  5D29               	subwf	_RadioConfiguration& (0+255),w,b
 30739  001648  0E1A               	movlw	26
 30740  00164A  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30741  00164C  0E70               	movlw	112
 30742  00164E  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30743  001650  0E18               	movlw	24
 30744  001652  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30745  001654  A0D8               	btfss	status,0,c
 30746  001656  D017               	goto	l18590
 30747                           
 30748                           ; BSR set to: 1
 30749  001658  0E41               	movlw	65
 30750  00165A  5D29               	subwf	_RadioConfiguration& (0+255),w,b
 30751  00165C  0EDD               	movlw	221
 30752  00165E  592A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 30753  001660  0E4A               	movlw	74
 30754  001662  592B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 30755  001664  0E1F               	movlw	31
 30756  001666  592C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 30757  001668  B0D8               	btfsc	status,0,c
 30758  00166A  D00D               	goto	l18590
 30759                           
 30760                           ; BSR set to: 1
 30761                           ;radio_driver_SX1276.c: 678: {;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x0
      +                          2);
 30762  00166C  0E02               	movlw	2
 30763  00166E  0100               	movlb	0	; () banked
 30764  001670  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30765  001672  0E36               	movlw	54
 30766  001674  EC08  F052         	call	_RADIO_RegisterWrite
 30767                           
 30768                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 30769  001678  0E7F               	movlw	127
 30770  00167A  0100               	movlb	0	; () banked
 30771  00167C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30772  00167E  0E3A               	movlw	58
 30773  001680  EC08  F052         	call	_RADIO_RegisterWrite
 30774                           
 30775                           ;radio_driver_SX1276.c: 681: }
 30776  001684  D006               	goto	l18592
 30777  001686                     l18590:
 30778                           
 30779                           ; BSR set to: 1
 30780                           ;radio_driver_SX1276.c: 682: else;radio_driver_SX1276.c: 683: {;radio_driver_SX1276.c: 6
      +                          84: RADIO_RegisterWrite(0x36, 0x03);
 30781  001686  0E03               	movlw	3
 30782  001688  0100               	movlb	0	; () banked
 30783  00168A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30784  00168C  0E36               	movlw	54
 30785  00168E  EC08  F052         	call	_RADIO_RegisterWrite
 30786  001692                     l18592:
 30787                           
 30788                           ;radio_driver_SX1276.c: 685: };radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfig
      +                          uration.bandWidth) && (1 == RadioConfiguration.iqInverted))
 30789  001692  0E09               	movlw	9
 30790  001694  0101               	movlb	1	; () banked
 30791  001696  1943               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30792  001698  A4D8               	btfss	status,2,c
 30793  00169A  D010               	goto	l18598
 30794                           
 30795                           ; BSR set to: 1
 30796  00169C  0549               	decf	(_RadioConfiguration+32)& (0+255),w,b
 30797  00169E  A4D8               	btfss	status,2,c
 30798  0016A0  D00D               	goto	l18598
 30799                           
 30800                           ; BSR set to: 1
 30801                           ;radio_driver_SX1276.c: 689: {;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x6
      +                          5);
 30802  0016A2  0E65               	movlw	101
 30803  0016A4  0100               	movlb	0	; () banked
 30804  0016A6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30805  0016A8  0E3A               	movlw	58
 30806  0016AA  EC08  F052         	call	_RADIO_RegisterWrite
 30807                           
 30808                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 30809  0016AE  0E19               	movlw	25
 30810  0016B0  0100               	movlb	0	; () banked
 30811  0016B2  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30812  0016B4  0E3B               	movlw	59
 30813  0016B6  EC08  F052         	call	_RADIO_RegisterWrite
 30814                           
 30815                           ;radio_driver_SX1276.c: 692: }
 30816  0016BA  D00C               	goto	l484
 30817  0016BC                     l18598:
 30818                           
 30819                           ; BSR set to: 1
 30820                           ;radio_driver_SX1276.c: 693: else;radio_driver_SX1276.c: 694: {;radio_driver_SX1276.c: 6
      +                          95: RADIO_RegisterWrite(0x3A, 0x65);
 30821  0016BC  0E65               	movlw	101
 30822  0016BE  0100               	movlb	0	; () banked
 30823  0016C0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30824  0016C2  0E3A               	movlw	58
 30825  0016C4  EC08  F052         	call	_RADIO_RegisterWrite
 30826                           
 30827                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 30828  0016C8  0E1D               	movlw	29
 30829  0016CA  0100               	movlb	0	; () banked
 30830  0016CC  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30831  0016CE  0E3B               	movlw	59
 30832  0016D0  EC08  F052         	call	_RADIO_RegisterWrite
 30833  0016D4                     l484:
 30834                           
 30835                           ;radio_driver_SX1276.c: 697: };radio_driver_SX1276.c: 698: };radio_driver_SX1276.c: 701:
      +                           RADIO_RegisterWrite(0x12, 0xFF);
 30836  0016D4  0EFF               	movlw	255
 30837  0016D6  0100               	movlb	0	; () banked
 30838  0016D8  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30839  0016DA  0E12               	movlw	18
 30840  0016DC  EC08  F052         	call	_RADIO_RegisterWrite
 30841                           
 30842                           ;radio_driver_SX1276.c: 702: }
 30843  0016E0  0012               	return	
 30844  0016E2                     l18600:
 30845                           
 30846                           ; BSR set to: 1
 30847                           ;radio_driver_SX1276.c: 703: else;radio_driver_SX1276.c: 704: {;radio_driver_SX1276.c: 7
      +                          06: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequencyDeviation);
 30848  0016E2  C12D  F06D         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 30849  0016E6  C12E  F06E         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 30850  0016EA  C12F  F06F         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 30851  0016EE  C130  F070         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 30852  0016F2  EC98  F046         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 30853                           
 30854                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 30855  0016F6  C131  F06D         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 30856  0016FA  C132  F06E         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 30857  0016FE  C133  F06F         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 30858  001702  C134  F070         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 30859  001706  EC01  F047         	call	_RADIO_WriteFSKBitRate	;wreg free
 30860                           
 30861                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 30862  00170A  0101               	movlb	1	; () banked
 30863  00170C  5136               	movf	(_RadioConfiguration+13)& (0+255),w,b
 30864  00170E  0100               	movlb	0	; () banked
 30865  001710  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30866  001712  0E25               	movlw	37
 30867  001714  EC08  F052         	call	_RADIO_RegisterWrite
 30868                           
 30869                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 30870  001718  C135  F062         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 30871  00171C  0E26               	movlw	38
 30872  00171E  EC08  F052         	call	_RADIO_RegisterWrite
 30873                           
 30874                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 30875  001722  0E0A               	movlw	10
 30876  001724  EC38  F051         	call	_RADIO_RegisterRead
 30877  001728  0100               	movlb	0	; () banked
 30878  00172A  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30879                           
 30880                           ; BSR set to: 0
 30881                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 30882  00172C  0E9F               	movlw	159
 30883  00172E  17A8               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30884                           
 30885                           ; BSR set to: 0
 30886                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 30887  001730  0101               	movlb	1	; () banked
 30888  001732  395C               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 30889  001734  46E8               	rlncf	wreg,f,c
 30890  001736  0BE0               	andlw	224
 30891  001738  0100               	movlb	0	; () banked
 30892  00173A  13A8               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30893                           
 30894                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 30895  00173C  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30896  001740  0E0A               	movlw	10
 30897  001742  EC08  F052         	call	_RADIO_RegisterWrite
 30898                           
 30899                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 30900  001746  0EC8               	movlw	200
 30901  001748  0100               	movlb	0	; () banked
 30902  00174A  6FA8               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30903                           
 30904                           ; BSR set to: 0
 30905                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 30906  00174C  0101               	movlb	1	; () banked
 30907  00174E  5145               	movf	(_RadioConfiguration+28)& (0+255),w,b
 30908  001750  B4D8               	btfsc	status,2,c
 30909  001752  D002               	goto	l18612
 30910                           
 30911                           ; BSR set to: 1
 30912                           ;radio_driver_SX1276.c: 722: {;radio_driver_SX1276.c: 723: regValue |= 0x10;
 30913  001754  0100               	movlb	0	; () banked
 30914  001756  89A8               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 30915  001758                     l18612:
 30916                           
 30917                           ;radio_driver_SX1276.c: 724: };radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, reg
      +                          Value);
 30918  001758  C0A8  F062         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30919  00175C  0E30               	movlw	48
 30920  00175E  EC08  F052         	call	_RADIO_RegisterWrite
 30921                           
 30922                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 30923  001762  0E00               	movlw	0
 30924  001764  0100               	movlb	0	; () banked
 30925  001766  6FA3               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 30926  001768  D00E               	goto	l18620
 30927  00176A                     l18616:
 30928                           
 30929                           ; BSR set to: 0
 30930                           ;radio_driver_SX1276.c: 729: {;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i,
      +                           RadioConfiguration.syncWord[i]);
 30931  00176A  0E38               	movlw	low (_RadioConfiguration+15)
 30932  00176C  25A3               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 30933  00176E  6ED9               	movwf	fsr2l,c
 30934  001770  6ADA               	clrf	fsr2h,c
 30935  001772  0E01               	movlw	high (_RadioConfiguration+15)
 30936  001774  22DA               	addwfc	fsr2h,f,c
 30937  001776  50DF               	movf	indf2,w,c
 30938  001778  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30939  00177A  51A3               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 30940  00177C  0F28               	addlw	40
 30941  00177E  EC08  F052         	call	_RADIO_RegisterWrite
 30942  001782  0100               	movlb	0	; () banked
 30943  001784  2BA3               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 30944  001786                     l18620:
 30945                           
 30946                           ; BSR set to: 0
 30947  001786  0101               	movlb	1	; () banked
 30948  001788  5140               	movf	(_RadioConfiguration+23)& (0+255),w,b
 30949  00178A  0100               	movlb	0	; () banked
 30950  00178C  5DA3               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 30951  00178E  A0D8               	btfss	status,0,c
 30952  001790  D7EC               	goto	l18616
 30953                           
 30954                           ; BSR set to: 0
 30955                           ;radio_driver_SX1276.c: 733: };radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWo
      +                          rdLen != 0)
 30956  001792  0101               	movlb	1	; () banked
 30957  001794  5140               	movf	(_RadioConfiguration+23)& (0+255),w,b
 30958  001796  B4D8               	btfsc	status,2,c
 30959  001798  D008               	goto	l18626
 30960                           
 30961                           ; BSR set to: 1
 30962                           ;radio_driver_SX1276.c: 737: {;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x1
      +                          0 | (RadioConfiguration.syncWordLen - 1));
 30963  00179A  0540               	decf	(_RadioConfiguration+23)& (0+255),w,b
 30964  00179C  0910               	iorlw	16
 30965  00179E  0100               	movlb	0	; () banked
 30966  0017A0  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30967  0017A2  0E27               	movlw	39
 30968  0017A4  EC08  F052         	call	_RADIO_RegisterWrite
 30969                           
 30970                           ;radio_driver_SX1276.c: 739: }
 30971  0017A8  D006               	goto	l497
 30972  0017AA                     l18626:
 30973                           
 30974                           ; BSR set to: 1
 30975                           ;radio_driver_SX1276.c: 740: else;radio_driver_SX1276.c: 741: {;radio_driver_SX1276.c: 7
      +                          42: RADIO_RegisterWrite(0x27, 0x00);
 30976  0017AA  0E00               	movlw	0
 30977  0017AC  0100               	movlb	0	; () banked
 30978  0017AE  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30979  0017B0  0E27               	movlw	39
 30980  0017B2  EC08  F052         	call	_RADIO_RegisterWrite
 30981  0017B6                     l497:
 30982                           
 30983                           ;radio_driver_SX1276.c: 743: };radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xF
      +                          F);
 30984  0017B6  0EFF               	movlw	255
 30985  0017B8  0100               	movlb	0	; () banked
 30986  0017BA  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30987  0017BC  0E3E               	movlw	62
 30988  0017BE  EC08  F052         	call	_RADIO_RegisterWrite
 30989                           
 30990                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 30991  0017C2  0EFF               	movlw	255
 30992  0017C4  0100               	movlb	0	; () banked
 30993  0017C6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30994  0017C8  0E3F               	movlw	63
 30995  0017CA  EC08  F052         	call	_RADIO_RegisterWrite
 30996  0017CE  0012               	return		;funcret
 30997  0017D0                     __end_of_RADIO_WriteConfiguration:
 30998                           	opt callstack 0
 30999                           
 31000 ;; *************** function _RADIO_WritePower *****************
 31001 ;; Defined at:
 31002 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31003 ;; Parameters:    Size  Location     Type
 31004 ;;  power           1    wreg     char 
 31005 ;; Auto vars:     Size  Location     Type
 31006 ;;  power           1    6[BANK0 ] char 
 31007 ;;  paDac           1    5[BANK0 ] unsigned char 
 31008 ;;  ocp             1    4[BANK0 ] unsigned char 
 31009 ;; Return value:  Size  Location     Type
 31010 ;;                  1    wreg      void 
 31011 ;; Registers used:
 31012 ;;		wreg, status,2, status,0, cstack
 31013 ;; Tracked objects:
 31014 ;;		On entry : 0/0
 31015 ;;		On exit  : 0/0
 31016 ;;		Unchanged: 0/0
 31017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31019 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31021 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31022 ;;Total ram usage:        3 bytes
 31023 ;; Hardware stack levels used:    1
 31024 ;; Hardware stack levels required when called:   10
 31025 ;; This function calls:
 31026 ;;		_RADIO_RegisterRead
 31027 ;;		_RADIO_RegisterWrite
 31028 ;; This function is called by:
 31029 ;;		_RADIO_WriteConfiguration
 31030 ;; This function uses a non-reentrant model
 31031 ;;
 31032                           
 31033                           	psect	text190
 31034  0071A4                     __ptext190:
 31035                           	opt callstack 0
 31036  0071A4                     _RADIO_WritePower:
 31037                           	opt callstack 15
 31038                           
 31039                           ;incstack = 0
 31040                           ;RADIO_WritePower@power stored from wreg
 31041  0071A4  0100               	movlb	0	; () banked
 31042  0071A6  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31043                           
 31044                           ;radio_driver_SX1276.c: 344: uint8_t paDac;;radio_driver_SX1276.c: 345: uint8_t ocp;;rad
      +                          io_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 31045  0071A8  0101               	movlb	1	; () banked
 31046  0071AA  5146               	movf	(_RadioConfiguration+29)& (0+255),w,b
 31047  0071AC  A4D8               	btfss	status,2,c
 31048  0071AE  D02F               	goto	l18280
 31049                           
 31050                           ; BSR set to: 1
 31051                           ;radio_driver_SX1276.c: 348: {;radio_driver_SX1276.c: 350: if (power < -3)
 31052  0071B0  0100               	movlb	0	; () banked
 31053  0071B2  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31054  0071B4  0A80               	xorlw	128
 31055  0071B6  0F83               	addlw	131
 31056  0071B8  B0D8               	btfsc	status,0,c
 31057  0071BA  D002               	goto	l18260
 31058                           
 31059                           ; BSR set to: 0
 31060                           ;radio_driver_SX1276.c: 351: {;radio_driver_SX1276.c: 352: power = -3;
 31061  0071BC  0EFD               	movlw	253
 31062  0071BE  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31063  0071C0                     l18260:
 31064                           
 31065                           ; BSR set to: 0
 31066                           ;radio_driver_SX1276.c: 353: };radio_driver_SX1276.c: 354: if (power > 15)
 31067  0071C0  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31068  0071C2  0A80               	xorlw	128
 31069  0071C4  0F70               	addlw	-144
 31070  0071C6  A0D8               	btfss	status,0,c
 31071  0071C8  D002               	goto	l18264
 31072                           
 31073                           ; BSR set to: 0
 31074                           ;radio_driver_SX1276.c: 355: {;radio_driver_SX1276.c: 356: power = 15;
 31075  0071CA  0E0F               	movlw	15
 31076  0071CC  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31077  0071CE                     l18264:
 31078                           
 31079                           ; BSR set to: 0
 31080                           ;radio_driver_SX1276.c: 357: };radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x
      +                          4D);
 31081  0071CE  0E4D               	movlw	77
 31082  0071D0  EC38  F051         	call	_RADIO_RegisterRead
 31083  0071D4  0100               	movlb	0	; () banked
 31084  0071D6  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 31085                           
 31086                           ; BSR set to: 0
 31087                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 31088  0071D8  0EF8               	movlw	248
 31089  0071DA  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31090                           
 31091                           ; BSR set to: 0
 31092                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 31093  0071DC  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31094                           
 31095                           ; BSR set to: 0
 31096                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 31097  0071DE  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31098  0071E2  0E4D               	movlw	77
 31099  0071E4  EC08  F052         	call	_RADIO_RegisterWrite
 31100                           
 31101                           ;radio_driver_SX1276.c: 364: if (power < 0)
 31102  0071E8  0100               	movlb	0	; () banked
 31103  0071EA  AF66               	btfss	RADIO_WritePower@power& (0+255),7,b
 31104  0071EC  D009               	goto	l18278
 31105                           
 31106                           ; BSR set to: 0
 31107                           ;radio_driver_SX1276.c: 365: {;radio_driver_SX1276.c: 369: power += 3;
 31108  0071EE  0E03               	movlw	3
 31109  0071F0  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 31110                           
 31111                           ; BSR set to: 0
 31112                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 31113  0071F2  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31114  0071F4  0920               	iorlw	32
 31115  0071F6  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31116  0071F8  0E09               	movlw	9
 31117  0071FA  EC08  F052         	call	_RADIO_RegisterWrite
 31118                           
 31119                           ;radio_driver_SX1276.c: 371: }
 31120  0071FE  0012               	return	
 31121  007200                     l18278:
 31122                           
 31123                           ; BSR set to: 0
 31124                           ;radio_driver_SX1276.c: 372: else;radio_driver_SX1276.c: 373: {;radio_driver_SX1276.c: 3
      +                          77: RADIO_RegisterWrite(0x09, 0x70 | power);
 31125  007200  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31126  007202  0970               	iorlw	112
 31127  007204  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31128  007206  0E09               	movlw	9
 31129  007208  EC08  F052         	call	_RADIO_RegisterWrite
 31130  00720C  0012               	return	
 31131  00720E                     l18280:
 31132                           
 31133                           ; BSR set to: 1
 31134                           ;radio_driver_SX1276.c: 380: else;radio_driver_SX1276.c: 381: {;radio_driver_SX1276.c: 3
      +                          85: if (power < 2)
 31135  00720E  0100               	movlb	0	; () banked
 31136  007210  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31137  007212  0A80               	xorlw	128
 31138  007214  0F7E               	addlw	-130
 31139  007216  B0D8               	btfsc	status,0,c
 31140  007218  D002               	goto	l18284
 31141                           
 31142                           ; BSR set to: 0
 31143                           ;radio_driver_SX1276.c: 386: {;radio_driver_SX1276.c: 387: power = 2;
 31144  00721A  0E02               	movlw	2
 31145  00721C  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31146  00721E                     l18284:
 31147                           
 31148                           ; BSR set to: 0
 31149                           ;radio_driver_SX1276.c: 388: };radio_driver_SX1276.c: 391: if (power >= 20)
 31150  00721E  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31151  007220  0A80               	xorlw	128
 31152  007222  0F6C               	addlw	-148
 31153  007224  A0D8               	btfss	status,0,c
 31154  007226  D002               	goto	l18288
 31155                           
 31156                           ; BSR set to: 0
 31157                           ;radio_driver_SX1276.c: 392: {;radio_driver_SX1276.c: 393: power = 20;
 31158  007228  0E14               	movlw	20
 31159  00722A  D006               	goto	L31
 31160  00722C                     l18288:
 31161                           
 31162                           ; BSR set to: 0
 31163                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 31164  00722C  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31165  00722E  0A80               	xorlw	128
 31166  007230  0F6E               	addlw	-146
 31167  007232  A0D8               	btfss	status,0,c
 31168  007234  D002               	goto	l18292
 31169                           
 31170                           ; BSR set to: 0
 31171                           ;radio_driver_SX1276.c: 396: {;radio_driver_SX1276.c: 397: power = 17;
 31172  007236  0E11               	movlw	17
 31173  007238                     L31:
 31174  007238  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31175  00723A                     l18292:
 31176                           
 31177                           ; BSR set to: 0
 31178                           ;radio_driver_SX1276.c: 398: };radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B
      +                          );
 31179  00723A  0E0B               	movlw	11
 31180  00723C  EC38  F051         	call	_RADIO_RegisterRead
 31181  007240  0100               	movlb	0	; () banked
 31182  007242  6F64               	movwf	RADIO_WritePower@ocp& (0+255),b
 31183                           
 31184                           ; BSR set to: 0
 31185                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 31186  007244  0E4D               	movlw	77
 31187  007246  EC38  F051         	call	_RADIO_RegisterRead
 31188  00724A  0100               	movlb	0	; () banked
 31189  00724C  6F65               	movwf	RADIO_WritePower@paDac& (0+255),b
 31190                           
 31191                           ; BSR set to: 0
 31192                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 31193  00724E  0EF8               	movlw	248
 31194  007250  1765               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31195                           
 31196                           ; BSR set to: 0
 31197                           ;radio_driver_SX1276.c: 403: if (power == 20)
 31198  007252  0E14               	movlw	20
 31199  007254  1966               	xorwf	RADIO_WritePower@power& (0+255),w,b
 31200  007256  A4D8               	btfss	status,2,c
 31201  007258  D006               	goto	l18306
 31202                           
 31203                           ; BSR set to: 0
 31204                           ;radio_driver_SX1276.c: 404: {;radio_driver_SX1276.c: 405: paDac |= 0x07;
 31205  00725A  0E07               	movlw	7
 31206  00725C  1365               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 31207                           
 31208                           ; BSR set to: 0
 31209                           ;radio_driver_SX1276.c: 406: power = 15;
 31210  00725E  0E0F               	movlw	15
 31211  007260  6F66               	movwf	RADIO_WritePower@power& (0+255),b
 31212                           
 31213                           ; BSR set to: 0
 31214                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 31215  007262  9B64               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 31216                           
 31217                           ;radio_driver_SX1276.c: 408: }
 31218  007264  D004               	goto	l18312
 31219  007266                     l18306:
 31220                           
 31221                           ; BSR set to: 0
 31222                           ;radio_driver_SX1276.c: 409: else;radio_driver_SX1276.c: 410: {;radio_driver_SX1276.c: 4
      +                          11: paDac |= 0x04;
 31223  007266  8565               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31224                           
 31225                           ; BSR set to: 0
 31226                           ;radio_driver_SX1276.c: 412: power -= 2;
 31227  007268  0EFE               	movlw	254
 31228  00726A  2766               	addwf	RADIO_WritePower@power& (0+255),f,b
 31229                           
 31230                           ; BSR set to: 0
 31231                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 31232  00726C  8B64               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 31233  00726E                     l18312:
 31234                           
 31235                           ; BSR set to: 0
 31236                           ;radio_driver_SX1276.c: 414: };radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paD
      +                          ac);
 31237  00726E  C065  F062         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31238  007272  0E4D               	movlw	77
 31239  007274  EC08  F052         	call	_RADIO_RegisterWrite
 31240                           
 31241                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 31242  007278  0100               	movlb	0	; () banked
 31243  00727A  5166               	movf	RADIO_WritePower@power& (0+255),w,b
 31244  00727C  0980               	iorlw	128
 31245  00727E  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31246  007280  0E09               	movlw	9
 31247  007282  EC08  F052         	call	_RADIO_RegisterWrite
 31248                           
 31249                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 31250  007286  C064  F062         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 31251  00728A  0E0B               	movlw	11
 31252  00728C  EC08  F052         	call	_RADIO_RegisterWrite
 31253  007290  0012               	return		;funcret
 31254  007292                     __end_of_RADIO_WritePower:
 31255                           	opt callstack 0
 31256                           
 31257 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 31258 ;; Defined at:
 31259 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31260 ;; Parameters:    Size  Location     Type
 31261 ;;  frequencyDev    4   13[BANK0 ] unsigned long 
 31262 ;; Auto vars:     Size  Location     Type
 31263 ;;  num             4   17[BANK0 ] unsigned long 
 31264 ;; Return value:  Size  Location     Type
 31265 ;;                  1    wreg      void 
 31266 ;; Registers used:
 31267 ;;		wreg, status,2, status,0, cstack
 31268 ;; Tracked objects:
 31269 ;;		On entry : 0/0
 31270 ;;		On exit  : 0/0
 31271 ;;		Unchanged: 0/0
 31272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31274 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31276 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31277 ;;Total ram usage:        8 bytes
 31278 ;; Hardware stack levels used:    1
 31279 ;; Hardware stack levels required when called:   10
 31280 ;; This function calls:
 31281 ;;		_RADIO_RegisterWrite
 31282 ;;		___lldiv
 31283 ;; This function is called by:
 31284 ;;		_RADIO_WriteConfiguration
 31285 ;; This function uses a non-reentrant model
 31286 ;;
 31287                           
 31288                           	psect	text191
 31289  008D30                     __ptext191:
 31290                           	opt callstack 0
 31291  008D30                     _RADIO_WriteFSKFrequencyDeviation:
 31292                           	opt callstack 15
 31293                           
 31294                           ;radio_driver_SX1276.c: 296: uint32_t num;;radio_driver_SX1276.c: 303: num = frequencyDe
      +                          viation;
 31295                           
 31296                           ;incstack = 0
 31297  008D30  C06D  F071         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 31298  008D34  C06E  F072         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 31299  008D38  C06F  F073         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 31300  008D3C  C070  F074         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 31301                           
 31302                           ;radio_driver_SX1276.c: 304: num <<= (8);
 31303  008D40  C073  F074         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 31304  008D44  C072  F073         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 31305  008D48  C071  F072         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 31306  008D4C  0100               	movlb	0	; () banked
 31307  008D4E  6B71               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 31308                           
 31309                           ; BSR set to: 0
 31310                           ;radio_driver_SX1276.c: 305: num /= 15625;
 31311  008D50  C071  F060         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 31312  008D54  C072  F061         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 31313  008D58  C073  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 31314  008D5C  C074  F063         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 31315  008D60  0E09               	movlw	9
 31316  008D62  6F64               	movwf	___lldiv@divisor& (0+255),b
 31317  008D64  0E3D               	movlw	61
 31318  008D66  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 31319  008D68  0E00               	movlw	0
 31320  008D6A  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 31321  008D6C  0E00               	movlw	0
 31322  008D6E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 31323  008D70  ECD9  F042         	call	___lldiv	;wreg free
 31324  008D74  C060  F071         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 31325  008D78  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 31326  008D7C  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 31327  008D80  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 31328                           
 31329                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 31330  008D84  C072  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 31331  008D88  0E04               	movlw	4
 31332  008D8A  EC08  F052         	call	_RADIO_RegisterWrite
 31333                           
 31334                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 31335  008D8E  C071  F062         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 31336  008D92  0E05               	movlw	5
 31337  008D94  EC08  F052         	call	_RADIO_RegisterWrite
 31338  008D98  0012               	return		;funcret
 31339  008D9A                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 31340                           	opt callstack 0
 31341                           
 31342 ;; *************** function _RADIO_WriteFSKBitRate *****************
 31343 ;; Defined at:
 31344 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31345 ;; Parameters:    Size  Location     Type
 31346 ;;  bitRate         4   13[BANK0 ] unsigned long 
 31347 ;; Auto vars:     Size  Location     Type
 31348 ;;  num             4   17[BANK0 ] unsigned long 
 31349 ;; Return value:  Size  Location     Type
 31350 ;;                  1    wreg      void 
 31351 ;; Registers used:
 31352 ;;		wreg, status,2, status,0, cstack
 31353 ;; Tracked objects:
 31354 ;;		On entry : 0/0
 31355 ;;		On exit  : 0/0
 31356 ;;		Unchanged: 0/0
 31357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31358 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31359 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31361 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31362 ;;Total ram usage:        8 bytes
 31363 ;; Hardware stack levels used:    1
 31364 ;; Hardware stack levels required when called:   10
 31365 ;; This function calls:
 31366 ;;		_RADIO_RegisterWrite
 31367 ;;		___lldiv
 31368 ;; This function is called by:
 31369 ;;		_RADIO_WriteConfiguration
 31370 ;; This function uses a non-reentrant model
 31371 ;;
 31372                           
 31373                           	psect	text192
 31374  008E02                     __ptext192:
 31375                           	opt callstack 0
 31376  008E02                     _RADIO_WriteFSKBitRate:
 31377                           	opt callstack 15
 31378                           
 31379                           ;radio_driver_SX1276.c: 318: uint32_t num;;radio_driver_SX1276.c: 320: num = 32000000;
 31380                           
 31381                           ;incstack = 0
 31382  008E02  0E00               	movlw	0
 31383  008E04  0100               	movlb	0	; () banked
 31384  008E06  6F71               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 31385  008E08  0E48               	movlw	72
 31386  008E0A  6F72               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 31387  008E0C  0EE8               	movlw	232
 31388  008E0E  6F73               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 31389  008E10  0E01               	movlw	1
 31390  008E12  6F74               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 31391                           
 31392                           ; BSR set to: 0
 31393                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 31394  008E14  C071  F060         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 31395  008E18  C072  F061         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 31396  008E1C  C073  F062         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 31397  008E20  C074  F063         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 31398  008E24  C06D  F064         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 31399  008E28  C06E  F065         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 31400  008E2C  C06F  F066         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 31401  008E30  C070  F067         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 31402  008E34  ECD9  F042         	call	___lldiv	;wreg free
 31403  008E38  C060  F071         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 31404  008E3C  C061  F072         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 31405  008E40  C062  F073         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 31406  008E44  C063  F074         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 31407                           
 31408                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 31409  008E48  C072  F062         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 31410  008E4C  0E02               	movlw	2
 31411  008E4E  EC08  F052         	call	_RADIO_RegisterWrite
 31412                           
 31413                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 31414  008E52  C071  F062         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 31415  008E56  0E03               	movlw	3
 31416  008E58  EC08  F052         	call	_RADIO_RegisterWrite
 31417                           
 31418                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 31419  008E5C  0E00               	movlw	0
 31420  008E5E  0100               	movlb	0	; () banked
 31421  008E60  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31422  008E62  0E5D               	movlw	93
 31423  008E64  EC08  F052         	call	_RADIO_RegisterWrite
 31424  008E68  0012               	return		;funcret
 31425  008E6A                     __end_of_RADIO_WriteFSKBitRate:
 31426                           	opt callstack 0
 31427                           
 31428 ;; *************** function _PrepareJoinRequestFrame *****************
 31429 ;; Defined at:
 31430 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31431 ;; Parameters:    Size  Location     Type
 31432 ;;		None
 31433 ;; Auto vars:     Size  Location     Type
 31434 ;;  mic             4  115[BANK0 ] unsigned long 
 31435 ;;  bufferIndex     1  121[BANK0 ] unsigned char 
 31436 ;;  iCtr            1  120[BANK0 ] unsigned char 
 31437 ;;  mhdr            1  119[BANK0 ] struct .
 31438 ;; Return value:  Size  Location     Type
 31439 ;;                  1    wreg      unsigned char 
 31440 ;; Registers used:
 31441 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31442 ;; Tracked objects:
 31443 ;;		On entry : 0/0
 31444 ;;		On exit  : 0/0
 31445 ;;		Unchanged: 0/0
 31446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31448 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31449 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31450 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31451 ;;Total ram usage:        9 bytes
 31452 ;; Hardware stack levels used:    1
 31453 ;; Hardware stack levels required when called:   13
 31454 ;; This function calls:
 31455 ;;		_ComputeMic
 31456 ;;		_Random
 31457 ;;		_memcpy
 31458 ;;		_memset
 31459 ;; This function is called by:
 31460 ;;		_LORAWAN_Join
 31461 ;; This function uses a non-reentrant model
 31462 ;;
 31463                           
 31464                           	psect	text193
 31465  00567A                     __ptext193:
 31466                           	opt callstack 0
 31467  00567A                     _PrepareJoinRequestFrame:
 31468                           	opt callstack 16
 31469                           
 31470                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 31471                           
 31472                           ;incstack = 0
 31473  00567A  0E00               	movlw	0
 31474  00567C  0100               	movlb	0	; () banked
 31475  00567E  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31476                           
 31477                           ; BSR set to: 0
 31478                           ;lorawan.c: 1809: Mhdr_t mhdr;;lorawan.c: 1810: uint32_t mic;;lorawan.c: 1812: memset (m
      +                          acBuffer, 0, sizeof(macBuffer) );
 31479  005680  0EB8               	movlw	low _macBuffer
 31480  005682  6F60               	movwf	memset@p1& (0+255),b
 31481  005684  0E06               	movlw	high _macBuffer
 31482  005686  6F61               	movwf	(memset@p1+1)& (0+255),b
 31483  005688  0E00               	movlw	0
 31484  00568A  6F63               	movwf	(memset@c+1)& (0+255),b
 31485  00568C  0E00               	movlw	0
 31486  00568E  6F62               	movwf	memset@c& (0+255),b
 31487  005690  0E01               	movlw	1
 31488  005692  6F65               	movwf	(memset@n+1)& (0+255),b
 31489  005694  0E0F               	movlw	15
 31490  005696  6F64               	movwf	memset@n& (0+255),b
 31491  005698  EC0D  F050         	call	_memset	;wreg free
 31492                           
 31493                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 31494  00569C  0E1F               	movlw	-225
 31495  00569E  0100               	movlb	0	; () banked
 31496  0056A0  17D7               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31497                           
 31498                           ; BSR set to: 0
 31499                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 31500  0056A2  0EFC               	movlw	-4
 31501  0056A4  17D7               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31502                           
 31503                           ; BSR set to: 0
 31504                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 31505  0056A6  0EE3               	movlw	-29
 31506  0056A8  17D7               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 31507                           
 31508                           ; BSR set to: 0
 31509                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 31510  0056AA  EE26  F0B8         	lfsr	2,_macBuffer
 31511  0056AE  C0D7  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 31512                           
 31513                           ; BSR set to: 0
 31514  0056B2  2BD9               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 31515                           
 31516                           ; BSR set to: 0
 31517                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 31518  0056B4  0E00               	movlw	0
 31519  0056B6  6FD8               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 31520  0056B8                     l21640:
 31521                           
 31522                           ; BSR set to: 0
 31523                           ;lorawan.c: 1821: {;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationPara
      +                          meters.applicationEui.buffer[7 - iCtr];
 31524  0056B8  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31525  0056BA  085E               	sublw	low (_loRa+89)
 31526  0056BC  6ED9               	movwf	fsr2l,c
 31527  0056BE  0E00               	movlw	0
 31528  0056C0  A0D8               	btfss	status,0,c
 31529  0056C2  2AE8               	incf	wreg,f,c
 31530  0056C4  0802               	sublw	high (_loRa+89)
 31531  0056C6  6EDA               	movwf	fsr2h,c
 31532  0056C8  0EB8               	movlw	low _macBuffer
 31533  0056CA  6FD1               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 31534  0056CC  0E06               	movlw	high _macBuffer
 31535  0056CE  6FD2               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 31536  0056D0  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31537  0056D2  27D1               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 31538  0056D4  0E00               	movlw	0
 31539  0056D6  23D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 31540  0056D8  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31541  0056DA  25D1               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 31542  0056DC  6EE9               	movwf	fsr0l,c
 31543  0056DE  0E00               	movlw	0
 31544  0056E0  21D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 31545  0056E2  6EEA               	movwf	fsr0h,c
 31546  0056E4  CFDF FFEF          	movff	indf2,indf0
 31547                           
 31548                           ; BSR set to: 0
 31549  0056E8  2BD8               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 31550                           
 31551                           ; BSR set to: 0
 31552  0056EA  0E07               	movlw	7
 31553  0056EC  65D8               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 31554  0056EE  D7E4               	goto	l21640
 31555                           
 31556                           ; BSR set to: 0
 31557                           ;lorawan.c: 1823: };lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationP
      +                          arameters.applicationEui);
 31558  0056F0  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31559  0056F2  0F08               	addlw	8
 31560  0056F4  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31561                           
 31562                           ; BSR set to: 0
 31563                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 31564  0056F6  0E00               	movlw	0
 31565  0056F8  6FD8               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 31566  0056FA                     l21654:
 31567                           
 31568                           ; BSR set to: 0
 31569                           ;lorawan.c: 1828: {;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationPara
      +                          meters.deviceEui.buffer[7 - iCtr];
 31570  0056FA  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31571  0056FC  0866               	sublw	low (_loRa+97)
 31572  0056FE  6ED9               	movwf	fsr2l,c
 31573  005700  0E00               	movlw	0
 31574  005702  A0D8               	btfss	status,0,c
 31575  005704  2AE8               	incf	wreg,f,c
 31576  005706  0802               	sublw	high (_loRa+97)
 31577  005708  6EDA               	movwf	fsr2h,c
 31578  00570A  0EB8               	movlw	low _macBuffer
 31579  00570C  6FD1               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 31580  00570E  0E06               	movlw	high _macBuffer
 31581  005710  6FD2               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 31582  005712  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31583  005714  27D1               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 31584  005716  0E00               	movlw	0
 31585  005718  23D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 31586  00571A  51D8               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 31587  00571C  25D1               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 31588  00571E  6EE9               	movwf	fsr0l,c
 31589  005720  0E00               	movlw	0
 31590  005722  21D2               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 31591  005724  6EEA               	movwf	fsr0h,c
 31592  005726  CFDF FFEF          	movff	indf2,indf0
 31593                           
 31594                           ; BSR set to: 0
 31595  00572A  2BD8               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 31596                           
 31597                           ; BSR set to: 0
 31598  00572C  0E07               	movlw	7
 31599  00572E  65D8               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 31600  005730  D7E4               	goto	l21654
 31601                           
 31602                           ; BSR set to: 0
 31603                           ;lorawan.c: 1830: };lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activation
      +                          Parameters.deviceEui );
 31604  005732  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31605  005734  0F08               	addlw	8
 31606  005736  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31607                           
 31608                           ; BSR set to: 0
 31609                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 31610  005738  0EFF               	movlw	255
 31611  00573A  6FA6               	movwf	(Random@max+1)& (0+255),b
 31612  00573C  69A5               	setf	Random@max& (0+255),b
 31613  00573E  ECB6  F051         	call	_Random	;wreg free
 31614  005742  C0A5  F2D7         	movff	?_Random,_loRa+210
 31615  005746  C0A6  F2D8         	movff	?_Random+1,_loRa+211
 31616                           
 31617                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 31618  00574A  0EB8               	movlw	low _macBuffer
 31619  00574C  0100               	movlb	0	; () banked
 31620  00574E  25D9               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31621  005750  6F60               	movwf	memcpy@d1& (0+255),b
 31622  005752  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 31623  005754  0E06               	movlw	high _macBuffer
 31624  005756  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 31625  005758  0ED7               	movlw	low (_loRa+210)
 31626  00575A  6F62               	movwf	memcpy@s1& (0+255),b
 31627  00575C  0E02               	movlw	high (_loRa+210)
 31628  00575E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31629  005760  0E00               	movlw	0
 31630  005762  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31631  005764  0E02               	movlw	2
 31632  005766  6F64               	movwf	memcpy@n& (0+255),b
 31633  005768  EC2F  F048         	call	_memcpy	;wreg free
 31634                           
 31635                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 31636  00576C  0100               	movlb	0	; () banked
 31637  00576E  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31638  005770  0F02               	addlw	2
 31639  005772  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31640                           
 31641                           ; BSR set to: 0
 31642                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 31643  005774  0E47               	movlw	low (_loRa+66)
 31644  005776  6FC8               	movwf	ComputeMic@key& (0+255),b
 31645  005778  0E02               	movlw	high (_loRa+66)
 31646  00577A  6FC9               	movwf	(ComputeMic@key+1)& (0+255),b
 31647  00577C  0EB8               	movlw	low _macBuffer
 31648  00577E  6FCA               	movwf	ComputeMic@buffer& (0+255),b
 31649  005780  0E06               	movlw	high _macBuffer
 31650  005782  6FCB               	movwf	(ComputeMic@buffer+1)& (0+255),b
 31651  005784  C0D9  F0CC         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 31652  005788  ECCD  F047         	call	_ComputeMic	;wreg free
 31653  00578C  C0C8  F0D3         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 31654  005790  C0C9  F0D4         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 31655  005794  C0CA  F0D5         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 31656  005798  C0CB  F0D6         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 31657                           
 31658                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 31659  00579C  0EB8               	movlw	low _macBuffer
 31660  00579E  0100               	movlb	0	; () banked
 31661  0057A0  25D9               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31662  0057A2  6F60               	movwf	memcpy@d1& (0+255),b
 31663  0057A4  6B61               	clrf	(memcpy@d1+1)& (0+255),b
 31664  0057A6  0E06               	movlw	high _macBuffer
 31665  0057A8  2361               	addwfc	(memcpy@d1+1)& (0+255),f,b
 31666  0057AA  0ED3               	movlw	low PrepareJoinRequestFrame@mic
 31667  0057AC  6F62               	movwf	memcpy@s1& (0+255),b
 31668  0057AE  0E00               	movlw	high PrepareJoinRequestFrame@mic
 31669  0057B0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 31670  0057B2  0E00               	movlw	0
 31671  0057B4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 31672  0057B6  0E04               	movlw	4
 31673  0057B8  6F64               	movwf	memcpy@n& (0+255),b
 31674  0057BA  EC2F  F048         	call	_memcpy	;wreg free
 31675                           
 31676                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 31677  0057BE  0100               	movlb	0	; () banked
 31678  0057C0  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31679  0057C2  0F04               	addlw	4
 31680  0057C4  6FD9               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 31681                           
 31682                           ; BSR set to: 0
 31683                           ;lorawan.c: 1842: return bufferIndex;
 31684  0057C6  51D9               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 31685                           
 31686                           ; BSR set to: 0
 31687  0057C8  0012               	return		;funcret
 31688  0057CA                     __end_of_PrepareJoinRequestFrame:
 31689                           	opt callstack 0
 31690                           
 31691 ;; *************** function _Random *****************
 31692 ;; Defined at:
 31693 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31694 ;; Parameters:    Size  Location     Type
 31695 ;;  max             2   69[BANK0 ] unsigned int 
 31696 ;; Auto vars:     Size  Location     Type
 31697 ;;		None
 31698 ;; Return value:  Size  Location     Type
 31699 ;;                  2   69[BANK0 ] unsigned int 
 31700 ;; Registers used:
 31701 ;;		wreg, status,2, status,0, cstack
 31702 ;; Tracked objects:
 31703 ;;		On entry : 0/0
 31704 ;;		On exit  : 0/0
 31705 ;;		Unchanged: 0/0
 31706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31711 ;;Total ram usage:        2 bytes
 31712 ;; Hardware stack levels used:    1
 31713 ;; Hardware stack levels required when called:    9
 31714 ;; This function calls:
 31715 ;;		___lwmod
 31716 ;;		_rand
 31717 ;; This function is called by:
 31718 ;;		_SearchAvailableChannel
 31719 ;;		_PrepareJoinRequestFrame
 31720 ;; This function uses a non-reentrant model
 31721 ;;
 31722                           
 31723                           	psect	text194
 31724  00A36C                     __ptext194:
 31725                           	opt callstack 0
 31726  00A36C                     _Random:
 31727                           	opt callstack 16
 31728                           
 31729                           ;lorawan.c: 1118: return (rand () % max);
 31730                           
 31731                           ; BSR set to: 0
 31732                           ;incstack = 0
 31733  00A36C  ECEB  F048         	call	_rand	;wreg free
 31734  00A370  C09E  F0A0         	movff	?_rand,___lwmod@dividend
 31735  00A374  C09F  F0A1         	movff	?_rand+1,___lwmod@dividend+1
 31736  00A378  C0A5  F0A2         	movff	Random@max,___lwmod@divisor
 31737  00A37C  C0A6  F0A3         	movff	Random@max+1,___lwmod@divisor+1
 31738  00A380  ECA0  F04C         	call	___lwmod	;wreg free
 31739  00A384  C0A0  F0A5         	movff	?___lwmod,?_Random
 31740  00A388  C0A1  F0A6         	movff	?___lwmod+1,?_Random+1
 31741  00A38C  0012               	return		;funcret
 31742  00A38E                     __end_of_Random:
 31743                           	opt callstack 0
 31744                           
 31745 ;; *************** function _rand *****************
 31746 ;; Defined at:
 31747 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 31748 ;; Parameters:    Size  Location     Type
 31749 ;;		None
 31750 ;; Auto vars:     Size  Location     Type
 31751 ;;		None
 31752 ;; Return value:  Size  Location     Type
 31753 ;;                  2   62[BANK0 ] int 
 31754 ;; Registers used:
 31755 ;;		wreg, status,2, status,0, cstack
 31756 ;; Tracked objects:
 31757 ;;		On entry : 0/0
 31758 ;;		On exit  : 0/0
 31759 ;;		Unchanged: 0/0
 31760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31765 ;;Total ram usage:        2 bytes
 31766 ;; Hardware stack levels used:    1
 31767 ;; Hardware stack levels required when called:    8
 31768 ;; This function calls:
 31769 ;;		___lmul
 31770 ;; This function is called by:
 31771 ;;		_Random
 31772 ;; This function uses a non-reentrant model
 31773 ;;
 31774                           
 31775                           	psect	text195
 31776  0091D6                     __ptext195:
 31777                           	opt callstack 0
 31778  0091D6                     _rand:
 31779                           	opt callstack 16
 31780                           
 31781                           ;incstack = 0
 31782  0091D6  C1EF  F092         	movff	_randx,___lmul@multiplier
 31783  0091DA  C1F0  F093         	movff	_randx+1,___lmul@multiplier+1
 31784  0091DE  C1F1  F094         	movff	_randx+2,___lmul@multiplier+2
 31785  0091E2  C1F2  F095         	movff	_randx+3,___lmul@multiplier+3
 31786  0091E6  0E6D               	movlw	109
 31787  0091E8  0100               	movlb	0	; () banked
 31788  0091EA  6F96               	movwf	___lmul@multiplicand& (0+255),b
 31789  0091EC  0E4E               	movlw	78
 31790  0091EE  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 31791  0091F0  0EC6               	movlw	198
 31792  0091F2  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 31793  0091F4  0E41               	movlw	65
 31794  0091F6  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 31795  0091F8  EC19  F049         	call	___lmul	;wreg free
 31796  0091FC  C092  F1EF         	movff	?___lmul,_randx
 31797  009200  C093  F1F0         	movff	?___lmul+1,_randx+1
 31798  009204  C094  F1F1         	movff	?___lmul+2,_randx+2
 31799  009208  C095  F1F2         	movff	?___lmul+3,_randx+3
 31800  00920C  0E39               	movlw	57
 31801  00920E  0101               	movlb	1	; () banked
 31802  009210  27EF               	addwf	_randx& (0+255),f,b
 31803  009212  0E30               	movlw	48
 31804  009214  23F0               	addwfc	(_randx+1)& (0+255),f,b
 31805  009216  0E00               	movlw	0
 31806  009218  23F1               	addwfc	(_randx+2)& (0+255),f,b
 31807  00921A  0E00               	movlw	0
 31808  00921C  23F2               	addwfc	(_randx+3)& (0+255),f,b
 31809                           
 31810                           ; BSR set to: 1
 31811  00921E  0EFF               	movlw	255
 31812  009220  15F1               	andwf	(_randx+2)& (0+255),w,b
 31813  009222  0100               	movlb	0	; () banked
 31814  009224  6F9E               	movwf	?_rand& (0+255),b
 31815  009226  0E7F               	movlw	127
 31816  009228  0101               	movlb	1	; () banked
 31817  00922A  15F2               	andwf	(_randx+3)& (0+255),w,b
 31818  00922C  0100               	movlb	0	; () banked
 31819  00922E  6F9F               	movwf	(?_rand+1)& (0+255),b
 31820                           
 31821                           ; BSR set to: 0
 31822  009230  0012               	return		;funcret
 31823  009232                     __end_of_rand:
 31824                           	opt callstack 0
 31825                           
 31826 ;; *************** function ___lwmod *****************
 31827 ;; Defined at:
 31828 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 31829 ;; Parameters:    Size  Location     Type
 31830 ;;  dividend        2   64[BANK0 ] unsigned int 
 31831 ;;  divisor         2   66[BANK0 ] unsigned int 
 31832 ;; Auto vars:     Size  Location     Type
 31833 ;;  counter         1   68[BANK0 ] unsigned char 
 31834 ;; Return value:  Size  Location     Type
 31835 ;;                  2   64[BANK0 ] unsigned int 
 31836 ;; Registers used:
 31837 ;;		wreg, status,2, status,0
 31838 ;; Tracked objects:
 31839 ;;		On entry : 0/0
 31840 ;;		On exit  : 0/0
 31841 ;;		Unchanged: 0/0
 31842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31843 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31846 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31847 ;;Total ram usage:        5 bytes
 31848 ;; Hardware stack levels used:    1
 31849 ;; Hardware stack levels required when called:    7
 31850 ;; This function calls:
 31851 ;;		Nothing
 31852 ;; This function is called by:
 31853 ;;		_Random
 31854 ;;		_uint16ToString
 31855 ;; This function uses a non-reentrant model
 31856 ;;
 31857                           
 31858                           	psect	text196
 31859  009940                     __ptext196:
 31860                           	opt callstack 0
 31861  009940                     ___lwmod:
 31862                           	opt callstack 20
 31863                           
 31864                           ; BSR set to: 0
 31865                           ;incstack = 0
 31866  009940  0100               	movlb	0	; () banked
 31867  009942  51A2               	movf	___lwmod@divisor& (0+255),w,b
 31868  009944  11A3               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 31869  009946  B4D8               	btfsc	status,2,c
 31870  009948  D018               	goto	l4008
 31871                           
 31872                           ; BSR set to: 0
 31873  00994A  0E01               	movlw	1
 31874  00994C  6FA4               	movwf	___lwmod@counter& (0+255),b
 31875  00994E  D004               	goto	l18392
 31876  009950                     l18390:
 31877                           
 31878                           ; BSR set to: 0
 31879  009950  90D8               	bcf	status,0,c
 31880  009952  37A2               	rlcf	___lwmod@divisor& (0+255),f,b
 31881  009954  37A3               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 31882  009956  2BA4               	incf	___lwmod@counter& (0+255),f,b
 31883  009958                     l18392:
 31884                           
 31885                           ; BSR set to: 0
 31886  009958  AFA3               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 31887  00995A  D7FA               	goto	l18390
 31888  00995C                     u19460:
 31889                           
 31890                           ; BSR set to: 0
 31891  00995C  51A2               	movf	___lwmod@divisor& (0+255),w,b
 31892  00995E  5DA0               	subwf	___lwmod@dividend& (0+255),w,b
 31893  009960  51A3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 31894  009962  59A1               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 31895  009964  A0D8               	btfss	status,0,c
 31896  009966  D004               	goto	l18398
 31897                           
 31898                           ; BSR set to: 0
 31899  009968  51A2               	movf	___lwmod@divisor& (0+255),w,b
 31900  00996A  5FA0               	subwf	___lwmod@dividend& (0+255),f,b
 31901  00996C  51A3               	movf	(___lwmod@divisor+1)& (0+255),w,b
 31902  00996E  5BA1               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 31903  009970                     l18398:
 31904                           
 31905                           ; BSR set to: 0
 31906  009970  90D8               	bcf	status,0,c
 31907  009972  33A3               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 31908  009974  33A2               	rrcf	___lwmod@divisor& (0+255),f,b
 31909                           
 31910                           ; BSR set to: 0
 31911  009976  2FA4               	decfsz	___lwmod@counter& (0+255),f,b
 31912  009978  D7F1               	goto	u19460
 31913  00997A                     l4008:
 31914                           
 31915                           ; BSR set to: 0
 31916  00997A  C0A0  F0A0         	movff	___lwmod@dividend,?___lwmod
 31917  00997E  C0A1  F0A1         	movff	___lwmod@dividend+1,?___lwmod+1
 31918                           
 31919                           ; BSR set to: 0
 31920  009982  0012               	return		;funcret
 31921  009984                     __end_of___lwmod:
 31922                           	opt callstack 0
 31923                           
 31924 ;; *************** function _ComputeMic *****************
 31925 ;; Defined at:
 31926 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31927 ;; Parameters:    Size  Location     Type
 31928 ;;  key             2  104[BANK0 ] PTR unsigned char 
 31929 ;;		 -> loRa.activationParameters(105), loRa(245), 
 31930 ;;  buffer          2  106[BANK0 ] PTR unsigned char 
 31931 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 31932 ;;  bufferLength    1  108[BANK0 ] unsigned char 
 31933 ;; Auto vars:     Size  Location     Type
 31934 ;;  mic             4  109[BANK0 ] unsigned long 
 31935 ;; Return value:  Size  Location     Type
 31936 ;;                  4  104[BANK0 ] unsigned long 
 31937 ;; Registers used:
 31938 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31939 ;; Tracked objects:
 31940 ;;		On entry : 0/0
 31941 ;;		On exit  : 0/0
 31942 ;;		Unchanged: 0/0
 31943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31944 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31945 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31947 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31948 ;;Total ram usage:        9 bytes
 31949 ;; Hardware stack levels used:    1
 31950 ;; Hardware stack levels required when called:   12
 31951 ;; This function calls:
 31952 ;;		_AESCmac
 31953 ;;		_memcpy
 31954 ;; This function is called by:
 31955 ;;		_LORAWAN_RxDone
 31956 ;;		_PrepareJoinRequestFrame
 31957 ;; This function uses a non-reentrant model
 31958 ;;
 31959                           
 31960                           	psect	text197
 31961  008F9A                     __ptext197:
 31962                           	opt callstack 0
 31963  008F9A                     _ComputeMic:
 31964                           	opt callstack 12
 31965                           
 31966                           ;lorawan.c: 2196: uint32_t mic = 0;
 31967                           
 31968                           ; BSR set to: 0
 31969                           ;incstack = 0
 31970  008F9A  0E00               	movlw	0
 31971  008F9C  0100               	movlb	0	; () banked
 31972  008F9E  6FCD               	movwf	ComputeMic@mic& (0+255),b
 31973  008FA0  0E00               	movlw	0
 31974  008FA2  6FCE               	movwf	(ComputeMic@mic+1)& (0+255),b
 31975  008FA4  0E00               	movlw	0
 31976  008FA6  6FCF               	movwf	(ComputeMic@mic+2)& (0+255),b
 31977  008FA8  0E00               	movlw	0
 31978  008FAA  6FD0               	movwf	(ComputeMic@mic+3)& (0+255),b
 31979                           
 31980                           ; BSR set to: 0
 31981                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 31982  008FAC  C0C8  F0BA         	movff	ComputeMic@key,AESCmac@key
 31983  008FB0  C0C9  F0BB         	movff	ComputeMic@key+1,AESCmac@key+1
 31984  008FB4  0E5F               	movlw	low _aesBuffer
 31985  008FB6  6FBC               	movwf	AESCmac@output& (0+255),b
 31986  008FB8  0E01               	movlw	high _aesBuffer
 31987  008FBA  6FBD               	movwf	(AESCmac@output+1)& (0+255),b
 31988  008FBC  C0CA  F0BE         	movff	ComputeMic@buffer,AESCmac@input
 31989  008FC0  C0CB  F0BF         	movff	ComputeMic@buffer+1,AESCmac@input+1
 31990  008FC4  C0CC  F0C0         	movff	ComputeMic@bufferLength,AESCmac@size
 31991  008FC8  ECAD  F00D         	call	_AESCmac	;wreg free
 31992                           
 31993                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 31994  008FCC  0ECD               	movlw	low ComputeMic@mic
 31995  008FCE  0100               	movlb	0	; () banked
 31996  008FD0  6F60               	movwf	memcpy@d1& (0+255),b
 31997  008FD2  0E00               	movlw	high ComputeMic@mic
 31998  008FD4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 31999  008FD6  0E5F               	movlw	low _aesBuffer
 32000  008FD8  6F62               	movwf	memcpy@s1& (0+255),b
 32001  008FDA  0E01               	movlw	high _aesBuffer
 32002  008FDC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32003  008FDE  0E00               	movlw	0
 32004  008FE0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32005  008FE2  0E04               	movlw	4
 32006  008FE4  6F64               	movwf	memcpy@n& (0+255),b
 32007  008FE6  EC2F  F048         	call	_memcpy	;wreg free
 32008                           
 32009                           ;lorawan.c: 2202: return mic;
 32010  008FEA  C0CD  F0C8         	movff	ComputeMic@mic,?_ComputeMic
 32011  008FEE  C0CE  F0C9         	movff	ComputeMic@mic+1,?_ComputeMic+1
 32012  008FF2  C0CF  F0CA         	movff	ComputeMic@mic+2,?_ComputeMic+2
 32013  008FF6  C0D0  F0CB         	movff	ComputeMic@mic+3,?_ComputeMic+3
 32014  008FFA  0012               	return		;funcret
 32015  008FFC                     __end_of_ComputeMic:
 32016                           	opt callstack 0
 32017                           
 32018 ;; *************** function _AESCmac *****************
 32019 ;; Defined at:
 32020 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32021 ;; Parameters:    Size  Location     Type
 32022 ;;  key             2   90[BANK0 ] PTR unsigned char 
 32023 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32024 ;;  output          2   92[BANK0 ] PTR unsigned char 
 32025 ;;		 -> aesBuffer(16), 
 32026 ;;  input           2   94[BANK0 ] PTR unsigned char 
 32027 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32028 ;;  size            1   96[BANK0 ] unsigned char 
 32029 ;; Auto vars:     Size  Location     Type
 32030 ;;  x              16   80[BANK1 ] unsigned char [16]
 32031 ;;  y              16   64[BANK1 ] unsigned char [16]
 32032 ;;  padded         16   48[BANK1 ] unsigned char [16]
 32033 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 32034 ;;  k1             16   16[BANK1 ] unsigned char [16]
 32035 ;;  k2             16    0[BANK1 ] unsigned char [16]
 32036 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 32037 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 32038 ;;  i               1  101[BANK1 ] unsigned char 
 32039 ;;  j               1  100[BANK1 ] unsigned char 
 32040 ;;  n               1   99[BANK1 ] unsigned char 
 32041 ;;  flag            1   98[BANK1 ] unsigned char 
 32042 ;; Return value:  Size  Location     Type
 32043 ;;                  1    wreg      void 
 32044 ;; Registers used:
 32045 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32046 ;; Tracked objects:
 32047 ;;		On entry : 0/0
 32048 ;;		On exit  : 0/0
 32049 ;;		Unchanged: 0/0
 32050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32051 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32052 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32053 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32054 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32055 ;;Total ram usage:      116 bytes
 32056 ;; Hardware stack levels used:    1
 32057 ;; Hardware stack levels required when called:   11
 32058 ;; This function calls:
 32059 ;;		_AESEncodeLoRa
 32060 ;;		_GenerateSubkey
 32061 ;;		_memcpy
 32062 ;;		_memset
 32063 ;; This function is called by:
 32064 ;;		_LORAWAN_RxDone
 32065 ;;		_AssemblePacket
 32066 ;;		_ComputeMic
 32067 ;; This function uses a non-reentrant model
 32068 ;;
 32069                           
 32070                           	psect	text198
 32071  001B5A                     __ptext198:
 32072                           	opt callstack 0
 32073  001B5A                     _AESCmac:
 32074                           	opt callstack 15
 32075                           
 32076                           ;incstack = 0
 32077  001B5A  0E00               	movlw	0
 32078  001B5C  0101               	movlb	1	; () banked
 32079  001B5E  6FD9               	movwf	AESCmac@i& (0+255),b
 32080  001B60  0E00               	movlw	0
 32081  001B62  6FD8               	movwf	AESCmac@j& (0+255),b
 32082                           
 32083                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 32084  001B64  0E00               	movlw	0
 32085  001B66  6FD6               	movwf	AESCmac@flag& (0+255),b
 32086                           
 32087                           ; BSR set to: 1
 32088                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 32089                           
 32090                           ; BSR set to: 1
 32091  001B68  C0BA  F092         	movff	AESCmac@key,GenerateSubkey@key
 32092  001B6C  C0BB  F093         	movff	AESCmac@key+1,GenerateSubkey@key+1
 32093  001B70  0E84               	movlw	low AESCmac@k1
 32094  001B72  0100               	movlb	0	; () banked
 32095  001B74  6F94               	movwf	GenerateSubkey@k1& (0+255),b
 32096  001B76  0E01               	movlw	high AESCmac@k1
 32097  001B78  6F95               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 32098  001B7A  0E74               	movlw	low AESCmac@k2
 32099  001B7C  6F96               	movwf	GenerateSubkey@k2& (0+255),b
 32100  001B7E  0E01               	movlw	high AESCmac@k2
 32101  001B80  6F97               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 32102  001B82  EC00  F02F         	call	_GenerateSubkey	;wreg free
 32103                           
 32104                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 32105  001B86  0100               	movlb	0	; () banked
 32106  001B88  51C0               	movf	AESCmac@size& (0+255),w,b
 32107  001B8A  6FC1               	movwf	??_AESCmac& (0+255),b
 32108  001B8C  6BC2               	clrf	(??_AESCmac+1)& (0+255),b
 32109  001B8E  0E0F               	movlw	15
 32110  001B90  27C1               	addwf	??_AESCmac& (0+255),f,b
 32111  001B92  0E00               	movlw	0
 32112  001B94  23C2               	addwfc	(??_AESCmac+1)& (0+255),f,b
 32113  001B96  0E04               	movlw	4
 32114  001B98  6FC3               	movwf	(??_AESCmac+2)& (0+255),b
 32115  001B9A                     u19965:
 32116  001B9A  35C2               	rlcf	(??_AESCmac+1)& (0+255),w,b
 32117  001B9C  33C2               	rrcf	(??_AESCmac+1)& (0+255),f,b
 32118  001B9E  33C1               	rrcf	??_AESCmac& (0+255),f,b
 32119  001BA0  2FC3               	decfsz	(??_AESCmac+2)& (0+255),f,b
 32120  001BA2  D7FB               	goto	u19965
 32121  001BA4  51C1               	movf	??_AESCmac& (0+255),w,b
 32122  001BA6  0101               	movlb	1	; () banked
 32123  001BA8  6FD7               	movwf	AESCmac@n& (0+255),b
 32124                           
 32125                           ; BSR set to: 1
 32126                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 32127  001BAA  51D7               	movf	AESCmac@n& (0+255),w,b
 32128  001BAC  A4D8               	btfss	status,2,c
 32129  001BAE  D004               	goto	l18790
 32130                           
 32131                           ; BSR set to: 1
 32132                           ;lorawan_aes_cmac.c: 53: {;lorawan_aes_cmac.c: 54: n = 1;
 32133  001BB0  0E01               	movlw	1
 32134  001BB2  6FD7               	movwf	AESCmac@n& (0+255),b
 32135                           
 32136                           ;lorawan_aes_cmac.c: 55: flag = 0;
 32137  001BB4  0E00               	movlw	0
 32138  001BB6  D00B               	goto	L32
 32139  001BB8                     l18790:
 32140                           
 32141                           ; BSR set to: 1
 32142                           ;lorawan_aes_cmac.c: 57: else;lorawan_aes_cmac.c: 58: {;lorawan_aes_cmac.c: 59: flag = !
      +                          (size % 16);
 32143  001BB8  C0C0  F0C1         	movff	AESCmac@size,??_AESCmac
 32144  001BBC  0E0F               	movlw	15
 32145  001BBE  0100               	movlb	0	; () banked
 32146  001BC0  17C1               	andwf	??_AESCmac& (0+255),f,b
 32147  001BC2  A4D8               	btfss	status,2,c
 32148  001BC4  D002               	goto	u19980
 32149  001BC6  0E01               	movlw	1
 32150  001BC8  D001               	goto	u19990
 32151  001BCA                     u19980:
 32152  001BCA  0E00               	movlw	0
 32153  001BCC                     u19990:
 32154  001BCC  0101               	movlb	1	; () banked
 32155  001BCE                     L32:
 32156  001BCE  6FD6               	movwf	AESCmac@flag& (0+255),b
 32157                           
 32158                           ; BSR set to: 1
 32159                           ;lorawan_aes_cmac.c: 60: };lorawan_aes_cmac.c: 62: if ( flag == 1 )
 32160  001BD0  05D6               	decf	AESCmac@flag& (0+255),w,b
 32161  001BD2  A4D8               	btfss	status,2,c
 32162  001BD4  D045               	goto	l18804
 32163                           
 32164                           ; BSR set to: 1
 32165                           ;lorawan_aes_cmac.c: 63: {;lorawan_aes_cmac.c: 64: j = 0;
 32166  001BD6  0E00               	movlw	0
 32167  001BD8  6FD8               	movwf	AESCmac@j& (0+255),b
 32168                           
 32169                           ; BSR set to: 1
 32170                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 32171  001BDA  51D7               	movf	AESCmac@n& (0+255),w,b
 32172  001BDC  0D10               	mullw	16
 32173  001BDE  50F3               	movf	prodl,w,c
 32174  001BE0  0FF0               	addlw	240
 32175  001BE2  6FD9               	movwf	AESCmac@i& (0+255),b
 32176  001BE4  D020               	goto	l18802
 32177  001BE6                     l18796:
 32178                           
 32179                           ; BSR set to: 0
 32180                           ;lorawan_aes_cmac.c: 66: {;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 32181  001BE6  0E94               	movlw	low AESCmac@mLast
 32182  001BE8  0101               	movlb	1	; () banked
 32183  001BEA  25D8               	addwf	AESCmac@j& (0+255),w,b
 32184  001BEC  6ED9               	movwf	fsr2l,c
 32185  001BEE  6ADA               	clrf	fsr2h,c
 32186  001BF0  0E01               	movlw	high AESCmac@mLast
 32187  001BF2  22DA               	addwfc	fsr2h,f,c
 32188  001BF4  0E84               	movlw	low AESCmac@k1
 32189  001BF6  25D8               	addwf	AESCmac@j& (0+255),w,b
 32190  001BF8  6EE9               	movwf	fsr0l,c
 32191  001BFA  6AEA               	clrf	fsr0h,c
 32192  001BFC  0E01               	movlw	high AESCmac@k1
 32193  001BFE  22EA               	addwfc	fsr0h,f,c
 32194  001C00  50EF               	movf	indf0,w,c
 32195  001C02  0100               	movlb	0	; () banked
 32196  001C04  6FC1               	movwf	??_AESCmac& (0+255),b
 32197  001C06  0101               	movlb	1	; () banked
 32198  001C08  51D9               	movf	AESCmac@i& (0+255),w,b
 32199  001C0A  0100               	movlb	0	; () banked
 32200  001C0C  25BE               	addwf	AESCmac@input& (0+255),w,b
 32201  001C0E  6EE9               	movwf	fsr0l,c
 32202  001C10  0101               	movlb	1	; () banked
 32203  001C12  0E00               	movlw	0
 32204  001C14  0100               	movlb	0	; () banked
 32205  001C16  21BF               	addwfc	(AESCmac@input+1)& (0+255),w,b
 32206  001C18  6EEA               	movwf	fsr0h,c
 32207  001C1A  50EF               	movf	indf0,w,c
 32208  001C1C  19C1               	xorwf	??_AESCmac& (0+255),w,b
 32209  001C1E  6EDF               	movwf	indf2,c
 32210                           
 32211                           ; BSR set to: 0
 32212                           ;lorawan_aes_cmac.c: 68: j++;
 32213  001C20  0101               	movlb	1	; () banked
 32214  001C22  2BD8               	incf	AESCmac@j& (0+255),f,b
 32215                           
 32216                           ; BSR set to: 1
 32217  001C24  2BD9               	incf	AESCmac@i& (0+255),f,b
 32218  001C26                     l18802:
 32219                           
 32220                           ; BSR set to: 1
 32221  001C26  51D7               	movf	AESCmac@n& (0+255),w,b
 32222  001C28  0100               	movlb	0	; () banked
 32223  001C2A  6FC1               	movwf	??_AESCmac& (0+255),b
 32224  001C2C  6BC2               	clrf	(??_AESCmac+1)& (0+255),b
 32225  001C2E  3BC1               	swapf	??_AESCmac& (0+255),f,b
 32226  001C30  3BC2               	swapf	(??_AESCmac+1)& (0+255),f,b
 32227  001C32  0EF0               	movlw	240
 32228  001C34  17C2               	andwf	(??_AESCmac+1)& (0+255),f,b
 32229  001C36  51C1               	movf	??_AESCmac& (0+255),w,b
 32230  001C38  0B0F               	andlw	15
 32231  001C3A  13C2               	iorwf	(??_AESCmac+1)& (0+255),f,b
 32232  001C3C  0EF0               	movlw	240
 32233  001C3E  17C1               	andwf	??_AESCmac& (0+255),f,b
 32234  001C40  0101               	movlb	1	; () banked
 32235  001C42  51D9               	movf	AESCmac@i& (0+255),w,b
 32236  001C44  0100               	movlb	0	; () banked
 32237  001C46  6FC3               	movwf	(??_AESCmac+2)& (0+255),b
 32238  001C48  6BC4               	clrf	(??_AESCmac+3)& (0+255),b
 32239  001C4A  51C1               	movf	??_AESCmac& (0+255),w,b
 32240  001C4C  5DC3               	subwf	(??_AESCmac+2)& (0+255),w,b
 32241  001C4E  51C4               	movf	(??_AESCmac+3)& (0+255),w,b
 32242  001C50  0A80               	xorlw	128
 32243  001C52  6FC5               	movwf	(??_AESCmac+4)& (0+255),b
 32244  001C54  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32245  001C56  0A80               	xorlw	128
 32246  001C58  59C5               	subwfb	(??_AESCmac+4)& (0+255),w,b
 32247  001C5A  B0D8               	btfsc	status,0,c
 32248  001C5C  D069               	goto	u20050
 32249  001C5E  D7C3               	goto	l18796
 32250  001C60                     l18804:
 32251                           
 32252                           ; BSR set to: 1
 32253                           ;lorawan_aes_cmac.c: 71: else;lorawan_aes_cmac.c: 72: {;lorawan_aes_cmac.c: 74: ptr = &i
      +                          nput[size - (size%16)];
 32254  001C60  0100               	movlb	0	; () banked
 32255  001C62  51C0               	movf	AESCmac@size& (0+255),w,b
 32256  001C64  25BE               	addwf	AESCmac@input& (0+255),w,b
 32257  001C66  6FC1               	movwf	??_AESCmac& (0+255),b
 32258  001C68  0E00               	movlw	0
 32259  001C6A  21BF               	addwfc	(AESCmac@input+1)& (0+255),w,b
 32260  001C6C  6FC2               	movwf	(??_AESCmac+1)& (0+255),b
 32261  001C6E  C0C0  F0C3         	movff	AESCmac@size,??_AESCmac+2
 32262  001C72  0E0F               	movlw	15
 32263  001C74  17C3               	andwf	(??_AESCmac+2)& (0+255),f,b
 32264  001C76  51C3               	movf	(??_AESCmac+2)& (0+255),w,b
 32265  001C78  5DC1               	subwf	??_AESCmac& (0+255),w,b
 32266  001C7A  0101               	movlb	1	; () banked
 32267  001C7C  6FD4               	movwf	AESCmac@ptr& (0+255),b
 32268  001C7E  0100               	movlb	0	; () banked
 32269  001C80  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32270  001C82  A0D8               	btfss	status,0,c
 32271  001C84  05C2               	decf	(??_AESCmac+1)& (0+255),w,b
 32272  001C86  0101               	movlb	1	; () banked
 32273  001C88  6FD5               	movwf	(AESCmac@ptr+1)& (0+255),b
 32274                           
 32275                           ; BSR set to: 1
 32276                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 32277  001C8A  0E00               	movlw	0
 32278  001C8C  6FD9               	movwf	AESCmac@i& (0+255),b
 32279  001C8E                     l18812:
 32280                           
 32281                           ; BSR set to: 1
 32282                           ;lorawan_aes_cmac.c: 76: {;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 32283  001C8E  0100               	movlb	0	; () banked
 32284  001C90  51C0               	movf	AESCmac@size& (0+255),w,b
 32285  001C92  0B0F               	andlw	15
 32286  001C94  0101               	movlb	1	; () banked
 32287  001C96  61D9               	cpfslt	AESCmac@i& (0+255),b
 32288  001C98  D00F               	goto	l18816
 32289                           
 32290                           ; BSR set to: 1
 32291                           ;lorawan_aes_cmac.c: 78: {;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 32292  001C9A  51D9               	movf	AESCmac@i& (0+255),w,b
 32293  001C9C  25D4               	addwf	AESCmac@ptr& (0+255),w,b
 32294  001C9E  6ED9               	movwf	fsr2l,c
 32295  001CA0  0E00               	movlw	0
 32296  001CA2  21D5               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 32297  001CA4  6EDA               	movwf	fsr2h,c
 32298  001CA6  0EA4               	movlw	low AESCmac@padded
 32299  001CA8  25D9               	addwf	AESCmac@i& (0+255),w,b
 32300  001CAA  6EE9               	movwf	fsr0l,c
 32301  001CAC  6AEA               	clrf	fsr0h,c
 32302  001CAE  0E01               	movlw	high AESCmac@padded
 32303  001CB0  22EA               	addwfc	fsr0h,f,c
 32304  001CB2  CFDF FFEF          	movff	indf2,indf0
 32305                           
 32306                           ;lorawan_aes_cmac.c: 80: }
 32307  001CB6  D017               	goto	l18822
 32308  001CB8                     l18816:
 32309                           
 32310                           ; BSR set to: 1
 32311                           ;lorawan_aes_cmac.c: 81: else;lorawan_aes_cmac.c: 82: {;lorawan_aes_cmac.c: 83: if ( i =
      +                          = (size%16) )
 32312  001CB8  0100               	movlb	0	; () banked
 32313  001CBA  51C0               	movf	AESCmac@size& (0+255),w,b
 32314  001CBC  0B0F               	andlw	15
 32315  001CBE  0101               	movlb	1	; () banked
 32316  001CC0  19D9               	xorwf	AESCmac@i& (0+255),w,b
 32317  001CC2  A4D8               	btfss	status,2,c
 32318  001CC4  D008               	goto	l18820
 32319                           
 32320                           ; BSR set to: 1
 32321                           ;lorawan_aes_cmac.c: 84: {;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 32322  001CC6  0EA4               	movlw	low AESCmac@padded
 32323  001CC8  25D9               	addwf	AESCmac@i& (0+255),w,b
 32324  001CCA  6ED9               	movwf	fsr2l,c
 32325  001CCC  6ADA               	clrf	fsr2h,c
 32326  001CCE  0E01               	movlw	high AESCmac@padded
 32327  001CD0  22DA               	addwfc	fsr2h,f,c
 32328  001CD2  0E80               	movlw	128
 32329  001CD4  D007               	goto	L33
 32330  001CD6                     l18820:
 32331                           
 32332                           ; BSR set to: 1
 32333                           ;lorawan_aes_cmac.c: 87: else;lorawan_aes_cmac.c: 88: {;lorawan_aes_cmac.c: 89: padded[i
      +                          ] = 0x00;
 32334  001CD6  0EA4               	movlw	low AESCmac@padded
 32335  001CD8  25D9               	addwf	AESCmac@i& (0+255),w,b
 32336  001CDA  6ED9               	movwf	fsr2l,c
 32337  001CDC  6ADA               	clrf	fsr2h,c
 32338  001CDE  0E01               	movlw	high AESCmac@padded
 32339  001CE0  22DA               	addwfc	fsr2h,f,c
 32340  001CE2  0E00               	movlw	0
 32341  001CE4                     L33:
 32342  001CE4  6EDF               	movwf	indf2,c
 32343  001CE6                     l18822:
 32344                           
 32345                           ; BSR set to: 1
 32346  001CE6  2BD9               	incf	AESCmac@i& (0+255),f,b
 32347                           
 32348                           ; BSR set to: 1
 32349  001CE8  0E0F               	movlw	15
 32350  001CEA  65D9               	cpfsgt	AESCmac@i& (0+255),b
 32351  001CEC  D7D0               	goto	l18812
 32352                           
 32353                           ; BSR set to: 1
 32354                           ;lorawan_aes_cmac.c: 90: };lorawan_aes_cmac.c: 91: };lorawan_aes_cmac.c: 92: };lorawan_a
      +                          es_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 32355  001CEE  0E00               	movlw	0
 32356  001CF0  6FD9               	movwf	AESCmac@i& (0+255),b
 32357  001CF2                     l18832:
 32358                           
 32359                           ; BSR set to: 1
 32360                           ;lorawan_aes_cmac.c: 96: {;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 32361  001CF2  0E94               	movlw	low AESCmac@mLast
 32362  001CF4  25D9               	addwf	AESCmac@i& (0+255),w,b
 32363  001CF6  6ED9               	movwf	fsr2l,c
 32364  001CF8  6ADA               	clrf	fsr2h,c
 32365  001CFA  0E01               	movlw	high AESCmac@mLast
 32366  001CFC  22DA               	addwfc	fsr2h,f,c
 32367  001CFE  0E74               	movlw	low AESCmac@k2
 32368  001D00  25D9               	addwf	AESCmac@i& (0+255),w,b
 32369  001D02  6EE9               	movwf	fsr0l,c
 32370  001D04  6AEA               	clrf	fsr0h,c
 32371  001D06  0E01               	movlw	high AESCmac@k2
 32372  001D08  22EA               	addwfc	fsr0h,f,c
 32373  001D0A  50EF               	movf	indf0,w,c
 32374  001D0C  0100               	movlb	0	; () banked
 32375  001D0E  6FC1               	movwf	??_AESCmac& (0+255),b
 32376  001D10  0EA4               	movlw	low AESCmac@padded
 32377  001D12  0101               	movlb	1	; () banked
 32378  001D14  25D9               	addwf	AESCmac@i& (0+255),w,b
 32379  001D16  6EE9               	movwf	fsr0l,c
 32380  001D18  6AEA               	clrf	fsr0h,c
 32381  001D1A  0E01               	movlw	high AESCmac@padded
 32382  001D1C  22EA               	addwfc	fsr0h,f,c
 32383  001D1E  50EF               	movf	indf0,w,c
 32384  001D20  0100               	movlb	0	; () banked
 32385  001D22  19C1               	xorwf	??_AESCmac& (0+255),w,b
 32386  001D24  6EDF               	movwf	indf2,c
 32387                           
 32388                           ; BSR set to: 0
 32389  001D26  0101               	movlb	1	; () banked
 32390  001D28  2BD9               	incf	AESCmac@i& (0+255),f,b
 32391                           
 32392                           ; BSR set to: 1
 32393  001D2A  0E0F               	movlw	15
 32394  001D2C  65D9               	cpfsgt	AESCmac@i& (0+255),b
 32395  001D2E  D7E1               	goto	l18832
 32396  001D30                     u20050:
 32397                           
 32398                           ;lorawan_aes_cmac.c: 98: };lorawan_aes_cmac.c: 99: };lorawan_aes_cmac.c: 101: memset(x, 
      +                          0, sizeof(x));
 32399  001D30  0EC4               	movlw	low AESCmac@x
 32400  001D32  0100               	movlb	0	; () banked
 32401  001D34  6F60               	movwf	memset@p1& (0+255),b
 32402  001D36  0E01               	movlw	high AESCmac@x
 32403  001D38  6F61               	movwf	(memset@p1+1)& (0+255),b
 32404  001D3A  0E00               	movlw	0
 32405  001D3C  6F63               	movwf	(memset@c+1)& (0+255),b
 32406  001D3E  0E00               	movlw	0
 32407  001D40  6F62               	movwf	memset@c& (0+255),b
 32408  001D42  0E00               	movlw	0
 32409  001D44  6F65               	movwf	(memset@n+1)& (0+255),b
 32410  001D46  0E10               	movlw	16
 32411  001D48  6F64               	movwf	memset@n& (0+255),b
 32412  001D4A  EC0D  F050         	call	_memset	;wreg free
 32413                           
 32414                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 32415  001D4E  0E00               	movlw	0
 32416  001D50  0101               	movlb	1	; () banked
 32417  001D52  6FD9               	movwf	AESCmac@i& (0+255),b
 32418  001D54  D056               	goto	l18858
 32419  001D56                     l18842:
 32420                           
 32421                           ; BSR set to: 0
 32422                           ;lorawan_aes_cmac.c: 104: {;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 32423  001D56  0E00               	movlw	0
 32424  001D58  0101               	movlb	1	; () banked
 32425  001D5A  6FD8               	movwf	AESCmac@j& (0+255),b
 32426  001D5C                     l18848:
 32427                           
 32428                           ; BSR set to: 1
 32429                           ;lorawan_aes_cmac.c: 106: {;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 32430  001D5C  0EB4               	movlw	low AESCmac@y
 32431  001D5E  25D8               	addwf	AESCmac@j& (0+255),w,b
 32432  001D60  6ED9               	movwf	fsr2l,c
 32433  001D62  6ADA               	clrf	fsr2h,c
 32434  001D64  0E01               	movlw	high AESCmac@y
 32435  001D66  22DA               	addwfc	fsr2h,f,c
 32436  001D68  51D9               	movf	AESCmac@i& (0+255),w,b
 32437  001D6A  0100               	movlb	0	; () banked
 32438  001D6C  6FC1               	movwf	??_AESCmac& (0+255),b
 32439  001D6E  6BC2               	clrf	(??_AESCmac+1)& (0+255),b
 32440  001D70  3BC1               	swapf	??_AESCmac& (0+255),f,b
 32441  001D72  3BC2               	swapf	(??_AESCmac+1)& (0+255),f,b
 32442  001D74  0EF0               	movlw	240
 32443  001D76  17C2               	andwf	(??_AESCmac+1)& (0+255),f,b
 32444  001D78  51C1               	movf	??_AESCmac& (0+255),w,b
 32445  001D7A  0B0F               	andlw	15
 32446  001D7C  13C2               	iorwf	(??_AESCmac+1)& (0+255),f,b
 32447  001D7E  0EF0               	movlw	240
 32448  001D80  17C1               	andwf	??_AESCmac& (0+255),f,b
 32449  001D82  C0BE  F0C3         	movff	AESCmac@input,??_AESCmac+2
 32450  001D86  C0BF  F0C4         	movff	AESCmac@input+1,??_AESCmac+3
 32451  001D8A  51C1               	movf	??_AESCmac& (0+255),w,b
 32452  001D8C  27C3               	addwf	(??_AESCmac+2)& (0+255),f,b
 32453  001D8E  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32454  001D90  23C4               	addwfc	(??_AESCmac+3)& (0+255),f,b
 32455  001D92  0101               	movlb	1	; () banked
 32456  001D94  51D8               	movf	AESCmac@j& (0+255),w,b
 32457  001D96  0100               	movlb	0	; () banked
 32458  001D98  25C3               	addwf	(??_AESCmac+2)& (0+255),w,b
 32459  001D9A  6EE9               	movwf	fsr0l,c
 32460  001D9C  0101               	movlb	1	; () banked
 32461  001D9E  0E00               	movlw	0
 32462  001DA0  0100               	movlb	0	; () banked
 32463  001DA2  21C4               	addwfc	(??_AESCmac+3)& (0+255),w,b
 32464  001DA4  6EEA               	movwf	fsr0h,c
 32465  001DA6  50EF               	movf	indf0,w,c
 32466  001DA8  6FC5               	movwf	(??_AESCmac+4)& (0+255),b
 32467  001DAA  0EC4               	movlw	low AESCmac@x
 32468  001DAC  0101               	movlb	1	; () banked
 32469  001DAE  25D8               	addwf	AESCmac@j& (0+255),w,b
 32470  001DB0  6EE9               	movwf	fsr0l,c
 32471  001DB2  6AEA               	clrf	fsr0h,c
 32472  001DB4  0E01               	movlw	high AESCmac@x
 32473  001DB6  22EA               	addwfc	fsr0h,f,c
 32474  001DB8  50EF               	movf	indf0,w,c
 32475  001DBA  0100               	movlb	0	; () banked
 32476  001DBC  19C5               	xorwf	(??_AESCmac+4)& (0+255),w,b
 32477  001DBE  6EDF               	movwf	indf2,c
 32478                           
 32479                           ; BSR set to: 0
 32480  001DC0  0101               	movlb	1	; () banked
 32481  001DC2  2BD8               	incf	AESCmac@j& (0+255),f,b
 32482                           
 32483                           ; BSR set to: 1
 32484  001DC4  0E0F               	movlw	15
 32485  001DC6  65D8               	cpfsgt	AESCmac@j& (0+255),b
 32486  001DC8  D7C9               	goto	l18848
 32487                           
 32488                           ; BSR set to: 1
 32489                           ;lorawan_aes_cmac.c: 108: };lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 32490  001DCA  0EC4               	movlw	low AESCmac@x
 32491  001DCC  0100               	movlb	0	; () banked
 32492  001DCE  6F60               	movwf	memcpy@d1& (0+255),b
 32493  001DD0  0E01               	movlw	high AESCmac@x
 32494  001DD2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32495  001DD4  0EB4               	movlw	low AESCmac@y
 32496  001DD6  6F62               	movwf	memcpy@s1& (0+255),b
 32497  001DD8  0E01               	movlw	high AESCmac@y
 32498  001DDA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32499  001DDC  0E00               	movlw	0
 32500  001DDE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32501  001DE0  0E10               	movlw	16
 32502  001DE2  6F64               	movwf	memcpy@n& (0+255),b
 32503  001DE4  EC2F  F048         	call	_memcpy	;wreg free
 32504                           
 32505                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 32506  001DE8  0EC4               	movlw	low AESCmac@x
 32507  001DEA  0100               	movlb	0	; () banked
 32508  001DEC  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 32509  001DEE  0E01               	movlw	high AESCmac@x
 32510  001DF0  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32511  001DF2  C0BA  F080         	movff	AESCmac@key,AESEncodeLoRa@key
 32512  001DF6  C0BB  F081         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 32513  001DFA  EC5A  F04E         	call	_AESEncodeLoRa	;wreg free
 32514  001DFE  0101               	movlb	1	; () banked
 32515  001E00  2BD9               	incf	AESCmac@i& (0+255),f,b
 32516  001E02                     l18858:
 32517                           
 32518                           ; BSR set to: 1
 32519  001E02  0EFF               	movlw	255
 32520  001E04  0100               	movlb	0	; () banked
 32521  001E06  6FC1               	movwf	??_AESCmac& (0+255),b
 32522  001E08  0EFF               	movlw	255
 32523  001E0A  6FC2               	movwf	(??_AESCmac+1)& (0+255),b
 32524  001E0C  0101               	movlb	1	; () banked
 32525  001E0E  51D7               	movf	AESCmac@n& (0+255),w,b
 32526  001E10  0100               	movlb	0	; () banked
 32527  001E12  6FC3               	movwf	(??_AESCmac+2)& (0+255),b
 32528  001E14  6BC4               	clrf	(??_AESCmac+3)& (0+255),b
 32529  001E16  51C1               	movf	??_AESCmac& (0+255),w,b
 32530  001E18  27C3               	addwf	(??_AESCmac+2)& (0+255),f,b
 32531  001E1A  51C2               	movf	(??_AESCmac+1)& (0+255),w,b
 32532  001E1C  23C4               	addwfc	(??_AESCmac+3)& (0+255),f,b
 32533  001E1E  0101               	movlb	1	; () banked
 32534  001E20  51D9               	movf	AESCmac@i& (0+255),w,b
 32535  001E22  0100               	movlb	0	; () banked
 32536  001E24  6FC5               	movwf	(??_AESCmac+4)& (0+255),b
 32537  001E26  6BC6               	clrf	(??_AESCmac+5)& (0+255),b
 32538  001E28  51C3               	movf	(??_AESCmac+2)& (0+255),w,b
 32539  001E2A  5DC5               	subwf	(??_AESCmac+4)& (0+255),w,b
 32540  001E2C  51C6               	movf	(??_AESCmac+5)& (0+255),w,b
 32541  001E2E  0A80               	xorlw	128
 32542  001E30  6FC7               	movwf	(??_AESCmac+6)& (0+255),b
 32543  001E32  51C4               	movf	(??_AESCmac+3)& (0+255),w,b
 32544  001E34  0A80               	xorlw	128
 32545  001E36  59C7               	subwfb	(??_AESCmac+6)& (0+255),w,b
 32546  001E38  A0D8               	btfss	status,0,c
 32547  001E3A  D78D               	goto	l18842
 32548                           
 32549                           ; BSR set to: 0
 32550                           ;lorawan_aes_cmac.c: 111: };lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 32551  001E3C  0E00               	movlw	0
 32552  001E3E  0101               	movlb	1	; () banked
 32553  001E40  6FD9               	movwf	AESCmac@i& (0+255),b
 32554  001E42                     l18866:
 32555                           
 32556                           ; BSR set to: 1
 32557                           ;lorawan_aes_cmac.c: 114: {;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 32558  001E42  0EB4               	movlw	low AESCmac@y
 32559  001E44  25D9               	addwf	AESCmac@i& (0+255),w,b
 32560  001E46  6ED9               	movwf	fsr2l,c
 32561  001E48  6ADA               	clrf	fsr2h,c
 32562  001E4A  0E01               	movlw	high AESCmac@y
 32563  001E4C  22DA               	addwfc	fsr2h,f,c
 32564  001E4E  0E94               	movlw	low AESCmac@mLast
 32565  001E50  25D9               	addwf	AESCmac@i& (0+255),w,b
 32566  001E52  6EE9               	movwf	fsr0l,c
 32567  001E54  6AEA               	clrf	fsr0h,c
 32568  001E56  0E01               	movlw	high AESCmac@mLast
 32569  001E58  22EA               	addwfc	fsr0h,f,c
 32570  001E5A  50EF               	movf	indf0,w,c
 32571  001E5C  0100               	movlb	0	; () banked
 32572  001E5E  6FC1               	movwf	??_AESCmac& (0+255),b
 32573  001E60  0EC4               	movlw	low AESCmac@x
 32574  001E62  0101               	movlb	1	; () banked
 32575  001E64  25D9               	addwf	AESCmac@i& (0+255),w,b
 32576  001E66  6EE9               	movwf	fsr0l,c
 32577  001E68  6AEA               	clrf	fsr0h,c
 32578  001E6A  0E01               	movlw	high AESCmac@x
 32579  001E6C  22EA               	addwfc	fsr0h,f,c
 32580  001E6E  50EF               	movf	indf0,w,c
 32581  001E70  0100               	movlb	0	; () banked
 32582  001E72  19C1               	xorwf	??_AESCmac& (0+255),w,b
 32583  001E74  6EDF               	movwf	indf2,c
 32584                           
 32585                           ; BSR set to: 0
 32586  001E76  0101               	movlb	1	; () banked
 32587  001E78  2BD9               	incf	AESCmac@i& (0+255),f,b
 32588                           
 32589                           ; BSR set to: 1
 32590  001E7A  0E0F               	movlw	15
 32591  001E7C  65D9               	cpfsgt	AESCmac@i& (0+255),b
 32592  001E7E  D7E1               	goto	l18866
 32593                           
 32594                           ; BSR set to: 1
 32595                           ;lorawan_aes_cmac.c: 116: };lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 32596  001E80  0EB4               	movlw	low AESCmac@y
 32597  001E82  0100               	movlb	0	; () banked
 32598  001E84  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 32599  001E86  0E01               	movlw	high AESCmac@y
 32600  001E88  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32601  001E8A  C0BA  F080         	movff	AESCmac@key,AESEncodeLoRa@key
 32602  001E8E  C0BB  F081         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 32603  001E92  EC5A  F04E         	call	_AESEncodeLoRa	;wreg free
 32604                           
 32605                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 32606  001E96  C0BC  F060         	movff	AESCmac@output,memcpy@d1
 32607  001E9A  C0BD  F061         	movff	AESCmac@output+1,memcpy@d1+1
 32608  001E9E  0EB4               	movlw	low AESCmac@y
 32609  001EA0  0100               	movlb	0	; () banked
 32610  001EA2  6F62               	movwf	memcpy@s1& (0+255),b
 32611  001EA4  0E01               	movlw	high AESCmac@y
 32612  001EA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32613  001EA8  0E00               	movlw	0
 32614  001EAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32615  001EAC  0E10               	movlw	16
 32616  001EAE  6F64               	movwf	memcpy@n& (0+255),b
 32617  001EB0  EC2F  F048         	call	_memcpy	;wreg free
 32618  001EB4  0012               	return		;funcret
 32619  001EB6                     __end_of_AESCmac:
 32620                           	opt callstack 0
 32621                           
 32622 ;; *************** function _GenerateSubkey *****************
 32623 ;; Defined at:
 32624 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32625 ;; Parameters:    Size  Location     Type
 32626 ;;  key             2   50[BANK0 ] PTR unsigned char 
 32627 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32628 ;;  k1              2   52[BANK0 ] PTR unsigned char 
 32629 ;;		 -> AESCmac@k1(16), 
 32630 ;;  k2              2   54[BANK0 ] PTR unsigned char 
 32631 ;;		 -> AESCmac@k2(16), 
 32632 ;; Auto vars:     Size  Location     Type
 32633 ;;  l              16   73[BANK0 ] unsigned char [16]
 32634 ;;  const_Rb       16   57[BANK0 ] unsigned char [16]
 32635 ;;  i               1   89[BANK0 ] unsigned char 
 32636 ;; Return value:  Size  Location     Type
 32637 ;;                  1    wreg      void 
 32638 ;; Registers used:
 32639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32640 ;; Tracked objects:
 32641 ;;		On entry : 0/0
 32642 ;;		On exit  : 0/0
 32643 ;;		Unchanged: 0/0
 32644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32645 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32646 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32647 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32648 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32649 ;;Total ram usage:       40 bytes
 32650 ;; Hardware stack levels used:    1
 32651 ;; Hardware stack levels required when called:   10
 32652 ;; This function calls:
 32653 ;;		_AESEncodeLoRa
 32654 ;;		_FillSubKey
 32655 ;;		_memset
 32656 ;; This function is called by:
 32657 ;;		_AESCmac
 32658 ;; This function uses a non-reentrant model
 32659 ;;
 32660                           
 32661                           	psect	text199
 32662  005E00                     __ptext199:
 32663                           	opt callstack 0
 32664  005E00                     _GenerateSubkey:
 32665                           	opt callstack 15
 32666                           
 32667                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] =
      +                           {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0
      +                          x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 32668                           
 32669                           ;incstack = 0
 32670  005E00  EE23  F0D0         	lfsr	2,GenerateSubkey@F5972
 32671  005E04  EE00  F099         	lfsr	0,GenerateSubkey@const_Rb
 32672  005E08  0E0F               	movlw	15
 32673  005E0A                     u19481:
 32674  005E0A  CFDB FFEB          	movff	plusw2,plusw0
 32675  005E0E  06E8               	decf	wreg,f,c
 32676  005E10  E2FC               	bc	u19481
 32677                           
 32678                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 32679  005E12  0EA9               	movlw	low GenerateSubkey@l
 32680  005E14  0100               	movlb	0	; () banked
 32681  005E16  6F60               	movwf	memset@p1& (0+255),b
 32682  005E18  0E00               	movlw	high GenerateSubkey@l
 32683  005E1A  6F61               	movwf	(memset@p1+1)& (0+255),b
 32684  005E1C  0E00               	movlw	0
 32685  005E1E  6F63               	movwf	(memset@c+1)& (0+255),b
 32686  005E20  0E00               	movlw	0
 32687  005E22  6F62               	movwf	memset@c& (0+255),b
 32688  005E24  0E00               	movlw	0
 32689  005E26  6F65               	movwf	(memset@n+1)& (0+255),b
 32690  005E28  0E10               	movlw	16
 32691  005E2A  6F64               	movwf	memset@n& (0+255),b
 32692  005E2C  EC0D  F050         	call	_memset	;wreg free
 32693                           
 32694                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 32695  005E30  0EA9               	movlw	low GenerateSubkey@l
 32696  005E32  0100               	movlb	0	; () banked
 32697  005E34  6F7E               	movwf	AESEncodeLoRa@block& (0+255),b
 32698  005E36  0E00               	movlw	high GenerateSubkey@l
 32699  005E38  6F7F               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 32700  005E3A  C092  F080         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 32701  005E3E  C093  F081         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 32702  005E42  EC5A  F04E         	call	_AESEncodeLoRa	;wreg free
 32703                           
 32704                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 32705  005E46  0100               	movlb	0	; () banked
 32706  005E48  BFA9               	btfsc	GenerateSubkey@l& (0+255),7,b
 32707  005E4A  D00D               	goto	l18414
 32708                           
 32709                           ; BSR set to: 0
 32710                           ;lorawan_aes_cmac.c: 138: {;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 32711  005E4C  0EA9               	movlw	low GenerateSubkey@l
 32712  005E4E  6F60               	movwf	FillSubKey@source& (0+255),b
 32713  005E50  0E00               	movlw	high GenerateSubkey@l
 32714  005E52  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 32715  005E54  C094  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 32716  005E58  C095  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 32717  005E5C  0E10               	movlw	16
 32718  005E5E  6F64               	movwf	FillSubKey@size& (0+255),b
 32719  005E60  EC18  F04A         	call	_FillSubKey	;wreg free
 32720                           
 32721                           ;lorawan_aes_cmac.c: 140: }
 32722  005E64  D023               	goto	u19500
 32723  005E66                     l18414:
 32724                           
 32725                           ; BSR set to: 0
 32726                           ;lorawan_aes_cmac.c: 141: else;lorawan_aes_cmac.c: 142: {;lorawan_aes_cmac.c: 143: FillS
      +                          ubKey( l, k1, (sizeof(l) ) );
 32727  005E66  0EA9               	movlw	low GenerateSubkey@l
 32728  005E68  6F60               	movwf	FillSubKey@source& (0+255),b
 32729  005E6A  0E00               	movlw	high GenerateSubkey@l
 32730  005E6C  6F61               	movwf	(FillSubKey@source+1)& (0+255),b
 32731  005E6E  C094  F062         	movff	GenerateSubkey@k1,FillSubKey@key
 32732  005E72  C095  F063         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 32733  005E76  0E10               	movlw	16
 32734  005E78  6F64               	movwf	FillSubKey@size& (0+255),b
 32735  005E7A  EC18  F04A         	call	_FillSubKey	;wreg free
 32736                           
 32737                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 32738  005E7E  0E00               	movlw	0
 32739  005E80  0100               	movlb	0	; () banked
 32740  005E82  6FB9               	movwf	GenerateSubkey@i& (0+255),b
 32741  005E84                     l18422:
 32742                           
 32743                           ; BSR set to: 0
 32744                           ;lorawan_aes_cmac.c: 146: {;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 32745  005E84  0E99               	movlw	low GenerateSubkey@const_Rb
 32746  005E86  25B9               	addwf	GenerateSubkey@i& (0+255),w,b
 32747  005E88  6ED9               	movwf	fsr2l,c
 32748  005E8A  6ADA               	clrf	fsr2h,c
 32749  005E8C  0E00               	movlw	high GenerateSubkey@const_Rb
 32750  005E8E  22DA               	addwfc	fsr2h,f,c
 32751  005E90  50DF               	movf	indf2,w,c
 32752  005E92  6F98               	movwf	??_GenerateSubkey& (0+255),b
 32753  005E94  51B9               	movf	GenerateSubkey@i& (0+255),w,b
 32754  005E96  2594               	addwf	GenerateSubkey@k1& (0+255),w,b
 32755  005E98  6ED9               	movwf	fsr2l,c
 32756  005E9A  0E00               	movlw	0
 32757  005E9C  2195               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 32758  005E9E  6EDA               	movwf	fsr2h,c
 32759  005EA0  5198               	movf	??_GenerateSubkey& (0+255),w,b
 32760  005EA2  1ADF               	xorwf	indf2,f,c
 32761                           
 32762                           ; BSR set to: 0
 32763  005EA4  2BB9               	incf	GenerateSubkey@i& (0+255),f,b
 32764                           
 32765                           ; BSR set to: 0
 32766  005EA6  0E0F               	movlw	15
 32767  005EA8  65B9               	cpfsgt	GenerateSubkey@i& (0+255),b
 32768  005EAA  D7EC               	goto	l18422
 32769  005EAC                     u19500:
 32770                           
 32771                           ;lorawan_aes_cmac.c: 148: };lorawan_aes_cmac.c: 149: };lorawan_aes_cmac.c: 152: if ( (k1
      +                          [0] & 0x80) == 0x00 )
 32772  005EAC  C094  FFD9         	movff	GenerateSubkey@k1,fsr2l
 32773  005EB0  C095  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 32774  005EB4  0100               	movlb	0	; () banked
 32775  005EB6  BEDF               	btfsc	indf2,7,c
 32776  005EB8  D00D               	goto	l18432
 32777                           
 32778                           ; BSR set to: 0
 32779                           ;lorawan_aes_cmac.c: 153: {;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 32780  005EBA  C094  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 32781  005EBE  C095  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 32782  005EC2  C096  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 32783  005EC6  C097  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 32784  005ECA  0E10               	movlw	16
 32785  005ECC  6F64               	movwf	FillSubKey@size& (0+255),b
 32786  005ECE  EC18  F04A         	call	_FillSubKey	;wreg free
 32787                           
 32788                           ;lorawan_aes_cmac.c: 155: }
 32789  005ED2  0012               	return	
 32790  005ED4                     l18432:
 32791                           
 32792                           ; BSR set to: 0
 32793                           ;lorawan_aes_cmac.c: 156: else;lorawan_aes_cmac.c: 157: {;lorawan_aes_cmac.c: 158: FillS
      +                          ubKey( k1, k2, (sizeof(l) ) );
 32794  005ED4  C094  F060         	movff	GenerateSubkey@k1,FillSubKey@source
 32795  005ED8  C095  F061         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 32796  005EDC  C096  F062         	movff	GenerateSubkey@k2,FillSubKey@key
 32797  005EE0  C097  F063         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 32798  005EE4  0E10               	movlw	16
 32799  005EE6  6F64               	movwf	FillSubKey@size& (0+255),b
 32800  005EE8  EC18  F04A         	call	_FillSubKey	;wreg free
 32801                           
 32802                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 32803  005EEC  0E00               	movlw	0
 32804  005EEE  0100               	movlb	0	; () banked
 32805  005EF0  6FB9               	movwf	GenerateSubkey@i& (0+255),b
 32806  005EF2                     l18440:
 32807                           
 32808                           ; BSR set to: 0
 32809                           ;lorawan_aes_cmac.c: 161: {;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 32810  005EF2  51B9               	movf	GenerateSubkey@i& (0+255),w,b
 32811  005EF4  2596               	addwf	GenerateSubkey@k2& (0+255),w,b
 32812  005EF6  6ED9               	movwf	fsr2l,c
 32813  005EF8  0E00               	movlw	0
 32814  005EFA  2197               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 32815  005EFC  6EDA               	movwf	fsr2h,c
 32816  005EFE  0E99               	movlw	low GenerateSubkey@const_Rb
 32817  005F00  25B9               	addwf	GenerateSubkey@i& (0+255),w,b
 32818  005F02  6EE9               	movwf	fsr0l,c
 32819  005F04  6AEA               	clrf	fsr0h,c
 32820  005F06  0E00               	movlw	high GenerateSubkey@const_Rb
 32821  005F08  22EA               	addwfc	fsr0h,f,c
 32822  005F0A  50EF               	movf	indf0,w,c
 32823  005F0C  6F98               	movwf	??_GenerateSubkey& (0+255),b
 32824  005F0E  51B9               	movf	GenerateSubkey@i& (0+255),w,b
 32825  005F10  2596               	addwf	GenerateSubkey@k2& (0+255),w,b
 32826  005F12  6EE9               	movwf	fsr0l,c
 32827  005F14  0E00               	movlw	0
 32828  005F16  2197               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 32829  005F18  6EEA               	movwf	fsr0h,c
 32830  005F1A  50EF               	movf	indf0,w,c
 32831  005F1C  1998               	xorwf	??_GenerateSubkey& (0+255),w,b
 32832  005F1E  6EDF               	movwf	indf2,c
 32833                           
 32834                           ; BSR set to: 0
 32835  005F20  2BB9               	incf	GenerateSubkey@i& (0+255),f,b
 32836                           
 32837                           ; BSR set to: 0
 32838  005F22  0E0F               	movlw	15
 32839  005F24  65B9               	cpfsgt	GenerateSubkey@i& (0+255),b
 32840  005F26  D7E5               	goto	l18440
 32841  005F28  0012               	return	
 32842  005F2A                     __end_of_GenerateSubkey:
 32843                           	opt callstack 0
 32844                           
 32845 ;; *************** function _FillSubKey *****************
 32846 ;; Defined at:
 32847 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32848 ;; Parameters:    Size  Location     Type
 32849 ;;  source          2    0[BANK0 ] PTR unsigned char 
 32850 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 32851 ;;  key             2    2[BANK0 ] PTR unsigned char 
 32852 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 32853 ;;  size            1    4[BANK0 ] unsigned char 
 32854 ;; Auto vars:     Size  Location     Type
 32855 ;;  i               1    7[BANK0 ] unsigned char 
 32856 ;;  carry           1    6[BANK0 ] unsigned char 
 32857 ;; Return value:  Size  Location     Type
 32858 ;;                  1    wreg      void 
 32859 ;; Registers used:
 32860 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 32861 ;; Tracked objects:
 32862 ;;		On entry : 0/0
 32863 ;;		On exit  : 0/0
 32864 ;;		Unchanged: 0/0
 32865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32866 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32868 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32869 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32870 ;;Total ram usage:        8 bytes
 32871 ;; Hardware stack levels used:    1
 32872 ;; Hardware stack levels required when called:    7
 32873 ;; This function calls:
 32874 ;;		Nothing
 32875 ;; This function is called by:
 32876 ;;		_GenerateSubkey
 32877 ;; This function uses a non-reentrant model
 32878 ;;
 32879                           
 32880                           	psect	text200
 32881  009430                     __ptext200:
 32882                           	opt callstack 0
 32883  009430                     _FillSubKey:
 32884                           	opt callstack 17
 32885                           
 32886                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 32887                           
 32888                           ;incstack = 0
 32889  009430  0E00               	movlw	0
 32890  009432  0100               	movlb	0	; () banked
 32891  009434  6F66               	movwf	FillSubKey@carry& (0+255),b
 32892                           
 32893                           ; BSR set to: 0
 32894                           ;lorawan_aes_cmac.c: 172: i=size;
 32895  009436  C064  F067         	movff	FillSubKey@size,FillSubKey@i
 32896                           
 32897                           ;lorawan_aes_cmac.c: 174: while(i--)
 32898  00943A  D01E               	goto	l18122
 32899  00943C                     l18118:
 32900                           
 32901                           ; BSR set to: 0
 32902                           ;lorawan_aes_cmac.c: 175: {;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry
      +                          ;
 32903  00943C  5167               	movf	FillSubKey@i& (0+255),w,b
 32904  00943E  2562               	addwf	FillSubKey@key& (0+255),w,b
 32905  009440  6ED9               	movwf	fsr2l,c
 32906  009442  0E00               	movlw	0
 32907  009444  2163               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 32908  009446  6EDA               	movwf	fsr2h,c
 32909  009448  5167               	movf	FillSubKey@i& (0+255),w,b
 32910  00944A  2560               	addwf	FillSubKey@source& (0+255),w,b
 32911  00944C  6EE9               	movwf	fsr0l,c
 32912  00944E  0E00               	movlw	0
 32913  009450  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 32914  009452  6EEA               	movwf	fsr0h,c
 32915  009454  50EF               	movf	indf0,w,c
 32916  009456  6F65               	movwf	??_FillSubKey& (0+255),b
 32917  009458  90D8               	bcf	status,0,c
 32918  00945A  3565               	rlcf	??_FillSubKey& (0+255),w,b
 32919  00945C  1166               	iorwf	FillSubKey@carry& (0+255),w,b
 32920  00945E  6EDF               	movwf	indf2,c
 32921                           
 32922                           ; BSR set to: 0
 32923                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 32924  009460  5167               	movf	FillSubKey@i& (0+255),w,b
 32925  009462  2560               	addwf	FillSubKey@source& (0+255),w,b
 32926  009464  6ED9               	movwf	fsr2l,c
 32927  009466  0E00               	movlw	0
 32928  009468  2161               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 32929  00946A  6EDA               	movwf	fsr2h,c
 32930  00946C  AEDF               	btfss	indf2,7,c
 32931  00946E  D002               	goto	u18990
 32932  009470  0E01               	movlw	1
 32933  009472  D001               	goto	u19000
 32934  009474                     u18990:
 32935  009474  0E00               	movlw	0
 32936  009476                     u19000:
 32937  009476  6F66               	movwf	FillSubKey@carry& (0+255),b
 32938  009478                     l18122:
 32939                           
 32940                           ; BSR set to: 0
 32941  009478  0767               	decf	FillSubKey@i& (0+255),f,b
 32942  00947A  2967               	incf	FillSubKey@i& (0+255),w,b
 32943  00947C  B4D8               	btfsc	status,2,c
 32944  00947E  0012               	return	
 32945  009480  D7DD               	goto	l18118
 32946  009482                     __end_of_FillSubKey:
 32947                           	opt callstack 0
 32948                           
 32949 ;; *************** function _AESEncodeLoRa *****************
 32950 ;; Defined at:
 32951 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 32952 ;; Parameters:    Size  Location     Type
 32953 ;;  block           2   30[BANK0 ] PTR unsigned char 
 32954 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 32955 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 32956 ;;  key             2   32[BANK0 ] PTR unsigned char 
 32957 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32958 ;; Auto vars:     Size  Location     Type
 32959 ;;  useKey         16   34[BANK0 ] unsigned char [16]
 32960 ;; Return value:  Size  Location     Type
 32961 ;;                  1    wreg      void 
 32962 ;; Registers used:
 32963 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 32964 ;; Tracked objects:
 32965 ;;		On entry : 0/0
 32966 ;;		On exit  : 0/0
 32967 ;;		Unchanged: 0/0
 32968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32969 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32970 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32972 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32973 ;;Total ram usage:       20 bytes
 32974 ;; Hardware stack levels used:    1
 32975 ;; Hardware stack levels required when called:    9
 32976 ;; This function calls:
 32977 ;;		_AESEncode
 32978 ;;		_memcpy
 32979 ;; This function is called by:
 32980 ;;		_AESCmac
 32981 ;;		_GenerateSubkey
 32982 ;;		_LORAWAN_RxDone
 32983 ;;		_ComputeSessionKeys
 32984 ;;		_EncryptFRMPayload
 32985 ;; This function uses a non-reentrant model
 32986 ;;
 32987                           
 32988                           	psect	text201
 32989  009CB4                     __ptext201:
 32990                           	opt callstack 0
 32991  009CB4                     _AESEncodeLoRa:
 32992                           	opt callstack 16
 32993                           
 32994                           ;lorawan_aes.c: 36: uint8_t useKey[16];;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(us
      +                          eKey));
 32995                           
 32996                           ; BSR set to: 0
 32997                           ;incstack = 0
 32998  009CB4  0E82               	movlw	low AESEncodeLoRa@useKey
 32999  009CB6  0100               	movlb	0	; () banked
 33000  009CB8  6F60               	movwf	memcpy@d1& (0+255),b
 33001  009CBA  0E00               	movlw	high AESEncodeLoRa@useKey
 33002  009CBC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 33003  009CBE  C080  F062         	movff	AESEncodeLoRa@key,memcpy@s1
 33004  009CC2  C081  F063         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 33005  009CC6  0E00               	movlw	0
 33006  009CC8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 33007  009CCA  0E10               	movlw	16
 33008  009CCC  6F64               	movwf	memcpy@n& (0+255),b
 33009  009CCE  EC2F  F048         	call	_memcpy	;wreg free
 33010                           
 33011                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 33012  009CD2  C07E  F067         	movff	AESEncodeLoRa@block,AESEncode@block
 33013  009CD6  C07F  F068         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 33014  009CDA  0E82               	movlw	low AESEncodeLoRa@useKey
 33015  009CDC  0100               	movlb	0	; () banked
 33016  009CDE  6F69               	movwf	AESEncode@key& (0+255),b
 33017  009CE0  0E00               	movlw	high AESEncodeLoRa@useKey
 33018  009CE2  6F6A               	movwf	(AESEncode@key+1)& (0+255),b
 33019  009CE4  EC57  F01A         	call	_AESEncode	;wreg free
 33020  009CE8  0012               	return		;funcret
 33021  009CEA                     __end_of_AESEncodeLoRa:
 33022                           	opt callstack 0
 33023                           
 33024 ;; *************** function _AESEncode *****************
 33025 ;; Defined at:
 33026 ;;		line 248 in file "mcc_generated_files/LoRaWAN/AES.c"
 33027 ;; Parameters:    Size  Location     Type
 33028 ;;  block           2    7[BANK0 ] PTR unsigned char 
 33029 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 33030 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 33031 ;;  key             2    9[BANK0 ] PTR unsigned char 
 33032 ;;		 -> AESEncodeLoRa@useKey(16), 
 33033 ;; Auto vars:     Size  Location     Type
 33034 ;;  aux3            1   28[BANK0 ] unsigned char 
 33035 ;;  aux1            1   27[BANK0 ] unsigned char 
 33036 ;;  aux2            1   26[BANK0 ] unsigned char 
 33037 ;;  aux             1   25[BANK0 ] unsigned char 
 33038 ;;  i               1   29[BANK0 ] unsigned char 
 33039 ;;  temp            1    0        unsigned char 
 33040 ;; Return value:  Size  Location     Type
 33041 ;;                  1    wreg      void 
 33042 ;; Registers used:
 33043 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33044 ;; Tracked objects:
 33045 ;;		On entry : 0/0
 33046 ;;		On exit  : 0/0
 33047 ;;		Unchanged: 0/0
 33048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33050 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33051 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33052 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33053 ;;Total ram usage:       23 bytes
 33054 ;; Hardware stack levels used:    1
 33055 ;; Hardware stack levels required when called:    8
 33056 ;; This function calls:
 33057 ;;		_EncKeySchedule
 33058 ;;		_EncodeShiftRow
 33059 ;; This function is called by:
 33060 ;;		_AESEncodeLoRa
 33061 ;; This function uses a non-reentrant model
 33062 ;;
 33063                           
 33064                           	psect	text202
 33065  0034AE                     __ptext202:
 33066                           	opt callstack 0
 33067  0034AE                     _AESEncode:
 33068                           	opt callstack 16
 33069                           
 33070                           ;AES.c: 250: unsigned char i;;AES.c: 251: unsigned char temp;;AES.c: 254: _roundCounter 
      +                          = 10;
 33071                           
 33072                           ;incstack = 0
 33073  0034AE  0E0A               	movlw	10
 33074  0034B0  6E43               	movwf	__roundCounter,c
 33075                           
 33076                           ;AES.c: 256: _rcon = 0x01;
 33077  0034B2  0E01               	movlw	1
 33078  0034B4  6E42               	movwf	__rcon,c
 33079                           
 33080                           ;AES.c: 259: for(i=0;i<16;i++)
 33081  0034B6  0E00               	movlw	0
 33082  0034B8  0100               	movlb	0	; () banked
 33083  0034BA  6F7D               	movwf	AESEncode@i& (0+255),b
 33084  0034BC                     l17956:
 33085                           
 33086                           ; BSR set to: 0
 33087                           ;AES.c: 260: {;AES.c: 261: block[i] ^= key[i];
 33088  0034BC  517D               	movf	AESEncode@i& (0+255),w,b
 33089  0034BE  2569               	addwf	AESEncode@key& (0+255),w,b
 33090  0034C0  6ED9               	movwf	fsr2l,c
 33091  0034C2  0E00               	movlw	0
 33092  0034C4  216A               	addwfc	(AESEncode@key+1)& (0+255),w,b
 33093  0034C6  6EDA               	movwf	fsr2h,c
 33094  0034C8  50DF               	movf	indf2,w,c
 33095  0034CA  6F6B               	movwf	??_AESEncode& (0+255),b
 33096  0034CC  517D               	movf	AESEncode@i& (0+255),w,b
 33097  0034CE  2567               	addwf	AESEncode@block& (0+255),w,b
 33098  0034D0  6ED9               	movwf	fsr2l,c
 33099  0034D2  0E00               	movlw	0
 33100  0034D4  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33101  0034D6  6EDA               	movwf	fsr2h,c
 33102  0034D8  516B               	movf	??_AESEncode& (0+255),w,b
 33103  0034DA  1ADF               	xorwf	indf2,f,c
 33104                           
 33105                           ; BSR set to: 0
 33106  0034DC  2B7D               	incf	AESEncode@i& (0+255),f,b
 33107                           
 33108                           ; BSR set to: 0
 33109  0034DE  0E0F               	movlw	15
 33110  0034E0  657D               	cpfsgt	AESEncode@i& (0+255),b
 33111  0034E2  D7EC               	goto	l17956
 33112  0034E4                     u18810:
 33113                           
 33114                           ; BSR set to: 0
 33115                           ;AES.c: 265: {;AES.c: 268: for(i=0;i<16;i++)
 33116  0034E4  0E00               	movlw	0
 33117  0034E6  6F7D               	movwf	AESEncode@i& (0+255),b
 33118  0034E8                     l17968:
 33119                           
 33120                           ; BSR set to: 0
 33121                           ;AES.c: 269: {;AES.c: 270: block[i]=STable[block[i]];
 33122  0034E8  517D               	movf	AESEncode@i& (0+255),w,b
 33123  0034EA  2567               	addwf	AESEncode@block& (0+255),w,b
 33124  0034EC  6ED9               	movwf	fsr2l,c
 33125  0034EE  0E00               	movlw	0
 33126  0034F0  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33127  0034F2  6EDA               	movwf	fsr2h,c
 33128  0034F4  50DF               	movf	indf2,w,c
 33129  0034F6  6F6B               	movwf	??_AESEncode& (0+255),b
 33130  0034F8  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33131  0034FA  0E07               	movlw	low _STable
 33132  0034FC  256B               	addwf	??_AESEncode& (0+255),w,b
 33133  0034FE  6EF6               	movwf	tblptrl,c
 33134  003500  0EFE               	movlw	high _STable
 33135  003502  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33136  003504  6EF7               	movwf	tblptrh,c
 33137  003506                     	if	1	;There are 3 active tblptr bytes
 33138  003506  6AF8               	clrf	tblptru,c
 33139  003508  0E00               	movlw	low (__mediumconst shr (0+16))
 33140  00350A  22F8               	addwfc	tblptru,f,c
 33141  00350C                     	endif
 33142  00350C  517D               	movf	AESEncode@i& (0+255),w,b
 33143  00350E  2567               	addwf	AESEncode@block& (0+255),w,b
 33144  003510  6ED9               	movwf	fsr2l,c
 33145  003512  0E00               	movlw	0
 33146  003514  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33147  003516  6EDA               	movwf	fsr2h,c
 33148  003518  0008               	tblrd		*
 33149  00351A  CFF5 FFDF          	movff	tablat,indf2
 33150                           
 33151                           ; BSR set to: 0
 33152  00351E  2B7D               	incf	AESEncode@i& (0+255),f,b
 33153                           
 33154                           ; BSR set to: 0
 33155  003520  0E0F               	movlw	15
 33156  003522  657D               	cpfsgt	AESEncode@i& (0+255),b
 33157  003524  D7E1               	goto	l17968
 33158                           
 33159                           ; BSR set to: 0
 33160                           ;AES.c: 271: };AES.c: 274: EncodeShiftRow(block);
 33161  003526  C067  F060         	movff	AESEncode@block,EncodeShiftRow@stateTable
 33162  00352A  C068  F061         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 33163  00352E  EC85  F028         	call	_EncodeShiftRow	;wreg free
 33164                           
 33165                           ;AES.c: 277: if(_roundCounter != 1)
 33166  003532  0443               	decf	__roundCounter,w,c
 33167  003534  B4D8               	btfsc	status,2,c
 33168  003536  D119               	goto	u18870
 33169                           
 33170                           ;AES.c: 278: {;AES.c: 279: unsigned char aux,aux1,aux2,aux3;;AES.c: 281: for(i=0;i<16;i+
      +                          =4)
 33171  003538  0E00               	movlw	0
 33172  00353A  0100               	movlb	0	; () banked
 33173  00353C  6F7D               	movwf	AESEncode@i& (0+255),b
 33174  00353E                     l17984:
 33175                           
 33176                           ; BSR set to: 0
 33177                           ;AES.c: 282: {;AES.c: 283: aux1= block[i+0] ^ block[i+1];
 33178  00353E  517D               	movf	AESEncode@i& (0+255),w,b
 33179  003540  2567               	addwf	AESEncode@block& (0+255),w,b
 33180  003542  6F6B               	movwf	??_AESEncode& (0+255),b
 33181  003544  0E00               	movlw	0
 33182  003546  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33183  003548  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33184  00354A  0E01               	movlw	1
 33185  00354C  256B               	addwf	??_AESEncode& (0+255),w,b
 33186  00354E  6ED9               	movwf	fsr2l,c
 33187  003550  0E00               	movlw	0
 33188  003552  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33189  003554  6EDA               	movwf	fsr2h,c
 33190  003556  50DF               	movf	indf2,w,c
 33191  003558  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33192  00355A  517D               	movf	AESEncode@i& (0+255),w,b
 33193  00355C  2567               	addwf	AESEncode@block& (0+255),w,b
 33194  00355E  6ED9               	movwf	fsr2l,c
 33195  003560  0E00               	movlw	0
 33196  003562  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33197  003564  6EDA               	movwf	fsr2h,c
 33198  003566  50DF               	movf	indf2,w,c
 33199  003568  196D               	xorwf	(??_AESEncode+2)& (0+255),w,b
 33200  00356A  6F7B               	movwf	AESEncode@aux1& (0+255),b
 33201                           
 33202                           ;AES.c: 284: aux3= block[i+2]^block[i+3];
 33203  00356C  517D               	movf	AESEncode@i& (0+255),w,b
 33204  00356E  2567               	addwf	AESEncode@block& (0+255),w,b
 33205  003570  6F6B               	movwf	??_AESEncode& (0+255),b
 33206  003572  0E00               	movlw	0
 33207  003574  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33208  003576  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33209  003578  0E03               	movlw	3
 33210  00357A  256B               	addwf	??_AESEncode& (0+255),w,b
 33211  00357C  6ED9               	movwf	fsr2l,c
 33212  00357E  0E00               	movlw	0
 33213  003580  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33214  003582  6EDA               	movwf	fsr2h,c
 33215  003584  50DF               	movf	indf2,w,c
 33216  003586  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33217  003588  517D               	movf	AESEncode@i& (0+255),w,b
 33218  00358A  2567               	addwf	AESEncode@block& (0+255),w,b
 33219  00358C  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33220  00358E  0E00               	movlw	0
 33221  003590  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33222  003592  6F6F               	movwf	(??_AESEncode+4)& (0+255),b
 33223  003594  0E02               	movlw	2
 33224  003596  256E               	addwf	(??_AESEncode+3)& (0+255),w,b
 33225  003598  6ED9               	movwf	fsr2l,c
 33226  00359A  0E00               	movlw	0
 33227  00359C  216F               	addwfc	(??_AESEncode+4)& (0+255),w,b
 33228  00359E  6EDA               	movwf	fsr2h,c
 33229  0035A0  50DF               	movf	indf2,w,c
 33230  0035A2  196D               	xorwf	(??_AESEncode+2)& (0+255),w,b
 33231  0035A4  6F7C               	movwf	AESEncode@aux3& (0+255),b
 33232                           
 33233                           ; BSR set to: 0
 33234                           ;AES.c: 285: aux = aux1 ^ aux3;
 33235  0035A6  517B               	movf	AESEncode@aux1& (0+255),w,b
 33236  0035A8  197C               	xorwf	AESEncode@aux3& (0+255),w,b
 33237  0035AA  6F79               	movwf	AESEncode@aux& (0+255),b
 33238                           
 33239                           ; BSR set to: 0
 33240                           ;AES.c: 286: aux2= block[i+2]^block[i+1];
 33241  0035AC  517D               	movf	AESEncode@i& (0+255),w,b
 33242  0035AE  2567               	addwf	AESEncode@block& (0+255),w,b
 33243  0035B0  6F6B               	movwf	??_AESEncode& (0+255),b
 33244  0035B2  0E00               	movlw	0
 33245  0035B4  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33246  0035B6  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33247  0035B8  0E01               	movlw	1
 33248  0035BA  256B               	addwf	??_AESEncode& (0+255),w,b
 33249  0035BC  6ED9               	movwf	fsr2l,c
 33250  0035BE  0E00               	movlw	0
 33251  0035C0  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33252  0035C2  6EDA               	movwf	fsr2h,c
 33253  0035C4  50DF               	movf	indf2,w,c
 33254  0035C6  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33255  0035C8  517D               	movf	AESEncode@i& (0+255),w,b
 33256  0035CA  2567               	addwf	AESEncode@block& (0+255),w,b
 33257  0035CC  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33258  0035CE  0E00               	movlw	0
 33259  0035D0  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33260  0035D2  6F6F               	movwf	(??_AESEncode+4)& (0+255),b
 33261  0035D4  0E02               	movlw	2
 33262  0035D6  256E               	addwf	(??_AESEncode+3)& (0+255),w,b
 33263  0035D8  6ED9               	movwf	fsr2l,c
 33264  0035DA  0E00               	movlw	0
 33265  0035DC  216F               	addwfc	(??_AESEncode+4)& (0+255),w,b
 33266  0035DE  6EDA               	movwf	fsr2h,c
 33267  0035E0  50DF               	movf	indf2,w,c
 33268  0035E2  196D               	xorwf	(??_AESEncode+2)& (0+255),w,b
 33269  0035E4  6F7A               	movwf	AESEncode@aux2& (0+255),b
 33270                           
 33271                           ;AES.c: 288: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 33272  0035E6  0E7F               	movlw	127
 33273  0035E8  657B               	cpfsgt	AESEncode@aux1& (0+255),b
 33274  0035EA  D00C               	goto	l17992
 33275                           
 33276                           ; BSR set to: 0
 33277  0035EC  0E1B               	movlw	27
 33278  0035EE  C07B  F06B         	movff	AESEncode@aux1,??_AESEncode
 33279  0035F2  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33280  0035F4  90D8               	bcf	status,0,c
 33281  0035F6  376B               	rlcf	??_AESEncode& (0+255),f,b
 33282  0035F8  376C               	rlcf	(??_AESEncode+1)& (0+255),f,b
 33283  0035FA  196B               	xorwf	??_AESEncode& (0+255),w,b
 33284  0035FC  6F73               	movwf	_AESEncode$516& (0+255),b
 33285  0035FE  516C               	movf	(??_AESEncode+1)& (0+255),w,b
 33286  003600  6F74               	movwf	(_AESEncode$516+1)& (0+255),b
 33287  003602  D005               	goto	l17994
 33288  003604                     l17992:
 33289                           
 33290                           ; BSR set to: 0
 33291  003604  90D8               	bcf	status,0,c
 33292  003606  357B               	rlcf	AESEncode@aux1& (0+255),w,b
 33293  003608  6F73               	movwf	_AESEncode$516& (0+255),b
 33294  00360A  6B74               	clrf	(_AESEncode$516+1)& (0+255),b
 33295  00360C  3774               	rlcf	(_AESEncode$516+1)& (0+255),f,b
 33296  00360E                     l17994:
 33297                           
 33298                           ; BSR set to: 0
 33299  00360E  C073  F07B         	movff	_AESEncode$516,AESEncode@aux1
 33300                           
 33301                           ;AES.c: 289: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 33302  003612  0E7F               	movlw	127
 33303  003614  657A               	cpfsgt	AESEncode@aux2& (0+255),b
 33304  003616  D00C               	goto	l17998
 33305                           
 33306                           ; BSR set to: 0
 33307  003618  0E1B               	movlw	27
 33308  00361A  C07A  F06B         	movff	AESEncode@aux2,??_AESEncode
 33309  00361E  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33310  003620  90D8               	bcf	status,0,c
 33311  003622  376B               	rlcf	??_AESEncode& (0+255),f,b
 33312  003624  376C               	rlcf	(??_AESEncode+1)& (0+255),f,b
 33313  003626  196B               	xorwf	??_AESEncode& (0+255),w,b
 33314  003628  6F75               	movwf	_AESEncode$517& (0+255),b
 33315  00362A  516C               	movf	(??_AESEncode+1)& (0+255),w,b
 33316  00362C  6F76               	movwf	(_AESEncode$517+1)& (0+255),b
 33317  00362E  D005               	goto	l18000
 33318  003630                     l17998:
 33319                           
 33320                           ; BSR set to: 0
 33321  003630  90D8               	bcf	status,0,c
 33322  003632  357A               	rlcf	AESEncode@aux2& (0+255),w,b
 33323  003634  6F75               	movwf	_AESEncode$517& (0+255),b
 33324  003636  6B76               	clrf	(_AESEncode$517+1)& (0+255),b
 33325  003638  3776               	rlcf	(_AESEncode$517+1)& (0+255),f,b
 33326  00363A                     l18000:
 33327                           
 33328                           ; BSR set to: 0
 33329  00363A  C075  F07A         	movff	_AESEncode$517,AESEncode@aux2
 33330                           
 33331                           ;AES.c: 290: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 33332  00363E  0E7F               	movlw	127
 33333  003640  657C               	cpfsgt	AESEncode@aux3& (0+255),b
 33334  003642  D00C               	goto	l18004
 33335                           
 33336                           ; BSR set to: 0
 33337  003644  0E1B               	movlw	27
 33338  003646  C07C  F06B         	movff	AESEncode@aux3,??_AESEncode
 33339  00364A  6B6C               	clrf	(??_AESEncode+1)& (0+255),b
 33340  00364C  90D8               	bcf	status,0,c
 33341  00364E  376B               	rlcf	??_AESEncode& (0+255),f,b
 33342  003650  376C               	rlcf	(??_AESEncode+1)& (0+255),f,b
 33343  003652  196B               	xorwf	??_AESEncode& (0+255),w,b
 33344  003654  6F77               	movwf	_AESEncode$518& (0+255),b
 33345  003656  516C               	movf	(??_AESEncode+1)& (0+255),w,b
 33346  003658  6F78               	movwf	(_AESEncode$518+1)& (0+255),b
 33347  00365A  D005               	goto	l18006
 33348  00365C                     l18004:
 33349                           
 33350                           ; BSR set to: 0
 33351  00365C  90D8               	bcf	status,0,c
 33352  00365E  357C               	rlcf	AESEncode@aux3& (0+255),w,b
 33353  003660  6F77               	movwf	_AESEncode$518& (0+255),b
 33354  003662  6B78               	clrf	(_AESEncode$518+1)& (0+255),b
 33355  003664  3778               	rlcf	(_AESEncode$518+1)& (0+255),f,b
 33356  003666                     l18006:
 33357                           
 33358                           ; BSR set to: 0
 33359  003666  C077  F07C         	movff	_AESEncode$518,AESEncode@aux3
 33360                           
 33361                           ; BSR set to: 0
 33362                           ;AES.c: 292: block[i+0]= aux^aux1^block[i+0];
 33363  00366A  517D               	movf	AESEncode@i& (0+255),w,b
 33364  00366C  2567               	addwf	AESEncode@block& (0+255),w,b
 33365  00366E  6ED9               	movwf	fsr2l,c
 33366  003670  0E00               	movlw	0
 33367  003672  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33368  003674  6EDA               	movwf	fsr2h,c
 33369  003676  517D               	movf	AESEncode@i& (0+255),w,b
 33370  003678  2567               	addwf	AESEncode@block& (0+255),w,b
 33371  00367A  6EE9               	movwf	fsr0l,c
 33372  00367C  0E00               	movlw	0
 33373  00367E  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33374  003680  6EEA               	movwf	fsr0h,c
 33375  003682  50EF               	movf	indf0,w,c
 33376  003684  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33377  003686  197B               	xorwf	AESEncode@aux1& (0+255),w,b
 33378  003688  6EDF               	movwf	indf2,c
 33379                           
 33380                           ; BSR set to: 0
 33381                           ;AES.c: 293: block[i+1]= aux^aux2^block[i+1];
 33382  00368A  517D               	movf	AESEncode@i& (0+255),w,b
 33383  00368C  2567               	addwf	AESEncode@block& (0+255),w,b
 33384  00368E  6F6B               	movwf	??_AESEncode& (0+255),b
 33385  003690  0E00               	movlw	0
 33386  003692  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33387  003694  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33388  003696  0E01               	movlw	1
 33389  003698  256B               	addwf	??_AESEncode& (0+255),w,b
 33390  00369A  6ED9               	movwf	fsr2l,c
 33391  00369C  0E00               	movlw	0
 33392  00369E  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33393  0036A0  6EDA               	movwf	fsr2h,c
 33394  0036A2  517D               	movf	AESEncode@i& (0+255),w,b
 33395  0036A4  2567               	addwf	AESEncode@block& (0+255),w,b
 33396  0036A6  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33397  0036A8  0E00               	movlw	0
 33398  0036AA  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33399  0036AC  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33400  0036AE  0E01               	movlw	1
 33401  0036B0  256D               	addwf	(??_AESEncode+2)& (0+255),w,b
 33402  0036B2  6EE9               	movwf	fsr0l,c
 33403  0036B4  0E00               	movlw	0
 33404  0036B6  216E               	addwfc	(??_AESEncode+3)& (0+255),w,b
 33405  0036B8  6EEA               	movwf	fsr0h,c
 33406  0036BA  50EF               	movf	indf0,w,c
 33407  0036BC  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33408  0036BE  197A               	xorwf	AESEncode@aux2& (0+255),w,b
 33409  0036C0  6EDF               	movwf	indf2,c
 33410                           
 33411                           ; BSR set to: 0
 33412                           ;AES.c: 294: block[i+2]= aux^aux3^block[i+2];
 33413  0036C2  517D               	movf	AESEncode@i& (0+255),w,b
 33414  0036C4  2567               	addwf	AESEncode@block& (0+255),w,b
 33415  0036C6  6F6B               	movwf	??_AESEncode& (0+255),b
 33416  0036C8  0E00               	movlw	0
 33417  0036CA  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33418  0036CC  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33419  0036CE  0E02               	movlw	2
 33420  0036D0  256B               	addwf	??_AESEncode& (0+255),w,b
 33421  0036D2  6ED9               	movwf	fsr2l,c
 33422  0036D4  0E00               	movlw	0
 33423  0036D6  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33424  0036D8  6EDA               	movwf	fsr2h,c
 33425  0036DA  517D               	movf	AESEncode@i& (0+255),w,b
 33426  0036DC  2567               	addwf	AESEncode@block& (0+255),w,b
 33427  0036DE  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33428  0036E0  0E00               	movlw	0
 33429  0036E2  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33430  0036E4  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33431  0036E6  0E02               	movlw	2
 33432  0036E8  256D               	addwf	(??_AESEncode+2)& (0+255),w,b
 33433  0036EA  6EE9               	movwf	fsr0l,c
 33434  0036EC  0E00               	movlw	0
 33435  0036EE  216E               	addwfc	(??_AESEncode+3)& (0+255),w,b
 33436  0036F0  6EEA               	movwf	fsr0h,c
 33437  0036F2  50EF               	movf	indf0,w,c
 33438  0036F4  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33439  0036F6  197C               	xorwf	AESEncode@aux3& (0+255),w,b
 33440  0036F8  6EDF               	movwf	indf2,c
 33441                           
 33442                           ; BSR set to: 0
 33443                           ;AES.c: 295: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 33444  0036FA  517D               	movf	AESEncode@i& (0+255),w,b
 33445  0036FC  2567               	addwf	AESEncode@block& (0+255),w,b
 33446  0036FE  6F6B               	movwf	??_AESEncode& (0+255),b
 33447  003700  0E00               	movlw	0
 33448  003702  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33449  003704  6F6C               	movwf	(??_AESEncode+1)& (0+255),b
 33450  003706  0E03               	movlw	3
 33451  003708  256B               	addwf	??_AESEncode& (0+255),w,b
 33452  00370A  6ED9               	movwf	fsr2l,c
 33453  00370C  0E00               	movlw	0
 33454  00370E  216C               	addwfc	(??_AESEncode+1)& (0+255),w,b
 33455  003710  6EDA               	movwf	fsr2h,c
 33456  003712  517D               	movf	AESEncode@i& (0+255),w,b
 33457  003714  2567               	addwf	AESEncode@block& (0+255),w,b
 33458  003716  6F6D               	movwf	(??_AESEncode+2)& (0+255),b
 33459  003718  0E00               	movlw	0
 33460  00371A  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33461  00371C  6F6E               	movwf	(??_AESEncode+3)& (0+255),b
 33462  00371E  0E02               	movlw	2
 33463  003720  256D               	addwf	(??_AESEncode+2)& (0+255),w,b
 33464  003722  6EE9               	movwf	fsr0l,c
 33465  003724  0E00               	movlw	0
 33466  003726  216E               	addwfc	(??_AESEncode+3)& (0+255),w,b
 33467  003728  6EEA               	movwf	fsr0h,c
 33468  00372A  50EF               	movf	indf0,w,c
 33469  00372C  6F6F               	movwf	(??_AESEncode+4)& (0+255),b
 33470  00372E  517D               	movf	AESEncode@i& (0+255),w,b
 33471  003730  2567               	addwf	AESEncode@block& (0+255),w,b
 33472  003732  6F70               	movwf	(??_AESEncode+5)& (0+255),b
 33473  003734  0E00               	movlw	0
 33474  003736  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33475  003738  6F71               	movwf	(??_AESEncode+6)& (0+255),b
 33476  00373A  0E01               	movlw	1
 33477  00373C  2570               	addwf	(??_AESEncode+5)& (0+255),w,b
 33478  00373E  6EE9               	movwf	fsr0l,c
 33479  003740  0E00               	movlw	0
 33480  003742  2171               	addwfc	(??_AESEncode+6)& (0+255),w,b
 33481  003744  6EEA               	movwf	fsr0h,c
 33482  003746  50EF               	movf	indf0,w,c
 33483  003748  6F72               	movwf	(??_AESEncode+7)& (0+255),b
 33484  00374A  517D               	movf	AESEncode@i& (0+255),w,b
 33485  00374C  2567               	addwf	AESEncode@block& (0+255),w,b
 33486  00374E  6EE9               	movwf	fsr0l,c
 33487  003750  0E00               	movlw	0
 33488  003752  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33489  003754  6EEA               	movwf	fsr0h,c
 33490  003756  50EF               	movf	indf0,w,c
 33491  003758  1972               	xorwf	(??_AESEncode+7)& (0+255),w,b
 33492  00375A  196F               	xorwf	(??_AESEncode+4)& (0+255),w,b
 33493  00375C  1979               	xorwf	AESEncode@aux& (0+255),w,b
 33494  00375E  6EDF               	movwf	indf2,c
 33495  003760  0E04               	movlw	4
 33496  003762  277D               	addwf	AESEncode@i& (0+255),f,b
 33497  003764  0E0F               	movlw	15
 33498  003766  657D               	cpfsgt	AESEncode@i& (0+255),b
 33499  003768  D6EA               	goto	l17984
 33500  00376A                     u18870:
 33501                           
 33502                           ;AES.c: 296: };AES.c: 297: };AES.c: 299: EncKeySchedule(key);
 33503  00376A  C069  F060         	movff	AESEncode@key,EncKeySchedule@key
 33504  00376E  C06A  F061         	movff	AESEncode@key+1,EncKeySchedule@key+1
 33505  003772  ECD7  F01B         	call	_EncKeySchedule	;wreg free
 33506                           
 33507                           ;AES.c: 302: for(i=0;i<16;i++)
 33508  003776  0E00               	movlw	0
 33509  003778  0100               	movlb	0	; () banked
 33510  00377A  6F7D               	movwf	AESEncode@i& (0+255),b
 33511  00377C                     l18024:
 33512                           
 33513                           ; BSR set to: 0
 33514                           ;AES.c: 303: {;AES.c: 304: block[i] ^= key[i];
 33515  00377C  517D               	movf	AESEncode@i& (0+255),w,b
 33516  00377E  2569               	addwf	AESEncode@key& (0+255),w,b
 33517  003780  6ED9               	movwf	fsr2l,c
 33518  003782  0E00               	movlw	0
 33519  003784  216A               	addwfc	(AESEncode@key+1)& (0+255),w,b
 33520  003786  6EDA               	movwf	fsr2h,c
 33521  003788  50DF               	movf	indf2,w,c
 33522  00378A  6F6B               	movwf	??_AESEncode& (0+255),b
 33523  00378C  517D               	movf	AESEncode@i& (0+255),w,b
 33524  00378E  2567               	addwf	AESEncode@block& (0+255),w,b
 33525  003790  6ED9               	movwf	fsr2l,c
 33526  003792  0E00               	movlw	0
 33527  003794  2168               	addwfc	(AESEncode@block+1)& (0+255),w,b
 33528  003796  6EDA               	movwf	fsr2h,c
 33529  003798  516B               	movf	??_AESEncode& (0+255),w,b
 33530  00379A  1ADF               	xorwf	indf2,f,c
 33531                           
 33532                           ; BSR set to: 0
 33533  00379C  2B7D               	incf	AESEncode@i& (0+255),f,b
 33534                           
 33535                           ; BSR set to: 0
 33536  00379E  0E0F               	movlw	15
 33537  0037A0  657D               	cpfsgt	AESEncode@i& (0+255),b
 33538  0037A2  D7EC               	goto	l18024
 33539                           
 33540                           ; BSR set to: 0
 33541                           ;AES.c: 305: };AES.c: 307: _roundCounter--;
 33542  0037A4  0643               	decf	__roundCounter,f,c
 33543                           
 33544                           ; BSR set to: 0
 33545                           ;AES.c: 308: };AES.c: 309: while(_roundCounter !=0);
 33546  0037A6  5043               	movf	__roundCounter,w,c
 33547  0037A8  B4D8               	btfsc	status,2,c
 33548  0037AA  0012               	return	
 33549  0037AC  D69B               	goto	u18810
 33550  0037AE                     __end_of_AESEncode:
 33551                           	opt callstack 0
 33552                           
 33553 ;; *************** function _EncodeShiftRow *****************
 33554 ;; Defined at:
 33555 ;;		line 385 in file "mcc_generated_files/LoRaWAN/AES.c"
 33556 ;; Parameters:    Size  Location     Type
 33557 ;;  stateTable      2    0[BANK0 ] PTR unsigned char 
 33558 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters(105), radioBuffer(271), 
 33559 ;;		 -> loRa(245), GenerateSubkey@l(16), AESCmac@y(16), AESCmac@x(16), 
 33560 ;; Auto vars:     Size  Location     Type
 33561 ;;  temp            1    2[BANK0 ] unsigned char 
 33562 ;; Return value:  Size  Location     Type
 33563 ;;                  1    wreg      void 
 33564 ;; Registers used:
 33565 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 33566 ;; Tracked objects:
 33567 ;;		On entry : 0/0
 33568 ;;		On exit  : 0/0
 33569 ;;		Unchanged: 0/0
 33570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33572 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33574 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33575 ;;Total ram usage:        3 bytes
 33576 ;; Hardware stack levels used:    1
 33577 ;; Hardware stack levels required when called:    7
 33578 ;; This function calls:
 33579 ;;		Nothing
 33580 ;; This function is called by:
 33581 ;;		_AESEncode
 33582 ;; This function uses a non-reentrant model
 33583 ;;
 33584                           
 33585                           	psect	text203
 33586  00510A                     __ptext203:
 33587                           	opt callstack 0
 33588  00510A                     _EncodeShiftRow:
 33589                           	opt callstack 16
 33590                           
 33591                           ;AES.c: 387: unsigned char temp;;AES.c: 392: temp=stateTable[1];
 33592                           
 33593                           ; BSR set to: 0
 33594                           ;incstack = 0
 33595  00510A  0100               	movlb	0	; () banked
 33596  00510C  EE20 F001          	lfsr	2,1
 33597  005110  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33598  005112  26D9               	addwf	fsr2l,f,c
 33599  005114  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33600  005116  22DA               	addwfc	fsr2h,f,c
 33601  005118  50DF               	movf	indf2,w,c
 33602  00511A  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33603                           
 33604                           ; BSR set to: 0
 33605                           ;AES.c: 393: stateTable[1]=stateTable[5];
 33606  00511C  EE20 F005          	lfsr	2,5
 33607  005120  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33608  005122  26D9               	addwf	fsr2l,f,c
 33609  005124  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33610  005126  22DA               	addwfc	fsr2h,f,c
 33611  005128  EE00 F001          	lfsr	0,1
 33612  00512C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33613  00512E  26E9               	addwf	fsr0l,f,c
 33614  005130  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33615  005132  22EA               	addwfc	fsr0h,f,c
 33616  005134  CFDF FFEF          	movff	indf2,indf0
 33617                           
 33618                           ; BSR set to: 0
 33619                           ;AES.c: 394: stateTable[5]=stateTable[9];
 33620  005138  EE20 F009          	lfsr	2,9
 33621  00513C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33622  00513E  26D9               	addwf	fsr2l,f,c
 33623  005140  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33624  005142  22DA               	addwfc	fsr2h,f,c
 33625  005144  EE00 F005          	lfsr	0,5
 33626  005148  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33627  00514A  26E9               	addwf	fsr0l,f,c
 33628  00514C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33629  00514E  22EA               	addwfc	fsr0h,f,c
 33630  005150  CFDF FFEF          	movff	indf2,indf0
 33631                           
 33632                           ; BSR set to: 0
 33633                           ;AES.c: 395: stateTable[9]=stateTable[13];
 33634  005154  EE20 F00D          	lfsr	2,13
 33635  005158  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33636  00515A  26D9               	addwf	fsr2l,f,c
 33637  00515C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33638  00515E  22DA               	addwfc	fsr2h,f,c
 33639  005160  EE00 F009          	lfsr	0,9
 33640  005164  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33641  005166  26E9               	addwf	fsr0l,f,c
 33642  005168  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33643  00516A  22EA               	addwfc	fsr0h,f,c
 33644  00516C  CFDF FFEF          	movff	indf2,indf0
 33645                           
 33646                           ; BSR set to: 0
 33647                           ;AES.c: 396: stateTable[13]=temp;
 33648  005170  EE20 F00D          	lfsr	2,13
 33649  005174  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33650  005176  26D9               	addwf	fsr2l,f,c
 33651  005178  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33652  00517A  22DA               	addwfc	fsr2h,f,c
 33653  00517C  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33654                           
 33655                           ; BSR set to: 0
 33656                           ;AES.c: 399: temp=stateTable[2];
 33657  005180  EE20 F002          	lfsr	2,2
 33658  005184  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33659  005186  26D9               	addwf	fsr2l,f,c
 33660  005188  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33661  00518A  22DA               	addwfc	fsr2h,f,c
 33662  00518C  50DF               	movf	indf2,w,c
 33663  00518E  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33664                           
 33665                           ; BSR set to: 0
 33666                           ;AES.c: 400: stateTable[2]=stateTable[10];
 33667  005190  EE20 F00A          	lfsr	2,10
 33668  005194  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33669  005196  26D9               	addwf	fsr2l,f,c
 33670  005198  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33671  00519A  22DA               	addwfc	fsr2h,f,c
 33672  00519C  EE00 F002          	lfsr	0,2
 33673  0051A0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33674  0051A2  26E9               	addwf	fsr0l,f,c
 33675  0051A4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33676  0051A6  22EA               	addwfc	fsr0h,f,c
 33677  0051A8  CFDF FFEF          	movff	indf2,indf0
 33678                           
 33679                           ;AES.c: 401: stateTable[10]=temp;
 33680  0051AC  EE20 F00A          	lfsr	2,10
 33681  0051B0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33682  0051B2  26D9               	addwf	fsr2l,f,c
 33683  0051B4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33684  0051B6  22DA               	addwfc	fsr2h,f,c
 33685  0051B8  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33686                           
 33687                           ;AES.c: 402: temp=stateTable[14];
 33688  0051BC  EE20 F00E          	lfsr	2,14
 33689  0051C0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33690  0051C2  26D9               	addwf	fsr2l,f,c
 33691  0051C4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33692  0051C6  22DA               	addwfc	fsr2h,f,c
 33693  0051C8  50DF               	movf	indf2,w,c
 33694  0051CA  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33695                           
 33696                           ; BSR set to: 0
 33697                           ;AES.c: 403: stateTable[14]=stateTable[6];
 33698  0051CC  EE20 F006          	lfsr	2,6
 33699  0051D0  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33700  0051D2  26D9               	addwf	fsr2l,f,c
 33701  0051D4  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33702  0051D6  22DA               	addwfc	fsr2h,f,c
 33703  0051D8  EE00 F00E          	lfsr	0,14
 33704  0051DC  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33705  0051DE  26E9               	addwf	fsr0l,f,c
 33706  0051E0  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33707  0051E2  22EA               	addwfc	fsr0h,f,c
 33708  0051E4  CFDF FFEF          	movff	indf2,indf0
 33709                           
 33710                           ; BSR set to: 0
 33711                           ;AES.c: 404: stateTable[6]=temp;
 33712  0051E8  EE20 F006          	lfsr	2,6
 33713  0051EC  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33714  0051EE  26D9               	addwf	fsr2l,f,c
 33715  0051F0  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33716  0051F2  22DA               	addwfc	fsr2h,f,c
 33717  0051F4  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33718                           
 33719                           ; BSR set to: 0
 33720                           ;AES.c: 407: temp=stateTable[3];
 33721  0051F8  EE20 F003          	lfsr	2,3
 33722  0051FC  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33723  0051FE  26D9               	addwf	fsr2l,f,c
 33724  005200  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33725  005202  22DA               	addwfc	fsr2h,f,c
 33726  005204  50DF               	movf	indf2,w,c
 33727  005206  6F62               	movwf	EncodeShiftRow@temp& (0+255),b
 33728                           
 33729                           ; BSR set to: 0
 33730                           ;AES.c: 408: stateTable[3]=stateTable[15];
 33731  005208  EE20 F00F          	lfsr	2,15
 33732  00520C  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33733  00520E  26D9               	addwf	fsr2l,f,c
 33734  005210  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33735  005212  22DA               	addwfc	fsr2h,f,c
 33736  005214  EE00 F003          	lfsr	0,3
 33737  005218  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33738  00521A  26E9               	addwf	fsr0l,f,c
 33739  00521C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33740  00521E  22EA               	addwfc	fsr0h,f,c
 33741  005220  CFDF FFEF          	movff	indf2,indf0
 33742                           
 33743                           ; BSR set to: 0
 33744                           ;AES.c: 409: stateTable[15]=stateTable[11];
 33745  005224  EE20 F00B          	lfsr	2,11
 33746  005228  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33747  00522A  26D9               	addwf	fsr2l,f,c
 33748  00522C  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33749  00522E  22DA               	addwfc	fsr2h,f,c
 33750  005230  EE00 F00F          	lfsr	0,15
 33751  005234  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33752  005236  26E9               	addwf	fsr0l,f,c
 33753  005238  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33754  00523A  22EA               	addwfc	fsr0h,f,c
 33755  00523C  CFDF FFEF          	movff	indf2,indf0
 33756                           
 33757                           ; BSR set to: 0
 33758                           ;AES.c: 410: stateTable[11]=stateTable[7];
 33759  005240  EE20 F007          	lfsr	2,7
 33760  005244  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33761  005246  26D9               	addwf	fsr2l,f,c
 33762  005248  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33763  00524A  22DA               	addwfc	fsr2h,f,c
 33764  00524C  EE00 F00B          	lfsr	0,11
 33765  005250  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33766  005252  26E9               	addwf	fsr0l,f,c
 33767  005254  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33768  005256  22EA               	addwfc	fsr0h,f,c
 33769  005258  CFDF FFEF          	movff	indf2,indf0
 33770                           
 33771                           ;AES.c: 411: stateTable[7]=temp;
 33772  00525C  EE20 F007          	lfsr	2,7
 33773  005260  5160               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 33774  005262  26D9               	addwf	fsr2l,f,c
 33775  005264  5161               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 33776  005266  22DA               	addwfc	fsr2h,f,c
 33777  005268  C062  FFDF         	movff	EncodeShiftRow@temp,indf2
 33778                           
 33779                           ; BSR set to: 0
 33780  00526C  0012               	return		;funcret
 33781  00526E                     __end_of_EncodeShiftRow:
 33782                           	opt callstack 0
 33783                           
 33784 ;; *************** function _EncKeySchedule *****************
 33785 ;; Defined at:
 33786 ;;		line 337 in file "mcc_generated_files/LoRaWAN/AES.c"
 33787 ;; Parameters:    Size  Location     Type
 33788 ;;  key             2    0[BANK0 ] PTR unsigned char 
 33789 ;;		 -> AESEncodeLoRa@useKey(16), 
 33790 ;; Auto vars:     Size  Location     Type
 33791 ;;		None
 33792 ;; Return value:  Size  Location     Type
 33793 ;;                  1    wreg      void 
 33794 ;; Registers used:
 33795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 33796 ;; Tracked objects:
 33797 ;;		On entry : 0/0
 33798 ;;		On exit  : 0/0
 33799 ;;		Unchanged: 0/0
 33800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33802 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33803 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33804 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33805 ;;Total ram usage:        7 bytes
 33806 ;; Hardware stack levels used:    1
 33807 ;; Hardware stack levels required when called:    7
 33808 ;; This function calls:
 33809 ;;		Nothing
 33810 ;; This function is called by:
 33811 ;;		_AESEncode
 33812 ;; This function uses a non-reentrant model
 33813 ;;
 33814                           
 33815                           	psect	text204
 33816  0037AE                     __ptext204:
 33817                           	opt callstack 0
 33818  0037AE                     _EncKeySchedule:
 33819                           	opt callstack 16
 33820                           
 33821                           ;AES.c: 340: key[0]^=STable[key[13]];
 33822                           
 33823                           ; BSR set to: 0
 33824                           ;incstack = 0
 33825  0037AE  0100               	movlb	0	; () banked
 33826  0037B0  EE20 F00D          	lfsr	2,13
 33827  0037B4  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33828  0037B6  26D9               	addwf	fsr2l,f,c
 33829  0037B8  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33830  0037BA  22DA               	addwfc	fsr2h,f,c
 33831  0037BC  50DF               	movf	indf2,w,c
 33832  0037BE  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33833  0037C0  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33834  0037C2  0E07               	movlw	low _STable
 33835  0037C4  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33836  0037C6  6EF6               	movwf	tblptrl,c
 33837  0037C8  0EFE               	movlw	high _STable
 33838  0037CA  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33839  0037CC  6EF7               	movwf	tblptrh,c
 33840  0037CE                     	if	1	;There are 3 active tblptr bytes
 33841  0037CE  6AF8               	clrf	tblptru,c
 33842  0037D0  0E00               	movlw	low (__mediumconst shr (0+16))
 33843  0037D2  22F8               	addwfc	tblptru,f,c
 33844  0037D4                     	endif
 33845  0037D4  0008               	tblrd		*
 33846  0037D6  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 33847  0037DA  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 33848  0037DE  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 33849  0037E2  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 33850  0037E4  1ADF               	xorwf	indf2,f,c
 33851                           
 33852                           ;AES.c: 341: key[1]^=STable[key[14]];
 33853  0037E6  EE20 F00E          	lfsr	2,14
 33854  0037EA  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33855  0037EC  26D9               	addwf	fsr2l,f,c
 33856  0037EE  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33857  0037F0  22DA               	addwfc	fsr2h,f,c
 33858  0037F2  50DF               	movf	indf2,w,c
 33859  0037F4  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33860  0037F6  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33861  0037F8  0E07               	movlw	low _STable
 33862  0037FA  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33863  0037FC  6EF6               	movwf	tblptrl,c
 33864  0037FE  0EFE               	movlw	high _STable
 33865  003800  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33866  003802  6EF7               	movwf	tblptrh,c
 33867  003804                     	if	1	;There are 3 active tblptr bytes
 33868  003804  6AF8               	clrf	tblptru,c
 33869  003806  0E00               	movlw	low (__mediumconst shr (0+16))
 33870  003808  22F8               	addwfc	tblptru,f,c
 33871  00380A                     	endif
 33872  00380A  0008               	tblrd		*
 33873  00380C  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 33874  003810  EE20 F001          	lfsr	2,1
 33875  003814  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33876  003816  26D9               	addwf	fsr2l,f,c
 33877  003818  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33878  00381A  22DA               	addwfc	fsr2h,f,c
 33879  00381C  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 33880  00381E  1ADF               	xorwf	indf2,f,c
 33881                           
 33882                           ;AES.c: 342: key[2]^=STable[key[15]];
 33883  003820  EE20 F00F          	lfsr	2,15
 33884  003824  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33885  003826  26D9               	addwf	fsr2l,f,c
 33886  003828  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33887  00382A  22DA               	addwfc	fsr2h,f,c
 33888  00382C  50DF               	movf	indf2,w,c
 33889  00382E  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33890  003830  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33891  003832  0E07               	movlw	low _STable
 33892  003834  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33893  003836  6EF6               	movwf	tblptrl,c
 33894  003838  0EFE               	movlw	high _STable
 33895  00383A  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33896  00383C  6EF7               	movwf	tblptrh,c
 33897  00383E                     	if	1	;There are 3 active tblptr bytes
 33898  00383E  6AF8               	clrf	tblptru,c
 33899  003840  0E00               	movlw	low (__mediumconst shr (0+16))
 33900  003842  22F8               	addwfc	tblptru,f,c
 33901  003844                     	endif
 33902  003844  0008               	tblrd		*
 33903  003846  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 33904  00384A  EE20 F002          	lfsr	2,2
 33905  00384E  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33906  003850  26D9               	addwf	fsr2l,f,c
 33907  003852  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33908  003854  22DA               	addwfc	fsr2h,f,c
 33909  003856  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 33910  003858  1ADF               	xorwf	indf2,f,c
 33911                           
 33912                           ;AES.c: 343: key[3]^=STable[key[12]];
 33913  00385A  EE20 F00C          	lfsr	2,12
 33914  00385E  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33915  003860  26D9               	addwf	fsr2l,f,c
 33916  003862  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33917  003864  22DA               	addwfc	fsr2h,f,c
 33918  003866  50DF               	movf	indf2,w,c
 33919  003868  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33920  00386A  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33921  00386C  0E07               	movlw	low _STable
 33922  00386E  2562               	addwf	??_EncKeySchedule& (0+255),w,b
 33923  003870  6EF6               	movwf	tblptrl,c
 33924  003872  0EFE               	movlw	high _STable
 33925  003874  2163               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 33926  003876  6EF7               	movwf	tblptrh,c
 33927  003878                     	if	1	;There are 3 active tblptr bytes
 33928  003878  6AF8               	clrf	tblptru,c
 33929  00387A  0E00               	movlw	low (__mediumconst shr (0+16))
 33930  00387C  22F8               	addwfc	tblptru,f,c
 33931  00387E                     	endif
 33932  00387E  0008               	tblrd		*
 33933  003880  CFF5 F064          	movff	tablat,??_EncKeySchedule+2
 33934  003884  EE20 F003          	lfsr	2,3
 33935  003888  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33936  00388A  26D9               	addwf	fsr2l,f,c
 33937  00388C  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33938  00388E  22DA               	addwfc	fsr2h,f,c
 33939  003890  5164               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 33940  003892  1ADF               	xorwf	indf2,f,c
 33941                           
 33942                           ; BSR set to: 0
 33943                           ;AES.c: 345: key[0]^=_rcon;
 33944  003894  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 33945  003898  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 33946  00389C  5042               	movf	__rcon,w,c
 33947  00389E  1ADF               	xorwf	indf2,f,c
 33948                           
 33949                           ; BSR set to: 0
 33950                           ;AES.c: 346: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 33951  0038A0  0E7F               	movlw	127
 33952  0038A2  6442               	cpfsgt	__rcon,c
 33953  0038A4  D00C               	goto	l17864
 33954                           
 33955                           ; BSR set to: 0
 33956  0038A6  0E1B               	movlw	27
 33957  0038A8  C042  F062         	movff	__rcon,??_EncKeySchedule
 33958  0038AC  6B63               	clrf	(??_EncKeySchedule+1)& (0+255),b
 33959  0038AE  90D8               	bcf	status,0,c
 33960  0038B0  3762               	rlcf	??_EncKeySchedule& (0+255),f,b
 33961  0038B2  3763               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 33962  0038B4  1962               	xorwf	??_EncKeySchedule& (0+255),w,b
 33963  0038B6  6F65               	movwf	_EncKeySchedule$521& (0+255),b
 33964  0038B8  5163               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 33965  0038BA  6F66               	movwf	(_EncKeySchedule$521+1)& (0+255),b
 33966  0038BC  D005               	goto	l17866
 33967  0038BE                     l17864:
 33968                           
 33969                           ; BSR set to: 0
 33970  0038BE  90D8               	bcf	status,0,c
 33971  0038C0  3442               	rlcf	__rcon,w,c
 33972  0038C2  6F65               	movwf	_EncKeySchedule$521& (0+255),b
 33973  0038C4  6B66               	clrf	(_EncKeySchedule$521+1)& (0+255),b
 33974  0038C6  3766               	rlcf	(_EncKeySchedule$521+1)& (0+255),f,b
 33975  0038C8                     l17866:
 33976                           
 33977                           ; BSR set to: 0
 33978  0038C8  C065  F042         	movff	_EncKeySchedule$521,__rcon
 33979                           
 33980                           ; BSR set to: 0
 33981                           ;AES.c: 349: key[4]^=key[0];
 33982  0038CC  C060  FFD9         	movff	EncKeySchedule@key,fsr2l
 33983  0038D0  C061  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 33984  0038D4  50DF               	movf	indf2,w,c
 33985  0038D6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 33986  0038D8  EE20 F004          	lfsr	2,4
 33987  0038DC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33988  0038DE  26D9               	addwf	fsr2l,f,c
 33989  0038E0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 33990  0038E2  22DA               	addwfc	fsr2h,f,c
 33991  0038E4  5162               	movf	??_EncKeySchedule& (0+255),w,b
 33992  0038E6  1ADF               	xorwf	indf2,f,c
 33993                           
 33994                           ; BSR set to: 0
 33995                           ;AES.c: 350: key[5]^=key[1];
 33996  0038E8  EE20 F001          	lfsr	2,1
 33997  0038EC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 33998  0038EE  26D9               	addwf	fsr2l,f,c
 33999  0038F0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34000  0038F2  22DA               	addwfc	fsr2h,f,c
 34001  0038F4  50DF               	movf	indf2,w,c
 34002  0038F6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34003  0038F8  EE20 F005          	lfsr	2,5
 34004  0038FC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34005  0038FE  26D9               	addwf	fsr2l,f,c
 34006  003900  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34007  003902  22DA               	addwfc	fsr2h,f,c
 34008  003904  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34009  003906  1ADF               	xorwf	indf2,f,c
 34010                           
 34011                           ; BSR set to: 0
 34012                           ;AES.c: 351: key[6]^=key[2];
 34013  003908  EE20 F002          	lfsr	2,2
 34014  00390C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34015  00390E  26D9               	addwf	fsr2l,f,c
 34016  003910  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34017  003912  22DA               	addwfc	fsr2h,f,c
 34018  003914  50DF               	movf	indf2,w,c
 34019  003916  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34020  003918  EE20 F006          	lfsr	2,6
 34021  00391C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34022  00391E  26D9               	addwf	fsr2l,f,c
 34023  003920  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34024  003922  22DA               	addwfc	fsr2h,f,c
 34025  003924  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34026  003926  1ADF               	xorwf	indf2,f,c
 34027                           
 34028                           ; BSR set to: 0
 34029                           ;AES.c: 352: key[7]^=key[3];
 34030  003928  EE20 F003          	lfsr	2,3
 34031  00392C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34032  00392E  26D9               	addwf	fsr2l,f,c
 34033  003930  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34034  003932  22DA               	addwfc	fsr2h,f,c
 34035  003934  50DF               	movf	indf2,w,c
 34036  003936  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34037  003938  EE20 F007          	lfsr	2,7
 34038  00393C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34039  00393E  26D9               	addwf	fsr2l,f,c
 34040  003940  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34041  003942  22DA               	addwfc	fsr2h,f,c
 34042  003944  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34043  003946  1ADF               	xorwf	indf2,f,c
 34044                           
 34045                           ; BSR set to: 0
 34046                           ;AES.c: 355: key[8]^=key[4];
 34047  003948  EE20 F004          	lfsr	2,4
 34048  00394C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34049  00394E  26D9               	addwf	fsr2l,f,c
 34050  003950  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34051  003952  22DA               	addwfc	fsr2h,f,c
 34052  003954  50DF               	movf	indf2,w,c
 34053  003956  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34054  003958  EE20 F008          	lfsr	2,8
 34055  00395C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34056  00395E  26D9               	addwf	fsr2l,f,c
 34057  003960  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34058  003962  22DA               	addwfc	fsr2h,f,c
 34059  003964  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34060  003966  1ADF               	xorwf	indf2,f,c
 34061                           
 34062                           ; BSR set to: 0
 34063                           ;AES.c: 356: key[9]^=key[5];
 34064  003968  EE20 F005          	lfsr	2,5
 34065  00396C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34066  00396E  26D9               	addwf	fsr2l,f,c
 34067  003970  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34068  003972  22DA               	addwfc	fsr2h,f,c
 34069  003974  50DF               	movf	indf2,w,c
 34070  003976  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34071  003978  EE20 F009          	lfsr	2,9
 34072  00397C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34073  00397E  26D9               	addwf	fsr2l,f,c
 34074  003980  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34075  003982  22DA               	addwfc	fsr2h,f,c
 34076  003984  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34077  003986  1ADF               	xorwf	indf2,f,c
 34078                           
 34079                           ; BSR set to: 0
 34080                           ;AES.c: 357: key[10]^=key[6];
 34081  003988  EE20 F006          	lfsr	2,6
 34082  00398C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34083  00398E  26D9               	addwf	fsr2l,f,c
 34084  003990  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34085  003992  22DA               	addwfc	fsr2h,f,c
 34086  003994  50DF               	movf	indf2,w,c
 34087  003996  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34088  003998  EE20 F00A          	lfsr	2,10
 34089  00399C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34090  00399E  26D9               	addwf	fsr2l,f,c
 34091  0039A0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34092  0039A2  22DA               	addwfc	fsr2h,f,c
 34093  0039A4  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34094  0039A6  1ADF               	xorwf	indf2,f,c
 34095                           
 34096                           ; BSR set to: 0
 34097                           ;AES.c: 358: key[11]^=key[7];
 34098  0039A8  EE20 F007          	lfsr	2,7
 34099  0039AC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34100  0039AE  26D9               	addwf	fsr2l,f,c
 34101  0039B0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34102  0039B2  22DA               	addwfc	fsr2h,f,c
 34103  0039B4  50DF               	movf	indf2,w,c
 34104  0039B6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34105  0039B8  EE20 F00B          	lfsr	2,11
 34106  0039BC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34107  0039BE  26D9               	addwf	fsr2l,f,c
 34108  0039C0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34109  0039C2  22DA               	addwfc	fsr2h,f,c
 34110  0039C4  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34111  0039C6  1ADF               	xorwf	indf2,f,c
 34112                           
 34113                           ; BSR set to: 0
 34114                           ;AES.c: 361: key[12]^=key[8];
 34115  0039C8  EE20 F008          	lfsr	2,8
 34116  0039CC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34117  0039CE  26D9               	addwf	fsr2l,f,c
 34118  0039D0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34119  0039D2  22DA               	addwfc	fsr2h,f,c
 34120  0039D4  50DF               	movf	indf2,w,c
 34121  0039D6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34122  0039D8  EE20 F00C          	lfsr	2,12
 34123  0039DC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34124  0039DE  26D9               	addwf	fsr2l,f,c
 34125  0039E0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34126  0039E2  22DA               	addwfc	fsr2h,f,c
 34127  0039E4  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34128  0039E6  1ADF               	xorwf	indf2,f,c
 34129                           
 34130                           ; BSR set to: 0
 34131                           ;AES.c: 362: key[13]^=key[9];
 34132  0039E8  EE20 F009          	lfsr	2,9
 34133  0039EC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34134  0039EE  26D9               	addwf	fsr2l,f,c
 34135  0039F0  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34136  0039F2  22DA               	addwfc	fsr2h,f,c
 34137  0039F4  50DF               	movf	indf2,w,c
 34138  0039F6  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34139  0039F8  EE20 F00D          	lfsr	2,13
 34140  0039FC  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34141  0039FE  26D9               	addwf	fsr2l,f,c
 34142  003A00  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34143  003A02  22DA               	addwfc	fsr2h,f,c
 34144  003A04  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34145  003A06  1ADF               	xorwf	indf2,f,c
 34146                           
 34147                           ; BSR set to: 0
 34148                           ;AES.c: 363: key[14]^=key[10];
 34149  003A08  EE20 F00A          	lfsr	2,10
 34150  003A0C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34151  003A0E  26D9               	addwf	fsr2l,f,c
 34152  003A10  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34153  003A12  22DA               	addwfc	fsr2h,f,c
 34154  003A14  50DF               	movf	indf2,w,c
 34155  003A16  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34156  003A18  EE20 F00E          	lfsr	2,14
 34157  003A1C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34158  003A1E  26D9               	addwf	fsr2l,f,c
 34159  003A20  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34160  003A22  22DA               	addwfc	fsr2h,f,c
 34161  003A24  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34162  003A26  1ADF               	xorwf	indf2,f,c
 34163                           
 34164                           ; BSR set to: 0
 34165                           ;AES.c: 364: key[15]^=key[11];
 34166  003A28  EE20 F00B          	lfsr	2,11
 34167  003A2C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34168  003A2E  26D9               	addwf	fsr2l,f,c
 34169  003A30  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34170  003A32  22DA               	addwfc	fsr2h,f,c
 34171  003A34  50DF               	movf	indf2,w,c
 34172  003A36  6F62               	movwf	??_EncKeySchedule& (0+255),b
 34173  003A38  EE20 F00F          	lfsr	2,15
 34174  003A3C  5160               	movf	EncKeySchedule@key& (0+255),w,b
 34175  003A3E  26D9               	addwf	fsr2l,f,c
 34176  003A40  5161               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 34177  003A42  22DA               	addwfc	fsr2h,f,c
 34178  003A44  5162               	movf	??_EncKeySchedule& (0+255),w,b
 34179  003A46  1ADF               	xorwf	indf2,f,c
 34180                           
 34181                           ; BSR set to: 0
 34182  003A48  0012               	return		;funcret
 34183  003A4A                     __end_of_EncKeySchedule:
 34184                           	opt callstack 0
 34185                           
 34186 ;; *************** function _LORAWAN_Init *****************
 34187 ;; Defined at:
 34188 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34189 ;; Parameters:    Size  Location     Type
 34190 ;;  RxPayload       2   74[BANK0 ] PTR FTN(PTR unsigned cha
 34191 ;;		 -> RxData(1), 
 34192 ;;  RxJoinRespon    2   76[BANK0 ] PTR FTN(unsigned char ,)
 34193 ;;		 -> RxJoinResponse(1), 
 34194 ;; Auto vars:     Size  Location     Type
 34195 ;;		None
 34196 ;; Return value:  Size  Location     Type
 34197 ;;                  1    wreg      void 
 34198 ;; Registers used:
 34199 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34200 ;; Tracked objects:
 34201 ;;		On entry : 0/0
 34202 ;;		On exit  : 0/0
 34203 ;;		Unchanged: 0/0
 34204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34208 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34209 ;;Total ram usage:        4 bytes
 34210 ;; Hardware stack levels used:    1
 34211 ;; Hardware stack levels required when called:   13
 34212 ;; This function calls:
 34213 ;;		_CreateAllSoftwareTimers
 34214 ;;		_LORAWAN_Reset
 34215 ;;		_RADIO_Init
 34216 ;;		_RADIO_ReadRandom
 34217 ;;		_SetCallbackSoftwareTimers
 34218 ;;		_StopAllSoftwareTimers
 34219 ;;		_srand
 34220 ;; This function is called by:
 34221 ;;		_main
 34222 ;; This function uses a non-reentrant model
 34223 ;;
 34224                           
 34225                           	psect	text205
 34226  008FFC                     __ptext205:
 34227                           	opt callstack 0
 34228  008FFC                     _LORAWAN_Init:
 34229                           	opt callstack 17
 34230                           
 34231                           ;lorawan_eu.c: 127: if (loRa.macInitialized == 0)
 34232                           
 34233                           ; BSR set to: 0
 34234                           ;incstack = 0
 34235  008FFC  0102               	movlb	2	; () banked
 34236  008FFE  51F5               	movf	(_loRa+240)& (0+255),w,b
 34237  009000  A4D8               	btfss	status,2,c
 34238  009002  D008               	goto	l21738
 34239                           
 34240                           ; BSR set to: 2
 34241                           ;lorawan_eu.c: 128: {;lorawan_eu.c: 129: CreateAllSoftwareTimers ();
 34242  009004  EC6A  F04A         	call	_CreateAllSoftwareTimers	;wreg free
 34243                           
 34244                           ;lorawan_eu.c: 130: SetCallbackSoftwareTimers ();
 34245  009008  EC2F  F03A         	call	_SetCallbackSoftwareTimers	;wreg free
 34246                           
 34247                           ;lorawan_eu.c: 131: loRa.macInitialized = 1;
 34248  00900C  0E01               	movlw	1
 34249  00900E  0102               	movlb	2	; () banked
 34250  009010  6FF5               	movwf	(_loRa+240)& (0+255),b
 34251                           
 34252                           ;lorawan_eu.c: 132: }
 34253  009012  D002               	goto	l21740
 34254  009014                     l21738:
 34255                           
 34256                           ; BSR set to: 2
 34257                           ;lorawan_eu.c: 133: else;lorawan_eu.c: 134: {;lorawan_eu.c: 135: StopAllSoftwareTimers (
      +                          );
 34258  009014  EC41  F04A         	call	_StopAllSoftwareTimers	;wreg free
 34259  009018                     l21740:
 34260                           
 34261                           ;lorawan_eu.c: 136: };lorawan_eu.c: 138: rxPayload.RxAppData = RxPayload;
 34262  009018  C0AA  F10E         	movff	LORAWAN_Init@RxPayload,_rxPayload
 34263  00901C  C0AB  F10F         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 34264                           
 34265                           ;lorawan_eu.c: 139: rxPayload.RxJoinResponse = RxJoinResponse;
 34266  009020  C0AC  F110         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 34267  009024  C0AD  F111         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 34268                           
 34269                           ;lorawan_eu.c: 141: RADIO_Init(&radioBuffer[16], (868100000));
 34270  009028  0ED7               	movlw	low (_radioBuffer+16)
 34271  00902A  0100               	movlb	0	; () banked
 34272  00902C  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34273  00902E  0E07               	movlw	high (_radioBuffer+16)
 34274  009030  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34275  009032  0EA0               	movlw	160
 34276  009034  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34277  009036  0E27               	movlw	39
 34278  009038  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34279  00903A  0EBE               	movlw	190
 34280  00903C  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34281  00903E  0E33               	movlw	51
 34282  009040  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34283  009042  EC63  F025         	call	_RADIO_Init	;wreg free
 34284                           
 34285                           ;lorawan_eu.c: 143: srand (RADIO_ReadRandom ());
 34286  009046  EC7F  F03F         	call	_RADIO_ReadRandom	;wreg free
 34287  00904A  C06C  F072         	movff	?_RADIO_ReadRandom,srand@x
 34288  00904E  C06D  F073         	movff	?_RADIO_ReadRandom+1,srand@x+1
 34289  009052  ECCB  F053         	call	_srand	;wreg free
 34290                           
 34291                           ;lorawan_eu.c: 145: LORAWAN_Reset (ISM_EU868);
 34292  009056  0E00               	movlw	0
 34293  009058  EC98  F023         	call	_LORAWAN_Reset
 34294  00905C  0012               	return		;funcret
 34295  00905E                     __end_of_LORAWAN_Init:
 34296                           	opt callstack 0
 34297                           
 34298 ;; *************** function _srand *****************
 34299 ;; Defined at:
 34300 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\rand.c"
 34301 ;; Parameters:    Size  Location     Type
 34302 ;;  x               2   18[BANK0 ] unsigned int 
 34303 ;; Auto vars:     Size  Location     Type
 34304 ;;		None
 34305 ;; Return value:  Size  Location     Type
 34306 ;;                  1    wreg      void 
 34307 ;; Registers used:
 34308 ;;		status,2
 34309 ;; Tracked objects:
 34310 ;;		On entry : 0/0
 34311 ;;		On exit  : 0/0
 34312 ;;		Unchanged: 0/0
 34313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34314 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34317 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34318 ;;Total ram usage:        2 bytes
 34319 ;; Hardware stack levels used:    1
 34320 ;; Hardware stack levels required when called:    7
 34321 ;; This function calls:
 34322 ;;		Nothing
 34323 ;; This function is called by:
 34324 ;;		_LORAWAN_Init
 34325 ;; This function uses a non-reentrant model
 34326 ;;
 34327                           
 34328                           	psect	text206
 34329  00A796                     __ptext206:
 34330                           	opt callstack 0
 34331  00A796                     _srand:
 34332                           	opt callstack 22
 34333                           
 34334                           ;incstack = 0
 34335  00A796  C072  F1EF         	movff	srand@x,_randx
 34336  00A79A  C073  F1F0         	movff	srand@x+1,_randx+1
 34337  00A79E  0101               	movlb	1	; () banked
 34338  00A7A0  6BF1               	clrf	(_randx+2)& (0+255),b
 34339  00A7A2  6BF2               	clrf	(_randx+3)& (0+255),b
 34340                           
 34341                           ; BSR set to: 1
 34342  00A7A4  0012               	return		;funcret
 34343  00A7A6                     __end_of_srand:
 34344                           	opt callstack 0
 34345                           
 34346 ;; *************** function _SetCallbackSoftwareTimers *****************
 34347 ;; Defined at:
 34348 ;;		line 952 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34349 ;; Parameters:    Size  Location     Type
 34350 ;;		None
 34351 ;; Auto vars:     Size  Location     Type
 34352 ;;		None
 34353 ;; Return value:  Size  Location     Type
 34354 ;;                  1    wreg      void 
 34355 ;; Registers used:
 34356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 34357 ;; Tracked objects:
 34358 ;;		On entry : 0/0
 34359 ;;		On exit  : 0/0
 34360 ;;		Unchanged: 0/0
 34361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34366 ;;Total ram usage:        0 bytes
 34367 ;; Hardware stack levels used:    1
 34368 ;; Hardware stack levels required when called:    8
 34369 ;; This function calls:
 34370 ;;		_SwTimerSetCallback
 34371 ;; This function is called by:
 34372 ;;		_LORAWAN_Init
 34373 ;; This function uses a non-reentrant model
 34374 ;;
 34375                           
 34376                           	psect	text207
 34377  00745E                     __ptext207:
 34378                           	opt callstack 0
 34379  00745E                     _SetCallbackSoftwareTimers:
 34380                           	opt callstack 21
 34381                           
 34382                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 34383                           
 34384                           ; BSR set to: 1
 34385                           ;incstack = 0
 34386  00745E  0E3A               	movlw	low _LORAWAN_ReceiveWindow1Callback
 34387  007460  0100               	movlb	0	; () banked
 34388  007462  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34389  007464  0E7C               	movlw	high _LORAWAN_ReceiveWindow1Callback
 34390  007466  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34391  007468  0E00               	movlw	0
 34392  00746A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34393  00746C  0102               	movlb	2	; () banked
 34394  00746E  51E7               	movf	(_loRa+226)& (0+255),w,b
 34395  007470  EC8F  F04E         	call	_SwTimerSetCallback
 34396                           
 34397                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 34398  007474  0E3C               	movlw	low _LORAWAN_ReceiveWindow2Callback
 34399  007476  0100               	movlb	0	; () banked
 34400  007478  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34401  00747A  0E75               	movlw	high _LORAWAN_ReceiveWindow2Callback
 34402  00747C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34403  00747E  0E00               	movlw	0
 34404  007480  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34405  007482  0102               	movlb	2	; () banked
 34406  007484  51E8               	movf	(_loRa+227)& (0+255),w,b
 34407  007486  EC8F  F04E         	call	_SwTimerSetCallback
 34408                           
 34409                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 34410  00748A  0E9E               	movlw	low _LORAWAN_LinkCheckCallback
 34411  00748C  0100               	movlb	0	; () banked
 34412  00748E  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34413  007490  0E4F               	movlw	high _LORAWAN_LinkCheckCallback
 34414  007492  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34415  007494  0E00               	movlw	0
 34416  007496  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34417  007498  0102               	movlb	2	; () banked
 34418  00749A  51EC               	movf	(_loRa+231)& (0+255),w,b
 34419  00749C  EC8F  F04E         	call	_SwTimerSetCallback
 34420                           
 34421                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 34422  0074A0  0E3A               	movlw	low _LORAWAN_ReceiveWindow1Callback
 34423  0074A2  0100               	movlb	0	; () banked
 34424  0074A4  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34425  0074A6  0E7C               	movlw	high _LORAWAN_ReceiveWindow1Callback
 34426  0074A8  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34427  0074AA  0E00               	movlw	0
 34428  0074AC  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34429  0074AE  0102               	movlb	2	; () banked
 34430  0074B0  51E9               	movf	(_loRa+228)& (0+255),w,b
 34431  0074B2  EC8F  F04E         	call	_SwTimerSetCallback
 34432                           
 34433                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 34434  0074B6  0E3C               	movlw	low _LORAWAN_ReceiveWindow2Callback
 34435  0074B8  0100               	movlb	0	; () banked
 34436  0074BA  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34437  0074BC  0E75               	movlw	high _LORAWAN_ReceiveWindow2Callback
 34438  0074BE  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34439  0074C0  0E00               	movlw	0
 34440  0074C2  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34441  0074C4  0102               	movlb	2	; () banked
 34442  0074C6  51EA               	movf	(_loRa+229)& (0+255),w,b
 34443  0074C8  EC8F  F04E         	call	_SwTimerSetCallback
 34444                           
 34445                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 34446  0074CC  0E50               	movlw	low _AckRetransmissionCallback
 34447  0074CE  0100               	movlb	0	; () banked
 34448  0074D0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34449  0074D2  0E60               	movlw	high _AckRetransmissionCallback
 34450  0074D4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34451  0074D6  0E00               	movlw	0
 34452  0074D8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34453  0074DA  0102               	movlb	2	; () banked
 34454  0074DC  51ED               	movf	(_loRa+232)& (0+255),w,b
 34455  0074DE  EC8F  F04E         	call	_SwTimerSetCallback
 34456                           
 34457                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 34458  0074E2  0E98               	movlw	low _AutomaticReplyCallback
 34459  0074E4  0100               	movlb	0	; () banked
 34460  0074E6  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34461  0074E8  0EA2               	movlw	high _AutomaticReplyCallback
 34462  0074EA  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34463  0074EC  0E00               	movlw	0
 34464  0074EE  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34465  0074F0  0102               	movlb	2	; () banked
 34466  0074F2  51EB               	movf	(_loRa+230)& (0+255),w,b
 34467  0074F4  EC8F  F04E         	call	_SwTimerSetCallback
 34468                           
 34469                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 34470  0074F8  0E24               	movlw	low _UnconfirmedTransmissionCallback
 34471  0074FA  0100               	movlb	0	; () banked
 34472  0074FC  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34473  0074FE  0E89               	movlw	high _UnconfirmedTransmissionCallback
 34474  007500  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34475  007502  0E00               	movlw	0
 34476  007504  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34477  007506  0102               	movlb	2	; () banked
 34478  007508  51EF               	movf	(_loRa+234)& (0+255),w,b
 34479  00750A  EC8F  F04E         	call	_SwTimerSetCallback
 34480                           
 34481                           ;lorawan_eu.c: 962: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 34482  00750E  0E4E               	movlw	low _UpdateJoinSuccessState
 34483  007510  0100               	movlb	0	; () banked
 34484  007512  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34485  007514  0E5A               	movlw	high _UpdateJoinSuccessState
 34486  007516  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34487  007518  0E00               	movlw	0
 34488  00751A  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34489  00751C  0102               	movlb	2	; () banked
 34490  00751E  51F8               	movf	(_loRa+243)& (0+255),w,b
 34491  007520  EC8F  F04E         	call	_SwTimerSetCallback
 34492                           
 34493                           ;lorawan_eu.c: 963: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 34494  007524  0EA8               	movlw	low _DutyCycleCallback
 34495  007526  0100               	movlb	0	; () banked
 34496  007528  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 34497  00752A  0E2E               	movlw	high _DutyCycleCallback
 34498  00752C  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 34499  00752E  0E00               	movlw	0
 34500  007530  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 34501  007532  0102               	movlb	2	; () banked
 34502  007534  51EE               	movf	(_loRa+233)& (0+255),w,b
 34503  007536  EC8F  F04E         	call	_SwTimerSetCallback
 34504  00753A  0012               	return		;funcret
 34505  00753C                     __end_of_SetCallbackSoftwareTimers:
 34506                           	opt callstack 0
 34507                           
 34508 ;; *************** function _RADIO_ReadRandom *****************
 34509 ;; Defined at:
 34510 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34511 ;; Parameters:    Size  Location     Type
 34512 ;;		None
 34513 ;; Auto vars:     Size  Location     Type
 34514 ;;  retVal          2   15[BANK0 ] unsigned int 
 34515 ;;  i               1   17[BANK0 ] unsigned char 
 34516 ;; Return value:  Size  Location     Type
 34517 ;;                  2   12[BANK0 ] unsigned int 
 34518 ;; Registers used:
 34519 ;;		wreg, status,2, status,0, cstack
 34520 ;; Tracked objects:
 34521 ;;		On entry : 0/0
 34522 ;;		On exit  : 0/0
 34523 ;;		Unchanged: 0/0
 34524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34525 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34526 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34528 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34529 ;;Total ram usage:        6 bytes
 34530 ;; Hardware stack levels used:    1
 34531 ;; Hardware stack levels required when called:   11
 34532 ;; This function calls:
 34533 ;;		_RADIO_RegisterRead
 34534 ;;		_RADIO_RegisterWrite
 34535 ;;		_RADIO_WriteMode
 34536 ;;		_SystemBlockingWaitMs
 34537 ;; This function is called by:
 34538 ;;		_LORAWAN_Init
 34539 ;; This function uses a non-reentrant model
 34540 ;;
 34541                           
 34542                           	psect	text208
 34543  007EFE                     __ptext208:
 34544                           	opt callstack 0
 34545  007EFE                     _RADIO_ReadRandom:
 34546                           	opt callstack 18
 34547                           
 34548                           ;radio_driver_SX1276.c: 1369: uint8_t i;;radio_driver_SX1276.c: 1370: uint16_t retVal;;r
      +                          adio_driver_SX1276.c: 1371: retVal = 0;
 34549                           
 34550                           ;incstack = 0
 34551  007EFE  0E00               	movlw	0
 34552  007F00  0100               	movlb	0	; () banked
 34553  007F02  6F70               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 34554  007F04  0E00               	movlw	0
 34555  007F06  6F6F               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 34556                           
 34557                           ; BSR set to: 0
 34558                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 34559  007F08  0E01               	movlw	1
 34560  007F0A  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34561  007F0C  0E01               	movlw	1
 34562  007F0E  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34563  007F10  0E00               	movlw	0
 34564  007F12  ECEB  F035         	call	_RADIO_WriteMode
 34565                           
 34566                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 34567  007F16  0EFF               	movlw	255
 34568  007F18  0100               	movlb	0	; () banked
 34569  007F1A  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34570  007F1C  0E11               	movlw	17
 34571  007F1E  EC08  F052         	call	_RADIO_RegisterWrite
 34572                           
 34573                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 34574  007F22  0E01               	movlw	1
 34575  007F24  0100               	movlb	0	; () banked
 34576  007F26  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34577  007F28  0E01               	movlw	1
 34578  007F2A  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34579  007F2C  0E05               	movlw	5
 34580  007F2E  ECEB  F035         	call	_RADIO_WriteMode
 34581                           
 34582                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 34583  007F32  0E00               	movlw	0
 34584  007F34  0100               	movlb	0	; () banked
 34585  007F36  6F71               	movwf	RADIO_ReadRandom@i& (0+255),b
 34586  007F38                     l21500:
 34587                           
 34588                           ; BSR set to: 0
 34589                           ;radio_driver_SX1276.c: 1377: {;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 34590  007F38  0E01               	movlw	1
 34591  007F3A  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34592  007F3C  0E00               	movlw	0
 34593  007F3E  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34594  007F40  0E00               	movlw	0
 34595  007F42  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34596  007F44  0E00               	movlw	0
 34597  007F46  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34598  007F48  EC6B  F04F         	call	_SystemBlockingWaitMs	;wreg free
 34599                           
 34600                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 34601  007F4C  0100               	movlb	0	; () banked
 34602  007F4E  90D8               	bcf	status,0,c
 34603  007F50  376F               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 34604  007F52  3770               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 34605                           
 34606                           ; BSR set to: 0
 34607                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 34608  007F54  0E2C               	movlw	44
 34609  007F56  EC38  F051         	call	_RADIO_RegisterRead
 34610  007F5A  0100               	movlb	0	; () banked
 34611  007F5C  6F6E               	movwf	??_RADIO_ReadRandom& (0+255),b
 34612  007F5E  0E01               	movlw	1
 34613  007F60  176E               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 34614  007F62  516E               	movf	??_RADIO_ReadRandom& (0+255),w,b
 34615  007F64  136F               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 34616  007F66  2B71               	incf	RADIO_ReadRandom@i& (0+255),f,b
 34617                           
 34618                           ; BSR set to: 0
 34619  007F68  0E0F               	movlw	15
 34620  007F6A  6571               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 34621  007F6C  D7E5               	goto	l21500
 34622                           
 34623                           ; BSR set to: 0
 34624                           ;radio_driver_SX1276.c: 1381: };radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP,
      +                           MODULATION_LORA, 1);
 34625  007F6E  0E01               	movlw	1
 34626  007F70  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 34627  007F72  0E01               	movlw	1
 34628  007F74  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 34629  007F76  0E00               	movlw	0
 34630  007F78  ECEB  F035         	call	_RADIO_WriteMode
 34631                           
 34632                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 34633  007F7C  0EFF               	movlw	255
 34634  007F7E  0100               	movlb	0	; () banked
 34635  007F80  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34636  007F82  0E12               	movlw	18
 34637  007F84  EC08  F052         	call	_RADIO_RegisterWrite
 34638                           
 34639                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 34640  007F88  0E00               	movlw	0
 34641  007F8A  0100               	movlb	0	; () banked
 34642  007F8C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 34643  007F8E  0E11               	movlw	17
 34644  007F90  EC08  F052         	call	_RADIO_RegisterWrite
 34645                           
 34646                           ;radio_driver_SX1276.c: 1389: return retVal;
 34647  007F94  C06F  F06C         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 34648  007F98  C070  F06D         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 34649  007F9C  0012               	return		;funcret
 34650  007F9E                     __end_of_RADIO_ReadRandom:
 34651                           	opt callstack 0
 34652                           
 34653 ;; *************** function _LORAWAN_Reset *****************
 34654 ;; Defined at:
 34655 ;;		line 149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 34656 ;; Parameters:    Size  Location     Type
 34657 ;;  ismBandNew      1    wreg     enum E6149
 34658 ;; Auto vars:     Size  Location     Type
 34659 ;;  ismBandNew      1   73[BANK0 ] enum E6149
 34660 ;; Return value:  Size  Location     Type
 34661 ;;                  1    wreg      void 
 34662 ;; Registers used:
 34663 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34664 ;; Tracked objects:
 34665 ;;		On entry : 0/0
 34666 ;;		On exit  : 0/0
 34667 ;;		Unchanged: 0/0
 34668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34670 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34672 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34673 ;;Total ram usage:        1 bytes
 34674 ;; Hardware stack levels used:    1
 34675 ;; Hardware stack levels required when called:   12
 34676 ;; This function calls:
 34677 ;;		_InitDefault433Channels
 34678 ;;		_InitDefault868Channels
 34679 ;;		_LORAWAN_LinkCheckConfigure
 34680 ;;		_RADIO_Init
 34681 ;;		_RADIO_SetLoRaSyncWord
 34682 ;;		_StopAllSoftwareTimers
 34683 ;;		_UpdateMinMaxChDataRate
 34684 ;;		_memset
 34685 ;; This function is called by:
 34686 ;;		_LORAWAN_Init
 34687 ;;		_main
 34688 ;; This function uses a non-reentrant model
 34689 ;;
 34690                           
 34691                           	psect	text209
 34692  004730                     __ptext209:
 34693                           	opt callstack 0
 34694  004730                     _LORAWAN_Reset:
 34695                           	opt callstack 18
 34696                           
 34697                           ;incstack = 0
 34698                           ;LORAWAN_Reset@ismBandNew stored from wreg
 34699  004730  0100               	movlb	0	; () banked
 34700  004732  6FA9               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 34701                           
 34702                           ;lorawan_eu.c: 151: if (loRa.macInitialized == 1)
 34703  004734  0102               	movlb	2	; () banked
 34704  004736  05F5               	decf	(_loRa+240)& (0+255),w,b
 34705  004738  B4D8               	btfsc	status,2,c
 34706                           
 34707                           ; BSR set to: 2
 34708                           ;lorawan_eu.c: 152: {;lorawan_eu.c: 153: StopAllSoftwareTimers ();
 34709  00473A  EC41  F04A         	call	_StopAllSoftwareTimers	;wreg free
 34710                           
 34711                           ;lorawan_eu.c: 154: };lorawan_eu.c: 156: loRa.syncWord = 0x34;
 34712  00473E  0E34               	movlw	52
 34713  004740  0102               	movlb	2	; () banked
 34714  004742  6FF9               	movwf	(_loRa+244)& (0+255),b
 34715                           
 34716                           ; BSR set to: 2
 34717                           ;lorawan_eu.c: 157: RADIO_SetLoRaSyncWord(loRa.syncWord);
 34718  004744  51F9               	movf	(_loRa+244)& (0+255),w,b
 34719  004746  EC68  F054         	call	_RADIO_SetLoRaSyncWord
 34720                           
 34721                           ;lorawan_eu.c: 159: loRa.macStatus.value = 0;
 34722  00474A  0E00               	movlw	0
 34723  00474C  0102               	movlb	2	; () banked
 34724  00474E  6F07               	movwf	(_loRa+2)& (0+255),b
 34725  004750  0E00               	movlw	0
 34726  004752  6F08               	movwf	(_loRa+3)& (0+255),b
 34727  004754  0E00               	movlw	0
 34728  004756  6F09               	movwf	(_loRa+4)& (0+255),b
 34729  004758  0E00               	movlw	0
 34730  00475A  6F0A               	movwf	(_loRa+5)& (0+255),b
 34731                           
 34732                           ; BSR set to: 2
 34733                           ;lorawan_eu.c: 160: loRa.linkCheckMargin = 255;
 34734  00475C  69E2               	setf	(_loRa+221)& (0+255),b
 34735                           
 34736                           ; BSR set to: 2
 34737                           ;lorawan_eu.c: 161: loRa.linkCheckGwCnt = 0;
 34738  00475E  0E00               	movlw	0
 34739  004760  6FE3               	movwf	(_loRa+222)& (0+255),b
 34740                           
 34741                           ; BSR set to: 2
 34742                           ;lorawan_eu.c: 162: loRa.lastTimerValue = 0;
 34743  004762  0E00               	movlw	0
 34744  004764  6FCD               	movwf	(_loRa+200)& (0+255),b
 34745  004766  0E00               	movlw	0
 34746  004768  6FCE               	movwf	(_loRa+201)& (0+255),b
 34747  00476A  0E00               	movlw	0
 34748  00476C  6FCF               	movwf	(_loRa+202)& (0+255),b
 34749  00476E  0E00               	movlw	0
 34750  004770  6FD0               	movwf	(_loRa+203)& (0+255),b
 34751                           
 34752                           ; BSR set to: 2
 34753                           ;lorawan_eu.c: 163: loRa.lastPacketLength = 0;
 34754  004772  0E00               	movlw	0
 34755  004774  6FDA               	movwf	(_loRa+213)& (0+255),b
 34756  004776  0E00               	movlw	0
 34757  004778  6FD9               	movwf	(_loRa+212)& (0+255),b
 34758                           
 34759                           ; BSR set to: 2
 34760                           ;lorawan_eu.c: 164: loRa.fCntDown.value = 0;
 34761  00477A  0E00               	movlw	0
 34762  00477C  6F0F               	movwf	(_loRa+10)& (0+255),b
 34763  00477E  0E00               	movlw	0
 34764  004780  6F10               	movwf	(_loRa+11)& (0+255),b
 34765  004782  0E00               	movlw	0
 34766  004784  6F11               	movwf	(_loRa+12)& (0+255),b
 34767  004786  0E00               	movlw	0
 34768  004788  6F12               	movwf	(_loRa+13)& (0+255),b
 34769                           
 34770                           ; BSR set to: 2
 34771                           ;lorawan_eu.c: 165: loRa.fCntUp.value = 0;
 34772  00478A  0E00               	movlw	0
 34773  00478C  6F0B               	movwf	(_loRa+6)& (0+255),b
 34774  00478E  0E00               	movlw	0
 34775  004790  6F0C               	movwf	(_loRa+7)& (0+255),b
 34776  004792  0E00               	movlw	0
 34777  004794  6F0D               	movwf	(_loRa+8)& (0+255),b
 34778  004796  0E00               	movlw	0
 34779  004798  6F0E               	movwf	(_loRa+9)& (0+255),b
 34780                           
 34781                           ; BSR set to: 2
 34782                           ;lorawan_eu.c: 166: loRa.devNonce = 0;
 34783  00479A  0E00               	movlw	0
 34784  00479C  6FD8               	movwf	(_loRa+211)& (0+255),b
 34785  00479E  0E00               	movlw	0
 34786  0047A0  6FD7               	movwf	(_loRa+210)& (0+255),b
 34787                           
 34788                           ; BSR set to: 2
 34789                           ;lorawan_eu.c: 167: loRa.prescaler = 1;
 34790  0047A2  0E00               	movlw	0
 34791  0047A4  6FE1               	movwf	(_loRa+220)& (0+255),b
 34792  0047A6  0E01               	movlw	1
 34793  0047A8  6FE0               	movwf	(_loRa+219)& (0+255),b
 34794                           
 34795                           ; BSR set to: 2
 34796                           ;lorawan_eu.c: 168: loRa.adrAckCnt = 0;
 34797  0047AA  0E00               	movlw	0
 34798  0047AC  6FD6               	movwf	(_loRa+209)& (0+255),b
 34799  0047AE  0E00               	movlw	0
 34800  0047B0  6FD5               	movwf	(_loRa+208)& (0+255),b
 34801                           
 34802                           ; BSR set to: 2
 34803                           ;lorawan_eu.c: 169: loRa.counterAdrAckDelay = 0;
 34804  0047B2  0E00               	movlw	0
 34805  0047B4  6FF3               	movwf	(_loRa+238)& (0+255),b
 34806                           
 34807                           ; BSR set to: 2
 34808                           ;lorawan_eu.c: 170: loRa.offset = 0;
 34809  0047B6  0E00               	movlw	0
 34810  0047B8  6FF4               	movwf	(_loRa+239)& (0+255),b
 34811                           
 34812                           ; BSR set to: 2
 34813                           ;lorawan_eu.c: 171: loRa.lastTimerValue = 0;
 34814  0047BA  0E00               	movlw	0
 34815  0047BC  6FCD               	movwf	(_loRa+200)& (0+255),b
 34816  0047BE  0E00               	movlw	0
 34817  0047C0  6FCE               	movwf	(_loRa+201)& (0+255),b
 34818  0047C2  0E00               	movlw	0
 34819  0047C4  6FCF               	movwf	(_loRa+202)& (0+255),b
 34820  0047C6  0E00               	movlw	0
 34821  0047C8  6FD0               	movwf	(_loRa+203)& (0+255),b
 34822                           
 34823                           ; BSR set to: 2
 34824                           ;lorawan_eu.c: 174: loRa.macStatus.linkCheck = 0;
 34825  0047CA  9508               	bcf	(_loRa+3)& (0+255),2,b
 34826                           
 34827                           ; BSR set to: 2
 34828                           ;lorawan_eu.c: 177: loRa.macStatus.value = 0;
 34829  0047CC  0E00               	movlw	0
 34830  0047CE  6F07               	movwf	(_loRa+2)& (0+255),b
 34831  0047D0  0E00               	movlw	0
 34832  0047D2  6F08               	movwf	(_loRa+3)& (0+255),b
 34833  0047D4  0E00               	movlw	0
 34834  0047D6  6F09               	movwf	(_loRa+4)& (0+255),b
 34835  0047D8  0E00               	movlw	0
 34836  0047DA  6F0A               	movwf	(_loRa+5)& (0+255),b
 34837                           
 34838                           ; BSR set to: 2
 34839                           ;lorawan_eu.c: 178: loRa.lorawanMacStatus.value = 0;
 34840  0047DC  0E00               	movlw	0
 34841  0047DE  6F06               	movwf	(_loRa+1)& (0+255),b
 34842  0047E0  0E00               	movlw	0
 34843  0047E2  6F05               	movwf	_loRa& (0+255),b
 34844                           
 34845                           ; BSR set to: 2
 34846                           ;lorawan_eu.c: 180: loRa.maxRepetitionsConfirmedUplink = 7;
 34847  0047E4  0E07               	movlw	7
 34848  0047E6  6FDC               	movwf	(_loRa+215)& (0+255),b
 34849                           
 34850                           ; BSR set to: 2
 34851                           ;lorawan_eu.c: 181: loRa.maxRepetitionsUnconfirmedUplink = 0;
 34852  0047E8  0E00               	movlw	0
 34853  0047EA  6FDB               	movwf	(_loRa+214)& (0+255),b
 34854                           
 34855                           ; BSR set to: 2
 34856                           ;lorawan_eu.c: 182: loRa.counterRepetitionsConfirmedUplink = 1;
 34857  0047EC  0E01               	movlw	1
 34858  0047EE  6FDE               	movwf	(_loRa+217)& (0+255),b
 34859                           
 34860                           ; BSR set to: 2
 34861                           ;lorawan_eu.c: 183: loRa.counterRepetitionsUnconfirmedUplink = 1;
 34862  0047F0  0E01               	movlw	1
 34863  0047F2  6FDD               	movwf	(_loRa+216)& (0+255),b
 34864                           
 34865                           ; BSR set to: 2
 34866                           ;lorawan_eu.c: 185: loRa.batteryLevel = (0xFF);
 34867  0047F4  69E5               	setf	(_loRa+224)& (0+255),b
 34868                           
 34869                           ; BSR set to: 2
 34870                           ;lorawan_eu.c: 187: loRa.ismBand = ismBandNew;
 34871  0047F6  C0A9  F2A9         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 34872                           
 34873                           ; BSR set to: 2
 34874                           ;lorawan_eu.c: 189: loRa.deviceClass = CLASS_A;
 34875  0047FA  0E00               	movlw	0
 34876  0047FC  6F17               	movwf	(_loRa+18)& (0+255),b
 34877                           
 34878                           ; BSR set to: 2
 34879                           ;lorawan_eu.c: 192: loRa.maxChannels = 16;
 34880  0047FE  0E10               	movlw	16
 34881  004800  6FF2               	movwf	(_loRa+237)& (0+255),b
 34882                           
 34883                           ; BSR set to: 2
 34884                           ;lorawan_eu.c: 193: if(ISM_EU868 == ismBandNew)
 34885  004802  0100               	movlb	0	; () banked
 34886  004804  51A9               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 34887  004806  A4D8               	btfss	status,2,c
 34888  004808  D01B               	goto	l21582
 34889                           
 34890                           ; BSR set to: 0
 34891                           ;lorawan_eu.c: 194: {;lorawan_eu.c: 195: RADIO_Init(&radioBuffer[16], (868100000));
 34892  00480A  0ED7               	movlw	low (_radioBuffer+16)
 34893  00480C  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34894  00480E  0E07               	movlw	high (_radioBuffer+16)
 34895  004810  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34896  004812  0EA0               	movlw	160
 34897  004814  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34898  004816  0E27               	movlw	39
 34899  004818  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34900  00481A  0EBE               	movlw	190
 34901  00481C  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34902  00481E  0E33               	movlw	51
 34903  004820  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34904  004822  EC63  F025         	call	_RADIO_Init	;wreg free
 34905                           
 34906                           ;lorawan_eu.c: 197: InitDefault868Channels ();
 34907  004826  EC0A  F045         	call	_InitDefault868Channels	;wreg free
 34908                           
 34909                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.dataRate = (0);
 34910  00482A  0E00               	movlw	0
 34911  00482C  0102               	movlb	2	; () banked
 34912  00482E  6F21               	movwf	(_loRa+28)& (0+255),b
 34913                           
 34914                           ; BSR set to: 2
 34915                           ;lorawan_eu.c: 200: loRa.receiveWindow2Parameters.frequency = (869525000);
 34916  004830  0E08               	movlw	8
 34917  004832  6F1D               	movwf	(_loRa+24)& (0+255),b
 34918  004834  0EE6               	movlw	230
 34919  004836  6F1E               	movwf	(_loRa+25)& (0+255),b
 34920  004838  0ED3               	movlw	211
 34921  00483A  6F1F               	movwf	(_loRa+26)& (0+255),b
 34922  00483C  0E33               	movlw	51
 34923  00483E  D01A               	goto	L34
 34924  004840                     l21582:
 34925                           
 34926                           ; BSR set to: 0
 34927                           ;lorawan_eu.c: 202: else;lorawan_eu.c: 203: {;lorawan_eu.c: 204: RADIO_Init(&radioBuffer
      +                          [16], (433300000));
 34928  004840  0ED7               	movlw	low (_radioBuffer+16)
 34929  004842  6F79               	movwf	RADIO_Init@radioBuffer& (0+255),b
 34930  004844  0E07               	movlw	high (_radioBuffer+16)
 34931  004846  6F7A               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 34932  004848  0E20               	movlw	32
 34933  00484A  6F7B               	movwf	RADIO_Init@frequency& (0+255),b
 34934  00484C  0EA2               	movlw	162
 34935  00484E  6F7C               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 34936  004850  0ED3               	movlw	211
 34937  004852  6F7D               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 34938  004854  0E19               	movlw	25
 34939  004856  6F7E               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 34940  004858  EC63  F025         	call	_RADIO_Init	;wreg free
 34941                           
 34942                           ;lorawan_eu.c: 206: InitDefault433Channels ();
 34943  00485C  EC46  F045         	call	_InitDefault433Channels	;wreg free
 34944                           
 34945                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.dataRate = (0);
 34946  004860  0E00               	movlw	0
 34947  004862  0102               	movlb	2	; () banked
 34948  004864  6F21               	movwf	(_loRa+28)& (0+255),b
 34949                           
 34950                           ; BSR set to: 2
 34951                           ;lorawan_eu.c: 209: loRa.receiveWindow2Parameters.frequency = (434665000);
 34952  004866  0E28               	movlw	40
 34953  004868  6F1D               	movwf	(_loRa+24)& (0+255),b
 34954  00486A  0E76               	movlw	118
 34955  00486C  6F1E               	movwf	(_loRa+25)& (0+255),b
 34956  00486E  0EE8               	movlw	232
 34957  004870  6F1F               	movwf	(_loRa+26)& (0+255),b
 34958  004872  0E19               	movlw	25
 34959  004874                     L34:
 34960  004874  6F20               	movwf	(_loRa+27)& (0+255),b
 34961                           
 34962                           ; BSR set to: 2
 34963                           ;lorawan_eu.c: 210: };lorawan_eu.c: 212: loRa.txPower = 1;
 34964  004876  0E01               	movlw	1
 34965  004878  6FE6               	movwf	(_loRa+225)& (0+255),b
 34966                           
 34967                           ; BSR set to: 2
 34968                           ;lorawan_eu.c: 214: loRa.currentDataRate = 0;
 34969  00487A  0E00               	movlw	0
 34970  00487C  6FE4               	movwf	(_loRa+223)& (0+255),b
 34971                           
 34972                           ; BSR set to: 2
 34973                           ;lorawan_eu.c: 216: UpdateMinMaxChDataRate ();
 34974  00487E  ECD8  F03B         	call	_UpdateMinMaxChDataRate	;wreg free
 34975                           
 34976                           ;lorawan_eu.c: 219: loRa.macKeys.value = 0;
 34977  004882  0E00               	movlw	0
 34978  004884  0102               	movlb	2	; () banked
 34979  004886  6FAB               	movwf	(_loRa+166)& (0+255),b
 34980  004888  0E00               	movlw	0
 34981  00488A  6FAA               	movwf	(_loRa+165)& (0+255),b
 34982                           
 34983                           ; BSR set to: 2
 34984                           ;lorawan_eu.c: 220: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 34985  00488C  0E22               	movlw	low (_loRa+29)
 34986  00488E  0100               	movlb	0	; () banked
 34987  004890  6F60               	movwf	memset@p1& (0+255),b
 34988  004892  0E02               	movlw	high (_loRa+29)
 34989  004894  6F61               	movwf	(memset@p1+1)& (0+255),b
 34990  004896  0E00               	movlw	0
 34991  004898  6F63               	movwf	(memset@c+1)& (0+255),b
 34992  00489A  0E00               	movlw	0
 34993  00489C  6F62               	movwf	memset@c& (0+255),b
 34994  00489E  0E00               	movlw	0
 34995  0048A0  6F65               	movwf	(memset@n+1)& (0+255),b
 34996  0048A2  0E69               	movlw	105
 34997  0048A4  6F64               	movwf	memset@n& (0+255),b
 34998  0048A6  EC0D  F050         	call	_memset	;wreg free
 34999                           
 35000                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay1 = 1000UL;
 35001  0048AA  0E03               	movlw	3
 35002  0048AC  0102               	movlb	2	; () banked
 35003  0048AE  6F9A               	movwf	(_loRa+149)& (0+255),b
 35004  0048B0  0EE8               	movlw	232
 35005  0048B2  6F99               	movwf	(_loRa+148)& (0+255),b
 35006                           
 35007                           ; BSR set to: 2
 35008                           ;lorawan_eu.c: 224: loRa.protocolParameters.receiveDelay2 = 2000UL;
 35009  0048B4  0E07               	movlw	7
 35010  0048B6  6F9C               	movwf	(_loRa+151)& (0+255),b
 35011  0048B8  0ED0               	movlw	208
 35012  0048BA  6F9B               	movwf	(_loRa+150)& (0+255),b
 35013                           
 35014                           ; BSR set to: 2
 35015                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 35016  0048BC  0E13               	movlw	19
 35017  0048BE  6F9E               	movwf	(_loRa+153)& (0+255),b
 35018  0048C0  0E88               	movlw	136
 35019  0048C2  6F9D               	movwf	(_loRa+152)& (0+255),b
 35020                           
 35021                           ; BSR set to: 2
 35022                           ;lorawan_eu.c: 226: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 35023  0048C4  0E17               	movlw	23
 35024  0048C6  6FA0               	movwf	(_loRa+155)& (0+255),b
 35025  0048C8  0E70               	movlw	112
 35026  0048CA  6F9F               	movwf	(_loRa+154)& (0+255),b
 35027                           
 35028                           ; BSR set to: 2
 35029                           ;lorawan_eu.c: 227: loRa.protocolParameters.ackTimeout = 2000;
 35030  0048CC  0E07               	movlw	7
 35031  0048CE  6FA6               	movwf	(_loRa+161)& (0+255),b
 35032  0048D0  0ED0               	movlw	208
 35033  0048D2  6FA5               	movwf	(_loRa+160)& (0+255),b
 35034                           
 35035                           ; BSR set to: 2
 35036                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckDelay = 32;
 35037  0048D4  0E20               	movlw	32
 35038  0048D6  6FA8               	movwf	(_loRa+163)& (0+255),b
 35039                           
 35040                           ; BSR set to: 2
 35041                           ;lorawan_eu.c: 229: loRa.protocolParameters.adrAckLimit = 64;
 35042  0048D8  0E40               	movlw	64
 35043  0048DA  6FA7               	movwf	(_loRa+162)& (0+255),b
 35044                           
 35045                           ; BSR set to: 2
 35046                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxFcntGap = 16384;
 35047  0048DC  0E40               	movlw	64
 35048  0048DE  6FA2               	movwf	(_loRa+157)& (0+255),b
 35049  0048E0  0E00               	movlw	0
 35050  0048E2  6FA1               	movwf	(_loRa+156)& (0+255),b
 35051                           
 35052                           ; BSR set to: 2
 35053                           ;lorawan_eu.c: 231: loRa.protocolParameters.maxMultiFcntGap = 16384;
 35054  0048E4  0E40               	movlw	64
 35055  0048E6  6FA4               	movwf	(_loRa+159)& (0+255),b
 35056  0048E8  0E00               	movlw	0
 35057  0048EA  6FA3               	movwf	(_loRa+158)& (0+255),b
 35058                           
 35059                           ; BSR set to: 2
 35060                           ;lorawan_eu.c: 233: LORAWAN_LinkCheckConfigure (0);
 35061  0048EC  0E00               	movlw	0
 35062  0048EE  0100               	movlb	0	; () banked
 35063  0048F0  6F9F               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 35064  0048F2  0E00               	movlw	0
 35065  0048F4  6F9E               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 35066  0048F6  EC37  F029         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 35067  0048FA  0012               	return		;funcret
 35068  0048FC                     __end_of_LORAWAN_Reset:
 35069                           	opt callstack 0
 35070                           
 35071 ;; *************** function _UpdateMinMaxChDataRate *****************
 35072 ;; Defined at:
 35073 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35074 ;; Parameters:    Size  Location     Type
 35075 ;;		None
 35076 ;; Auto vars:     Size  Location     Type
 35077 ;;  i               1    1[BANK0 ] unsigned char 
 35078 ;; Return value:  Size  Location     Type
 35079 ;;                  1    wreg      void 
 35080 ;; Registers used:
 35081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35082 ;; Tracked objects:
 35083 ;;		On entry : 0/0
 35084 ;;		On exit  : 0/0
 35085 ;;		Unchanged: 0/0
 35086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35088 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35089 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35090 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35091 ;;Total ram usage:        2 bytes
 35092 ;; Hardware stack levels used:    1
 35093 ;; Hardware stack levels required when called:    7
 35094 ;; This function calls:
 35095 ;;		Nothing
 35096 ;; This function is called by:
 35097 ;;		_LORAWAN_Reset
 35098 ;; This function uses a non-reentrant model
 35099 ;;
 35100                           
 35101                           	psect	text210
 35102  0077B0                     __ptext210:
 35103                           	opt callstack 0
 35104  0077B0                     _UpdateMinMaxChDataRate:
 35105                           	opt callstack 22
 35106                           
 35107                           ;lorawan.c: 1065: uint8_t i;;lorawan.c: 1068: loRa.minDataRate = 7;
 35108                           
 35109                           ;incstack = 0
 35110  0077B0  0E07               	movlw	7
 35111  0077B2  0102               	movlb	2	; () banked
 35112  0077B4  6FF0               	movwf	(_loRa+235)& (0+255),b
 35113                           
 35114                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 35115  0077B6  0E00               	movlw	0
 35116  0077B8  6FF1               	movwf	(_loRa+236)& (0+255),b
 35117                           
 35118                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 35119  0077BA  0E00               	movlw	0
 35120  0077BC  0100               	movlb	0	; () banked
 35121  0077BE  6F61               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 35122  0077C0  D055               	goto	l15990
 35123  0077C2                     l15978:
 35124                           
 35125                           ; BSR set to: 0
 35126                           ;lorawan.c: 1072: {;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate)
      +                           && (Channels[i].status == 1) )
 35127  0077C2  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35128  0077C4  0D0E               	mullw	14
 35129  0077C6  0E19               	movlw	low (_Channels+5)
 35130  0077C8  24F3               	addwf	prodl,w,c
 35131  0077CA  6ED9               	movwf	fsr2l,c
 35132  0077CC  0E04               	movlw	high (_Channels+5)
 35133  0077CE  20F4               	addwfc	prodh,w,c
 35134  0077D0  6EDA               	movwf	fsr2h,c
 35135  0077D2  0104               	movlb	4	; () banked
 35136  0077D4  50DF               	movf	223,w,c
 35137  0077D6  0B0F               	andlw	15
 35138  0077D8  0100               	movlb	0	; () banked
 35139  0077DA  6F60               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 35140  0077DC  0102               	movlb	2	; () banked
 35141  0077DE  51F0               	movf	(_loRa+235)& (0+255),w,b
 35142  0077E0  0100               	movlb	0	; () banked
 35143  0077E2  5D60               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 35144  0077E4  B0D8               	btfsc	status,0,c
 35145  0077E6  D018               	goto	l1888
 35146                           
 35147                           ; BSR set to: 0
 35148  0077E8  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35149  0077EA  0D0E               	mullw	14
 35150  0077EC  0E18               	movlw	low (_Channels+4)
 35151  0077EE  24F3               	addwf	prodl,w,c
 35152  0077F0  6ED9               	movwf	fsr2l,c
 35153  0077F2  0E04               	movlw	high (_Channels+4)
 35154  0077F4  20F4               	addwfc	prodh,w,c
 35155  0077F6  6EDA               	movwf	fsr2h,c
 35156  0077F8  04DE               	decf	postinc2,w,c
 35157  0077FA  A4D8               	btfss	status,2,c
 35158  0077FC  D00D               	goto	l1888
 35159                           
 35160                           ; BSR set to: 0
 35161                           ;lorawan.c: 1074: {;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 35162  0077FE  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35163  007800  0D0E               	mullw	14
 35164  007802  0E19               	movlw	low (_Channels+5)
 35165  007804  24F3               	addwf	prodl,w,c
 35166  007806  6ED9               	movwf	fsr2l,c
 35167  007808  0E04               	movlw	high (_Channels+5)
 35168  00780A  20F4               	addwfc	prodh,w,c
 35169  00780C  6EDA               	movwf	fsr2h,c
 35170  00780E  0104               	movlb	4	; () banked
 35171  007810  50DF               	movf	223,w,c
 35172  007812  0B0F               	andlw	15
 35173  007814  0102               	movlb	2	; () banked
 35174  007816  6FF0               	movwf	(_loRa+235)& (0+255),b
 35175  007818                     l1888:
 35176                           
 35177                           ;lorawan.c: 1076: };lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate)
      +                           && (Channels[i].status == 1) )
 35178  007818  0100               	movlb	0	; () banked
 35179  00781A  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35180  00781C  0D0E               	mullw	14
 35181  00781E  0E19               	movlw	low (_Channels+5)
 35182  007820  24F3               	addwf	prodl,w,c
 35183  007822  6ED9               	movwf	fsr2l,c
 35184  007824  0E04               	movlw	high (_Channels+5)
 35185  007826  20F4               	addwfc	prodh,w,c
 35186  007828  6EDA               	movwf	fsr2h,c
 35187  00782A  0104               	movlb	4	; () banked
 35188  00782C  38DF               	swapf	223,w,c
 35189  00782E  0B0F               	andlw	15
 35190  007830  0102               	movlb	2	; () banked
 35191  007832  61F1               	cpfslt	(_loRa+236)& (0+255),b
 35192  007834  D019               	goto	l15988
 35193                           
 35194                           ; BSR set to: 2
 35195  007836  0100               	movlb	0	; () banked
 35196  007838  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35197  00783A  0D0E               	mullw	14
 35198  00783C  0E18               	movlw	low (_Channels+4)
 35199  00783E  24F3               	addwf	prodl,w,c
 35200  007840  6ED9               	movwf	fsr2l,c
 35201  007842  0E04               	movlw	high (_Channels+4)
 35202  007844  20F4               	addwfc	prodh,w,c
 35203  007846  6EDA               	movwf	fsr2h,c
 35204  007848  04DE               	decf	postinc2,w,c
 35205  00784A  A4D8               	btfss	status,2,c
 35206  00784C  D00D               	goto	l15988
 35207                           
 35208                           ; BSR set to: 0
 35209                           ;lorawan.c: 1078: {;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 35210  00784E  5161               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35211  007850  0D0E               	mullw	14
 35212  007852  0E19               	movlw	low (_Channels+5)
 35213  007854  24F3               	addwf	prodl,w,c
 35214  007856  6ED9               	movwf	fsr2l,c
 35215  007858  0E04               	movlw	high (_Channels+5)
 35216  00785A  20F4               	addwfc	prodh,w,c
 35217  00785C  6EDA               	movwf	fsr2h,c
 35218  00785E  0104               	movlb	4	; () banked
 35219  007860  38DF               	swapf	223,w,c
 35220  007862  0B0F               	andlw	15
 35221  007864  0102               	movlb	2	; () banked
 35222  007866  6FF1               	movwf	(_loRa+236)& (0+255),b
 35223  007868                     l15988:
 35224  007868  0100               	movlb	0	; () banked
 35225  00786A  2B61               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 35226  00786C                     l15990:
 35227                           
 35228                           ; BSR set to: 0
 35229  00786C  0102               	movlb	2	; () banked
 35230  00786E  51F2               	movf	(_loRa+237)& (0+255),w,b
 35231  007870  0100               	movlb	0	; () banked
 35232  007872  5D61               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 35233  007874  B0D8               	btfsc	status,0,c
 35234  007876  0012               	return	
 35235  007878  D7A4               	goto	l15978
 35236  00787A                     __end_of_UpdateMinMaxChDataRate:
 35237                           	opt callstack 0
 35238                           
 35239 ;; *************** function _StopAllSoftwareTimers *****************
 35240 ;; Defined at:
 35241 ;;		line 966 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35242 ;; Parameters:    Size  Location     Type
 35243 ;;		None
 35244 ;; Auto vars:     Size  Location     Type
 35245 ;;		None
 35246 ;; Return value:  Size  Location     Type
 35247 ;;                  1    wreg      void 
 35248 ;; Registers used:
 35249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35250 ;; Tracked objects:
 35251 ;;		On entry : 0/0
 35252 ;;		On exit  : 0/0
 35253 ;;		Unchanged: 0/0
 35254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35259 ;;Total ram usage:        0 bytes
 35260 ;; Hardware stack levels used:    1
 35261 ;; Hardware stack levels required when called:    8
 35262 ;; This function calls:
 35263 ;;		_SwTimerStop
 35264 ;; This function is called by:
 35265 ;;		_LORAWAN_Init
 35266 ;;		_LORAWAN_Reset
 35267 ;; This function uses a non-reentrant model
 35268 ;;
 35269                           
 35270                           	psect	text211
 35271  009482                     __ptext211:
 35272                           	opt callstack 0
 35273  009482                     _StopAllSoftwareTimers:
 35274                           	opt callstack 21
 35275                           
 35276                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept1TimerId);
 35277                           
 35278                           ; BSR set to: 0
 35279                           ;incstack = 0
 35280  009482  0102               	movlb	2	; () banked
 35281  009484  51E7               	movf	(_loRa+226)& (0+255),w,b
 35282  009486  EC18  F052         	call	_SwTimerStop
 35283                           
 35284                           ;lorawan_eu.c: 969: SwTimerStop(loRa.joinAccept2TimerId);
 35285  00948A  0102               	movlb	2	; () banked
 35286  00948C  51E8               	movf	(_loRa+227)& (0+255),w,b
 35287  00948E  EC18  F052         	call	_SwTimerStop
 35288                           
 35289                           ;lorawan_eu.c: 970: SwTimerStop(loRa.linkCheckTimerId);
 35290  009492  0102               	movlb	2	; () banked
 35291  009494  51EC               	movf	(_loRa+231)& (0+255),w,b
 35292  009496  EC18  F052         	call	_SwTimerStop
 35293                           
 35294                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow1TimerId);
 35295  00949A  0102               	movlb	2	; () banked
 35296  00949C  51E9               	movf	(_loRa+228)& (0+255),w,b
 35297  00949E  EC18  F052         	call	_SwTimerStop
 35298                           
 35299                           ;lorawan_eu.c: 972: SwTimerStop(loRa.receiveWindow2TimerId);
 35300  0094A2  0102               	movlb	2	; () banked
 35301  0094A4  51EA               	movf	(_loRa+229)& (0+255),w,b
 35302  0094A6  EC18  F052         	call	_SwTimerStop
 35303                           
 35304                           ;lorawan_eu.c: 973: SwTimerStop(loRa.ackTimeoutTimerId);
 35305  0094AA  0102               	movlb	2	; () banked
 35306  0094AC  51ED               	movf	(_loRa+232)& (0+255),w,b
 35307  0094AE  EC18  F052         	call	_SwTimerStop
 35308                           
 35309                           ;lorawan_eu.c: 974: SwTimerStop(loRa.automaticReplyTimerId);
 35310  0094B2  0102               	movlb	2	; () banked
 35311  0094B4  51EB               	movf	(_loRa+230)& (0+255),w,b
 35312  0094B6  EC18  F052         	call	_SwTimerStop
 35313                           
 35314                           ;lorawan_eu.c: 975: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 35315  0094BA  0102               	movlb	2	; () banked
 35316  0094BC  51EF               	movf	(_loRa+234)& (0+255),w,b
 35317  0094BE  EC18  F052         	call	_SwTimerStop
 35318                           
 35319                           ;lorawan_eu.c: 976: SwTimerStop(loRa.abpJoinTimerId);
 35320  0094C2  0102               	movlb	2	; () banked
 35321  0094C4  51F8               	movf	(_loRa+243)& (0+255),w,b
 35322  0094C6  EC18  F052         	call	_SwTimerStop
 35323                           
 35324                           ;lorawan_eu.c: 977: SwTimerStop(loRa.dutyCycleTimerId);
 35325  0094CA  0102               	movlb	2	; () banked
 35326  0094CC  51EE               	movf	(_loRa+233)& (0+255),w,b
 35327  0094CE  EC18  F052         	call	_SwTimerStop
 35328  0094D2  0012               	return		;funcret
 35329  0094D4                     __end_of_StopAllSoftwareTimers:
 35330                           	opt callstack 0
 35331                           
 35332 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 35333 ;; Defined at:
 35334 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35335 ;; Parameters:    Size  Location     Type
 35336 ;;  syncWord        1    wreg     unsigned char 
 35337 ;; Auto vars:     Size  Location     Type
 35338 ;;  syncWord        1    0[BANK0 ] unsigned char 
 35339 ;; Return value:  Size  Location     Type
 35340 ;;                  1    wreg      void 
 35341 ;; Registers used:
 35342 ;;		wreg
 35343 ;; Tracked objects:
 35344 ;;		On entry : 0/0
 35345 ;;		On exit  : 0/0
 35346 ;;		Unchanged: 0/0
 35347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35349 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35351 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35352 ;;Total ram usage:        1 bytes
 35353 ;; Hardware stack levels used:    1
 35354 ;; Hardware stack levels required when called:    7
 35355 ;; This function calls:
 35356 ;;		Nothing
 35357 ;; This function is called by:
 35358 ;;		_LORAWAN_Reset
 35359 ;;		_ConfigureRadio
 35360 ;; This function uses a non-reentrant model
 35361 ;;
 35362                           
 35363                           	psect	text212
 35364  00A8D0                     __ptext212:
 35365                           	opt callstack 0
 35366  00A8D0                     _RADIO_SetLoRaSyncWord:
 35367                           	opt callstack 17
 35368                           
 35369                           ;incstack = 0
 35370                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 35371  00A8D0  0100               	movlb	0	; () banked
 35372  00A8D2  6F60               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 35373                           
 35374                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 35375  00A8D4  C060  F137         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 35376  00A8D8  0012               	return		;funcret
 35377  00A8DA                     __end_of_RADIO_SetLoRaSyncWord:
 35378                           	opt callstack 0
 35379                           
 35380 ;; *************** function _RADIO_Init *****************
 35381 ;; Defined at:
 35382 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35383 ;; Parameters:    Size  Location     Type
 35384 ;;  radioBuffer     2   25[BANK0 ] PTR unsigned char 
 35385 ;;		 -> radioBuffer(271), 
 35386 ;;  frequency       4   27[BANK0 ] unsigned long 
 35387 ;; Auto vars:     Size  Location     Type
 35388 ;;		None
 35389 ;; Return value:  Size  Location     Type
 35390 ;;                  1    wreg      void 
 35391 ;; Registers used:
 35392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35393 ;; Tracked objects:
 35394 ;;		On entry : 0/0
 35395 ;;		On exit  : 0/0
 35396 ;;		Unchanged: 0/0
 35397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35398 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35400 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35401 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35402 ;;Total ram usage:        7 bytes
 35403 ;; Hardware stack levels used:    1
 35404 ;; Hardware stack levels required when called:   11
 35405 ;; This function calls:
 35406 ;;		_RADIO_RegisterRead
 35407 ;;		_RADIO_RegisterWrite
 35408 ;;		_RADIO_Reset
 35409 ;;		_RADIO_WriteFrequency
 35410 ;;		_RADIO_WriteMode
 35411 ;;		_SwTimerCreate
 35412 ;;		_SwTimerSetCallback
 35413 ;;		_SwTimerStop
 35414 ;; This function is called by:
 35415 ;;		_LORAWAN_Init
 35416 ;;		_LORAWAN_Reset
 35417 ;; This function uses a non-reentrant model
 35418 ;;
 35419                           
 35420                           	psect	text213
 35421  004AC6                     __ptext213:
 35422                           	opt callstack 0
 35423  004AC6                     _RADIO_Init:
 35424                           	opt callstack 18
 35425                           
 35426                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 35427                           
 35428                           ;incstack = 0
 35429  004AC6  C07B  F129         	movff	RADIO_Init@frequency,_RadioConfiguration
 35430  004ACA  C07C  F12A         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 35431  004ACE  C07D  F12B         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 35432  004AD2  C07E  F12C         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 35433                           
 35434                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 35435  004AD6  0EA8               	movlw	168
 35436  004AD8  0101               	movlb	1	; () banked
 35437  004ADA  6F2D               	movwf	(_RadioConfiguration+4)& (0+255),b
 35438  004ADC  0E61               	movlw	97
 35439  004ADE  6F2E               	movwf	(_RadioConfiguration+5)& (0+255),b
 35440  004AE0  0E00               	movlw	0
 35441  004AE2  6F2F               	movwf	(_RadioConfiguration+6)& (0+255),b
 35442  004AE4  0E00               	movlw	0
 35443  004AE6  6F30               	movwf	(_RadioConfiguration+7)& (0+255),b
 35444                           
 35445                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 35446  004AE8  0E50               	movlw	80
 35447  004AEA  6F31               	movwf	(_RadioConfiguration+8)& (0+255),b
 35448  004AEC  0EC3               	movlw	195
 35449  004AEE  6F32               	movwf	(_RadioConfiguration+9)& (0+255),b
 35450  004AF0  0E00               	movlw	0
 35451  004AF2  6F33               	movwf	(_RadioConfiguration+10)& (0+255),b
 35452  004AF4  0E00               	movlw	0
 35453  004AF6  6F34               	movwf	(_RadioConfiguration+11)& (0+255),b
 35454                           
 35455                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 35456  004AF8  0E01               	movlw	1
 35457  004AFA  6F41               	movwf	(_RadioConfiguration+24)& (0+255),b
 35458                           
 35459                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 35460  004AFC  0E07               	movlw	7
 35461  004AFE  6F43               	movwf	(_RadioConfiguration+26)& (0+255),b
 35462                           
 35463                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 35464  004B00  0E01               	movlw	1
 35465  004B02  6F44               	movwf	(_RadioConfiguration+27)& (0+255),b
 35466                           
 35467                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 35468  004B04  0E01               	movlw	1
 35469  004B06  6F4A               	movwf	(_RadioConfiguration+33)& (0+255),b
 35470                           
 35471                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 35472  004B08  0E00               	movlw	0
 35473  004B0A  6F4B               	movwf	(_RadioConfiguration+34)& (0+255),b
 35474                           
 35475                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 35476  004B0C  0E00               	movlw	0
 35477  004B0E  6F36               	movwf	(_RadioConfiguration+13)& (0+255),b
 35478  004B10  0E08               	movlw	8
 35479  004B12  6F35               	movwf	(_RadioConfiguration+12)& (0+255),b
 35480                           
 35481                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 35482  004B14  0E0C               	movlw	12
 35483  004B16  6F42               	movwf	(_RadioConfiguration+25)& (0+255),b
 35484                           
 35485                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 35486  004B18  0E01               	movlw	1
 35487  004B1A  6F45               	movwf	(_RadioConfiguration+28)& (0+255),b
 35488                           
 35489                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 35490  004B1C  0E00               	movlw	0
 35491  004B1E  6F46               	movwf	(_RadioConfiguration+29)& (0+255),b
 35492                           
 35493                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 35494  004B20  0E00               	movlw	0
 35495  004B22  6F49               	movwf	(_RadioConfiguration+32)& (0+255),b
 35496                           
 35497                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 35498  004B24  0EC1               	movlw	193
 35499  004B26  6F38               	movwf	(_RadioConfiguration+15)& (0+255),b
 35500                           
 35501                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 35502  004B28  0E94               	movlw	148
 35503  004B2A  6F39               	movwf	(_RadioConfiguration+16)& (0+255),b
 35504                           
 35505                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 35506  004B2C  0EC1               	movlw	193
 35507  004B2E  6F3A               	movwf	(_RadioConfiguration+17)& (0+255),b
 35508                           
 35509                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 35510  004B30  0E03               	movlw	3
 35511  004B32  6F40               	movwf	(_RadioConfiguration+23)& (0+255),b
 35512                           
 35513                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 35514  004B34  0E34               	movlw	52
 35515  004B36  6F37               	movwf	(_RadioConfiguration+14)& (0+255),b
 35516                           
 35517                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 35518  004B38  0E00               	movlw	0
 35519  004B3A  6F4C               	movwf	(_RadioConfiguration+35)& (0+255),b
 35520                           
 35521                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 35522  004B3C  0E00               	movlw	0
 35523  004B3E  6F4D               	movwf	(_RadioConfiguration+36)& (0+255),b
 35524                           
 35525                           ; BSR set to: 1
 35526                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 35527  004B40  C079  F14E         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 35528  004B44  C07A  F14F         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 35529                           
 35530                           ; BSR set to: 1
 35531                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 35532  004B48  0E00               	movlw	0
 35533  004B4A  6F48               	movwf	(_RadioConfiguration+31)& (0+255),b
 35534  004B4C  0E00               	movlw	0
 35535  004B4E  6F47               	movwf	(_RadioConfiguration+30)& (0+255),b
 35536                           
 35537                           ; BSR set to: 1
 35538                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 35539  004B50  0E80               	movlw	128
 35540  004B52  6F5B               	movwf	(_RadioConfiguration+50)& (0+255),b
 35541                           
 35542                           ; BSR set to: 1
 35543                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 35544  004B54  0E98               	movlw	152
 35545  004B56  6F53               	movwf	(_RadioConfiguration+42)& (0+255),b
 35546  004B58  0E3A               	movlw	58
 35547  004B5A  6F54               	movwf	(_RadioConfiguration+43)& (0+255),b
 35548  004B5C  0E00               	movlw	0
 35549  004B5E  6F55               	movwf	(_RadioConfiguration+44)& (0+255),b
 35550  004B60  0E00               	movlw	0
 35551  004B62  6F56               	movwf	(_RadioConfiguration+45)& (0+255),b
 35552                           
 35553                           ; BSR set to: 1
 35554                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 35555  004B64  0E02               	movlw	2
 35556  004B66  6F5C               	movwf	(_RadioConfiguration+51)& (0+255),b
 35557                           
 35558                           ; BSR set to: 1
 35559                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 35560  004B68  0E0B               	movlw	11
 35561  004B6A  6F5D               	movwf	(_RadioConfiguration+52)& (0+255),b
 35562                           
 35563                           ; BSR set to: 1
 35564                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 35565  004B6C  0E12               	movlw	18
 35566  004B6E  6F5E               	movwf	(_RadioConfiguration+53)& (0+255),b
 35567                           
 35568                           ; BSR set to: 1
 35569                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 35570  004B70  0E00               	movlw	0
 35571  004B72  6F58               	movwf	(_RadioConfiguration+47)& (0+255),b
 35572  004B74  0E00               	movlw	0
 35573  004B76  6F59               	movwf	(_RadioConfiguration+48)& (0+255),b
 35574                           
 35575                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 35576  004B78  5157               	movf	(_RadioConfiguration+46)& (0+255),w,b
 35577  004B7A  A4D8               	btfss	status,2,c
 35578  004B7C  D026               	goto	l21376
 35579                           
 35580                           ; BSR set to: 1
 35581                           ;radio_driver_SX1276.c: 457: {;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirT
      +                          imerId = SwTimerCreate();
 35582  004B7E  EC82  F045         	call	_SwTimerCreate	;wreg free
 35583  004B82  0101               	movlb	1	; () banked
 35584  004B84  6F50               	movwf	(_RadioConfiguration+39)& (0+255),b
 35585                           
 35586                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 35587  004B86  EC82  F045         	call	_SwTimerCreate	;wreg free
 35588  004B8A  0101               	movlb	1	; () banked
 35589  004B8C  6F51               	movwf	(_RadioConfiguration+40)& (0+255),b
 35590                           
 35591                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 35592  004B8E  EC82  F045         	call	_SwTimerCreate	;wreg free
 35593  004B92  0101               	movlb	1	; () banked
 35594  004B94  6F52               	movwf	(_RadioConfiguration+41)& (0+255),b
 35595                           
 35596                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 35597  004B96  0ECA               	movlw	low _RADIO_RxFSKTimeout
 35598  004B98  0100               	movlb	0	; () banked
 35599  004B9A  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35600  004B9C  0E9B               	movlw	high _RADIO_RxFSKTimeout
 35601  004B9E  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35602  004BA0  0E00               	movlw	0
 35603  004BA2  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35604  004BA4  0101               	movlb	1	; () banked
 35605  004BA6  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 35606  004BA8  EC8F  F04E         	call	_SwTimerSetCallback
 35607                           
 35608                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 35609  004BAC  0E28               	movlw	low _RADIO_WatchdogTimeout
 35610  004BAE  0100               	movlb	0	; () banked
 35611  004BB0  6F60               	movwf	SwTimerSetCallback@callback& (0+255),b
 35612  004BB2  0E98               	movlw	high _RADIO_WatchdogTimeout
 35613  004BB4  6F61               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 35614  004BB6  0E00               	movlw	0
 35615  004BB8  6F62               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 35616  004BBA  0101               	movlb	1	; () banked
 35617  004BBC  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 35618  004BBE  EC8F  F04E         	call	_SwTimerSetCallback
 35619                           
 35620                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 35621  004BC2  0E01               	movlw	1
 35622  004BC4  0101               	movlb	1	; () banked
 35623  004BC6  6F57               	movwf	(_RadioConfiguration+46)& (0+255),b
 35624                           
 35625                           ;radio_driver_SX1276.c: 466: }
 35626  004BC8  D00B               	goto	l21378
 35627  004BCA                     l21376:
 35628                           
 35629                           ; BSR set to: 1
 35630                           ;radio_driver_SX1276.c: 467: else;radio_driver_SX1276.c: 468: {;radio_driver_SX1276.c: 4
      +                          69: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 35631  004BCA  5150               	movf	(_RadioConfiguration+39)& (0+255),w,b
 35632  004BCC  EC18  F052         	call	_SwTimerStop
 35633                           
 35634                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 35635  004BD0  0101               	movlb	1	; () banked
 35636  004BD2  5151               	movf	(_RadioConfiguration+40)& (0+255),w,b
 35637  004BD4  EC18  F052         	call	_SwTimerStop
 35638                           
 35639                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 35640  004BD8  0101               	movlb	1	; () banked
 35641  004BDA  5152               	movf	(_RadioConfiguration+41)& (0+255),w,b
 35642  004BDC  EC18  F052         	call	_SwTimerStop
 35643  004BE0                     l21378:
 35644                           
 35645                           ;radio_driver_SX1276.c: 472: };radio_driver_SX1276.c: 474: RADIO_Reset();
 35646  004BE0  EC7D  F04C         	call	_RADIO_Reset	;wreg free
 35647                           
 35648                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 35649  004BE4  0E00               	movlw	0
 35650  004BE6  0100               	movlb	0	; () banked
 35651  004BE8  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35652  004BEA  0E01               	movlw	1
 35653  004BEC  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35654  004BEE  0E01               	movlw	1
 35655  004BF0  ECEB  F035         	call	_RADIO_WriteMode
 35656                           
 35657                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 35658  004BF4  C129  F06D         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 35659  004BF8  C12A  F06E         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 35660  004BFC  C12B  F06F         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 35661  004C00  C12C  F070         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 35662  004C04  EC5A  F038         	call	_RADIO_WriteFrequency	;wreg free
 35663                           
 35664                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 35665  004C08  0E42               	movlw	66
 35666  004C0A  0100               	movlb	0	; () banked
 35667  004C0C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35668  004C0E  0E3B               	movlw	59
 35669  004C10  EC08  F052         	call	_RADIO_RegisterWrite
 35670  004C14                     l21386:
 35671  004C14  0E3B               	movlw	59
 35672  004C16  EC38  F051         	call	_RADIO_RegisterRead
 35673  004C1A  0100               	movlb	0	; () banked
 35674  004C1C  6F7F               	movwf	??_RADIO_Init& (0+255),b
 35675  004C1E  BB7F               	btfsc	??_RADIO_Init& (0+255),5,b
 35676  004C20  D7F9               	goto	l21386
 35677                           
 35678                           ; BSR set to: 0
 35679                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 35680  004C22  0E23               	movlw	35
 35681  004C24  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35682  004C26  0E0C               	movlw	12
 35683  004C28  EC08  F052         	call	_RADIO_RegisterWrite
 35684                           
 35685                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 35686  004C2C  0E1E               	movlw	30
 35687  004C2E  0100               	movlb	0	; () banked
 35688  004C30  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35689  004C32  0E0D               	movlw	13
 35690  004C34  EC08  F052         	call	_RADIO_RegisterWrite
 35691                           
 35692                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 35693  004C38  0EAA               	movlw	170
 35694  004C3A  0100               	movlb	0	; () banked
 35695  004C3C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35696  004C3E  0E1F               	movlw	31
 35697  004C40  EC08  F052         	call	_RADIO_RegisterWrite
 35698                           
 35699                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 35700  004C44  0E8F               	movlw	143
 35701  004C46  0100               	movlb	0	; () banked
 35702  004C48  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35703  004C4A  0E35               	movlw	53
 35704  004C4C  EC08  F052         	call	_RADIO_RegisterWrite
 35705                           
 35706                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 35707  004C50  0EFF               	movlw	255
 35708  004C52  0100               	movlb	0	; () banked
 35709  004C54  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35710  004C56  0E32               	movlw	50
 35711  004C58  EC08  F052         	call	_RADIO_RegisterWrite
 35712                           
 35713                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 35714  004C5C  0E40               	movlw	64
 35715  004C5E  0100               	movlb	0	; () banked
 35716  004C60  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35717  004C62  0E31               	movlw	49
 35718  004C64  EC08  F052         	call	_RADIO_RegisterWrite
 35719                           
 35720                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 35721  004C68  0E01               	movlw	1
 35722  004C6A  0100               	movlb	0	; () banked
 35723  004C6C  6F65               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 35724  004C6E  0E01               	movlw	1
 35725  004C70  6F66               	movwf	RADIO_WriteMode@blocking& (0+255),b
 35726  004C72  0E00               	movlw	0
 35727  004C74  ECEB  F035         	call	_RADIO_WriteMode
 35728                           
 35729                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 35730  004C78  0EFF               	movlw	255
 35731  004C7A  0100               	movlb	0	; () banked
 35732  004C7C  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35733  004C7E  0E23               	movlw	35
 35734  004C80  EC08  F052         	call	_RADIO_RegisterWrite
 35735                           
 35736                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 35737  004C84  0E42               	movlw	66
 35738  004C86  EC38  F051         	call	_RADIO_RegisterRead
 35739  004C8A  0101               	movlb	1	; () banked
 35740  004C8C  6F5A               	movwf	(_RadioConfiguration+49)& (0+255),b
 35741                           
 35742                           ; BSR set to: 1
 35743  004C8E  0012               	return		;funcret
 35744  004C90                     __end_of_RADIO_Init:
 35745                           	opt callstack 0
 35746                           
 35747 ;; *************** function _SwTimerSetCallback *****************
 35748 ;; Defined at:
 35749 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35750 ;; Parameters:    Size  Location     Type
 35751 ;;  timerId         1    wreg     unsigned char 
 35752 ;;  callback        2    0[BANK0 ] PTR FTN(unsigned char ,)
 35753 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 35754 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 35755 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 35756 ;;  callbackPara    1    2[BANK0 ] unsigned char 
 35757 ;; Auto vars:     Size  Location     Type
 35758 ;;  timerId         1    3[BANK0 ] unsigned char 
 35759 ;; Return value:  Size  Location     Type
 35760 ;;                  1    wreg      void 
 35761 ;; Registers used:
 35762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 35763 ;; Tracked objects:
 35764 ;;		On entry : 0/0
 35765 ;;		On exit  : 0/0
 35766 ;;		Unchanged: 0/0
 35767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35768 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35771 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35772 ;;Total ram usage:        4 bytes
 35773 ;; Hardware stack levels used:    1
 35774 ;; Hardware stack levels required when called:    7
 35775 ;; This function calls:
 35776 ;;		Nothing
 35777 ;; This function is called by:
 35778 ;;		_RADIO_Init
 35779 ;;		_SetCallbackSoftwareTimers
 35780 ;; This function uses a non-reentrant model
 35781 ;;
 35782                           
 35783                           	psect	text214
 35784  009D1E                     __ptext214:
 35785                           	opt callstack 0
 35786  009D1E                     _SwTimerSetCallback:
 35787                           	opt callstack 21
 35788                           
 35789                           ; BSR set to: 1
 35790                           ;incstack = 0
 35791                           ;SwTimerSetCallback@timerId stored from wreg
 35792  009D1E  0100               	movlb	0	; () banked
 35793  009D20  6F63               	movwf	SwTimerSetCallback@timerId& (0+255),b
 35794                           
 35795                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 35796  009D22  0100               	movlb	0	; () banked
 35797  009D24  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35798  009D26  0D08               	mullw	8
 35799  009D28  0E06               	movlw	low (_swTimers+6)
 35800  009D2A  24F3               	addwf	prodl,w,c
 35801  009D2C  6ED9               	movwf	fsr2l,c
 35802  009D2E  0E03               	movlw	high (_swTimers+6)
 35803  009D30  20F4               	addwfc	prodh,w,c
 35804  009D32  6EDA               	movwf	fsr2h,c
 35805  009D34  C060  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 35806  009D38  C061  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 35807                           
 35808                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 35809  009D3C  5163               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 35810  009D3E  0D08               	mullw	8
 35811  009D40  0E05               	movlw	low (_swTimers+5)
 35812  009D42  24F3               	addwf	prodl,w,c
 35813  009D44  6ED9               	movwf	fsr2l,c
 35814  009D46  0E03               	movlw	high (_swTimers+5)
 35815  009D48  20F4               	addwfc	prodh,w,c
 35816  009D4A  6EDA               	movwf	fsr2h,c
 35817  009D4C  C062  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 35818                           
 35819                           ; BSR set to: 0
 35820  009D50  0012               	return		;funcret
 35821  009D52                     __end_of_SwTimerSetCallback:
 35822                           	opt callstack 0
 35823                           
 35824 ;; *************** function _RADIO_WriteMode *****************
 35825 ;; Defined at:
 35826 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35827 ;; Parameters:    Size  Location     Type
 35828 ;;  newMode         1    wreg     enum E6591
 35829 ;;  newModulatio    1    5[BANK0 ] enum E5853
 35830 ;;  blocking        1    6[BANK0 ] unsigned char 
 35831 ;; Auto vars:     Size  Location     Type
 35832 ;;  newMode         1   10[BANK0 ] enum E6591
 35833 ;;  opMode          1   11[BANK0 ] unsigned char 
 35834 ;;  currentMode     1    9[BANK0 ] enum E6591
 35835 ;;  dioMapping      1    8[BANK0 ] unsigned char 
 35836 ;;  currentModul    1    7[BANK0 ] enum E5853
 35837 ;; Return value:  Size  Location     Type
 35838 ;;                  1    wreg      void 
 35839 ;; Registers used:
 35840 ;;		wreg, status,2, status,0, cstack
 35841 ;; Tracked objects:
 35842 ;;		On entry : 0/0
 35843 ;;		On exit  : 0/0
 35844 ;;		Unchanged: 0/0
 35845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35846 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35847 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35849 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35850 ;;Total ram usage:        7 bytes
 35851 ;; Hardware stack levels used:    1
 35852 ;; Hardware stack levels required when called:   10
 35853 ;; This function calls:
 35854 ;;		_HALDIO5PinValue
 35855 ;;		_RADIO_RegisterRead
 35856 ;;		_RADIO_RegisterWrite
 35857 ;;		_SystemBlockingWaitMs
 35858 ;; This function is called by:
 35859 ;;		_RADIO_Init
 35860 ;;		_RADIO_WriteConfiguration
 35861 ;;		_RADIO_Transmit
 35862 ;;		_RADIO_ReceiveStart
 35863 ;;		_RADIO_ReceiveStop
 35864 ;;		_RADIO_RxDone
 35865 ;;		_RADIO_FSKPayloadReady
 35866 ;;		_RADIO_RxTimeout
 35867 ;;		_RADIO_TxDone
 35868 ;;		_RADIO_FSKPacketSent
 35869 ;;		_RADIO_ReadRandom
 35870 ;;		_RADIO_RxFSKTimeout
 35871 ;;		_RADIO_WatchdogTimeout
 35872 ;;		_RADIO_StopCW
 35873 ;; This function uses a non-reentrant model
 35874 ;;
 35875                           
 35876                           	psect	text215
 35877  006BD6                     __ptext215:
 35878                           	opt callstack 0
 35879  006BD6                     _RADIO_WriteMode:
 35880                           	opt callstack 16
 35881                           
 35882                           ; BSR set to: 0
 35883                           ;incstack = 0
 35884                           ;RADIO_WriteMode@newMode stored from wreg
 35885  006BD6  0100               	movlb	0	; () banked
 35886  006BD8  6F6A               	movwf	RADIO_WriteMode@newMode& (0+255),b
 35887                           
 35888                           ;radio_driver_SX1276.c: 149: uint8_t opMode;;radio_driver_SX1276.c: 150: uint8_t dioMapp
      +                          ing;;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;;radio_driver_SX127
      +                          6.c: 152: RadioMode_t currentMode;;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == ne
      +                          wModulation) &&;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == 
      +                          newMode)))
 35889  006BDA  0100               	movlb	0	; () banked
 35890  006BDC  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35891  006BDE  A4D8               	btfss	status,2,c
 35892  006BE0  D008               	goto	l18162
 35893                           
 35894                           ; BSR set to: 0
 35895  006BE2  0E06               	movlw	6
 35896  006BE4  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35897  006BE6  B4D8               	btfsc	status,2,c
 35898  006BE8  0012               	return	
 35899                           
 35900                           ; BSR set to: 0
 35901  006BEA  0E07               	movlw	7
 35902  006BEC  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 35903  006BEE  B4D8               	btfsc	status,2,c
 35904  006BF0  0012               	return	
 35905  006BF2                     l18162:
 35906                           
 35907                           ; BSR set to: 0
 35908                           ;radio_driver_SX1276.c: 159: };radio_driver_SX1276.c: 162: newMode &= 0x07;
 35909  006BF2  0E07               	movlw	7
 35910  006BF4  176A               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 35911                           
 35912                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 35913  006BF6  0E01               	movlw	1
 35914  006BF8  1765               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 35915                           
 35916                           ; BSR set to: 0
 35917                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 35918  006BFA  0E01               	movlw	1
 35919  006BFC  EC38  F051         	call	_RADIO_RegisterRead
 35920  006C00  0100               	movlb	0	; () banked
 35921  006C02  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 35922                           
 35923                           ; BSR set to: 0
 35924                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 35925  006C04  AF6B               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 35926  006C06  D002               	goto	l18170
 35927                           
 35928                           ; BSR set to: 0
 35929                           ;radio_driver_SX1276.c: 168: {;radio_driver_SX1276.c: 169: currentModulation = MODULATIO
      +                          N_LORA;
 35930  006C08  0E01               	movlw	1
 35931  006C0A  D001               	goto	L35
 35932  006C0C                     l18170:
 35933                           
 35934                           ; BSR set to: 0
 35935                           ;radio_driver_SX1276.c: 171: else;radio_driver_SX1276.c: 172: {;radio_driver_SX1276.c: 1
      +                          73: currentModulation = MODULATION_FSK;
 35936  006C0C  0E00               	movlw	0
 35937  006C0E                     L35:
 35938  006C0E  6F67               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 35939                           
 35940                           ; BSR set to: 0
 35941                           ;radio_driver_SX1276.c: 174: };radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 35942  006C10  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35943  006C12  0B07               	andlw	7
 35944  006C14  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 35945                           
 35946                           ; BSR set to: 0
 35947                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 35948  006C16  5167               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 35949  006C18  1965               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 35950  006C1A  B4D8               	btfsc	status,2,c
 35951  006C1C  D01B               	goto	l18190
 35952                           
 35953                           ; BSR set to: 0
 35954                           ;radio_driver_SX1276.c: 181: {;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode
      +                          )
 35955  006C1E  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 35956  006C20  B4D8               	btfsc	status,2,c
 35957  006C22  D009               	goto	l18182
 35958                           
 35959                           ; BSR set to: 0
 35960                           ;radio_driver_SX1276.c: 184: {;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opM
      +                          ode & (~0x07));
 35961  006C24  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35962  006C26  0BF8               	andlw	248
 35963  006C28  6F62               	movwf	RADIO_RegisterWrite@value& (0+255),b
 35964  006C2A  0E01               	movlw	1
 35965  006C2C  EC08  F052         	call	_RADIO_RegisterWrite
 35966                           
 35967                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 35968  006C30  0E00               	movlw	0
 35969  006C32  0100               	movlb	0	; () banked
 35970  006C34  6F69               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 35971  006C36                     l18182:
 35972                           
 35973                           ; BSR set to: 0
 35974                           ;radio_driver_SX1276.c: 188: };radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModu
      +                          lation)
 35975  006C36  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 35976  006C38  A4D8               	btfss	status,2,c
 35977  006C3A  D003               	goto	l18186
 35978                           
 35979                           ; BSR set to: 0
 35980                           ;radio_driver_SX1276.c: 191: {;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 35981  006C3C  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35982  006C3E  0B78               	andlw	120
 35983  006C40  D003               	goto	L36
 35984  006C42                     l18186:
 35985                           
 35986                           ; BSR set to: 0
 35987                           ;radio_driver_SX1276.c: 195: else;radio_driver_SX1276.c: 196: {;radio_driver_SX1276.c: 1
      +                          98: opMode = 0x80 | (opMode & (~0x87));
 35988  006C42  516B               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 35989  006C44  0B78               	andlw	120
 35990  006C46  0980               	iorlw	128
 35991  006C48                     L36:
 35992  006C48  6F6B               	movwf	RADIO_WriteMode@opMode& (0+255),b
 35993                           
 35994                           ; BSR set to: 0
 35995                           ;radio_driver_SX1276.c: 199: };radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opM
      +                          ode);
 35996  006C4A  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 35997  006C4E  0E01               	movlw	1
 35998  006C50  EC08  F052         	call	_RADIO_RegisterWrite
 35999  006C54                     l18190:
 36000                           
 36001                           ;radio_driver_SX1276.c: 201: };radio_driver_SX1276.c: 207: if (newMode != currentMode)
 36002  006C54  0100               	movlb	0	; () banked
 36003  006C56  5169               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 36004  006C58  196A               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 36005  006C5A  B4D8               	btfsc	status,2,c
 36006  006C5C  0012               	return	
 36007                           
 36008                           ; BSR set to: 0
 36009                           ;radio_driver_SX1276.c: 208: {;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) &
      +                          & (1 == blocking))
 36010  006C5E  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36011  006C60  B4D8               	btfsc	status,2,c
 36012  006C62  D015               	goto	l18206
 36013                           
 36014                           ; BSR set to: 0
 36015  006C64  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 36016  006C66  A4D8               	btfss	status,2,c
 36017  006C68  D012               	goto	l18206
 36018                           
 36019                           ; BSR set to: 0
 36020                           ;radio_driver_SX1276.c: 212: {;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRe
      +                          ad(0x41);
 36021  006C6A  0E41               	movlw	65
 36022  006C6C  EC38  F051         	call	_RADIO_RegisterRead
 36023  006C70  0100               	movlb	0	; () banked
 36024  006C72  6F68               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 36025                           
 36026                           ; BSR set to: 0
 36027                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 36028  006C74  5165               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 36029  006C76  A4D8               	btfss	status,2,c
 36030  006C78  D003               	goto	l18202
 36031                           
 36032                           ; BSR set to: 0
 36033                           ;radio_driver_SX1276.c: 215: {;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 36034  006C7A  0E30               	movlw	48
 36035  006C7C  1368               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 36036                           
 36037                           ;radio_driver_SX1276.c: 218: }
 36038  006C7E  D002               	goto	l18204
 36039  006C80                     l18202:
 36040                           
 36041                           ; BSR set to: 0
 36042                           ;radio_driver_SX1276.c: 219: else;radio_driver_SX1276.c: 220: {;radio_driver_SX1276.c: 2
      +                          22: dioMapping &= ~0x30;
 36043  006C80  0ECF               	movlw	207
 36044  006C82  1768               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 36045  006C84                     l18204:
 36046                           
 36047                           ; BSR set to: 0
 36048                           ;radio_driver_SX1276.c: 223: };radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dio
      +                          Mapping);
 36049  006C84  C068  F062         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 36050  006C88  0E41               	movlw	65
 36051  006C8A  EC08  F052         	call	_RADIO_RegisterWrite
 36052  006C8E                     l18206:
 36053                           
 36054                           ;radio_driver_SX1276.c: 225: };radio_driver_SX1276.c: 228: opMode &= ~0x07;
 36055  006C8E  0EF8               	movlw	248
 36056  006C90  0100               	movlb	0	; () banked
 36057  006C92  176B               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 36058                           
 36059                           ; BSR set to: 0
 36060                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 36061  006C94  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36062  006C96  136B               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 36063                           
 36064                           ; BSR set to: 0
 36065                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 36066  006C98  C06B  F062         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 36067  006C9C  0E01               	movlw	1
 36068  006C9E  EC08  F052         	call	_RADIO_RegisterWrite
 36069                           
 36070                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 36071  006CA2  0100               	movlb	0	; () banked
 36072  006CA4  0566               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 36073  006CA6  A4D8               	btfss	status,2,c
 36074  006CA8  0012               	return	
 36075                           
 36076                           ; BSR set to: 0
 36077                           ;radio_driver_SX1276.c: 234: {;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 36078  006CAA  516A               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 36079  006CAC  B4D8               	btfsc	status,2,c
 36080  006CAE  D006               	goto	l18218
 36081  006CB0                     u19200:
 36082  006CB0  EC03  F054         	call	_HALDIO5PinValue	;wreg free
 36083  006CB4  0900               	iorlw	0
 36084  006CB6  A4D8               	btfss	status,2,c
 36085  006CB8  0012               	return	
 36086  006CBA  D7FA               	goto	u19200
 36087  006CBC                     l18218:
 36088                           
 36089                           ; BSR set to: 0
 36090                           ;radio_driver_SX1276.c: 240: else;radio_driver_SX1276.c: 241: {;radio_driver_SX1276.c: 2
      +                          42: SystemBlockingWaitMs(1);
 36091  006CBC  0E01               	movlw	1
 36092  006CBE  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36093  006CC0  0E00               	movlw	0
 36094  006CC2  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36095  006CC4  0E00               	movlw	0
 36096  006CC6  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36097  006CC8  0E00               	movlw	0
 36098  006CCA  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36099  006CCC  EC6B  F04F         	call	_SystemBlockingWaitMs	;wreg free
 36100  006CD0  0012               	return		;funcret
 36101  006CD2                     __end_of_RADIO_WriteMode:
 36102                           	opt callstack 0
 36103                           
 36104 ;; *************** function _RADIO_RegisterRead *****************
 36105 ;; Defined at:
 36106 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36107 ;; Parameters:    Size  Location     Type
 36108 ;;  reg             1    wreg     unsigned char 
 36109 ;; Auto vars:     Size  Location     Type
 36110 ;;  reg             1    2[BANK0 ] unsigned char 
 36111 ;;  readValue       1    3[BANK0 ] unsigned char 
 36112 ;; Return value:  Size  Location     Type
 36113 ;;                  1    wreg      unsigned char 
 36114 ;; Registers used:
 36115 ;;		wreg, status,2, status,0, cstack
 36116 ;; Tracked objects:
 36117 ;;		On entry : 0/0
 36118 ;;		On exit  : 0/0
 36119 ;;		Unchanged: 0/0
 36120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36122 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36124 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36125 ;;Total ram usage:        2 bytes
 36126 ;; Hardware stack levels used:    1
 36127 ;; Hardware stack levels required when called:    9
 36128 ;; This function calls:
 36129 ;;		_HALSPICSAssert
 36130 ;;		_HALSPICSDeassert
 36131 ;;		_HALSPISend
 36132 ;; This function is called by:
 36133 ;;		_RADIO_WriteMode
 36134 ;;		_RADIO_WritePower
 36135 ;;		_RADIO_Init
 36136 ;;		_RADIO_WriteConfiguration
 36137 ;;		_RADIO_Transmit
 36138 ;;		_RADIO_RxDone
 36139 ;;		_RADIO_FSKPayloadReady
 36140 ;;		_RADIO_FSKPacketSent
 36141 ;;		_RADIO_FHSSChangeChannel
 36142 ;;		_RADIO_DIO0
 36143 ;;		_RADIO_DIO1
 36144 ;;		_RADIO_DIO2
 36145 ;;		_RADIO_DIO3
 36146 ;;		_RADIO_DIO4
 36147 ;;		_RADIO_DIO5
 36148 ;;		_RADIO_ReadRandom
 36149 ;;		_RADIO_RxFSKTimeout
 36150 ;; This function uses a non-reentrant model
 36151 ;;
 36152                           
 36153                           	psect	text216
 36154  00A270                     __ptext216:
 36155                           	opt callstack 0
 36156  00A270                     _RADIO_RegisterRead:
 36157                           	opt callstack 16
 36158                           
 36159                           ;incstack = 0
 36160                           ;RADIO_RegisterRead@reg stored from wreg
 36161  00A270  0100               	movlb	0	; () banked
 36162  00A272  6F62               	movwf	RADIO_RegisterRead@reg& (0+255),b
 36163                           
 36164                           ;radio_driver_SX1276.c: 136: uint8_t readValue;;radio_driver_SX1276.c: 137: reg &= 0x7F;
 36165  00A274  0100               	movlb	0	; () banked
 36166  00A276  9F62               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 36167                           
 36168                           ; BSR set to: 0
 36169                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 36170  00A278  ECA3  F054         	call	_HALSPICSAssert	;wreg free
 36171                           
 36172                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 36173  00A27C  0100               	movlb	0	; () banked
 36174  00A27E  5162               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 36175  00A280  ECF6  F053         	call	_HALSPISend
 36176                           
 36177                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 36178  00A284  0EFF               	movlw	255
 36179  00A286  ECF6  F053         	call	_HALSPISend
 36180  00A28A  0100               	movlb	0	; () banked
 36181  00A28C  6F63               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 36182                           
 36183                           ; BSR set to: 0
 36184                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 36185  00A28E  ECA1  F054         	call	_HALSPICSDeassert	;wreg free
 36186                           
 36187                           ;radio_driver_SX1276.c: 142: return readValue;
 36188  00A292  0100               	movlb	0	; () banked
 36189  00A294  5163               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 36190                           
 36191                           ; BSR set to: 0
 36192  00A296  0012               	return		;funcret
 36193  00A298                     __end_of_RADIO_RegisterRead:
 36194                           	opt callstack 0
 36195                           
 36196 ;; *************** function _HALDIO5PinValue *****************
 36197 ;; Defined at:
 36198 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36199 ;; Parameters:    Size  Location     Type
 36200 ;;		None
 36201 ;; Auto vars:     Size  Location     Type
 36202 ;;		None
 36203 ;; Return value:  Size  Location     Type
 36204 ;;                  1    wreg      unsigned char 
 36205 ;; Registers used:
 36206 ;;		wreg
 36207 ;; Tracked objects:
 36208 ;;		On entry : 0/0
 36209 ;;		On exit  : 0/0
 36210 ;;		Unchanged: 0/0
 36211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36216 ;;Total ram usage:        0 bytes
 36217 ;; Hardware stack levels used:    1
 36218 ;; Hardware stack levels required when called:    7
 36219 ;; This function calls:
 36220 ;;		Nothing
 36221 ;; This function is called by:
 36222 ;;		_RADIO_WriteMode
 36223 ;; This function uses a non-reentrant model
 36224 ;;
 36225                           
 36226                           	psect	text217
 36227  00A806                     __ptext217:
 36228                           	opt callstack 0
 36229  00A806                     _HALDIO5PinValue:
 36230                           	opt callstack 18
 36231                           
 36232                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 36233                           
 36234                           ; BSR set to: 0
 36235                           ;incstack = 0
 36236  00A806  A081               	btfss	3969,0,c	;volatile
 36237  00A808  D002               	goto	u18770
 36238  00A80A  0E01               	movlw	1
 36239  00A80C  0012               	return	
 36240  00A80E                     u18770:
 36241  00A80E  0E00               	movlw	0
 36242  00A810  0012               	return		;funcret
 36243  00A812                     __end_of_HALDIO5PinValue:
 36244                           	opt callstack 0
 36245                           
 36246 ;; *************** function _RADIO_WriteFrequency *****************
 36247 ;; Defined at:
 36248 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36249 ;; Parameters:    Size  Location     Type
 36250 ;;  frequency       4   13[BANK0 ] unsigned long 
 36251 ;; Auto vars:     Size  Location     Type
 36252 ;;  num             4   21[BANK0 ] unsigned long 
 36253 ;;  num_mod         4   17[BANK0 ] unsigned long 
 36254 ;; Return value:  Size  Location     Type
 36255 ;;                  1    wreg      void 
 36256 ;; Registers used:
 36257 ;;		wreg, status,2, status,0, cstack
 36258 ;; Tracked objects:
 36259 ;;		On entry : 0/0
 36260 ;;		On exit  : 0/0
 36261 ;;		Unchanged: 0/0
 36262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36263 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36264 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36266 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36267 ;;Total ram usage:       12 bytes
 36268 ;; Hardware stack levels used:    1
 36269 ;; Hardware stack levels required when called:   10
 36270 ;; This function calls:
 36271 ;;		_RADIO_RegisterWrite
 36272 ;;		___lldiv
 36273 ;;		___llmod
 36274 ;; This function is called by:
 36275 ;;		_RADIO_Init
 36276 ;;		_RADIO_WriteConfiguration
 36277 ;;		_RADIO_FHSSChangeChannel
 36278 ;; This function uses a non-reentrant model
 36279 ;;
 36280                           
 36281                           	psect	text218
 36282  0070B4                     __ptext218:
 36283                           	opt callstack 0
 36284  0070B4                     _RADIO_WriteFrequency:
 36285                           	opt callstack 15
 36286                           
 36287                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;;radio_driver_SX1276.c: 272: num = fr
      +                          equency / 15625;
 36288                           
 36289                           ;incstack = 0
 36290  0070B4  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 36291  0070B8  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 36292  0070BC  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 36293  0070C0  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 36294  0070C4  0E09               	movlw	9
 36295  0070C6  0100               	movlb	0	; () banked
 36296  0070C8  6F64               	movwf	___lldiv@divisor& (0+255),b
 36297  0070CA  0E3D               	movlw	61
 36298  0070CC  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36299  0070CE  0E00               	movlw	0
 36300  0070D0  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36301  0070D2  0E00               	movlw	0
 36302  0070D4  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36303  0070D6  ECD9  F042         	call	___lldiv	;wreg free
 36304  0070DA  C060  F075         	movff	?___lldiv,RADIO_WriteFrequency@num
 36305  0070DE  C061  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 36306  0070E2  C062  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 36307  0070E6  C063  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 36308                           
 36309                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 36310  0070EA  C06D  F060         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 36311  0070EE  C06E  F061         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 36312  0070F2  C06F  F062         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 36313  0070F6  C070  F063         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 36314  0070FA  0E09               	movlw	9
 36315  0070FC  0100               	movlb	0	; () banked
 36316  0070FE  6F64               	movwf	___llmod@divisor& (0+255),b
 36317  007100  0E3D               	movlw	61
 36318  007102  6F65               	movwf	(___llmod@divisor+1)& (0+255),b
 36319  007104  0E00               	movlw	0
 36320  007106  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 36321  007108  0E00               	movlw	0
 36322  00710A  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 36323  00710C  EC35  F047         	call	___llmod	;wreg free
 36324  007110  C060  F071         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 36325  007114  C061  F072         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 36326  007118  C062  F073         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 36327  00711C  C063  F074         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 36328                           
 36329                           ;radio_driver_SX1276.c: 277: num <<= (8);
 36330  007120  C077  F078         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 36331  007124  C076  F077         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 36332  007128  C075  F076         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 36333  00712C  0100               	movlb	0	; () banked
 36334  00712E  6B75               	clrf	RADIO_WriteFrequency@num& (0+255),b
 36335                           
 36336                           ; BSR set to: 0
 36337                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 36338  007130  C073  F074         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 36339  007134  C072  F073         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 36340  007138  C071  F072         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 36341  00713C  6B71               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 36342                           
 36343                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 36344  00713E  C071  F060         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 36345  007142  C072  F061         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 36346  007146  C073  F062         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 36347  00714A  C074  F063         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 36348  00714E  0E09               	movlw	9
 36349  007150  6F64               	movwf	___lldiv@divisor& (0+255),b
 36350  007152  0E3D               	movlw	61
 36351  007154  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 36352  007156  0E00               	movlw	0
 36353  007158  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 36354  00715A  0E00               	movlw	0
 36355  00715C  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 36356  00715E  ECD9  F042         	call	___lldiv	;wreg free
 36357  007162  C060  F071         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 36358  007166  C061  F072         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 36359  00716A  C062  F073         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 36360  00716E  C063  F074         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 36361                           
 36362                           ;radio_driver_SX1276.c: 283: num += num_mod;
 36363  007172  0100               	movlb	0	; () banked
 36364  007174  5171               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 36365  007176  2775               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 36366  007178  5172               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 36367  00717A  2376               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 36368  00717C  5173               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 36369  00717E  2377               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 36370  007180  5174               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 36371  007182  2378               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 36372                           
 36373                           ; BSR set to: 0
 36374                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 36375  007184  C077  F062         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 36376  007188  0E06               	movlw	6
 36377  00718A  EC08  F052         	call	_RADIO_RegisterWrite
 36378                           
 36379                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 36380  00718E  C076  F062         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 36381  007192  0E07               	movlw	7
 36382  007194  EC08  F052         	call	_RADIO_RegisterWrite
 36383                           
 36384                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 36385  007198  C075  F062         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 36386  00719C  0E08               	movlw	8
 36387  00719E  EC08  F052         	call	_RADIO_RegisterWrite
 36388  0071A2  0012               	return		;funcret
 36389  0071A4                     __end_of_RADIO_WriteFrequency:
 36390                           	opt callstack 0
 36391                           
 36392 ;; *************** function ___llmod *****************
 36393 ;; Defined at:
 36394 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 36395 ;; Parameters:    Size  Location     Type
 36396 ;;  dividend        4    0[BANK0 ] unsigned long 
 36397 ;;  divisor         4    4[BANK0 ] unsigned long 
 36398 ;; Auto vars:     Size  Location     Type
 36399 ;;  counter         1    8[BANK0 ] unsigned char 
 36400 ;; Return value:  Size  Location     Type
 36401 ;;                  4    0[BANK0 ] unsigned long 
 36402 ;; Registers used:
 36403 ;;		wreg, status,2, status,0
 36404 ;; Tracked objects:
 36405 ;;		On entry : 0/0
 36406 ;;		On exit  : 0/0
 36407 ;;		Unchanged: 0/0
 36408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36409 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36410 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36412 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36413 ;;Total ram usage:        9 bytes
 36414 ;; Hardware stack levels used:    1
 36415 ;; Hardware stack levels required when called:    7
 36416 ;; This function calls:
 36417 ;;		Nothing
 36418 ;; This function is called by:
 36419 ;;		_RADIO_WriteFrequency
 36420 ;; This function uses a non-reentrant model
 36421 ;;
 36422                           
 36423                           	psect	text219
 36424  008E6A                     __ptext219:
 36425                           	opt callstack 0
 36426  008E6A                     ___llmod:
 36427                           	opt callstack 17
 36428                           
 36429                           ;incstack = 0
 36430  008E6A  0100               	movlb	0	; () banked
 36431  008E6C  5164               	movf	___llmod@divisor& (0+255),w,b
 36432  008E6E  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 36433  008E70  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 36434  008E72  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 36435  008E74  B4D8               	btfsc	status,2,c
 36436  008E76  D024               	goto	l3927
 36437                           
 36438                           ; BSR set to: 0
 36439  008E78  0E01               	movlw	1
 36440  008E7A  6F68               	movwf	___llmod@counter& (0+255),b
 36441  008E7C  D006               	goto	l18094
 36442  008E7E                     l18092:
 36443                           
 36444                           ; BSR set to: 0
 36445  008E7E  90D8               	bcf	status,0,c
 36446  008E80  3764               	rlcf	___llmod@divisor& (0+255),f,b
 36447  008E82  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 36448  008E84  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 36449  008E86  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 36450  008E88  2B68               	incf	___llmod@counter& (0+255),f,b
 36451  008E8A                     l18094:
 36452                           
 36453                           ; BSR set to: 0
 36454  008E8A  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 36455  008E8C  D7F8               	goto	l18092
 36456  008E8E                     u18960:
 36457                           
 36458                           ; BSR set to: 0
 36459  008E8E  5164               	movf	___llmod@divisor& (0+255),w,b
 36460  008E90  5D60               	subwf	___llmod@dividend& (0+255),w,b
 36461  008E92  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36462  008E94  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 36463  008E96  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36464  008E98  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 36465  008E9A  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36466  008E9C  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 36467  008E9E  A0D8               	btfss	status,0,c
 36468  008EA0  D008               	goto	l18100
 36469                           
 36470                           ; BSR set to: 0
 36471  008EA2  5164               	movf	___llmod@divisor& (0+255),w,b
 36472  008EA4  5F60               	subwf	___llmod@dividend& (0+255),f,b
 36473  008EA6  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 36474  008EA8  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 36475  008EAA  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 36476  008EAC  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 36477  008EAE  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 36478  008EB0  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 36479  008EB2                     l18100:
 36480                           
 36481                           ; BSR set to: 0
 36482  008EB2  90D8               	bcf	status,0,c
 36483  008EB4  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 36484  008EB6  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 36485  008EB8  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 36486  008EBA  3364               	rrcf	___llmod@divisor& (0+255),f,b
 36487                           
 36488                           ; BSR set to: 0
 36489  008EBC  2F68               	decfsz	___llmod@counter& (0+255),f,b
 36490  008EBE  D7E7               	goto	u18960
 36491  008EC0                     l3927:
 36492                           
 36493                           ; BSR set to: 0
 36494  008EC0  C060  F060         	movff	___llmod@dividend,?___llmod
 36495  008EC4  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 36496  008EC8  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 36497  008ECC  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 36498                           
 36499                           ; BSR set to: 0
 36500  008ED0  0012               	return		;funcret
 36501  008ED2                     __end_of___llmod:
 36502                           	opt callstack 0
 36503                           
 36504 ;; *************** function _RADIO_RegisterWrite *****************
 36505 ;; Defined at:
 36506 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36507 ;; Parameters:    Size  Location     Type
 36508 ;;  reg             1    wreg     unsigned char 
 36509 ;;  value           1    2[BANK0 ] unsigned char 
 36510 ;; Auto vars:     Size  Location     Type
 36511 ;;  reg             1    3[BANK0 ] unsigned char 
 36512 ;; Return value:  Size  Location     Type
 36513 ;;                  1    wreg      void 
 36514 ;; Registers used:
 36515 ;;		wreg, status,2, status,0, cstack
 36516 ;; Tracked objects:
 36517 ;;		On entry : 0/0
 36518 ;;		On exit  : 0/0
 36519 ;;		Unchanged: 0/0
 36520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36521 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36525 ;;Total ram usage:        2 bytes
 36526 ;; Hardware stack levels used:    1
 36527 ;; Hardware stack levels required when called:    9
 36528 ;; This function calls:
 36529 ;;		_HALSPICSAssert
 36530 ;;		_HALSPICSDeassert
 36531 ;;		_HALSPISend
 36532 ;; This function is called by:
 36533 ;;		_RADIO_WriteMode
 36534 ;;		_RADIO_WriteFrequency
 36535 ;;		_RADIO_WriteFSKFrequencyDeviation
 36536 ;;		_RADIO_WriteFSKBitRate
 36537 ;;		_RADIO_WritePower
 36538 ;;		_RADIO_Init
 36539 ;;		_RADIO_WriteConfiguration
 36540 ;;		_RADIO_Transmit
 36541 ;;		_RADIO_ReceiveStart
 36542 ;;		_RADIO_RxDone
 36543 ;;		_RADIO_RxTimeout
 36544 ;;		_RADIO_TxDone
 36545 ;;		_RADIO_UnhandledInterrupt
 36546 ;;		_RADIO_FHSSChangeChannel
 36547 ;;		_RADIO_ReadRandom
 36548 ;;		_RADIO_TransmitCW
 36549 ;; This function uses a non-reentrant model
 36550 ;;
 36551                           
 36552                           	psect	text220
 36553  00A410                     __ptext220:
 36554                           	opt callstack 0
 36555  00A410                     _RADIO_RegisterWrite:
 36556                           	opt callstack 16
 36557                           
 36558                           ; BSR set to: 0
 36559                           ;incstack = 0
 36560                           ;RADIO_RegisterWrite@reg stored from wreg
 36561  00A410  0100               	movlb	0	; () banked
 36562  00A412  6F63               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 36563                           
 36564                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 36565  00A414  ECA3  F054         	call	_HALSPICSAssert	;wreg free
 36566                           
 36567                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 36568  00A418  0100               	movlb	0	; () banked
 36569  00A41A  5163               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 36570  00A41C  0980               	iorlw	128
 36571  00A41E  ECF6  F053         	call	_HALSPISend
 36572                           
 36573                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 36574  00A422  0100               	movlb	0	; () banked
 36575  00A424  5162               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 36576  00A426  ECF6  F053         	call	_HALSPISend
 36577                           
 36578                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 36579  00A42A  ECA1  F054         	call	_HALSPICSDeassert	;wreg free
 36580  00A42E  0012               	return		;funcret
 36581  00A430                     __end_of_RADIO_RegisterWrite:
 36582                           	opt callstack 0
 36583                           
 36584 ;; *************** function _HALSPISend *****************
 36585 ;; Defined at:
 36586 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36587 ;; Parameters:    Size  Location     Type
 36588 ;;  data            1    wreg     unsigned char 
 36589 ;; Auto vars:     Size  Location     Type
 36590 ;;  data            1    1[BANK0 ] unsigned char 
 36591 ;; Return value:  Size  Location     Type
 36592 ;;                  1    wreg      unsigned char 
 36593 ;; Registers used:
 36594 ;;		wreg, status,2, cstack
 36595 ;; Tracked objects:
 36596 ;;		On entry : 0/0
 36597 ;;		On exit  : 0/0
 36598 ;;		Unchanged: 0/0
 36599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36603 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36604 ;;Total ram usage:        1 bytes
 36605 ;; Hardware stack levels used:    1
 36606 ;; Hardware stack levels required when called:    8
 36607 ;; This function calls:
 36608 ;;		_SPI2_Exchange8bit
 36609 ;; This function is called by:
 36610 ;;		_RADIO_RegisterWrite
 36611 ;;		_RADIO_RegisterRead
 36612 ;;		_RADIO_Transmit
 36613 ;;		_RADIO_RxDone
 36614 ;;		_RADIO_FSKPayloadReady
 36615 ;; This function uses a non-reentrant model
 36616 ;;
 36617                           
 36618                           	psect	text221
 36619  00A7EC                     __ptext221:
 36620                           	opt callstack 0
 36621  00A7EC                     _HALSPISend:
 36622                           	opt callstack 16
 36623                           
 36624                           ;incstack = 0
 36625                           ;HALSPISend@data stored from wreg
 36626  00A7EC  0100               	movlb	0	; () banked
 36627  00A7EE  6F61               	movwf	HALSPISend@data& (0+255),b
 36628                           
 36629                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 36630  00A7F0  0100               	movlb	0	; () banked
 36631  00A7F2  5161               	movf	HALSPISend@data& (0+255),w,b
 36632  00A7F4  EC9A  F053         	call	_SPI2_Exchange8bit
 36633  00A7F8  0012               	return		;funcret
 36634  00A7FA                     __end_of_HALSPISend:
 36635                           	opt callstack 0
 36636                           
 36637 ;; *************** function _SPI2_Exchange8bit *****************
 36638 ;; Defined at:
 36639 ;;		line 79 in file "mcc_generated_files/spi2.c"
 36640 ;; Parameters:    Size  Location     Type
 36641 ;;  data            1    wreg     unsigned char 
 36642 ;; Auto vars:     Size  Location     Type
 36643 ;;  data            1    0[BANK0 ] unsigned char 
 36644 ;; Return value:  Size  Location     Type
 36645 ;;                  1    wreg      unsigned char 
 36646 ;; Registers used:
 36647 ;;		wreg, status,2
 36648 ;; Tracked objects:
 36649 ;;		On entry : 0/0
 36650 ;;		On exit  : 0/0
 36651 ;;		Unchanged: 0/0
 36652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36654 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36656 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36657 ;;Total ram usage:        1 bytes
 36658 ;; Hardware stack levels used:    1
 36659 ;; Hardware stack levels required when called:    7
 36660 ;; This function calls:
 36661 ;;		Nothing
 36662 ;; This function is called by:
 36663 ;;		_HALSPISend
 36664 ;;		_SPI2_Exchange8bitBuffer
 36665 ;; This function uses a non-reentrant model
 36666 ;;
 36667                           
 36668                           	psect	text222
 36669  00A734                     __ptext222:
 36670                           	opt callstack 0
 36671  00A734                     _SPI2_Exchange8bit:
 36672                           	opt callstack 16
 36673                           
 36674                           ;incstack = 0
 36675                           ;SPI2_Exchange8bit@data stored from wreg
 36676  00A734  0100               	movlb	0	; () banked
 36677  00A736  6F60               	movwf	SPI2_Exchange8bit@data& (0+255),b
 36678                           
 36679                           ;spi2.c: 82: SSP2CON1bits.WCOL = 0;
 36680  00A738  9E6C               	bcf	3948,7,c	;volatile
 36681                           
 36682                           ;spi2.c: 84: SSP2BUF = data;
 36683  00A73A  C060  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 36684  00A73E                     l2198:
 36685  00A73E  A06D               	btfss	3949,0,c	;volatile
 36686  00A740  D7FE               	goto	l2198
 36687                           
 36688                           ;spi2.c: 88: };spi2.c: 90: return (SSP2BUF);
 36689  00A742  506F               	movf	3951,w,c	;volatile
 36690  00A744  0012               	return		;funcret
 36691  00A746                     __end_of_SPI2_Exchange8bit:
 36692                           	opt callstack 0
 36693                           
 36694 ;; *************** function _HALSPICSDeassert *****************
 36695 ;; Defined at:
 36696 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36697 ;; Parameters:    Size  Location     Type
 36698 ;;		None
 36699 ;; Auto vars:     Size  Location     Type
 36700 ;;		None
 36701 ;; Return value:  Size  Location     Type
 36702 ;;                  1    wreg      void 
 36703 ;; Registers used:
 36704 ;;		None
 36705 ;; Tracked objects:
 36706 ;;		On entry : 0/0
 36707 ;;		On exit  : 0/0
 36708 ;;		Unchanged: 0/0
 36709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36714 ;;Total ram usage:        0 bytes
 36715 ;; Hardware stack levels used:    1
 36716 ;; Hardware stack levels required when called:    7
 36717 ;; This function calls:
 36718 ;;		Nothing
 36719 ;; This function is called by:
 36720 ;;		_RADIO_RegisterWrite
 36721 ;;		_RADIO_RegisterRead
 36722 ;;		_RADIO_Transmit
 36723 ;;		_RADIO_RxDone
 36724 ;;		_RADIO_FSKPayloadReady
 36725 ;; This function uses a non-reentrant model
 36726 ;;
 36727                           
 36728                           	psect	text223
 36729  00A942                     __ptext223:
 36730                           	opt callstack 0
 36731  00A942                     _HALSPICSDeassert:
 36732                           	opt callstack 17
 36733                           
 36734                           ;incstack = 0
 36735                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 36736  00A942  868C               	bsf	3980,3,c	;volatile
 36737  00A944  0012               	return		;funcret
 36738  00A946                     __end_of_HALSPICSDeassert:
 36739                           	opt callstack 0
 36740                           
 36741 ;; *************** function _HALSPICSAssert *****************
 36742 ;; Defined at:
 36743 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36744 ;; Parameters:    Size  Location     Type
 36745 ;;		None
 36746 ;; Auto vars:     Size  Location     Type
 36747 ;;		None
 36748 ;; Return value:  Size  Location     Type
 36749 ;;                  1    wreg      void 
 36750 ;; Registers used:
 36751 ;;		None
 36752 ;; Tracked objects:
 36753 ;;		On entry : 0/0
 36754 ;;		On exit  : 0/0
 36755 ;;		Unchanged: 0/0
 36756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36761 ;;Total ram usage:        0 bytes
 36762 ;; Hardware stack levels used:    1
 36763 ;; Hardware stack levels required when called:    7
 36764 ;; This function calls:
 36765 ;;		Nothing
 36766 ;; This function is called by:
 36767 ;;		_RADIO_RegisterWrite
 36768 ;;		_RADIO_RegisterRead
 36769 ;;		_RADIO_Transmit
 36770 ;;		_RADIO_RxDone
 36771 ;;		_RADIO_FSKPayloadReady
 36772 ;; This function uses a non-reentrant model
 36773 ;;
 36774                           
 36775                           	psect	text224
 36776  00A946                     __ptext224:
 36777                           	opt callstack 0
 36778  00A946                     _HALSPICSAssert:
 36779                           	opt callstack 17
 36780                           
 36781                           ;incstack = 0
 36782                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 36783  00A946  968C               	bcf	3980,3,c	;volatile
 36784  00A948  0012               	return		;funcret
 36785  00A94A                     __end_of_HALSPICSAssert:
 36786                           	opt callstack 0
 36787                           
 36788 ;; *************** function _RADIO_Reset *****************
 36789 ;; Defined at:
 36790 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36791 ;; Parameters:    Size  Location     Type
 36792 ;;		None
 36793 ;; Auto vars:     Size  Location     Type
 36794 ;;		None
 36795 ;; Return value:  Size  Location     Type
 36796 ;;                  1    wreg      void 
 36797 ;; Registers used:
 36798 ;;		wreg, status,2, status,0, cstack
 36799 ;; Tracked objects:
 36800 ;;		On entry : 0/0
 36801 ;;		On exit  : 0/0
 36802 ;;		Unchanged: 0/0
 36803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36808 ;;Total ram usage:        0 bytes
 36809 ;; Hardware stack levels used:    1
 36810 ;; Hardware stack levels required when called:    8
 36811 ;; This function calls:
 36812 ;;		_HALResetPinMakeInput
 36813 ;;		_HALResetPinMakeOutput
 36814 ;;		_HALResetPinOutputValue
 36815 ;;		_SystemBlockingWaitMs
 36816 ;; This function is called by:
 36817 ;;		_RADIO_Init
 36818 ;; This function uses a non-reentrant model
 36819 ;;
 36820                           
 36821                           	psect	text225
 36822  0098FA                     __ptext225:
 36823                           	opt callstack 0
 36824  0098FA                     _RADIO_Reset:
 36825                           	opt callstack 20
 36826                           
 36827                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 36828                           
 36829                           ;incstack = 0
 36830  0098FA  ECA5  F054         	call	_HALResetPinMakeOutput	;wreg free
 36831                           
 36832                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 36833  0098FE  0E00               	movlw	0
 36834  009900  EC30  F053         	call	_HALResetPinOutputValue
 36835                           
 36836                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 36837  009904  0E01               	movlw	1
 36838  009906  0100               	movlb	0	; () banked
 36839  009908  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36840  00990A  0E00               	movlw	0
 36841  00990C  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36842  00990E  0E00               	movlw	0
 36843  009910  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36844  009912  0E00               	movlw	0
 36845  009914  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36846  009916  EC6B  F04F         	call	_SystemBlockingWaitMs	;wreg free
 36847                           
 36848                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 36849  00991A  ECA7  F054         	call	_HALResetPinMakeInput	;wreg free
 36850                           
 36851                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 36852  00991E  0E0A               	movlw	10
 36853  009920  0100               	movlb	0	; () banked
 36854  009922  6F60               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36855  009924  0E00               	movlw	0
 36856  009926  6F61               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36857  009928  0E00               	movlw	0
 36858  00992A  6F62               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36859  00992C  0E00               	movlw	0
 36860  00992E  6F63               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36861  009930  EC6B  F04F         	call	_SystemBlockingWaitMs	;wreg free
 36862                           
 36863                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 36864  009934  0E01               	movlw	1
 36865  009936  EC30  F053         	call	_HALResetPinOutputValue
 36866                           
 36867                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 36868  00993A  ECA5  F054         	call	_HALResetPinMakeOutput	;wreg free
 36869  00993E  0012               	return		;funcret
 36870  009940                     __end_of_RADIO_Reset:
 36871                           	opt callstack 0
 36872                           
 36873 ;; *************** function _SystemBlockingWaitMs *****************
 36874 ;; Defined at:
 36875 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36876 ;; Parameters:    Size  Location     Type
 36877 ;;  ms              4    0[BANK0 ] unsigned long 
 36878 ;; Auto vars:     Size  Location     Type
 36879 ;;		None
 36880 ;; Return value:  Size  Location     Type
 36881 ;;                  1    wreg      void 
 36882 ;; Registers used:
 36883 ;;		wreg, status,2, status,0
 36884 ;; Tracked objects:
 36885 ;;		On entry : 0/0
 36886 ;;		On exit  : 0/0
 36887 ;;		Unchanged: 0/0
 36888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36889 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36891 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36892 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36893 ;;Total ram usage:        5 bytes
 36894 ;; Hardware stack levels used:    1
 36895 ;; Hardware stack levels required when called:    7
 36896 ;; This function calls:
 36897 ;;		Nothing
 36898 ;; This function is called by:
 36899 ;;		_RADIO_WriteMode
 36900 ;;		_RADIO_Reset
 36901 ;;		_RADIO_ReadRandom
 36902 ;;		_RADIO_StopCW
 36903 ;; This function uses a non-reentrant model
 36904 ;;
 36905                           
 36906                           	psect	text226
 36907  009ED6                     __ptext226:
 36908                           	opt callstack 0
 36909  009ED6                     _SystemBlockingWaitMs:
 36910                           	opt callstack 18
 36911                           
 36912                           ;sw_timer.c: 147: while (ms > 0)
 36913                           
 36914                           ;incstack = 0
 36915  009ED6  D00F               	goto	l17948
 36916  009ED8                     l17944:
 36917                           
 36918                           ; BSR set to: 0
 36919                           ;sw_timer.c: 148: {;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 36920  009ED8  0E06               	movlw	6
 36921  009EDA  0100               	movlb	0	; () banked
 36922  009EDC  6F64               	movwf	??_SystemBlockingWaitMs& (0+255),b
 36923  009EDE  0E30               	movlw	48
 36924  009EE0                     u25257:
 36925  009EE0  2EE8               	decfsz	wreg,f,c
 36926  009EE2  D7FE               	bra	u25257
 36927  009EE4  2F64               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 36928  009EE6  D7FC               	bra	u25257
 36929  009EE8  F000               	nop	
 36930                           
 36931                           ;sw_timer.c: 150: ms--;
 36932  009EEA  0100               	movlb	0	; () banked
 36933  009EEC  0760               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 36934  009EEE  0E00               	movlw	0
 36935  009EF0  5B61               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 36936  009EF2  5B62               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 36937  009EF4  5B63               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 36938  009EF6                     l17948:
 36939  009EF6  0100               	movlb	0	; () banked
 36940  009EF8  5160               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 36941  009EFA  1161               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 36942  009EFC  1162               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 36943  009EFE  1163               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 36944  009F00  B4D8               	btfsc	status,2,c
 36945  009F02  0012               	return	
 36946  009F04  D7E9               	goto	l17944
 36947  009F06                     __end_of_SystemBlockingWaitMs:
 36948                           	opt callstack 0
 36949                           
 36950 ;; *************** function _HALResetPinOutputValue *****************
 36951 ;; Defined at:
 36952 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 36953 ;; Parameters:    Size  Location     Type
 36954 ;;  value           1    wreg     unsigned char 
 36955 ;; Auto vars:     Size  Location     Type
 36956 ;;  value           1    0[BANK0 ] unsigned char 
 36957 ;; Return value:  Size  Location     Type
 36958 ;;                  1    wreg      void 
 36959 ;; Registers used:
 36960 ;;		wreg, status,2, status,0
 36961 ;; Tracked objects:
 36962 ;;		On entry : 0/0
 36963 ;;		On exit  : 0/0
 36964 ;;		Unchanged: 0/0
 36965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36969 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36970 ;;Total ram usage:        1 bytes
 36971 ;; Hardware stack levels used:    1
 36972 ;; Hardware stack levels required when called:    7
 36973 ;; This function calls:
 36974 ;;		Nothing
 36975 ;; This function is called by:
 36976 ;;		_RADIO_Reset
 36977 ;; This function uses a non-reentrant model
 36978 ;;
 36979                           
 36980                           	psect	text227
 36981  00A660                     __ptext227:
 36982                           	opt callstack 0
 36983  00A660                     _HALResetPinOutputValue:
 36984                           	opt callstack 20
 36985                           
 36986                           ; BSR set to: 0
 36987                           ;incstack = 0
 36988                           ;HALResetPinOutputValue@value stored from wreg
 36989  00A660  0100               	movlb	0	; () banked
 36990  00A662  6F60               	movwf	HALResetPinOutputValue@value& (0+255),b
 36991                           
 36992                           ;radio_driver_hal.c: 57: if (value == 0)
 36993  00A664  0100               	movlb	0	; () banked
 36994  00A666  5160               	movf	HALResetPinOutputValue@value& (0+255),w,b
 36995  00A668  A4D8               	btfss	status,2,c
 36996  00A66A  D002               	goto	l14704
 36997                           
 36998                           ; BSR set to: 0
 36999                           
 37000                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 37001  00A66C  948B               	bcf	3979,2,c	;volatile
 37002  00A66E  0012               	return	
 37003  00A670                     l14704:
 37004                           
 37005                           ; BSR set to: 0
 37006                           ;radio_driver_hal.c: 59: else if (value == 1)
 37007  00A670  0560               	decf	HALResetPinOutputValue@value& (0+255),w,b
 37008  00A672  A4D8               	btfss	status,2,c
 37009  00A674  0012               	return	
 37010                           
 37011                           ; BSR set to: 0
 37012                           
 37013                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 37014  00A676  848B               	bsf	3979,2,c	;volatile
 37015                           
 37016                           ; BSR set to: 0
 37017  00A678  0012               	return		;funcret
 37018  00A67A                     __end_of_HALResetPinOutputValue:
 37019                           	opt callstack 0
 37020                           
 37021 ;; *************** function _HALResetPinMakeOutput *****************
 37022 ;; Defined at:
 37023 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37024 ;; Parameters:    Size  Location     Type
 37025 ;;		None
 37026 ;; Auto vars:     Size  Location     Type
 37027 ;;		None
 37028 ;; Return value:  Size  Location     Type
 37029 ;;                  1    wreg      void 
 37030 ;; Registers used:
 37031 ;;		None
 37032 ;; Tracked objects:
 37033 ;;		On entry : 0/0
 37034 ;;		On exit  : 0/0
 37035 ;;		Unchanged: 0/0
 37036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37041 ;;Total ram usage:        0 bytes
 37042 ;; Hardware stack levels used:    1
 37043 ;; Hardware stack levels required when called:    7
 37044 ;; This function calls:
 37045 ;;		Nothing
 37046 ;; This function is called by:
 37047 ;;		_RADIO_Reset
 37048 ;; This function uses a non-reentrant model
 37049 ;;
 37050                           
 37051                           	psect	text228
 37052  00A94A                     __ptext228:
 37053                           	opt callstack 0
 37054  00A94A                     _HALResetPinMakeOutput:
 37055                           	opt callstack 20
 37056                           
 37057                           ; BSR set to: 0
 37058                           ;incstack = 0
 37059                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 37060  00A94A  9494               	bcf	3988,2,c	;volatile
 37061  00A94C  0012               	return		;funcret
 37062  00A94E                     __end_of_HALResetPinMakeOutput:
 37063                           	opt callstack 0
 37064                           
 37065 ;; *************** function _HALResetPinMakeInput *****************
 37066 ;; Defined at:
 37067 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 37068 ;; Parameters:    Size  Location     Type
 37069 ;;		None
 37070 ;; Auto vars:     Size  Location     Type
 37071 ;;		None
 37072 ;; Return value:  Size  Location     Type
 37073 ;;                  1    wreg      void 
 37074 ;; Registers used:
 37075 ;;		None
 37076 ;; Tracked objects:
 37077 ;;		On entry : 0/0
 37078 ;;		On exit  : 0/0
 37079 ;;		Unchanged: 0/0
 37080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37085 ;;Total ram usage:        0 bytes
 37086 ;; Hardware stack levels used:    1
 37087 ;; Hardware stack levels required when called:    7
 37088 ;; This function calls:
 37089 ;;		Nothing
 37090 ;; This function is called by:
 37091 ;;		_RADIO_Reset
 37092 ;; This function uses a non-reentrant model
 37093 ;;
 37094                           
 37095                           	psect	text229
 37096  00A94E                     __ptext229:
 37097                           	opt callstack 0
 37098  00A94E                     _HALResetPinMakeInput:
 37099                           	opt callstack 20
 37100                           
 37101                           ;incstack = 0
 37102                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 37103  00A94E  8494               	bsf	3988,2,c	;volatile
 37104  00A950  0012               	return		;funcret
 37105  00A952                     __end_of_HALResetPinMakeInput:
 37106                           	opt callstack 0
 37107                           
 37108 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 37109 ;; Defined at:
 37110 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37111 ;; Parameters:    Size  Location     Type
 37112 ;;  period          2   62[BANK0 ] unsigned int 
 37113 ;; Auto vars:     Size  Location     Type
 37114 ;;  iCtr            1   72[BANK0 ] unsigned char 
 37115 ;; Return value:  Size  Location     Type
 37116 ;;                  1    wreg      void 
 37117 ;; Registers used:
 37118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37119 ;; Tracked objects:
 37120 ;;		On entry : 0/0
 37121 ;;		On exit  : 0/0
 37122 ;;		Unchanged: 0/0
 37123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37124 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37125 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37126 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37127 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37128 ;;Total ram usage:       11 bytes
 37129 ;; Hardware stack levels used:    1
 37130 ;; Hardware stack levels required when called:   11
 37131 ;; This function calls:
 37132 ;;		_SwTimerSetTimeout
 37133 ;;		_SwTimerStart
 37134 ;;		_SwTimerStop
 37135 ;;		___lldiv
 37136 ;;		___lmul
 37137 ;; This function is called by:
 37138 ;;		_LORAWAN_Reset
 37139 ;; This function uses a non-reentrant model
 37140 ;;
 37141                           
 37142                           	psect	text230
 37143  00526E                     __ptext230:
 37144                           	opt callstack 0
 37145  00526E                     _LORAWAN_LinkCheckConfigure:
 37146                           	opt callstack 18
 37147                           
 37148                           ;lorawan.c: 757: uint8_t iCtr;;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL
      +                          ;
 37149                           
 37150                           ;incstack = 0
 37151  00526E  C09E  F092         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 37152  005272  C09F  F093         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 37153  005276  0100               	movlb	0	; () banked
 37154  005278  6B94               	clrf	(___lmul@multiplier+2)& (0+255),b
 37155  00527A  6B95               	clrf	(___lmul@multiplier+3)& (0+255),b
 37156  00527C  0EE8               	movlw	232
 37157  00527E  6F96               	movwf	___lmul@multiplicand& (0+255),b
 37158  005280  0E03               	movlw	3
 37159  005282  6F97               	movwf	(___lmul@multiplicand+1)& (0+255),b
 37160  005284  0E00               	movlw	0
 37161  005286  6F98               	movwf	(___lmul@multiplicand+2)& (0+255),b
 37162  005288  0E00               	movlw	0
 37163  00528A  6F99               	movwf	(___lmul@multiplicand+3)& (0+255),b
 37164  00528C  EC19  F049         	call	___lmul	;wreg free
 37165  005290  C092  F2D1         	movff	?___lmul,_loRa+204
 37166  005294  C093  F2D2         	movff	?___lmul+1,_loRa+205
 37167  005298  C094  F2D3         	movff	?___lmul+2,_loRa+206
 37168  00529C  C095  F2D4         	movff	?___lmul+3,_loRa+207
 37169                           
 37170                           ;lorawan.c: 761: if (period == 0)
 37171  0052A0  0100               	movlb	0	; () banked
 37172  0052A2  519E               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 37173  0052A4  119F               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 37174  0052A6  A4D8               	btfss	status,2,c
 37175  0052A8  D02B               	goto	l1786
 37176                           
 37177                           ; BSR set to: 0
 37178                           ;lorawan.c: 762: {;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 37179  0052AA  0102               	movlb	2	; () banked
 37180  0052AC  51EC               	movf	(_loRa+231)& (0+255),w,b
 37181  0052AE  EC18  F052         	call	_SwTimerStop
 37182                           
 37183                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 37184  0052B2  0102               	movlb	2	; () banked
 37185  0052B4  9508               	bcf	(_loRa+3)& (0+255),2,b
 37186                           
 37187                           ; BSR set to: 2
 37188                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 37189  0052B6  0E00               	movlw	0
 37190  0052B8  0100               	movlb	0	; () banked
 37191  0052BA  6FA8               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 37192  0052BC  D01A               	goto	l21442
 37193  0052BE                     l21434:
 37194                           
 37195                           ; BSR set to: 0
 37196                           ;lorawan.c: 766: {;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_C
      +                          ID)
 37197  0052BE  51A8               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37198  0052C0  0D02               	mullw	2
 37199  0052C2  0EAD               	movlw	low (_loRa+168)
 37200  0052C4  24F3               	addwf	prodl,w,c
 37201  0052C6  6ED9               	movwf	fsr2l,c
 37202  0052C8  0E02               	movlw	high (_loRa+168)
 37203  0052CA  20F4               	addwfc	prodh,w,c
 37204  0052CC  6EDA               	movwf	fsr2h,c
 37205  0052CE  0E02               	movlw	2
 37206  0052D0  18DE               	xorwf	postinc2,w,c
 37207  0052D2  A4D8               	btfss	status,2,c
 37208  0052D4  D00C               	goto	l21440
 37209                           
 37210                           ; BSR set to: 0
 37211                           ;lorawan.c: 768: {;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 37212  0052D6  51A8               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37213  0052D8  0D02               	mullw	2
 37214  0052DA  0EAD               	movlw	low (_loRa+168)
 37215  0052DC  24F3               	addwf	prodl,w,c
 37216  0052DE  6ED9               	movwf	fsr2l,c
 37217  0052E0  0E02               	movlw	high (_loRa+168)
 37218  0052E2  20F4               	addwfc	prodh,w,c
 37219  0052E4  6EDA               	movwf	fsr2h,c
 37220  0052E6  0EFF               	movlw	255
 37221  0052E8  6EDF               	movwf	indf2,c
 37222                           
 37223                           ; BSR set to: 0
 37224                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 37225  0052EA  0102               	movlb	2	; () banked
 37226  0052EC  07AC               	decf	(_loRa+167)& (0+255),f,b
 37227  0052EE                     l21440:
 37228  0052EE  0100               	movlb	0	; () banked
 37229  0052F0  2BA8               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 37230  0052F2                     l21442:
 37231                           
 37232                           ; BSR set to: 0
 37233  0052F2  0102               	movlb	2	; () banked
 37234  0052F4  51AC               	movf	(_loRa+167)& (0+255),w,b
 37235  0052F6  0100               	movlb	0	; () banked
 37236  0052F8  5DA8               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 37237  0052FA  B0D8               	btfsc	status,0,c
 37238  0052FC  0012               	return	
 37239  0052FE  D7DF               	goto	l21434
 37240  005300                     l1786:
 37241                           
 37242                           ; BSR set to: 0
 37243                           ;lorawan.c: 776: else;lorawan.c: 777: {;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 37244  005300  0102               	movlb	2	; () banked
 37245  005302  8508               	bsf	(_loRa+3)& (0+255),2,b
 37246                           
 37247                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 37248  005304  A907               	btfss	(_loRa+2)& (0+255),4,b
 37249  005306  0012               	return	
 37250                           
 37251                           ; BSR set to: 2
 37252                           ;lorawan.c: 782: {;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.perio
      +                          dForLinkCheck) < 0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125U
      +                          L ) : ( (((uint32_t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 37253  005308  51D4               	movf	(_loRa+207)& (0+255),w,b
 37254  00530A  E107               	bnz	u24330
 37255  00530C  29D1               	incf	(_loRa+204)& (0+255),w,b
 37256  00530E  0EFF               	movlw	255
 37257  005310  59D2               	subwfb	(_loRa+205)& (0+255),w,b
 37258  005312  0E0F               	movlw	15
 37259  005314  59D3               	subwfb	(_loRa+206)& (0+255),w,b
 37260  005316  A0D8               	btfss	status,0,c
 37261  005318  D01D               	goto	l21448
 37262  00531A                     u24330:
 37263                           
 37264                           ; BSR set to: 2
 37265  00531A  C2D1  F060         	movff	_loRa+204,___lldiv@dividend
 37266  00531E  C2D2  F061         	movff	_loRa+205,___lldiv@dividend+1
 37267  005322  C2D3  F062         	movff	_loRa+206,___lldiv@dividend+2
 37268  005326  C2D4  F063         	movff	_loRa+207,___lldiv@dividend+3
 37269  00532A  0E7D               	movlw	125
 37270  00532C  0100               	movlb	0	; () banked
 37271  00532E  6F64               	movwf	___lldiv@divisor& (0+255),b
 37272  005330  0E00               	movlw	0
 37273  005332  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37274  005334  0E00               	movlw	0
 37275  005336  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37276  005338  0E00               	movlw	0
 37277  00533A  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37278  00533C  ECD9  F042         	call	___lldiv	;wreg free
 37279  005340  0E0C               	movlw	12
 37280  005342                     u24345:
 37281  005342  90D8               	bcf	status,0,c
 37282  005344  0100               	movlb	0	; () banked
 37283  005346  3760               	rlcf	?___lldiv& (0+255),f,b
 37284  005348  3761               	rlcf	(?___lldiv+1)& (0+255),f,b
 37285  00534A  3762               	rlcf	(?___lldiv+2)& (0+255),f,b
 37286  00534C  3763               	rlcf	(?___lldiv+3)& (0+255),f,b
 37287  00534E  2EE8               	decfsz	wreg,f,c
 37288  005350  D7F8               	goto	u24345
 37289  005352  D023               	goto	L37
 37290  005354                     l21448:
 37291                           
 37292                           ; BSR set to: 2
 37293  005354  C2D1  F0A0         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 37294  005358  C2D2  F0A1         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 37295  00535C  C2D3  F0A2         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 37296  005360  C2D4  F0A3         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 37297  005364  0E0C               	movlw	12
 37298  005366                     u24355:
 37299  005366  90D8               	bcf	status,0,c
 37300  005368  0100               	movlb	0	; () banked
 37301  00536A  37A0               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 37302  00536C  37A1               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 37303  00536E  37A2               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 37304  005370  37A3               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 37305  005372  2EE8               	decfsz	wreg,f,c
 37306  005374  D7F8               	goto	u24355
 37307  005376  C0A0  F060         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 37308  00537A  C0A1  F061         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 37309  00537E  C0A2  F062         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 37310  005382  C0A3  F063         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 37311  005386  0E7D               	movlw	125
 37312  005388  6F64               	movwf	___lldiv@divisor& (0+255),b
 37313  00538A  0E00               	movlw	0
 37314  00538C  6F65               	movwf	(___lldiv@divisor+1)& (0+255),b
 37315  00538E  0E00               	movlw	0
 37316  005390  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 37317  005392  0E00               	movlw	0
 37318  005394  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 37319  005396  ECD9  F042         	call	___lldiv	;wreg free
 37320  00539A                     L37:
 37321  00539A  C060  F0A4         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$2499
 37322  00539E  C061  F0A5         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$2499+1
 37323  0053A2  C062  F0A6         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$2499+2
 37324  0053A6  C063  F0A7         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$2499+3
 37325  0053AA  C0A4  F06D         	movff	_LORAWAN_LinkCheckConfigure$2499,SwTimerSetTimeout@timeout
 37326  0053AE  C0A5  F06E         	movff	_LORAWAN_LinkCheckConfigure$2499+1,SwTimerSetTimeout@timeout+1
 37327  0053B2  C0A6  F06F         	movff	_LORAWAN_LinkCheckConfigure$2499+2,SwTimerSetTimeout@timeout+2
 37328  0053B6  C0A7  F070         	movff	_LORAWAN_LinkCheckConfigure$2499+3,SwTimerSetTimeout@timeout+3
 37329  0053BA  0102               	movlb	2	; () banked
 37330  0053BC  51EC               	movf	(_loRa+231)& (0+255),w,b
 37331  0053BE  ECC2  F04C         	call	_SwTimerSetTimeout
 37332                           
 37333                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 37334  0053C2  0102               	movlb	2	; () banked
 37335  0053C4  51EC               	movf	(_loRa+231)& (0+255),w,b
 37336  0053C6  ECB6  F040         	call	_SwTimerStart
 37337  0053CA  0012               	return		;funcret
 37338  0053CC                     __end_of_LORAWAN_LinkCheckConfigure:
 37339                           	opt callstack 0
 37340                           
 37341 ;; *************** function ___lmul *****************
 37342 ;; Defined at:
 37343 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul32.c"
 37344 ;; Parameters:    Size  Location     Type
 37345 ;;  multiplier      4   50[BANK0 ] unsigned long 
 37346 ;;  multiplicand    4   54[BANK0 ] unsigned long 
 37347 ;; Auto vars:     Size  Location     Type
 37348 ;;  product         4   58[BANK0 ] unsigned long 
 37349 ;; Return value:  Size  Location     Type
 37350 ;;                  4   50[BANK0 ] unsigned long 
 37351 ;; Registers used:
 37352 ;;		wreg, status,2, status,0
 37353 ;; Tracked objects:
 37354 ;;		On entry : 0/0
 37355 ;;		On exit  : 0/0
 37356 ;;		Unchanged: 0/0
 37357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37358 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37359 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37361 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37362 ;;Total ram usage:       12 bytes
 37363 ;; Hardware stack levels used:    1
 37364 ;; Hardware stack levels required when called:    7
 37365 ;; This function calls:
 37366 ;;		Nothing
 37367 ;; This function is called by:
 37368 ;;		_RADIO_WriteConfiguration
 37369 ;;		_RADIO_TxDone
 37370 ;;		_RADIO_FSKPacketSent
 37371 ;;		_LORAWAN_TxDone
 37372 ;;		_ExecuteNewChannel
 37373 ;;		_ExecuteRxParamSetupReq
 37374 ;;		_UpdateCfList
 37375 ;;		_LORAWAN_LinkCheckConfigure
 37376 ;;		_rand
 37377 ;;		_LORAWAN_Pause
 37378 ;; This function uses a non-reentrant model
 37379 ;;
 37380                           
 37381                           	psect	text231
 37382  009232                     __ptext231:
 37383                           	opt callstack 0
 37384  009232                     ___lmul:
 37385                           	opt callstack 16
 37386                           
 37387                           ;incstack = 0
 37388  009232  0E00               	movlw	0
 37389  009234  0100               	movlb	0	; () banked
 37390  009236  6F9A               	movwf	___lmul@product& (0+255),b
 37391  009238  0E00               	movlw	0
 37392  00923A  6F9B               	movwf	(___lmul@product+1)& (0+255),b
 37393  00923C  0E00               	movlw	0
 37394  00923E  6F9C               	movwf	(___lmul@product+2)& (0+255),b
 37395  009240  0E00               	movlw	0
 37396  009242  6F9D               	movwf	(___lmul@product+3)& (0+255),b
 37397  009244                     l18058:
 37398                           
 37399                           ; BSR set to: 0
 37400  009244  A192               	btfss	___lmul@multiplier& (0+255),0,b
 37401  009246  D008               	goto	l18062
 37402                           
 37403                           ; BSR set to: 0
 37404  009248  5196               	movf	___lmul@multiplicand& (0+255),w,b
 37405  00924A  279A               	addwf	___lmul@product& (0+255),f,b
 37406  00924C  5197               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 37407  00924E  239B               	addwfc	(___lmul@product+1)& (0+255),f,b
 37408  009250  5198               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 37409  009252  239C               	addwfc	(___lmul@product+2)& (0+255),f,b
 37410  009254  5199               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 37411  009256  239D               	addwfc	(___lmul@product+3)& (0+255),f,b
 37412  009258                     l18062:
 37413                           
 37414                           ; BSR set to: 0
 37415  009258  90D8               	bcf	status,0,c
 37416  00925A  3796               	rlcf	___lmul@multiplicand& (0+255),f,b
 37417  00925C  3797               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 37418  00925E  3798               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 37419  009260  3799               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 37420                           
 37421                           ; BSR set to: 0
 37422  009262  90D8               	bcf	status,0,c
 37423  009264  3395               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 37424  009266  3394               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 37425  009268  3393               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 37426  00926A  3392               	rrcf	___lmul@multiplier& (0+255),f,b
 37427  00926C  5192               	movf	___lmul@multiplier& (0+255),w,b
 37428  00926E  1193               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 37429  009270  1194               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 37430  009272  1195               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 37431  009274  A4D8               	btfss	status,2,c
 37432  009276  D7E6               	goto	l18058
 37433                           
 37434                           ; BSR set to: 0
 37435  009278  C09A  F092         	movff	___lmul@product,?___lmul
 37436  00927C  C09B  F093         	movff	___lmul@product+1,?___lmul+1
 37437  009280  C09C  F094         	movff	___lmul@product+2,?___lmul+2
 37438  009284  C09D  F095         	movff	___lmul@product+3,?___lmul+3
 37439                           
 37440                           ; BSR set to: 0
 37441  009288  0012               	return		;funcret
 37442  00928A                     __end_of___lmul:
 37443                           	opt callstack 0
 37444                           
 37445 ;; *************** function ___lldiv *****************
 37446 ;; Defined at:
 37447 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 37448 ;; Parameters:    Size  Location     Type
 37449 ;;  dividend        4    0[BANK0 ] unsigned long 
 37450 ;;  divisor         4    4[BANK0 ] unsigned long 
 37451 ;; Auto vars:     Size  Location     Type
 37452 ;;  quotient        4    8[BANK0 ] unsigned long 
 37453 ;;  counter         1   12[BANK0 ] unsigned char 
 37454 ;; Return value:  Size  Location     Type
 37455 ;;                  4    0[BANK0 ] unsigned long 
 37456 ;; Registers used:
 37457 ;;		wreg, status,2, status,0
 37458 ;; Tracked objects:
 37459 ;;		On entry : 0/0
 37460 ;;		On exit  : 0/0
 37461 ;;		Unchanged: 0/0
 37462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37463 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37464 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37466 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37467 ;;Total ram usage:       13 bytes
 37468 ;; Hardware stack levels used:    1
 37469 ;; Hardware stack levels required when called:    7
 37470 ;; This function calls:
 37471 ;;		Nothing
 37472 ;; This function is called by:
 37473 ;;		_RADIO_WriteFrequency
 37474 ;;		_RADIO_WriteFSKFrequencyDeviation
 37475 ;;		_RADIO_WriteFSKBitRate
 37476 ;;		_RADIO_Transmit
 37477 ;;		_RADIO_ReceiveStart
 37478 ;;		_LORAWAN_TxDone
 37479 ;;		_LORAWAN_RxTimeout
 37480 ;;		_StartReTxTimer
 37481 ;;		_DutyCycleCallback
 37482 ;;		_LORAWAN_LinkCheckConfigure
 37483 ;;		_LORAWAN_LinkCheckCallback
 37484 ;;		_UpdateRetransmissionAckTimeoutState
 37485 ;;		_UpdateJoinSuccessState
 37486 ;; This function uses a non-reentrant model
 37487 ;;
 37488                           
 37489                           	psect	text232
 37490  0085B2                     __ptext232:
 37491                           	opt callstack 0
 37492  0085B2                     ___lldiv:
 37493                           	opt callstack 19
 37494                           
 37495                           ; BSR set to: 0
 37496                           ;incstack = 0
 37497  0085B2  0E00               	movlw	0
 37498  0085B4  0100               	movlb	0	; () banked
 37499  0085B6  6F68               	movwf	___lldiv@quotient& (0+255),b
 37500  0085B8  0E00               	movlw	0
 37501  0085BA  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 37502  0085BC  0E00               	movlw	0
 37503  0085BE  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 37504  0085C0  0E00               	movlw	0
 37505  0085C2  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 37506                           
 37507                           ; BSR set to: 0
 37508  0085C4  5164               	movf	___lldiv@divisor& (0+255),w,b
 37509  0085C6  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 37510  0085C8  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 37511  0085CA  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 37512  0085CC  B4D8               	btfsc	status,2,c
 37513  0085CE  D02A               	goto	l3546
 37514                           
 37515                           ; BSR set to: 0
 37516  0085D0  0E01               	movlw	1
 37517  0085D2  6F6C               	movwf	___lldiv@counter& (0+255),b
 37518  0085D4  D006               	goto	l18074
 37519  0085D6                     l18072:
 37520                           
 37521                           ; BSR set to: 0
 37522  0085D6  90D8               	bcf	status,0,c
 37523  0085D8  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 37524  0085DA  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 37525  0085DC  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 37526  0085DE  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 37527  0085E0  2B6C               	incf	___lldiv@counter& (0+255),f,b
 37528  0085E2                     l18074:
 37529                           
 37530                           ; BSR set to: 0
 37531  0085E2  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 37532  0085E4  D7F8               	goto	l18072
 37533  0085E6                     u18930:
 37534                           
 37535                           ; BSR set to: 0
 37536  0085E6  90D8               	bcf	status,0,c
 37537  0085E8  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 37538  0085EA  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 37539  0085EC  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 37540  0085EE  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 37541                           
 37542                           ; BSR set to: 0
 37543  0085F0  5164               	movf	___lldiv@divisor& (0+255),w,b
 37544  0085F2  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 37545  0085F4  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37546  0085F6  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 37547  0085F8  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37548  0085FA  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 37549  0085FC  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37550  0085FE  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 37551  008600  A0D8               	btfss	status,0,c
 37552  008602  D009               	goto	l18084
 37553                           
 37554                           ; BSR set to: 0
 37555  008604  5164               	movf	___lldiv@divisor& (0+255),w,b
 37556  008606  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 37557  008608  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 37558  00860A  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 37559  00860C  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 37560  00860E  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 37561  008610  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 37562  008612  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 37563                           
 37564                           ; BSR set to: 0
 37565  008614  8168               	bsf	___lldiv@quotient& (0+255),0,b
 37566  008616                     l18084:
 37567                           
 37568                           ; BSR set to: 0
 37569  008616  90D8               	bcf	status,0,c
 37570  008618  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 37571  00861A  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 37572  00861C  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 37573  00861E  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 37574                           
 37575                           ; BSR set to: 0
 37576  008620  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 37577  008622  D7E1               	goto	u18930
 37578  008624                     l3546:
 37579                           
 37580                           ; BSR set to: 0
 37581  008624  C068  F060         	movff	___lldiv@quotient,?___lldiv
 37582  008628  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 37583  00862C  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 37584  008630  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 37585                           
 37586                           ; BSR set to: 0
 37587  008634  0012               	return		;funcret
 37588  008636                     __end_of___lldiv:
 37589                           	opt callstack 0
 37590                           
 37591 ;; *************** function _SwTimerStop *****************
 37592 ;; Defined at:
 37593 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37594 ;; Parameters:    Size  Location     Type
 37595 ;;  timerId         1    wreg     unsigned char 
 37596 ;; Auto vars:     Size  Location     Type
 37597 ;;  timerId         1    0[BANK0 ] unsigned char 
 37598 ;; Return value:  Size  Location     Type
 37599 ;;                  1    wreg      void 
 37600 ;; Registers used:
 37601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37602 ;; Tracked objects:
 37603 ;;		On entry : 0/0
 37604 ;;		On exit  : 0/0
 37605 ;;		Unchanged: 0/0
 37606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37611 ;;Total ram usage:        1 bytes
 37612 ;; Hardware stack levels used:    1
 37613 ;; Hardware stack levels required when called:    7
 37614 ;; This function calls:
 37615 ;;		Nothing
 37616 ;; This function is called by:
 37617 ;;		_RADIO_Init
 37618 ;;		_RADIO_Transmit
 37619 ;;		_RADIO_RxDone
 37620 ;;		_RADIO_FSKPayloadReady
 37621 ;;		_RADIO_RxTimeout
 37622 ;;		_RADIO_TxDone
 37623 ;;		_RADIO_FSKPacketSent
 37624 ;;		_RADIO_RxFSKTimeout
 37625 ;;		_LORAWAN_TxDone
 37626 ;;		_StopAllSoftwareTimers
 37627 ;;		_LORAWAN_LinkCheckConfigure
 37628 ;;		_LORAWAN_RxDone
 37629 ;; This function uses a non-reentrant model
 37630 ;;
 37631                           
 37632                           	psect	text233
 37633  00A430                     __ptext233:
 37634                           	opt callstack 0
 37635  00A430                     _SwTimerStop:
 37636                           	opt callstack 19
 37637                           
 37638                           ; BSR set to: 0
 37639                           ;incstack = 0
 37640                           ;SwTimerStop@timerId stored from wreg
 37641  00A430  0100               	movlb	0	; () banked
 37642  00A432  6F60               	movwf	SwTimerStop@timerId& (0+255),b
 37643                           
 37644                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 37645  00A434  9EF2               	bcf	4082,7,c	;volatile
 37646                           
 37647                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 37648  00A436  0100               	movlb	0	; () banked
 37649  00A438  5160               	movf	SwTimerStop@timerId& (0+255),w,b
 37650  00A43A  0D08               	mullw	8
 37651  00A43C  0E04               	movlw	low (_swTimers+4)
 37652  00A43E  24F3               	addwf	prodl,w,c
 37653  00A440  6ED9               	movwf	fsr2l,c
 37654  00A442  0E03               	movlw	high (_swTimers+4)
 37655  00A444  20F4               	addwfc	prodh,w,c
 37656  00A446  6EDA               	movwf	fsr2h,c
 37657  00A448  0E00               	movlw	0
 37658  00A44A  6EDF               	movwf	indf2,c
 37659                           
 37660                           ; BSR set to: 0
 37661                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 37662  00A44C  8EF2               	bsf	4082,7,c	;volatile
 37663                           
 37664                           ; BSR set to: 0
 37665  00A44E  0012               	return		;funcret
 37666  00A450                     __end_of_SwTimerStop:
 37667                           	opt callstack 0
 37668                           
 37669 ;; *************** function _SwTimerStart *****************
 37670 ;; Defined at:
 37671 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37672 ;; Parameters:    Size  Location     Type
 37673 ;;  timerId         1    wreg     unsigned char 
 37674 ;; Auto vars:     Size  Location     Type
 37675 ;;  timerId         1   49[BANK0 ] unsigned char 
 37676 ;;  ticksRemaini    4   45[BANK0 ] unsigned long 
 37677 ;; Return value:  Size  Location     Type
 37678 ;;                  1    wreg      void 
 37679 ;; Registers used:
 37680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37681 ;; Tracked objects:
 37682 ;;		On entry : 0/0
 37683 ;;		On exit  : 0/0
 37684 ;;		Unchanged: 0/0
 37685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37687 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37688 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37689 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37690 ;;Total ram usage:        9 bytes
 37691 ;; Hardware stack levels used:    1
 37692 ;; Hardware stack levels required when called:   10
 37693 ;; This function calls:
 37694 ;;		_SwTimersInterrupt
 37695 ;;		_TMR_OverrideRemaining
 37696 ;; This function is called by:
 37697 ;;		_RADIO_Transmit
 37698 ;;		_RADIO_ReceiveStart
 37699 ;;		_LORAWAN_TxDone
 37700 ;;		_LORAWAN_RxTimeout
 37701 ;;		_StartReTxTimer
 37702 ;;		_DutyCycleCallback
 37703 ;;		_LORAWAN_Join
 37704 ;;		_LORAWAN_LinkCheckConfigure
 37705 ;;		_LORAWAN_LinkCheckCallback
 37706 ;;		_UpdateRetransmissionAckTimeoutState
 37707 ;;		_UpdateJoinSuccessState
 37708 ;; This function uses a non-reentrant model
 37709 ;;
 37710                           
 37711                           	psect	text234
 37712  00816C                     __ptext234:
 37713                           	opt callstack 0
 37714  00816C                     _SwTimerStart:
 37715                           	opt callstack 16
 37716                           
 37717                           ; BSR set to: 0
 37718                           ;incstack = 0
 37719                           ;SwTimerStart@timerId stored from wreg
 37720  00816C  0100               	movlb	0	; () banked
 37721  00816E  6F91               	movwf	SwTimerStart@timerId& (0+255),b
 37722                           
 37723                           ;sw_timer.c: 220: uint32_t ticksRemaining;;sw_timer.c: 222: (INTCONbits.GIE = 0);
 37724  008170  9EF2               	bcf	4082,7,c	;volatile
 37725                           
 37726                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 37727  008172  ECEE  F034         	call	_SwTimersInterrupt	;wreg free
 37728  008176  C078  F08D         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 37729  00817A  C079  F08E         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 37730  00817E  C07A  F08F         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 37731  008182  C07B  F090         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 37732                           
 37733                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 37734  008186  0100               	movlb	0	; () banked
 37735  008188  5191               	movf	SwTimerStart@timerId& (0+255),w,b
 37736  00818A  0D08               	mullw	8
 37737  00818C  0E00               	movlw	low _swTimers
 37738  00818E  24F3               	addwf	prodl,w,c
 37739  008190  6ED9               	movwf	fsr2l,c
 37740  008192  0E03               	movlw	high _swTimers
 37741  008194  20F4               	addwfc	prodh,w,c
 37742  008196  6EDA               	movwf	fsr2h,c
 37743  008198  518D               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 37744  00819A  5CDE               	subwf	postinc2,w,c
 37745  00819C  518E               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 37746  00819E  58DE               	subwfb	postinc2,w,c
 37747  0081A0  518F               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 37748  0081A2  58DE               	subwfb	postinc2,w,c
 37749  0081A4  5190               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 37750  0081A6  58DE               	subwfb	postinc2,w,c
 37751  0081A8  B0D8               	btfsc	status,0,c
 37752  0081AA  D010               	goto	l18460
 37753                           
 37754                           ; BSR set to: 0
 37755                           ;sw_timer.c: 225: {;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 37756  0081AC  5191               	movf	SwTimerStart@timerId& (0+255),w,b
 37757  0081AE  0D08               	mullw	8
 37758  0081B0  0E00               	movlw	low _swTimers
 37759  0081B2  24F3               	addwf	prodl,w,c
 37760  0081B4  6ED9               	movwf	fsr2l,c
 37761  0081B6  0E03               	movlw	high _swTimers
 37762  0081B8  20F4               	addwfc	prodh,w,c
 37763  0081BA  6EDA               	movwf	fsr2h,c
 37764  0081BC  CFDE F08D          	movff	postinc2,SwTimerStart@ticksRemaining
 37765  0081C0  CFDE F08E          	movff	postinc2,SwTimerStart@ticksRemaining+1
 37766  0081C4  CFDE F08F          	movff	postinc2,SwTimerStart@ticksRemaining+2
 37767  0081C8  CFDE F090          	movff	postinc2,SwTimerStart@ticksRemaining+3
 37768  0081CC                     l18460:
 37769                           
 37770                           ; BSR set to: 0
 37771                           ;sw_timer.c: 227: };sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 37772  0081CC  C08D  F06A         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 37773  0081D0  C08E  F06B         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 37774  0081D4  C08F  F06C         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 37775  0081D8  C090  F06D         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 37776  0081DC  EC5D  F043         	call	_TMR_OverrideRemaining	;wreg free
 37777                           
 37778                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 37779  0081E0  0100               	movlb	0	; () banked
 37780  0081E2  5191               	movf	SwTimerStart@timerId& (0+255),w,b
 37781  0081E4  0D08               	mullw	8
 37782  0081E6  0E04               	movlw	low (_swTimers+4)
 37783  0081E8  24F3               	addwf	prodl,w,c
 37784  0081EA  6ED9               	movwf	fsr2l,c
 37785  0081EC  0E03               	movlw	high (_swTimers+4)
 37786  0081EE  20F4               	addwfc	prodh,w,c
 37787  0081F0  6EDA               	movwf	fsr2h,c
 37788  0081F2  0E01               	movlw	1
 37789  0081F4  6EDF               	movwf	indf2,c
 37790                           
 37791                           ; BSR set to: 0
 37792                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 37793  0081F6  8EF2               	bsf	4082,7,c	;volatile
 37794                           
 37795                           ; BSR set to: 0
 37796  0081F8  0012               	return		;funcret
 37797  0081FA                     __end_of_SwTimerStart:
 37798                           	opt callstack 0
 37799                           
 37800 ;; *************** function _TMR_OverrideRemaining *****************
 37801 ;; Defined at:
 37802 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37803 ;; Parameters:    Size  Location     Type
 37804 ;;  ticksRemaini    4   10[BANK0 ] unsigned long 
 37805 ;; Auto vars:     Size  Location     Type
 37806 ;;  oldReloadVal    2   18[BANK0 ] unsigned int 
 37807 ;;  tmrVal          2   16[BANK0 ] unsigned int 
 37808 ;; Return value:  Size  Location     Type
 37809 ;;                  1    wreg      void 
 37810 ;; Registers used:
 37811 ;;		wreg, status,2, status,0, cstack
 37812 ;; Tracked objects:
 37813 ;;		On entry : 0/0
 37814 ;;		On exit  : 0/0
 37815 ;;		Unchanged: 0/0
 37816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37817 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37818 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37820 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37821 ;;Total ram usage:       10 bytes
 37822 ;; Hardware stack levels used:    1
 37823 ;; Hardware stack levels required when called:    9
 37824 ;; This function calls:
 37825 ;;		_TMR_SwapTimer
 37826 ;; This function is called by:
 37827 ;;		_SwTimerStart
 37828 ;; This function uses a non-reentrant model
 37829 ;;
 37830                           
 37831                           	psect	text235
 37832  0086BA                     __ptext235:
 37833                           	opt callstack 0
 37834  0086BA                     _TMR_OverrideRemaining:
 37835                           	opt callstack 16
 37836                           
 37837                           ;sw_timer.c: 67: uint16_t tmrVal;;sw_timer.c: 68: uint16_t oldReloadVal;;sw_timer.c: 71:
      +                           if (ticksToScheduledInterrupt > 10)
 37838                           
 37839                           ; BSR set to: 0
 37840                           ;incstack = 0
 37841  0086BA  5055               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37842  0086BC  1054               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37843  0086BE  1053               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37844  0086C0  E104               	bnz	u19020
 37845  0086C2  0E0B               	movlw	11
 37846  0086C4  5C52               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 37847  0086C6  A0D8               	btfss	status,0,c
 37848  0086C8  0012               	return	
 37849  0086CA                     u19020:
 37850                           
 37851                           ;sw_timer.c: 72: {;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 37852  0086CA  5052               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 37853  0086CC  0100               	movlb	0	; () banked
 37854  0086CE  5D6A               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 37855  0086D0  5053               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 37856  0086D2  596B               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 37857  0086D4  5054               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 37858  0086D6  596C               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 37859  0086D8  5055               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 37860  0086DA  596D               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 37861  0086DC  B0D8               	btfsc	status,0,c
 37862  0086DE  0012               	return	
 37863                           
 37864                           ; BSR set to: 0
 37865                           ;sw_timer.c: 74: {;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 37866  0086E0  C06A  F052         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 37867  0086E4  C06B  F053         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 37868  0086E8  C06C  F054         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 37869  0086EC  C06D  F055         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 37870                           
 37871                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 37872  0086F0  C03E  F072         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 37873  0086F4  C03F  F073         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 37874                           
 37875                           ; BSR set to: 0
 37876                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 37877  0086F8  516A               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 37878  0086FA  0800               	sublw	0
 37879  0086FC  6E3E               	movwf	_reloadVal,c	;volatile
 37880  0086FE  516B               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 37881  008700  A0D8               	btfss	status,0,c
 37882  008702  2AE8               	incf	wreg,f,c
 37883  008704  0800               	sublw	0
 37884  008706  6E3F               	movwf	_reloadVal+1,c	;volatile
 37885                           
 37886                           ; BSR set to: 0
 37887                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 37888  008708  C03E  F068         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 37889  00870C  C03F  F069         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 37890  008710  EC05  F04D         	call	_TMR_SwapTimer	;wreg free
 37891  008714  C068  F070         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 37892  008718  C069  F071         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 37893                           
 37894                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 37895  00871C  0100               	movlb	0	; () banked
 37896  00871E  5172               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 37897  008720  5D70               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 37898  008722  6F6E               	movwf	??_TMR_OverrideRemaining& (0+255),b
 37899  008724  5173               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 37900  008726  5971               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 37901  008728  6F6F               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 37902  00872A  516E               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 37903  00872C  2636               	addwf	_ticksAdded,f,c	;volatile
 37904  00872E  516F               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 37905  008730  2237               	addwfc	_ticksAdded+1,f,c	;volatile
 37906  008732  0E00               	movlw	0
 37907  008734  2238               	addwfc	_ticksAdded+2,f,c	;volatile
 37908  008736  0E00               	movlw	0
 37909  008738  2239               	addwfc	_ticksAdded+3,f,c	;volatile
 37910  00873A  0012               	return		;funcret
 37911  00873C                     __end_of_TMR_OverrideRemaining:
 37912                           	opt callstack 0
 37913                           
 37914 ;; *************** function _TMR_SwapTimer *****************
 37915 ;; Defined at:
 37916 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37917 ;; Parameters:    Size  Location     Type
 37918 ;;  timerVal        2    8[BANK0 ] unsigned int 
 37919 ;; Auto vars:     Size  Location     Type
 37920 ;;		None
 37921 ;; Return value:  Size  Location     Type
 37922 ;;                  2    8[BANK0 ] unsigned int 
 37923 ;; Registers used:
 37924 ;;		wreg, status,2, status,0, cstack
 37925 ;; Tracked objects:
 37926 ;;		On entry : 0/0
 37927 ;;		On exit  : 0/0
 37928 ;;		Unchanged: 0/0
 37929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37930 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37933 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37934 ;;Total ram usage:        2 bytes
 37935 ;; Hardware stack levels used:    1
 37936 ;; Hardware stack levels required when called:    8
 37937 ;; This function calls:
 37938 ;;		_TMR1_ReadTimer
 37939 ;;		_TMR1_WriteTimer
 37940 ;; This function is called by:
 37941 ;;		_TMR_OverrideRemaining
 37942 ;; This function uses a non-reentrant model
 37943 ;;
 37944                           
 37945                           	psect	text236
 37946  009A0A                     __ptext236:
 37947                           	opt callstack 0
 37948  009A0A                     _TMR_SwapTimer:
 37949                           	opt callstack 16
 37950                           
 37951                           ;sw_timer.c: 114: static uint16_t oldVal;;sw_timer.c: 115: static uint16_t retVal;;sw_ti
      +                          mer.c: 117: oldVal = TMR1_ReadTimer();
 37952                           
 37953                           ;incstack = 0
 37954  009A0A  ECC7  F051         	call	_TMR1_ReadTimer	;wreg free
 37955  009A0E  C060  F03A         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 37956  009A12  C061  F03B         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 37957  009A16                     l17910:
 37958  009A16  ECC7  F051         	call	_TMR1_ReadTimer	;wreg free
 37959  009A1A  503A               	movf	TMR_SwapTimer@oldVal,w,c
 37960  009A1C  0100               	movlb	0	; () banked
 37961  009A1E  1960               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 37962  009A20  E104               	bnz	u18780
 37963  009A22  503B               	movf	TMR_SwapTimer@oldVal+1,w,c
 37964  009A24  1961               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 37965  009A26  B4D8               	btfsc	status,2,c
 37966  009A28  D7F6               	goto	l17910
 37967  009A2A                     u18780:
 37968                           
 37969                           ; BSR set to: 0
 37970                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 37971  009A2A  C068  F060         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 37972  009A2E  C069  F061         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 37973  009A32  EC28  F052         	call	_TMR1_WriteTimer	;wreg free
 37974                           
 37975                           ;sw_timer.c: 128: oldVal++;
 37976  009A36  4A3A               	infsnz	TMR_SwapTimer@oldVal,f,c
 37977  009A38  2A3B               	incf	TMR_SwapTimer@oldVal+1,f,c
 37978                           
 37979                           ;sw_timer.c: 130: retVal = oldVal;
 37980  009A3A  C03A  F11E         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 37981  009A3E  C03B  F11F         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 37982                           
 37983                           ;sw_timer.c: 132: return retVal;
 37984  009A42  C11E  F068         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 37985  009A46  C11F  F069         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 37986  009A4A  0012               	return		;funcret
 37987  009A4C                     __end_of_TMR_SwapTimer:
 37988                           	opt callstack 0
 37989                           
 37990 ;; *************** function _TMR1_WriteTimer *****************
 37991 ;; Defined at:
 37992 ;;		line 124 in file "mcc_generated_files/tmr1.c"
 37993 ;; Parameters:    Size  Location     Type
 37994 ;;  timerVal        2    0[BANK0 ] unsigned int 
 37995 ;; Auto vars:     Size  Location     Type
 37996 ;;		None
 37997 ;; Return value:  Size  Location     Type
 37998 ;;                  1    wreg      void 
 37999 ;; Registers used:
 38000 ;;		wreg, status,2
 38001 ;; Tracked objects:
 38002 ;;		On entry : 0/0
 38003 ;;		On exit  : 0/0
 38004 ;;		Unchanged: 0/0
 38005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38010 ;;Total ram usage:        2 bytes
 38011 ;; Hardware stack levels used:    1
 38012 ;; Hardware stack levels required when called:    7
 38013 ;; This function calls:
 38014 ;;		Nothing
 38015 ;; This function is called by:
 38016 ;;		_TMR_SwapTimer
 38017 ;;		_TMR1_Reload
 38018 ;; This function uses a non-reentrant model
 38019 ;;
 38020                           
 38021                           	psect	text237
 38022  00A450                     __ptext237:
 38023                           	opt callstack 0
 38024  00A450                     _TMR1_WriteTimer:
 38025                           	opt callstack 16
 38026                           
 38027                           ;tmr1.c: 126: if (T1CONbits.T1SYNC == 1)
 38028                           
 38029                           ;incstack = 0
 38030  00A450  A4CD               	btfss	4045,2,c	;volatile
 38031  00A452  D008               	goto	l17826
 38032                           
 38033                           ;tmr1.c: 127: {;tmr1.c: 129: T1CONbits.TMR1ON = 0;
 38034  00A454  90CD               	bcf	4045,0,c	;volatile
 38035                           
 38036                           ;tmr1.c: 132: TMR1H = (timerVal >> 8);
 38037  00A456  0100               	movlb	0	; () banked
 38038  00A458  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38039  00A45A  6ECF               	movwf	4047,c	;volatile
 38040                           
 38041                           ; BSR set to: 0
 38042                           ;tmr1.c: 133: TMR1L = (uint8_t) timerVal;
 38043  00A45C  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38044                           
 38045                           ; BSR set to: 0
 38046                           ;tmr1.c: 136: T1CONbits.TMR1ON =1;
 38047  00A460  80CD               	bsf	4045,0,c	;volatile
 38048                           
 38049                           ;tmr1.c: 137: }
 38050  00A462  0012               	return	
 38051  00A464                     l17826:
 38052                           
 38053                           ;tmr1.c: 138: else;tmr1.c: 139: {;tmr1.c: 141: TMR1H = (timerVal >> 8);
 38054  00A464  0100               	movlb	0	; () banked
 38055  00A466  5161               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 38056  00A468  6ECF               	movwf	4047,c	;volatile
 38057                           
 38058                           ; BSR set to: 0
 38059                           ;tmr1.c: 142: TMR1L = (uint8_t) timerVal;
 38060  00A46A  C060  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 38061                           
 38062                           ; BSR set to: 0
 38063  00A46E  0012               	return		;funcret
 38064  00A470                     __end_of_TMR1_WriteTimer:
 38065                           	opt callstack 0
 38066                           
 38067 ;; *************** function _SwTimersInterrupt *****************
 38068 ;; Defined at:
 38069 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38070 ;; Parameters:    Size  Location     Type
 38071 ;;		None
 38072 ;; Auto vars:     Size  Location     Type
 38073 ;;  ticksToNextT    4   36[BANK0 ] unsigned long 
 38074 ;;  timeElapsed     4   32[BANK0 ] unsigned long 
 38075 ;;  i               1   40[BANK0 ] unsigned char 
 38076 ;; Return value:  Size  Location     Type
 38077 ;;                  4   24[BANK0 ] unsigned long 
 38078 ;; Registers used:
 38079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38080 ;; Tracked objects:
 38081 ;;		On entry : 0/0
 38082 ;;		On exit  : 0/0
 38083 ;;		Unchanged: 0/0
 38084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38085 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38086 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38087 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38088 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38089 ;;Total ram usage:       17 bytes
 38090 ;; Hardware stack levels used:    1
 38091 ;; Hardware stack levels required when called:    9
 38092 ;; This function calls:
 38093 ;;		_TMR_GetDeltaTime
 38094 ;; This function is called by:
 38095 ;;		_SwTimerReadValue
 38096 ;;		_SwTimerStart
 38097 ;;		_SwTimersCanSleep
 38098 ;; This function uses a non-reentrant model
 38099 ;;
 38100                           
 38101                           	psect	text238
 38102  0069DC                     __ptext238:
 38103                           	opt callstack 0
 38104  0069DC                     _SwTimersInterrupt:
 38105                           	opt callstack 16
 38106                           
 38107                           ;sw_timer.c: 289: uint8_t i;;sw_timer.c: 290: uint32_t timeElapsed;;sw_timer.c: 291: uin
      +                          t32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 38108                           
 38109                           ; BSR set to: 0
 38110                           ;incstack = 0
 38111  0069DC  0100               	movlb	0	; () banked
 38112  0069DE  6984               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 38113  0069E0  6985               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 38114  0069E2  6986               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 38115  0069E4  6987               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 38116                           
 38117                           ; BSR set to: 0
 38118                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 38119  0069E6  EC46  F031         	call	_TMR_GetDeltaTime	;wreg free
 38120  0069EA  C068  F080         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 38121  0069EE  C069  F081         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 38122  0069F2  C06A  F082         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 38123  0069F6  C06B  F083         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 38124                           
 38125                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 38126  0069FA  0E00               	movlw	0
 38127  0069FC  0100               	movlb	0	; () banked
 38128  0069FE  6F88               	movwf	SwTimersInterrupt@i& (0+255),b
 38129  006A00  D05D               	goto	l18154
 38130  006A02                     l18142:
 38131                           
 38132                           ; BSR set to: 0
 38133                           ;sw_timer.c: 298: {;sw_timer.c: 301: if (swTimers[i].running == 1)
 38134  006A02  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38135  006A04  0D08               	mullw	8
 38136  006A06  0E04               	movlw	low (_swTimers+4)
 38137  006A08  24F3               	addwf	prodl,w,c
 38138  006A0A  6ED9               	movwf	fsr2l,c
 38139  006A0C  0E03               	movlw	high (_swTimers+4)
 38140  006A0E  20F4               	addwfc	prodh,w,c
 38141  006A10  6EDA               	movwf	fsr2h,c
 38142  006A12  04DE               	decf	postinc2,w,c
 38143  006A14  A4D8               	btfss	status,2,c
 38144  006A16  D051               	goto	l18152
 38145                           
 38146                           ; BSR set to: 0
 38147                           ;sw_timer.c: 302: {;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 38148  006A18  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38149  006A1A  0D08               	mullw	8
 38150  006A1C  0E00               	movlw	low _swTimers
 38151  006A1E  24F3               	addwf	prodl,w,c
 38152  006A20  6ED9               	movwf	fsr2l,c
 38153  006A22  0E03               	movlw	high _swTimers
 38154  006A24  20F4               	addwfc	prodh,w,c
 38155  006A26  6EDA               	movwf	fsr2h,c
 38156  006A28  50DE               	movf	postinc2,w,c
 38157  006A2A  5D80               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38158  006A2C  50DE               	movf	postinc2,w,c
 38159  006A2E  5981               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38160  006A30  50DE               	movf	postinc2,w,c
 38161  006A32  5982               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38162  006A34  50DE               	movf	postinc2,w,c
 38163  006A36  5983               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38164  006A38  A0D8               	btfss	status,0,c
 38165  006A3A  D00D               	goto	l18148
 38166                           
 38167                           ; BSR set to: 0
 38168                           ;sw_timer.c: 304: {;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 38169  006A3C  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38170  006A3E  0D08               	mullw	8
 38171  006A40  0E00               	movlw	low _swTimers
 38172  006A42  24F3               	addwf	prodl,w,c
 38173  006A44  6ED9               	movwf	fsr2l,c
 38174  006A46  0E03               	movlw	high _swTimers
 38175  006A48  20F4               	addwfc	prodh,w,c
 38176  006A4A  6EDA               	movwf	fsr2h,c
 38177  006A4C  6ADE               	clrf	postinc2,c
 38178  006A4E  6ADE               	clrf	postinc2,c
 38179  006A50  6ADE               	clrf	postinc2,c
 38180  006A52  6ADD               	clrf	postdec2,c
 38181                           
 38182                           ;sw_timer.c: 306: }
 38183  006A54  D032               	goto	l18152
 38184  006A56                     l18148:
 38185                           
 38186                           ; BSR set to: 0
 38187                           ;sw_timer.c: 307: else;sw_timer.c: 308: {;sw_timer.c: 309: swTimers[i].ticksRemaining -=
      +                           timeElapsed;
 38188  006A56  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38189  006A58  0D08               	mullw	8
 38190  006A5A  0E00               	movlw	low _swTimers
 38191  006A5C  24F3               	addwf	prodl,w,c
 38192  006A5E  6ED9               	movwf	fsr2l,c
 38193  006A60  0E03               	movlw	high _swTimers
 38194  006A62  20F4               	addwfc	prodh,w,c
 38195  006A64  6EDA               	movwf	fsr2h,c
 38196  006A66  5180               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 38197  006A68  5EDE               	subwf	postinc2,f,c
 38198  006A6A  5181               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 38199  006A6C  5ADE               	subwfb	postinc2,f,c
 38200  006A6E  5182               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 38201  006A70  5ADE               	subwfb	postinc2,f,c
 38202  006A72  5183               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 38203  006A74  5ADE               	subwfb	postinc2,f,c
 38204                           
 38205                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 38206  006A76  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38207  006A78  0D08               	mullw	8
 38208  006A7A  0E00               	movlw	low _swTimers
 38209  006A7C  24F3               	addwf	prodl,w,c
 38210  006A7E  6ED9               	movwf	fsr2l,c
 38211  006A80  0E03               	movlw	high _swTimers
 38212  006A82  20F4               	addwfc	prodh,w,c
 38213  006A84  6EDA               	movwf	fsr2h,c
 38214  006A86  5184               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 38215  006A88  5CDE               	subwf	postinc2,w,c
 38216  006A8A  5185               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 38217  006A8C  58DE               	subwfb	postinc2,w,c
 38218  006A8E  5186               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 38219  006A90  58DE               	subwfb	postinc2,w,c
 38220  006A92  5187               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 38221  006A94  58DE               	subwfb	postinc2,w,c
 38222  006A96  B0D8               	btfsc	status,0,c
 38223  006A98  D010               	goto	l18152
 38224                           
 38225                           ; BSR set to: 0
 38226                           ;sw_timer.c: 313: {;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 38227  006A9A  5188               	movf	SwTimersInterrupt@i& (0+255),w,b
 38228  006A9C  0D08               	mullw	8
 38229  006A9E  0E00               	movlw	low _swTimers
 38230  006AA0  24F3               	addwf	prodl,w,c
 38231  006AA2  6ED9               	movwf	fsr2l,c
 38232  006AA4  0E03               	movlw	high _swTimers
 38233  006AA6  20F4               	addwfc	prodh,w,c
 38234  006AA8  6EDA               	movwf	fsr2h,c
 38235  006AAA  CFDE F084          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 38236  006AAE  CFDE F085          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 38237  006AB2  CFDE F086          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 38238  006AB6  CFDE F087          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 38239  006ABA                     l18152:
 38240                           
 38241                           ; BSR set to: 0
 38242  006ABA  2B88               	incf	SwTimersInterrupt@i& (0+255),f,b
 38243  006ABC                     l18154:
 38244                           
 38245                           ; BSR set to: 0
 38246  006ABC  0101               	movlb	1	; () banked
 38247  006ABE  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
 38248  006AC0  0100               	movlb	0	; () banked
 38249  006AC2  5D88               	subwf	SwTimersInterrupt@i& (0+255),w,b
 38250  006AC4  A0D8               	btfss	status,0,c
 38251  006AC6  D79D               	goto	l18142
 38252                           
 38253                           ; BSR set to: 0
 38254                           ;sw_timer.c: 315: };sw_timer.c: 316: };sw_timer.c: 317: };sw_timer.c: 318: };sw_timer.c:
      +                           320: return ticksToNextTimerEvent;
 38255  006AC8  C084  F078         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 38256  006ACC  C085  F079         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 38257  006AD0  C086  F07A         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 38258  006AD4  C087  F07B         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 38259                           
 38260                           ; BSR set to: 0
 38261  006AD8  0012               	return		;funcret
 38262  006ADA                     __end_of_SwTimersInterrupt:
 38263                           	opt callstack 0
 38264                           
 38265 ;; *************** function _TMR_GetDeltaTime *****************
 38266 ;; Defined at:
 38267 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38268 ;; Parameters:    Size  Location     Type
 38269 ;;		None
 38270 ;; Auto vars:     Size  Location     Type
 38271 ;;		None
 38272 ;; Return value:  Size  Location     Type
 38273 ;;                  4    8[BANK0 ] unsigned long 
 38274 ;; Registers used:
 38275 ;;		wreg, status,2, status,0, cstack
 38276 ;; Tracked objects:
 38277 ;;		On entry : 0/0
 38278 ;;		On exit  : 0/0
 38279 ;;		Unchanged: 0/0
 38280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38281 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38283 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38284 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38285 ;;Total ram usage:       16 bytes
 38286 ;; Hardware stack levels used:    1
 38287 ;; Hardware stack levels required when called:    8
 38288 ;; This function calls:
 38289 ;;		_TMR1_ReadTimer
 38290 ;; This function is called by:
 38291 ;;		_SwTimersInterrupt
 38292 ;; This function uses a non-reentrant model
 38293 ;;
 38294                           
 38295                           	psect	text239
 38296  00628C                     __ptext239:
 38297                           	opt callstack 0
 38298  00628C                     _TMR_GetDeltaTime:
 38299                           	opt callstack 16
 38300                           
 38301                           ;sw_timer.c: 90: static uint32_t retVal;;sw_timer.c: 91: static uint16_t tmrVal;;sw_time
      +                          r.c: 93: tmrVal = TMR1_ReadTimer();
 38302                           
 38303                           ; BSR set to: 0
 38304                           ;incstack = 0
 38305  00628C  ECC7  F051         	call	_TMR1_ReadTimer	;wreg free
 38306  006290  C060  F03C         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 38307  006294  C061  F03D         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 38308                           
 38309                           ;sw_timer.c: 95: if (timerOverflow == 1)
 38310  006298  0444               	decf	_timerOverflow,w,c	;volatile
 38311  00629A  A4D8               	btfss	status,2,c
 38312  00629C  D04C               	goto	l17936
 38313                           
 38314                           ;sw_timer.c: 96: {;sw_timer.c: 97: timerOverflow = 0;
 38315  00629E  0E00               	movlw	0
 38316  0062A0  6E44               	movwf	_timerOverflow,c	;volatile
 38317                           
 38318                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 38319  0062A2  503E               	movf	_reloadVal,w,c	;volatile
 38320  0062A4  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38321  0062A6  0100               	movlb	0	; () banked
 38322  0062A8  6F6C               	movwf	??_TMR_GetDeltaTime& (0+255),b
 38323  0062AA  503F               	movf	_reloadVal+1,w,c	;volatile
 38324  0062AC  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38325  0062AE  6F6D               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 38326  0062B0  6B6E               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 38327  0062B2  A0D8               	btfss	status,0,c
 38328  0062B4  076E               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 38329  0062B6  516E               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38330  0062B8  6F6F               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 38331  0062BA  5032               	movf	_ticksAccounted,w,c	;volatile
 38332  0062BC  5D6C               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 38333  0062BE  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 38334  0062C0  5033               	movf	_ticksAccounted+1,w,c	;volatile
 38335  0062C2  596D               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38336  0062C4  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 38337  0062C6  5034               	movf	_ticksAccounted+2,w,c	;volatile
 38338  0062C8  596E               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38339  0062CA  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38340  0062CC  5035               	movf	_ticksAccounted+3,w,c	;volatile
 38341  0062CE  596F               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38342  0062D0  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38343  0062D2  5036               	movf	_ticksAdded,w,c	;volatile
 38344  0062D4  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38345  0062D6  6F74               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 38346  0062D8  5037               	movf	_ticksAdded+1,w,c	;volatile
 38347  0062DA  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38348  0062DC  6F75               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 38349  0062DE  5038               	movf	_ticksAdded+2,w,c	;volatile
 38350  0062E0  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38351  0062E2  6F76               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 38352  0062E4  5039               	movf	_ticksAdded+3,w,c	;volatile
 38353  0062E6  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38354  0062E8  6F77               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 38355  0062EA  0E00               	movlw	0
 38356  0062EC  2574               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 38357  0062EE  0101               	movlb	1	; () banked
 38358  0062F0  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38359  0062F2  0E00               	movlw	0
 38360  0062F4  0100               	movlb	0	; () banked
 38361  0062F6  2175               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 38362  0062F8  0101               	movlb	1	; () banked
 38363  0062FA  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38364  0062FC  0E01               	movlw	1
 38365  0062FE  0100               	movlb	0	; () banked
 38366  006300  2176               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 38367  006302  0101               	movlb	1	; () banked
 38368  006304  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38369  006306  0E00               	movlw	0
 38370  006308  0100               	movlb	0	; () banked
 38371  00630A  2177               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 38372  00630C  0101               	movlb	1	; () banked
 38373  00630E  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38374                           
 38375                           ; BSR set to: 1
 38376                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 38377  006310  C03C  F032         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 38378  006314  C03D  F033         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 38379  006318  6A34               	clrf	_ticksAccounted+2,c	;volatile
 38380  00631A  6A35               	clrf	_ticksAccounted+3,c	;volatile
 38381                           
 38382                           ; BSR set to: 1
 38383                           ;sw_timer.c: 100: ticksAdded = 0;
 38384  00631C  0E00               	movlw	0
 38385  00631E  6E36               	movwf	_ticksAdded,c	;volatile
 38386  006320  0E00               	movlw	0
 38387  006322  6E37               	movwf	_ticksAdded+1,c	;volatile
 38388  006324  0E00               	movlw	0
 38389  006326  6E38               	movwf	_ticksAdded+2,c	;volatile
 38390  006328  0E00               	movlw	0
 38391  00632A  6E39               	movwf	_ticksAdded+3,c	;volatile
 38392                           
 38393                           ; BSR set to: 1
 38394                           ;sw_timer.c: 101: reloadVal = 0;
 38395  00632C  0E00               	movlw	0
 38396  00632E  6E3F               	movwf	_reloadVal+1,c	;volatile
 38397  006330  0E00               	movlw	0
 38398  006332  6E3E               	movwf	_reloadVal,c	;volatile
 38399                           
 38400                           ;sw_timer.c: 102: }
 38401  006334  D030               	goto	l17938
 38402  006336                     l17936:
 38403                           
 38404                           ;sw_timer.c: 103: else;sw_timer.c: 104: {;sw_timer.c: 105: retVal = tmrVal - reloadVal -
      +                           ticksAccounted + ticksAdded;
 38405  006336  503E               	movf	_reloadVal,w,c	;volatile
 38406  006338  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 38407  00633A  0100               	movlb	0	; () banked
 38408  00633C  6F6C               	movwf	??_TMR_GetDeltaTime& (0+255),b
 38409  00633E  503F               	movf	_reloadVal+1,w,c	;volatile
 38410  006340  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 38411  006342  6F6D               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 38412  006344  6B6E               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 38413  006346  6B6F               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 38414  006348  5032               	movf	_ticksAccounted,w,c	;volatile
 38415  00634A  5D6C               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 38416  00634C  6F70               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 38417  00634E  5033               	movf	_ticksAccounted+1,w,c	;volatile
 38418  006350  596D               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 38419  006352  6F71               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 38420  006354  5034               	movf	_ticksAccounted+2,w,c	;volatile
 38421  006356  596E               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 38422  006358  6F72               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 38423  00635A  5035               	movf	_ticksAccounted+3,w,c	;volatile
 38424  00635C  596F               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 38425  00635E  6F73               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 38426  006360  5036               	movf	_ticksAdded,w,c	;volatile
 38427  006362  2570               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 38428  006364  0101               	movlb	1	; () banked
 38429  006366  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 38430  006368  5037               	movf	_ticksAdded+1,w,c	;volatile
 38431  00636A  0100               	movlb	0	; () banked
 38432  00636C  2171               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 38433  00636E  0101               	movlb	1	; () banked
 38434  006370  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 38435  006372  5038               	movf	_ticksAdded+2,w,c	;volatile
 38436  006374  0100               	movlb	0	; () banked
 38437  006376  2172               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 38438  006378  0101               	movlb	1	; () banked
 38439  00637A  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 38440  00637C  5039               	movf	_ticksAdded+3,w,c	;volatile
 38441  00637E  0100               	movlb	0	; () banked
 38442  006380  2173               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 38443  006382  0101               	movlb	1	; () banked
 38444  006384  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 38445                           
 38446                           ;sw_timer.c: 106: ticksAccounted += retVal;
 38447  006386  5112               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 38448  006388  2632               	addwf	_ticksAccounted,f,c	;volatile
 38449  00638A  5113               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 38450  00638C  2233               	addwfc	_ticksAccounted+1,f,c	;volatile
 38451  00638E  5114               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 38452  006390  2234               	addwfc	_ticksAccounted+2,f,c	;volatile
 38453  006392  5115               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 38454  006394  2235               	addwfc	_ticksAccounted+3,f,c	;volatile
 38455  006396                     l17938:
 38456                           
 38457                           ; BSR set to: 1
 38458                           ;sw_timer.c: 107: };sw_timer.c: 109: return retVal;
 38459  006396  C112  F068         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 38460  00639A  C113  F069         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 38461  00639E  C114  F06A         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 38462  0063A2  C115  F06B         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 38463                           
 38464                           ; BSR set to: 1
 38465  0063A6  0012               	return		;funcret
 38466  0063A8                     __end_of_TMR_GetDeltaTime:
 38467                           	opt callstack 0
 38468                           
 38469 ;; *************** function _TMR1_ReadTimer *****************
 38470 ;; Defined at:
 38471 ;;		line 108 in file "mcc_generated_files/tmr1.c"
 38472 ;; Parameters:    Size  Location     Type
 38473 ;;		None
 38474 ;; Auto vars:     Size  Location     Type
 38475 ;;  readVal         2    4[BANK0 ] unsigned int 
 38476 ;;  readValLow      1    7[BANK0 ] unsigned char 
 38477 ;;  readValHigh     1    6[BANK0 ] unsigned char 
 38478 ;; Return value:  Size  Location     Type
 38479 ;;                  2    0[BANK0 ] unsigned int 
 38480 ;; Registers used:
 38481 ;;		wreg, status,2
 38482 ;; Tracked objects:
 38483 ;;		On entry : 0/0
 38484 ;;		On exit  : 0/0
 38485 ;;		Unchanged: 0/0
 38486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38488 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38489 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38491 ;;Total ram usage:        8 bytes
 38492 ;; Hardware stack levels used:    1
 38493 ;; Hardware stack levels required when called:    7
 38494 ;; This function calls:
 38495 ;;		Nothing
 38496 ;; This function is called by:
 38497 ;;		_TMR_GetDeltaTime
 38498 ;;		_TMR_SwapTimer
 38499 ;; This function uses a non-reentrant model
 38500 ;;
 38501                           
 38502                           	psect	text240
 38503  00A38E                     __ptext240:
 38504                           	opt callstack 0
 38505  00A38E                     _TMR1_ReadTimer:
 38506                           	opt callstack 16
 38507                           
 38508                           ;tmr1.c: 110: uint16_t readVal;;tmr1.c: 111: uint8_t readValHigh;;tmr1.c: 112: uint8_t r
      +                          eadValLow;;tmr1.c: 114: T1CONbits.T1RD16 = 1;
 38509                           
 38510                           ; BSR set to: 1
 38511                           ;incstack = 0
 38512  00A38E  82CD               	bsf	4045,1,c	;volatile
 38513                           
 38514                           ;tmr1.c: 116: readValLow = TMR1L;
 38515  00A390  CFCE F067          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 38516                           
 38517                           ;tmr1.c: 117: readValHigh = TMR1H;
 38518  00A394  CFCF F066          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 38519                           
 38520                           ;tmr1.c: 119: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 38521  00A398  0100               	movlb	0	; () banked
 38522  00A39A  5166               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 38523  00A39C  6F62               	movwf	??_TMR1_ReadTimer& (0+255),b
 38524  00A39E  5167               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 38525  00A3A0  6F64               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 38526  00A3A2  C062  F065         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 38527                           
 38528                           ; BSR set to: 0
 38529                           ;tmr1.c: 121: return readVal;
 38530  00A3A6  C064  F060         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 38531  00A3AA  C065  F061         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 38532                           
 38533                           ; BSR set to: 0
 38534  00A3AE  0012               	return		;funcret
 38535  00A3B0                     __end_of_TMR1_ReadTimer:
 38536                           	opt callstack 0
 38537                           
 38538 ;; *************** function _SwTimerSetTimeout *****************
 38539 ;; Defined at:
 38540 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38541 ;; Parameters:    Size  Location     Type
 38542 ;;  timerId         1    wreg     unsigned char 
 38543 ;;  timeout         4   13[BANK0 ] unsigned long 
 38544 ;; Auto vars:     Size  Location     Type
 38545 ;;  timerId         1   21[BANK0 ] unsigned char 
 38546 ;; Return value:  Size  Location     Type
 38547 ;;                  1    wreg      void 
 38548 ;; Registers used:
 38549 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38550 ;; Tracked objects:
 38551 ;;		On entry : 0/0
 38552 ;;		On exit  : 0/0
 38553 ;;		Unchanged: 0/0
 38554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38555 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38557 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38558 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38559 ;;Total ram usage:        9 bytes
 38560 ;; Hardware stack levels used:    1
 38561 ;; Hardware stack levels required when called:    7
 38562 ;; This function calls:
 38563 ;;		Nothing
 38564 ;; This function is called by:
 38565 ;;		_RADIO_Transmit
 38566 ;;		_RADIO_ReceiveStart
 38567 ;;		_LORAWAN_TxDone
 38568 ;;		_LORAWAN_RxTimeout
 38569 ;;		_StartReTxTimer
 38570 ;;		_DutyCycleCallback
 38571 ;;		_LORAWAN_Join
 38572 ;;		_LORAWAN_LinkCheckConfigure
 38573 ;;		_LORAWAN_LinkCheckCallback
 38574 ;;		_UpdateRetransmissionAckTimeoutState
 38575 ;;		_UpdateJoinSuccessState
 38576 ;; This function uses a non-reentrant model
 38577 ;;
 38578                           
 38579                           	psect	text241
 38580  009984                     __ptext241:
 38581                           	opt callstack 0
 38582  009984                     _SwTimerSetTimeout:
 38583                           	opt callstack 19
 38584                           
 38585                           ; BSR set to: 0
 38586                           ;incstack = 0
 38587                           ;SwTimerSetTimeout@timerId stored from wreg
 38588  009984  0100               	movlb	0	; () banked
 38589  009986  6F75               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 38590                           
 38591                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 38592  009988  9EF2               	bcf	4082,7,c	;volatile
 38593                           
 38594                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 38595  00998A  0EE0               	movlw	224
 38596  00998C  0100               	movlb	0	; () banked
 38597  00998E  256D               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 38598  009990  6F71               	movwf	??_SwTimerSetTimeout& (0+255),b
 38599  009992  0EFF               	movlw	255
 38600  009994  216E               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 38601  009996  6F72               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 38602  009998  0EFF               	movlw	255
 38603  00999A  216F               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 38604  00999C  6F73               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 38605  00999E  0EFF               	movlw	255
 38606  0099A0  2170               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 38607  0099A2  6F74               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 38608  0099A4  5175               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 38609  0099A6  0D08               	mullw	8
 38610  0099A8  0E00               	movlw	low _swTimers
 38611  0099AA  24F3               	addwf	prodl,w,c
 38612  0099AC  6ED9               	movwf	fsr2l,c
 38613  0099AE  0E03               	movlw	high _swTimers
 38614  0099B0  20F4               	addwfc	prodh,w,c
 38615  0099B2  6EDA               	movwf	fsr2h,c
 38616  0099B4  C071  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 38617  0099B8  C072  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 38618  0099BC  C073  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 38619  0099C0  C074  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 38620                           
 38621                           ; BSR set to: 0
 38622                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 38623  0099C4  8EF2               	bsf	4082,7,c	;volatile
 38624                           
 38625                           ; BSR set to: 0
 38626  0099C6  0012               	return		;funcret
 38627  0099C8                     __end_of_SwTimerSetTimeout:
 38628                           	opt callstack 0
 38629                           
 38630 ;; *************** function _InitDefault868Channels *****************
 38631 ;; Defined at:
 38632 ;;		line 980 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38633 ;; Parameters:    Size  Location     Type
 38634 ;;		None
 38635 ;; Auto vars:     Size  Location     Type
 38636 ;;  i               1   11[BANK0 ] unsigned char 
 38637 ;; Return value:  Size  Location     Type
 38638 ;;                  1    wreg      void 
 38639 ;; Registers used:
 38640 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38641 ;; Tracked objects:
 38642 ;;		On entry : 0/0
 38643 ;;		On exit  : 0/0
 38644 ;;		Unchanged: 0/0
 38645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38647 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38649 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38650 ;;Total ram usage:        1 bytes
 38651 ;; Hardware stack levels used:    1
 38652 ;; Hardware stack levels required when called:    8
 38653 ;; This function calls:
 38654 ;;		_memcpy
 38655 ;;		_memset
 38656 ;; This function is called by:
 38657 ;;		_LORAWAN_Reset
 38658 ;; This function uses a non-reentrant model
 38659 ;;
 38660                           
 38661                           	psect	text242
 38662  008A14                     __ptext242:
 38663                           	opt callstack 0
 38664  008A14                     _InitDefault868Channels:
 38665                           	opt callstack 21
 38666                           
 38667                           ;lorawan_eu.c: 982: uint8_t i;;lorawan_eu.c: 984: memset (Channels, 0, sizeof(Channels) 
      +                          );
 38668                           
 38669                           ; BSR set to: 0
 38670                           ;incstack = 0
 38671  008A14  0E14               	movlw	low _Channels
 38672  008A16  0100               	movlb	0	; () banked
 38673  008A18  6F60               	movwf	memset@p1& (0+255),b
 38674  008A1A  0E04               	movlw	high _Channels
 38675  008A1C  6F61               	movwf	(memset@p1+1)& (0+255),b
 38676  008A1E  0E00               	movlw	0
 38677  008A20  6F63               	movwf	(memset@c+1)& (0+255),b
 38678  008A22  0E00               	movlw	0
 38679  008A24  6F62               	movwf	memset@c& (0+255),b
 38680  008A26  0E00               	movlw	0
 38681  008A28  6F65               	movwf	(memset@n+1)& (0+255),b
 38682  008A2A  0EE0               	movlw	224
 38683  008A2C  6F64               	movwf	memset@n& (0+255),b
 38684  008A2E  EC0D  F050         	call	_memset	;wreg free
 38685                           
 38686                           ;lorawan_eu.c: 985: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 38687  008A32  0E14               	movlw	low _Channels
 38688  008A34  0100               	movlb	0	; () banked
 38689  008A36  6F60               	movwf	memcpy@d1& (0+255),b
 38690  008A38  0E04               	movlw	high _Channels
 38691  008A3A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38692  008A3C  0E48               	movlw	low _DefaultChannels868
 38693  008A3E  6F62               	movwf	memcpy@s1& (0+255),b
 38694  008A40  0EFF               	movlw	high _DefaultChannels868
 38695  008A42  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38696  008A44  0E00               	movlw	0
 38697  008A46  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38698  008A48  0E38               	movlw	56
 38699  008A4A  6F64               	movwf	memcpy@n& (0+255),b
 38700  008A4C  EC2F  F048         	call	_memcpy	;wreg free
 38701                           
 38702                           ;lorawan_eu.c: 986: for (i = 3; i < 16; i++)
 38703  008A50  0E03               	movlw	3
 38704  008A52  0100               	movlb	0	; () banked
 38705  008A54  6F6B               	movwf	InitDefault868Channels@i& (0+255),b
 38706  008A56                     l21402:
 38707                           
 38708                           ; BSR set to: 0
 38709                           ;lorawan_eu.c: 987: {;lorawan_eu.c: 990: Channels[i].dutyCycle = (65535U);
 38710  008A56  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 38711  008A58  0D0E               	mullw	14
 38712  008A5A  0E1A               	movlw	low (_Channels+6)
 38713  008A5C  24F3               	addwf	prodl,w,c
 38714  008A5E  6ED9               	movwf	fsr2l,c
 38715  008A60  0E04               	movlw	high (_Channels+6)
 38716  008A62  20F4               	addwfc	prodh,w,c
 38717  008A64  6EDA               	movwf	fsr2h,c
 38718  008A66  0EFF               	movlw	255
 38719  008A68  6EDE               	movwf	postinc2,c
 38720  008A6A  0EFF               	movlw	255
 38721  008A6C  6EDD               	movwf	postdec2,c
 38722                           
 38723                           ;lorawan_eu.c: 991: Channels[i].dataRange.value = (255);
 38724  008A6E  516B               	movf	InitDefault868Channels@i& (0+255),w,b
 38725  008A70  0D0E               	mullw	14
 38726  008A72  0E19               	movlw	low (_Channels+5)
 38727  008A74  24F3               	addwf	prodl,w,c
 38728  008A76  6ED9               	movwf	fsr2l,c
 38729  008A78  0E04               	movlw	high (_Channels+5)
 38730  008A7A  20F4               	addwfc	prodh,w,c
 38731  008A7C  6EDA               	movwf	fsr2h,c
 38732  008A7E  0EFF               	movlw	255
 38733  008A80  6EDF               	movwf	indf2,c
 38734                           
 38735                           ; BSR set to: 0
 38736  008A82  2B6B               	incf	InitDefault868Channels@i& (0+255),f,b
 38737                           
 38738                           ; BSR set to: 0
 38739  008A84  0E0F               	movlw	15
 38740  008A86  656B               	cpfsgt	InitDefault868Channels@i& (0+255),b
 38741  008A88  D7E6               	goto	l21402
 38742  008A8A  0012               	return	
 38743  008A8C                     __end_of_InitDefault868Channels:
 38744                           	opt callstack 0
 38745                           
 38746 ;; *************** function _InitDefault433Channels *****************
 38747 ;; Defined at:
 38748 ;;		line 995 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 38749 ;; Parameters:    Size  Location     Type
 38750 ;;		None
 38751 ;; Auto vars:     Size  Location     Type
 38752 ;;  i               1   11[BANK0 ] unsigned char 
 38753 ;; Return value:  Size  Location     Type
 38754 ;;                  1    wreg      void 
 38755 ;; Registers used:
 38756 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38757 ;; Tracked objects:
 38758 ;;		On entry : 0/0
 38759 ;;		On exit  : 0/0
 38760 ;;		Unchanged: 0/0
 38761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38765 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38766 ;;Total ram usage:        1 bytes
 38767 ;; Hardware stack levels used:    1
 38768 ;; Hardware stack levels required when called:    8
 38769 ;; This function calls:
 38770 ;;		_memcpy
 38771 ;;		_memset
 38772 ;; This function is called by:
 38773 ;;		_LORAWAN_Reset
 38774 ;; This function uses a non-reentrant model
 38775 ;;
 38776                           
 38777                           	psect	text243
 38778  008A8C                     __ptext243:
 38779                           	opt callstack 0
 38780  008A8C                     _InitDefault433Channels:
 38781                           	opt callstack 21
 38782                           
 38783                           ;lorawan_eu.c: 997: uint8_t i;;lorawan_eu.c: 999: memset (Channels, 0, sizeof(Channels) 
      +                          );
 38784                           
 38785                           ; BSR set to: 0
 38786                           ;incstack = 0
 38787  008A8C  0E14               	movlw	low _Channels
 38788  008A8E  0100               	movlb	0	; () banked
 38789  008A90  6F60               	movwf	memset@p1& (0+255),b
 38790  008A92  0E04               	movlw	high _Channels
 38791  008A94  6F61               	movwf	(memset@p1+1)& (0+255),b
 38792  008A96  0E00               	movlw	0
 38793  008A98  6F63               	movwf	(memset@c+1)& (0+255),b
 38794  008A9A  0E00               	movlw	0
 38795  008A9C  6F62               	movwf	memset@c& (0+255),b
 38796  008A9E  0E00               	movlw	0
 38797  008AA0  6F65               	movwf	(memset@n+1)& (0+255),b
 38798  008AA2  0EE0               	movlw	224
 38799  008AA4  6F64               	movwf	memset@n& (0+255),b
 38800  008AA6  EC0D  F050         	call	_memset	;wreg free
 38801                           
 38802                           ;lorawan_eu.c: 1000: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 38803  008AAA  0E14               	movlw	low _Channels
 38804  008AAC  0100               	movlb	0	; () banked
 38805  008AAE  6F60               	movwf	memcpy@d1& (0+255),b
 38806  008AB0  0E04               	movlw	high _Channels
 38807  008AB2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38808  008AB4  0E80               	movlw	low _DefaultChannels433
 38809  008AB6  6F62               	movwf	memcpy@s1& (0+255),b
 38810  008AB8  0EFF               	movlw	high _DefaultChannels433
 38811  008ABA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38812  008ABC  0E00               	movlw	0
 38813  008ABE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38814  008AC0  0E2A               	movlw	42
 38815  008AC2  6F64               	movwf	memcpy@n& (0+255),b
 38816  008AC4  EC2F  F048         	call	_memcpy	;wreg free
 38817                           
 38818                           ;lorawan_eu.c: 1001: for (i = 3; i < 16; i++)
 38819  008AC8  0E03               	movlw	3
 38820  008ACA  0100               	movlb	0	; () banked
 38821  008ACC  6F6B               	movwf	InitDefault433Channels@i& (0+255),b
 38822  008ACE                     l21418:
 38823                           
 38824                           ; BSR set to: 0
 38825                           ;lorawan_eu.c: 1002: {;lorawan_eu.c: 1005: Channels[i].dutyCycle = (65535U);
 38826  008ACE  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 38827  008AD0  0D0E               	mullw	14
 38828  008AD2  0E1A               	movlw	low (_Channels+6)
 38829  008AD4  24F3               	addwf	prodl,w,c
 38830  008AD6  6ED9               	movwf	fsr2l,c
 38831  008AD8  0E04               	movlw	high (_Channels+6)
 38832  008ADA  20F4               	addwfc	prodh,w,c
 38833  008ADC  6EDA               	movwf	fsr2h,c
 38834  008ADE  0EFF               	movlw	255
 38835  008AE0  6EDE               	movwf	postinc2,c
 38836  008AE2  0EFF               	movlw	255
 38837  008AE4  6EDD               	movwf	postdec2,c
 38838                           
 38839                           ;lorawan_eu.c: 1006: Channels[i].dataRange.value = (255);
 38840  008AE6  516B               	movf	InitDefault433Channels@i& (0+255),w,b
 38841  008AE8  0D0E               	mullw	14
 38842  008AEA  0E19               	movlw	low (_Channels+5)
 38843  008AEC  24F3               	addwf	prodl,w,c
 38844  008AEE  6ED9               	movwf	fsr2l,c
 38845  008AF0  0E04               	movlw	high (_Channels+5)
 38846  008AF2  20F4               	addwfc	prodh,w,c
 38847  008AF4  6EDA               	movwf	fsr2h,c
 38848  008AF6  0EFF               	movlw	255
 38849  008AF8  6EDF               	movwf	indf2,c
 38850                           
 38851                           ; BSR set to: 0
 38852  008AFA  2B6B               	incf	InitDefault433Channels@i& (0+255),f,b
 38853                           
 38854                           ; BSR set to: 0
 38855  008AFC  0E0F               	movlw	15
 38856  008AFE  656B               	cpfsgt	InitDefault433Channels@i& (0+255),b
 38857  008B00  D7E6               	goto	l21418
 38858  008B02  0012               	return	
 38859  008B04                     __end_of_InitDefault433Channels:
 38860                           	opt callstack 0
 38861                           
 38862 ;; *************** function _memset *****************
 38863 ;; Defined at:
 38864 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memset.c"
 38865 ;; Parameters:    Size  Location     Type
 38866 ;;  p1              2    0[BANK0 ] PTR void 
 38867 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 38868 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 38869 ;;  c               2    2[BANK0 ] int 
 38870 ;;  n               2    4[BANK0 ] unsigned int 
 38871 ;; Auto vars:     Size  Location     Type
 38872 ;;  p               2    6[BANK0 ] PTR unsigned char 
 38873 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), macBuffer(271), Channels(224), 
 38874 ;;		 -> loRa.activationParameters(105), loRa(245), GenerateSubkey@l(16), AESCmac@x(16), 
 38875 ;; Return value:  Size  Location     Type
 38876 ;;                  2    0[BANK0 ] PTR void 
 38877 ;; Registers used:
 38878 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38879 ;; Tracked objects:
 38880 ;;		On entry : 0/0
 38881 ;;		On exit  : 0/0
 38882 ;;		Unchanged: 0/0
 38883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38884 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38887 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38888 ;;Total ram usage:        8 bytes
 38889 ;; Hardware stack levels used:    1
 38890 ;; Hardware stack levels required when called:    7
 38891 ;; This function calls:
 38892 ;;		Nothing
 38893 ;; This function is called by:
 38894 ;;		_AESCmac
 38895 ;;		_GenerateSubkey
 38896 ;;		_LORAWAN_Reset
 38897 ;;		_InitDefault868Channels
 38898 ;;		_InitDefault433Channels
 38899 ;;		_AssemblePacket
 38900 ;;		_PrepareJoinRequestFrame
 38901 ;;		_PrepareSessionKeys
 38902 ;;		_AssembleEncryptionBlock
 38903 ;; This function uses a non-reentrant model
 38904 ;;
 38905                           
 38906                           	psect	text244
 38907  00A01A                     __ptext244:
 38908                           	opt callstack 0
 38909  00A01A                     _memset:
 38910                           	opt callstack 19
 38911                           
 38912                           ; BSR set to: 0
 38913                           ;incstack = 0
 38914  00A01A  C060  F066         	movff	memset@p1,memset@p
 38915  00A01E  C061  F067         	movff	memset@p1+1,memset@p+1
 38916  00A022  D008               	goto	l18110
 38917  00A024                     l18106:
 38918                           
 38919                           ; BSR set to: 0
 38920  00A024  C066  FFD9         	movff	memset@p,fsr2l
 38921  00A028  C067  FFDA         	movff	memset@p+1,fsr2h
 38922  00A02C  C062  FFDF         	movff	memset@c,indf2
 38923                           
 38924                           ; BSR set to: 0
 38925  00A030  4B66               	infsnz	memset@p& (0+255),f,b
 38926  00A032  2B67               	incf	(memset@p+1)& (0+255),f,b
 38927  00A034                     l18110:
 38928  00A034  0100               	movlb	0	; () banked
 38929  00A036  0764               	decf	memset@n& (0+255),f,b
 38930  00A038  A0D8               	btfss	status,0,c
 38931  00A03A  0765               	decf	(memset@n+1)& (0+255),f,b
 38932  00A03C  2964               	incf	memset@n& (0+255),w,b
 38933  00A03E  E1F2               	bnz	l18106
 38934  00A040  2965               	incf	(memset@n+1)& (0+255),w,b
 38935  00A042  B4D8               	btfsc	status,2,c
 38936  00A044  0012               	return	
 38937  00A046  D7EE               	goto	l18106
 38938  00A048                     __end_of_memset:
 38939                           	opt callstack 0
 38940                           
 38941 ;; *************** function _memcpy *****************
 38942 ;; Defined at:
 38943 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\memcpy.c"
 38944 ;; Parameters:    Size  Location     Type
 38945 ;;  d1              2    0[BANK0 ] PTR void 
 38946 ;;		 -> sensorsString(40), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 38947 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESEncodeLoRa@useKey(16), 
 38948 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 38949 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 38950 ;;  s1              2    2[BANK0 ] PTR const void 
 38951 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), clearString(40), sensorsString(40), 
 38952 ;;		 -> deviceEui(8), appEui(8), appKey(16), AssembleEncryptionBlock@frameCounter(4), 
 38953 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), 
 38954 ;;		 -> LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessio
      +nKey(16), loRa.activationParameters.networkSessionKey(16), 
 38955 ;;		 -> loRa.activationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), loRa.activationParamete
      +rs.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), 
 38956 ;;		 -> loRa.activationParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), FskSyncWo
      +rdBuff(3), UpdateCfList@joinAccept(2), 
 38957 ;;		 -> loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), 
 38958 ;;		 -> loRa(245), DefaultChannels433(42), DefaultChannels868(56), RadioConfiguration.syncWord(8), 
 38959 ;;		 -> RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 38960 ;;  n               2    4[BANK0 ] unsigned int 
 38961 ;; Auto vars:     Size  Location     Type
 38962 ;;  s               2    9[BANK0 ] PTR const unsigned char 
 38963 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), clearString(40), sensorsString(40), 
 38964 ;;		 -> deviceEui(8), appEui(8), appKey(16), AssembleEncryptionBlock@frameCounter(4), 
 38965 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequestFrame@mic(4), loRa.fCntUp.valueLow(2), aesBuffer(16), 
 38966 ;;		 -> LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), loRa.activationParameters.applicationSessio
      +nKey(16), loRa.activationParameters.networkSessionKey(16), 
 38967 ;;		 -> loRa.activationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), loRa.activationParamete
      +rs.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), 
 38968 ;;		 -> loRa.activationParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), FskSyncWo
      +rdBuff(3), UpdateCfList@joinAccept(2), 
 38969 ;;		 -> loRa.activationParameters(105), loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), 
 38970 ;;		 -> loRa(245), DefaultChannels433(42), DefaultChannels868(56), RadioConfiguration.syncWord(8), 
 38971 ;;		 -> RadioConfiguration(54), AESCmac@y(16), NULL(0), 
 38972 ;;  d               2    7[BANK0 ] PTR unsigned char 
 38973 ;;		 -> sensorsString(40), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 38974 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESEncodeLoRa@useKey(16), 
 38975 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 38976 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), AESCmac@x(16), 
 38977 ;;  tmp             1    6[BANK0 ] unsigned char 
 38978 ;; Return value:  Size  Location     Type
 38979 ;;                  2    0[BANK0 ] PTR void 
 38980 ;; Registers used:
 38981 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 38982 ;; Tracked objects:
 38983 ;;		On entry : 0/0
 38984 ;;		On exit  : 0/0
 38985 ;;		Unchanged: 0/0
 38986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38987 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38988 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38990 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38991 ;;Total ram usage:       11 bytes
 38992 ;; Hardware stack levels used:    1
 38993 ;; Hardware stack levels required when called:    7
 38994 ;; This function calls:
 38995 ;;		Nothing
 38996 ;; This function is called by:
 38997 ;;		_AESCmac
 38998 ;;		_RADIO_SetFSKSyncWord
 38999 ;;		_UpdateCfList
 39000 ;;		_InitDefault868Channels
 39001 ;;		_InitDefault433Channels
 39002 ;;		_AESEncodeLoRa
 39003 ;;		_LORAWAN_SetDeviceEui
 39004 ;;		_LORAWAN_SetApplicationEui
 39005 ;;		_LORAWAN_SetApplicationKey
 39006 ;;		_LORAWAN_RxDone
 39007 ;;		_AssemblePacket
 39008 ;;		_PrepareJoinRequestFrame
 39009 ;;		_PrepareSessionKeys
 39010 ;;		_AssembleEncryptionBlock
 39011 ;;		_ExtractMic
 39012 ;;		_ComputeMic
 39013 ;;		_acuadoriApp
 39014 ;;		_RADIO_GetData
 39015 ;;		_RADIO_GetFSKSyncWord
 39016 ;;		_LORAWAN_SetMcastNetworkSessionKey
 39017 ;;		_LORAWAN_SetMcastApplicationSessionKey
 39018 ;;		_LORAWAN_GetMcastApplicationSessionKey
 39019 ;;		_LORAWAN_GetMcastNetworkSessionKey
 39020 ;;		_LORAWAN_GetDeviceEui
 39021 ;;		_LORAWAN_GetApplicationEui
 39022 ;;		_LORAWAN_SetNetworkSessionKey
 39023 ;;		_LORAWAN_GetNetworkSessionKey
 39024 ;;		_LORAWAN_SetApplicationSessionKey
 39025 ;;		_LORAWAN_GetApplicationSessionKey
 39026 ;;		_LORAWAN_GetApplicationKey
 39027 ;; This function uses a non-reentrant model
 39028 ;;
 39029                           
 39030                           	psect	text245
 39031  00905E                     __ptext245:
 39032                           	opt callstack 0
 39033  00905E                     _memcpy:
 39034                           	opt callstack 16
 39035                           
 39036                           ; BSR set to: 0
 39037                           ;incstack = 0
 39038  00905E  C062  F069         	movff	memcpy@s1,memcpy@s
 39039  009062  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
 39040  009066  C060  F067         	movff	memcpy@d1,memcpy@d
 39041  00906A  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
 39042  00906E  D01D               	goto	l17902
 39043  009070                     l17894:
 39044                           
 39045                           ; BSR set to: 0
 39046  009070  C069  FFF6         	movff	memcpy@s,tblptrl
 39047  009074  C06A  FFF7         	movff	memcpy@s+1,tblptrh
 39048  009078  0E00               	movlw	low (__mediumconst shr (0+16))
 39049  00907A  6EF8               	movwf	tblptru,c
 39050  00907C  0E0F               	movlw	(high __ramtop+-1)
 39051  00907E  64F7               	cpfsgt	tblptrh,c
 39052  009080  D003               	bra	u18757
 39053  009082  0008               	tblrd		*
 39054  009084  50F5               	movf	tablat,w,c
 39055  009086  D005               	bra	u18750
 39056  009088                     u18757:
 39057  009088  CFF6 FFE9          	movff	tblptrl,fsr0l
 39058  00908C  CFF7 FFEA          	movff	tblptrh,fsr0h
 39059  009090  50EF               	movf	indf0,w,c
 39060  009092                     u18750:
 39061  009092  0100               	movlb	0	; () banked
 39062  009094  6F66               	movwf	memcpy@tmp& (0+255),b
 39063                           
 39064                           ; BSR set to: 0
 39065  009096  4B69               	infsnz	memcpy@s& (0+255),f,b
 39066  009098  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
 39067                           
 39068                           ; BSR set to: 0
 39069  00909A  C067  FFD9         	movff	memcpy@d,fsr2l
 39070  00909E  C068  FFDA         	movff	memcpy@d+1,fsr2h
 39071  0090A2  C066  FFDF         	movff	memcpy@tmp,indf2
 39072                           
 39073                           ; BSR set to: 0
 39074  0090A6  4B67               	infsnz	memcpy@d& (0+255),f,b
 39075  0090A8  2B68               	incf	(memcpy@d+1)& (0+255),f,b
 39076  0090AA                     l17902:
 39077  0090AA  0100               	movlb	0	; () banked
 39078  0090AC  0764               	decf	memcpy@n& (0+255),f,b
 39079  0090AE  A0D8               	btfss	status,0,c
 39080  0090B0  0765               	decf	(memcpy@n+1)& (0+255),f,b
 39081  0090B2  2964               	incf	memcpy@n& (0+255),w,b
 39082  0090B4  E1DD               	bnz	l17894
 39083  0090B6  2965               	incf	(memcpy@n+1)& (0+255),w,b
 39084  0090B8  B4D8               	btfsc	status,2,c
 39085  0090BA  0012               	return	
 39086  0090BC  D7D9               	goto	l17894
 39087  0090BE                     __end_of_memcpy:
 39088                           	opt callstack 0
 39089                           
 39090 ;; *************** function _CreateAllSoftwareTimers *****************
 39091 ;; Defined at:
 39092 ;;		line 938 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 39093 ;; Parameters:    Size  Location     Type
 39094 ;;		None
 39095 ;; Auto vars:     Size  Location     Type
 39096 ;;		None
 39097 ;; Return value:  Size  Location     Type
 39098 ;;                  1    wreg      void 
 39099 ;; Registers used:
 39100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39101 ;; Tracked objects:
 39102 ;;		On entry : 0/0
 39103 ;;		On exit  : 0/0
 39104 ;;		Unchanged: 0/0
 39105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39110 ;;Total ram usage:        0 bytes
 39111 ;; Hardware stack levels used:    1
 39112 ;; Hardware stack levels required when called:    8
 39113 ;; This function calls:
 39114 ;;		_SwTimerCreate
 39115 ;; This function is called by:
 39116 ;;		_LORAWAN_Init
 39117 ;; This function uses a non-reentrant model
 39118 ;;
 39119                           
 39120                           	psect	text246
 39121  0094D4                     __ptext246:
 39122                           	opt callstack 0
 39123  0094D4                     _CreateAllSoftwareTimers:
 39124                           	opt callstack 21
 39125                           
 39126                           ;lorawan_eu.c: 940: loRa.joinAccept1TimerId = SwTimerCreate();
 39127                           
 39128                           ; BSR set to: 0
 39129                           ;incstack = 0
 39130  0094D4  EC82  F045         	call	_SwTimerCreate	;wreg free
 39131  0094D8  0102               	movlb	2	; () banked
 39132  0094DA  6FE7               	movwf	(_loRa+226)& (0+255),b
 39133                           
 39134                           ;lorawan_eu.c: 941: loRa.joinAccept2TimerId = SwTimerCreate();
 39135  0094DC  EC82  F045         	call	_SwTimerCreate	;wreg free
 39136  0094E0  0102               	movlb	2	; () banked
 39137  0094E2  6FE8               	movwf	(_loRa+227)& (0+255),b
 39138                           
 39139                           ;lorawan_eu.c: 942: loRa.receiveWindow1TimerId = SwTimerCreate();
 39140  0094E4  EC82  F045         	call	_SwTimerCreate	;wreg free
 39141  0094E8  0102               	movlb	2	; () banked
 39142  0094EA  6FE9               	movwf	(_loRa+228)& (0+255),b
 39143                           
 39144                           ;lorawan_eu.c: 943: loRa.receiveWindow2TimerId = SwTimerCreate();
 39145  0094EC  EC82  F045         	call	_SwTimerCreate	;wreg free
 39146  0094F0  0102               	movlb	2	; () banked
 39147  0094F2  6FEA               	movwf	(_loRa+229)& (0+255),b
 39148                           
 39149                           ;lorawan_eu.c: 944: loRa.linkCheckTimerId = SwTimerCreate();
 39150  0094F4  EC82  F045         	call	_SwTimerCreate	;wreg free
 39151  0094F8  0102               	movlb	2	; () banked
 39152  0094FA  6FEC               	movwf	(_loRa+231)& (0+255),b
 39153                           
 39154                           ;lorawan_eu.c: 945: loRa.ackTimeoutTimerId = SwTimerCreate();
 39155  0094FC  EC82  F045         	call	_SwTimerCreate	;wreg free
 39156  009500  0102               	movlb	2	; () banked
 39157  009502  6FED               	movwf	(_loRa+232)& (0+255),b
 39158                           
 39159                           ;lorawan_eu.c: 946: loRa.automaticReplyTimerId = SwTimerCreate();
 39160  009504  EC82  F045         	call	_SwTimerCreate	;wreg free
 39161  009508  0102               	movlb	2	; () banked
 39162  00950A  6FEB               	movwf	(_loRa+230)& (0+255),b
 39163                           
 39164                           ;lorawan_eu.c: 947: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 39165  00950C  EC82  F045         	call	_SwTimerCreate	;wreg free
 39166  009510  0102               	movlb	2	; () banked
 39167  009512  6FEF               	movwf	(_loRa+234)& (0+255),b
 39168                           
 39169                           ;lorawan_eu.c: 948: loRa.abpJoinTimerId = SwTimerCreate();
 39170  009514  EC82  F045         	call	_SwTimerCreate	;wreg free
 39171  009518  0102               	movlb	2	; () banked
 39172  00951A  6FF8               	movwf	(_loRa+243)& (0+255),b
 39173                           
 39174                           ;lorawan_eu.c: 949: loRa.dutyCycleTimerId = SwTimerCreate();
 39175  00951C  EC82  F045         	call	_SwTimerCreate	;wreg free
 39176  009520  0102               	movlb	2	; () banked
 39177  009522  6FEE               	movwf	(_loRa+233)& (0+255),b
 39178                           
 39179                           ; BSR set to: 2
 39180  009524  0012               	return		;funcret
 39181  009526                     __end_of_CreateAllSoftwareTimers:
 39182                           	opt callstack 0
 39183                           
 39184 ;; *************** function _SwTimerCreate *****************
 39185 ;; Defined at:
 39186 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39187 ;; Parameters:    Size  Location     Type
 39188 ;;		None
 39189 ;; Auto vars:     Size  Location     Type
 39190 ;;  retVal          1    0[BANK0 ] unsigned char 
 39191 ;; Return value:  Size  Location     Type
 39192 ;;                  1    wreg      unsigned char 
 39193 ;; Registers used:
 39194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39195 ;; Tracked objects:
 39196 ;;		On entry : 0/0
 39197 ;;		On exit  : 0/0
 39198 ;;		Unchanged: 0/0
 39199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39203 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39204 ;;Total ram usage:        1 bytes
 39205 ;; Hardware stack levels used:    1
 39206 ;; Hardware stack levels required when called:    7
 39207 ;; This function calls:
 39208 ;;		Nothing
 39209 ;; This function is called by:
 39210 ;;		_RADIO_Init
 39211 ;;		_CreateAllSoftwareTimers
 39212 ;; This function uses a non-reentrant model
 39213 ;;
 39214                           
 39215                           	psect	text247
 39216  008B04                     __ptext247:
 39217                           	opt callstack 0
 39218  008B04                     _SwTimerCreate:
 39219                           	opt callstack 21
 39220                           
 39221                           ;sw_timer.c: 156: uint8_t retVal;;sw_timer.c: 157: if (allocatedTimers < 20)
 39222                           
 39223                           ; BSR set to: 2
 39224                           ;incstack = 0
 39225  008B04  0E14               	movlw	20
 39226  008B06  0101               	movlb	1	; () banked
 39227  008B08  6128               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 39228  008B0A  D034               	goto	l242
 39229                           
 39230                           ; BSR set to: 1
 39231                           ;sw_timer.c: 158: {;sw_timer.c: 159: (INTCONbits.GIE = 0);
 39232  008B0C  9EF2               	bcf	4082,7,c	;volatile
 39233                           
 39234                           ;sw_timer.c: 160: retVal = allocatedTimers;
 39235  008B0E  C128  F060         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 39236                           
 39237                           ; BSR set to: 1
 39238                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 39239  008B12  0100               	movlb	0	; () banked
 39240  008B14  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39241  008B16  0D08               	mullw	8
 39242  008B18  0E04               	movlw	low (_swTimers+4)
 39243  008B1A  24F3               	addwf	prodl,w,c
 39244  008B1C  6ED9               	movwf	fsr2l,c
 39245  008B1E  0E03               	movlw	high (_swTimers+4)
 39246  008B20  20F4               	addwfc	prodh,w,c
 39247  008B22  6EDA               	movwf	fsr2h,c
 39248  008B24  0E00               	movlw	0
 39249  008B26  6EDF               	movwf	indf2,c
 39250                           
 39251                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 39252  008B28  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39253  008B2A  0D08               	mullw	8
 39254  008B2C  0E00               	movlw	low _swTimers
 39255  008B2E  24F3               	addwf	prodl,w,c
 39256  008B30  6ED9               	movwf	fsr2l,c
 39257  008B32  0E03               	movlw	high _swTimers
 39258  008B34  20F4               	addwfc	prodh,w,c
 39259  008B36  6EDA               	movwf	fsr2h,c
 39260  008B38  6ADE               	clrf	postinc2,c
 39261  008B3A  6ADE               	clrf	postinc2,c
 39262  008B3C  6ADE               	clrf	postinc2,c
 39263  008B3E  6ADD               	clrf	postdec2,c
 39264                           
 39265                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 39266  008B40  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39267  008B42  0D08               	mullw	8
 39268  008B44  0E05               	movlw	low (_swTimers+5)
 39269  008B46  24F3               	addwf	prodl,w,c
 39270  008B48  6ED9               	movwf	fsr2l,c
 39271  008B4A  0E03               	movlw	high (_swTimers+5)
 39272  008B4C  20F4               	addwfc	prodh,w,c
 39273  008B4E  6EDA               	movwf	fsr2h,c
 39274  008B50  0E00               	movlw	0
 39275  008B52  6EDF               	movwf	indf2,c
 39276                           
 39277                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 39278  008B54  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39279  008B56  0D08               	mullw	8
 39280  008B58  0E06               	movlw	low (_swTimers+6)
 39281  008B5A  24F3               	addwf	prodl,w,c
 39282  008B5C  6ED9               	movwf	fsr2l,c
 39283  008B5E  0E03               	movlw	high (_swTimers+6)
 39284  008B60  20F4               	addwfc	prodh,w,c
 39285  008B62  6EDA               	movwf	fsr2h,c
 39286  008B64  0E00               	movlw	0
 39287  008B66  6EDE               	movwf	postinc2,c
 39288  008B68  0E00               	movlw	0
 39289  008B6A  6EDD               	movwf	postdec2,c
 39290                           
 39291                           ; BSR set to: 0
 39292                           ;sw_timer.c: 165: allocatedTimers++;
 39293  008B6C  0101               	movlb	1	; () banked
 39294  008B6E  2B28               	incf	_allocatedTimers& (0+255),f,b	;volatile
 39295                           
 39296                           ; BSR set to: 1
 39297                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 39298  008B70  8EF2               	bsf	4082,7,c	;volatile
 39299                           
 39300                           ;sw_timer.c: 167: }
 39301  008B72  D001               	goto	l15348
 39302  008B74                     l242:
 39303  008B74  D7FF               	goto	l242
 39304  008B76                     l15348:
 39305                           
 39306                           ; BSR set to: 1
 39307                           ;sw_timer.c: 175: };sw_timer.c: 176: };sw_timer.c: 177: return retVal;
 39308  008B76  0100               	movlb	0	; () banked
 39309  008B78  5160               	movf	SwTimerCreate@retVal& (0+255),w,b
 39310                           
 39311                           ; BSR set to: 0
 39312  008B7A  0012               	return		;funcret
 39313  008B7C                     __end_of_SwTimerCreate:
 39314                           	opt callstack 0
 39315                           
 39316 ;; *************** function _GPIOInit *****************
 39317 ;; Defined at:
 39318 ;;		line 319 in file "rn2483APP.c"
 39319 ;; Parameters:    Size  Location     Type
 39320 ;;		None
 39321 ;; Auto vars:     Size  Location     Type
 39322 ;;		None
 39323 ;; Return value:  Size  Location     Type
 39324 ;;                  1    wreg      void 
 39325 ;; Registers used:
 39326 ;;		wreg, status,2, status,0, cstack
 39327 ;; Tracked objects:
 39328 ;;		On entry : 0/0
 39329 ;;		On exit  : 0/0
 39330 ;;		Unchanged: 0/0
 39331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39336 ;;Total ram usage:        0 bytes
 39337 ;; Hardware stack levels used:    1
 39338 ;; Hardware stack levels required when called:    8
 39339 ;; This function calls:
 39340 ;;		_GPIOAnalogMode
 39341 ;;		_GPIODigitalWrite
 39342 ;;		_GPIOSet
 39343 ;; This function is called by:
 39344 ;;		_main
 39345 ;; This function uses a non-reentrant model
 39346 ;;
 39347                           
 39348                           	psect	text248
 39349  005CC6                     __ptext248:
 39350                           	opt callstack 0
 39351  005CC6                     _GPIOInit:
 39352                           	opt callstack 22
 39353                           
 39354                           ;rn2483APP.c: 332: GPIOSet(0x00, 0);
 39355                           
 39356                           ; BSR set to: 0
 39357                           ;incstack = 0
 39358  005CC6  0E00               	movlw	0
 39359  005CC8  0100               	movlb	0	; () banked
 39360  005CCA  6F60               	movwf	GPIOSet@mode& (0+255),b
 39361  005CCC  0E00               	movlw	0
 39362  005CCE  EC69  F036         	call	_GPIOSet
 39363                           
 39364                           ;rn2483APP.c: 333: GPIOSet(0x01, 1);
 39365  005CD2  0E01               	movlw	1
 39366  005CD4  0100               	movlb	0	; () banked
 39367  005CD6  6F60               	movwf	GPIOSet@mode& (0+255),b
 39368  005CD8  0E01               	movlw	1
 39369  005CDA  EC69  F036         	call	_GPIOSet
 39370                           
 39371                           ;rn2483APP.c: 334: GPIOSet(0x02, 1);
 39372  005CDE  0E01               	movlw	1
 39373  005CE0  0100               	movlb	0	; () banked
 39374  005CE2  6F60               	movwf	GPIOSet@mode& (0+255),b
 39375  005CE4  0E02               	movlw	2
 39376  005CE6  EC69  F036         	call	_GPIOSet
 39377                           
 39378                           ;rn2483APP.c: 335: GPIOSet(0x03, 1);
 39379  005CEA  0E01               	movlw	1
 39380  005CEC  0100               	movlb	0	; () banked
 39381  005CEE  6F60               	movwf	GPIOSet@mode& (0+255),b
 39382  005CF0  0E03               	movlw	3
 39383  005CF2  EC69  F036         	call	_GPIOSet
 39384                           
 39385                           ;rn2483APP.c: 336: GPIOSet(0xFF, 0);
 39386  005CF6  0E00               	movlw	0
 39387  005CF8  0100               	movlb	0	; () banked
 39388  005CFA  6F60               	movwf	GPIOSet@mode& (0+255),b
 39389  005CFC  0EFF               	movlw	255
 39390  005CFE  EC69  F036         	call	_GPIOSet
 39391                           
 39392                           ;rn2483APP.c: 337: GPIOSet(0x04, 0);
 39393  005D02  0E00               	movlw	0
 39394  005D04  0100               	movlb	0	; () banked
 39395  005D06  6F60               	movwf	GPIOSet@mode& (0+255),b
 39396  005D08  0E04               	movlw	4
 39397  005D0A  EC69  F036         	call	_GPIOSet
 39398                           
 39399                           ;rn2483APP.c: 338: GPIOSet(0x05, 0);
 39400  005D0E  0E00               	movlw	0
 39401  005D10  0100               	movlb	0	; () banked
 39402  005D12  6F60               	movwf	GPIOSet@mode& (0+255),b
 39403  005D14  0E05               	movlw	5
 39404  005D16  EC69  F036         	call	_GPIOSet
 39405                           
 39406                           ;rn2483APP.c: 339: GPIOSet(0x06, 0);
 39407  005D1A  0E00               	movlw	0
 39408  005D1C  0100               	movlb	0	; () banked
 39409  005D1E  6F60               	movwf	GPIOSet@mode& (0+255),b
 39410  005D20  0E06               	movlw	6
 39411  005D22  EC69  F036         	call	_GPIOSet
 39412                           
 39413                           ;rn2483APP.c: 340: GPIOSet(0x16, 0);
 39414  005D26  0E00               	movlw	0
 39415  005D28  0100               	movlb	0	; () banked
 39416  005D2A  6F60               	movwf	GPIOSet@mode& (0+255),b
 39417  005D2C  0E16               	movlw	22
 39418  005D2E  EC69  F036         	call	_GPIOSet
 39419                           
 39420                           ;rn2483APP.c: 341: GPIOSet(0x11, 0);
 39421  005D32  0E00               	movlw	0
 39422  005D34  0100               	movlb	0	; () banked
 39423  005D36  6F60               	movwf	GPIOSet@mode& (0+255),b
 39424  005D38  0E11               	movlw	17
 39425  005D3A  EC69  F036         	call	_GPIOSet
 39426                           
 39427                           ;rn2483APP.c: 342: GPIOSet(0x19, 0);
 39428  005D3E  0E00               	movlw	0
 39429  005D40  0100               	movlb	0	; () banked
 39430  005D42  6F60               	movwf	GPIOSet@mode& (0+255),b
 39431  005D44  0E19               	movlw	25
 39432  005D46  EC69  F036         	call	_GPIOSet
 39433                           
 39434                           ;rn2483APP.c: 345: GPIOAnalogMode(0x00, 0);
 39435  005D4A  0E00               	movlw	0
 39436  005D4C  0100               	movlb	0	; () banked
 39437  005D4E  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39438  005D50  0E00               	movlw	0
 39439  005D52  ECD4  F031         	call	_GPIOAnalogMode
 39440                           
 39441                           ;rn2483APP.c: 346: GPIOAnalogMode(0x01, 1);
 39442  005D56  0E01               	movlw	1
 39443  005D58  0100               	movlb	0	; () banked
 39444  005D5A  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39445  005D5C  0E01               	movlw	1
 39446  005D5E  ECD4  F031         	call	_GPIOAnalogMode
 39447                           
 39448                           ;rn2483APP.c: 347: GPIOAnalogMode(0x02, 1);
 39449  005D62  0E01               	movlw	1
 39450  005D64  0100               	movlb	0	; () banked
 39451  005D66  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39452  005D68  0E02               	movlw	2
 39453  005D6A  ECD4  F031         	call	_GPIOAnalogMode
 39454                           
 39455                           ;rn2483APP.c: 348: GPIOAnalogMode(0x03, 1);
 39456  005D6E  0E01               	movlw	1
 39457  005D70  0100               	movlb	0	; () banked
 39458  005D72  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39459  005D74  0E03               	movlw	3
 39460  005D76  ECD4  F031         	call	_GPIOAnalogMode
 39461                           
 39462                           ;rn2483APP.c: 349: GPIOAnalogMode(0xFF, 0);
 39463  005D7A  0E00               	movlw	0
 39464  005D7C  0100               	movlb	0	; () banked
 39465  005D7E  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39466  005D80  0EFF               	movlw	255
 39467  005D82  ECD4  F031         	call	_GPIOAnalogMode
 39468                           
 39469                           ;rn2483APP.c: 350: GPIOAnalogMode(0x04, 0);
 39470  005D86  0E00               	movlw	0
 39471  005D88  0100               	movlb	0	; () banked
 39472  005D8A  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39473  005D8C  0E04               	movlw	4
 39474  005D8E  ECD4  F031         	call	_GPIOAnalogMode
 39475                           
 39476                           ;rn2483APP.c: 351: GPIOAnalogMode(0x05, 0);
 39477  005D92  0E00               	movlw	0
 39478  005D94  0100               	movlb	0	; () banked
 39479  005D96  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39480  005D98  0E05               	movlw	5
 39481  005D9A  ECD4  F031         	call	_GPIOAnalogMode
 39482                           
 39483                           ;rn2483APP.c: 352: GPIOAnalogMode(0x06, 0);
 39484  005D9E  0E00               	movlw	0
 39485  005DA0  0100               	movlb	0	; () banked
 39486  005DA2  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39487  005DA4  0E06               	movlw	6
 39488  005DA6  ECD4  F031         	call	_GPIOAnalogMode
 39489                           
 39490                           ;rn2483APP.c: 353: GPIOAnalogMode(0x16, 0);
 39491  005DAA  0E00               	movlw	0
 39492  005DAC  0100               	movlb	0	; () banked
 39493  005DAE  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39494  005DB0  0E16               	movlw	22
 39495  005DB2  ECD4  F031         	call	_GPIOAnalogMode
 39496                           
 39497                           ;rn2483APP.c: 354: GPIOAnalogMode(0x11, 0);
 39498  005DB6  0E00               	movlw	0
 39499  005DB8  0100               	movlb	0	; () banked
 39500  005DBA  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39501  005DBC  0E11               	movlw	17
 39502  005DBE  ECD4  F031         	call	_GPIOAnalogMode
 39503                           
 39504                           ;rn2483APP.c: 355: GPIOAnalogMode(0x19, 0);
 39505  005DC2  0E00               	movlw	0
 39506  005DC4  0100               	movlb	0	; () banked
 39507  005DC6  6F60               	movwf	GPIOAnalogMode@mode& (0+255),b
 39508  005DC8  0E19               	movlw	25
 39509  005DCA  ECD4  F031         	call	_GPIOAnalogMode
 39510                           
 39511                           ;rn2483APP.c: 357: GPIODigitalWrite(0x00, 0);
 39512  005DCE  0E00               	movlw	0
 39513  005DD0  0100               	movlb	0	; () banked
 39514  005DD2  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39515  005DD4  0E00               	movlw	0
 39516  005DD6  ECE7  F036         	call	_GPIODigitalWrite
 39517                           
 39518                           ;rn2483APP.c: 358: GPIODigitalWrite(0xFF, 0);
 39519  005DDA  0E00               	movlw	0
 39520  005DDC  0100               	movlb	0	; () banked
 39521  005DDE  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39522  005DE0  0EFF               	movlw	255
 39523  005DE2  ECE7  F036         	call	_GPIODigitalWrite
 39524                           
 39525                           ;rn2483APP.c: 359: GPIODigitalWrite(0x04, 0);
 39526  005DE6  0E00               	movlw	0
 39527  005DE8  0100               	movlb	0	; () banked
 39528  005DEA  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39529  005DEC  0E04               	movlw	4
 39530  005DEE  ECE7  F036         	call	_GPIODigitalWrite
 39531                           
 39532                           ;rn2483APP.c: 360: GPIODigitalWrite(0x16, 1);
 39533  005DF2  0E01               	movlw	1
 39534  005DF4  0100               	movlb	0	; () banked
 39535  005DF6  6F60               	movwf	GPIODigitalWrite@digOut& (0+255),b
 39536  005DF8  0E16               	movlw	22
 39537  005DFA  ECE7  F036         	call	_GPIODigitalWrite
 39538  005DFE  0012               	return		;funcret
 39539  005E00                     __end_of_GPIOInit:
 39540                           	opt callstack 0
 39541                           
 39542 ;; *************** function _GPIOSet *****************
 39543 ;; Defined at:
 39544 ;;		line 85 in file "rn2483APP.c"
 39545 ;; Parameters:    Size  Location     Type
 39546 ;;  GPIO            1    wreg     unsigned char 
 39547 ;;  mode            1    0[BANK0 ] unsigned char 
 39548 ;; Auto vars:     Size  Location     Type
 39549 ;;  GPIO            1    1[BANK0 ] unsigned char 
 39550 ;; Return value:  Size  Location     Type
 39551 ;;                  1    wreg      void 
 39552 ;; Registers used:
 39553 ;;		wreg, status,2, status,0
 39554 ;; Tracked objects:
 39555 ;;		On entry : 0/0
 39556 ;;		On exit  : 0/0
 39557 ;;		Unchanged: 0/0
 39558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39559 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39562 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39563 ;;Total ram usage:        2 bytes
 39564 ;; Hardware stack levels used:    1
 39565 ;; Hardware stack levels required when called:    7
 39566 ;; This function calls:
 39567 ;;		Nothing
 39568 ;; This function is called by:
 39569 ;;		_GPIOInit
 39570 ;; This function uses a non-reentrant model
 39571 ;;
 39572                           
 39573                           	psect	text249
 39574  006CD2                     __ptext249:
 39575                           	opt callstack 0
 39576  006CD2                     _GPIOSet:
 39577                           	opt callstack 22
 39578                           
 39579                           ;incstack = 0
 39580                           ;GPIOSet@GPIO stored from wreg
 39581  006CD2  0100               	movlb	0	; () banked
 39582  006CD4  6F61               	movwf	GPIOSet@GPIO& (0+255),b
 39583                           
 39584                           ;rn2483APP.c: 87: switch(GPIO){
 39585  006CD6  D054               	goto	l16780
 39586  006CD8                     l16706:
 39587                           
 39588                           ; BSR set to: 0
 39589                           ;rn2483APP.c: 89: mode? TRISA |= (0x1) : TRISA &= ~(0x1);
 39590  006CD8  5160               	movf	GPIOSet@mode& (0+255),w,b
 39591  006CDA  B4D8               	btfsc	status,2,c
 39592  006CDC  D002               	goto	l16710
 39593                           
 39594                           ; BSR set to: 0
 39595  006CDE  8092               	bsf	3986,0,c	;volatile
 39596  006CE0  0012               	return	
 39597  006CE2                     l16710:
 39598                           
 39599                           ; BSR set to: 0
 39600  006CE2  9092               	bcf	3986,0,c	;volatile
 39601  006CE4  0012               	return	
 39602  006CE6                     l16712:
 39603                           
 39604                           ; BSR set to: 0
 39605                           ;rn2483APP.c: 92: mode? TRISA |= (0x2) : TRISA &= ~(0x2);
 39606  006CE6  5160               	movf	GPIOSet@mode& (0+255),w,b
 39607  006CE8  B4D8               	btfsc	status,2,c
 39608  006CEA  D002               	goto	l16716
 39609                           
 39610                           ; BSR set to: 0
 39611  006CEC  8292               	bsf	3986,1,c	;volatile
 39612  006CEE  0012               	return	
 39613  006CF0                     l16716:
 39614                           
 39615                           ; BSR set to: 0
 39616  006CF0  9292               	bcf	3986,1,c	;volatile
 39617  006CF2  0012               	return	
 39618  006CF4                     l16718:
 39619                           
 39620                           ; BSR set to: 0
 39621                           ;rn2483APP.c: 95: mode? TRISA |= (0x4) : TRISA &= ~(0x4);
 39622  006CF4  5160               	movf	GPIOSet@mode& (0+255),w,b
 39623  006CF6  B4D8               	btfsc	status,2,c
 39624  006CF8  D002               	goto	l16722
 39625                           
 39626                           ; BSR set to: 0
 39627  006CFA  8492               	bsf	3986,2,c	;volatile
 39628  006CFC  0012               	return	
 39629  006CFE                     l16722:
 39630                           
 39631                           ; BSR set to: 0
 39632  006CFE  9492               	bcf	3986,2,c	;volatile
 39633  006D00  0012               	return	
 39634  006D02                     l16724:
 39635                           
 39636                           ; BSR set to: 0
 39637                           ;rn2483APP.c: 98: mode? TRISA |= (0x8) : TRISA &= ~(0x8);
 39638  006D02  5160               	movf	GPIOSet@mode& (0+255),w,b
 39639  006D04  B4D8               	btfsc	status,2,c
 39640  006D06  D002               	goto	l16728
 39641                           
 39642                           ; BSR set to: 0
 39643  006D08  8692               	bsf	3986,3,c	;volatile
 39644  006D0A  0012               	return	
 39645  006D0C                     l16728:
 39646                           
 39647                           ; BSR set to: 0
 39648  006D0C  9692               	bcf	3986,3,c	;volatile
 39649  006D0E  0012               	return	
 39650  006D10                     l16730:
 39651                           
 39652                           ; BSR set to: 0
 39653                           ;rn2483APP.c: 101: mode? TRISA |= (0x10) : TRISA &= ~(0x10);
 39654  006D10  5160               	movf	GPIOSet@mode& (0+255),w,b
 39655  006D12  B4D8               	btfsc	status,2,c
 39656  006D14  D002               	goto	l16734
 39657                           
 39658                           ; BSR set to: 0
 39659  006D16  8892               	bsf	3986,4,c	;volatile
 39660  006D18  0012               	return	
 39661  006D1A                     l16734:
 39662                           
 39663                           ; BSR set to: 0
 39664  006D1A  9892               	bcf	3986,4,c	;volatile
 39665  006D1C  0012               	return	
 39666  006D1E                     l16736:
 39667                           
 39668                           ; BSR set to: 0
 39669                           ;rn2483APP.c: 104: mode? TRISA |= (0x20) : TRISA &= ~(0x20);
 39670  006D1E  5160               	movf	GPIOSet@mode& (0+255),w,b
 39671  006D20  B4D8               	btfsc	status,2,c
 39672  006D22  D002               	goto	l16740
 39673                           
 39674                           ; BSR set to: 0
 39675  006D24  8A92               	bsf	3986,5,c	;volatile
 39676  006D26  0012               	return	
 39677  006D28                     l16740:
 39678                           
 39679                           ; BSR set to: 0
 39680  006D28  9A92               	bcf	3986,5,c	;volatile
 39681  006D2A  0012               	return	
 39682  006D2C                     l16742:
 39683                           
 39684                           ; BSR set to: 0
 39685                           ;rn2483APP.c: 107: mode? TRISE |= (0x1) : TRISE &= ~(0x1);
 39686  006D2C  5160               	movf	GPIOSet@mode& (0+255),w,b
 39687  006D2E  B4D8               	btfsc	status,2,c
 39688  006D30  D002               	goto	l16746
 39689                           
 39690                           ; BSR set to: 0
 39691  006D32  8096               	bsf	3990,0,c	;volatile
 39692  006D34  0012               	return	
 39693  006D36                     l16746:
 39694                           
 39695                           ; BSR set to: 0
 39696  006D36  9096               	bcf	3990,0,c	;volatile
 39697  006D38  0012               	return	
 39698  006D3A                     l16748:
 39699                           
 39700                           ; BSR set to: 0
 39701                           ;rn2483APP.c: 110: mode? TRISE |= (0x2) : TRISE &= ~(0x2);
 39702  006D3A  5160               	movf	GPIOSet@mode& (0+255),w,b
 39703  006D3C  B4D8               	btfsc	status,2,c
 39704  006D3E  D002               	goto	l16752
 39705                           
 39706                           ; BSR set to: 0
 39707  006D40  8296               	bsf	3990,1,c	;volatile
 39708  006D42  0012               	return	
 39709  006D44                     l16752:
 39710                           
 39711                           ; BSR set to: 0
 39712  006D44  9296               	bcf	3990,1,c	;volatile
 39713  006D46  0012               	return	
 39714  006D48                     l16754:
 39715                           
 39716                           ; BSR set to: 0
 39717                           ;rn2483APP.c: 113: mode? TRISD |= (0x4) : TRISD &= ~(0x4);
 39718  006D48  5160               	movf	GPIOSet@mode& (0+255),w,b
 39719  006D4A  B4D8               	btfsc	status,2,c
 39720  006D4C  D002               	goto	l16758
 39721                           
 39722                           ; BSR set to: 0
 39723  006D4E  8495               	bsf	3989,2,c	;volatile
 39724  006D50  0012               	return	
 39725  006D52                     l16758:
 39726                           
 39727                           ; BSR set to: 0
 39728  006D52  9495               	bcf	3989,2,c	;volatile
 39729  006D54  0012               	return	
 39730  006D56                     l16760:
 39731                           
 39732                           ; BSR set to: 0
 39733                           ;rn2483APP.c: 116: mode? TRISE |= (0x4) : TRISE &= ~(0x4);
 39734  006D56  5160               	movf	GPIOSet@mode& (0+255),w,b
 39735  006D58  B4D8               	btfsc	status,2,c
 39736  006D5A  D002               	goto	l16764
 39737                           
 39738                           ; BSR set to: 0
 39739  006D5C  8496               	bsf	3990,2,c	;volatile
 39740  006D5E  0012               	return	
 39741  006D60                     l16764:
 39742                           
 39743                           ; BSR set to: 0
 39744  006D60  9496               	bcf	3990,2,c	;volatile
 39745  006D62  0012               	return	
 39746  006D64                     l16766:
 39747                           
 39748                           ; BSR set to: 0
 39749                           ;rn2483APP.c: 119: mode? TRISC |= (0x20) : TRISC &= ~(0x20);
 39750  006D64  5160               	movf	GPIOSet@mode& (0+255),w,b
 39751  006D66  B4D8               	btfsc	status,2,c
 39752  006D68  D002               	goto	l16770
 39753                           
 39754                           ; BSR set to: 0
 39755  006D6A  8A94               	bsf	3988,5,c	;volatile
 39756  006D6C  0012               	return	
 39757  006D6E                     l16770:
 39758                           
 39759                           ; BSR set to: 0
 39760  006D6E  9A94               	bcf	3988,5,c	;volatile
 39761  006D70  0012               	return	
 39762  006D72                     l16772:
 39763                           
 39764                           ; BSR set to: 0
 39765                           ;rn2483APP.c: 122: mode? TRISD |= (0x20) : TRISD &= ~(0x20);
 39766  006D72  5160               	movf	GPIOSet@mode& (0+255),w,b
 39767  006D74  B4D8               	btfsc	status,2,c
 39768  006D76  D002               	goto	l16776
 39769                           
 39770                           ; BSR set to: 0
 39771  006D78  8A95               	bsf	3989,5,c	;volatile
 39772  006D7A  0012               	return	
 39773  006D7C                     l16776:
 39774                           
 39775                           ; BSR set to: 0
 39776  006D7C  9A95               	bcf	3989,5,c	;volatile
 39777  006D7E  0012               	return	
 39778  006D80                     l16780:
 39779  006D80  0100               	movlb	0	; () banked
 39780  006D82  5161               	movf	GPIOSet@GPIO& (0+255),w,b
 39781                           
 39782                           ; Switch size 1, requested type "simple"
 39783                           ; Number of cases is 12, Range of values is 0 to 255
 39784                           ; switch strategies available:
 39785                           ; Name         Instructions Cycles
 39786                           ; simple_byte           37    19 (average)
 39787                           ;	Chosen strategy is simple_byte
 39788  006D84  0A00               	xorlw	0	; case 0
 39789  006D86  B4D8               	btfsc	status,2,c
 39790  006D88  D7A7               	goto	l16706
 39791  006D8A  0A01               	xorlw	1	; case 1
 39792  006D8C  B4D8               	btfsc	status,2,c
 39793  006D8E  D7AB               	goto	l16712
 39794  006D90  0A03               	xorlw	3	; case 2
 39795  006D92  B4D8               	btfsc	status,2,c
 39796  006D94  D7AF               	goto	l16718
 39797  006D96  0A01               	xorlw	1	; case 3
 39798  006D98  B4D8               	btfsc	status,2,c
 39799  006D9A  D7B3               	goto	l16724
 39800  006D9C  0A07               	xorlw	7	; case 4
 39801  006D9E  B4D8               	btfsc	status,2,c
 39802  006DA0  D7BE               	goto	l16736
 39803  006DA2  0A01               	xorlw	1	; case 5
 39804  006DA4  B4D8               	btfsc	status,2,c
 39805  006DA6  D7C2               	goto	l16742
 39806  006DA8  0A03               	xorlw	3	; case 6
 39807  006DAA  B4D8               	btfsc	status,2,c
 39808  006DAC  D7C6               	goto	l16748
 39809  006DAE  0A01               	xorlw	1	; case 7
 39810  006DB0  B4D8               	btfsc	status,2,c
 39811  006DB2  D7D1               	goto	l16760
 39812  006DB4  0A16               	xorlw	22	; case 17
 39813  006DB6  B4D8               	btfsc	status,2,c
 39814  006DB8  D7D5               	goto	l16766
 39815  006DBA  0A07               	xorlw	7	; case 22
 39816  006DBC  B4D8               	btfsc	status,2,c
 39817  006DBE  D7C4               	goto	l16754
 39818  006DC0  0A0F               	xorlw	15	; case 25
 39819  006DC2  B4D8               	btfsc	status,2,c
 39820  006DC4  D7D6               	goto	l16772
 39821  006DC6  0AE6               	xorlw	230	; case 255
 39822  006DC8  A4D8               	btfss	status,2,c
 39823  006DCA  0012               	return	
 39824  006DCC  D7A1               	goto	l16730
 39825  006DCE                     __end_of_GPIOSet:
 39826                           	opt callstack 0
 39827                           
 39828 ;; *************** function _GPIODigitalWrite *****************
 39829 ;; Defined at:
 39830 ;;		line 132 in file "rn2483APP.c"
 39831 ;; Parameters:    Size  Location     Type
 39832 ;;  GPIO            1    wreg     unsigned char 
 39833 ;;  digOut          1    0[BANK0 ] unsigned char 
 39834 ;; Auto vars:     Size  Location     Type
 39835 ;;  GPIO            1    1[BANK0 ] unsigned char 
 39836 ;; Return value:  Size  Location     Type
 39837 ;;                  1    wreg      void 
 39838 ;; Registers used:
 39839 ;;		wreg, status,2, status,0
 39840 ;; Tracked objects:
 39841 ;;		On entry : 0/0
 39842 ;;		On exit  : 0/0
 39843 ;;		Unchanged: 0/0
 39844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39845 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39846 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39848 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39849 ;;Total ram usage:        2 bytes
 39850 ;; Hardware stack levels used:    1
 39851 ;; Hardware stack levels required when called:    7
 39852 ;; This function calls:
 39853 ;;		Nothing
 39854 ;; This function is called by:
 39855 ;;		_main
 39856 ;;		_GPIOInit
 39857 ;;		_acuadoriApp
 39858 ;;		_lightSensAcquisition
 39859 ;;		_setSDA
 39860 ;;		_resetSDA
 39861 ;;		_setSCL
 39862 ;;		_resetSCL
 39863 ;; This function uses a non-reentrant model
 39864 ;;
 39865                           
 39866                           	psect	text250
 39867  006DCE                     __ptext250:
 39868                           	opt callstack 0
 39869  006DCE                     _GPIODigitalWrite:
 39870                           	opt callstack 21
 39871                           
 39872                           ; BSR set to: 0
 39873                           ;incstack = 0
 39874                           ;GPIODigitalWrite@GPIO stored from wreg
 39875  006DCE  0100               	movlb	0	; () banked
 39876  006DD0  6F61               	movwf	GPIODigitalWrite@GPIO& (0+255),b
 39877                           
 39878                           ;rn2483APP.c: 133: switch(GPIO){
 39879  006DD2  D054               	goto	l14290
 39880  006DD4                     l14216:
 39881                           
 39882                           ; BSR set to: 0
 39883                           ;rn2483APP.c: 135: digOut? LATA |= 0x1 : LATA &= ~0x1;
 39884  006DD4  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39885  006DD6  B4D8               	btfsc	status,2,c
 39886  006DD8  D002               	goto	l14220
 39887                           
 39888                           ; BSR set to: 0
 39889  006DDA  8089               	bsf	3977,0,c	;volatile
 39890  006DDC  0012               	return	
 39891  006DDE                     l14220:
 39892                           
 39893                           ; BSR set to: 0
 39894  006DDE  9089               	bcf	3977,0,c	;volatile
 39895  006DE0  0012               	return	
 39896  006DE2                     l14222:
 39897                           
 39898                           ; BSR set to: 0
 39899                           ;rn2483APP.c: 138: digOut? LATA |= 0x2 : LATA &= ~0x2;
 39900  006DE2  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39901  006DE4  B4D8               	btfsc	status,2,c
 39902  006DE6  D002               	goto	l14226
 39903                           
 39904                           ; BSR set to: 0
 39905  006DE8  8289               	bsf	3977,1,c	;volatile
 39906  006DEA  0012               	return	
 39907  006DEC                     l14226:
 39908                           
 39909                           ; BSR set to: 0
 39910  006DEC  9289               	bcf	3977,1,c	;volatile
 39911  006DEE  0012               	return	
 39912  006DF0                     l14228:
 39913                           
 39914                           ; BSR set to: 0
 39915                           ;rn2483APP.c: 141: digOut? LATA |= 0x4 : LATA &= ~0x4;
 39916  006DF0  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39917  006DF2  B4D8               	btfsc	status,2,c
 39918  006DF4  D002               	goto	l14232
 39919                           
 39920                           ; BSR set to: 0
 39921  006DF6  8489               	bsf	3977,2,c	;volatile
 39922  006DF8  0012               	return	
 39923  006DFA                     l14232:
 39924                           
 39925                           ; BSR set to: 0
 39926  006DFA  9489               	bcf	3977,2,c	;volatile
 39927  006DFC  0012               	return	
 39928  006DFE                     l14234:
 39929                           
 39930                           ; BSR set to: 0
 39931                           ;rn2483APP.c: 144: digOut? LATA |= 0x8 : LATA &= ~0x8;
 39932  006DFE  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39933  006E00  B4D8               	btfsc	status,2,c
 39934  006E02  D002               	goto	l14238
 39935                           
 39936                           ; BSR set to: 0
 39937  006E04  8689               	bsf	3977,3,c	;volatile
 39938  006E06  0012               	return	
 39939  006E08                     l14238:
 39940                           
 39941                           ; BSR set to: 0
 39942  006E08  9689               	bcf	3977,3,c	;volatile
 39943  006E0A  0012               	return	
 39944  006E0C                     l14240:
 39945                           
 39946                           ; BSR set to: 0
 39947                           ;rn2483APP.c: 147: digOut? LATA |= 0x10 : LATA &= ~0x10;
 39948  006E0C  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39949  006E0E  B4D8               	btfsc	status,2,c
 39950  006E10  D002               	goto	l14244
 39951                           
 39952                           ; BSR set to: 0
 39953  006E12  8889               	bsf	3977,4,c	;volatile
 39954  006E14  0012               	return	
 39955  006E16                     l14244:
 39956                           
 39957                           ; BSR set to: 0
 39958  006E16  9889               	bcf	3977,4,c	;volatile
 39959  006E18  0012               	return	
 39960  006E1A                     l14246:
 39961                           
 39962                           ; BSR set to: 0
 39963                           ;rn2483APP.c: 150: digOut? LATA |= 0x20 : LATA &= ~0x20;
 39964  006E1A  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39965  006E1C  B4D8               	btfsc	status,2,c
 39966  006E1E  D002               	goto	l14250
 39967                           
 39968                           ; BSR set to: 0
 39969  006E20  8A89               	bsf	3977,5,c	;volatile
 39970  006E22  0012               	return	
 39971  006E24                     l14250:
 39972                           
 39973                           ; BSR set to: 0
 39974  006E24  9A89               	bcf	3977,5,c	;volatile
 39975  006E26  0012               	return	
 39976  006E28                     l14252:
 39977                           
 39978                           ; BSR set to: 0
 39979                           ;rn2483APP.c: 153: digOut? LATE |= 0x1 : LATE &= ~0x1;
 39980  006E28  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39981  006E2A  B4D8               	btfsc	status,2,c
 39982  006E2C  D002               	goto	l14256
 39983                           
 39984                           ; BSR set to: 0
 39985  006E2E  808D               	bsf	3981,0,c	;volatile
 39986  006E30  0012               	return	
 39987  006E32                     l14256:
 39988                           
 39989                           ; BSR set to: 0
 39990  006E32  908D               	bcf	3981,0,c	;volatile
 39991  006E34  0012               	return	
 39992  006E36                     l14258:
 39993                           
 39994                           ; BSR set to: 0
 39995                           ;rn2483APP.c: 156: digOut? LATE |= 0x2 : LATE &= ~0x2;
 39996  006E36  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 39997  006E38  B4D8               	btfsc	status,2,c
 39998  006E3A  D002               	goto	l14262
 39999                           
 40000                           ; BSR set to: 0
 40001  006E3C  828D               	bsf	3981,1,c	;volatile
 40002  006E3E  0012               	return	
 40003  006E40                     l14262:
 40004                           
 40005                           ; BSR set to: 0
 40006  006E40  928D               	bcf	3981,1,c	;volatile
 40007  006E42  0012               	return	
 40008  006E44                     l14264:
 40009                           
 40010                           ; BSR set to: 0
 40011                           ;rn2483APP.c: 159: digOut? LATD |= 0x4 : LATD &= ~0x4;
 40012  006E44  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40013  006E46  B4D8               	btfsc	status,2,c
 40014  006E48  D002               	goto	l14268
 40015                           
 40016                           ; BSR set to: 0
 40017  006E4A  848C               	bsf	3980,2,c	;volatile
 40018  006E4C  0012               	return	
 40019  006E4E                     l14268:
 40020                           
 40021                           ; BSR set to: 0
 40022  006E4E  948C               	bcf	3980,2,c	;volatile
 40023  006E50  0012               	return	
 40024  006E52                     l14270:
 40025                           
 40026                           ; BSR set to: 0
 40027                           ;rn2483APP.c: 162: digOut? LATE |= 0x4 : LATE &= ~0x4;
 40028  006E52  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40029  006E54  B4D8               	btfsc	status,2,c
 40030  006E56  D002               	goto	l14274
 40031                           
 40032                           ; BSR set to: 0
 40033  006E58  848D               	bsf	3981,2,c	;volatile
 40034  006E5A  0012               	return	
 40035  006E5C                     l14274:
 40036                           
 40037                           ; BSR set to: 0
 40038  006E5C  948D               	bcf	3981,2,c	;volatile
 40039  006E5E  0012               	return	
 40040  006E60                     l14276:
 40041                           
 40042                           ; BSR set to: 0
 40043                           ;rn2483APP.c: 165: digOut? LATC |= 0x20 : LATC &= ~0x20;
 40044  006E60  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40045  006E62  B4D8               	btfsc	status,2,c
 40046  006E64  D002               	goto	l14280
 40047                           
 40048                           ; BSR set to: 0
 40049  006E66  8A8B               	bsf	3979,5,c	;volatile
 40050  006E68  0012               	return	
 40051  006E6A                     l14280:
 40052                           
 40053                           ; BSR set to: 0
 40054  006E6A  9A8B               	bcf	3979,5,c	;volatile
 40055  006E6C  0012               	return	
 40056  006E6E                     l14282:
 40057                           
 40058                           ; BSR set to: 0
 40059                           ;rn2483APP.c: 168: digOut? LATD |= 0x20 : LATD &= ~0x20;
 40060  006E6E  5160               	movf	GPIODigitalWrite@digOut& (0+255),w,b
 40061  006E70  B4D8               	btfsc	status,2,c
 40062  006E72  D002               	goto	l14286
 40063                           
 40064                           ; BSR set to: 0
 40065  006E74  8A8C               	bsf	3980,5,c	;volatile
 40066  006E76  0012               	return	
 40067  006E78                     l14286:
 40068                           
 40069                           ; BSR set to: 0
 40070  006E78  9A8C               	bcf	3980,5,c	;volatile
 40071  006E7A  0012               	return	
 40072  006E7C                     l14290:
 40073  006E7C  0100               	movlb	0	; () banked
 40074  006E7E  5161               	movf	GPIODigitalWrite@GPIO& (0+255),w,b
 40075                           
 40076                           ; Switch size 1, requested type "simple"
 40077                           ; Number of cases is 12, Range of values is 0 to 255
 40078                           ; switch strategies available:
 40079                           ; Name         Instructions Cycles
 40080                           ; simple_byte           37    19 (average)
 40081                           ;	Chosen strategy is simple_byte
 40082  006E80  0A00               	xorlw	0	; case 0
 40083  006E82  B4D8               	btfsc	status,2,c
 40084  006E84  D7A7               	goto	l14216
 40085  006E86  0A01               	xorlw	1	; case 1
 40086  006E88  B4D8               	btfsc	status,2,c
 40087  006E8A  D7AB               	goto	l14222
 40088  006E8C  0A03               	xorlw	3	; case 2
 40089  006E8E  B4D8               	btfsc	status,2,c
 40090  006E90  D7AF               	goto	l14228
 40091  006E92  0A01               	xorlw	1	; case 3
 40092  006E94  B4D8               	btfsc	status,2,c
 40093  006E96  D7B3               	goto	l14234
 40094  006E98  0A07               	xorlw	7	; case 4
 40095  006E9A  B4D8               	btfsc	status,2,c
 40096  006E9C  D7BE               	goto	l14246
 40097  006E9E  0A01               	xorlw	1	; case 5
 40098  006EA0  B4D8               	btfsc	status,2,c
 40099  006EA2  D7C2               	goto	l14252
 40100  006EA4  0A03               	xorlw	3	; case 6
 40101  006EA6  B4D8               	btfsc	status,2,c
 40102  006EA8  D7C6               	goto	l14258
 40103  006EAA  0A01               	xorlw	1	; case 7
 40104  006EAC  B4D8               	btfsc	status,2,c
 40105  006EAE  D7D1               	goto	l14270
 40106  006EB0  0A16               	xorlw	22	; case 17
 40107  006EB2  B4D8               	btfsc	status,2,c
 40108  006EB4  D7D5               	goto	l14276
 40109  006EB6  0A07               	xorlw	7	; case 22
 40110  006EB8  B4D8               	btfsc	status,2,c
 40111  006EBA  D7C4               	goto	l14264
 40112  006EBC  0A0F               	xorlw	15	; case 25
 40113  006EBE  B4D8               	btfsc	status,2,c
 40114  006EC0  D7D6               	goto	l14282
 40115  006EC2  0AE6               	xorlw	230	; case 255
 40116  006EC4  A4D8               	btfss	status,2,c
 40117  006EC6  0012               	return	
 40118  006EC8  D7A1               	goto	l14240
 40119  006ECA                     __end_of_GPIODigitalWrite:
 40120                           	opt callstack 0
 40121                           
 40122 ;; *************** function _GPIOAnalogMode *****************
 40123 ;; Defined at:
 40124 ;;		line 41 in file "rn2483APP.c"
 40125 ;; Parameters:    Size  Location     Type
 40126 ;;  GPIO            1    wreg     unsigned char 
 40127 ;;  mode            1    0[BANK0 ] unsigned char 
 40128 ;; Auto vars:     Size  Location     Type
 40129 ;;  GPIO            1    1[BANK0 ] unsigned char 
 40130 ;; Return value:  Size  Location     Type
 40131 ;;                  1    wreg      void 
 40132 ;; Registers used:
 40133 ;;		wreg, status,2, status,0
 40134 ;; Tracked objects:
 40135 ;;		On entry : 0/0
 40136 ;;		On exit  : 0/0
 40137 ;;		Unchanged: 0/0
 40138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40139 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40140 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40142 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40143 ;;Total ram usage:        2 bytes
 40144 ;; Hardware stack levels used:    1
 40145 ;; Hardware stack levels required when called:    7
 40146 ;; This function calls:
 40147 ;;		Nothing
 40148 ;; This function is called by:
 40149 ;;		_GPIOInit
 40150 ;; This function uses a non-reentrant model
 40151 ;;
 40152                           
 40153                           	psect	text251
 40154  0063A8                     __ptext251:
 40155                           	opt callstack 0
 40156  0063A8                     _GPIOAnalogMode:
 40157                           	opt callstack 22
 40158                           
 40159                           ; BSR set to: 0
 40160                           ;incstack = 0
 40161                           ;GPIOAnalogMode@GPIO stored from wreg
 40162  0063A8  0100               	movlb	0	; () banked
 40163  0063AA  6F61               	movwf	GPIOAnalogMode@GPIO& (0+255),b
 40164                           
 40165                           ;rn2483APP.c: 43: switch(GPIO){
 40166  0063AC  D063               	goto	l16702
 40167  0063AE                     l16634:
 40168                           
 40169                           ; BSR set to: 0
 40170                           ;rn2483APP.c: 45: mode? ANSELA |= 0x1 : ANSELA &= ~(0x1);
 40171  0063AE  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40172  0063B0  B4D8               	btfsc	status,2,c
 40173  0063B2  D003               	goto	l16638
 40174                           
 40175                           ; BSR set to: 0
 40176  0063B4  010F               	movlb	15	; () banked
 40177  0063B6  8138               	bsf	56,0,b	;volatile
 40178  0063B8  0012               	return	
 40179  0063BA                     l16638:
 40180                           
 40181                           ; BSR set to: 0
 40182  0063BA  010F               	movlb	15	; () banked
 40183  0063BC  9138               	bcf	56,0,b	;volatile
 40184  0063BE  0012               	return	
 40185  0063C0                     l16640:
 40186                           
 40187                           ; BSR set to: 0
 40188                           ;rn2483APP.c: 48: mode? ANSELA |= 0x2 : ANSELA &= ~(0x2);
 40189  0063C0  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40190  0063C2  B4D8               	btfsc	status,2,c
 40191  0063C4  D003               	goto	l16644
 40192                           
 40193                           ; BSR set to: 0
 40194  0063C6  010F               	movlb	15	; () banked
 40195  0063C8  8338               	bsf	56,1,b	;volatile
 40196  0063CA  0012               	return	
 40197  0063CC                     l16644:
 40198                           
 40199                           ; BSR set to: 0
 40200  0063CC  010F               	movlb	15	; () banked
 40201  0063CE  9338               	bcf	56,1,b	;volatile
 40202  0063D0  0012               	return	
 40203  0063D2                     l16646:
 40204                           
 40205                           ; BSR set to: 0
 40206                           ;rn2483APP.c: 51: mode? ANSELA |= 0x4 : ANSELA &= ~(0x4);
 40207  0063D2  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40208  0063D4  B4D8               	btfsc	status,2,c
 40209  0063D6  D003               	goto	l16650
 40210                           
 40211                           ; BSR set to: 0
 40212  0063D8  010F               	movlb	15	; () banked
 40213  0063DA  8538               	bsf	56,2,b	;volatile
 40214  0063DC  0012               	return	
 40215  0063DE                     l16650:
 40216                           
 40217                           ; BSR set to: 0
 40218  0063DE  010F               	movlb	15	; () banked
 40219  0063E0  9538               	bcf	56,2,b	;volatile
 40220  0063E2  0012               	return	
 40221  0063E4                     l16652:
 40222                           
 40223                           ; BSR set to: 0
 40224                           ;rn2483APP.c: 54: mode? ANSELA |= 0x8 : ANSELA &= ~(0x8);
 40225  0063E4  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40226  0063E6  B4D8               	btfsc	status,2,c
 40227  0063E8  D003               	goto	l16656
 40228                           
 40229                           ; BSR set to: 0
 40230  0063EA  010F               	movlb	15	; () banked
 40231  0063EC  8738               	bsf	56,3,b	;volatile
 40232  0063EE  0012               	return	
 40233  0063F0                     l16656:
 40234                           
 40235                           ; BSR set to: 0
 40236  0063F0  010F               	movlb	15	; () banked
 40237  0063F2  9738               	bcf	56,3,b	;volatile
 40238  0063F4  0012               	return	
 40239  0063F6                     l16658:
 40240                           
 40241                           ; BSR set to: 0
 40242                           ;rn2483APP.c: 57: mode? ANSELA |= 0x20 : ANSELA &= ~(0x20);
 40243  0063F6  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40244  0063F8  B4D8               	btfsc	status,2,c
 40245  0063FA  D003               	goto	l16662
 40246                           
 40247                           ; BSR set to: 0
 40248  0063FC  010F               	movlb	15	; () banked
 40249  0063FE  8B38               	bsf	56,5,b	;volatile
 40250  006400  0012               	return	
 40251  006402                     l16662:
 40252                           
 40253                           ; BSR set to: 0
 40254  006402  010F               	movlb	15	; () banked
 40255  006404  9B38               	bcf	56,5,b	;volatile
 40256  006406  0012               	return	
 40257  006408                     l16664:
 40258                           
 40259                           ; BSR set to: 0
 40260                           ;rn2483APP.c: 60: mode? ANSELE |= 0x1 : ANSELE &= ~(0x1);
 40261  006408  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40262  00640A  B4D8               	btfsc	status,2,c
 40263  00640C  D003               	goto	l16668
 40264                           
 40265                           ; BSR set to: 0
 40266  00640E  010F               	movlb	15	; () banked
 40267  006410  813C               	bsf	60,0,b	;volatile
 40268  006412  0012               	return	
 40269  006414                     l16668:
 40270                           
 40271                           ; BSR set to: 0
 40272  006414  010F               	movlb	15	; () banked
 40273  006416  913C               	bcf	60,0,b	;volatile
 40274  006418  0012               	return	
 40275  00641A                     l16670:
 40276                           
 40277                           ; BSR set to: 0
 40278                           ;rn2483APP.c: 63: mode? ANSELE |= 0x2 : ANSELE &= ~(0x2);
 40279  00641A  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40280  00641C  B4D8               	btfsc	status,2,c
 40281  00641E  D003               	goto	l16674
 40282                           
 40283                           ; BSR set to: 0
 40284  006420  010F               	movlb	15	; () banked
 40285  006422  833C               	bsf	60,1,b	;volatile
 40286  006424  0012               	return	
 40287  006426                     l16674:
 40288                           
 40289                           ; BSR set to: 0
 40290  006426  010F               	movlb	15	; () banked
 40291  006428  933C               	bcf	60,1,b	;volatile
 40292  00642A  0012               	return	
 40293  00642C                     l16676:
 40294                           
 40295                           ; BSR set to: 0
 40296                           ;rn2483APP.c: 66: mode? ANSELD |= 0x4 : ANSELD &= ~(0x4);
 40297  00642C  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40298  00642E  B4D8               	btfsc	status,2,c
 40299  006430  D003               	goto	l16680
 40300                           
 40301                           ; BSR set to: 0
 40302  006432  010F               	movlb	15	; () banked
 40303  006434  853B               	bsf	59,2,b	;volatile
 40304  006436  0012               	return	
 40305  006438                     l16680:
 40306                           
 40307                           ; BSR set to: 0
 40308  006438  010F               	movlb	15	; () banked
 40309  00643A  953B               	bcf	59,2,b	;volatile
 40310  00643C  0012               	return	
 40311  00643E                     l16682:
 40312                           
 40313                           ; BSR set to: 0
 40314                           ;rn2483APP.c: 69: mode? ANSELE |= 0x4 : ANSELE &= ~(0x4);
 40315  00643E  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40316  006440  B4D8               	btfsc	status,2,c
 40317  006442  D003               	goto	l16686
 40318                           
 40319                           ; BSR set to: 0
 40320  006444  010F               	movlb	15	; () banked
 40321  006446  853C               	bsf	60,2,b	;volatile
 40322  006448  0012               	return	
 40323  00644A                     l16686:
 40324                           
 40325                           ; BSR set to: 0
 40326  00644A  010F               	movlb	15	; () banked
 40327  00644C  953C               	bcf	60,2,b	;volatile
 40328  00644E  0012               	return	
 40329  006450                     l16688:
 40330                           
 40331                           ; BSR set to: 0
 40332                           ;rn2483APP.c: 72: mode? ANSELC |= 0x20 : ANSELC &= ~(0x20);
 40333  006450  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40334  006452  B4D8               	btfsc	status,2,c
 40335  006454  D003               	goto	l16692
 40336                           
 40337                           ; BSR set to: 0
 40338  006456  010F               	movlb	15	; () banked
 40339  006458  8B3A               	bsf	58,5,b	;volatile
 40340  00645A  0012               	return	
 40341  00645C                     l16692:
 40342                           
 40343                           ; BSR set to: 0
 40344  00645C  010F               	movlb	15	; () banked
 40345  00645E  9B3A               	bcf	58,5,b	;volatile
 40346  006460  0012               	return	
 40347  006462                     l16694:
 40348                           
 40349                           ; BSR set to: 0
 40350                           ;rn2483APP.c: 75: mode? ANSELD |= 0x20 : ANSELD &= ~(0x20);
 40351  006462  5160               	movf	GPIOAnalogMode@mode& (0+255),w,b
 40352  006464  B4D8               	btfsc	status,2,c
 40353  006466  D003               	goto	l16698
 40354                           
 40355                           ; BSR set to: 0
 40356  006468  010F               	movlb	15	; () banked
 40357  00646A  8B3B               	bsf	59,5,b	;volatile
 40358  00646C  0012               	return	
 40359  00646E                     l16698:
 40360                           
 40361                           ; BSR set to: 0
 40362  00646E  010F               	movlb	15	; () banked
 40363  006470  9B3B               	bcf	59,5,b	;volatile
 40364  006472  0012               	return	
 40365  006474                     l16702:
 40366  006474  0100               	movlb	0	; () banked
 40367  006476  5161               	movf	GPIOAnalogMode@GPIO& (0+255),w,b
 40368                           
 40369                           ; Switch size 1, requested type "simple"
 40370                           ; Number of cases is 11, Range of values is 0 to 25
 40371                           ; switch strategies available:
 40372                           ; Name         Instructions Cycles
 40373                           ; simple_byte           34    18 (average)
 40374                           ;	Chosen strategy is simple_byte
 40375  006478  0A00               	xorlw	0	; case 0
 40376  00647A  B4D8               	btfsc	status,2,c
 40377  00647C  D798               	goto	l16634
 40378  00647E  0A01               	xorlw	1	; case 1
 40379  006480  B4D8               	btfsc	status,2,c
 40380  006482  D79E               	goto	l16640
 40381  006484  0A03               	xorlw	3	; case 2
 40382  006486  B4D8               	btfsc	status,2,c
 40383  006488  D7A4               	goto	l16646
 40384  00648A  0A01               	xorlw	1	; case 3
 40385  00648C  B4D8               	btfsc	status,2,c
 40386  00648E  D7AA               	goto	l16652
 40387  006490  0A07               	xorlw	7	; case 4
 40388  006492  B4D8               	btfsc	status,2,c
 40389  006494  D7B0               	goto	l16658
 40390  006496  0A01               	xorlw	1	; case 5
 40391  006498  B4D8               	btfsc	status,2,c
 40392  00649A  D7B6               	goto	l16664
 40393  00649C  0A03               	xorlw	3	; case 6
 40394  00649E  B4D8               	btfsc	status,2,c
 40395  0064A0  D7BC               	goto	l16670
 40396  0064A2  0A01               	xorlw	1	; case 7
 40397  0064A4  B4D8               	btfsc	status,2,c
 40398  0064A6  D7CB               	goto	l16682
 40399  0064A8  0A16               	xorlw	22	; case 17
 40400  0064AA  B4D8               	btfsc	status,2,c
 40401  0064AC  D7D1               	goto	l16688
 40402  0064AE  0A07               	xorlw	7	; case 22
 40403  0064B0  B4D8               	btfsc	status,2,c
 40404  0064B2  D7BC               	goto	l16676
 40405  0064B4  0A0F               	xorlw	15	; case 25
 40406  0064B6  A4D8               	btfss	status,2,c
 40407  0064B8  0012               	return	
 40408  0064BA  D7D3               	goto	l16694
 40409  0064BC                     __end_of_GPIOAnalogMode:
 40410                           	opt callstack 0
 40411                           
 40412 ;; *************** function _GPIODigitalToogle *****************
 40413 ;; Defined at:
 40414 ;;		line 214 in file "rn2483APP.c"
 40415 ;; Parameters:    Size  Location     Type
 40416 ;;  GPIO            1    wreg     unsigned char 
 40417 ;; Auto vars:     Size  Location     Type
 40418 ;;  GPIO            1    0[BANK0 ] unsigned char 
 40419 ;; Return value:  Size  Location     Type
 40420 ;;                  1    wreg      void 
 40421 ;; Registers used:
 40422 ;;		wreg, status,2, status,0
 40423 ;; Tracked objects:
 40424 ;;		On entry : 0/0
 40425 ;;		On exit  : 0/0
 40426 ;;		Unchanged: 0/0
 40427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40429 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40431 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40432 ;;Total ram usage:        1 bytes
 40433 ;; Hardware stack levels used:    1
 40434 ;; Hardware stack levels required when called:    7
 40435 ;; This function calls:
 40436 ;;		Nothing
 40437 ;; This function is called by:
 40438 ;;		_main
 40439 ;; This function uses a non-reentrant model
 40440 ;;
 40441                           
 40442                           	psect	text252
 40443  007F9E                     __ptext252:
 40444                           	opt callstack 0
 40445  007F9E                     _GPIODigitalToogle:
 40446                           	opt callstack 23
 40447                           
 40448                           ;incstack = 0
 40449                           ;GPIODigitalToogle@GPIO stored from wreg
 40450  007F9E  0100               	movlb	0	; () banked
 40451  007FA0  6F60               	movwf	GPIODigitalToogle@GPIO& (0+255),b
 40452                           
 40453                           ;rn2483APP.c: 215: switch(GPIO){
 40454  007FA2  D024               	goto	l17038
 40455  007FA4                     l17012:
 40456                           
 40457                           ; BSR set to: 0
 40458                           ;rn2483APP.c: 217: LATA ^= 0x1;
 40459  007FA4  0E01               	movlw	1
 40460  007FA6  1A89               	xorwf	3977,f,c	;volatile
 40461                           
 40462                           ;rn2483APP.c: 218: break;
 40463  007FA8  0012               	return	
 40464  007FAA                     l17014:
 40465                           
 40466                           ; BSR set to: 0
 40467                           ;rn2483APP.c: 220: LATA ^= 0x2;
 40468  007FAA  0E02               	movlw	2
 40469  007FAC  1A89               	xorwf	3977,f,c	;volatile
 40470                           
 40471                           ;rn2483APP.c: 221: break;
 40472  007FAE  0012               	return	
 40473  007FB0                     l17016:
 40474                           
 40475                           ; BSR set to: 0
 40476                           ;rn2483APP.c: 223: LATA ^= 0x4;
 40477  007FB0  0E04               	movlw	4
 40478  007FB2  1A89               	xorwf	3977,f,c	;volatile
 40479                           
 40480                           ;rn2483APP.c: 224: break;
 40481  007FB4  0012               	return	
 40482  007FB6                     l17018:
 40483                           
 40484                           ; BSR set to: 0
 40485                           ;rn2483APP.c: 226: LATA ^= 0x8;
 40486  007FB6  0E08               	movlw	8
 40487  007FB8  1A89               	xorwf	3977,f,c	;volatile
 40488                           
 40489                           ;rn2483APP.c: 227: break;
 40490  007FBA  0012               	return	
 40491  007FBC                     l17020:
 40492                           
 40493                           ; BSR set to: 0
 40494                           ;rn2483APP.c: 229: LATA ^= 0x10;
 40495  007FBC  0E10               	movlw	16
 40496  007FBE  1A89               	xorwf	3977,f,c	;volatile
 40497                           
 40498                           ;rn2483APP.c: 230: break;
 40499  007FC0  0012               	return	
 40500  007FC2                     l17022:
 40501                           
 40502                           ; BSR set to: 0
 40503                           ;rn2483APP.c: 232: LATA ^= 0x20;
 40504  007FC2  0E20               	movlw	32
 40505  007FC4  1A89               	xorwf	3977,f,c	;volatile
 40506                           
 40507                           ;rn2483APP.c: 233: break;
 40508  007FC6  0012               	return	
 40509  007FC8                     l17024:
 40510                           
 40511                           ; BSR set to: 0
 40512                           ;rn2483APP.c: 235: LATE ^= 0x1;
 40513  007FC8  0E01               	movlw	1
 40514  007FCA  1A8D               	xorwf	3981,f,c	;volatile
 40515                           
 40516                           ;rn2483APP.c: 236: break;
 40517  007FCC  0012               	return	
 40518  007FCE                     l17026:
 40519                           
 40520                           ; BSR set to: 0
 40521                           ;rn2483APP.c: 238: LATE ^= 0x2;
 40522  007FCE  0E02               	movlw	2
 40523  007FD0  1A8D               	xorwf	3981,f,c	;volatile
 40524                           
 40525                           ;rn2483APP.c: 239: break;
 40526  007FD2  0012               	return	
 40527  007FD4                     l17028:
 40528                           
 40529                           ; BSR set to: 0
 40530                           ;rn2483APP.c: 241: LATD ^= 0x4;
 40531  007FD4  0E04               	movlw	4
 40532  007FD6  1A8C               	xorwf	3980,f,c	;volatile
 40533                           
 40534                           ;rn2483APP.c: 242: break;
 40535  007FD8  0012               	return	
 40536  007FDA                     l17030:
 40537                           
 40538                           ; BSR set to: 0
 40539                           ;rn2483APP.c: 244: LATE ^= 0x4;
 40540  007FDA  0E04               	movlw	4
 40541  007FDC  1A8D               	xorwf	3981,f,c	;volatile
 40542                           
 40543                           ;rn2483APP.c: 245: break;
 40544  007FDE  0012               	return	
 40545  007FE0                     l17032:
 40546                           
 40547                           ; BSR set to: 0
 40548                           ;rn2483APP.c: 247: LATC ^= 0x20;
 40549  007FE0  0E20               	movlw	32
 40550  007FE2  1A8B               	xorwf	3979,f,c	;volatile
 40551                           
 40552                           ;rn2483APP.c: 248: break;
 40553  007FE4  0012               	return	
 40554  007FE6                     l17034:
 40555                           
 40556                           ; BSR set to: 0
 40557                           ;rn2483APP.c: 250: LATD ^= 0x20;
 40558  007FE6  0E20               	movlw	32
 40559  007FE8  1A8C               	xorwf	3980,f,c	;volatile
 40560                           
 40561                           ;rn2483APP.c: 251: break;
 40562  007FEA  0012               	return	
 40563  007FEC                     l17038:
 40564  007FEC  0100               	movlb	0	; () banked
 40565  007FEE  5160               	movf	GPIODigitalToogle@GPIO& (0+255),w,b
 40566                           
 40567                           ; Switch size 1, requested type "simple"
 40568                           ; Number of cases is 12, Range of values is 0 to 255
 40569                           ; switch strategies available:
 40570                           ; Name         Instructions Cycles
 40571                           ; simple_byte           37    19 (average)
 40572                           ;	Chosen strategy is simple_byte
 40573  007FF0  0A00               	xorlw	0	; case 0
 40574  007FF2  B4D8               	btfsc	status,2,c
 40575  007FF4  D7D7               	goto	l17012
 40576  007FF6  0A01               	xorlw	1	; case 1
 40577  007FF8  B4D8               	btfsc	status,2,c
 40578  007FFA  D7D7               	goto	l17014
 40579  007FFC  0A03               	xorlw	3	; case 2
 40580  007FFE  B4D8               	btfsc	status,2,c
 40581  008000  D7D7               	goto	l17016
 40582  008002  0A01               	xorlw	1	; case 3
 40583  008004  B4D8               	btfsc	status,2,c
 40584  008006  D7D7               	goto	l17018
 40585  008008  0A07               	xorlw	7	; case 4
 40586  00800A  B4D8               	btfsc	status,2,c
 40587  00800C  D7DA               	goto	l17022
 40588  00800E  0A01               	xorlw	1	; case 5
 40589  008010  B4D8               	btfsc	status,2,c
 40590  008012  D7DA               	goto	l17024
 40591  008014  0A03               	xorlw	3	; case 6
 40592  008016  B4D8               	btfsc	status,2,c
 40593  008018  D7DA               	goto	l17026
 40594  00801A  0A01               	xorlw	1	; case 7
 40595  00801C  B4D8               	btfsc	status,2,c
 40596  00801E  D7DD               	goto	l17030
 40597  008020  0A16               	xorlw	22	; case 17
 40598  008022  B4D8               	btfsc	status,2,c
 40599  008024  D7DD               	goto	l17032
 40600  008026  0A07               	xorlw	7	; case 22
 40601  008028  B4D8               	btfsc	status,2,c
 40602  00802A  D7D4               	goto	l17028
 40603  00802C  0A0F               	xorlw	15	; case 25
 40604  00802E  B4D8               	btfsc	status,2,c
 40605  008030  D7DA               	goto	l17034
 40606  008032  0AE6               	xorlw	230	; case 255
 40607  008034  A4D8               	btfss	status,2,c
 40608  008036  0012               	return	
 40609  008038  D7C1               	goto	l17020
 40610  00803A                     __end_of_GPIODigitalToogle:
 40611                           	opt callstack 0
 40612                           
 40613 ;; *************** function _INTERRUPT_InterruptManager *****************
 40614 ;; Defined at:
 40615 ;;		line 63 in file "mcc_generated_files/interrupt_manager.c"
 40616 ;; Parameters:    Size  Location     Type
 40617 ;;		None
 40618 ;; Auto vars:     Size  Location     Type
 40619 ;;		None
 40620 ;; Return value:  Size  Location     Type
 40621 ;;                  1    wreg      void 
 40622 ;; Registers used:
 40623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 40624 ;; Tracked objects:
 40625 ;;		On entry : 0/0
 40626 ;;		On exit  : 0/0
 40627 ;;		Unchanged: 0/0
 40628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40631 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40632 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40633 ;;Total ram usage:        8 bytes
 40634 ;; Hardware stack levels used:    1
 40635 ;; Hardware stack levels required when called:    6
 40636 ;; This function calls:
 40637 ;;		_ADC_ISR
 40638 ;;		_INT1_ISR
 40639 ;;		_INT2_ISR
 40640 ;;		_PIN_MANAGER_IOC
 40641 ;;		_TMR1_ISR
 40642 ;;		_TMR3_ISR
 40643 ;;		_TMR5_ISR
 40644 ;; This function is called by:
 40645 ;;		Interrupt level 2
 40646 ;; This function uses a non-reentrant model
 40647 ;;
 40648                           
 40649                           	psect	intcode
 40650  000008                     __pintcode:
 40651                           	opt callstack 0
 40652  000008                     _INTERRUPT_InterruptManager:
 40653                           	opt callstack 10
 40654                           
 40655                           ; BSR set to: 0
 40656                           ;incstack = 0
 40657  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 40658  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 40659  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 40660  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 40661  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 40662  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 40663  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 40664  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 40665  000028  EE1A  F0F8         	lfsr	1,___inthi_sp
 40666                           
 40667                           ;interrupt_manager.c: 66: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 40668  00002C  B6F0               	btfsc	4080,3,c	;volatile
 40669  00002E  A0F0               	btfss	4080,0,c	;volatile
 40670  000030  D003               	goto	i2l2308
 40671                           
 40672                           ;interrupt_manager.c: 67: {;interrupt_manager.c: 68: INT1_ISR();
 40673  000032  EC83  F054         	call	_INT1_ISR	;wreg free
 40674                           
 40675                           ;interrupt_manager.c: 69: }
 40676  000036  D025               	goto	i2l2318
 40677  000038                     i2l2308:
 40678                           
 40679                           ;interrupt_manager.c: 70: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 40680  000038  B8F0               	btfsc	4080,4,c	;volatile
 40681  00003A  A2F0               	btfss	4080,1,c	;volatile
 40682  00003C  D003               	goto	i2l2310
 40683                           
 40684                           ;interrupt_manager.c: 71: {;interrupt_manager.c: 72: INT2_ISR();
 40685  00003E  EC7F  F054         	call	_INT2_ISR	;wreg free
 40686                           
 40687                           ;interrupt_manager.c: 73: }
 40688  000042  D01F               	goto	i2l2318
 40689  000044                     i2l2310:
 40690                           
 40691                           ;interrupt_manager.c: 74: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 40692  000044  B6F2               	btfsc	4082,3,c	;volatile
 40693  000046  A0F2               	btfss	4082,0,c	;volatile
 40694  000048  D003               	goto	i2l2312
 40695                           
 40696                           ;interrupt_manager.c: 75: {;interrupt_manager.c: 76: PIN_MANAGER_IOC();
 40697  00004A  EC72  F054         	call	_PIN_MANAGER_IOC	;wreg free
 40698                           
 40699                           ;interrupt_manager.c: 77: }
 40700  00004E  D019               	goto	i2l2318
 40701  000050                     i2l2312:
 40702                           
 40703                           ;interrupt_manager.c: 78: else if(INTCONbits.PEIE == 1)
 40704  000050  ACF2               	btfss	4082,6,c	;volatile
 40705  000052  D017               	goto	i2l2318
 40706                           
 40707                           ;interrupt_manager.c: 79: {;interrupt_manager.c: 80: if(PIE1bits.ADIE == 1 && PIR1bits.A
      +                          DIF == 1)
 40708  000054  BC9D               	btfsc	3997,6,c	;volatile
 40709  000056  AC9E               	btfss	3998,6,c	;volatile
 40710  000058  D003               	goto	i2l2315
 40711                           
 40712                           ;interrupt_manager.c: 81: {;interrupt_manager.c: 82: ADC_ISR();
 40713  00005A  ECAF  F054         	call	_ADC_ISR	;wreg free
 40714                           
 40715                           ;interrupt_manager.c: 83: }
 40716  00005E  D011               	goto	i2l2318
 40717  000060                     i2l2315:
 40718                           
 40719                           ;interrupt_manager.c: 84: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 40720  000060  B27D               	btfsc	3965,1,c	;volatile
 40721  000062  A27E               	btfss	3966,1,c	;volatile
 40722  000064  D003               	goto	i2l2317
 40723                           
 40724                           ;interrupt_manager.c: 85: {;interrupt_manager.c: 86: TMR5_ISR();
 40725  000066  EC24  F050         	call	_TMR5_ISR	;wreg free
 40726                           
 40727                           ;interrupt_manager.c: 87: }
 40728  00006A  D00B               	goto	i2l2318
 40729  00006C                     i2l2317:
 40730                           
 40731                           ;interrupt_manager.c: 88: else if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 40732  00006C  B2A0               	btfsc	4000,1,c	;volatile
 40733  00006E  A2A1               	btfss	4001,1,c	;volatile
 40734  000070  D003               	goto	i2l2319
 40735                           
 40736                           ;interrupt_manager.c: 89: {;interrupt_manager.c: 90: TMR3_ISR();
 40737  000072  EC3B  F050         	call	_TMR3_ISR	;wreg free
 40738                           
 40739                           ;interrupt_manager.c: 91: }
 40740  000076  D005               	goto	i2l2318
 40741  000078                     i2l2319:
 40742                           
 40743                           ;interrupt_manager.c: 92: else if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 40744  000078  B09D               	btfsc	3997,0,c	;volatile
 40745  00007A  A09E               	btfss	3998,0,c	;volatile
 40746  00007C  D002               	goto	i2l2318
 40747                           
 40748                           ;interrupt_manager.c: 93: {;interrupt_manager.c: 94: TMR1_ISR();
 40749  00007E  EC6C  F053         	call	_TMR1_ISR	;wreg free
 40750  000082                     i2l2318:
 40751  000082  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 40752  000086  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 40753  00008A  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 40754  00008E  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 40755  000092  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 40756  000096  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 40757  00009A  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 40758  00009E  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 40759  0000A2  0011               	retfie		f
 40760  0000A4                     __end_of_INTERRUPT_InterruptManager:
 40761                           	opt callstack 0
 40762                           
 40763 ;; *************** function _TMR5_ISR *****************
 40764 ;; Defined at:
 40765 ;;		line 165 in file "mcc_generated_files/tmr5.c"
 40766 ;; Parameters:    Size  Location     Type
 40767 ;;		None
 40768 ;; Auto vars:     Size  Location     Type
 40769 ;;		None
 40770 ;; Return value:  Size  Location     Type
 40771 ;;                  1    wreg      void 
 40772 ;; Registers used:
 40773 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 40774 ;; Tracked objects:
 40775 ;;		On entry : 0/0
 40776 ;;		On exit  : 0/0
 40777 ;;		Unchanged: 0/0
 40778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40783 ;;Total ram usage:        0 bytes
 40784 ;; Hardware stack levels used:    1
 40785 ;; Hardware stack levels required when called:    3
 40786 ;; This function calls:
 40787 ;;		Absolute function
 40788 ;;		_TMR5_InterruptTicker
 40789 ;;		_TMR5_WriteTimer
 40790 ;; This function is called by:
 40791 ;;		_INTERRUPT_InterruptManager
 40792 ;; This function uses a non-reentrant model
 40793 ;;
 40794                           
 40795                           	psect	text254
 40796  00A048                     __ptext254:
 40797                           	opt callstack 0
 40798  00A048                     _TMR5_ISR:
 40799                           	opt callstack 12
 40800                           
 40801                           ;tmr5.c: 169: PIR5bits.TMR5IF = 0;
 40802                           
 40803                           ;incstack = 0
 40804  00A048  927E               	bcf	3966,1,c	;volatile
 40805                           
 40806                           ;tmr5.c: 170: TMR5_WriteTimer(timer5ReloadVal);
 40807  00A04A  C1DF  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 40808  00A04E  C1E0  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 40809  00A052  EC97  F052         	call	_TMR5_WriteTimer	;wreg free
 40810                           
 40811                           ;tmr5.c: 172: if(TMR5_InterruptHandler)
 40812  00A056  0101               	movlb	1	; () banked
 40813  00A058  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 40814  00A05A  11DE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 40815  00A05C  B4D8               	btfsc	status,2,c
 40816  00A05E  0012               	return	
 40817                           
 40818                           ; BSR set to: 1
 40819                           ;tmr5.c: 173: {;tmr5.c: 174: TMR5_InterruptHandler();
 40820  00A060  D801               	call	i2u1762_48
 40821  00A062  0012               	return	
 40822  00A064                     i2u1762_48:
 40823  00A064  0005               	push	
 40824  00A066  6EFA               	movwf	pclath,c
 40825  00A068  51DD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 40826  00A06A  6EFD               	movwf	tosl,c
 40827  00A06C  51DE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 40828  00A06E  6EFE               	movwf	tosh,c
 40829  00A070  6AFF               	clrf	tosu,c
 40830  00A072  50FA               	movf	pclath,w,c
 40831  00A074  0012               	return		;indir
 40832  00A076                     __end_of_TMR5_ISR:
 40833                           	opt callstack 0
 40834                           
 40835 ;; *************** function _TMR5_WriteTimer *****************
 40836 ;; Defined at:
 40837 ;;		line 128 in file "mcc_generated_files/tmr5.c"
 40838 ;; Parameters:    Size  Location     Type
 40839 ;;  timerVal        2    0[COMRAM] unsigned int 
 40840 ;; Auto vars:     Size  Location     Type
 40841 ;;		None
 40842 ;; Return value:  Size  Location     Type
 40843 ;;                  1    wreg      void 
 40844 ;; Registers used:
 40845 ;;		wreg, status,2
 40846 ;; Tracked objects:
 40847 ;;		On entry : 0/0
 40848 ;;		On exit  : 0/0
 40849 ;;		Unchanged: 0/0
 40850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40855 ;;Total ram usage:        2 bytes
 40856 ;; Hardware stack levels used:    1
 40857 ;; This function calls:
 40858 ;;		Nothing
 40859 ;; This function is called by:
 40860 ;;		_TMR5_ISR
 40861 ;;		_TMR5_Reload
 40862 ;; This function uses a non-reentrant model
 40863 ;;
 40864                           
 40865                           	psect	text255
 40866  00A52E                     __ptext255:
 40867                           	opt callstack 0
 40868  00A52E                     _TMR5_WriteTimer:
 40869                           	opt callstack 14
 40870                           
 40871                           ;tmr5.c: 130: if (T5CONbits.T5SYNC == 1)
 40872                           
 40873                           ;incstack = 0
 40874  00A52E  010F               	movlb	15	; () banked
 40875  00A530  A54E               	btfss	78,2,b	;volatile
 40876  00A532  D007               	goto	i2l16624
 40877                           
 40878                           ; BSR set to: 15
 40879                           ;tmr5.c: 131: {;tmr5.c: 133: T5CONbits.TMR5ON = 0;
 40880  00A534  914E               	bcf	78,0,b	;volatile
 40881                           
 40882                           ; BSR set to: 15
 40883                           ;tmr5.c: 136: TMR5H = (timerVal >> 8);
 40884  00A536  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40885  00A538  6F50               	movwf	80,b	;volatile
 40886                           
 40887                           ; BSR set to: 15
 40888                           ;tmr5.c: 137: TMR5L = (uint8_t) timerVal;
 40889  00A53A  C001  FF4F         	movff	TMR5_WriteTimer@timerVal,3919	;volatile
 40890                           
 40891                           ; BSR set to: 15
 40892                           ;tmr5.c: 140: T5CONbits.TMR5ON =1;
 40893  00A53E  814E               	bsf	78,0,b	;volatile
 40894                           
 40895                           ;tmr5.c: 141: }
 40896  00A540  0012               	return	
 40897  00A542                     i2l16624:
 40898                           
 40899                           ; BSR set to: 15
 40900                           ;tmr5.c: 142: else;tmr5.c: 143: {;tmr5.c: 145: TMR5H = (timerVal >> 8);
 40901  00A542  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 40902  00A544  6F50               	movwf	80,b	;volatile
 40903                           
 40904                           ; BSR set to: 15
 40905                           ;tmr5.c: 146: TMR5L = (uint8_t) timerVal;
 40906  00A546  C001  FF4F         	movff	TMR5_WriteTimer@timerVal,3919	;volatile
 40907                           
 40908                           ; BSR set to: 15
 40909  00A54A  0012               	return		;funcret
 40910  00A54C                     __end_of_TMR5_WriteTimer:
 40911                           	opt callstack 0
 40912                           
 40913 ;; *************** function _TMR5_InterruptTicker *****************
 40914 ;; Defined at:
 40915 ;;		line 183 in file "mcc_generated_files/tmr5.c"
 40916 ;; Parameters:    Size  Location     Type
 40917 ;;		None
 40918 ;; Auto vars:     Size  Location     Type
 40919 ;;		None
 40920 ;; Return value:  Size  Location     Type
 40921 ;;                  1    wreg      void 
 40922 ;; Registers used:
 40923 ;;		wreg, status,2, status,0, cstack
 40924 ;; Tracked objects:
 40925 ;;		On entry : 0/0
 40926 ;;		On exit  : 0/0
 40927 ;;		Unchanged: 0/0
 40928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40933 ;;Total ram usage:        0 bytes
 40934 ;; Hardware stack levels used:    1
 40935 ;; Hardware stack levels required when called:    2
 40936 ;; This function calls:
 40937 ;;		_timerHandler
 40938 ;;		_timerTick
 40939 ;; This function is called by:
 40940 ;;		_TMR5_Initialize
 40941 ;;		_TMR5_ISR
 40942 ;; This function uses a non-reentrant model
 40943 ;;
 40944                           
 40945                           	psect	text256
 40946  00A8DA                     __ptext256:
 40947                           	opt callstack 0
 40948  00A8DA                     _TMR5_InterruptTicker:
 40949                           	opt callstack 12
 40950                           
 40951                           ;tmr5.c: 184: timerTick();
 40952                           
 40953                           ; BSR set to: 15
 40954                           ;incstack = 0
 40955  00A8DA  EC7B  F054         	call	_timerTick	;wreg free
 40956                           
 40957                           ;tmr5.c: 185: timerHandler();
 40958  00A8DE  EC95  F02F         	call	_timerHandler	;wreg free
 40959  00A8E2  0012               	return		;funcret
 40960  00A8E4                     __end_of_TMR5_InterruptTicker:
 40961                           	opt callstack 0
 40962                           
 40963 ;; *************** function _timerTick *****************
 40964 ;; Defined at:
 40965 ;;		line 17 in file "tmrAPP.c"
 40966 ;; Parameters:    Size  Location     Type
 40967 ;;		None
 40968 ;; Auto vars:     Size  Location     Type
 40969 ;;		None
 40970 ;; Return value:  Size  Location     Type
 40971 ;;                  1    wreg      void 
 40972 ;; Registers used:
 40973 ;;		status,2, status,0
 40974 ;; Tracked objects:
 40975 ;;		On entry : 0/0
 40976 ;;		On exit  : 0/0
 40977 ;;		Unchanged: 0/0
 40978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40983 ;;Total ram usage:        0 bytes
 40984 ;; Hardware stack levels used:    1
 40985 ;; This function calls:
 40986 ;;		Nothing
 40987 ;; This function is called by:
 40988 ;;		_TMR5_InterruptTicker
 40989 ;; This function uses a non-reentrant model
 40990 ;;
 40991                           
 40992                           	psect	text257
 40993  00A8F6                     __ptext257:
 40994                           	opt callstack 0
 40995  00A8F6                     _timerTick:
 40996                           	opt callstack 13
 40997                           
 40998                           ;tmrAPP.c: 18: msCounter++;
 40999                           
 41000                           ;incstack = 0
 41001  00A8F6  0101               	movlb	1	; () banked
 41002  00A8F8  4B1C               	infsnz	_msCounter& (0+255),f,b
 41003  00A8FA  2B1D               	incf	(_msCounter+1)& (0+255),f,b
 41004                           
 41005                           ; BSR set to: 1
 41006  00A8FC  0012               	return		;funcret
 41007  00A8FE                     __end_of_timerTick:
 41008                           	opt callstack 0
 41009                           
 41010 ;; *************** function _timerHandler *****************
 41011 ;; Defined at:
 41012 ;;		line 25 in file "tmrAPP.c"
 41013 ;; Parameters:    Size  Location     Type
 41014 ;;		None
 41015 ;; Auto vars:     Size  Location     Type
 41016 ;;		None
 41017 ;; Return value:  Size  Location     Type
 41018 ;;                  1    wreg      void 
 41019 ;; Registers used:
 41020 ;;		wreg, status,2, status,0, cstack
 41021 ;; Tracked objects:
 41022 ;;		On entry : 0/0
 41023 ;;		On exit  : 0/0
 41024 ;;		Unchanged: 0/0
 41025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41030 ;;Total ram usage:        0 bytes
 41031 ;; Hardware stack levels used:    1
 41032 ;; Hardware stack levels required when called:    1
 41033 ;; This function calls:
 41034 ;;		___lbmod
 41035 ;;		i2___awdiv
 41036 ;;		i2___lwdiv
 41037 ;;		i2___lwmod
 41038 ;; This function is called by:
 41039 ;;		_TMR5_InterruptTicker
 41040 ;; This function uses a non-reentrant model
 41041 ;;
 41042                           
 41043                           	psect	text258
 41044  005F2A                     __ptext258:
 41045                           	opt callstack 0
 41046  005F2A                     _timerHandler:
 41047                           	opt callstack 12
 41048                           
 41049                           ;tmrAPP.c: 26: timer.ms += msCounter;
 41050                           
 41051                           ; BSR set to: 1
 41052                           ;incstack = 0
 41053  005F2A  0101               	movlb	1	; () banked
 41054  005F2C  511C               	movf	_msCounter& (0+255),w,b
 41055  005F2E  2700               	addwf	_timer& (0+255),f,b
 41056  005F30  511D               	movf	(_msCounter+1)& (0+255),w,b
 41057  005F32  2301               	addwfc	(_timer+1)& (0+255),f,b
 41058                           
 41059                           ; BSR set to: 1
 41060                           ;tmrAPP.c: 27: msCounter = 0;
 41061  005F34  0E00               	movlw	0
 41062  005F36  6F1D               	movwf	(_msCounter+1)& (0+255),b
 41063  005F38  0E00               	movlw	0
 41064  005F3A  6F1C               	movwf	_msCounter& (0+255),b
 41065                           
 41066                           ; BSR set to: 1
 41067                           ;tmrAPP.c: 28: if(timer.ms/1000){
 41068  005F3C  C100  F001         	movff	_timer,i2___lwdiv@dividend
 41069  005F40  C101  F002         	movff	_timer+1,i2___lwdiv@dividend+1
 41070  005F44  0E03               	movlw	3
 41071  005F46  6E04               	movwf	i2___lwdiv@divisor+1,c
 41072  005F48  0EE8               	movlw	232
 41073  005F4A  6E03               	movwf	i2___lwdiv@divisor,c
 41074  005F4C  EC93  F04A         	call	i2___lwdiv	;wreg free
 41075  005F50  5001               	movf	?i2___lwdiv,w,c
 41076  005F52  1002               	iorwf	?i2___lwdiv+1,w,c
 41077  005F54  B4D8               	btfsc	status,2,c
 41078  005F56  D01B               	goto	i2l3187
 41079                           
 41080                           ;tmrAPP.c: 29: timer.sec += timer.ms/1000;
 41081  005F58  C100  F001         	movff	_timer,i2___lwdiv@dividend
 41082  005F5C  C101  F002         	movff	_timer+1,i2___lwdiv@dividend+1
 41083  005F60  0E03               	movlw	3
 41084  005F62  6E04               	movwf	i2___lwdiv@divisor+1,c
 41085  005F64  0EE8               	movlw	232
 41086  005F66  6E03               	movwf	i2___lwdiv@divisor,c
 41087  005F68  EC93  F04A         	call	i2___lwdiv	;wreg free
 41088  005F6C  5001               	movf	?i2___lwdiv,w,c
 41089  005F6E  0101               	movlb	1	; () banked
 41090  005F70  2702               	addwf	(_timer+2)& (0+255),f,b
 41091                           
 41092                           ;tmrAPP.c: 30: timer.ms %= 1000;
 41093  005F72  C100  F001         	movff	_timer,i2___lwmod@dividend
 41094  005F76  C101  F002         	movff	_timer+1,i2___lwmod@dividend+1
 41095  005F7A  0E03               	movlw	3
 41096  005F7C  6E04               	movwf	i2___lwmod@divisor+1,c
 41097  005F7E  0EE8               	movlw	232
 41098  005F80  6E03               	movwf	i2___lwmod@divisor,c
 41099  005F82  EC26  F04D         	call	i2___lwmod	;wreg free
 41100  005F86  C001  F100         	movff	?i2___lwmod,_timer
 41101  005F8A  C002  F101         	movff	?i2___lwmod+1,_timer+1
 41102  005F8E                     i2l3187:
 41103                           
 41104                           ;tmrAPP.c: 32: };tmrAPP.c: 33: if (timer.sec/60){
 41105  005F8E  C102  F001         	movff	_timer+2,i2___awdiv@dividend
 41106  005F92  6A02               	clrf	i2___awdiv@dividend+1,c
 41107  005F94  0E00               	movlw	0
 41108  005F96  6E04               	movwf	i2___awdiv@divisor+1,c
 41109  005F98  0E3C               	movlw	60
 41110  005F9A  6E03               	movwf	i2___awdiv@divisor,c
 41111  005F9C  EC1B  F043         	call	i2___awdiv	;wreg free
 41112  005FA0  5001               	movf	?i2___awdiv,w,c
 41113  005FA2  1002               	iorwf	?i2___awdiv+1,w,c
 41114  005FA4  B4D8               	btfsc	status,2,c
 41115  005FA6  D013               	goto	i2l3188
 41116                           
 41117                           ;tmrAPP.c: 34: timer.min += timer.sec/60;
 41118  005FA8  C102  F001         	movff	_timer+2,i2___awdiv@dividend
 41119  005FAC  6A02               	clrf	i2___awdiv@dividend+1,c
 41120  005FAE  0E00               	movlw	0
 41121  005FB0  6E04               	movwf	i2___awdiv@divisor+1,c
 41122  005FB2  0E3C               	movlw	60
 41123  005FB4  6E03               	movwf	i2___awdiv@divisor,c
 41124  005FB6  EC1B  F043         	call	i2___awdiv	;wreg free
 41125  005FBA  5001               	movf	?i2___awdiv,w,c
 41126  005FBC  0101               	movlb	1	; () banked
 41127  005FBE  2703               	addwf	(_timer+3)& (0+255),f,b
 41128                           
 41129                           ;tmrAPP.c: 35: timer.sec %= 60;
 41130  005FC0  0E3C               	movlw	60
 41131  005FC2  6E01               	movwf	___lbmod@divisor,c
 41132  005FC4  5102               	movf	(_timer+2)& (0+255),w,b
 41133  005FC6  ECD3  F050         	call	___lbmod
 41134  005FCA  0101               	movlb	1	; () banked
 41135  005FCC  6F02               	movwf	(_timer+2)& (0+255),b
 41136  005FCE                     i2l3188:
 41137                           
 41138                           ;tmrAPP.c: 36: };tmrAPP.c: 37: if (timer.min/60){
 41139  005FCE  C103  F001         	movff	_timer+3,i2___awdiv@dividend
 41140  005FD2  6A02               	clrf	i2___awdiv@dividend+1,c
 41141  005FD4  0E00               	movlw	0
 41142  005FD6  6E04               	movwf	i2___awdiv@divisor+1,c
 41143  005FD8  0E3C               	movlw	60
 41144  005FDA  6E03               	movwf	i2___awdiv@divisor,c
 41145  005FDC  EC1B  F043         	call	i2___awdiv	;wreg free
 41146  005FE0  5001               	movf	?i2___awdiv,w,c
 41147  005FE2  1002               	iorwf	?i2___awdiv+1,w,c
 41148  005FE4  B4D8               	btfsc	status,2,c
 41149  005FE6  D013               	goto	i2l3189
 41150                           
 41151                           ;tmrAPP.c: 38: timer.hour += timer.min/60;
 41152  005FE8  C103  F001         	movff	_timer+3,i2___awdiv@dividend
 41153  005FEC  6A02               	clrf	i2___awdiv@dividend+1,c
 41154  005FEE  0E00               	movlw	0
 41155  005FF0  6E04               	movwf	i2___awdiv@divisor+1,c
 41156  005FF2  0E3C               	movlw	60
 41157  005FF4  6E03               	movwf	i2___awdiv@divisor,c
 41158  005FF6  EC1B  F043         	call	i2___awdiv	;wreg free
 41159  005FFA  5001               	movf	?i2___awdiv,w,c
 41160  005FFC  0101               	movlb	1	; () banked
 41161  005FFE  2704               	addwf	(_timer+4)& (0+255),f,b
 41162                           
 41163                           ;tmrAPP.c: 39: timer.min %= 60;
 41164  006000  0E3C               	movlw	60
 41165  006002  6E01               	movwf	___lbmod@divisor,c
 41166  006004  5103               	movf	(_timer+3)& (0+255),w,b
 41167  006006  ECD3  F050         	call	___lbmod
 41168  00600A  0101               	movlb	1	; () banked
 41169  00600C  6F03               	movwf	(_timer+3)& (0+255),b
 41170  00600E                     i2l3189:
 41171                           
 41172                           ;tmrAPP.c: 40: };tmrAPP.c: 41: if(timer.hour/24){
 41173  00600E  C104  F001         	movff	_timer+4,i2___awdiv@dividend
 41174  006012  6A02               	clrf	i2___awdiv@dividend+1,c
 41175  006014  0E00               	movlw	0
 41176  006016  6E04               	movwf	i2___awdiv@divisor+1,c
 41177  006018  0E18               	movlw	24
 41178  00601A  6E03               	movwf	i2___awdiv@divisor,c
 41179  00601C  EC1B  F043         	call	i2___awdiv	;wreg free
 41180  006020  5001               	movf	?i2___awdiv,w,c
 41181  006022  1002               	iorwf	?i2___awdiv+1,w,c
 41182  006024  B4D8               	btfsc	status,2,c
 41183  006026  0012               	return	
 41184                           
 41185                           ;tmrAPP.c: 42: timer.day += timer.hour/24;
 41186  006028  C104  F001         	movff	_timer+4,i2___awdiv@dividend
 41187  00602C  6A02               	clrf	i2___awdiv@dividend+1,c
 41188  00602E  0E00               	movlw	0
 41189  006030  6E04               	movwf	i2___awdiv@divisor+1,c
 41190  006032  0E18               	movlw	24
 41191  006034  6E03               	movwf	i2___awdiv@divisor,c
 41192  006036  EC1B  F043         	call	i2___awdiv	;wreg free
 41193  00603A  5001               	movf	?i2___awdiv,w,c
 41194  00603C  0101               	movlb	1	; () banked
 41195  00603E  2705               	addwf	(_timer+5)& (0+255),f,b
 41196                           
 41197                           ;tmrAPP.c: 43: timer.hour %= 24;
 41198  006040  0E18               	movlw	24
 41199  006042  6E01               	movwf	___lbmod@divisor,c
 41200  006044  5104               	movf	(_timer+4)& (0+255),w,b
 41201  006046  ECD3  F050         	call	___lbmod
 41202  00604A  0101               	movlb	1	; () banked
 41203  00604C  6F04               	movwf	(_timer+4)& (0+255),b
 41204  00604E  0012               	return		;funcret
 41205  006050                     __end_of_timerHandler:
 41206                           	opt callstack 0
 41207                           
 41208 ;; *************** function i2___lwmod *****************
 41209 ;; Defined at:
 41210 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 41211 ;; Parameters:    Size  Location     Type
 41212 ;;  dividend        2    0[COMRAM] unsigned int 
 41213 ;;  divisor         2    2[COMRAM] unsigned int 
 41214 ;; Auto vars:     Size  Location     Type
 41215 ;;  __lwmod         1    4[COMRAM] unsigned char 
 41216 ;; Return value:  Size  Location     Type
 41217 ;;                  2    0[COMRAM] unsigned int 
 41218 ;; Registers used:
 41219 ;;		wreg, status,2, status,0
 41220 ;; Tracked objects:
 41221 ;;		On entry : 0/0
 41222 ;;		On exit  : 0/0
 41223 ;;		Unchanged: 0/0
 41224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41225 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41228 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41229 ;;Total ram usage:        5 bytes
 41230 ;; Hardware stack levels used:    1
 41231 ;; This function calls:
 41232 ;;		Nothing
 41233 ;; This function is called by:
 41234 ;;		_timerHandler
 41235 ;; This function uses a non-reentrant model
 41236 ;;
 41237                           
 41238                           	psect	text259
 41239  009A4C                     __ptext259:
 41240                           	opt callstack 0
 41241  009A4C                     i2___lwmod:
 41242                           	opt callstack 12
 41243                           
 41244                           ;incstack = 0
 41245  009A4C  5003               	movf	i2___lwmod@divisor,w,c
 41246  009A4E  1004               	iorwf	i2___lwmod@divisor+1,w,c
 41247  009A50  B4D8               	btfsc	status,2,c
 41248  009A52  D018               	goto	i2l4008
 41249  009A54  0E01               	movlw	1
 41250  009A56  6E05               	movwf	i2___lwmod@counter,c
 41251  009A58  D004               	goto	i2l15870
 41252  009A5A                     i2l15868:
 41253  009A5A  90D8               	bcf	status,0,c
 41254  009A5C  3603               	rlcf	i2___lwmod@divisor,f,c
 41255  009A5E  3604               	rlcf	i2___lwmod@divisor+1,f,c
 41256  009A60  2A05               	incf	i2___lwmod@counter,f,c
 41257  009A62                     i2l15870:
 41258  009A62  AE04               	btfss	i2___lwmod@divisor+1,7,c
 41259  009A64  D7FA               	goto	i2l15868
 41260  009A66                     i2u1644_40:
 41261  009A66  5003               	movf	i2___lwmod@divisor,w,c
 41262  009A68  5C01               	subwf	i2___lwmod@dividend,w,c
 41263  009A6A  5004               	movf	i2___lwmod@divisor+1,w,c
 41264  009A6C  5802               	subwfb	i2___lwmod@dividend+1,w,c
 41265  009A6E  A0D8               	btfss	status,0,c
 41266  009A70  D004               	goto	i2l15876
 41267  009A72  5003               	movf	i2___lwmod@divisor,w,c
 41268  009A74  5E01               	subwf	i2___lwmod@dividend,f,c
 41269  009A76  5004               	movf	i2___lwmod@divisor+1,w,c
 41270  009A78  5A02               	subwfb	i2___lwmod@dividend+1,f,c
 41271  009A7A                     i2l15876:
 41272  009A7A  90D8               	bcf	status,0,c
 41273  009A7C  3204               	rrcf	i2___lwmod@divisor+1,f,c
 41274  009A7E  3203               	rrcf	i2___lwmod@divisor,f,c
 41275  009A80  2E05               	decfsz	i2___lwmod@counter,f,c
 41276  009A82  D7F1               	goto	i2u1644_40
 41277  009A84                     i2l4008:
 41278  009A84  C001  F001         	movff	i2___lwmod@dividend,?i2___lwmod
 41279  009A88  C002  F002         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 41280  009A8C  0012               	return		;funcret
 41281  009A8E                     __end_ofi2___lwmod:
 41282                           	opt callstack 0
 41283                           
 41284 ;; *************** function i2___lwdiv *****************
 41285 ;; Defined at:
 41286 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 41287 ;; Parameters:    Size  Location     Type
 41288 ;;  dividend        2    0[COMRAM] unsigned int 
 41289 ;;  divisor         2    2[COMRAM] unsigned int 
 41290 ;; Auto vars:     Size  Location     Type
 41291 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 41292 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 41293 ;; Return value:  Size  Location     Type
 41294 ;;                  2    0[COMRAM] unsigned int 
 41295 ;; Registers used:
 41296 ;;		wreg, status,2, status,0
 41297 ;; Tracked objects:
 41298 ;;		On entry : 0/0
 41299 ;;		On exit  : 0/0
 41300 ;;		Unchanged: 0/0
 41301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41302 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41303 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41305 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41306 ;;Total ram usage:        7 bytes
 41307 ;; Hardware stack levels used:    1
 41308 ;; This function calls:
 41309 ;;		Nothing
 41310 ;; This function is called by:
 41311 ;;		_timerHandler
 41312 ;; This function uses a non-reentrant model
 41313 ;;
 41314                           
 41315                           	psect	text260
 41316  009526                     __ptext260:
 41317                           	opt callstack 0
 41318  009526                     i2___lwdiv:
 41319                           	opt callstack 12
 41320                           
 41321                           ;incstack = 0
 41322  009526  0E00               	movlw	0
 41323  009528  6E06               	movwf	i2___lwdiv@quotient+1,c
 41324  00952A  0E00               	movlw	0
 41325  00952C  6E05               	movwf	i2___lwdiv@quotient,c
 41326  00952E  5003               	movf	i2___lwdiv@divisor,w,c
 41327  009530  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 41328  009532  B4D8               	btfsc	status,2,c
 41329  009534  D01C               	goto	i2l3998
 41330  009536  0E01               	movlw	1
 41331  009538  6E07               	movwf	i2___lwdiv@counter,c
 41332  00953A  D004               	goto	i2l15850
 41333  00953C                     i2l15848:
 41334  00953C  90D8               	bcf	status,0,c
 41335  00953E  3603               	rlcf	i2___lwdiv@divisor,f,c
 41336  009540  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 41337  009542  2A07               	incf	i2___lwdiv@counter,f,c
 41338  009544                     i2l15850:
 41339  009544  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 41340  009546  D7FA               	goto	i2l15848
 41341  009548                     i2u1641_40:
 41342  009548  90D8               	bcf	status,0,c
 41343  00954A  3605               	rlcf	i2___lwdiv@quotient,f,c
 41344  00954C  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 41345  00954E  5003               	movf	i2___lwdiv@divisor,w,c
 41346  009550  5C01               	subwf	i2___lwdiv@dividend,w,c
 41347  009552  5004               	movf	i2___lwdiv@divisor+1,w,c
 41348  009554  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 41349  009556  A0D8               	btfss	status,0,c
 41350  009558  D005               	goto	i2l15860
 41351  00955A  5003               	movf	i2___lwdiv@divisor,w,c
 41352  00955C  5E01               	subwf	i2___lwdiv@dividend,f,c
 41353  00955E  5004               	movf	i2___lwdiv@divisor+1,w,c
 41354  009560  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 41355  009562  8005               	bsf	i2___lwdiv@quotient,0,c
 41356  009564                     i2l15860:
 41357  009564  90D8               	bcf	status,0,c
 41358  009566  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 41359  009568  3203               	rrcf	i2___lwdiv@divisor,f,c
 41360  00956A  2E07               	decfsz	i2___lwdiv@counter,f,c
 41361  00956C  D7ED               	goto	i2u1641_40
 41362  00956E                     i2l3998:
 41363  00956E  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 41364  009572  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 41365  009576  0012               	return		;funcret
 41366  009578                     __end_ofi2___lwdiv:
 41367                           	opt callstack 0
 41368                           
 41369 ;; *************** function i2___awdiv *****************
 41370 ;; Defined at:
 41371 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 41372 ;; Parameters:    Size  Location     Type
 41373 ;;  dividend        2    0[COMRAM] int 
 41374 ;;  divisor         2    2[COMRAM] int 
 41375 ;; Auto vars:     Size  Location     Type
 41376 ;;  __awdiv         2    6[COMRAM] int 
 41377 ;;  __awdiv         1    5[COMRAM] unsigned char 
 41378 ;;  __awdiv         1    4[COMRAM] unsigned char 
 41379 ;; Return value:  Size  Location     Type
 41380 ;;                  2    0[COMRAM] int 
 41381 ;; Registers used:
 41382 ;;		wreg, status,2, status,0
 41383 ;; Tracked objects:
 41384 ;;		On entry : 0/0
 41385 ;;		On exit  : 0/0
 41386 ;;		Unchanged: 0/0
 41387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41389 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41391 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41392 ;;Total ram usage:        8 bytes
 41393 ;; Hardware stack levels used:    1
 41394 ;; This function calls:
 41395 ;;		Nothing
 41396 ;; This function is called by:
 41397 ;;		_timerHandler
 41398 ;; This function uses a non-reentrant model
 41399 ;;
 41400                           
 41401                           	psect	text261
 41402  008636                     __ptext261:
 41403                           	opt callstack 0
 41404  008636                     i2___awdiv:
 41405                           	opt callstack 12
 41406                           
 41407                           ;incstack = 0
 41408  008636  0E00               	movlw	0
 41409  008638  6E06               	movwf	i2___awdiv@sign,c
 41410  00863A  AE04               	btfss	i2___awdiv@divisor+1,7,c
 41411  00863C  D006               	goto	i2l15806
 41412  00863E  6C03               	negf	i2___awdiv@divisor,c
 41413  008640  1E04               	comf	i2___awdiv@divisor+1,f,c
 41414  008642  B0D8               	btfsc	status,0,c
 41415  008644  2A04               	incf	i2___awdiv@divisor+1,f,c
 41416  008646  0E01               	movlw	1
 41417  008648  6E06               	movwf	i2___awdiv@sign,c
 41418  00864A                     i2l15806:
 41419  00864A  AE02               	btfss	i2___awdiv@dividend+1,7,c
 41420  00864C  D006               	goto	i2l15812
 41421  00864E  6C01               	negf	i2___awdiv@dividend,c
 41422  008650  1E02               	comf	i2___awdiv@dividend+1,f,c
 41423  008652  B0D8               	btfsc	status,0,c
 41424  008654  2A02               	incf	i2___awdiv@dividend+1,f,c
 41425  008656  0E01               	movlw	1
 41426  008658  1A06               	xorwf	i2___awdiv@sign,f,c
 41427  00865A                     i2l15812:
 41428  00865A  0E00               	movlw	0
 41429  00865C  6E08               	movwf	i2___awdiv@quotient+1,c
 41430  00865E  0E00               	movlw	0
 41431  008660  6E07               	movwf	i2___awdiv@quotient,c
 41432  008662  5003               	movf	i2___awdiv@divisor,w,c
 41433  008664  1004               	iorwf	i2___awdiv@divisor+1,w,c
 41434  008666  B4D8               	btfsc	status,2,c
 41435  008668  D01C               	goto	i2l15834
 41436  00866A  0E01               	movlw	1
 41437  00866C  6E05               	movwf	i2___awdiv@counter,c
 41438  00866E  D004               	goto	i2l15820
 41439  008670                     i2l15818:
 41440  008670  90D8               	bcf	status,0,c
 41441  008672  3603               	rlcf	i2___awdiv@divisor,f,c
 41442  008674  3604               	rlcf	i2___awdiv@divisor+1,f,c
 41443  008676  2A05               	incf	i2___awdiv@counter,f,c
 41444  008678                     i2l15820:
 41445  008678  AE04               	btfss	i2___awdiv@divisor+1,7,c
 41446  00867A  D7FA               	goto	i2l15818
 41447  00867C                     i2u1637_40:
 41448  00867C  90D8               	bcf	status,0,c
 41449  00867E  3607               	rlcf	i2___awdiv@quotient,f,c
 41450  008680  3608               	rlcf	i2___awdiv@quotient+1,f,c
 41451  008682  5003               	movf	i2___awdiv@divisor,w,c
 41452  008684  5C01               	subwf	i2___awdiv@dividend,w,c
 41453  008686  5004               	movf	i2___awdiv@divisor+1,w,c
 41454  008688  5802               	subwfb	i2___awdiv@dividend+1,w,c
 41455  00868A  A0D8               	btfss	status,0,c
 41456  00868C  D005               	goto	i2l15830
 41457  00868E  5003               	movf	i2___awdiv@divisor,w,c
 41458  008690  5E01               	subwf	i2___awdiv@dividend,f,c
 41459  008692  5004               	movf	i2___awdiv@divisor+1,w,c
 41460  008694  5A02               	subwfb	i2___awdiv@dividend+1,f,c
 41461  008696  8007               	bsf	i2___awdiv@quotient,0,c
 41462  008698                     i2l15830:
 41463  008698  90D8               	bcf	status,0,c
 41464  00869A  3204               	rrcf	i2___awdiv@divisor+1,f,c
 41465  00869C  3203               	rrcf	i2___awdiv@divisor,f,c
 41466  00869E  2E05               	decfsz	i2___awdiv@counter,f,c
 41467  0086A0  D7ED               	goto	i2u1637_40
 41468  0086A2                     i2l15834:
 41469  0086A2  5006               	movf	i2___awdiv@sign,w,c
 41470  0086A4  B4D8               	btfsc	status,2,c
 41471  0086A6  D004               	goto	i2l15838
 41472  0086A8  6C07               	negf	i2___awdiv@quotient,c
 41473  0086AA  1E08               	comf	i2___awdiv@quotient+1,f,c
 41474  0086AC  B0D8               	btfsc	status,0,c
 41475  0086AE  2A08               	incf	i2___awdiv@quotient+1,f,c
 41476  0086B0                     i2l15838:
 41477  0086B0  C007  F001         	movff	i2___awdiv@quotient,?i2___awdiv
 41478  0086B4  C008  F002         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 41479  0086B8  0012               	return		;funcret
 41480  0086BA                     __end_ofi2___awdiv:
 41481                           	opt callstack 0
 41482                           
 41483 ;; *************** function ___lbmod *****************
 41484 ;; Defined at:
 41485 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c"
 41486 ;; Parameters:    Size  Location     Type
 41487 ;;  dividend        1    wreg     unsigned char 
 41488 ;;  divisor         1    0[COMRAM] unsigned char 
 41489 ;; Auto vars:     Size  Location     Type
 41490 ;;  dividend        1    1[COMRAM] unsigned char 
 41491 ;;  rem             1    3[COMRAM] unsigned char 
 41492 ;;  counter         1    2[COMRAM] unsigned char 
 41493 ;; Return value:  Size  Location     Type
 41494 ;;                  1    wreg      unsigned char 
 41495 ;; Registers used:
 41496 ;;		wreg, status,2, status,0
 41497 ;; Tracked objects:
 41498 ;;		On entry : 0/0
 41499 ;;		On exit  : 0/0
 41500 ;;		Unchanged: 0/0
 41501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41502 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41503 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41505 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41506 ;;Total ram usage:        4 bytes
 41507 ;; Hardware stack levels used:    1
 41508 ;; This function calls:
 41509 ;;		Nothing
 41510 ;; This function is called by:
 41511 ;;		_timerHandler
 41512 ;;		_timerHandler16
 41513 ;; This function uses a non-reentrant model
 41514 ;;
 41515                           
 41516                           	psect	text262
 41517  00A1A6                     __ptext262:
 41518                           	opt callstack 0
 41519  00A1A6                     ___lbmod:
 41520                           	opt callstack 12
 41521                           
 41522                           ;incstack = 0
 41523                           ;___lbmod@dividend stored from wreg
 41524  00A1A6  6E02               	movwf	___lbmod@dividend,c
 41525  00A1A8  0E08               	movlw	8
 41526  00A1AA  6E03               	movwf	___lbmod@counter,c
 41527  00A1AC  0E00               	movlw	0
 41528  00A1AE  6E04               	movwf	___lbmod@rem,c
 41529  00A1B0                     i2l15750:
 41530  00A1B0  90D8               	bcf	status,0,c
 41531  00A1B2  3402               	rlcf	___lbmod@dividend,w,c
 41532  00A1B4  3404               	rlcf	___lbmod@rem,w,c
 41533  00A1B6  6E04               	movwf	___lbmod@rem,c
 41534  00A1B8  90D8               	bcf	status,0,c
 41535  00A1BA  3602               	rlcf	___lbmod@dividend,f,c
 41536  00A1BC  5001               	movf	___lbmod@divisor,w,c
 41537  00A1BE  5C04               	subwf	___lbmod@rem,w,c
 41538  00A1C0  A0D8               	btfss	status,0,c
 41539  00A1C2  D002               	goto	i2l15758
 41540  00A1C4  5001               	movf	___lbmod@divisor,w,c
 41541  00A1C6  5E04               	subwf	___lbmod@rem,f,c
 41542  00A1C8                     i2l15758:
 41543  00A1C8  2E03               	decfsz	___lbmod@counter,f,c
 41544  00A1CA  D7F2               	goto	i2l15750
 41545  00A1CC  5004               	movf	___lbmod@rem,w,c
 41546  00A1CE  0012               	return		;funcret
 41547  00A1D0                     __end_of___lbmod:
 41548                           	opt callstack 0
 41549                           
 41550 ;; *************** function _TMR3_ISR *****************
 41551 ;; Defined at:
 41552 ;;		line 160 in file "mcc_generated_files/tmr3.c"
 41553 ;; Parameters:    Size  Location     Type
 41554 ;;		None
 41555 ;; Auto vars:     Size  Location     Type
 41556 ;;		None
 41557 ;; Return value:  Size  Location     Type
 41558 ;;                  1    wreg      void 
 41559 ;; Registers used:
 41560 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 41561 ;; Tracked objects:
 41562 ;;		On entry : 0/0
 41563 ;;		On exit  : 0/0
 41564 ;;		Unchanged: 0/0
 41565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41570 ;;Total ram usage:        0 bytes
 41571 ;; Hardware stack levels used:    1
 41572 ;; Hardware stack levels required when called:    1
 41573 ;; This function calls:
 41574 ;;		Absolute function
 41575 ;;		_TMR3ISRClock
 41576 ;;		_TMR3_WriteTimer
 41577 ;; This function is called by:
 41578 ;;		_INTERRUPT_InterruptManager
 41579 ;; This function uses a non-reentrant model
 41580 ;;
 41581                           
 41582                           	psect	text263
 41583  00A076                     __ptext263:
 41584                           	opt callstack 0
 41585  00A076                     _TMR3_ISR:
 41586                           	opt callstack 14
 41587                           
 41588                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 41589                           
 41590                           ;incstack = 0
 41591  00A076  92A1               	bcf	4001,1,c	;volatile
 41592                           
 41593                           ;tmr3.c: 165: TMR3_WriteTimer(timer3ReloadVal);
 41594  00A078  C1E3  F001         	movff	_timer3ReloadVal,TMR3_WriteTimer@timerVal	;volatile
 41595  00A07C  C1E4  F002         	movff	_timer3ReloadVal+1,TMR3_WriteTimer@timerVal+1	;volatile
 41596  00A080  ECFA  F052         	call	_TMR3_WriteTimer	;wreg free
 41597                           
 41598                           ;tmr3.c: 167: if(TMR3_InterruptHandler)
 41599  00A084  0101               	movlb	1	; () banked
 41600  00A086  51E1               	movf	_TMR3_InterruptHandler& (0+255),w,b
 41601  00A088  11E2               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 41602  00A08A  B4D8               	btfsc	status,2,c
 41603  00A08C  0012               	return	
 41604                           
 41605                           ; BSR set to: 1
 41606                           ;tmr3.c: 168: {;tmr3.c: 169: TMR3_InterruptHandler();
 41607  00A08E  D801               	call	i2u1764_48
 41608  00A090  0012               	return	
 41609  00A092                     i2u1764_48:
 41610  00A092  0005               	push	
 41611  00A094  6EFA               	movwf	pclath,c
 41612  00A096  51E1               	movf	_TMR3_InterruptHandler& (0+255),w,b
 41613  00A098  6EFD               	movwf	tosl,c
 41614  00A09A  51E2               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 41615  00A09C  6EFE               	movwf	tosh,c
 41616  00A09E  6AFF               	clrf	tosu,c
 41617  00A0A0  50FA               	movf	pclath,w,c
 41618  00A0A2  0012               	return		;indir
 41619  00A0A4                     __end_of_TMR3_ISR:
 41620                           	opt callstack 0
 41621                           
 41622 ;; *************** function _TMR3_WriteTimer *****************
 41623 ;; Defined at:
 41624 ;;		line 123 in file "mcc_generated_files/tmr3.c"
 41625 ;; Parameters:    Size  Location     Type
 41626 ;;  timerVal        2    0[COMRAM] unsigned int 
 41627 ;; Auto vars:     Size  Location     Type
 41628 ;;		None
 41629 ;; Return value:  Size  Location     Type
 41630 ;;                  1    wreg      void 
 41631 ;; Registers used:
 41632 ;;		wreg, status,2
 41633 ;; Tracked objects:
 41634 ;;		On entry : 0/0
 41635 ;;		On exit  : 0/0
 41636 ;;		Unchanged: 0/0
 41637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41641 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41642 ;;Total ram usage:        2 bytes
 41643 ;; Hardware stack levels used:    1
 41644 ;; This function calls:
 41645 ;;		Nothing
 41646 ;; This function is called by:
 41647 ;;		_TMR3_ISR
 41648 ;;		_TMR3_Reload
 41649 ;; This function uses a non-reentrant model
 41650 ;;
 41651                           
 41652                           	psect	text264
 41653  00A5F4                     __ptext264:
 41654                           	opt callstack 0
 41655  00A5F4                     _TMR3_WriteTimer:
 41656                           	opt callstack 14
 41657                           
 41658                           ;tmr3.c: 125: if (T3CONbits.nT3SYNC == 1)
 41659                           
 41660                           ;incstack = 0
 41661  00A5F4  A4B1               	btfss	4017,2,c	;volatile
 41662  00A5F6  D007               	goto	i2l16608
 41663                           
 41664                           ;tmr3.c: 126: {;tmr3.c: 128: T3CONbits.TMR3ON = 0;
 41665  00A5F8  90B1               	bcf	4017,0,c	;volatile
 41666                           
 41667                           ;tmr3.c: 131: TMR3H = (timerVal >> 8);
 41668  00A5FA  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 41669  00A5FC  6EB3               	movwf	4019,c	;volatile
 41670                           
 41671                           ;tmr3.c: 132: TMR3L = (uint8_t) timerVal;
 41672  00A5FE  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 41673                           
 41674                           ;tmr3.c: 135: T3CONbits.TMR3ON =1;
 41675  00A602  80B1               	bsf	4017,0,c	;volatile
 41676                           
 41677                           ;tmr3.c: 136: }
 41678  00A604  0012               	return	
 41679  00A606                     i2l16608:
 41680                           
 41681                           ;tmr3.c: 137: else;tmr3.c: 138: {;tmr3.c: 140: TMR3H = (timerVal >> 8);
 41682  00A606  5002               	movf	TMR3_WriteTimer@timerVal+1,w,c
 41683  00A608  6EB3               	movwf	4019,c	;volatile
 41684                           
 41685                           ;tmr3.c: 141: TMR3L = (uint8_t) timerVal;
 41686  00A60A  C001  FFB2         	movff	TMR3_WriteTimer@timerVal,4018	;volatile
 41687  00A60E  0012               	return		;funcret
 41688  00A610                     __end_of_TMR3_WriteTimer:
 41689                           	opt callstack 0
 41690                           
 41691 ;; *************** function _TMR3ISRClock *****************
 41692 ;; Defined at:
 41693 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 41694 ;; Parameters:    Size  Location     Type
 41695 ;;		None
 41696 ;; Auto vars:     Size  Location     Type
 41697 ;;		None
 41698 ;; Return value:  Size  Location     Type
 41699 ;;                  1    wreg      void 
 41700 ;; Registers used:
 41701 ;;		wreg, status,2, status,0
 41702 ;; Tracked objects:
 41703 ;;		On entry : 0/0
 41704 ;;		On exit  : 0/0
 41705 ;;		Unchanged: 0/0
 41706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41711 ;;Total ram usage:        0 bytes
 41712 ;; Hardware stack levels used:    1
 41713 ;; This function calls:
 41714 ;;		Nothing
 41715 ;; This function is called by:
 41716 ;;		_TMR3_Initialize
 41717 ;;		_TMR3_ISR
 41718 ;; This function uses a non-reentrant model
 41719 ;;
 41720                           
 41721                           	psect	text265
 41722  00A92C                     __ptext265:
 41723                           	opt callstack 0
 41724  00A92C                     _TMR3ISRClock:
 41725                           	opt callstack 14
 41726                           
 41727                           ;tmr3.c: 180: LATE ^= 0x1;
 41728                           
 41729                           ;incstack = 0
 41730  00A92C  0E01               	movlw	1
 41731  00A92E  1A8D               	xorwf	3981,f,c	;volatile
 41732  00A930  0012               	return		;funcret
 41733  00A932                     __end_of_TMR3ISRClock:
 41734                           	opt callstack 0
 41735                           
 41736 ;; *************** function _TMR1_ISR *****************
 41737 ;; Defined at:
 41738 ;;		line 161 in file "mcc_generated_files/tmr1.c"
 41739 ;; Parameters:    Size  Location     Type
 41740 ;;		None
 41741 ;; Auto vars:     Size  Location     Type
 41742 ;;		None
 41743 ;; Return value:  Size  Location     Type
 41744 ;;                  1    wreg      void 
 41745 ;; Registers used:
 41746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 41747 ;; Tracked objects:
 41748 ;;		On entry : 0/0
 41749 ;;		On exit  : 0/0
 41750 ;;		Unchanged: 0/0
 41751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41756 ;;Total ram usage:        0 bytes
 41757 ;; Hardware stack levels used:    1
 41758 ;; Hardware stack levels required when called:    5
 41759 ;; This function calls:
 41760 ;;		_TMR1_CallBack
 41761 ;;		i2_TMR1_WriteTimer
 41762 ;; This function is called by:
 41763 ;;		_INTERRUPT_InterruptManager
 41764 ;; This function uses a non-reentrant model
 41765 ;;
 41766                           
 41767                           	psect	text266
 41768  00A6D8                     __ptext266:
 41769                           	opt callstack 0
 41770  00A6D8                     _TMR1_ISR:
 41771                           	opt callstack 10
 41772                           
 41773                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
 41774                           
 41775                           ;incstack = 0
 41776  00A6D8  909E               	bcf	3998,0,c	;volatile
 41777                           
 41778                           ;tmr1.c: 166: TMR1_WriteTimer(timer1ReloadVal);
 41779  00A6DA  C1E7  F001         	movff	_timer1ReloadVal,i2TMR1_WriteTimer@timerVal	;volatile
 41780  00A6DE  C1E8  F002         	movff	_timer1ReloadVal+1,i2TMR1_WriteTimer@timerVal+1	;volatile
 41781  00A6E2  EC08  F053         	call	i2_TMR1_WriteTimer	;wreg free
 41782                           
 41783                           ;tmr1.c: 170: TMR1_CallBack();
 41784  00A6E6  EC38  F052         	call	_TMR1_CallBack	;wreg free
 41785  00A6EA  0012               	return		;funcret
 41786  00A6EC                     __end_of_TMR1_ISR:
 41787                           	opt callstack 0
 41788                           
 41789 ;; *************** function _TMR1_CallBack *****************
 41790 ;; Defined at:
 41791 ;;		line 173 in file "mcc_generated_files/tmr1.c"
 41792 ;; Parameters:    Size  Location     Type
 41793 ;;		None
 41794 ;; Auto vars:     Size  Location     Type
 41795 ;;		None
 41796 ;; Return value:  Size  Location     Type
 41797 ;;                  1    wreg      void 
 41798 ;; Registers used:
 41799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 41800 ;; Tracked objects:
 41801 ;;		On entry : 0/0
 41802 ;;		On exit  : 0/0
 41803 ;;		Unchanged: 0/0
 41804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41809 ;;Total ram usage:        0 bytes
 41810 ;; Hardware stack levels used:    1
 41811 ;; Hardware stack levels required when called:    4
 41812 ;; This function calls:
 41813 ;;		Absolute function
 41814 ;;		_TMR1_DefaultInterruptHandler
 41815 ;;		_TMR_ISR_lora
 41816 ;; This function is called by:
 41817 ;;		_TMR1_ISR
 41818 ;; This function uses a non-reentrant model
 41819 ;;
 41820                           
 41821                           	psect	text267
 41822  00A470                     __ptext267:
 41823                           	opt callstack 0
 41824  00A470                     _TMR1_CallBack:
 41825                           	opt callstack 10
 41826                           
 41827                           ;tmr1.c: 176: if(TMR1_InterruptHandler)
 41828                           
 41829                           ;incstack = 0
 41830  00A470  0101               	movlb	1	; () banked
 41831  00A472  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 41832  00A474  11E6               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 41833  00A476  B4D8               	btfsc	status,2,c
 41834  00A478  0012               	return	
 41835                           
 41836                           ; BSR set to: 1
 41837                           ;tmr1.c: 177: {;tmr1.c: 178: TMR1_InterruptHandler();
 41838  00A47A  D801               	call	i2u1708_48
 41839  00A47C  0012               	return	
 41840  00A47E                     i2u1708_48:
 41841  00A47E  0005               	push	
 41842  00A480  6EFA               	movwf	pclath,c
 41843  00A482  51E5               	movf	_TMR1_InterruptHandler& (0+255),w,b
 41844  00A484  6EFD               	movwf	tosl,c
 41845  00A486  51E6               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 41846  00A488  6EFE               	movwf	tosh,c
 41847  00A48A  6AFF               	clrf	tosu,c
 41848  00A48C  50FA               	movf	pclath,w,c
 41849  00A48E  0012               	return		;indir
 41850  00A490                     __end_of_TMR1_CallBack:
 41851                           	opt callstack 0
 41852                           
 41853 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 41854 ;; Defined at:
 41855 ;;		line 186 in file "mcc_generated_files/tmr1.c"
 41856 ;; Parameters:    Size  Location     Type
 41857 ;;		None
 41858 ;; Auto vars:     Size  Location     Type
 41859 ;;		None
 41860 ;; Return value:  Size  Location     Type
 41861 ;;                  1    wreg      void 
 41862 ;; Registers used:
 41863 ;;		None
 41864 ;; Tracked objects:
 41865 ;;		On entry : 0/0
 41866 ;;		On exit  : 0/0
 41867 ;;		Unchanged: 0/0
 41868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41873 ;;Total ram usage:        0 bytes
 41874 ;; Hardware stack levels used:    1
 41875 ;; This function calls:
 41876 ;;		Nothing
 41877 ;; This function is called by:
 41878 ;;		_TMR1_Initialize
 41879 ;;		_TMR1_CallBack
 41880 ;; This function uses a non-reentrant model
 41881 ;;
 41882                           
 41883                           	psect	text268
 41884  00A96A                     __ptext268:
 41885                           	opt callstack 0
 41886  00A96A                     _TMR1_DefaultInterruptHandler:
 41887                           	opt callstack 13
 41888                           
 41889                           ;incstack = 0
 41890  00A96A  0012               	return		;funcret
 41891  00A96C                     __end_of_TMR1_DefaultInterruptHandler:
 41892                           	opt callstack 0
 41893                           
 41894 ;; *************** function _TMR_ISR_lora *****************
 41895 ;; Defined at:
 41896 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 41897 ;; Parameters:    Size  Location     Type
 41898 ;;		None
 41899 ;; Auto vars:     Size  Location     Type
 41900 ;;		None
 41901 ;; Return value:  Size  Location     Type
 41902 ;;                  1    wreg      void 
 41903 ;; Registers used:
 41904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41905 ;; Tracked objects:
 41906 ;;		On entry : 0/0
 41907 ;;		On exit  : 0/0
 41908 ;;		Unchanged: 0/0
 41909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41914 ;;Total ram usage:        0 bytes
 41915 ;; Hardware stack levels used:    1
 41916 ;; Hardware stack levels required when called:    3
 41917 ;; This function calls:
 41918 ;;		i2_SwTimersInterrupt
 41919 ;;		i2_TMR_SwapTimer
 41920 ;; This function is called by:
 41921 ;;		_TMR_ISR_Lora_Init
 41922 ;;		_TMR1_CallBack
 41923 ;; This function uses a non-reentrant model
 41924 ;;
 41925                           
 41926                           	psect	text269
 41927  00928A                     __ptext269:
 41928                           	opt callstack 0
 41929  00928A                     _TMR_ISR_lora:
 41930                           	opt callstack 10
 41931                           
 41932                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 41933                           
 41934                           ;incstack = 0
 41935  00928A  0E01               	movlw	1
 41936  00928C  6E44               	movwf	_timerOverflow,c	;volatile
 41937                           
 41938                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 41939  00928E  EC65  F037         	call	i2_SwTimersInterrupt	;wreg free
 41940  009292  C019  F052         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 41941  009296  C01A  F053         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 41942  00929A  C01B  F054         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 41943  00929E  C01C  F055         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 41944                           
 41945                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 41946  0092A2  5055               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 41947  0092A4  E11C               	bnz	i2l1343
 41948  0092A6  0E00               	movlw	0
 41949  0092A8  5C52               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 41950  0092AA  0E00               	movlw	0
 41951  0092AC  5853               	subwfb	_ticksToScheduledInterrupt+1,w,c	;volatile
 41952  0092AE  0E01               	movlw	1
 41953  0092B0  5854               	subwfb	_ticksToScheduledInterrupt+2,w,c	;volatile
 41954  0092B2  B0D8               	btfsc	status,0,c
 41955  0092B4  0012               	return	
 41956                           
 41957                           ;tmr_lora_addons.c: 66: {;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticks
      +                          ToScheduledInterrupt;
 41958  0092B6  5052               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 41959  0092B8  0800               	sublw	0
 41960  0092BA  6E3E               	movwf	_reloadVal,c	;volatile
 41961  0092BC  5053               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 41962  0092BE  A0D8               	btfss	status,0,c
 41963  0092C0  2AE8               	incf	wreg,f,c
 41964  0092C2  0800               	sublw	0
 41965  0092C4  6E3F               	movwf	_reloadVal+1,c	;volatile
 41966                           
 41967                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 41968  0092C6  C03E  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 41969  0092CA  C03F  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 41970  0092CE  EC87  F04D         	call	i2_TMR_SwapTimer	;wreg free
 41971  0092D2  C009  F036         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 41972  0092D6  C00A  F037         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 41973  0092DA  6A38               	clrf	_ticksAdded+2,c	;volatile
 41974  0092DC  6A39               	clrf	_ticksAdded+3,c	;volatile
 41975  0092DE                     i2l1343:
 41976  0092DE  0012               	return		;funcret
 41977  0092E0                     __end_of_TMR_ISR_lora:
 41978                           	opt callstack 0
 41979                           
 41980 ;; *************** function i2_TMR_SwapTimer *****************
 41981 ;; Defined at:
 41982 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41983 ;; Parameters:    Size  Location     Type
 41984 ;;  timerVal        2    8[COMRAM] unsigned int 
 41985 ;; Auto vars:     Size  Location     Type
 41986 ;;		None
 41987 ;; Return value:  Size  Location     Type
 41988 ;;                  2    8[COMRAM] unsigned int 
 41989 ;; Registers used:
 41990 ;;		wreg, status,2, status,0, cstack
 41991 ;; Tracked objects:
 41992 ;;		On entry : 0/0
 41993 ;;		On exit  : 0/0
 41994 ;;		Unchanged: 0/0
 41995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41999 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42000 ;;Total ram usage:        2 bytes
 42001 ;; Hardware stack levels used:    1
 42002 ;; Hardware stack levels required when called:    1
 42003 ;; This function calls:
 42004 ;;		i2_TMR1_ReadTimer
 42005 ;;		i2_TMR1_WriteTimer
 42006 ;; This function is called by:
 42007 ;;		_TMR_ISR_lora
 42008 ;; This function uses a non-reentrant model
 42009 ;;
 42010                           
 42011                           	psect	text270
 42012  009B0E                     __ptext270:
 42013                           	opt callstack 0
 42014  009B0E                     i2_TMR_SwapTimer:
 42015                           	opt callstack 11
 42016                           
 42017                           ;sw_timer.c: 114: static uint16_t oldVal;;sw_timer.c: 115: static uint16_t retVal;;sw_ti
      +                          mer.c: 117: oldVal = TMR1_ReadTimer();
 42018                           
 42019                           ;incstack = 0
 42020  009B0E  EC48  F052         	call	i2_TMR1_ReadTimer	;wreg free
 42021  009B12  C001  F03A         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 42022  009B16  C002  F03B         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 42023  009B1A                     i2l15766:
 42024  009B1A  EC48  F052         	call	i2_TMR1_ReadTimer	;wreg free
 42025  009B1E  503A               	movf	TMR_SwapTimer@oldVal,w,c
 42026  009B20  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 42027  009B22  E104               	bnz	i2u1629_40
 42028  009B24  503B               	movf	TMR_SwapTimer@oldVal+1,w,c
 42029  009B26  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 42030  009B28  B4D8               	btfsc	status,2,c
 42031  009B2A  D7F7               	goto	i2l15766
 42032  009B2C                     i2u1629_40:
 42033                           
 42034                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 42035  009B2C  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 42036  009B30  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 42037  009B34  EC08  F053         	call	i2_TMR1_WriteTimer	;wreg free
 42038                           
 42039                           ;sw_timer.c: 128: oldVal++;
 42040  009B38  4A3A               	infsnz	TMR_SwapTimer@oldVal,f,c
 42041  009B3A  2A3B               	incf	TMR_SwapTimer@oldVal+1,f,c
 42042                           
 42043                           ;sw_timer.c: 130: retVal = oldVal;
 42044  009B3C  C03A  F11E         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 42045  009B40  C03B  F11F         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 42046                           
 42047                           ;sw_timer.c: 132: return retVal;
 42048  009B44  C11E  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 42049  009B48  C11F  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 42050  009B4C  0012               	return		;funcret
 42051  009B4E                     __end_ofi2_TMR_SwapTimer:
 42052                           	opt callstack 0
 42053                           
 42054 ;; *************** function i2_TMR1_WriteTimer *****************
 42055 ;; Defined at:
 42056 ;;		line 124 in file "mcc_generated_files/tmr1.c"
 42057 ;; Parameters:    Size  Location     Type
 42058 ;;  timerVal        2    0[COMRAM] unsigned int 
 42059 ;; Auto vars:     Size  Location     Type
 42060 ;;		None
 42061 ;; Return value:  Size  Location     Type
 42062 ;;                  1    wreg      void 
 42063 ;; Registers used:
 42064 ;;		wreg, status,2
 42065 ;; Tracked objects:
 42066 ;;		On entry : 0/0
 42067 ;;		On exit  : 0/0
 42068 ;;		Unchanged: 0/0
 42069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42073 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42074 ;;Total ram usage:        2 bytes
 42075 ;; Hardware stack levels used:    1
 42076 ;; This function calls:
 42077 ;;		Nothing
 42078 ;; This function is called by:
 42079 ;;		_TMR1_ISR
 42080 ;;		i2_TMR_SwapTimer
 42081 ;; This function uses a non-reentrant model
 42082 ;;
 42083                           
 42084                           	psect	text271
 42085  00A610                     __ptext271:
 42086                           	opt callstack 0
 42087  00A610                     i2_TMR1_WriteTimer:
 42088                           	opt callstack 14
 42089                           
 42090                           ;tmr1.c: 126: if (T1CONbits.T1SYNC == 1)
 42091                           
 42092                           ;incstack = 0
 42093  00A610  A4CD               	btfss	4045,2,c	;volatile
 42094  00A612  D007               	goto	i2l15320
 42095                           
 42096                           ;tmr1.c: 127: {;tmr1.c: 129: T1CONbits.TMR1ON = 0;
 42097  00A614  90CD               	bcf	4045,0,c	;volatile
 42098                           
 42099                           ;tmr1.c: 132: TMR1H = (timerVal >> 8);
 42100  00A616  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 42101  00A618  6ECF               	movwf	4047,c	;volatile
 42102                           
 42103                           ;tmr1.c: 133: TMR1L = (uint8_t) timerVal;
 42104  00A61A  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 42105                           
 42106                           ;tmr1.c: 136: T1CONbits.TMR1ON =1;
 42107  00A61E  80CD               	bsf	4045,0,c	;volatile
 42108                           
 42109                           ;tmr1.c: 137: }
 42110  00A620  0012               	return	
 42111  00A622                     i2l15320:
 42112                           
 42113                           ;tmr1.c: 138: else;tmr1.c: 139: {;tmr1.c: 141: TMR1H = (timerVal >> 8);
 42114  00A622  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 42115  00A624  6ECF               	movwf	4047,c	;volatile
 42116                           
 42117                           ;tmr1.c: 142: TMR1L = (uint8_t) timerVal;
 42118  00A626  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 42119  00A62A  0012               	return		;funcret
 42120  00A62C                     __end_ofi2_TMR1_WriteTimer:
 42121                           	opt callstack 0
 42122                           
 42123 ;; *************** function i2_SwTimersInterrupt *****************
 42124 ;; Defined at:
 42125 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42126 ;; Parameters:    Size  Location     Type
 42127 ;;		None
 42128 ;; Auto vars:     Size  Location     Type
 42129 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 42130 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 42131 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 42132 ;; Return value:  Size  Location     Type
 42133 ;;                  4   24[COMRAM] unsigned long 
 42134 ;; Registers used:
 42135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42136 ;; Tracked objects:
 42137 ;;		On entry : 0/0
 42138 ;;		On exit  : 0/0
 42139 ;;		Unchanged: 0/0
 42140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42142 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42143 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42144 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42145 ;;Total ram usage:       17 bytes
 42146 ;; Hardware stack levels used:    1
 42147 ;; Hardware stack levels required when called:    2
 42148 ;; This function calls:
 42149 ;;		i2_TMR_GetDeltaTime
 42150 ;; This function is called by:
 42151 ;;		_TMR_ISR_lora
 42152 ;; This function uses a non-reentrant model
 42153 ;;
 42154                           
 42155                           	psect	text272
 42156  006ECA                     __ptext272:
 42157                           	opt callstack 0
 42158  006ECA                     i2_SwTimersInterrupt:
 42159                           	opt callstack 10
 42160                           
 42161                           ;sw_timer.c: 289: uint8_t i;;sw_timer.c: 290: uint32_t timeElapsed;;sw_timer.c: 291: uin
      +                          t32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 42162                           
 42163                           ;incstack = 0
 42164  006ECA  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 42165  006ECC  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 42166  006ECE  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 42167  006ED0  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 42168                           
 42169                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 42170  006ED2  EC6E  F034         	call	i2_TMR_GetDeltaTime	;wreg free
 42171  006ED6  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 42172  006EDA  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 42173  006EDE  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 42174  006EE2  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 42175                           
 42176                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 42177  006EE6  0E00               	movlw	0
 42178  006EE8  6E29               	movwf	i2SwTimersInterrupt@i,c
 42179  006EEA  D05D               	goto	i2l15796
 42180  006EEC                     i2l15784:
 42181                           
 42182                           ; BSR set to: 1
 42183                           ;sw_timer.c: 298: {;sw_timer.c: 301: if (swTimers[i].running == 1)
 42184  006EEC  5029               	movf	i2SwTimersInterrupt@i,w,c
 42185  006EEE  0D08               	mullw	8
 42186  006EF0  0E04               	movlw	low (_swTimers+4)
 42187  006EF2  24F3               	addwf	prodl,w,c
 42188  006EF4  6ED9               	movwf	fsr2l,c
 42189  006EF6  0E03               	movlw	high (_swTimers+4)
 42190  006EF8  20F4               	addwfc	prodh,w,c
 42191  006EFA  6EDA               	movwf	fsr2h,c
 42192  006EFC  04DE               	decf	postinc2,w,c
 42193  006EFE  A4D8               	btfss	status,2,c
 42194  006F00  D051               	goto	i2l15794
 42195                           
 42196                           ; BSR set to: 1
 42197                           ;sw_timer.c: 302: {;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 42198  006F02  5029               	movf	i2SwTimersInterrupt@i,w,c
 42199  006F04  0D08               	mullw	8
 42200  006F06  0E00               	movlw	low _swTimers
 42201  006F08  24F3               	addwf	prodl,w,c
 42202  006F0A  6ED9               	movwf	fsr2l,c
 42203  006F0C  0E03               	movlw	high _swTimers
 42204  006F0E  20F4               	addwfc	prodh,w,c
 42205  006F10  6EDA               	movwf	fsr2h,c
 42206  006F12  50DE               	movf	postinc2,w,c
 42207  006F14  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 42208  006F16  50DE               	movf	postinc2,w,c
 42209  006F18  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 42210  006F1A  50DE               	movf	postinc2,w,c
 42211  006F1C  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 42212  006F1E  50DE               	movf	postinc2,w,c
 42213  006F20  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 42214  006F22  A0D8               	btfss	status,0,c
 42215  006F24  D00D               	goto	i2l15790
 42216                           
 42217                           ; BSR set to: 1
 42218                           ;sw_timer.c: 304: {;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 42219  006F26  5029               	movf	i2SwTimersInterrupt@i,w,c
 42220  006F28  0D08               	mullw	8
 42221  006F2A  0E00               	movlw	low _swTimers
 42222  006F2C  24F3               	addwf	prodl,w,c
 42223  006F2E  6ED9               	movwf	fsr2l,c
 42224  006F30  0E03               	movlw	high _swTimers
 42225  006F32  20F4               	addwfc	prodh,w,c
 42226  006F34  6EDA               	movwf	fsr2h,c
 42227  006F36  6ADE               	clrf	postinc2,c
 42228  006F38  6ADE               	clrf	postinc2,c
 42229  006F3A  6ADE               	clrf	postinc2,c
 42230  006F3C  6ADD               	clrf	postdec2,c
 42231                           
 42232                           ;sw_timer.c: 306: }
 42233  006F3E  D032               	goto	i2l15794
 42234  006F40                     i2l15790:
 42235                           
 42236                           ; BSR set to: 1
 42237                           ;sw_timer.c: 307: else;sw_timer.c: 308: {;sw_timer.c: 309: swTimers[i].ticksRemaining -=
      +                           timeElapsed;
 42238  006F40  5029               	movf	i2SwTimersInterrupt@i,w,c
 42239  006F42  0D08               	mullw	8
 42240  006F44  0E00               	movlw	low _swTimers
 42241  006F46  24F3               	addwf	prodl,w,c
 42242  006F48  6ED9               	movwf	fsr2l,c
 42243  006F4A  0E03               	movlw	high _swTimers
 42244  006F4C  20F4               	addwfc	prodh,w,c
 42245  006F4E  6EDA               	movwf	fsr2h,c
 42246  006F50  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 42247  006F52  5EDE               	subwf	postinc2,f,c
 42248  006F54  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 42249  006F56  5ADE               	subwfb	postinc2,f,c
 42250  006F58  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 42251  006F5A  5ADE               	subwfb	postinc2,f,c
 42252  006F5C  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 42253  006F5E  5ADE               	subwfb	postinc2,f,c
 42254                           
 42255                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 42256  006F60  5029               	movf	i2SwTimersInterrupt@i,w,c
 42257  006F62  0D08               	mullw	8
 42258  006F64  0E00               	movlw	low _swTimers
 42259  006F66  24F3               	addwf	prodl,w,c
 42260  006F68  6ED9               	movwf	fsr2l,c
 42261  006F6A  0E03               	movlw	high _swTimers
 42262  006F6C  20F4               	addwfc	prodh,w,c
 42263  006F6E  6EDA               	movwf	fsr2h,c
 42264  006F70  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 42265  006F72  5CDE               	subwf	postinc2,w,c
 42266  006F74  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 42267  006F76  58DE               	subwfb	postinc2,w,c
 42268  006F78  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 42269  006F7A  58DE               	subwfb	postinc2,w,c
 42270  006F7C  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 42271  006F7E  58DE               	subwfb	postinc2,w,c
 42272  006F80  B0D8               	btfsc	status,0,c
 42273  006F82  D010               	goto	i2l15794
 42274                           
 42275                           ; BSR set to: 1
 42276                           ;sw_timer.c: 313: {;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 42277  006F84  5029               	movf	i2SwTimersInterrupt@i,w,c
 42278  006F86  0D08               	mullw	8
 42279  006F88  0E00               	movlw	low _swTimers
 42280  006F8A  24F3               	addwf	prodl,w,c
 42281  006F8C  6ED9               	movwf	fsr2l,c
 42282  006F8E  0E03               	movlw	high _swTimers
 42283  006F90  20F4               	addwfc	prodh,w,c
 42284  006F92  6EDA               	movwf	fsr2h,c
 42285  006F94  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 42286  006F98  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 42287  006F9C  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 42288  006FA0  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 42289  006FA4                     i2l15794:
 42290                           
 42291                           ; BSR set to: 1
 42292  006FA4  2A29               	incf	i2SwTimersInterrupt@i,f,c
 42293  006FA6                     i2l15796:
 42294  006FA6  0101               	movlb	1	; () banked
 42295  006FA8  5128               	movf	_allocatedTimers& (0+255),w,b	;volatile
 42296  006FAA  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 42297  006FAC  A0D8               	btfss	status,0,c
 42298  006FAE  D79E               	goto	i2l15784
 42299                           
 42300                           ; BSR set to: 1
 42301                           ;sw_timer.c: 315: };sw_timer.c: 316: };sw_timer.c: 317: };sw_timer.c: 318: };sw_timer.c:
      +                           320: return ticksToNextTimerEvent;
 42302  006FB0  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 42303  006FB4  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 42304  006FB8  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 42305  006FBC  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 42306                           
 42307                           ; BSR set to: 1
 42308  006FC0  0012               	return		;funcret
 42309  006FC2                     __end_ofi2_SwTimersInterrupt:
 42310                           	opt callstack 0
 42311                           
 42312 ;; *************** function i2_TMR_GetDeltaTime *****************
 42313 ;; Defined at:
 42314 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42315 ;; Parameters:    Size  Location     Type
 42316 ;;		None
 42317 ;; Auto vars:     Size  Location     Type
 42318 ;;		None
 42319 ;; Return value:  Size  Location     Type
 42320 ;;                  4    8[COMRAM] unsigned long 
 42321 ;; Registers used:
 42322 ;;		wreg, status,2, status,0, cstack
 42323 ;; Tracked objects:
 42324 ;;		On entry : 0/0
 42325 ;;		On exit  : 0/0
 42326 ;;		Unchanged: 0/0
 42327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42330 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42331 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42332 ;;Total ram usage:       16 bytes
 42333 ;; Hardware stack levels used:    1
 42334 ;; Hardware stack levels required when called:    1
 42335 ;; This function calls:
 42336 ;;		i2_TMR1_ReadTimer
 42337 ;; This function is called by:
 42338 ;;		i2_SwTimersInterrupt
 42339 ;; This function uses a non-reentrant model
 42340 ;;
 42341                           
 42342                           	psect	text273
 42343  0068DC                     __ptext273:
 42344                           	opt callstack 0
 42345  0068DC                     i2_TMR_GetDeltaTime:
 42346                           	opt callstack 10
 42347                           
 42348                           ;sw_timer.c: 90: static uint32_t retVal;;sw_timer.c: 91: static uint16_t tmrVal;;sw_time
      +                          r.c: 93: tmrVal = TMR1_ReadTimer();
 42349                           
 42350                           ; BSR set to: 1
 42351                           ;incstack = 0
 42352  0068DC  EC48  F052         	call	i2_TMR1_ReadTimer	;wreg free
 42353  0068E0  C001  F03C         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 42354  0068E4  C002  F03D         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 42355                           
 42356                           ;sw_timer.c: 95: if (timerOverflow == 1)
 42357  0068E8  0444               	decf	_timerOverflow,w,c	;volatile
 42358  0068EA  A4D8               	btfss	status,2,c
 42359  0068EC  D045               	goto	i2l15304
 42360                           
 42361                           ;sw_timer.c: 96: {;sw_timer.c: 97: timerOverflow = 0;
 42362  0068EE  0E00               	movlw	0
 42363  0068F0  6E44               	movwf	_timerOverflow,c	;volatile
 42364                           
 42365                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 42366  0068F2  503E               	movf	_reloadVal,w,c	;volatile
 42367  0068F4  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 42368  0068F6  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 42369  0068F8  503F               	movf	_reloadVal+1,w,c	;volatile
 42370  0068FA  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 42371  0068FC  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 42372  0068FE  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 42373  006900  A0D8               	btfss	status,0,c
 42374  006902  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 42375  006904  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 42376  006906  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 42377  006908  5032               	movf	_ticksAccounted,w,c	;volatile
 42378  00690A  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 42379  00690C  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 42380  00690E  5033               	movf	_ticksAccounted+1,w,c	;volatile
 42381  006910  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 42382  006912  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 42383  006914  5034               	movf	_ticksAccounted+2,w,c	;volatile
 42384  006916  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 42385  006918  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 42386  00691A  5035               	movf	_ticksAccounted+3,w,c	;volatile
 42387  00691C  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 42388  00691E  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 42389  006920  5036               	movf	_ticksAdded,w,c	;volatile
 42390  006922  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 42391  006924  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 42392  006926  5037               	movf	_ticksAdded+1,w,c	;volatile
 42393  006928  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 42394  00692A  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 42395  00692C  5038               	movf	_ticksAdded+2,w,c	;volatile
 42396  00692E  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 42397  006930  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 42398  006932  5039               	movf	_ticksAdded+3,w,c	;volatile
 42399  006934  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 42400  006936  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 42401  006938  0E00               	movlw	0
 42402  00693A  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 42403  00693C  0101               	movlb	1	; () banked
 42404  00693E  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 42405  006940  0E00               	movlw	0
 42406  006942  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 42407  006944  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 42408  006946  0E01               	movlw	1
 42409  006948  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 42410  00694A  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 42411  00694C  0E00               	movlw	0
 42412  00694E  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 42413  006950  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 42414                           
 42415                           ; BSR set to: 1
 42416                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 42417  006952  C03C  F032         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 42418  006956  C03D  F033         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 42419  00695A  6A34               	clrf	_ticksAccounted+2,c	;volatile
 42420  00695C  6A35               	clrf	_ticksAccounted+3,c	;volatile
 42421                           
 42422                           ; BSR set to: 1
 42423                           ;sw_timer.c: 100: ticksAdded = 0;
 42424  00695E  0E00               	movlw	0
 42425  006960  6E36               	movwf	_ticksAdded,c	;volatile
 42426  006962  0E00               	movlw	0
 42427  006964  6E37               	movwf	_ticksAdded+1,c	;volatile
 42428  006966  0E00               	movlw	0
 42429  006968  6E38               	movwf	_ticksAdded+2,c	;volatile
 42430  00696A  0E00               	movlw	0
 42431  00696C  6E39               	movwf	_ticksAdded+3,c	;volatile
 42432                           
 42433                           ; BSR set to: 1
 42434                           ;sw_timer.c: 101: reloadVal = 0;
 42435  00696E  0E00               	movlw	0
 42436  006970  6E3F               	movwf	_reloadVal+1,c	;volatile
 42437  006972  0E00               	movlw	0
 42438  006974  6E3E               	movwf	_reloadVal,c	;volatile
 42439                           
 42440                           ;sw_timer.c: 102: }
 42441  006976  D029               	goto	i2l15306
 42442  006978                     i2l15304:
 42443                           
 42444                           ;sw_timer.c: 103: else;sw_timer.c: 104: {;sw_timer.c: 105: retVal = tmrVal - reloadVal -
      +                           ticksAccounted + ticksAdded;
 42445  006978  503E               	movf	_reloadVal,w,c	;volatile
 42446  00697A  5C3C               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 42447  00697C  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 42448  00697E  503F               	movf	_reloadVal+1,w,c	;volatile
 42449  006980  583D               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 42450  006982  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 42451  006984  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 42452  006986  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 42453  006988  5032               	movf	_ticksAccounted,w,c	;volatile
 42454  00698A  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 42455  00698C  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 42456  00698E  5033               	movf	_ticksAccounted+1,w,c	;volatile
 42457  006990  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 42458  006992  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 42459  006994  5034               	movf	_ticksAccounted+2,w,c	;volatile
 42460  006996  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 42461  006998  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 42462  00699A  5035               	movf	_ticksAccounted+3,w,c	;volatile
 42463  00699C  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 42464  00699E  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 42465  0069A0  5036               	movf	_ticksAdded,w,c	;volatile
 42466  0069A2  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 42467  0069A4  0101               	movlb	1	; () banked
 42468  0069A6  6F12               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 42469  0069A8  5037               	movf	_ticksAdded+1,w,c	;volatile
 42470  0069AA  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 42471  0069AC  6F13               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 42472  0069AE  5038               	movf	_ticksAdded+2,w,c	;volatile
 42473  0069B0  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 42474  0069B2  6F14               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 42475  0069B4  5039               	movf	_ticksAdded+3,w,c	;volatile
 42476  0069B6  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 42477  0069B8  6F15               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 42478                           
 42479                           ;sw_timer.c: 106: ticksAccounted += retVal;
 42480  0069BA  5112               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 42481  0069BC  2632               	addwf	_ticksAccounted,f,c	;volatile
 42482  0069BE  5113               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 42483  0069C0  2233               	addwfc	_ticksAccounted+1,f,c	;volatile
 42484  0069C2  5114               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 42485  0069C4  2234               	addwfc	_ticksAccounted+2,f,c	;volatile
 42486  0069C6  5115               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 42487  0069C8  2235               	addwfc	_ticksAccounted+3,f,c	;volatile
 42488  0069CA                     i2l15306:
 42489                           
 42490                           ; BSR set to: 1
 42491                           ;sw_timer.c: 107: };sw_timer.c: 109: return retVal;
 42492  0069CA  C112  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 42493  0069CE  C113  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 42494  0069D2  C114  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 42495  0069D6  C115  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 42496                           
 42497                           ; BSR set to: 1
 42498  0069DA  0012               	return		;funcret
 42499  0069DC                     __end_ofi2_TMR_GetDeltaTime:
 42500                           	opt callstack 0
 42501                           
 42502 ;; *************** function i2_TMR1_ReadTimer *****************
 42503 ;; Defined at:
 42504 ;;		line 108 in file "mcc_generated_files/tmr1.c"
 42505 ;; Parameters:    Size  Location     Type
 42506 ;;		None
 42507 ;; Auto vars:     Size  Location     Type
 42508 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 42509 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 42510 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 42511 ;; Return value:  Size  Location     Type
 42512 ;;                  2    0[COMRAM] unsigned int 
 42513 ;; Registers used:
 42514 ;;		wreg, status,2
 42515 ;; Tracked objects:
 42516 ;;		On entry : 0/0
 42517 ;;		On exit  : 0/0
 42518 ;;		Unchanged: 0/0
 42519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42521 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42522 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42523 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42524 ;;Total ram usage:        8 bytes
 42525 ;; Hardware stack levels used:    1
 42526 ;; This function calls:
 42527 ;;		Nothing
 42528 ;; This function is called by:
 42529 ;;		i2_TMR_GetDeltaTime
 42530 ;;		i2_TMR_SwapTimer
 42531 ;; This function uses a non-reentrant model
 42532 ;;
 42533                           
 42534                           	psect	text274
 42535  00A490                     __ptext274:
 42536                           	opt callstack 0
 42537  00A490                     i2_TMR1_ReadTimer:
 42538                           	opt callstack 11
 42539                           
 42540                           ;tmr1.c: 110: uint16_t readVal;;tmr1.c: 111: uint8_t readValHigh;;tmr1.c: 112: uint8_t r
      +                          eadValLow;;tmr1.c: 114: T1CONbits.T1RD16 = 1;
 42541                           
 42542                           ; BSR set to: 1
 42543                           ;incstack = 0
 42544  00A490  82CD               	bsf	4045,1,c	;volatile
 42545                           
 42546                           ;tmr1.c: 116: readValLow = TMR1L;
 42547  00A492  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 42548                           
 42549                           ;tmr1.c: 117: readValHigh = TMR1H;
 42550  00A496  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 42551                           
 42552                           ;tmr1.c: 119: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 42553  00A49A  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 42554  00A49C  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 42555  00A49E  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 42556  00A4A0  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 42557  00A4A2  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 42558                           
 42559                           ;tmr1.c: 121: return readVal;
 42560  00A4A6  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 42561  00A4AA  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 42562  00A4AE  0012               	return		;funcret
 42563  00A4B0                     __end_ofi2_TMR1_ReadTimer:
 42564                           	opt callstack 0
 42565                           
 42566 ;; *************** function _PIN_MANAGER_IOC *****************
 42567 ;; Defined at:
 42568 ;;		line 111 in file "mcc_generated_files/pin_manager.c"
 42569 ;; Parameters:    Size  Location     Type
 42570 ;;		None
 42571 ;; Auto vars:     Size  Location     Type
 42572 ;;		None
 42573 ;; Return value:  Size  Location     Type
 42574 ;;                  1    wreg      void 
 42575 ;; Registers used:
 42576 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42577 ;; Tracked objects:
 42578 ;;		On entry : 0/0
 42579 ;;		On exit  : 0/0
 42580 ;;		Unchanged: 0/0
 42581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42586 ;;Total ram usage:        0 bytes
 42587 ;; Hardware stack levels used:    1
 42588 ;; Hardware stack levels required when called:    2
 42589 ;; This function calls:
 42590 ;;		_IOCB4_ISR
 42591 ;; This function is called by:
 42592 ;;		_INTERRUPT_InterruptManager
 42593 ;; This function uses a non-reentrant model
 42594 ;;
 42595                           
 42596                           	psect	text275
 42597  00A8E4                     __ptext275:
 42598                           	opt callstack 0
 42599  00A8E4                     _PIN_MANAGER_IOC:
 42600                           	opt callstack 13
 42601                           
 42602                           ;pin_manager.c: 114: if(IOCBbits.IOCB4 == 1)
 42603                           
 42604                           ;incstack = 0
 42605  00A8E4  B862               	btfsc	3938,4,c	;volatile
 42606                           
 42607                           ;pin_manager.c: 115: {;pin_manager.c: 116: IOCB4_ISR();
 42608  00A8E6  EC58  F052         	call	_IOCB4_ISR	;wreg free
 42609                           
 42610                           ;pin_manager.c: 117: };pin_manager.c: 119: INTCONbits.RBIF = 0;
 42611  00A8EA  90F2               	bcf	4082,0,c	;volatile
 42612  00A8EC  0012               	return		;funcret
 42613  00A8EE                     __end_of_PIN_MANAGER_IOC:
 42614                           	opt callstack 0
 42615                           
 42616 ;; *************** function _IOCB4_ISR *****************
 42617 ;; Defined at:
 42618 ;;		line 125 in file "mcc_generated_files/pin_manager.c"
 42619 ;; Parameters:    Size  Location     Type
 42620 ;;		None
 42621 ;; Auto vars:     Size  Location     Type
 42622 ;;		None
 42623 ;; Return value:  Size  Location     Type
 42624 ;;                  1    wreg      void 
 42625 ;; Registers used:
 42626 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42627 ;; Tracked objects:
 42628 ;;		On entry : 0/0
 42629 ;;		On exit  : 0/0
 42630 ;;		Unchanged: 0/0
 42631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42636 ;;Total ram usage:        0 bytes
 42637 ;; Hardware stack levels used:    1
 42638 ;; Hardware stack levels required when called:    1
 42639 ;; This function calls:
 42640 ;;		Absolute function
 42641 ;;		_DIO2_ISR_Lora
 42642 ;;		_IOCB4_DefaultInterruptHandler
 42643 ;; This function is called by:
 42644 ;;		_PIN_MANAGER_IOC
 42645 ;; This function uses a non-reentrant model
 42646 ;;
 42647                           
 42648                           	psect	text276
 42649  00A4B0                     __ptext276:
 42650                           	opt callstack 0
 42651  00A4B0                     _IOCB4_ISR:
 42652                           	opt callstack 13
 42653                           
 42654                           ;pin_manager.c: 130: if(IOCB4_InterruptHandler)
 42655                           
 42656                           ;incstack = 0
 42657  00A4B0  0101               	movlb	1	; () banked
 42658  00A4B2  51E9               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 42659  00A4B4  11EA               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 42660  00A4B6  B4D8               	btfsc	status,2,c
 42661  00A4B8  0012               	return	
 42662                           
 42663                           ; BSR set to: 1
 42664                           ;pin_manager.c: 131: {;pin_manager.c: 132: IOCB4_InterruptHandler();
 42665  00A4BA  D801               	call	i2u1706_48
 42666  00A4BC  0012               	return	
 42667  00A4BE                     i2u1706_48:
 42668  00A4BE  0005               	push	
 42669  00A4C0  6EFA               	movwf	pclath,c
 42670  00A4C2  51E9               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 42671  00A4C4  6EFD               	movwf	tosl,c
 42672  00A4C6  51EA               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 42673  00A4C8  6EFE               	movwf	tosh,c
 42674  00A4CA  6AFF               	clrf	tosu,c
 42675  00A4CC  50FA               	movf	pclath,w,c
 42676  00A4CE  0012               	return		;indir
 42677  00A4D0                     __end_of_IOCB4_ISR:
 42678                           	opt callstack 0
 42679                           
 42680 ;; *************** function _DIO2_ISR_Lora *****************
 42681 ;; Defined at:
 42682 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42683 ;; Parameters:    Size  Location     Type
 42684 ;;		None
 42685 ;; Auto vars:     Size  Location     Type
 42686 ;;		None
 42687 ;; Return value:  Size  Location     Type
 42688 ;;                  1    wreg      void 
 42689 ;; Registers used:
 42690 ;;		status,2, status,0
 42691 ;; Tracked objects:
 42692 ;;		On entry : 0/0
 42693 ;;		On exit  : 0/0
 42694 ;;		Unchanged: 0/0
 42695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42700 ;;Total ram usage:        0 bytes
 42701 ;; Hardware stack levels used:    1
 42702 ;; This function calls:
 42703 ;;		Nothing
 42704 ;; This function is called by:
 42705 ;;		_DIO2_ISR_Lora_Init
 42706 ;;		_IOCB4_ISR
 42707 ;; This function uses a non-reentrant model
 42708 ;;
 42709                           
 42710                           	psect	text277
 42711  00A952                     __ptext277:
 42712                           	opt callstack 0
 42713  00A952                     _DIO2_ISR_Lora:
 42714                           	opt callstack 13
 42715                           
 42716                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 42717                           
 42718                           ;incstack = 0
 42719  00A952  8445               	bsf	_dioStatus,2,c	;volatile
 42720  00A954  0012               	return		;funcret
 42721  00A956                     __end_of_DIO2_ISR_Lora:
 42722                           	opt callstack 0
 42723                           
 42724 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 42725 ;; Defined at:
 42726 ;;		line 146 in file "mcc_generated_files/pin_manager.c"
 42727 ;; Parameters:    Size  Location     Type
 42728 ;;		None
 42729 ;; Auto vars:     Size  Location     Type
 42730 ;;		None
 42731 ;; Return value:  Size  Location     Type
 42732 ;;                  1    wreg      void 
 42733 ;; Registers used:
 42734 ;;		None
 42735 ;; Tracked objects:
 42736 ;;		On entry : 0/0
 42737 ;;		On exit  : 0/0
 42738 ;;		Unchanged: 0/0
 42739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42744 ;;Total ram usage:        0 bytes
 42745 ;; Hardware stack levels used:    1
 42746 ;; This function calls:
 42747 ;;		Nothing
 42748 ;; This function is called by:
 42749 ;;		_PIN_MANAGER_Initialize
 42750 ;;		_IOCB4_ISR
 42751 ;; This function uses a non-reentrant model
 42752 ;;
 42753                           
 42754                           	psect	text278
 42755  00A96C                     __ptext278:
 42756                           	opt callstack 0
 42757  00A96C                     _IOCB4_DefaultInterruptHandler:
 42758                           	opt callstack 13
 42759                           
 42760                           ;incstack = 0
 42761  00A96C  0012               	return		;funcret
 42762  00A96E                     __end_of_IOCB4_DefaultInterruptHandler:
 42763                           	opt callstack 0
 42764                           
 42765 ;; *************** function _INT2_ISR *****************
 42766 ;; Defined at:
 42767 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 42768 ;; Parameters:    Size  Location     Type
 42769 ;;		None
 42770 ;; Auto vars:     Size  Location     Type
 42771 ;;		None
 42772 ;; Return value:  Size  Location     Type
 42773 ;;                  1    wreg      void 
 42774 ;; Registers used:
 42775 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42776 ;; Tracked objects:
 42777 ;;		On entry : 0/0
 42778 ;;		On exit  : 0/0
 42779 ;;		Unchanged: 0/0
 42780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42785 ;;Total ram usage:        0 bytes
 42786 ;; Hardware stack levels used:    1
 42787 ;; Hardware stack levels required when called:    2
 42788 ;; This function calls:
 42789 ;;		_INT2_CallBack
 42790 ;; This function is called by:
 42791 ;;		_INTERRUPT_InterruptManager
 42792 ;; This function uses a non-reentrant model
 42793 ;;
 42794                           
 42795                           	psect	text279
 42796  00A8FE                     __ptext279:
 42797                           	opt callstack 0
 42798  00A8FE                     _INT2_ISR:
 42799                           	opt callstack 13
 42800                           
 42801                           ;ext_int.c: 61: (INTCON3bits.INT2IF = 0);
 42802                           
 42803                           ;incstack = 0
 42804  00A8FE  92F0               	bcf	4080,1,c	;volatile
 42805                           
 42806                           ;ext_int.c: 64: INT2_CallBack();
 42807  00A900  EC68  F052         	call	_INT2_CallBack	;wreg free
 42808  00A904  0012               	return		;funcret
 42809  00A906                     __end_of_INT2_ISR:
 42810                           	opt callstack 0
 42811                           
 42812 ;; *************** function _INT2_CallBack *****************
 42813 ;; Defined at:
 42814 ;;		line 68 in file "mcc_generated_files/ext_int.c"
 42815 ;; Parameters:    Size  Location     Type
 42816 ;;		None
 42817 ;; Auto vars:     Size  Location     Type
 42818 ;;		None
 42819 ;; Return value:  Size  Location     Type
 42820 ;;                  1    wreg      void 
 42821 ;; Registers used:
 42822 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42823 ;; Tracked objects:
 42824 ;;		On entry : 0/0
 42825 ;;		On exit  : 0/0
 42826 ;;		Unchanged: 0/0
 42827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42832 ;;Total ram usage:        0 bytes
 42833 ;; Hardware stack levels used:    1
 42834 ;; Hardware stack levels required when called:    1
 42835 ;; This function calls:
 42836 ;;		Absolute function
 42837 ;;		_DIO1_ISR_Lora
 42838 ;;		_INT2_DefaultInterruptHandler
 42839 ;; This function is called by:
 42840 ;;		_INT2_ISR
 42841 ;; This function uses a non-reentrant model
 42842 ;;
 42843                           
 42844                           	psect	text280
 42845  00A4D0                     __ptext280:
 42846                           	opt callstack 0
 42847  00A4D0                     _INT2_CallBack:
 42848                           	opt callstack 13
 42849                           
 42850                           ;ext_int.c: 71: if(INT2_InterruptHandler)
 42851                           
 42852                           ;incstack = 0
 42853  00A4D0  0101               	movlb	1	; () banked
 42854  00A4D2  51EB               	movf	_INT2_InterruptHandler& (0+255),w,b
 42855  00A4D4  11EC               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 42856  00A4D6  B4D8               	btfsc	status,2,c
 42857  00A4D8  0012               	return	
 42858                           
 42859                           ; BSR set to: 1
 42860                           ;ext_int.c: 72: {;ext_int.c: 73: INT2_InterruptHandler();
 42861  00A4DA  D801               	call	i2u1704_48
 42862  00A4DC  0012               	return	
 42863  00A4DE                     i2u1704_48:
 42864  00A4DE  0005               	push	
 42865  00A4E0  6EFA               	movwf	pclath,c
 42866  00A4E2  51EB               	movf	_INT2_InterruptHandler& (0+255),w,b
 42867  00A4E4  6EFD               	movwf	tosl,c
 42868  00A4E6  51EC               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 42869  00A4E8  6EFE               	movwf	tosh,c
 42870  00A4EA  6AFF               	clrf	tosu,c
 42871  00A4EC  50FA               	movf	pclath,w,c
 42872  00A4EE  0012               	return		;indir
 42873  00A4F0                     __end_of_INT2_CallBack:
 42874                           	opt callstack 0
 42875                           
 42876 ;; *************** function _DIO1_ISR_Lora *****************
 42877 ;; Defined at:
 42878 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 42879 ;; Parameters:    Size  Location     Type
 42880 ;;		None
 42881 ;; Auto vars:     Size  Location     Type
 42882 ;;		None
 42883 ;; Return value:  Size  Location     Type
 42884 ;;                  1    wreg      void 
 42885 ;; Registers used:
 42886 ;;		status,2, status,0
 42887 ;; Tracked objects:
 42888 ;;		On entry : 0/0
 42889 ;;		On exit  : 0/0
 42890 ;;		Unchanged: 0/0
 42891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42896 ;;Total ram usage:        0 bytes
 42897 ;; Hardware stack levels used:    1
 42898 ;; This function calls:
 42899 ;;		Nothing
 42900 ;; This function is called by:
 42901 ;;		_DIO1_ISR_Lora_Init
 42902 ;;		_INT2_CallBack
 42903 ;; This function uses a non-reentrant model
 42904 ;;
 42905                           
 42906                           	psect	text281
 42907  00A956                     __ptext281:
 42908                           	opt callstack 0
 42909  00A956                     _DIO1_ISR_Lora:
 42910                           	opt callstack 13
 42911                           
 42912                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 42913                           
 42914                           ;incstack = 0
 42915  00A956  8245               	bsf	_dioStatus,1,c	;volatile
 42916  00A958  0012               	return		;funcret
 42917  00A95A                     __end_of_DIO1_ISR_Lora:
 42918                           	opt callstack 0
 42919                           
 42920 ;; *************** function _INT2_DefaultInterruptHandler *****************
 42921 ;; Defined at:
 42922 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 42923 ;; Parameters:    Size  Location     Type
 42924 ;;		None
 42925 ;; Auto vars:     Size  Location     Type
 42926 ;;		None
 42927 ;; Return value:  Size  Location     Type
 42928 ;;                  1    wreg      void 
 42929 ;; Registers used:
 42930 ;;		None
 42931 ;; Tracked objects:
 42932 ;;		On entry : 0/0
 42933 ;;		On exit  : 0/0
 42934 ;;		Unchanged: 0/0
 42935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42940 ;;Total ram usage:        0 bytes
 42941 ;; Hardware stack levels used:    1
 42942 ;; This function calls:
 42943 ;;		Nothing
 42944 ;; This function is called by:
 42945 ;;		_EXT_INT_Initialize
 42946 ;;		_INT2_CallBack
 42947 ;; This function uses a non-reentrant model
 42948 ;;
 42949                           
 42950                           	psect	text282
 42951  00A96E                     __ptext282:
 42952                           	opt callstack 0
 42953  00A96E                     _INT2_DefaultInterruptHandler:
 42954                           	opt callstack 13
 42955                           
 42956                           ;incstack = 0
 42957  00A96E  0012               	return		;funcret
 42958  00A970                     __end_of_INT2_DefaultInterruptHandler:
 42959                           	opt callstack 0
 42960                           
 42961 ;; *************** function _INT1_ISR *****************
 42962 ;; Defined at:
 42963 ;;		line 33 in file "mcc_generated_files/ext_int.c"
 42964 ;; Parameters:    Size  Location     Type
 42965 ;;		None
 42966 ;; Auto vars:     Size  Location     Type
 42967 ;;		None
 42968 ;; Return value:  Size  Location     Type
 42969 ;;                  1    wreg      void 
 42970 ;; Registers used:
 42971 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 42972 ;; Tracked objects:
 42973 ;;		On entry : 0/0
 42974 ;;		On exit  : 0/0
 42975 ;;		Unchanged: 0/0
 42976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42981 ;;Total ram usage:        0 bytes
 42982 ;; Hardware stack levels used:    1
 42983 ;; Hardware stack levels required when called:    2
 42984 ;; This function calls:
 42985 ;;		_INT1_CallBack
 42986 ;; This function is called by:
 42987 ;;		_INTERRUPT_InterruptManager
 42988 ;; This function uses a non-reentrant model
 42989 ;;
 42990                           
 42991                           	psect	text283
 42992  00A906                     __ptext283:
 42993                           	opt callstack 0
 42994  00A906                     _INT1_ISR:
 42995                           	opt callstack 13
 42996                           
 42997                           ;ext_int.c: 35: (INTCON3bits.INT1IF = 0);
 42998                           
 42999                           ;incstack = 0
 43000  00A906  90F0               	bcf	4080,0,c	;volatile
 43001                           
 43002                           ;ext_int.c: 38: INT1_CallBack();
 43003  00A908  EC78  F052         	call	_INT1_CallBack	;wreg free
 43004  00A90C  0012               	return		;funcret
 43005  00A90E                     __end_of_INT1_ISR:
 43006                           	opt callstack 0
 43007                           
 43008 ;; *************** function _INT1_CallBack *****************
 43009 ;; Defined at:
 43010 ;;		line 42 in file "mcc_generated_files/ext_int.c"
 43011 ;; Parameters:    Size  Location     Type
 43012 ;;		None
 43013 ;; Auto vars:     Size  Location     Type
 43014 ;;		None
 43015 ;; Return value:  Size  Location     Type
 43016 ;;                  1    wreg      void 
 43017 ;; Registers used:
 43018 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 43019 ;; Tracked objects:
 43020 ;;		On entry : 0/0
 43021 ;;		On exit  : 0/0
 43022 ;;		Unchanged: 0/0
 43023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43028 ;;Total ram usage:        0 bytes
 43029 ;; Hardware stack levels used:    1
 43030 ;; Hardware stack levels required when called:    1
 43031 ;; This function calls:
 43032 ;;		Absolute function
 43033 ;;		_DIO0_ISR_Lora
 43034 ;;		_INT1_DefaultInterruptHandler
 43035 ;; This function is called by:
 43036 ;;		_INT1_ISR
 43037 ;; This function uses a non-reentrant model
 43038 ;;
 43039                           
 43040                           	psect	text284
 43041  00A4F0                     __ptext284:
 43042                           	opt callstack 0
 43043  00A4F0                     _INT1_CallBack:
 43044                           	opt callstack 13
 43045                           
 43046                           ;ext_int.c: 45: if(INT1_InterruptHandler)
 43047                           
 43048                           ;incstack = 0
 43049  00A4F0  0101               	movlb	1	; () banked
 43050  00A4F2  51ED               	movf	_INT1_InterruptHandler& (0+255),w,b
 43051  00A4F4  11EE               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 43052  00A4F6  B4D8               	btfsc	status,2,c
 43053  00A4F8  0012               	return	
 43054                           
 43055                           ; BSR set to: 1
 43056                           ;ext_int.c: 46: {;ext_int.c: 47: INT1_InterruptHandler();
 43057  00A4FA  D801               	call	i2u1702_48
 43058  00A4FC  0012               	return	
 43059  00A4FE                     i2u1702_48:
 43060  00A4FE  0005               	push	
 43061  00A500  6EFA               	movwf	pclath,c
 43062  00A502  51ED               	movf	_INT1_InterruptHandler& (0+255),w,b
 43063  00A504  6EFD               	movwf	tosl,c
 43064  00A506  51EE               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 43065  00A508  6EFE               	movwf	tosh,c
 43066  00A50A  6AFF               	clrf	tosu,c
 43067  00A50C  50FA               	movf	pclath,w,c
 43068  00A50E  0012               	return		;indir
 43069  00A510                     __end_of_INT1_CallBack:
 43070                           	opt callstack 0
 43071                           
 43072 ;; *************** function _DIO0_ISR_Lora *****************
 43073 ;; Defined at:
 43074 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 43075 ;; Parameters:    Size  Location     Type
 43076 ;;		None
 43077 ;; Auto vars:     Size  Location     Type
 43078 ;;		None
 43079 ;; Return value:  Size  Location     Type
 43080 ;;                  1    wreg      void 
 43081 ;; Registers used:
 43082 ;;		status,2, status,0
 43083 ;; Tracked objects:
 43084 ;;		On entry : 0/0
 43085 ;;		On exit  : 0/0
 43086 ;;		Unchanged: 0/0
 43087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43092 ;;Total ram usage:        0 bytes
 43093 ;; Hardware stack levels used:    1
 43094 ;; This function calls:
 43095 ;;		Nothing
 43096 ;; This function is called by:
 43097 ;;		_DIO0_ISR_Lora_Init
 43098 ;;		_INT1_CallBack
 43099 ;; This function uses a non-reentrant model
 43100 ;;
 43101                           
 43102                           	psect	text285
 43103  00A95A                     __ptext285:
 43104                           	opt callstack 0
 43105  00A95A                     _DIO0_ISR_Lora:
 43106                           	opt callstack 13
 43107                           
 43108                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 43109                           
 43110                           ;incstack = 0
 43111  00A95A  8045               	bsf	_dioStatus,0,c	;volatile
 43112  00A95C  0012               	return		;funcret
 43113  00A95E                     __end_of_DIO0_ISR_Lora:
 43114                           	opt callstack 0
 43115                           
 43116 ;; *************** function _INT1_DefaultInterruptHandler *****************
 43117 ;; Defined at:
 43118 ;;		line 55 in file "mcc_generated_files/ext_int.c"
 43119 ;; Parameters:    Size  Location     Type
 43120 ;;		None
 43121 ;; Auto vars:     Size  Location     Type
 43122 ;;		None
 43123 ;; Return value:  Size  Location     Type
 43124 ;;                  1    wreg      void 
 43125 ;; Registers used:
 43126 ;;		None
 43127 ;; Tracked objects:
 43128 ;;		On entry : 0/0
 43129 ;;		On exit  : 0/0
 43130 ;;		Unchanged: 0/0
 43131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43136 ;;Total ram usage:        0 bytes
 43137 ;; Hardware stack levels used:    1
 43138 ;; This function calls:
 43139 ;;		Nothing
 43140 ;; This function is called by:
 43141 ;;		_EXT_INT_Initialize
 43142 ;;		_INT1_CallBack
 43143 ;; This function uses a non-reentrant model
 43144 ;;
 43145                           
 43146                           	psect	text286
 43147  00A970                     __ptext286:
 43148                           	opt callstack 0
 43149  00A970                     _INT1_DefaultInterruptHandler:
 43150                           	opt callstack 13
 43151                           
 43152                           ;incstack = 0
 43153  00A970  0012               	return		;funcret
 43154  00A972                     __end_of_INT1_DefaultInterruptHandler:
 43155                           	opt callstack 0
 43156                           
 43157 ;; *************** function _ADC_ISR *****************
 43158 ;; Defined at:
 43159 ;;		line 136 in file "mcc_generated_files/adc.c"
 43160 ;; Parameters:    Size  Location     Type
 43161 ;;		None
 43162 ;; Auto vars:     Size  Location     Type
 43163 ;;		None
 43164 ;; Return value:  Size  Location     Type
 43165 ;;                  1    wreg      void 
 43166 ;; Registers used:
 43167 ;;		None
 43168 ;; Tracked objects:
 43169 ;;		On entry : 0/0
 43170 ;;		On exit  : 0/0
 43171 ;;		Unchanged: 0/0
 43172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43177 ;;Total ram usage:        0 bytes
 43178 ;; Hardware stack levels used:    1
 43179 ;; This function calls:
 43180 ;;		Nothing
 43181 ;; This function is called by:
 43182 ;;		_INTERRUPT_InterruptManager
 43183 ;; This function uses a non-reentrant model
 43184 ;;
 43185                           
 43186                           	psect	text287
 43187  00A95E                     __ptext287:
 43188                           	opt callstack 0
 43189  00A95E                     _ADC_ISR:
 43190                           	opt callstack 15
 43191                           
 43192                           ;adc.c: 139: PIR1bits.ADIF = 0;
 43193                           
 43194                           ;incstack = 0
 43195  00A95E  9C9E               	bcf	3998,6,c	;volatile
 43196  00A960  0012               	return		;funcret
 43197  00A962                     __end_of_ADC_ISR:
 43198                           	opt callstack 0
 43199                           
 43200                           	psect	text288
 43201  000000                     __ptext288:
 43202                           	opt callstack 0
 43203                           
 43204                           	psect	rparam
 43205  0000                     
 43206                           	psect	temp
 43207  000046                     btemp:
 43208                           	opt callstack 0
 43209  000046                     	ds	12
 43210  0000                     wtemp0	set	btemp
 43211  0000                     wtemp1	set	btemp+2
 43212  0000                     wtemp2	set	btemp+4
 43213  0000                     wtemp3	set	btemp+6
 43214  0000                     wtemp4	set	btemp+8
 43215  0000                     wtemp5	set	btemp+10
 43216  0000                     wtemp8	set	btemp+1
 43217  0000                     ttemp0	set	btemp
 43218  0000                     ttemp1	set	btemp+3
 43219  0000                     ttemp2	set	btemp+6
 43220  0000                     ttemp3	set	btemp+9
 43221  0000                     ttemp5	set	btemp+1
 43222  0000                     ttemp6	set	btemp+4
 43223  0000                     ttemp7	set	btemp+8
 43224  0000                     ltemp0	set	btemp
 43225  0000                     ltemp1	set	btemp+4
 43226  0000                     ltemp2	set	btemp+8
 43227  0000                     lltemp0	set	btemp
 43228                           tosu	equ	0xFFF
 43229                           tosh	equ	0xFFE
 43230                           tosl	equ	0xFFD
 43231                           stkptr	equ	0xFFC
 43232                           pclatu	equ	0xFFB
 43233                           pclath	equ	0xFFA
 43234                           pcl	equ	0xFF9
 43235                           tblptru	equ	0xFF8
 43236                           tblptrh	equ	0xFF7
 43237                           tblptrl	equ	0xFF6
 43238                           tablat	equ	0xFF5
 43239                           prodh	equ	0xFF4
 43240                           prodl	equ	0xFF3
 43241                           indf0	equ	0xFEF
 43242                           postinc0	equ	0xFEE
 43243                           postdec0	equ	0xFED
 43244                           preinc0	equ	0xFEC
 43245                           plusw0	equ	0xFEB
 43246                           fsr0h	equ	0xFEA
 43247                           fsr0l	equ	0xFE9
 43248                           wreg	equ	0xFE8
 43249                           indf1	equ	0xFE7
 43250                           postinc1	equ	0xFE6
 43251                           postdec1	equ	0xFE5
 43252                           preinc1	equ	0xFE4
 43253                           plusw1	equ	0xFE3
 43254                           fsr1h	equ	0xFE2
 43255                           fsr1l	equ	0xFE1
 43256                           bsr	equ	0xFE0
 43257                           indf2	equ	0xFDF
 43258                           postinc2	equ	0xFDE
 43259                           postdec2	equ	0xFDD
 43260                           preinc2	equ	0xFDC
 43261                           plusw2	equ	0xFDB
 43262                           fsr2h	equ	0xFDA
 43263                           fsr2l	equ	0xFD9
 43264                           status	equ	0xFD8


Data Sizes:
    Strings     10
    Constant    494
    Data        56
    BSS         1820
    Persistent  24
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      73
    BANK0           160    156     156
    BANK1           256    105     251
    BANK2           256      0     256
    BANK3           256      0     248
    BANK4           256      0     244
    BANK5           256      0      40
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxData@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1243$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 36
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), log@coeff(CODE[36]), 

    strncat@from	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), stringValue(BANK1[5]), 
		 -> STR_1(CODE[2]), 

    strncat@to	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK0[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK0[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), clearString(BANK5[40]), sensorsString(BANK3[40]), 
		 -> deviceEui(BANK3[8]), appEui(BANK3[8]), appKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), 
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), 
		 -> loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[56]), RadioConfiguration.syncWord(BANK1[8]), 
		 -> RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(UNKNOWN), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), clearString(BANK5[40]), sensorsString(BANK3[40]), 
		 -> deviceEui(BANK3[8]), appEui(BANK3[8]), appKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), 
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters.applicationKey(BANK2[16]), loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), 
		 -> loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), 
		 -> loRa.activationParameters(BANK2[105]), loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), DefaultChannels433(CODE[42]), DefaultChannels868(CODE[56]), RadioConfiguration.syncWord(BANK1[8]), 
		 -> RadioConfiguration(BANK1[54]), AESCmac@y(BANK1[16]), NULL(NULL[0]), 

    pointAddition@element	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), 

    adaptString@string	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    acquisitionData@string	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    uint16ToString@output	PTR unsigned char  size(2) Largest target is 5
		 -> stringValue(BANK1[5]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_InterruptTicker(), 

    TMR5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR5_InterruptTicker(), Absolute function(), 

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3ISRClock(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR3ISRClock(), Absolute function(), 

    EUSART2_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), 

    EUSART2_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultErrorHandler(), Absolute function(), 

    EUSART2_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), 

    EUSART2_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART2_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), 

    EUSART2_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART2_DefaultFramingErrorHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), DIO2_ISR_Lora(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB4_DefaultInterruptHandler(), Absolute function(), DIO2_ISR_Lora(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), DIO1_ISR_Lora(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), DIO1_ISR_Lora(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), DIO0_ISR_Lora(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), DIO0_ISR_Lora(), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationKey@applicationKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appKey(BANK3[16]), 

    LORAWAN_SetApplicationEui@applicationEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> appEui(BANK3[8]), 

    LORAWAN_SetDeviceEui@deviceEuiNew	PTR unsigned char  size(2) Largest target is 8
		 -> deviceEui(BANK3[8]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 40
		 -> sensorsString(BANK3[40]), NULL(NULL[0]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK0[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    S1243$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1243$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E6133,)void  size(2) Largest target is 1
		 -> RxData(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S574$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S574$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK0[2]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), 
		 -> loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), AESCmac@x(BANK1[16]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S348$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> sensorsString(BANK3[40]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK0[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESEncodeLoRa@useKey(BANK0[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), AESCmac@x(BANK1[16]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), 
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK0[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _timerHandler->i2___awdiv
    _TMR3_ISR->_TMR3_WriteTimer
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _isJoined->_LORAWAN_GetStatus
    _acuadoriApp->_sendValue
    _tempSensAcquisition->_tempConversion
    _tempConversion->___fldiv
    _log->_eval_poly
    _frexp->___fleq
    _eval_poly->___flmul
    ___flmul->___fladd
    ___flsub->___fladd
    ___fladd->_frexp
    ___fldiv->___flmul
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _SetJoinFailState->_RxJoinResponse
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _lightSensAcquisition->_acquisitionData
    _leafSensAcquisition->_acquisitionData
    _acquisitionData->_uint16ToString
    _GPIOAverageRead->_GPIOAnalogRead
    _GPIOAnalogRead->_ADC_GetConversion
    _impedenceAcquisition->_uint16ToString
    _uint16ToString->___lwmod
    _sinGenStart->_i2c_sendData
    _i2c_stop->_i2c_usdelay
    _setSDA->_GPIODigitalWrite
    _resetSDA->_GPIODigitalWrite
    _i2c_sendData->_i2c_sdaWrite
    _averageMeasure->___ltdiv
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetErrorHandler
    _EUSART2_Initialize->_EUSART2_SetFramingErrorHandler
    _EUSART2_Initialize->_EUSART2_SetOverrunErrorHandler
    _LORAWAN_SetDeviceEui->_memcpy
    _LORAWAN_SetApplicationKey->_memcpy
    _LORAWAN_SetApplicationEui->_memcpy
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate
    _GPIOInit->_GPIOAnalogMode
    _GPIOInit->_GPIODigitalWrite
    _GPIOInit->_GPIOSet

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 13292910
                  _GPIODigitalToogle
                   _GPIODigitalWrite
                           _GPIOInit
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
                      _LORAWAN_Reset
          _LORAWAN_SetApplicationEui
          _LORAWAN_SetApplicationKey
               _LORAWAN_SetDeviceEui
                  _SYSTEM_Initialize
                    _TMR5_StartTimer
                        _acuadoriApp
                           _isJoined
                         _timerReset
 ---------------------------------------------------------------------------------
 (1) _isJoined                                             5     5      0      69
                                              8 BANK0      5     5      0
                  _LORAWAN_GetStatus
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetStatus                                    8     4      4      23
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _acuadoriApp                                          0     0      0 6557801
                   _GPIODigitalWrite
           _LORAWAN_GetUplinkCounter
           _LORAWAN_SetUplinkCounter
               _impedenceAcquisition
                _leafSensAcquisition
               _lightSensAcquisition
                             _memcpy
                    _rn2483_delaysec
                          _sendValue
                            _strncat
                _tempSensAcquisition
 ---------------------------------------------------------------------------------
 (2) _tempSensAcquisition                                  4     4      0   41831
                                            100 BANK0      4     4      0
                    _GPIOAverageRead
                        _adaptString
                      _pointAddition
                     _tempConversion
                     _uint16ToString
 ---------------------------------------------------------------------------------
 (3) _tempConversion                                      16    14      2   35797
                                             86 BANK0     14    12      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  6     2      4   19667
                                             77 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                8     2      6    1458
                                             12 BANK0      8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     902
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8    8609
                                             61 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3988
                                             36 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4     666
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     484
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4729
                                             36 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3714
                                             20 BANK0     16     8      8
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2139
                                             61 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _pointAddition                                        5     3      2     245
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _strncat                                              8     2      6    4437
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (2) _sendValue                                            6     6      0 6469281
                                            154 BANK0      2     2      0
                   _LORAWAN_Mainloop
                       _LORAWAN_Send
                   _SwClearAllTimers
                         _timerReset
 ---------------------------------------------------------------------------------
 (1) _timerReset                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SwClearAllTimers                                     1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_Mainloop                                     0     0      0 6135970
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (4) _SwTimersExecute                                      5     5      0 2380044
                                            123 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (5) _UnconfirmedTransmissionCallback                      1     0      1  157624
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (5) _RADIO_WatchdogTimeout                                1     0      1  695887
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (5) _RADIO_RxFSKTimeout                                   2     1      1  510590
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158759
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (6) _GetRx1Freq                                           4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_LinkCheckCallback                            6     5      1    9521
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _DutyCycleCallback                                   11    10      1    9964
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _AutomaticReplyCallback                               1     0      1  333107
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (5) _AckRetransmissionCallback                            2     1      1  167767
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                             _RxData *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO5                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO4                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO3                                           2     2      0    9960
                                              5 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO2                                           3     3      0   36563
                                             26 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO1                                           2     2      0  556813
                                             99 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (5) _RADIO_RxTimeout                                      0     0      0  520222
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (5) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             25 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (4) _RADIO_DIO0                                           4     4      0 3132636
                                            150 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (5) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              4 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_TxDone                                         8     8      0  217540
                                            119 BANK0      8     8      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_RxDone                                         2     2      0 1106483
                                            148 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (6) ___abdiv                                              7     6      1     549
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (5) _RADIO_FSKPayloadReady                                2     2      0 1590584
                                            148 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_RxTimeout                                    9     9      0  494480
                                             90 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) _LORAWAN_ReceiveWindow2Callback                       1     0      1  327152
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_RxDone                                      28    25      3 1079833
                                            123 BANK0     25    25      0
                                            102 BANK1      3     0      3
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                             _RxData *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _UpdateRetransmissionAckTimeoutState                  4     4      0    9382
                                             50 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateJoinSuccessState                               5     4      1    9450
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) _UpdateDLSettings                                     2     1      1     228
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UpdateCfList                                        13    11      2   24213
                                             62 BANK0     13    11      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _StartReTxTimer                                       9     9      0    9673
                                             50 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (7) _SetReceptionNotOkState                               0     0      0  168427
     _LORAWAN_EnterContinuousReceive
                             _RxData *
 ---------------------------------------------------------------------------------
 (7) _SetJoinFailState                                     0     0      0      31
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (6) _RxJoinResponse                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _MacExecuteCommands                                   8     5      3   26978
                                             70 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (8) _ExecuteRxTimingSetup                                 3     1      2     843
                                              7 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveDelays                                  1     1      0     640
                                              6 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     578
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (8) _ExecuteRxParamSetupReq                               7     5      2    7473
                                             62 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (9) _ValidateRxOffset                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (8) _ExecuteNewChannel                                    8     6      2   13695
                                             62 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) _ValidateFrequency                                    5     1      4     684
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (9) _ValidateDataRange                                    4     4      0     297
                                              2 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (9) _UpdateFrequency                                      5     1      4     405
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (9) _UpdateDutyCycle                                      3     1      2     405
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (9) _UpdateDataRange                                      4     3      1     628
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (8) _LORAWAN_SetChannelIdStatus                           3     2      1    2697
                                              4 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (9) _ValidateChannelId                                    3     2      1     962
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (8) _ExecuteLinkCheck                                     2     0      2     203
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (8) _ExecuteLinkAdr                                       9     7      2    3388
                                             15 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (9) _ValidateTxPower                                      2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _ValidateDataRate                                     2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _ValidateChannelMaskCntl                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (9) _ValidateChannelMask                                  5     3      2     302
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (9) _UpdateTxPower                                        1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _UpdateCurrentDataRate                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (9) _EnableChannels                                       3     0      3    2075
                                             12 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (10) _EnableChannels1                                     8     3      5    1805
                                              4 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (9) _UpdateChannelIdStatus                                4     3      1     971
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (8) _ExecuteDutyCycle                                     6     4      2     265
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (8) _ExecuteDevStatus                                     2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_Send                                         7     3      4  333107
                                            116 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                              8 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (4) _AssemblePacket                                      12     7      5  162586
                                            104 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _IncludeMacCommandsResponse                          14     9      5    2532
                                              0 BANK0     14     9      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (6) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _FindSmallestDataRate                                 4     4      0     455
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (5) _EncryptFRMPayload                                   22     8     14   49183
                                             50 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2729
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) _AssembleEncryptionBlock                              9     2      7   20386
                                             11 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CountfOptsLength                                     8     8      0     198
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (7) _ExtractMic                                          10     6      4   15005
                                             11 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _ComputeSessionKeys                                   2     0      2   39998
                                             50 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (8) _PrepareSessionKeys                                   7     1      6   18825
                                             11 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (7) _CheckMcastFlags                                      2     0      2     290
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _CheckFlags                                           2     0      2     228
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _RADIO_FSKPacketSent                                  9     9      0  207908
                                            119 BANK0      9     9      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_TxDone                                      36    34      2  185492
                                             83 BANK0     36    34      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                             _RxData *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _SwTimerReadValue                                     9     5      4     523
                                             41 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (7) _SwTimerIsRunning                                     2     2      0      65
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _LORAWAN_EnterContinuousReceive                       0     0      0  163576
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                             _RxData *
 ---------------------------------------------------------------------------------
 (6) _RxData                                               4     0      4    4851
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (8) _RADIO_ReceiveStart                                  10     8      2  126952
                                             73 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (8) _ConfigureRadioRx                                     5     1      4   15858
                                             19 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_GetDioStatus                               1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _lightSensAcquisition                                 0     0      0    8660
                   _GPIODigitalWrite
                    _acquisitionData
                        _adaptString
                    _rn2483_delaysec
 ---------------------------------------------------------------------------------
 (2) _rn2483_delaysec                                      5     3      2     514
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _leafSensAcquisition                                  0     0      0    5991
                    _acquisitionData
                        _adaptString
 ---------------------------------------------------------------------------------
 (3) _acquisitionData                                      3     1      2    4965
                                             75 BANK0      3     1      2
                    _GPIOAverageRead
                     _uint16ToString
 ---------------------------------------------------------------------------------
 (3) _GPIOAverageRead                                     11     9      2     723
                                             13 BANK0     11     9      2
                     _GPIOAnalogRead
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (4) _GPIOAnalogRead                                       5     3      2      90
                                              8 BANK0      5     3      2
                  _ADC_GetConversion
 ---------------------------------------------------------------------------------
 (5) _ADC_GetConversion                                    8     6      2      45
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (2) _impedenceAcquisition                                 0     0      0   10573
                        _adaptString
                     _averageMeasure
                        _sinGenStart
                     _uint16ToString
 ---------------------------------------------------------------------------------
 (3) _uint16ToString                                       6     2      4    3972
                                             69 BANK0      6     2      4
                    _GPIOAverageRead (ARG)
                            ___lwdiv
                            ___lwmod
                     _averageMeasure (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1126
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _sinGenStart                                          8     8      0    4942
                                              6 BANK0      8     8      0
                    _TMR3_StartTimer
                     _TMR3_StopTimer
                    _TMR5_StartTimer
                     _TMR5_StopTimer
                       _i2c_sendData
                           _i2c_stop
                        _i2c_waitACK
 ---------------------------------------------------------------------------------
 (4) _i2c_stop                                             0     0      0    4467
                    _GPIODigitalRead
                        _i2c_usdelay
                           _resetSDA
                             _setSDA
 ---------------------------------------------------------------------------------
 (5) _setSDA                                               0     0      0    2155
                   _GPIODigitalWrite
 ---------------------------------------------------------------------------------
 (5) _resetSDA                                             0     0      0    2155
                   _GPIODigitalWrite
 ---------------------------------------------------------------------------------
 (5) _i2c_usdelay                                          4     2      2     135
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _GPIODigitalRead                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _i2c_sendData                                         2     0      2     225
                                              4 BANK0      2     0      2
                       _i2c_sdaWrite
 ---------------------------------------------------------------------------------
 (5) _i2c_sdaWrite                                         4     4      0      90
                                              0 BANK0      4     4      0
                        _i2c_waitACK
 ---------------------------------------------------------------------------------
 (4) _i2c_waitACK                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR5_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR5_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR3_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _averageMeasure                                      12    10      2     633
                                             10 BANK0     12    10      2
                            ___ltdiv
 ---------------------------------------------------------------------------------
 (4) ___ltdiv                                             10     4      6     518
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) _adaptString                                          8     5      3    1026
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_SetUplinkCounter                             4     0      4     111
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_GetUplinkCounter                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2155
                     _ADC_Initialize
                 _EUSART2_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0     111
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     111
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR3_SetInterruptHandler                             2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     800
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     400
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     333
            _EUSART2_SetErrorHandler
     _EUSART2_SetFramingErrorHandler
     _EUSART2_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetOverrunErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetFramingErrorHandler                       2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetErrorHandler                              2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceEui                                 2     0      2   14518
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationKey                            2     0      2   14518
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationEui                            2     0      2   14518
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  268122
                                            122 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SelectChannelForTransmission                         3     3      0   24694
                                             83 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (5) _SearchAvailableChannel                              12     9      3    8778
                                             71 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadioTx                                     6     2      4   15718
                                             19 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetOutputPower                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetIQInverted                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetCRC                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadio                                       5     1      4   15422
                                             14 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetModulation                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetFSKSyncWord                                 3     1      2   14479
                                             11 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetChannelFrequency                            4     0      4     321
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetBandwidth                                   1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _RADIO_Transmit                                      17    14      3  128079
                                             73 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteConfiguration                            11     9      2   91386
                                             62 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _RADIO_WritePower                                     3     3      0   10383
                                              4 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             13 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  111665
                                            113 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _Random                                               2     0      2    7569
                                             69 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (7) _rand                                                 2     0      2    5712
                                             62 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    1618
                                             64 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (7) _ComputeMic                                           9     4      5   85583
                                            104 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _AESCmac                                            116   109      7   70547
                                             90 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (6) _GenerateSubkey                                      40    34      6   27424
                                             50 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (7) _FillSubKey                                           8     3      5    1539
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (6) _AESEncodeLoRa                                       20    16      4   20942
                                             30 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (7) _AESEncode                                           24    20      4    4744
                                              7 BANK0     23    19      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (8) _EncodeShiftRow                                       3     1      2     984
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (8) _EncKeySchedule                                       7     5      2    1164
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  176994
                                             74 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             18 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             12 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Reset                                        1     1      0  101405
                                             73 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (2) _UpdateMinMaxChDataRate                               2     2      0     156
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (7) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46235
                                             25 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteMode                                      7     5      2   15915
                                              5 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (6) _RADIO_RegisterRead                                   2     2      0     130
                                              2 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_WriteFrequency                                12     8      4   16640
                                             13 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     440
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) _RADIO_RegisterWrite                                  2     1      1    9796
                                              2 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (7) _HALSPISend                                           1     1      0      62
                                              1 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (8) _SPI2_Exchange8bit                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (6) _SystemBlockingWaitMs                                 5     1      4     658
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_LinkCheckConfigure                          11     9      2   15427
                                             62 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              12     4      8    5712
                                             50 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    5857
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (5) _SwTimerStop                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _SwTimerStart                                         9     9      0    1591
                                             41 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (6) _TMR_OverrideRemaining                               10     6      4     972
                                             10 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (7) _TMR_SwapTimer                                        2     0      2     707
                                              8 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_WriteTimer                                      2     0      2     401
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _SwTimersInterrupt                                   17    13      4     458
                                             24 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (7) _TMR_GetDeltaTime                                    16    12      4     102
                                              8 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_ReadTimer                                       8     6      2     102
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (5) _SwTimerSetTimeout                                    9     5      4    1934
                                             13 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _InitDefault868Channels                               1     1      0   17947
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (2) _InitDefault433Channels                               1     1      0   17947
                                             11 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                               8     2      6    3569
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (8) _memcpy                                              11     5      6   14248
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _GPIOInit                                             0     0      0    4663
                     _GPIOAnalogMode
                   _GPIODigitalWrite
                            _GPIOSet
 ---------------------------------------------------------------------------------
 (2) _GPIOSet                                              2     1      1    1265
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (3) _GPIODigitalWrite                                     2     1      1    2155
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _GPIOAnalogMode                                       2     1      1    1243
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _GPIODigitalToogle                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _INTERRUPT_InterruptManager                          8     8      0    3027
                                             41 COMRAM     8     8      0
                            _ADC_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
                           _TMR3_ISR
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (16) _TMR5_ISR                                            0     0      0    2048
                   Absolute function *
               _TMR5_InterruptTicker *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR5_WriteTimer                                     2     0      2     266
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR5_InterruptTicker                                0     0      0    1782
                       _timerHandler
                          _timerTick
 ---------------------------------------------------------------------------------
 (18) _timerTick                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _timerHandler                                        0     0      0    1782
                            ___lbmod
                          i2___awdiv
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (19) i2___lwmod                                           5     1      4     211
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (19) i2___lwdiv                                           7     3      4     266
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (19) i2___awdiv                                           8     4      4     612
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (19) ___lbmod                                             4     3      1     693
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (16) _TMR3_ISR                                            0     0      0     266
                   Absolute function *
                       _TMR3ISRClock *
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR3_WriteTimer                                     2     0      2     266
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) _TMR3ISRClock                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _TMR1_ISR                                            0     0      0     713
                      _TMR1_CallBack
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) _TMR1_CallBack                                       0     0      0     573
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (18) _TMR_ISR_lora                                        0     0      0     573
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (19) i2_TMR_SwapTimer                                     2     0      2     257
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR1_WriteTimer                                   2     0      2     140
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (19) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (20) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (20) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (18) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
 ---------------------------------------------------------------------------------
 (17) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (17) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (17) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (18) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (17) Absolute function(Fake)                              1     0      1       0
 ---------------------------------------------------------------------------------
 (16) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPIODigitalToogle
   _GPIODigitalWrite
   _GPIOInit
     _GPIOAnalogMode
     _GPIODigitalWrite
     _GPIOSet
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxData *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RxData *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxData *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxData *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_GetStatus
           _RxData *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxData *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_Reset
     _InitDefault433Channels
       _memcpy
       _memset
     _InitDefault868Channels
       _memcpy
       _memset
     _LORAWAN_LinkCheckConfigure
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
       ___lmul
         _SwTimerReadValue (ARG)
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_SetLoRaSyncWord
     _StopAllSoftwareTimers
       _SwTimerStop
     _UpdateMinMaxChDataRate
     _memset
   _LORAWAN_SetApplicationEui
     _memcpy
   _LORAWAN_SetApplicationKey
     _memcpy
   _LORAWAN_SetDeviceEui
     _memcpy
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART2_Initialize
       _EUSART2_SetErrorHandler
       _EUSART2_SetFramingErrorHandler
       _EUSART2_SetOverrunErrorHandler
     _EXT_INT_Initialize
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
   _TMR5_StartTimer
   _acuadoriApp
     _GPIODigitalWrite
     _LORAWAN_GetUplinkCounter
     _LORAWAN_SetUplinkCounter
     _impedenceAcquisition
       _adaptString
       _averageMeasure
         ___ltdiv
       _sinGenStart
         _TMR3_StartTimer
         _TMR3_StopTimer
         _TMR5_StartTimer
         _TMR5_StopTimer
         _i2c_sendData
           _i2c_sdaWrite
             _i2c_waitACK
         _i2c_stop
           _GPIODigitalRead
           _i2c_usdelay
           _resetSDA
             _GPIODigitalWrite
           _setSDA
             _GPIODigitalWrite
         _i2c_waitACK
       _uint16ToString
         _GPIOAverageRead (ARG)
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         ___lwdiv (ARG)
         ___lwmod (ARG)
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _averageMeasure (ARG)
           ___ltdiv
     _leafSensAcquisition
       _acquisitionData
         _GPIOAverageRead
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         _uint16ToString
           _GPIOAverageRead (ARG)
             _GPIOAnalogRead
               _ADC_GetConversion
             ___ltdiv
           ___lwdiv (ARG)
           ___lwmod (ARG)
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _averageMeasure (ARG)
             ___ltdiv
       _adaptString
     _lightSensAcquisition
       _GPIODigitalWrite
       _acquisitionData
         _GPIOAverageRead
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         _uint16ToString
           _GPIOAverageRead (ARG)
             _GPIOAnalogRead
               _ADC_GetConversion
             ___ltdiv
           ___lwdiv (ARG)
           ___lwmod (ARG)
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _averageMeasure (ARG)
             ___ltdiv
       _adaptString
       _rn2483_delaysec
     _memcpy
     _rn2483_delaysec
     _sendValue
       _LORAWAN_Mainloop
         _INTERRUPT_GetDioStatus
         _RADIO_DIO0
           _RADIO_FSKPacketSent
             _LORAWAN_TxDone
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_GetStatus
               _RxData *
               _SwTimerIsRunning *
               _SwTimerReadValue *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop *
               ___lldiv *
               ___lmul *
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerReadValue
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
             _SwTimerStop
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_FSKPayloadReady
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _LORAWAN_RxDone
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CheckFlags
               _CheckMcastFlags
               _ComputeMic
                 _AESCmac
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _GenerateSubkey
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _FillSubKey
                     _memset
                   _memcpy
                   _memset
                 _memcpy
               _ComputeSessionKeys
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _PrepareSessionKeys
                   _memcpy
                   _memset
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _ExtractMic
                 _memcpy
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _LORAWAN_Send
                 _AssemblePacket
                   _AESCmac
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _GenerateSubkey
                       _AESEncodeLoRa
                         _AESEncode
                           _EncKeySchedule
                           _EncodeShiftRow
                         _memcpy
                       _FillSubKey
                       _memset
                     _memcpy
                     _memset
                   _AssembleEncryptionBlock
                     _memcpy
                     _memset
                   _CountfOptsLength
                   _EncryptFRMPayload
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _AssembleEncryptionBlock
                       _memcpy
                       _memset
                     ___awdiv
                   _FindSmallestDataRate
                   _IncludeMacCommandsResponse
                     _RADIO_GetPacketSnr
                   _memcpy
                   _memset
                 _LORAWAN_GetMaxPayloadSize
                   _CountfOptsLength
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_Transmit
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   _SwTimerStop
                   ___lldiv
                 _SelectChannelForTransmission
                   _ConfigureRadioTx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                     _RADIO_SetOutputPower
                   _SearchAvailableChannel
                     _Random
                       ___lwmod
                         _rand (ARG)
                           ___lmul
                             _SwTimerReadValue (ARG)
                               _SwTimersInterrupt
                                 _TMR_GetDeltaTime
                                   _TMR1_ReadTimer
                       _rand
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
               _MacExecuteCommands
                 _ExecuteDevStatus
                 _ExecuteDutyCycle
                 _ExecuteLinkAdr
                   _EnableChannels
                     _EnableChannels1
                       _UpdateChannelIdStatus
                   _UpdateCurrentDataRate
                   _UpdateTxPower
                   _ValidateChannelMask
                   _ValidateChannelMaskCntl
                   _ValidateDataRate
                   _ValidateTxPower
                 _ExecuteLinkCheck
                 _ExecuteNewChannel
                   _LORAWAN_SetChannelIdStatus
                     _UpdateChannelIdStatus
                     _ValidateChannelId
                   _UpdateChannelIdStatus
                   _UpdateDataRange
                   _UpdateDutyCycle
                   _UpdateFrequency
                   _ValidateChannelId
                   _ValidateDataRange
                     _ValidateDataRate
                   _ValidateFrequency
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxParamSetupReq
                   _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                   _ValidateFrequency
                   _ValidateRxOffset
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxTimingSetup
                   _UpdateReceiveDelays
                     ___wmul
               _RADIO_GetStatus
               _RADIO_ReleaseData
               _RxData *
               _SearchAvailableChannel *
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SetReceptionNotOkState *
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RxData *
               _StartReTxTimer *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _SwTimerStop *
               _UpdateCfList *
                 _LORAWAN_SetChannelIdStatus
                   _UpdateChannelIdStatus
                   _ValidateChannelId
                 _ValidateFrequency
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                 _memcpy
               _UpdateDLSettings *
               _UpdateJoinSuccessState *
                 _RxJoinResponse *
                 _SwTimerSetTimeout *
                   ___lldiv (ARG)
                 _SwTimerStart *
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv *
               _UpdateReceiveDelays *
                 ___wmul
               _UpdateRetransmissionAckTimeoutState *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _memcpy *
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RxDone
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _LORAWAN_RxDone
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CheckFlags
               _CheckMcastFlags
               _ComputeMic
                 _AESCmac
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _GenerateSubkey
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _FillSubKey
                     _memset
                   _memcpy
                   _memset
                 _memcpy
               _ComputeSessionKeys
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _PrepareSessionKeys
                   _memcpy
                   _memset
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _ExtractMic
                 _memcpy
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _LORAWAN_Send
                 _AssemblePacket
                   _AESCmac
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _GenerateSubkey
                       _AESEncodeLoRa
                         _AESEncode
                           _EncKeySchedule
                           _EncodeShiftRow
                         _memcpy
                       _FillSubKey
                       _memset
                     _memcpy
                     _memset
                   _AssembleEncryptionBlock
                     _memcpy
                     _memset
                   _CountfOptsLength
                   _EncryptFRMPayload
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _AssembleEncryptionBlock
                       _memcpy
                       _memset
                     ___awdiv
                   _FindSmallestDataRate
                   _IncludeMacCommandsResponse
                     _RADIO_GetPacketSnr
                   _memcpy
                   _memset
                 _LORAWAN_GetMaxPayloadSize
                   _CountfOptsLength
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_Transmit
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   _SwTimerStop
                   ___lldiv
                 _SelectChannelForTransmission
                   _ConfigureRadioTx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                     _RADIO_SetOutputPower
                   _SearchAvailableChannel
                     _Random
                       ___lwmod
                         _rand (ARG)
                           ___lmul
                             _SwTimerReadValue (ARG)
                               _SwTimersInterrupt
                                 _TMR_GetDeltaTime
                                   _TMR1_ReadTimer
                       _rand
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
               _MacExecuteCommands
                 _ExecuteDevStatus
                 _ExecuteDutyCycle
                 _ExecuteLinkAdr
                   _EnableChannels
                     _EnableChannels1
                       _UpdateChannelIdStatus
                   _UpdateCurrentDataRate
                   _UpdateTxPower
                   _ValidateChannelMask
                   _ValidateChannelMaskCntl
                   _ValidateDataRate
                   _ValidateTxPower
                 _ExecuteLinkCheck
                 _ExecuteNewChannel
                   _LORAWAN_SetChannelIdStatus
                     _UpdateChannelIdStatus
                     _ValidateChannelId
                   _UpdateChannelIdStatus
                   _UpdateDataRange
                   _UpdateDutyCycle
                   _UpdateFrequency
                   _ValidateChannelId
                   _ValidateDataRange
                     _ValidateDataRate
                   _ValidateFrequency
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxParamSetupReq
                   _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                   _ValidateFrequency
                   _ValidateRxOffset
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _ExecuteRxTimingSetup
                   _UpdateReceiveDelays
                     ___wmul
               _RADIO_GetStatus
               _RADIO_ReleaseData
               _RxData *
               _SearchAvailableChannel *
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SetReceptionNotOkState *
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RxData *
               _StartReTxTimer *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _SwTimerStop *
               _UpdateCfList *
                 _LORAWAN_SetChannelIdStatus
                   _UpdateChannelIdStatus
                   _ValidateChannelId
                 _ValidateFrequency
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                 _memcpy
               _UpdateDLSettings *
               _UpdateJoinSuccessState *
                 _RxJoinResponse *
                 _SwTimerSetTimeout *
                   ___lldiv (ARG)
                 _SwTimerStart *
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv *
               _UpdateReceiveDelays *
                 ___wmul
               _UpdateRetransmissionAckTimeoutState *
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _memcpy *
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
             ___abdiv
           _RADIO_TxDone
             _LORAWAN_TxDone
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_GetStatus
               _RxData *
               _SwTimerIsRunning *
               _SwTimerReadValue *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop *
               ___lldiv *
               ___lmul *
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerReadValue
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
             _SwTimerStop
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO1
           _RADIO_FHSSChangeChannel
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RxTimeout
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO2
           _RADIO_FHSSChangeChannel
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO3
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO4
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _RADIO_DIO5
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_UnhandledInterrupt
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
         _SwTimersExecute
           Absolute function(Fake) *
           _AckRetransmissionCallback *
             _FindSmallestDataRate
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForConfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
             _UpdateRetransmissionAckTimeoutState *
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
           _AutomaticReplyCallback *
             _LORAWAN_Send
               _AssemblePacket
                 _AESCmac
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _GenerateSubkey
                     _AESEncodeLoRa
                       _AESEncode
                         _EncKeySchedule
                         _EncodeShiftRow
                       _memcpy
                     _FillSubKey
                     _memset
                   _memcpy
                   _memset
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 _CountfOptsLength
                 _EncryptFRMPayload
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _AssembleEncryptionBlock
                     _memcpy
                     _memset
                   ___awdiv
                 _FindSmallestDataRate
                 _IncludeMacCommandsResponse
                   _RADIO_GetPacketSnr
                 _memcpy
                 _memset
               _LORAWAN_GetMaxPayloadSize
                 _CountfOptsLength
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _SelectChannelForTransmission
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
           _DutyCycleCallback *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _LORAWAN_LinkCheckCallback *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _LORAWAN_ReceiveWindow1Callback *
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _GetRx1Freq
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
           _LORAWAN_ReceiveWindow2Callback *
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxData *
           _RADIO_RxFSKTimeout *
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerStop
           _RADIO_WatchdogTimeout *
             _LORAWAN_RxTimeout
               _LORAWAN_ReceiveWindow2Callback
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _LORAWAN_EnterContinuousReceive
                   _ConfigureRadioRx
                     _ConfigureRadio
                       _RADIO_SetBandwidth
                       _RADIO_SetChannelFrequency
                       _RADIO_SetFSKSyncWord
                         _memcpy
                       _RADIO_SetFrequencyHopPeriod
                       _RADIO_SetLoRaSyncWord
                       _RADIO_SetModulation
                       _RADIO_SetSpreadingFactor
                     _RADIO_SetCRC
                     _RADIO_SetIQInverted
                   _RADIO_ReceiveStart
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteConfiguration
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_WriteFSKBitRate
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFSKFrequencyDeviation
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                       _RADIO_WriteFrequency
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         ___lldiv
                         ___llmod
                       _RADIO_WriteMode
                         _HALDIO5PinValue
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _SystemBlockingWaitMs
                       _RADIO_WritePower
                         _RADIO_RegisterRead
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                         _RADIO_RegisterWrite
                           _HALSPICSAssert
                           _HALSPICSDeassert
                           _HALSPISend
                             _SPI2_Exchange8bit
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _SwTimerSetTimeout
                       ___lldiv (ARG)
                     _SwTimerStart
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                       _TMR_OverrideRemaining
                         _TMR_SwapTimer
                           _TMR1_ReadTimer
                           _TMR1_WriteTimer
                     ___lldiv
                   _RADIO_ReceiveStop
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                   _RADIO_ReleaseData
                   _ResetParametersForConfirmedTransmission
                   _ResetParametersForUnconfirmedTransmission
                   _RxData *
                 _RADIO_GetStatus
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_Transmit
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 _SwTimerStop
                 ___lldiv
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxData *
               _SelectChannelForTransmission *
                 _ConfigureRadioTx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                   _RADIO_SetOutputPower
                 _SearchAvailableChannel
                   _Random
                     ___lwmod
                       _rand (ARG)
                         ___lmul
                           _SwTimerReadValue (ARG)
                             _SwTimersInterrupt
                               _TMR_GetDeltaTime
                                 _TMR1_ReadTimer
                     _rand
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
               _SetJoinFailState *
                 _RxJoinResponse *
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv *
             _LORAWAN_TxDone
               _LORAWAN_EnterContinuousReceive
                 _ConfigureRadioRx
                   _ConfigureRadio
                     _RADIO_SetBandwidth
                     _RADIO_SetChannelFrequency
                     _RADIO_SetFSKSyncWord
                       _memcpy
                     _RADIO_SetFrequencyHopPeriod
                     _RADIO_SetLoRaSyncWord
                     _RADIO_SetModulation
                     _RADIO_SetSpreadingFactor
                   _RADIO_SetCRC
                   _RADIO_SetIQInverted
                 _RADIO_ReceiveStart
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteConfiguration
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_WriteFSKBitRate
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFSKFrequencyDeviation
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                     _RADIO_WriteFrequency
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       ___lldiv
                       ___llmod
                     _RADIO_WriteMode
                       _HALDIO5PinValue
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _SystemBlockingWaitMs
                     _RADIO_WritePower
                       _RADIO_RegisterRead
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                       _RADIO_RegisterWrite
                         _HALSPICSAssert
                         _HALSPICSDeassert
                         _HALSPISend
                           _SPI2_Exchange8bit
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _SwTimerSetTimeout
                     ___lldiv (ARG)
                   _SwTimerStart
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
                     _TMR_OverrideRemaining
                       _TMR_SwapTimer
                         _TMR1_ReadTimer
                         _TMR1_WriteTimer
                   ___lldiv
                 _RADIO_ReceiveStop
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                 _RADIO_ReleaseData
                 _ResetParametersForConfirmedTransmission
                 _ResetParametersForUnconfirmedTransmission
                 _RxData *
               _RADIO_GetStatus
               _RxData *
               _SwTimerIsRunning *
               _SwTimerReadValue *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
               _SwTimerSetTimeout *
                 ___lldiv (ARG)
               _SwTimerStart *
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop *
               ___lldiv *
               ___lmul *
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _UnconfirmedTransmissionCallback *
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _ResetParametersForUnconfirmedTransmission
             _RxData *
             _SelectChannelForTransmission *
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
       _LORAWAN_Send
         _AssemblePacket
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CountfOptsLength
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _FindSmallestDataRate
           _IncludeMacCommandsResponse
             _RADIO_GetPacketSnr
           _memcpy
           _memset
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _SelectChannelForTransmission
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _SwClearAllTimers
       _timerReset
     _strncat
     _tempSensAcquisition
       _GPIOAverageRead
         _GPIOAnalogRead
           _ADC_GetConversion
         ___ltdiv
       _adaptString
       _pointAddition
       _tempConversion
         ___fladd
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___fldiv
           ___fladd (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___flmul (ARG)
             ___fladd (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl (ARG)
           _frexp (ARG)
             ___fleq
         ___flsub
           ___fladd
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
         ___fltol
         ___xxtofl
         _log
           ___fladd
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___fleq
           ___flmul
             ___fladd (ARG)
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___xxtofl (ARG)
             _frexp (ARG)
               ___fleq
           ___xxtofl
           _eval_poly
             ___fladd
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
                 _frexp (ARG)
                   ___fleq
               ___xxtofl (ARG)
               _frexp (ARG)
                 ___fleq
           _frexp
             ___fleq
       _uint16ToString
         _GPIOAverageRead (ARG)
           _GPIOAnalogRead
             _ADC_GetConversion
           ___ltdiv
         ___lwdiv (ARG)
         ___lwmod (ARG)
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _averageMeasure (ARG)
           ___ltdiv
   _isJoined
     _LORAWAN_GetStatus
   _timerReset

 _INTERRUPT_InterruptManager (ROOT)
   _ADC_ISR
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer
     i2_TMR1_WriteTimer
   _TMR3_ISR
     Absolute function(Fake) *
     _TMR3ISRClock *
     _TMR3_WriteTimer *
   _TMR5_ISR
     Absolute function(Fake) *
     _TMR5_InterruptTicker *
       _timerHandler
         ___lbmod
         i2___awdiv
         i2___lwdiv
         i2___lwmod
       _timerTick
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     3AE      37       24.2%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      28      16       15.6%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      F4      14       95.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F8      11       96.9%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     69      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9C      9C       5       97.5%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      49       1       88.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4F4      12        0.0%
DATA                 0      0     8A4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul 21 18:01:06 2020

                                  ??_LORAWAN_TxDone 00B5                          __end_of_DIO3_ISR_Lora_Init A96A  
                                ?_LORAWAN_RxTimeout 0001                                        ___fldiv@aexp 00B5  
                                      ___fldiv@bexp 00B4                    __end_of_TMR5_SetInterruptHandler A83A  
                                      ___fldiv@sign 00AD                    __size_of_RADIO_FHSSChangeChannel 003C  
                                    HALSPISend@data 0061                                         _pulseSignal 01F3  
                   __end_of_ValidateChannelMaskCntl A3F0                                        ___awdiv@sign 0065  
                   __size_of_UpdateJoinSuccessState 013E                                 ___wmul@multiplicand 0062  
                __size_of_IOCB4_SetInterruptHandler 000A                                  i2___lwdiv@dividend 0001  
                                      _TMR_ISR_lora 928A                                      _GPIOAnalogRead A510  
                                    _GPIOAnalogMode 63A8                               __end_of_AESEncodeLoRa 9CEA  
                                 ??_TMR5_WriteTimer 0003                                         ?_RADIO_DIO0 0001  
                                       ?_RADIO_DIO1 0001                                         ?_RADIO_DIO2 0001  
                                       ?_RADIO_DIO3 0001                                         ?_RADIO_DIO4 0001  
                                       ?_RADIO_DIO5 0001                              ??_lightSensAcquisition 00AE  
                        ?_IOCB4_SetInterruptHandler 0060                            __size_of_acquisitionData 0022  
                                      __CFG_CP0$OFF 000000                                        __CFG_CP1$OFF 000000  
                                      __CFG_CP2$OFF 000000                                        __CFG_CP3$OFF 000000  
                                       __CFG_LVP$ON 000000                                 ??_LORAWAN_RxTimeout 00BA  
                                               l242 8B74                                                 l610 9C34  
                                               l484 16D4                                         ?_RADIO_Init 0079  
                                               l478 14C0                                                 l497 17B6  
                                               l691 9858                                                 l694 986A  
                                               l688 9C00                                     ??_UpdateTxPower 0060  
                                      __CFG_CPB$OFF 000000                                        __CFG_CPD$OFF 000000  
              __end_of_SelectChannelForTransmission 8E02               __size_of_SelectChannelForTransmission 0068  
                      _SelectChannelForTransmission 8D9A                              _ExecuteRxParamSetupReq 53CC  
                                _RADIO_Transmit$781 00B4                                  _DIO2_ISR_Lora_Init A766  
                                __size_of_AESEncode 0300              __end_of_EUSART2_SetFramingErrorHandler A880  
           __size_of_EUSART2_SetFramingErrorHandler 000A                      _EUSART2_SetFramingErrorHandler A876  
                               _tempSensAcquisition 90BE                                     _timer1ReloadVal 01E7  
                                   ?_EncKeySchedule 0060                                                 _log 4C90  
                                   __end_of_ADC_ISR A962                                                 _low 0121  
                             _RADIO_SetLoRaSyncWord A8D0                                                 prod 000FF3  
                                               tosl 000FFD                                                 wreg 000FE8  
                                        _TXSTA2bits 000F72                                     __end_of_AESCmac 1EB6  
                           __end_of_SwTimersExecute 79FE                              SystemBlockingWaitMs@ms 0060  
                           LORAWAN_Join@bufferIndex 00DA                                        ___flmul@aexp 0095  
                                      ___flmul@bexp 0096                            __size_of_RADIO_GetStatus 0006  
                             ?_SystemBlockingWaitMs 0060                                ??i2_TMR_GetDeltaTime 000D  
                                      ___flmul@sign 0090                                        ___flmul@temp 009B  
                                      ___flmul@prod 0097                            ??_SearchAvailableChannel 00AA  
                      __end_of_FindSmallestDataRate 7AC0                 __end_of_RADIO_SetFrequencyHopPeriod A8C6  
                       _RADIO_SetFrequencyHopPeriod A8BC                                          _CheckFlags 911C  
                             ??_leafSensAcquisition 00AE                              ?_TMR_OverrideRemaining 006A  
                                     _INT1_CallBack A4F0                            ?_AssembleEncryptionBlock 006B  
                               ?_DIO2_ISR_Lora_Init 0001                                   ??_UpdateFrequency 0064  
                         __size_of_SwClearAllTimers 0030                                     __end_of_GPIOSet 6DCE  
                                      ___fltol@exp1 0069                                  __size_of_IOCB4_ISR 0020  
                                              l1101 A14E                                                l1040 0E92  
                                              l1109 931E                                                l1117 49E8  
                                              l1222 6550                                                l2024 1854  
                                              l1128 4636                                                l1072 31F4  
                                              l1049 1114                                                l1233 6212  
                                              l1241 A68E                                                l1145 54B6  
                                              l1154 689A                                                l2034 193C  
                                              l1067 31EA                                                l1315 31A4  
                                              l1164 68D8                                                l2028 192E  
                                              l2029 1928                                                l1262 A2DE  
                                              l1511 7EC6                                                l1256 98B0  
                                              l1097 A6A6                                                l1249 8C56  
                                              l1282 975C                                     _timer3ReloadVal 01E3  
                                              l2076 27EA                                                l1268 A3EC  
                                              l4102 3C2C                                                l1527 6FD0  
                                              l4103 3C28                                                l4008 997A  
                                              l1529 6FD8                                                l1297 8CFA  
                                              l4121 1F38                                                l1810 7600  
                                              l4130 2150                                                l1539 70A4  
                                              l4131 214C                                                l4052 2DB0  
                                              l4036 2CDE                                                l3317 5B9E  
                                              l1805 7C64                                                l4061 2E16  
                                              l4037 2CBC                                                l2198 A73E  
                                              l3502 A2EE                                                l3342 5C2E  
                                              l4062 2E12               RADIO_WriteConfiguration@symbolTimeout 009E  
                                              l1807 7CE8                                                l3344 5C54  
                                              l2528 9350                                                l1912 0122  
                                              l1834 5100                                                l4162 580C  
                                              l4138 21D6                                                l1819 7610  
                                              l3371 8F90                                                l4091 3BBE  
                                              l1856 6168                                                l4169 588A  
                                              l3546 8624                                                l1786 5300  
                                              l3483 A62E                                                l3486 A63C  
                                              l1888 7818                                                l3927 8EC0  
                                              l3973 8CB8                                                ?_log 00AD  
                                              l3978 8CAC                                                l3998 93D2  
                                              STR_1 FFF5                                                STR_2 FFF7  
                                              STR_3 FFFD                                                STR_4 FFFB  
                                              STR_5 FFF9                                    _RADIO_WritePower 71A4  
                                              STR_6 FFFD                                                STR_7 FFFB  
                                              STR_8 FFF9                        ??_LORAWAN_SetChannelIdStatus 0065  
                           _PrepareJoinRequestFrame 567A                                                _LATA 000F89  
                                              _LATB 000F8A                                                _LATC 000F8B  
                                              _LATD 000F8C                                                _LATE 000F8D  
                                      ?_RADIO_Reset 0001                          __size_of_RADIO_ReceiveStop 0020  
                                              _TMR1 000FCE                                                _TMR3 000FB2  
                                              _TMR5 000F4F                                   ??_UpdateDutyCycle 0062  
                                              _WPUB 000F61                              ??_LORAWAN_PlatformInit 0062  
                                     _INT2_CallBack A4D0                   __end_of_LORAWAN_SetApplicationEui A01A  
                 __end_of_LORAWAN_SetApplicationKey 9FEC                                                _nACK 0120  
                          ??_InitDefault433Channels 006B                            ExecuteNewChannel@drRange 00A0  
                                _PrepareSessionKeys 80D4                                                _flag 0041  
                                              _clip 0123                                                _high 0122  
                                              _loRa 0205                                                _main 7292  
                                              _rand 91D6                                __size_of_adaptString 0078  
                    __end_of_UpdateMinMaxChDataRate 787A                                                fsr0h 000FEA  
                                              fsr1h 000FE2                                  i2___lwdiv@quotient 0005  
                                              indf0 000FEF                                                fsr2h 000FDA  
                                              fsr0l 000FE9                                                indf2 000FDF  
                                              fsr1l 000FE1                                                fsr2l 000FD9  
                           __size_of_RADIO_Transmit 0224                                                btemp 0046  
                                     __CFG_BORV$190 000000                      __size_of_StopAllSoftwareTimers 0052  
                                     ComputeMic@mic 00CD                                       ComputeMic@key 00C8  
                                              log@x 00AD                           __end_of_LORAWAN_RxTimeout 34AE  
                         __size_of_ConfigureRadioRx 002A                           __size_of_ConfigureRadioTx 004C  
                 __size_of_INT2_SetInterruptHandler 000A                       __end_of_StopAllSoftwareTimers 94D4  
                              ?_tempSensAcquisition 0001                                       ?_i2c_sdaWrite 0001  
                         ?_INT2_SetInterruptHandler 0060                                                prodh 000FF4  
                                              prodl 000FF3                                                start 00A4  
                                   _timer5ReloadVal 01DF                                       __CFG_IESO$OFF 000000  
                          __end_of_CountfOptsLength 77B0                                     ___fldiv@new_exp 00AE  
                                     ?_i2c_sendData 0064                                     _TMR3_Initialize A0FC  
                                     ??_i2c_waitACK 0060                               ExecuteLinkAdr@txPower 0074  
                               __size_of_HALSPISend 000E                                     _GPIODigitalRead 7AC0  
                        ??_TMR1_SetInterruptHandler 0062                          EnableChannels1@channelMask 0064  
                                  ??_AssemblePacket 00CD                              ?_HALResetPinMakeOutput 0001  
                               ?_PrepareSessionKeys 006B                              __size_of_TMR_SwapTimer 0042  
                        __end_of_RADIO_GetPacketSnr A914                                        ___param_bank 000000  
                                        _GetRx1Freq A6EC                                         _stringValue 016F  
                        __size_of_RADIO_ReleaseData 0006                                ??_DIO2_ISR_Lora_Init 0062  
                                     ??_i2c_usdelay 0062                              __end_of_GPIOAnalogRead A52E  
                            __end_of_GPIOAnalogMode 64BC                     __end_of_CreateAllSoftwareTimers 9526  
            SearchAvailableChannel@transmissionType 00A7                     __size_of_HALResetPinOutputValue 001A  
                                             ??_log 00B1                               MacExecuteCommands@ptr 00AC  
                             _RADIO_WriteFSKBitRate 8E02                            __size_of_SystemTimerInit 0008  
                                  __end_of_INT1_ISR A90E                                    __end_of_INT2_ISR A906  
                                  __end_of_GPIOInit 5E00                      __size_of_OSCILLATOR_Initialize 000E  
                            ExecuteLinkAdr@dataRate 0077                       __end_of_OSCILLATOR_Initialize A7EC  
                __size_of_LORAWAN_LinkCheckCallback 016C                                               l20012 7034  
                                             l20004 7020                                               l20022 7048  
                                             l20112 87F0                                               l20130 882C  
                                             l20204 44BE                                               l20212 451A  
                                             l20206 44FA                                               l20150 87A0  
                                             l20070 5B60                                               l20160 9132  
                                             l20320 03F6                                               l20304 02F2  
                                             l20232 00E2                                               l21112 4FD2  
                                             l20064 5AC4                                               l21106 4FB4  
                                             l21122 5006                                               l21050 2F9C  
                                             l21042 2EE0                                     __end_of___abdiv 8F38  
                                             l20164 9148                                               l20180 43FC  
                                             l20500 0844                                               l20412 0624  
                                             l20420 0630                                               l20260 01C6  
                                             l21052 2FB6                                               l21060 3052  
                                             l21212 7946                                               l20190 446A  
                                             l20182 4410                                               l20238 011E  
                                             l20168 915E                                               l20192 4480  
                                             l20184 4428                                               l20176 434C  
                                             l20512 08AA                                               l20504 0854  
                                             l20440 0736                                               l20336 046E  
                                             l20408 05F6                                               l20256 01B4  
                                             l21128 5064                                               l21072 3100  
                                             l21224 79EA                                               l21402 8A56  
                                             l20194 4496                                               l20186 443E  
                                             l20530 0988                                               l20514 08B8  
                                             l20346 04B6                                               l20338 0486  
                                             l20282 0270                                               l21162 60F8  
                                             l21226 79EE                                               l14220 6DDE  
                                             l21500 7F38                                               l15100 7B00  
                                             l20196 44AC                                               l20188 4454  
                                             l20372 04F0                                               l20356 04C2  
                                             l20700 3442                                               l21244 82B2  
                                             l21252 82C6                                               l14222 6DE2  
                                             l20470 07E4                                               l20622 0B72  
                                             l21262 82F6                                               l21254 82D6  
                                             l21246 82B8                                               l21158 60F2  
                                             l21350 9E08                                               l14240 6E0C  
                                             l14232 6DFA                                               l14216 6DD4  
                                             l21440 52EE                                               l15112 7B12  
                                             l20800 12A2                                               l20536 0A18  
                                             l20392 05AE                                               l20376 0500  
                                             l20368 04D6                                               l20640 31D8  
                                             l21264 82FE                                               l21248 82BE  
                                             l21088 7C66                                               l21168 6122  
                                             l22240 7330                                               l22224 72FE  
                                             l14250 6E24                                               l14234 6DFE  
                                             l14226 6DEC                                               l21418 8ACE  
                                             l21434 52BE                                               l21442 52F2  
                                             l15106 7B08                                               l15202 93A0  
                                             l20730 0D7E                                               l20298 02E2  
                                             l20618 0B6C                                               l20706 347A  
                                             l21258 82E8                                               l21274 96D8  
                                             l21282 96EC                                               l21178 6164  
                                             l21346 9DEE                                               l14252 6E28  
                                             l14244 6E16                                               l14228 6DF0  
                                             l15124 7B26                                               l15132 7B30  
                                             l15204 93A8                                               l20628 0BB0  
                                             l20468 07CC                                               l20820 8EF0  
                                             l21268 8306                                               l21276 96DE  
                                             l21292 95A4                                               l21188 8960  
                                             l14270 6E52                                               l14262 6E40  
                                             l14246 6E1A                                               l14238 6E08  
                                             l15118 7B1C                                               l15070 7AD4  
                                             l15214 93C8                                               l16102 9B02  
                                             l20582 0AD8                                               l20478 0824  
                                             l20662 32AC                                               l20830 8F06  
                                             l20814 8EE6                                               l21278 96E4  
                                             l21286 96FC                                               l21294 95AA  
                                             l15230 583A                                               l22238 732A  
                                             l14280 6E6A                                               l14264 6E44  
                                             l14256 6E32                                               l21448 5354  
                                             l21376 4BCA                                               l21640 56B8  
                                             l16120 89FA                                               l15064 7ACC  
                                             l20744 0FC8                                               l20584 0ADE  
                                             l20488 082A                                               l20680 32F8  
                                             l20656 3274                                               l20912 7E00  
                                             l14504 2DF4                                               l14424 2C70  
                                             l15232 5840                                               l15224 581C  
                                             l14282 6E6E                                               l14274 6E5C  
                                             l14258 6E36                                               l14290 6E7C  
                                             l21386 4C14                                               l21378 4BE0  
                                             l16114 89CA                                               l15082 7AE8  
                                             l15058 7AC6                                               l20754 1040  
                                             l20586 0AE4                                               l20682 3300  
                                             l20674 32F2                                               l20826 8F00  
                                             l20842 8F2E                                               l21298 95B2  
                                             l14362 2BCC                                               l15242 58B0  
                                             l15234 584C                                               l17020 7FBC  
                                             l17012 7FA4                                               l14276 6E60  
                                             l14268 6E4E                                               l21740 9018  
                                             l16108 89AC                                               l15164 91BC  
                                             l15156 9188                                               l15076 7ADE  
                                             l15148 A2F8                                               l20764 10FC  
                                             l20772 117A                                               l20748 103A  
                                             l20588 0AEA                                               l20932 7E3E  
                                             l20908 7DE2                                               l21708 8F44  
                                             l14532 2E82                                               l14524 2E5C  
                                             l14460 2D24                                               l14452 2D02  
                                             l14436 2CCA                                               l15260 58FC  
                                             l15244 58BC                                               l15236 5872  
                                             l17030 7FDA                                               l17022 7FC2  
                                             l17014 7FAA                                               l14286 6E78  
                                             l21582 4840                                               l21654 56FA  
                                             l16118 89F8                                               l15182 8C78  
                                             l15166 91BE                                               l15094 7AFA  
                                             l20790 1256                                               l20694 33C4  
                                             l20838 8F26                                               l14462 2D28  
                                             l14470 2D3A                                               l14438 2CCE  
                                             l14382 2C10                                               l14358 2BC8  
                                             l14630 20F8                                               l17032 7FE0  
                                             l17024 7FC8                                               l17016 7FB0  
                                             l14704 A670                                               l18000 363A  
                                             l16128 8A0E                                               l15184 8C82  
                                             l15088 7AF0                                               l20784 11E2  
                                             l20696 33C8                                               l20936 7E54  
                                             l20928 7E3A                                               l20872 73E4  
                                             l14536 2E8A                                               l14480 2DA0  
                                             l14560 1EE4                                               l15272 7D40  
                                             l16240 2B7C                                               l16232 2B0C  
                                             l17034 7FE6                                               l17026 7FCE  
                                             l17018 7FB6                                               l21738 9014  
                                             l16138 5B96                                               l15506 88C4  
                                             l16090 9AD0                                               l20962 6760  
                                             l16250 97E6                                               l15610 3B06  
                                             l14538 2E8C                                               l14394 2C34  
                                             l14386 2C14                                               l14562 1EE8  
                                             l16234 2B34                                               l17028 7FD4  
                                             l15348 8B76                                               l18100 8EB2  
                                             l18004 365C                                               l15532 9E4A  
                                             l16172 5BFA                                               l16156 5BDC  
                                             l16148 5BAA                                               l20796 126E  
                                             l20876 7402                                               l15604 3AF0  
                                             l14660 21B2                                               l14636 2116  
                                             l14580 1F28                                               l14564 1EF8  
                                             l17038 7FEC                                               l18110 A034  
                                             l18006 3666                                               l16158 5BDE  
                                             l20886 7434                                               l15710 7B9E  
                                             l15286 6B24                                               l15550 4CFC  
                                             l16238 2B6C                                               l18024 377C  
                                             l16264 83B0                                               l15536 9E68  
                                             l16096 9AD8                                               l20984 6654  
                                             l19000 65A4                                               l20888 7438  
                                             l14488 2DD4                                               l14672 21F4  
                                             l14656 2194                                               l15288 6BBA  
                                             l15544 4CB4                                               l18106 A024  
                                             l18202 6C80                                               l18122 9478  
                                             l15642 3BBC                                               l15618 3B1E  
                                             l14498 2DEA                                               l15730 7BF8  
                                             l14578 1F24                                               l14690 8282  
                                             l14682 8230                                               l18204 6C84  
                                             l20996 9E2E                                               l15636 3B96  
                                             l15628 3B6E                                               l15572 3A78  
                                             l14588 1F56                                               l16702 6474  
                                             l16710 6CE2                                               l18142 6A02  
                                             l18062 9258                                               l18206 6C8E  
                                             l18118 943C                                               l19110 67FA  
                                             l15654 3BF2                                               l15726 7BE8  
                                             l14686 8264                                               l16640 63C0  
                                             l16712 6CE6                                               l18152 6ABA  
                                             l18072 85D6                                               l18312 726E  
                                             l19112 6800                                               l19200 7ABA  
                                             l15648 3BD4                                               l15592 3AB8  
                                             l15576 3A7C                                               l15744 7C28  
                                             l15736 7C00                                               l16650 63DE  
                                             l16634 63AE                                               l16730 6D10  
                                             l16722 6CFE                                               l16706 6CD8  
                                             l18154 6ABC                                               l18074 85E2  
                                             l18058 9244                                               l18218 6CBC  
                                             l18170 6C0C                                               l18162 6BF2  
                                             l18306 7266                                               l19210 99FA  
                                             l15690 3CCC                                               l15682 3CBE  
                                             l15674 3C70                                               l15738 7C0C  
                                             l16652 63E4                                               l16644 63CC  
                                             l16740 6D28                                               l16724 6D02  
                                             l16716 6CF0                                               l18148 6A56  
                                             l18084 8616                                               l18092 8E7E  
                                             l18260 71C0                                               l19300 267A  
                                             l15596 3ABC                                               l16670 641A  
                                             l16662 6402                                               l16646 63D2  
                                             l16638 63BA                                               l16742 6D2C  
                                             l16734 6D1A                                               l16718 6CF4  
                                             l18094 8E8A                                               l18182 6C36  
                                             l18190 6C54                                               l18422 5E84  
                                             l18414 5E66                                               l18510 14BC  
                                             l19142 68D4                                               l19302 2680  
                                             l15678 3C94                                               l16680 6438  
                                             l16664 6408                                               l16656 63F0  
                                             l16760 6D56                                               l16752 6D44  
                                             l16736 6D1E                                               l16728 6D0C  
                                             l18440 5EF2                                               l18432 5ED4  
                                             l18264 71CE                                               l18280 720E  
                                             l18600 16E2                                               l19128 689E  
                                             l19136 68BA                                               l19312 26CA  
                                             l15688 3CCA                                               l16682 643E  
                                             l16674 6426                                               l16658 63F6  
                                             l16770 6D6E                                               l16754 6D48  
                                             l16746 6D36                                               l18186 6C42  
                                             l18346 9EB6                                               l19250 4F8C  
                                             l19226 4E88                                               l19218 4E4A  
                                             l19322 270E                                               l18354 61B6  
                                             l19074 977E                                               l16692 645C  
                                             l16676 642C                                               l16668 6414  
                                             l16772 6D72                                               l16764 6D60  
                                             l16748 6D3A                                               l16780 6D80  
                                             l18460 81CC                                               l18292 723A  
                                             l18284 721E                                               l18620 1786  
                                             l18612 1758                                               l18540 153C  
                                             l19500 8DFC                                               l19260 779E  
                                             l19244 4F46                                               l19236 4EF2  
                                             l19172 7A14                                               l19340 2774  
                                             l19316 26F4                                               l18356 61BC  
                                             l16694 6462                                               l16686 644A  
                                             l16766 6D64                                               l16758 6D52  
                                             l17902 90AA                                               l17910 9A16  
                                             l15990 786C                                               l18390 9950  
                                             l18278 7200                                               l19422 3FDE  
                                             l19254 76F2                                               l19262 77A0  
                                             l19182 7A7A                                               l19174 7A1A  
                                             l19350 27BE                                               l18366 6262  
                                             l16790 853E                                               l16688 6450  
                                             l16776 6D7C                                               l18392 9958  
                                             l18288 722C                                               l18616 176A  
                                             l18480 13DE                                               l19432 4006  
                                             l19416 3FB4                                               l19264 77AC  
                                             l19184 7A7C                                               l19192 7A9E  
                                             l19336 275C                                               l18368 6266  
                                             l16792 854E                                               l16698 646E  
                                             l17826 A464                                               l15978 77C2  
                                             l18802 1C26                                               l18626 17AA  
                                             l18482 1416                                               l18490 145C  
                                             l19418 3FCC                                               l18722 76AA  
                                             l19370 2852                                               l19282 25DC  
                                             l19274 2550                                               l16794 855E  
                                             l15988 7868                                               l18820 1CD6  
                                             l18812 1C8E                                               l18804 1C60  
                                             l18548 155C                                               l18492 146E  
                                             l18476 138E                                               l19428 3FF0  
                                             l18716 767E                                               l19292 2626  
                                             l19372 2854                                               l19516 932A  
                                             l19540 4990                                               l19620 46C0  
                                             l16788 8538                                               l18822 1CE6  
                                             l18398 9970                                               l18590 1686  
                                             l18582 163C                                               l18478 13B6  
                                             l18486 142A                                               l19462 411C  
                                             l19382 3F16                                               l18902 3D4E  
                                             l18718 7688                                               l18742 8438  
                                             l19358 27F2                                               l19606 4614  
                                             l17936 6336                                               l17944 9ED8  
                                             l17864 38BE                                               l18832 1CF2  
                                             l18816 1CB8                                               l18592 1692  
                                             l18488 1442                                               l19456 40A6  
                                             l18912 3D9C                                               l18904 3D7A  
                                             l19296 2650                                               l19368 2816  
                                             l18680 8CD6                                               l19624 4716  
                                             l17938 6396                                               l17866 38C8  
                                             l18842 1D56                                               l18674 80C4  
                                             l18922 3E28                                               l18754 845E  
                                             l18770 8490                                               l19626 4722  
                                             l19618 46B4                                               l17948 9EF6  
                                             l17956 34BC                                               l19396 3F48  
                                             l19388 3F2E                                               l18916 3DB6  
                                             l18756 8466                                               l18748 8448  
                                             l19724 18E0                                               l18692 8D0A  
                                             l18684 8CE4                                               l19548 49C6  
                                             l19572 4A86                                               l19628 4726  
                                             l19652 5492                                               l17894 9070  
                                             l18790 1BB8                                               l18598 16BC  
                                             l18934 3EF8                                               l18774 849E  
                                             l18766 8486                                               l18694 8D14  
                                             l18686 8CEE                                               l19574 4ABC  
                                     ___fltol@sign1 0068                                               l17992 3604  
                                             l17984 353E                                               l17968 34E8  
                                             l18848 1D5C                                               l18928 3E82  
                                             l19752 195A                                               l19728 18E4  
                                             l19680 9612                                               l19568 4A6E  
                                             l19648 546E                                               l19840 A5D0  
                                             l19912 413E                                               l17994 360E  
                                             l18866 1E42                                               l18858 1E02  
                                             l19754 196C                                               l18698 8D26  
                                             l18954 8C2C                                               l19666 551E  
                                             l19930 432C                                               l18796 1BE6  
                                             l18892 3CFE                                               l19780 1A52  
                                             l17998 3630                                               l18886 3CE6  
                                             l19678 95F2                                               l18896 3D14  
                                             l19768 19D0                                               l19960 5600  
                                             l19928 4320                                               l18898 3D20  
                                             l19786 1ABA                                               l19698 184C  
                                             l19946 5538                                               l19938 A5B0  
                                             l19890 75F8                                               l18988 64FA  
                                             l19990 6FF2                                               l19982 6FE0  
                                             l18998 65A0                                               l19958 55FC  
                                             l19894 7608                                               l19886 75EA  
                                             l19996 7006                                     __end_of___fladd 2EA8  
                                             ?_main 0001                                     __end_of___fldiv 3CD4  
                                             ?_rand 009E                                     __end_of___awdiv 84A8  
                                        _FillSubKey 9430                                     __end_of___lbmod A1D0  
                                   __end_of___flmul 220A                                     __end_of___flsub 97E0  
                                   __end_of___fltol 7C3A                   __end_of_IOCB4_SetInterruptHandler A858  
                                     ?_RADIO_SetCRC 0001                                     __end_of___lldiv 8636  
                                   RADIO_Transmit@i 00B9                                               u20050 1D30  
                                   ___awdiv@divisor 0062                                               u21005 4094  
                                             u20230 8C26                                               u21015 40B8  
                                             u20400 A14A                                               _T1CON 000FCD  
                                   __end_of___llmod 8ED2                                               u20170 3E48  
                                             u22010 8758                                               u20155 3DD6  
                                             u21220 4600                                               u21048 8896  
                                             u20280 98AA                                               u20185 3E70  
                                             u20530 6898                                               u21074 930E  
                                             u20450 977A                                               u22130 453A  
                                             u20195 3E94                                               u21075 9308  
                                             u22300 03F4                                               u22220 01AE  
                                             u14300 2CA4                                   ??_EnableChannels1 0069  
                                             u20550 68AC                                               u20630 7A88  
                                             u20390 A142                                               u23200 0F9E  
                                             u22048 8788                                               _LATC2 007C5A  
                                             _T3CON 000FB1                                               u22049 879C  
                                             u20570 68C0                                               u23210 0FFC  
                                             u21450 1952                                               u22330 0452  
                                             u22250 028C                                               u14330 2CE6  
                              RxJoinResponse@status 0060                                               _LATD3 007C63  
                                             u23300 11AA                                               u20900 2860  
                                             u20820 2668                                               u22420 0540  
                                             u23108 349A                                               u23205 0F94  
                                             u20750 7760                                               u20670 7AB2  
                                             u22190 0192                                               u23215 0FF0  
                                             u23135 0C46                                               u22271 02CA  
                                             u20760 77AC                   __end_of_AckRetransmissionCallback 616E  
                                             u14280 2C92              SearchAvailableChannel@randomNumberCopy 00AE  
                                             u23145 0CC6                                               u23065 33E4  
                                             u21810 7030                                               u22610 08EC  
                                             u22450 0620                                               u22290 02E2  
                                             u23410 8F14                                               u24018 611C  
                                             u14290 2CA2                                               u16210 7B8C  
                                             u23315 11D0                                               u23155 0DB2  
                                             u15500 9192                                               u22348 0468  
                                             u16140 3C22                                               u14540 2E68  
                                             u14460 2DF8                                               u16220 7BBC  
                                             u14700 2146                                               u23325 11F4  
                                             u23165 0E32                                               u21725 5624  
                                             u23190 0F80                                               u20870 274A  
                                             u20790 25DA                                               u22710 0AA4  
                                             u22470 0730                                               u23600 6612  
                                             u22528 07B2                                               u22448 05E2  
                                             u23088 3466                                               u23520 7E34  
                                             u21568 75D6                                               u14480 2E0C  
                                             _T5CON 000F4E                                               u22529 07C6  
                                             u21905 5AD6                                               u16225 7BB2  
                                             u24330 531A                                               u15610 93AC  
                                             u23610 662A                                               u22570 083E  
                                             u24058 6150                                               u24138 79D6  
                                             u14650 1F44                                     __end_of___ltdiv 8CC6  
                                             u24155 8294                                               u24139 79E8  
                                             u15540 91C8                                               u15524 91A8  
                                             u23620 6692                                               u16180 3C7E  
                                             u16260 7C12                                               u14740 21A2  
                                             u14660 20BA                                               u15525 91A4  
                                             u20990 406C                                               u15550 91CC  
                                             u23358 128E                                               u21950 87EC  
                                             u21598 A0E8                                               u23470 73BC  
                                             u23550 671E                                               u16190 3CA2  
                                             u14750 21C0                                               u23615 661E  
                                             u19000 9476                                               u23560 6736  
                                             u21928 5B6E                                               u21880 5A7C  
                                             u25160 731A                                               u24345 5342  
                                             u23625 6686                                               u21865 8B9A  
                                             u21929 5B82                                               u14665 20B0  
                                             u15490 918E                                               u23378 12C2  
                                             u23570 679E                                               u24098 8984  
                                             u24355 5366                                               u24099 8998  
                                             u19020 86CA                                               u15580 8C86  
                                             u22780 0B36                                               u22748 0B12  
                                             u15740 7D68                                               u22749 0B26  
                                             u23565 672A                                               u22838 0B9C  
                                             u22678 0A7E                                               u14790 827E  
                                    __CFG_DEBUG$OFF 000000                                               u25247 9AE0  
                                             u22679 0A92                                               u22935 3220  
                                             u23575 6792                                               u21895 5AB4  
                                             u19200 6CB0                                               u22848 0BC4  
                                             u23760 30AA                                               u24480 8F58  
                                             u17360 8592                                               u25257 9EE0  
                                             u13985 9374                                               u23905 5054  
                                             u16810 5BB0                                               u23850 4FE0  
                                             u17370 859A                                               u15690 58C6  
                                             u23915 5076                                               u16900 5C48  
                                             u16820 5BB4                                               u15748 7D6C  
                                             u19310 833A                                               u22958 3298  
                                             u23775 30F0                                               u17367 8588  
                                             u23785 311A                                               u19330 8362  
                                             u16930 5CC4                                               u23890 501C  
                                   __end_of___lwdiv 93DC                                               u19500 5EAC  
                                             u16860 5BE8                                               u16844 5BCA  
                                             u16925 5C78                                               u16845 5BC6  
                                             u19350 8388                                               u16950 83F0  
                                             u16870 5BEC                                               u23990 60EC  
                                             u18810 34E4                                               u19610 14B6  
                                             u19460 995C                                               u18750 9092  
                                             u19640 150E                                               u19560 1456  
                                             u19481 5E0A                                               u18930 85E6  
                                             u18770 A80E                                               u18780 9A2A  
                                             u19820 A2DA                                               u18757 9088  
                                             u19565 144C                                               u18870 376A  
                                             u19590 14A6                                               u18960 8E8E  
                                             u19665 1576                                               u19930 846A  
                                             u18990 9474                                     __end_of___lwmod 9984  
                                             u19980 1BCA                                               u19965 1B9A  
                                             u19990 1BCC                                         GPIOSet@GPIO 0061  
                                     ?_RADIO_RxDone 0001                                     ___awdiv@counter 0064  
                       __size_of_RADIO_ReceiveStart 0230                 __size_of_LORAWAN_SetChannelIdStatus 003E  
                              __size_of_acuadoriApp 0332                                       ?_RADIO_TxDone 0001  
                                             _TMR1H 000FCF                                               _TMR1L 000FCE  
                                             _TMR3H 000FB3                                               _TMR3L 000FB2  
                                             _TMR5H 000F50                                               _TMR5L 000F4F  
                                             _PORTA 000F80                                               _PORTC 000F82  
                                             _PORTD 000F83                                               _PORTE 000F84  
                                             _TRISA 000F92                                               _TRISB 000F93  
                                             _TRISC 000F94                                               _TRISD 000F95  
                                             _TRISE 000F96                                  __end_ofsin@coeff_a FFE2  
                                __end_ofsin@coeff_b FFF2                            __size_of_RADIO_RxTimeout 002E  
                                     __CFG_WRT0$OFF 000000                                       __CFG_WRT1$OFF 000000  
                     ?_SelectChannelForTransmission 0001                                       __CFG_WRT2$OFF 000000  
                 __size_of_TMR3_SetInterruptHandler 000A                                 ___lmul@multiplicand 0096  
                                     __CFG_WRT3$OFF 000000                                      _RxJoinResponse A5BC  
                           ?_SetReceptionNotOkState 0001                           ?_TMR3_SetInterruptHandler 0060  
                                    __CFG_EBTR0$OFF 000000                                      __CFG_FCMEN$OFF 000000  
                                    __CFG_EBTR1$OFF 000000                                         GPIOSet@mode 0060  
                                    __CFG_EBTR2$OFF 000000                                      __CFG_EBTR3$OFF 000000  
                              ??_PrepareSessionKeys 0071                                    __end_of_TMR1_ISR A6EC  
                         FindSmallestDataRate@found 0061                                       __CFG_WRTB$OFF 000000  
                                  __end_of_TMR3_ISR A0A4                                       __CFG_WRTC$OFF 000000  
                                     __CFG_WRTD$OFF 000000                                    __end_of_TMR5_ISR A076  
                                    ?_INT1_CallBack 0001                              LORAWAN_RxTimeout@minim 00BE  
                       __size_of_RADIO_SetBandwidth 000A                                      __CFG_EBTRB$OFF 000000  
                    __size_of_RADIO_WatchdogTimeout 0046                                               __rcon 0042  
                           __end_of_PIN_MANAGER_IOC A8EE                        ??_IncludeMacCommandsResponse 0065  
                     __end_of_RADIO_WatchdogTimeout 986E  RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 006D  
                    ??_INT1_DefaultInterruptHandler 0001                           __size_of_ValidateDataRate 0018  
                                             _frexp 7CF2                                               _errno 0116  
                                             _randx 01EF                                               _upCnt 0106  
                    LORAWAN_RxDone@frmPayloadLength 00F1                       ValidateChannelMaskCntl@result 0060  
                                __CFG_MCLRE$EXTMCLR 000000                                               _value 010A  
                                             _timer 0100                                               _srand A796  
                                  UpdateDataRange@i 0063                            LORAWAN_RxDone@joinAccept 00EF  
                            _UpdateJoinSuccessState 5A4E                                      ?_INT2_CallBack 0001  
                          _INT1_SetInterruptHandler A862                                          _ComputeMic 8F9A  
                           __end_of_TMR1_Initialize 9F90                              UpdateCfList@joinAccept 009E  
                                             pclath 000FFA                                               tablat 000FF5  
                                             ltemp0 0046                             RADIO_WriteFrequency@num 0075  
                                             ltemp1 004A                                               ltemp2 004E  
                    __size_of_UpdateCurrentDataRate 000A                      __size_of_UpdateChannelIdStatus 011E  
                        PrepareSessionKeys@appNonce 006D                                     _GPIOAverageRead 88AA  
                            UpdateChannelIdStatus@i 0063                       __end_of_UpdateCurrentDataRate A826  
                      __size_of_RADIO_FSKPacketSent 010C                       __end_of_UpdateChannelIdStatus 628C  
                             adaptString@deleteElem 0066                                               plusw0 000FEB  
                                             plusw1 000FE3                                               plusw2 000FDB  
                                             ttemp0 0046                                               ttemp1 0049  
                                             ttemp2 004C                                               ttemp3 004F  
                                             ttemp5 0047                                               ttemp6 004A  
                                             ttemp7 004E                            UpdateFrequency@channelId 0064  
                                             status 000FD8                                               wtemp0 0046  
                                             wtemp1 0048                                               wtemp2 004A  
                                             wtemp3 004C                                               wtemp4 004E  
                                             wtemp5 0050                                               wtemp8 0047  
                                    ??_i2c_sdaWrite 0060                                  _MacExecuteCommands 433C  
                             ??_tempSensAcquisition 00C4                                      __CFG_HFOFST$ON 000000  
                          UpdateCfList@channelIndex 00A9                                 __size_of_RADIO_DIO0 008A  
                                GPIOAnalogRead@GPIO 006C                                 __size_of_RADIO_DIO1 004C  
                               __size_of_RADIO_DIO2 0050                                 __size_of_RADIO_DIO3 001C  
                               __size_of_RADIO_DIO4 001C                                 __size_of_RADIO_DIO5 001C  
                                   __end_of_strncat 85B2                  PrepareJoinRequestFrame@bufferIndex 00D9  
                                   _TMR1_WriteTimer A450                   TMR_OverrideRemaining@oldReloadVal 0072  
                               LORAWAN_RxDone@fPort 00E0                                      ??_i2c_sendData 0066  
                                GPIOAnalogMode@GPIO 0061                                  __size_ofi2___awdiv 0084  
                        __size_of_LORAWAN_GetStatus 0030                            __size_of_RADIO_WriteMode 00FC  
                                 __end_of_AESEncode 37AE                                      __CFG_PBADEN$ON 000000  
                               __size_of_RADIO_Init 01CA                    __end_of_RADIO_WriteConfiguration 17D0  
                           ADC_GetConversion@result 0065                                  __size_ofi2___lwdiv 0052  
                                __size_ofi2___lwmod 0042                     ??_IOCB4_DefaultInterruptHandler 0001  
                                   _TMR5_Initialize 9D84                        __size_of_RADIO_SetIQInverted 000A  
                         __size_ofi2_TMR1_ReadTimer 0020                           RADIO_WriteMode@dioMapping 0068  
                                GPIOAnalogMode@mode 0060                                     __initialization 787A  
                                  _GPIODigitalWrite 6DCE                                         log@exponent 00B1  
                      __size_ofi2_SwTimersInterrupt 00F8                                        _stringLength 01FA  
                                  LORAWAN_Send@port 00D4                         __size_of_DIO1_ISR_Lora_Init 0010  
                               ?_MacExecuteCommands 00A6                                   _SPI2_Exchange8bit A734  
                                      __end_of_main 737A                          AssembleEncryptionBlock@dir 0072  
                                      __end_of_rand 9232                                   ?_TMR_GetDeltaTime 0068  
                                     AESCmac@padded 01A4                            __end_of_RADIO_ReadRandom 7F9E  
                                  _SetJoinFailState A0D0                                    i2c_sendData@data 0064  
                           RADIO_WriteMode@blocking 0066                                     ?_GPIOAnalogRead 0068  
                                   ?_GPIOAnalogMode 0060                                _UpdateJoinInProgress A646  
                              _ExecuteRxTimingSetup A1F8                                   __end_of_IOCB4_ISR A4D0  
                         __size_of_UpdateDLSettings 001C                                    __end_of_i2c_stop 9E76  
                                ?_SPI2_Exchange8bit 0001                           __size_of_ValidateRxOffset 0018  
                          _LORAWAN_SetUplinkCounter A710                                           ??_ADC_ISR 0001  
                       ?_INTERRUPT_InterruptManager 0001                                  ??_TMR_GetDeltaTime 006C  
                                     AESCmac@output 00BC                          i2TMR1_ReadTimer@readValLow 0008  
                               __end_of_i2c_waitACK A646                                        ?_sinGenStart 0001  
                      __end_of_RADIO_SetOutputPower A894                       __size_of_impedenceAcquisition 0036  
                                         ??_AESCmac 00C1                                      ??_RADIO_SetCRC 0060  
                            MacExecuteCommands@done 00AB                             InitDefault868Channels@i 006B  
                                            ??_main 00FC                                              ??_rand 00A0  
                                    ??_RADIO_RxDone 00F4                            _TMR5_SetInterruptHandler A830  
                                    ??_RADIO_TxDone 00D7                           GPIOAverageRead@finalValue 0075  
                                   _TMR3_StartTimer A93A                                       isJoined@value 0068  
                                     __activetblptr 000003                              ?_RADIO_SetLoRaSyncWord 0001  
                            __end_of_RxJoinResponse A5D8                               _TMR3_InterruptHandler 01E1  
                 __end_of_LORAWAN_LinkCheckCallback 510A                                 __end_of_i2c_usdelay A306  
                    __end_of_SetReceptionNotOkState 87B6                         __end_of_UpdateReceiveDelays 9A0A  
                           LORAWAN_GetStatus@status 0064                         _EUSART2_DefaultErrorHandler 000000  
                   __end_of_AssembleEncryptionBlock 76E6                            __size_of_SPI2_Initialize 000E  
                                         ??_GPIOSet 0061                              ??_SystemBlockingWaitMs 0064  
                                  ??_StartReTxTimer 0092                                 ??_SPI2_Exchange8bit 0060  
                  CountfOptsLength@macCommandLength 0066                                  EncodeShiftRow@temp 0062  
                          ??_InitDefault868Channels 006B                         __size_of_RADIO_RegisterRead 0028  
                                 ?_HALSPICSDeassert 0001                                    ?_SwTimersExecute 0001  
                                     _TMR_SwapTimer 9A0A                                      _EnableChannels A5D8  
                         ??_PrepareJoinRequestFrame 00D1                                   ??_acquisitionData 00AD  
                                    _HALSPICSAssert A946                                ??_MacExecuteCommands 00A9  
                                       ?_CheckFlags 0060                             LORAWAN_TxDone@timeOnAir 00B3  
                                        _ExtractMic 9618                          __end_of_EUSART2_Initialize 98FA  
                   __size_of_SearchAvailableChannel 0102                                              _ADCON0 000FC2  
                                            _ADCON1 000FC1                                              _ADCON2 000FC0  
                                            ?_frexp 006C                             __size_of_tempConversion 032C  
                                ??_HALSPICSDeassert 0060                              _HALResetPinOutputValue A660  
                                  ___llmod@dividend 0060                                              _ADRESH 000FC4  
                                            _ADRESL 000FC3                                    ___awdiv@dividend 0060  
                                            ?_srand 0072              __end_of_LORAWAN_ReceiveWindow1Callback 7CF2  
           __size_of_LORAWAN_ReceiveWindow1Callback 00B8                      _LORAWAN_ReceiveWindow1Callback 7C3A  
                                            _ANSELA 000F38                                              _ANSELB 000F39  
                                            _ANSELC 000F3A                                              _ANSELD 000F3B  
                                            _ANSELE 000F3C                                     _ValidateTxPower A128  
                                            _T1GCON 000FCC                                              _T3GCON 000FB4  
                                            _T5GCON 000F4D                             SwTimerReadValue@timerId 0091  
                           TMR1_WriteTimer@timerVal 0060                                      _ExecuteLinkAdr 48FC  
                           __end_of_TMR3_Initialize A128                                              i2l2310 0044  
                                            i2l1343 92DE                                              i2l2312 0050  
            __end_of_LORAWAN_ReceiveWindow2Callback 7614             __size_of_LORAWAN_ReceiveWindow2Callback 00D8  
                    _LORAWAN_ReceiveWindow2Callback 753C                                              i2l2315 0060  
                                            i2l2308 0038                                              i2l2317 006C  
                                            i2l2318 0082                                              i2l2319 0078  
                                            i2l4008 9A84                                      __CFG_WDTEN$OFF 000000  
                                            i2l3187 5F8E                                              i2l3188 5FCE  
                                            i2l3189 600E                       __size_of_RADIO_SetFSKSyncWord 0030  
                                            i2l3998 956E                                              _RCREG2 000F74  
                           __end_of_GPIODigitalRead 7B7E                                              _RCSTA2 000F71  
                                            _OSCCON 000FD3                                   ??_RADIO_GetStatus 0060  
                                            _SPBRG2 000F75                    __size_of_ValidateChannelMaskCntl 0020  
                                            _WDTCON 000FD1                     __size_of_InitDefault433Channels 0078  
                                            _TRISC2 007CA2                                       ?_LORAWAN_Init 00AA  
                                     ?_LORAWAN_Join 0001                    AssembleEncryptionBlock@firstByte 0070  
                                     ?_LORAWAN_Send 00D4                     __size_of_AutomaticReplyCallback 0026  
                                            _TXREG2 000F73                                    __end_of___xxtofl 590E  
                        __size_of_LORAWAN_RxTimeout 0300                                              _TXSTA2 000F72  
                                 ?_ExecuteDevStatus 0060                          __end_of_DIO0_ISR_Lora_Init A796  
                          __size_ofi2_TMR_SwapTimer 0040                                   ExecuteLinkAdr@ptr 006F  
                                   _TMR3_WriteTimer A5F4                       __size_of_RADIO_WriteFrequency 00F0  
                                            _STable FE07                         RADIO_WriteFrequency@num_mod 0071  
                               LORAWAN_TxDone@delta 00C6                         __size_of_ComputeSessionKeys 0086  
                                         AESCmac@k1 0184                                           AESCmac@k2 0174  
                         __end_of_SPI2_Exchange8bit A746                            __size_of_rn2483_delaysec 0040  
                               LORAWAN_TxDone@found 00C5                                     _CheckMcastFlags 87B6  
                               LORAWAN_TxDone@minim 00D2                                  ??_ExecuteDevStatus 0062  
                                            _Random A36C                                      __CFG_XINST$OFF 000000  
                                            _RxData A962                                 LORAWAN_TxDone@ticks 00CE  
                SearchAvailableChannel@randomNumber 00B1                __end_of_TMR1_DefaultInterruptHandler A96C  
             __size_of_TMR1_DefaultInterruptHandler 0002                        _TMR1_DefaultInterruptHandler A96A  
                                       ?_GetRx1Freq 0060                       ValidateDataRange@dataRangeNew 0063  
                                  __end_of_isJoined A3D0                             _RADIO_FHSSChangeChannel 9C06  
                                            ___fleq 81FA                                           ??___abdiv 0061  
                                            ___lmul 9232                              ?_RADIO_WriteFSKBitRate 006D  
                                         ??___fladd 007C                               ?_UpdateJoinInProgress 0001  
                                            ___wmul A220                         ?_LORAWAN_LinkCheckConfigure 009E  
                             ?_ExecuteRxTimingSetup 0067                                           ??___fldiv 00A5  
                                         ??___awdiv 0064                                      __CFG_STVREN$ON 000000  
                                         ??___lbmod 0002                                           ??___flmul 008C  
                              _FindSmallestDataRate 79FE                                           ??___flsub 008C  
                                         ??___fltol 0064                                              _appEui 03C8  
                                         ??___lldiv 0068                                              _appKey 03E0  
                                         ??___llmod 0068                                           ??___ltdiv 0066  
                                         ??___lwdiv 0064                                           ??___lwmod 00A4  
                RADIO_SetChannelFrequency@frequency 0060                                     StartReTxTimer@i 009A  
                         ExecuteRxParamSetupReq@ptr 009E                              __size_of_LORAWAN_Reset 01CC  
                                            _memcpy 905E                                              _joined 0125  
                                            _memset A01A                                              _setSDA A7B4  
                                            clear_0 78E2                                              clear_1 78F4  
                                            clear_2 7900                                              clear_3 790C  
                                            clear_4 7918                                              clear_5 7924  
                                            clear_6 7930                             SwTimerIsRunning@timerId 0060  
                                  ___awdiv@quotient 0066                             __size_of_uint16ToString 0140  
                       _EUSART2_FramingErrorHandler 02FE                                              _result 0118  
                       __size_of_DIO5_ISR_Lora_Init 0002                                         ?_FillSubKey 0060  
                                            _string 0200                                   ?_SwTimerIsRunning 0001  
                                    i2___awdiv@sign 0006                                   ?_ExecuteLinkCheck 0060  
                                   _TMR5_StartTimer A926                                    __end_of_resetSDA A7D0  
                                   ?_RxJoinResponse 0001                             __size_of_EncodeShiftRow 0164  
                            __end_of_EnableChannels A5F4                          ??_RADIO_UnhandledInterrupt 0064  
                                      ??_HALSPISend 0061                __end_of_INT2_DefaultInterruptHandler A970  
             __size_of_INT2_DefaultInterruptHandler 0002                        _INT2_DefaultInterruptHandler A96E  
                                      __pdataCOMRAM 0052                                         RxData@pData 0060  
                            __end_of_HALSPICSAssert A94A                   __size_of_RADIO_SetSpreadingFactor 000A  
                                 __end_ofi2___awdiv 86BA                        __size_of_ValidateChannelMask 004A  
                                     ??_SwTimerStop 0060                                     ??_INT1_CallBack 0001  
                                 ??_SystemTimerInit 0060                                              lltemp0 0046  
                         ?_RADIO_SetSpreadingFactor 0001                                   ?_SwTimerReadValue 0089  
                                ??_SwTimerIsRunning 0060                                      ?_TMR_SwapTimer 0068  
                                 ?_ExecuteDutyCycle 0060                                  ??_ExecuteLinkCheck 0062  
                                 __end_ofi2___lwdiv 9578                                        __mediumconst FE06  
                                 __end_ofi2___lwmod 9A8E                                              tblptrh 000FF7  
                                            tblptrl 000FF6                                              tblptru 000FF8  
                           __end_of_GPIOAverageRead 8924                                              srand@x 0072  
                                      i2c_usdelay@i 0062                            ADC_GetConversion@channel 0067  
                                   ??_INT2_CallBack 0001                                  ??_SwTimerReadValue 008D  
                                   _UpdateDataRange 64BC                              __end_of_ExecuteLinkAdr 4AC6  
                                ??_ExecuteDutyCycle 0062            TMR5_SetInterruptHandler@InterruptHandler 0060  
          TMR3_SetInterruptHandler@InterruptHandler 0060            TMR1_SetInterruptHandler@InterruptHandler 0060  
         IOCB4_SetInterruptHandler@InterruptHandler 0060            INT2_SetInterruptHandler@InterruptHandler 0060  
          INT1_SetInterruptHandler@InterruptHandler 0060                  __end_of_LORAWAN_SetChannelIdStatus 9BCA  
                        _LORAWAN_SetChannelIdStatus 9B8C                                    ?_PIN_MANAGER_IOC 0001  
                                  _SwClearAllTimers 9DE6                                       AESEncode@aux1 007B  
                                     AESEncode@aux2 007A                                       AESEncode@aux3 007C  
                           __end_of_TMR1_WriteTimer A470                               __end_of_SwTimerCreate 8B7C  
                                         ??_strncat 0066                                    ??_averageMeasure 006C  
                    ??_SelectChannelForTransmission 00B3                                         ?_ComputeMic 00C8  
                     __size_of_INTERRUPT_Initialize 0004                               __end_of_TMR1_CallBack A490  
                       ??_LORAWAN_SetApplicationEui 006D                         ??_LORAWAN_SetApplicationKey 006D  
                         ExecuteDutyCycle@maxDCycle 0065                                   ??_RADIO_RxTimeout 00C3  
                                  ?_TMR1_Initialize 0001                             __end_of_TMR5_Initialize 9DB6  
                                      ___xxtofl@arg 006A                         UpdateFrequency@frequencyNew 0060  
                                      ___xxtofl@exp 0069                                   _SYSTEM_Initialize 9F34  
                                      ___xxtofl@val 0060                                          ___fleq@ff1 0060  
                                        ___fleq@ff2 0064                    __size_of_CreateAllSoftwareTimers 0052  
                                  __end_oflog@coeff FFCE                             __size_of_GenerateSubkey 012A  
                                    ??_LORAWAN_Init 00AE                                      ??_LORAWAN_Join 00DA  
                                   ___lbmod@divisor 0001                                      ??_LORAWAN_Send 00D8  
                    __size_of_RADIO_FSKPayloadReady 00B2                                          __accesstop 0060  
                           __end_of__initialization 7936                                   tempConversion@val 00BC  
                     __end_of_RADIO_FSKPayloadReady 7E5A                                     ___lbmod@counter 0003  
                                    _RADIO_Transmit 3F04                                           ?_INT1_ISR 0001  
                                         ?_INT2_ISR 0001                                           ?_GPIOInit 0001  
                              LORAWAN_RxDone@buffer 01DA                              RADIO_ReadRandom@retVal 006F  
                                  _ConfigureRadioRx A152                                __size_of_RADIO_Reset 0046  
                                  _ConfigureRadioTx 9702                                 ExecuteDevStatus@ptr 0060  
                  ??_UpdateReceiveWindow2Parameters 0065                     ?_UpdateReceiveWindow2Parameters 0060  
                 __size_of_LORAWAN_GetUplinkCounter 0012                                  ?_SYSTEM_Initialize 0001  
                              LORAWAN_RxDone@packet 00E9                                      _maxPayloadSize FF17  
                         ?_LORAWAN_GetUplinkCounter 0060                       RADIO_SetLoRaSyncWord@syncWord 0060  
                                      eval_poly@res 00A9                                       ___rparam_used 000001  
                                        ___fltol@f1 0060                                     _TMR5_WriteTimer A52E  
                        ValidateChannelId@channelId 0062                           ExecuteLinkAdr@channelMask 0072  
                                 _GPIODigitalToogle 7F9E                                         _i2c_waitACK A62C  
                                i2___lwmod@dividend 0001                                  __end_of_HALSPISend A7FA  
                                    __pcstackCOMRAM 0001                                          ___inthi_sp 0AF8  
                            _SearchAvailableChannel 67DA                             ValidateChannelId@result 0061  
                             ?_FindSmallestDataRate 0001                                        __pidataBANK1 A7FA  
                                      __pidataBANK3 A1D0                                 ??_SYSTEM_Initialize 0062  
                           __end_of_TMR3_StartTimer A93E                          __end_of_DIO4_ISR_Lora_Init A968  
                                         ?_TMR1_ISR 0001                                 __size_of_CheckFlags 005E  
                     ?_TMR1_DefaultInterruptHandler 0001                                  ?_GPIODigitalToogle 0001  
                                         ?_TMR3_ISR 0001                                           ?_TMR5_ISR 0001  
                          _RADIO_WriteConfiguration 12D6                                         _i2c_usdelay A2E2  
                                     __end_of_frexp 7DA8                                   ??_RADIO_WriteMode 0067  
                                   _spreadingFactor FF35                           __size_of_LORAWAN_Mainloop 003E  
                                  ??_EncKeySchedule 0062               __end_of_IOCB4_DefaultInterruptHandler A96E  
            __size_of_IOCB4_DefaultInterruptHandler 0002                       _IOCB4_DefaultInterruptHandler A96C  
                          __end_of_RADIO_WritePower 7292                             ?_ExecuteRxParamSetupReq 009E  
                                     __end_of_srand A7A6                                   SwClearAllTimers@i 0060  
                                 LORAWAN_RxDone@hdr 00F2                                        ??_RADIO_DIO0 00F6  
                                      ??_RADIO_DIO1 00C3                                        ??_RADIO_DIO2 007A  
                                      ??_RADIO_DIO3 0065                                        ??_RADIO_DIO4 0065  
                                      ??_RADIO_DIO5 0065                              _InitDefault433Channels 8A8C  
                                   _UpdateFrequency 9C42                              _AutomaticReplyCallback A298  
                     __size_of_TMR5_InterruptTicker 000A                         ??_IOCB4_SetInterruptHandler 0062  
                                           I2C@flag 0040                            ??_INTERRUPT_GetDioStatus 0060  
                                      ??_RADIO_Init 007F                               __end_of_pointAddition 9828  
                         SwTimerSetCallback@timerId 0063                          LORAWAN_RxDone@channelIndex 00E1  
                    AssembleEncryptionBlock@blockId 006F                                 ??_GPIODigitalToogle 0060  
                       __size_of_EXT_INT_Initialize 002A                                __end_of_i2c_sdaWrite 91D6  
                                   _UpdateDutyCycle 9CEA                                     ?_EnableChannels 006C  
                           ??_TMR_OverrideRemaining 006E                             __end_of_ValidateTxPower A152  
                                   ?_HALSPICSAssert 0001                            ?_EUSART2_SetErrorHandler 0060  
                                _DIO3_ISR_Lora_Init A968                                __end_of_i2c_sendData 9EA6  
                      __end_of_HALResetPinMakeInput A952                             __size_of_TMR1_ReadTimer 0022  
                  __end_of_INT2_SetInterruptHandler A862                                    RADIO_DIO0@opMode 00F9  
                       RADIO_RegisterRead@readValue 0063                  __end_of_IncludeMacCommandsResponse 286E  
                        _IncludeMacCommandsResponse 253C                       ?_INT2_DefaultInterruptHandler 0001  
                   __size_of_InitDefault868Channels 0078                            UpdateCfList@bufferLength 00A4  
                             LORAWAN_Send@confirmed 00D9                                         ?_ExtractMic 006B  
                                   ?_ExecuteLinkAdr 006F                                    _ValidateDataRate A692  
                   LORAWAN_GetMaxPayloadSize@result 006A                                             ??_frexp 0072  
                               __size_of_GetRx1Freq 0012                           __end_of_SYSTEM_Initialize 9F62  
                                    isJoined@joined 006C                  __size_of_RADIO_SetChannelFrequency 008A  
                                           ??_srand 0074                             __end_of_TMR3_WriteTimer A610  
                            __end_of_RADIO_Transmit 4128                                   ??_SPI2_Initialize 0060  
                               ?_DIO3_ISR_Lora_Init 0001                                       _LORAWAN_Reset 4730  
                        ?_RADIO_SetChannelFrequency 0060                                          __pbssBANK1 0100  
                                        __pbssBANK2 0200                                          __pbssBANK3 0300  
                                        __pbssBANK4 0400                                          __pbssBANK5 0500  
                                  RxData@dataLength 0062                                 __end_of_SwTimerStop A450  
                        ?_SetCallbackSoftwareTimers 0001                             __end_of_CheckMcastFlags 8830  
                                __size_of_eval_poly 00FC                                    ?_TMR3_Initialize 0001  
                                   __CFG_PLLCFG$OFF 000000                              __end_of_maxPayloadSize FF1F  
                                  ?_GPIODigitalRead 0001                                           ?_i2c_stop 0001  
                                        ??_INT1_ISR 0001                                          ??_INT2_ISR 0001  
                                        ??_GPIOInit 0062                                  SwTimersInterrupt@i 0088  
                  ??_EUSART2_SetFramingErrorHandler 0062                     ?_EUSART2_SetFramingErrorHandler 0060  
                              _RADIO_SetOutputPower A88A                                __end_of_RADIO_SetCRC A8A8  
                            _RADIO_ReceiveStart$784 00AF                              __size_of_DIO0_ISR_Lora 0004  
                           ??_HALResetPinMakeOutput 0060                                __end_of_RADIO_RxDone 745E  
                        __end_of_RADIO_RxFSKTimeout 9C06                                   adaptString@length 0062  
                         __end_of_GPIODigitalToogle 803A                                __end_of_RADIO_TxDone 67DA  
                               __size_of_FillSubKey 0052                                  __end_of_RADIO_DIO0 8310  
                                __end_of_RADIO_DIO1 9702                                  __end_of_RADIO_DIO2 95C8  
                                __end_of_RADIO_DIO3 A5A0                                  __end_of_RADIO_DIO4 A584  
                                __end_of_RADIO_DIO5 A568                           ??_RADIO_FHSSChangeChannel 0079  
                       __size_of_SwTimerSetCallback 0034                       __size_of_LORAWAN_SetDeviceEui 002E  
                         RADIO_SetOutputPower@power 0060                          __size_of_SPI2_Exchange8bit 0012  
                                __end_of_RADIO_Init 4C90                     ?_LORAWAN_EnterContinuousReceive 0001  
                  ??_LORAWAN_EnterContinuousReceive 00B3                                             ?_Random 00A5  
                                 ?_CountfOptsLength 0001                              __size_of_DIO1_ISR_Lora 0004  
                                           ?_RxData 0060                                    i2_TMR1_ReadTimer A490  
                                __CFG_CCP2MX$PORTC1 000000                                   adaptString@string 0060  
                                    FillSubKey@size 0064                                     _EnableChannels1 8CC6  
                          __size_of_HALDIO5PinValue 000C                        __size_of_RADIO_RegisterWrite 0020  
                            ??_UpdateJoinInProgress 0060                    __size_of_AssembleEncryptionBlock 00D2  
                            ??_ExecuteRxTimingSetup 0069                                    FillSubKey@source 0060  
      SelectChannelForTransmission@transmissionType 00B3                                             ?___fleq 0060  
                                           ?___lmul 0092              AssembleEncryptionBlock@multicastStatus 0071  
                    __end_of_ExecuteRxParamSetupReq 5528                    __end_of_TMR3_SetInterruptHandler A844  
                                ??_CountfOptsLength 0060                                             ?___wmul 0060  
                            __size_of_DIO2_ISR_Lora 0004                                  EncryptFRMPayload@i 00A6  
                                EncryptFRMPayload@j 00A7                                  EncryptFRMPayload@k 00A5  
                                        ??_TMR1_ISR 002A                             __end_of_TMR5_StartTimer A92C  
                                        ??_TMR3_ISR 0003                                  __CFG_CCP3MX$PORTB5 000000  
                                 ??i2_TMR_SwapTimer 000B                                          ??_TMR5_ISR 0009  
                                __size_of_sendValue 0062                           _LORAWAN_SetApplicationEui 9FEC  
                              ??_DIO3_ISR_Lora_Init 0060                           _LORAWAN_SetApplicationKey 9FBE  
                                  _UpdateDLSettings A5A0                                    _ValidateRxOffset A67A  
                                           ?_memcpy 0060                                             _ADC_ISR A95E  
                                 ??_rn2483_delaysec 0062                                             ?_memset 0060  
                                           ?_setSDA 0001                                      ___lmul@product 009A  
                                 _TMR_ISR_Lora_Init A756                              RADIO_RegisterWrite@reg 0063  
                               __size_of_ComputeMic 0062                              RADIO_Transmit@regValue 00B8  
                      __size_of_RADIO_SetModulation 000A                                 _RADIO_FSKPacketSent 65CA  
                                           _AESCmac 1B5A                              ComputeMic@bufferLength 00CC  
                               GPIODigitalRead@GPIO 0060                                       ?_TMR3ISRClock 0001  
                                 sinGenStart@i_5307 0068                             __size_of_ADC_Initialize 0018  
                           __end_of_UpdateDataRange 65CA                         __end_of_leafSensAcquisition A270  
                                   ??_TMR_SwapTimer 006A                            RADIO_WriteFSKBitRate@num 0071  
                                ?_TMR_ISR_Lora_Init 0001                          ??_INT1_SetInterruptHandler 0062  
                     __size_of_lightSensAcquisition 004E                                __size_of_sinGenStart 013A  
                                __size_of_timerTick 0008                                             i2l15304 6978  
                                           i2l15320 A622                                             i2l15306 69CA  
                                           i2l15820 8678                                             i2l15812 865A  
                                           i2l15750 A1B0                                             i2l15830 8698  
                                           i2l15806 864A                                             i2l16608 A606  
                                           i2l16624 A542                                             i2l15818 8670  
                                           i2l15834 86A2                                             i2l15850 9544  
                                           i2l15860 9564                                             i2l15790 6F40  
                                           i2l15766 9B1A                                             i2l15758 A1C8  
                                           i2l15838 86B0                                             i2l15870 9A62  
                                           i2l15784 6EEC                                             i2l15848 953C  
                                           i2l15794 6FA4                                             i2l15796 6FA6  
                                           i2l15876 9A7A                                             i2l15868 9A5A  
                                           _GPIOSet 6CD2                                EncryptFRMPayload@dir 0095  
                                _RADIO_GetPacketSnr A90E                                EncryptFRMPayload@key 009A  
                                         ?___xxtofl 0060                               __end_of_UpdateTxPower A81C  
                               _RADIO_SetIQInverted A894                                             _OSCCON2 000FD2  
                           __size_of_ConfigureRadio 009A                                    ?_GPIOAverageRead 006D  
                                           _OSCTUNE 000F9B                            __end_of_GPIODigitalWrite 6ECA  
                       __size_ofi2_TMR_GetDeltaTime 0100                                             _SPBRGH2 000F76  
                               i2_SwTimersInterrupt 6ECA                                             _SSP2ADD 000F6E  
                                sendValue@firstSend 00FA                                             _SSP2BUF 000F6F  
                                    _tempConversion 286E                                 ??_TMR_ISR_Lora_Init 0062  
                                 __end_of_bandwidth FF35              UpdateReceiveWindow2Parameters@dataRate 0064  
                                     i2c_sdaWrite@i 0063                            __end_of_SetJoinFailState A0FC  
                                    ?_LORAWAN_Reset 0001                        RADIO_WriteMode@newModulation 0065  
                                         ?_isJoined 0001                                       ??_adaptString 0063  
                           tempSensAcquisition@temp 00C6                              ValidateDataRate@result 0061  
                                  ?_TMR1_WriteTimer 0060                                 ?_RADIO_GetPacketSnr 0001  
                           __end_of_TMR5_WriteTimer A54C                                     ___abdiv@divisor 0060  
                                   ?_RADIO_Transmit 00A9                             _ValidateChannelMaskCntl A3D0  
                                   ___abdiv@counter 0063                                 StartReTxTimer@minim 0096  
                        AssemblePacket@bufferLength 00CB                        PrepareSessionKeys@sessionKey 006B  
                  LORAWAN_SetDeviceEui@deviceEuiNew 006B                                ?_RADIO_FSKPacketSent 0001  
                             TMR_SwapTimer@timerVal 0068                                    ?_TMR5_Initialize 0001  
                 __end_of_RADIO_SetChannelFrequency 839A                         PrepareJoinRequestFrame@iCtr 00D8  
                         _IOCB4_SetInterruptHandler A84E                   __end_of_SetCallbackSoftwareTimers 753C  
                             ?_RADIO_SetOutputPower 0001                                          ??_i2c_stop 0064  
                         _AckRetransmissionCallback 6050                         PrepareJoinRequestFrame@mhdr 00D7  
                            __size_of_AESEncodeLoRa 0036                                  _EncKeySchedule$521 0065  
                           __size_of_TMR3_StopTimer 0004                       __size_of_LORAWAN_PlatformInit 0022  
                        ??_LORAWAN_SetUplinkCounter 0064                                      _ticksAccounted 0032  
                                     ?_SwTimerStart 0001                                          AESCmac@key 00BA  
                                        AESCmac@ptr 01D4                                    ??_GPIOAnalogRead 006A  
                                  ??_GPIOAnalogMode 0061                             __end_of_spreadingFactor FF3C  
                                   __CFG_PWRTEN$OFF 000000                       UpdateCurrentDataRate@valueNew 0060  
                                           __Hparam 0000                                ?_RADIO_SetIQInverted 0001  
                                         ?_resetSDA 0001                          PrepareJoinRequestFrame@mic 00D3  
                            _InitDefault868Channels 8A14                            RADIO_RegisterWrite@value 0062  
                                           __Lparam 0000                              ??_FindSmallestDataRate 0060  
                          LORAWAN_Send@bufferLength 00D7                               _StopAllSoftwareTimers 9482  
                                   __size_of_Random 0022                                     __size_of_RxData 0002  
                        ??_TMR5_SetInterruptHandler 0062                                ?i2_SwTimersInterrupt 0019  
                           __end_of_UpdateFrequency 9C7E                                 AssemblePacket@fCtrl 00D1  
                                           ___abdiv 8ED2                                          AESEncode@i 007D  
                                         _AESEncode 34AE                                     __size_of___fleq 008C  
                            ValidateRxOffset@result 0061                                             ___fladd 2B9A  
                         __end_of_TMR_ISR_Lora_Init A766                                             ___fldiv 3A4A  
                                           ___awdiv 8422                                     __size_of___lmul 0058  
                                           ___lbmod A1A6                                             ___flmul 1EB6  
                       __size_of_DIO2_ISR_Lora_Init 0010                                    ?_TMR3_StartTimer 0001  
                                           ___flsub 9798                                             ___fltol 7B7E  
                           __end_of_UpdateDutyCycle 9D1E                                             ___lldiv 85B2  
                               __size_of_ExtractMic 0050                                     __size_of___wmul 0028  
                              ??_RADIO_GetPacketSnr 0060                                             ___llmod 8E6A  
                                           ___ltdiv 8C5A                                             ___lwdiv 9388  
                                 ?_RADIO_ReadRandom 006C                                             ___lwmod 9940  
                         SwTimerIsRunning@isRunning 0061                             ??_RADIO_SetLoRaSyncWord 0060  
                                           _address 01F7                                     _acquisitionData A328  
                                    _uint16ToString 590E                                       ??_acuadoriApp 00FC  
                              ValidateChannelMask@i 0064                                             __pcinit 787A  
                __size_of_LORAWAN_GetMaxPayloadSize 0050                     __end_of_EUSART2_SetErrorHandler A88A  
                                   __size_of_memcpy 0060                          __end_of_RADIO_ReceiveStart 3F04  
                                    ??_TMR3ISRClock 0001                                   __end_of_eval_poly 6BD6  
                             RADIO_Init@radioBuffer 0079                                     __size_of_memset 002E  
                                   __size_of_setSDA 000E                                             __ramtop 1000  
                          TMR1_ReadTimer@readValLow 0067                    EncryptFRMPayload@multicastStatus 009F  
                                ??_RADIO_ReadRandom 006E                          ?_LORAWAN_GetMaxPayloadSize 0001  
     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0060                                             __ptext0 7292  
                                           __ptext1 A3B0                                             __ptext2 9DB6  
                                           __ptext3 220A                                             __ptext4 90BE  
                                           __ptext5 286E                                             __ptext6 4C90  
                                           __ptext7 7CF2                                             __ptext8 81FA  
                                           __ptext9 6ADA                                __end_of_LORAWAN_Init 905E  
                              __end_of_LORAWAN_Join 7EFE                                __end_of_LORAWAN_Send 70B4  
                                     _DIO0_ISR_Lora A95A                      ??_TMR1_DefaultInterruptHandler 0001  
                   RADIO_SetFSKSyncWord@syncWordLen 006D                             __size_of_TMR5_StopTimer 0006  
                                    _EncodeShiftRow 510A                                           _IOCB4_ISR A4B0  
                        ExecuteNewChannel@frequency 00A1                           TMR1_ReadTimer@readValHigh 0066  
                   __size_of_INTERRUPT_GetDioStatus 0012                                           _T1CONbits 000FCD  
                SelectChannelForTransmission@result 00B4                  _EUSART2_DefaultOverrunErrorHandler 000000  
                           __size_of_LORAWAN_RxDone 0B2C                               _OSCILLATOR_Initialize A7DE  
                    __end_of_UpdateJoinSuccessState 5B8C                             __size_of_LORAWAN_TxDone 06FE  
                                      __size_of_log 0192                          __end_of_RADIO_SetBandwidth A8D0  
                                   _RADIO_GetStatus A914                                          ??___xxtofl 0064  
                                         _T3CONbits 000FB1                                    ?_ValidateTxPower 0001  
                           ?_HALResetPinOutputValue 0001                              __end_of_tempConversion 2B9A  
                      __end_of_macEndDevCmdReplyLen FF2E                   __size_of_TMR1_SetInterruptHandler 000A  
                                     _DIO1_ISR_Lora A956                                         _SwTimerStop A430  
                          ??_PIN_MANAGER_Initialize 0062                           ?_TMR1_SetInterruptHandler 0060  
                       IncludeMacCommandsResponse@i 006C                                           _T5CONbits 000F4E  
                                     ?_UpdateCfList 009E                                   _ExecuteNewChannel 4544  
                       __size_of_PrepareSessionKeys 0098                                        ??_CheckFlags 0062  
                     RADIO_SetModulation@modulation 0060                             UpdateDLSettings@dlRx2Dr 0061  
                         __size_of_TMR_GetDeltaTime 011C                              GPIODigitalWrite@digOut 0060  
                                     _DIO2_ISR_Lora A952                         __end_of_tempSensAcquisition 911C  
                        __size_of_SYSTEM_Initialize 002E                                  ?_ExecuteNewChannel 009E  
                                        ??_isJoined 0068                                             _strncat 852E  
                        RADIO_WriteMode@currentMode 0069                                    ComputeMic@buffer 00CA  
                                     ?_timerHandler 0001                                end_of_initialization 7936  
                           _CreateAllSoftwareTimers 94D4                                    ?_TMR3_WriteTimer 0001  
                                 __end_of_sendValue 8F9A                                 SwTimerCreate@retVal 0060  
                          _INT2_SetInterruptHandler A858                               ??_RADIO_FSKPacketSent 00D7  
                      __end_of_impedenceAcquisition 9CB4                                      _GenerateSubkey 5E00  
                                      adaptString@i 0067                               _RADIO_WatchdogTimeout 9828  
                    ??_INT2_DefaultInterruptHandler 0001                                          _modulation FF07  
                                  ?_CheckMcastFlags 0060                              ExtractMic@bufferLength 006D  
                                           memcpy@d 0067                                             memcpy@n 0064  
                                           memcpy@s 0069                             __end_of_EnableChannels1 8D30  
                                           memset@c 0062                                             memset@n 0064  
                                           memset@p 0066                           _LORAWAN_LinkCheckCallback 4F9E  
                                    ??_SwTimerStart 0089                                 ??_ExecuteNewChannel 00A0  
                        __size_of_GPIODigitalToogle 009C                                           i2u1702_48 A4FE  
                             _UpdateCurrentDataRate A81C                                           i2u1704_48 A4DE  
                                         i2u1641_40 9548                               _UpdateChannelIdStatus 616E  
                                         i2u1706_48 A4BE                                           i2u1644_40 9A66  
                                         i2u1629_40 9B2C                                           i2u1708_48 A47E  
                                         i2u1637_40 867C                                           i2u1762_48 A064  
                           ??_RADIO_WriteFSKBitRate 0071                               ??_RADIO_SetIQInverted 0060  
                                         i2u1764_48 A092                                 __end_of_adaptString 8A14  
                        __end_of_DIO1_ISR_Lora_Init A786                                     ___lldiv@divisor 0064  
                                 __end_of_timerTick A8FE                                 _ValidateChannelMask 974E  
                                  ___ltdiv@dividend 0060                                          _ticksAdded 0036  
                       HALResetPinOutputValue@value 0060                            EncodeShiftRow@stateTable 0060  
                              uint16ToString@output 00A7                           __size_of_HALSPICSDeassert 0004  
                          ValidateDataRate@dataRate 0060                                          ??_resetSDA 0062  
                                   ___lldiv@counter 006C                                 acquisitionData@GPIO 00AD  
                                _EUSART2_Initialize 98B4                         TMR_OverrideRemaining@tmrVal 0070  
                             ??i2_SwTimersInterrupt 001D                            ExecuteLinkAdr@redundancy 0075  
                                 GenerateSubkey@key 0092                                _HALResetPinMakeInput A94E  
                                      ??_GetRx1Freq 0064          LORAWAN_SetApplicationKey@applicationKeyNew 006B  
                     UpdateDLSettings@dlRx1DrOffset 0060                          LORAWAN_Init@RxJoinResponse 00AC  
                        LORAWAN_RxDone@bufferLength 01DC                    __end_of_RADIO_SetSpreadingFactor A8B2  
                AssembleEncryptionBlock@bufferIndex 0073                                        RxData@status 0063  
                                           postdec1 000FE5                                             postdec2 000FDD  
                            __end_of_uint16ToString 5A4E                                          ?_AESEncode 0067  
                                   _SystemTimerInit A8EE                                             postinc0 000FEE  
                                           postinc1 000FE6                                             postinc2 000FDE  
                          __end_of_SwClearAllTimers 9E16                                    ?_TMR5_StartTimer 0001  
                                 _stringValueLength 01F9                                       _AESEncode$516 0073  
                                     _AESEncode$517 0075                                       _AESEncode$518 0077  
                                  ??_RxJoinResponse 0060                                    _LORAWAN_Mainloop 9B4E  
                      __end_of_RADIO_SetFSKSyncWord 9ED6                               __size_of_i2c_sdaWrite 005C  
                                LORAWAN_Join@result 00DB                                  __end_of_CheckFlags 917A  
                         ValidateTxPower@txPowerNew 0061                                 ?_EUSART2_Initialize 0001  
                                    AESEncode@block 0067                   SearchAvailableChannel@maxChannels 00B0  
                            __end_of_EncodeShiftRow 526E                               __size_of_i2c_sendData 0030  
                                        _timerReset A0A4                                  _DIO0_ISR_Lora_Init A786  
                                 ??_HALDIO5PinValue 0060                                      ?_DIO0_ISR_Lora 0001  
                             _INT1_InterruptHandler 01ED                                           _PORTBbits 000F81  
                                      ??_FillSubKey 0065                        SwTimersInterrupt@timeElapsed 0080  
                                     _AESEncodeLoRa 9CB4                           __size_of_ExecuteDevStatus 000A  
                          _TMR3_SetInterruptHandler A83A                        __end_of_RADIO_WriteFrequency 71A4  
                        __end_of_RADIO_RegisterRead A298                   __end_of_LORAWAN_GetMaxPayloadSize 9618  
                    __end_of_HALResetPinOutputValue A67A                                          ?_IOCB4_ISR 0001  
                                  ?_UpdateDataRange 0060                            __end_of_ConfigureRadioRx A17C  
                          __end_of_ConfigureRadioTx 974E                                     _RADIO_RxTimeout 9F06  
                    UpdateChannelIdStatus@channelId 0062                               _TMR5_InterruptHandler 01DD  
                         __end_of_ExecuteNewChannel 4730                                    EnableChannels1@i 006B  
                           __size_of_AssemblePacket 038A                                      ?_DIO1_ISR_Lora 0001  
                                       ___fladd@grs 0083                                ?_ValidateChannelMask 0060  
                                 _SwTimerSetTimeout 9984                                      _TMR1_ReadTimer A38E  
                                    ??_UpdateCfList 00A0                                    ___lbmod@dividend 0002  
                                        _txPower433 FF3C                                     ?_tempConversion 00B6  
                                        _txPower868 FF42                                       ___xxtofl@sign 0068  
                  __end_of_LORAWAN_GetUplinkCounter A734                                 ?_DIO0_ISR_Lora_Init 0001  
                               __end_of_acuadoriApp 253C                                     ??_LORAWAN_Reset 00A9  
                                    ?_DIO2_ISR_Lora 0001                                    ___ltdiv@quotient 0066  
                     __size_of_SystemBlockingWaitMs 0030                           ??_ValidateChannelMaskCntl 0060  
                                tempConversion@temp 00C0                                  ?_SwTimerSetTimeout 006D  
                                       ___fldiv@grs 00B0                                         ___fldiv@rem 00A9  
                       __size_of_MacExecuteCommands 0208                                ExecuteNewChannel@ptr 009E  
                          ??_UpdateMinMaxChDataRate 0060                              __end_of_GenerateSubkey 5F2A  
                                    ??_timerHandler 0009                                       RADIO_RxDone@i 00F5  
                                         i2___awdiv 8636                               __size_of_RADIO_SetCRC 000A  
                           AssemblePacket@macCmdIdx 00D2                         ?_LORAWAN_SetChannelIdStatus 0064  
                                 i2___lwdiv@divisor 0003                                      _localDioStatus 0127  
                                __end_of_GetRx1Freq A6FE                                           i2___lwdiv 9526  
                             __size_of_RADIO_RxDone 00E4                                        ??_ComputeMic 00CD  
                                         i2___lwmod 9A4C                        __size_of_UpdateReceiveDelays 0042  
                                 i2___lwdiv@counter 0007                               __size_of_RADIO_TxDone 0104  
                                  ?_TMR5_WriteTimer 0001                              ??_RADIO_SetOutputPower 0060  
                              ??_EUSART2_Initialize 0062                     EncryptFRMPayload@macBufferIndex 009C  
                           TMR5_WriteTimer@timerVal 0001                                         ___lbmod@rem 0004  
                           UpdateMinMaxChDataRate@i 0061                             LORAWAN_Reset@ismBandNew 00A9  
                                       ___flmul@grs 0091                           __size_of_SwTimerIsRunning 0022  
                        __end_of_ComputeSessionKeys 852E                                 ??_SwTimerSetTimeout 0071  
                          __size_of_SwTimersExecute 00C2                           __size_of_ExecuteLinkCheck 0032  
                            _INTERRUPT_GetDioStatus A6FE                                     _RADIO_WriteMode 6BD6  
                        ??_RADIO_WriteConfiguration 00A0                                GPIOAnalogRead@result 006A  
                             SPI2_Exchange8bit@data 0060                                  i2___awdiv@dividend 0001  
                           ?_SearchAvailableChannel 00A7                           __size_of_SwTimerReadValue 0040  
                                      _i2c_sdaWrite 917A                         RADIO_FSKPacketSent@irqFlags 00DF  
                         __size_of_ExecuteDutyCycle 0054                              ?_StopAllSoftwareTimers 0001  
                           AssemblePacket@confirmed 00CF                                  __end_of_FillSubKey 9482  
                           _AssembleEncryptionBlock 7614                                   __size_of_INT1_ISR 0008  
                                 __size_of_INT2_ISR 0008                             __end_of_acquisitionData A34A  
                                 __size_of_GPIOInit 013A                                ??_DIO0_ISR_Lora_Init 0062  
                                      _i2c_sendData 9E76                               ?_HALResetPinMakeInput 0001  
                                      ?_i2c_waitACK 0001                                      __end_of_STable FF07  
                               AESEncodeLoRa@useKey 0082                          SwTimerSetCallback@callback 0060  
                                  ?_UpdateFrequency 0060                              rn2483_delaysec@counter 0063  
                                LORAWAN_Send@buffer 00D5                                      __end_of_Random A38E  
                                    __end_of_RxData A964                             ?_InitDefault433Channels 0001  
                                   ?_uint16ToString 00A5                          __size_of_TMR_ISR_Lora_Init 0010  
                          __end_of_ValidateDataRate A6AA                        __end_of_INTERRUPT_Initialize A942  
                                      ?_i2c_usdelay 0060                      EnableChannels1@channelMaskCntl 0066  
                    EnableChannels1@channelIndexMax 0068                      EnableChannels1@channelIndexMin 0067  
                                   averageMeasure@i 0074                 LORAWAN_SetChannelIdStatus@channelId 0066  
                                  ?_UpdateDutyCycle 0060                                      __end_of___fleq 8286  
                        __end_of_DIO5_ISR_Lora_Init A966                             __end_of_RADIO_GetStatus A91A  
                                    __end_of___lmul 928A                                  LORAWAN_Send@result 00DA  
                                  ??_EnableChannels 006F                           i2TMR1_WriteTimer@timerVal 0001  
                                    __end_of___wmul A248                                       ?_TMR_ISR_lora 0001  
                                  ??_HALSPICSAssert 0060                 TMR_OverrideRemaining@ticksRemaining 006A  
                                 ?_RADIO_WritePower 0001                                       __pidataCOMRAM A932  
                                   ?_EncodeShiftRow 0060                                      ?_AESEncodeLoRa 007E  
                                 __size_of_TMR1_ISR 0014                                   __size_of_TMR3_ISR 002E  
                                    _ADC_Initialize A6AA                                   __size_of_TMR5_ISR 002E  
                                __end_of_ComputeMic 8FFC                                           Random@max 00A5  
                                    __end_of_memcpy 90BE                              ?_OSCILLATOR_Initialize 0001  
                         __end_of_SwTimerSetTimeout 99C8                              __end_of_TMR1_ReadTimer A3B0  
                                    __end_of_memset A048                                      __end_of_setSDA A7C2  
                                   _SPI2_Initialize A7D0                            ?_PrepareJoinRequestFrame 0001  
                                ??_RADIO_WritePower 0064                                        _RADIO_SetCRC A89E  
                             ??_ValidateChannelMask 0062                                    ??_ExecuteLinkAdr 0071  
                             UpdateCfList@frequency 00A5                                        _RADIO_RxDone 737A  
                                      _RADIO_TxDone 66D6                                 start_initialization 787A  
                                    _ConfigureRadio 803A                                          eval_poly@d 00A1  
                                LORAWAN_RxDone@mhdr 00E2                                          eval_poly@n 00A3  
                                        eval_poly@x 009D                                  i2___awdiv@quotient 0007  
                                LORAWAN_RxDone@temp 00E8                                  _DIO4_ISR_Lora_Init A966  
                          __end_ofi2_TMR1_ReadTimer A4B0                      __size_of_TMR_OverrideRemaining 0082  
                               _RADIO_RegisterWrite A410                                        AESCmac@mLast 0194  
                         ??_CreateAllSoftwareTimers 0061                     __size_of_PIN_MANAGER_Initialize 0054  
                     __end_of_TMR_OverrideRemaining 873C                         ?_IncludeMacCommandsResponse 0060  
                             __end_of_INT1_CallBack A510                                         __end_of_log 4E22  
                                      ??_ExtractMic 006F                EncryptFRMPayload@bufferToBeEncrypted 009D  
                                      AESCmac@input 00BE                                     ?_GenerateSubkey 0092  
                      ?_RADIO_SetFrequencyHopPeriod 0060                                          ?i2___awdiv 0001  
                                   LORAWAN_TxDone@i 00D6                                      pointAddition@d 0064  
                             LORAWAN_Init@RxPayload 00AA                 AssembleEncryptionBlock@frameCounter 006B  
                           i2TMR_SwapTimer@timerVal 0009                                          ?i2___lwdiv 0001  
                             __end_of_INT2_CallBack A4F0                                          ?i2___lwmod 0001  
                                     ??_RADIO_Reset 0065                            __end_of_UpdateDLSettings A5BC  
                        SwTimerStart@ticksRemaining 008D                                         _adaptString 899C  
                            RADIO_WriteMode@newMode 006A                            __end_of_ValidateRxOffset A692  
                                   adaptString@flag 0065                         ??_RADIO_SetChannelFrequency 0064  
                      __end_of_TMR5_InterruptTicker A8E4                         ??_SetCallbackSoftwareTimers 0064  
                               ?_DIO4_ISR_Lora_Init 0001                                          frexp@value 006C  
                               _RADIO_SetModulation A8B2                       ExecuteNewChannel@channelIndex 00A5  
                    __end_of_SearchAvailableChannel 68DC                                    ?_EnableChannels1 0064  
                                   i2_TMR_SwapTimer 9B0E                             __size_of_StartReTxTimer 0152  
                              __end_of_TMR3ISRClock A932                                      _TMR3_StopTimer A936  
                            ?_UpdateCurrentDataRate 0001                              ?_UpdateChannelIdStatus 0060  
                                   ___llmod@divisor 0064                          MacExecuteCommands@fOptsLen 00A8  
                           _RADIO_FSKPacketSent$800 00DB                             __end_of_SystemTimerInit A8F6  
                  __size_of_EUSART2_SetErrorHandler 000A                      UpdateChannelIdStatus@statusNew 0060  
                 __size_of_RADIO_UnhandledInterrupt 0030                                     ___llmod@counter 0068  
                                   _rn2483_delaysec 9ACE                                 TMR_SwapTimer@oldVal 003A  
                         ?_RADIO_UnhandledInterrupt 0001                            __size_of_PIN_MANAGER_IOC 000A  
                               TMR_SwapTimer@retVal 011E                               _RADIO_FSKPayloadReady 7DA8  
                                 __size_of_i2c_stop 0030              __end_of_EUSART2_SetOverrunErrorHandler A876  
           __size_of_EUSART2_SetOverrunErrorHandler 000A                      _EUSART2_SetOverrunErrorHandler A86C  
                    __size_of_HALResetPinMakeOutput 0004                       __end_of_HALResetPinMakeOutput A94E  
                                          ??_Random 00A7                                            ??_RxData 0064  
                                          AESCmac@i 01D9                                            AESCmac@j 01D8  
                                          AESCmac@n 01D7                                            AESCmac@x 01C4  
                                          AESCmac@y 01B4                          SwTimerReadValue@ticksCount 008D  
                              ?_RADIO_RegisterWrite 0062                      __end_of_InitDefault433Channels 8B04  
                    __end_of_AutomaticReplyCallback A2BE                                 RADIO_Init@frequency 007B  
                          __size_of_TMR1_Initialize 002E                                _macEndDevCmdReplyLen FF27  
                                          ??___fleq 0068                                            ??___lmul 009A  
                                       ??_AESEncode 006B                   RADIO_WriteConfiguration@tempValue 00A4  
                             __size_of_LORAWAN_Init 0062                  __size_of_AckRetransmissionCallback 011E  
                             __size_of_LORAWAN_Join 00A4                                            ??___wmul 0064  
                             __size_of_LORAWAN_Send 00F2                             __end_of_RADIO_RxTimeout 9F34  
                          MacExecuteCommands@buffer 00A6                            ??_SetReceptionNotOkState 00B3  
                            __end_of_ADC_Initialize A6C2                                      ??_TMR_ISR_lora 002A  
                                   ??_DIO0_ISR_Lora 0001                                         __pdataBANK1 01EF  
                                       __pdataBANK3 03D0                                   _ValidateDataRange 986E  
                                __end_of_ExtractMic 9668            i2SwTimersInterrupt@ticksToNextTimerEvent 0025  
            SwTimersInterrupt@ticksToNextTimerEvent 0084                                            ??_memcpy 0066  
                                          ?_ADC_ISR 0001                              __size_of_SwTimerCreate 0078  
                                          ??_memset 0066                                            ??_setSDA 0062  
                              ??_DIO4_ISR_Lora_Init 0060                                         ?_timerReset 0001  
                        __end_of_EXT_INT_Initialize A1A6                                   _ValidateChannelId A2BE  
                              ?_RADIO_SetModulation 0001                                         _acuadoriApp 220A  
                          _RADIO_SetSpreadingFactor A8A8                                  _RADIO_RxFSKTimeout 9BCA  
                                          ?_AESCmac 00BA                                _impedenceAcquisition 9C7E  
                            __size_of_TMR1_CallBack 0020                                     ??_DIO1_ISR_Lora 0001  
                                ?_ValidateDataRange 0001                                      _TMR5_StopTimer A920  
                          ValidateRxOffset@rxOffset 0060                                        AESEncode@aux 0079  
                                      AESEncode@key 0069                              TMR_GetDeltaTime@retVal 0112  
                                   ?_TMR1_ReadTimer 0060                                         ??_IOCB4_ISR 0001  
                            __end_of_ConfigureRadio 80D4                                      _LORAWAN_RxDone 00AC  
                                         ___fladd@a 0078                                           ___fladd@b 0074  
                                ?_ValidateChannelId 0060                              TMR_GetDeltaTime@tmrVal 003C  
                                    _LORAWAN_TxDone 0BD8                                    GPIOAverageRead@i 0073  
                      __end_of_LORAWAN_SetDeviceEui 9FBE                          __size_of_ExecuteNewChannel 01EC  
        LORAWAN_GetMaxPayloadSize@macCommandsLength 0069                                __end_of_SwTimerStart 81FA  
                                         ___fldiv@a 00A1                                           ___fldiv@b 009D  
            __end_of_LORAWAN_EnterContinuousReceive 88AA             __size_of_LORAWAN_EnterContinuousReceive 007A  
                    _LORAWAN_EnterContinuousReceive 8830                                         __pbssBIGRAM 0528  
                                          ?_GPIOSet 0060                                     ??_DIO2_ISR_Lora 0001  
                         __size_of_CountfOptsLength 00CA                                   CountfOptsLength@i 0067  
                                         ___flmul@a 0088                                           ___flmul@b 0084  
                                       __pbssCOMRAM 0032                          __end_of_DefaultChannels433 FFAA  
                                         ___flsub@a 0088                                           ___flsub@b 0084  
                        __end_of_DefaultChannels868 FF80                                    ??_RADIO_Transmit 00AC  
                                LORAWAN_RxTimeout@i 00C2                                       __pcstackBANK0 0060  
                                     __pcstackBANK1 0174                                 ??_ValidateDataRange 0062  
                                 i2___lwmod@divisor 0003                                    _TMR_GetDeltaTime 628C  
                                 __size_of___xxtofl 0144                                   i2___lwmod@counter 0005  
                     EnableChannels@channelMaskCntl 006E                             __end_of_RADIO_WriteMode 6CD2  
                                 ?_GPIODigitalWrite 0060             __end_of_UnconfirmedTransmissionCallback 899C  
          __size_of_UnconfirmedTransmissionCallback 0078                     _UnconfirmedTransmissionCallback 8924  
                           SearchAvailableChannel@i 00B2                                 ??_ValidateChannelId 0061  
                             RADIO_RegisterRead@reg 0062                     __size_of_UpdateMinMaxChDataRate 00CA  
               LORAWAN_SetChannelIdStatus@statusNew 0064                                           _aesBuffer 015F  
                           INTERRUPT_GetDioStatus@a 0060                              __end_of_TMR3_StopTimer A93A  
                                 ?_SetJoinFailState 0001                                 SwTimerStart@timerId 0091  
                          _LORAWAN_GetUplinkCounter A722                                  ??_GPIODigitalWrite 0061  
                                         _capValues 0528                       ??_RADIO_SetFrequencyHopPeriod 0062  
                              _RADIO_SetFSKSyncWord 9EA6                         RADIO_SetBandwidth@bandwidth 0060  
                             GPIODigitalToogle@GPIO 0060                          __end_of_SwTimerSetCallback 9D52  
 __end_of_ResetParametersForUnconfirmedTransmission A756  __size_of_ResetParametersForUnconfirmedTransmission 0010  
        ?_ResetParametersForUnconfirmedTransmission 0001         ??_ResetParametersForUnconfirmedTransmission 0060  
         _ResetParametersForUnconfirmedTransmission A746                                   __size_of_isJoined 0020  
                         ??_AssembleEncryptionBlock 0072                               _INT2_InterruptHandler 01EB  
                                         _bandwidth FF2E                                  ??_SetJoinFailState 0061  
                                        sin@coeff_a FFCE                                          sin@coeff_b FFE2  
                           ?_InitDefault868Channels 0001                        __end_of_lightSensAcquisition 96B6  
                                      _LORAWAN_Init 8FFC                                        _LORAWAN_Join 7E5A  
                                      _LORAWAN_Send 6FC2                              RADIO_FSKPayloadReady@i 00F5  
                                 _ValidateFrequency 8BEE                                           __pnvBANK1 01DD  
                                         __pnvBANK2 02FA                              ??_HALResetPinMakeInput 0060  
                              _RADIO_WriteFrequency 70B4                              __size_of_pointAddition 0048  
                                   FillSubKey@carry 0066                                    _HALSPICSDeassert A942  
                               __end_of_RADIO_Reset 9940                               ??_RADIO_RegisterWrite 0063  
                                       _clearString 0500                                    ?_acquisitionData 00AB  
                                  ___lwdiv@dividend 0060                              _PIN_MANAGER_Initialize 93DC  
                                     FillSubKey@key 0062                                  ?_ValidateFrequency 0060  
                              __end_of_UpdateCfList 433C                 RADIO_WriteFSKFrequencyDeviation@num 0071  
                                      sinGenStart@d 006A                                        sinGenStart@i 006C  
                                      sinGenStart@t 006D                           EnableChannels@channelMask 006C  
                          __size_of_TMR3_Initialize 002C                                           _macBuffer 06B8  
                           __size_of_averageMeasure 0088                                           _dioStatus 0045  
                         __end_of_ValidateDataRange 98B4                       RADIO_FSKPayloadReady@irqFlags 00F4  
                                 _SwTimersInterrupt 69DC                                   ??_SwTimersExecute 00DB  
                                         __pintcode 0008                            __size_of_GPIODigitalRead 00BE  
                                          ?___abdiv 0060                    __end_of_TMR1_SetInterruptHandler A84E  
                                     __pmediumconst FE06                             RADIO_Transmit@bufferLen 00AB  
                           __end_of_SPI2_Initialize A7DE                                            ?___fladd 0074  
                                         _deviceEui 03F0                                   __size_of_resetSDA 000E  
                                          ?___fldiv 009D                                            ?___awdiv 0060  
                                         __ptext100 0BD8                                           __ptext101 9A8E  
                                         __ptext110 3CD4                                           __ptext102 A306  
                         __end_of_ValidateChannelId A2E2                                           __ptext111 A152  
                                         __ptext103 A914                                           __ptext200 9430  
                                         __ptext120 9C7E                                           __ptext112 A6FE  
                                         __ptext104 8830                                           __ptext201 9CB4  
                                         __ptext121 590E                                           __ptext113 9668  
                                         __ptext105 A962                                           __ptext210 77B0  
                                         __ptext202 34AE                                           __ptext130 917A  
                                         __ptext122 9388                                           __ptext114 9ACE  
                                         __ptext106 A746                                           __ptext211 9482  
                                         __ptext203 510A                                           __ptext131 A62C  
                                         __ptext123 5B8C                                           __ptext115 A248  
                                         __ptext107 A7A6                                           __ptext220 A410  
                                         __ptext212 A8D0                                           __ptext204 37AE  
                                         __ptext140 A722                                           __ptext132 A920  
                                         __ptext124 9E46                                           __ptext116 A328  
                                         __ptext108 A91A                                           __ptext221 A7EC  
                                         __ptext213 4AC6                                           __ptext205 8FFC  
                                         __ptext141 9F34                                           __ptext133 A926  
                                         __ptext125 A7B4                                           __ptext117 88AA  
                                         __ptext109 A3F0                                           __ptext230 526E  
                                         __ptext222 A734                                           __ptext214 9D1E  
                                         __ptext206 A796                                           __ptext150 A34A  
                                         __ptext142 9D84                                           __ptext134 A936  
                                         __ptext126 A7C2                                           __ptext118 A510  
                                         __ptext231 9232                                           __ptext223 A942  
                                         __ptext215 6BD6                                           __ptext207 745E  
                                         __ptext151 A756                                           __ptext143 A830  
                                         __ptext135 A93A                                           __ptext127 A2E2  
                                         __ptext119 9334                                           __ptext240 A38E  
                                         __ptext232 85B2                                           __ptext224 A946  
                                         __ptext216 A270                                           __ptext208 7EFE  
                                         __ptext160 A786                                           __ptext152 A844  
                                         __ptext144 A0FC                                           __ptext136 839A  
                                         __ptext128 7AC0                                           __ptext241 9984  
                                         __ptext233 A430                                           __ptext225 98FA  
                                         __ptext217 A806                                           __ptext209 4730  
                                         __ptext161 A93E                                           __ptext153 A8EE  
                                         __ptext145 A83A                                           __ptext137 8C5A  
                                         __ptext129 9E76                                           __ptext250 6DCE  
                                         __ptext242 8A14                                           __ptext234 816C  
                                         __ptext226 9ED6                                           __ptext218 70B4  
                                         __ptext170 9F90                                           __ptext162 A17C  
                                         __ptext154 A964                                           __ptext146 9F62  
                                         __ptext138 899C                                           __ptext251 63A8  
                                         __ptext243 8A8C                                           __ptext235 86BA  
                                         __ptext227 A660                                           __ptext219 8E6A  
                                         __ptext171 9FBE                                           __ptext163 A858  
                                         __ptext155 A966                                           __ptext147 A7D0  
                                         __ptext139 A710                                           __ptext260 9526  
                                         __ptext252 7F9E                                           __ptext244 A01A  
                                         __ptext236 9A0A                                           __ptext228 A94A  
                                         __ptext180 A89E                                           __ptext172 9FEC  
                                         __ptext164 A862                                           __ptext156 A968  
                                         __ptext148 93DC                                           __ptext261 8636  
                                         __ptext245 905E                                           __ptext237 A450  
                                         __ptext229 A94E                                           __ptext181 803A  
                                         __ptext173 7E5A                                           __ptext165 98B4  
                                         __ptext157 A766                                           __ptext149 A7DE  
                                         __ptext270 9B0E                                           __ptext262 A1A6  
                                         __ptext254 A048                                           __ptext246 94D4  
                                         __ptext238 69DC                                           __ptext190 71A4  
                                         __ptext182 A8A8                                           __ptext174 A646  
                                         __ptext166 A86C                                           __ptext158 A84E  
                                         __ptext271 A610                                           __ptext263 A076  
                                         __ptext255 A52E                                           __ptext247 8B04  
                                         __ptext239 628C                                           __ptext191 8D30  
                                         __ptext183 A8B2                                           __ptext175 8D9A  
                                         __ptext167 A876                                           __ptext159 A776  
                                         __ptext280 A4D0                                           __ptext272 6ECA  
                                         __ptext264 A5F4                                           __ptext256 A8DA  
                                         __ptext248 5CC6                                           __ptext192 8E02  
                                         __ptext184 A8BC                                           __ptext176 67DA  
                                         __ptext168 A880                                           __ptext281 A956  
                                         __ptext273 68DC                                           __ptext265 A92C  
                                         __ptext257 A8F6                                           __ptext249 6CD2  
                                         __ptext193 567A                                           __ptext185 9EA6  
                                         __ptext177 9702                                           __ptext169 A6AA  
                                         __ptext282 A96E                                           __ptext274 A490  
                                         __ptext266 A6D8                                           __ptext258 5F2A  
                                         __ptext194 A36C                                           __ptext186 8310  
                                         __ptext178 A88A                                           __ptext283 A906  
                                         __ptext275 A8E4                                           __ptext267 A470  
                                         __ptext259 9A4C                                           __ptext195 91D6  
                                         __ptext187 A8C6                                           __ptext179 A894  
                                         __ptext284 A4F0                                           __ptext276 A4B0  
                                         __ptext268 A96A                                           __ptext196 9940  
                                         __ptext188 3F04                                           __ptext285 A95A  
                                         __ptext277 A952                                           __ptext269 928A  
                                         __ptext197 8F9A                                           __ptext189 12D6  
                                         __ptext286 A970                                           __ptext278 A96C  
                                         __ptext198 1B5A                                           __ptext287 A95E  
                                         __ptext279 A8FE                                           __ptext199 5E00  
                                         __ptext288 0000                                            ?___lbmod 0001  
                                          ?___flmul 0084                                            ?___flsub 0084  
                                          ?___fltol 0060                                   _EncryptFRMPayload 4E22  
                                          ?___lldiv 0060                        RADIO_FSKPacketSent@timeOnAir 00D7  
                     __size_of_UpdateJoinInProgress 001A                                            ?___llmod 0060  
                     __size_of_ExecuteRxTimingSetup 0028                                     ??_AESEncodeLoRa 0082  
          SelectChannelForTransmission@channelIndex 00B5                                            ?___ltdiv 0060  
                   __end_of_PrepareJoinRequestFrame 57CA                                            ?___lwdiv 0060  
                              __end_of_timerHandler 6050                                            ?___lwmod 00A0  
                                   ?_ADC_Initialize 0001                                  ?_SwTimersInterrupt 0078  
                         _RADIO_SetChannelFrequency 8310                              __end_of_TMR5_StopTimer A926  
                       __size_of_DIO3_ISR_Lora_Init 0002               IncludeMacCommandsResponse@bufferIndex 006D  
                         _SetCallbackSoftwareTimers 745E                                  ConfigureRadio@freq 006E  
                                   sendValue@status 00FB                               ??_RADIO_SetModulation 0060  
                                  ?_RADIO_GetStatus 0001                                       ??_sinGenStart 0066  
                            __end_of_LORAWAN_RxDone 0BD8                               ?_impedenceAcquisition 0001  
                               ??_ValidateFrequency 0064                              __end_of_LORAWAN_TxDone 12D6  
                                ?_EncryptFRMPayload 0092                        ??_INTERRUPT_InterruptManager 002A  
                               averageMeasure@value 0071                                    __CFG_PRICLKEN$ON 000000  
                      __end_of_LORAWAN_PlatformInit A36C                      __size_of_RADIO_SetLoRaSyncWord 000A  
                                  _ExecuteDevStatus A826                       __end_of_RADIO_SetLoRaSyncWord A8DA  
            IncludeMacCommandsResponse@pBufferIndex 0062                          __size_of_SwTimerSetTimeout 0044  
                       ??_LORAWAN_GetMaxPayloadSize 0068                      LORAWAN_LinkCheckConfigure@iCtr 00A8  
                  ExecuteRxParamSetupReq@dlSettings 00A4                                      _AssemblePacket 17D0  
                                   ?_ConfigureRadio 006E                           AssemblePacket@bufferIndex 00D3  
                       LORAWAN_SetUplinkCounter@ctr 0060                          ??_INT2_SetInterruptHandler 0062  
                                          _BAUDCON2 000F70                          __end_ofi2_TMR_GetDeltaTime 69DC  
                               ??_SwTimersInterrupt 007C                                RADIO_DIO0@dioMapping 00F8  
                                         _firstSend 0124                                   _DutyCycleCallback 2EA8  
                                         _eval_poly 6ADA                             InitDefault433Channels@i 006B  
                             __end_of_TMR_SwapTimer 9A4C                                        ?_SwTimerStop 0001  
                                         _msCounter 011C                                 ??_EncryptFRMPayload 00A0  
                           __end_ofi2_TMR_SwapTimer 9B4E                             __size_of_EncKeySchedule 029C  
                                AssemblePacket@mhdr 00D0                                    ___lwdiv@quotient 0064  
                                       strncat@from 0062                                  AssemblePacket@port 00C8  
                                       ??i2___awdiv 0005                           __size_of_RADIO_ReadRandom 00A0  
                                       strncat@size 0064                        __size_of_leafSensAcquisition 0028  
                          ConfigureRadioRx@dataRate 0077                                      __size_of_frexp 00B6  
                           __end_of_rn2483_delaysec 9B0E                                  _RADIO_ReceiveStart 3CD4  
                                          ?_strncat 0060                                         ??i2___lwdiv 0005  
                                       ??i2___lwmod 0005                                      __size_of_srand 0010  
                          __end_of_LORAWAN_Mainloop 9B8C                               ?_RADIO_SetFSKSyncWord 006B  
                              _INTERRUPT_Initialize A93E                                     ?_TMR3_StopTimer 0001  
                                     _SwTimerCreate 8B04                      __end_of_InitDefault868Channels 8A8C  
               IncludeMacCommandsResponse@macBuffer 0060                            ?_RADIO_FHSSChangeChannel 0001  
                     ValidateFrequency@frequencyNew 0060                                       _TMR1_CallBack A470  
                         __end_of_ValidateFrequency 8C5A                                    _SwTimerIsRunning A306  
                                  _ExecuteLinkCheck 9D52                                 __size_of_timerReset 002C  
                              i2SwTimersInterrupt@i 0029                                            _INT1_ISR A906  
                                          _INT2_ISR A8FE                                   EncKeySchedule@key 0060  
                                    ___wmul@product 0064                                            _IOCBbits 000F62  
                                _RADIO_SetBandwidth A8C6                                            _GPIOInit 5CC6  
           EUSART2_SetErrorHandler@interruptHandler 0060                            __size_of_GPIOAverageRead 007A  
                            ?_RADIO_FSKPayloadReady 0001                   __size_of_INT1_SetInterruptHandler 000A  
                              __end_of_rxWindowSize FF27                               ?_RADIO_WriteFrequency 006D  
                                         _sendValue 8F38                           ?_INT1_SetInterruptHandler 0060  
                                  ?_SystemTimerInit 0001                                           _reloadVal 003E  
                               ?_RADIO_ReceiveStart 00A9                                            _IPR1bits 000F9F  
                                          _IPR2bits 000FA2                                    _SwTimerReadValue 9A8E  
                                          _PIE1bits 000F9D                                            _PIE2bits 000FA0  
                                          _IPR5bits 000F7F                                    _ExecuteDutyCycle 92E0  
                                          _PIE5bits 000F7D                                     _HALDIO5PinValue A806  
                              RADIO_DIO1@dioMapping 00C4                           __end_of_SwTimersInterrupt 6ADA  
                                         _sinSignal 0400                                 uint16ToString@value 00A5  
                          __size_of_TMR1_WriteTimer 0020                 __size_of_INTERRUPT_InterruptManager 009C  
                        __end_of_DIO2_ISR_Lora_Init A776                                     ___ltdiv@divisor 0063  
                                          _PIR1bits 000F9E                                    GenerateSubkey@k1 0094  
                                  GenerateSubkey@k2 0096                                            _PIR2bits 000FA1  
                                          _PIR3bits 000FA4                                ConfigureRadioRx@freq 0073  
                        ??_TMR3_SetInterruptHandler 0062                           __end_of_EncryptFRMPayload 4F9E  
                                          _PIR5bits 000F7E                      __size_of_RADIO_WriteFSKBitRate 0068  
                          UpdateReceiveDelays@delay 0066                           LORAWAN_RxDone@bufferIndex 00E7  
                                   ___ltdiv@counter 0069                              __size_of_UpdateTxPower 000A  
                     __end_of_RADIO_WriteFSKBitRate 8E6A                                ConfigureRadioTx@freq 0073  
                       UpdateDataRange@dataRangeNew 0060                            __size_of_TMR5_Initialize 0032  
                                          _RCONbits 000FD0                                 ?_RADIO_SetBandwidth 0001  
                SearchAvailableChannel@channelIndex 00A8                                           _rxPayload 010E  
                                  __CFG_WDTPS$32768 000000                              _UpdateMinMaxChDataRate 77B0  
                     EncryptFRMPayload@bufferLength 0094                             ValidateDataRange@result 0062  
                                          _SSP2CON1 000F6C                         UpdateDutyCycle@dutyCycleNew 0060  
        ValidateChannelId@allowedForDefaultChannels 0060                       __size_of_FindSmallestDataRate 00C2  
                                          _TMR1_ISR A6D8                                           _timerTick A8F6  
                          ConfigureRadioTx@dataRate 0077                                            _TMR3_ISR A076  
              __size_of_RADIO_SetFrequencyHopPeriod 000A                                            _TMR5_ISR A048  
                              __size_of_i2c_waitACK 001A                               ValidateTxPower@result 0060  
                                  ?_RADIO_RxTimeout 0001                 __size_of_IncludeMacCommandsResponse 0332  
                                          _SSP2STAT 000F6D                        ??_LORAWAN_LinkCheckConfigure 00A0  
                                 ??_PIN_MANAGER_IOC 0001                                   ?_SwClearAllTimers 0001  
                       __size_of_RADIO_GetPacketSnr 0006                                 _UpdateReceiveDelays 99C8  
                   __size_of_SetReceptionNotOkState 007A                                     ?_TMR5_StopTimer 0001  
                            __end_of_AssemblePacket 1B5A                                     ?_LORAWAN_RxDone 01DA  
                                  ??_tempConversion 00B8                                     ?_LORAWAN_TxDone 00B3  
                              __size_of_i2c_usdelay 0024                                   ??_TMR1_Initialize 0062  
                                  __size_of_ADC_ISR 0004                            tempSensAcquisition@value 00C4  
                                ??_SwClearAllTimers 0060                                          _ADCON0bits 000FC2  
                              _TMR5_InterruptTicker A8DA                                    ___abdiv@dividend 0066  
                                _DIO1_ISR_Lora_Init A776                           __end_of_DutyCycleCallback 31AE  
                                 ___wmul@multiplier 0060                                    __size_of_AESCmac 035C  
                 __size_of_LORAWAN_SetUplinkCounter 0012                                ??_RADIO_ReceiveStart 00AB  
                           ValidateFrequency@result 0064                           ?_LORAWAN_SetUplinkCounter 0060  
                        __end_of_PrepareSessionKeys 816C                                       _pointAddition 97E0  
                                 ?_ConfigureRadioRx 0073                                   ?_ConfigureRadioTx 0073  
                          __size_of_TMR3_StartTimer 0004                                          ?_eval_poly 009D  
                              RADIO_DIO2@dioMapping 007C                                  AESEncodeLoRa@block 007E  
                                          _Channels 0414                                   i2___awdiv@divisor 0003  
                       __end_of_RADIO_FSKPacketSent 66D6                   __size_of_TMR5_SetInterruptHandler 000A  
                                  __size_of_GPIOSet 00FC                                 __end_of_sinGenStart 5CC6  
                                 i2___awdiv@counter 0005                           ?_TMR5_SetInterruptHandler 0060  
           RADIO_SetSpreadingFactor@spreadingFactor 0060                                  ??_ConfigureRadioRx 0077  
                                ??_ConfigureRadioTx 0077                                ??_RADIO_SetBandwidth 0060  
                             rn2483_delaysec@length 0060                                 ?_DIO1_ISR_Lora_Init 0001  
                     RADIO_SetIQInverted@iqInverted 0060                               __size_of_TMR3ISRClock 0006  
                                  ?_RADIO_WriteMode 0065                           LORAWAN_RxDone@computedMic 00EB  
                                 ___lmul@multiplier 0092                                         _INTCON2bits 000FF1  
                                       _INTCON3bits 000FF0                                      ?_SwTimerCreate 0001  
                                         copy_data0 788E                                           copy_data1 78AE  
                                         copy_data2 78CE                               ?_INTERRUPT_Initialize 0001  
                           ?_INTERRUPT_GetDioStatus 0001                                ?_UpdateReceiveDelays 0001  
                       __end_of_RADIO_SetIQInverted A89E                                      ?_TMR1_CallBack 0001  
                              __end_of_TMR_ISR_lora 92E0                                         _RADIO_Reset 98FA  
                               ExecuteLinkCheck@ptr 0060                      i2SwTimersInterrupt@timeElapsed 0021  
                                _RADIO_RegisterRead A270                            __size_of_ValidateTxPower 002A  
                           ??_StopAllSoftwareTimers 0061                                      _StartReTxTimer 5528  
                       __end_ofi2_SwTimersInterrupt 6FC2                           _LORAWAN_GetMaxPayloadSize 95C8  
                           _EUSART2_SetErrorHandler A880                          LORAWAN_RxDone@extractedMic 00E3  
                                       AESCmac@flag 01D6                       EncryptFRMPayload@frameCounter 0096  
                                          _i2c_stop 9E46                                  CheckMcastFlags@hdr 0060  
                                       AESCmac@size 00C0                         _EUSART2_OverrunErrorHandler 02FC  
                          SwTimerSetTimeout@timerId 0075                            SwTimerSetTimeout@timeout 006D  
                             RADIO_WriteMode@opMode 006B                            ??_ExecuteRxParamSetupReq 00A0  
                                        ?_sendValue 0001                 __size_of_LORAWAN_LinkCheckConfigure 015E  
                                         frexp@eptr 0070                                    ??_uint16ToString 00A9  
                      __size_of_tempSensAcquisition 005E                                    ___abdiv@quotient 0065  
           UpdateReceiveWindow2Parameters@frequency 0060                                _LORAWAN_SetDeviceEui 9F90  
                                          __Hrparam 0000                                 ?_RADIO_RegisterRead 0001  
                          __size_of_TMR3_WriteTimer 001C                        __end_of_SystemBlockingWaitMs 9F06  
            ValidateChannelMaskCntl@channelMaskCntl 0061                                   i2_TMR1_WriteTimer A610  
                                         memcpy@tmp 0066          LORAWAN_SetApplicationEui@applicationEuiNew 006B  
                                          __Lrparam 0000                                    ??_EncodeShiftRow 0062  
                              ??_DIO1_ISR_Lora_Init 0062                                   _ADC_GetConversion 9334  
                          __size_of_CheckMcastFlags 007A                                  __CFG_BOREN$SBORDIS 000000  
                             TMR1_ReadTimer@readVal 0064                          __size_of_ValidateDataRange 0046  
                         _ticksToScheduledInterrupt 0052                                   __CFG_P2BMX$PORTD2 000000  
                      ValidateDataRange@dataRateMax 0064                        ValidateDataRange@dataRateMin 0065  
                        __size_of_ValidateChannelId 0024                                    ?_SPI2_Initialize 0001  
                                        ?_timerTick 0001                                  ?i2_TMR1_WriteTimer 0001  
                                  __size_of___abdiv 0066                             ??_OSCILLATOR_Initialize 0060  
                            ??_impedenceAcquisition 00AB                                  ?_ADC_GetConversion 0060  
                                 ?_ValidateDataRate 0001                                    __size_of___fladd 030E  
                                  __size_of___fldiv 028A                                    __size_of___awdiv 0086  
                                _ComputeSessionKeys 84A8                               __size_of_SwTimerStart 008E  
                                  __size_of___lbmod 002A                                    __size_of___flmul 0354  
                                  __size_of___flsub 0048                                    __size_of___fltol 00BC  
                                  __size_of___lldiv 0084                                    __size_of___llmod 0068  
                                  __size_of___ltdiv 006C                                    __size_of___lwdiv 0054  
                                  __size_of___lwmod 0044                                     ?_AssemblePacket 00C8  
                              AssemblePacket@buffer 00C9                                    SwTimersExecute@i 00DF  
                             ?_TMR5_InterruptTicker 0001                                  ??_ValidateDataRate 0060  
                           __size_of_GPIOAnalogRead 001E                             __size_of_GPIOAnalogMode 0114  
                                 ??_TMR3_Initialize 0062                            _TMR1_SetInterruptHandler A844  
                            _IOCB4_InterruptHandler 01E9                                   ??_GPIODigitalRead 0060  
                                      _TMR3ISRClock A92C                                      ?_pointAddition 0060  
                                       _radioBuffer 07C7                                 ??i2_TMR1_WriteTimer 0003  
   __end_of_ResetParametersForConfirmedTransmission A7B4    __size_of_ResetParametersForConfirmedTransmission 000E  
          ?_ResetParametersForConfirmedTransmission 0001           ??_ResetParametersForConfirmedTransmission 0060  
           _ResetParametersForConfirmedTransmission A7A6                               _TMR1_InterruptHandler 01E5  
                                  ??_GenerateSubkey 0098                                 ??_ADC_GetConversion 0062  
                              _lightSensAcquisition 9668                                    _CountfOptsLength 76E6  
                                        _HALSPISend A7EC                                 ?_ComputeSessionKeys 0092  
                                    _rxWindowOffset FF0F                  RADIO_UnhandledInterrupt@modulation 0064  
                                          ___xxtofl 57CA                          __end_of_MacExecuteCommands 4544  
                          __size_of_TMR5_StartTimer 0006                                ??_RADIO_RegisterRead 0062  
                              _EUSART2_ErrorHandler 02FA                    __end_of_RADIO_UnhandledInterrupt 9E46  
                                     _UpdateTxPower A812                                     ___lwdiv@divisor 0062  
                              RADIO_Transmit@buffer 00A9                     __end_of_RADIO_FHSSChangeChannel 9C42  
                                          _sCounter 011A                                     _allocatedTimers 0128  
                    ?_IOCB4_DefaultInterruptHandler 0001                                     ___lwdiv@counter 0066  
                    __end_of_INTERRUPT_GetDioStatus A710                                   ?i2_TMR1_ReadTimer 0001  
                                _DIO5_ISR_Lora_Init A964                                            __ptext10 1EB6  
                                          __ptext11 57CA                                            __ptext20 9DE6  
                                          __ptext12 7B7E                                            __ptext21 9B4E  
                                          __ptext13 9798                                          _T1GCONbits 000FCC  
                                          __ptext30 9828                                            __ptext22 793C  
                                          __ptext14 2B9A                                            __ptext31 9BCA  
                                          __ptext23 2EA8                                            __ptext15 3A4A  
                                          __ptext40 9C06                                            __ptext32 8924  
                                          __ptext24 5A4E                                            __ptext16 97E0  
                                          __ptext41 8286                                            __ptext33 A6EC  
                                          __ptext25 A298                                            __ptext17 852E  
                                          __ptext50 A5A0                                            __ptext42 9E16  
                                          __ptext34 A54C                                            __ptext26 6050  
                                          __ptext18 8F38                                            __ptext51 4128  
                                          __ptext43 66D6                                            __ptext35 A568  
                                          __ptext27 4F9E                                            __ptext19 A0A4  
                                          __ptext60 53CC                                            __ptext52 5528  
                                          __ptext44 737A                                            __ptext36 A584  
                                          __ptext28 7C3A                                            __ptext61 A67A  
                                          __ptext53 873C                                            __ptext45 8ED2  
                                          __ptext37 9578                                            __ptext29 753C  
                                          __ptext70 A2BE                                            __ptext62 A6C2  
                                          __ptext54 A0D0                                            __ptext46 7DA8  
                                          __ptext38 96B6                                    ?i2_TMR_SwapTimer 0009  
                                          __ptext71 9D52                                            __ptext63 4544  
                                          __ptext55 A5BC                                            __ptext47 31AE  
                                          __ptext39 9F06                                            __ptext80 8CC6  
                                          __ptext72 48FC                                            __ptext64 8BEE  
                                          __ptext56 433C                                            __ptext48 00AC  
                                          __ptext81 616E                                            __ptext73 A128  
                                          __ptext65 986E                                            __ptext57 A1F8  
                                          __ptext49 8B7C                                            __ptext90 4E22  
                                          __ptext82 92E0                                            __ptext74 A692  
                                          __ptext66 9C42                                            __ptext58 99C8  
                                          __ptext91 8422                                            __ptext83 A826  
                                          __ptext75 A3D0                                            __ptext67 9CEA  
                                          __ptext59 A220                                            __ptext92 7614  
                                          __ptext84 6FC2                                            __ptext76 974E  
                                          __ptext68 64BC                                            __ptext93 76E6  
                                          __ptext85 95C8                                            __ptext77 A812  
                                          __ptext69 9B8C                                            __ptext94 9618  
                                          __ptext86 17D0                                            __ptext78 A81C  
                                          __ptext95 84A8                                            __ptext87 253C  
                                          __ptext79 A5D8                                            __ptext96 80D4  
                                          __ptext88 A90E                                            __ptext97 87B6  
                                          __ptext89 79FE                                            __ptext98 911C  
                                          __ptext99 65CA                                 _tempConversion$6793 00B8  
                           ExecuteRxTimingSetup@ptr 0067                              ??_RADIO_SetFSKSyncWord 006D  
                             ??_UpdateReceiveDelays 0066                               __end_of_LORAWAN_Reset 48FC  
                            __end_of_StartReTxTimer 567A                             ??_UpdateCurrentDataRate 0060  
                                          _isJoined A3B0                             ??_UpdateChannelIdStatus 0061  
                                     _sensorsString 03A0                            __size_of_UpdateDataRange 010E  
                            _SetReceptionNotOkState 873C                                        _SSP2CON1bits 000F6C  
                                  ?_rn2483_delaysec 0060                                 GenerateSubkey@F5972 03D0  
                                      ?_adaptString 0060                                  ??i2_TMR1_ReadTimer 0003  
                         __size_of_RADIO_WritePower 00EE                             __end_of_HALDIO5PinValue A812  
                                        _T3GCONbits 000FB4                                    __size_of_strncat 0084  
                           TMR3_WriteTimer@timerVal 0001                                   ?_UpdateDLSettings 0060  
                       __size_of_EUSART2_Initialize 0046                              ConfigureRadio@dataRate 0072  
                                 ?_ValidateRxOffset 0001                          __size_of_ValidateFrequency 006C  
                  __size_of_PrepareJoinRequestFrame 0150                                       CheckFlags@hdr 0060  
                            ??_RADIO_WriteFrequency 0071                                pointAddition@element 0060  
                              GPIODigitalWrite@GPIO 0061                               __size_of_UpdateCfList 0214  
                               ?_DIO5_ISR_Lora_Init 0001                       __size_of_RADIO_SetOutputPower 000A  
                                     __size_of_main 00E8                                       __size_of_rand 005C  
                                        _T5GCONbits 000F4D                                   _RADIO_ReceiveStop A3F0  
                                ??_UpdateDLSettings 0061                  _EUSART2_DefaultFramingErrorHandler 000000  
                              _LORAWAN_PlatformInit A34A                                     _FskSyncWordBuff FFF2  
                                ??_ValidateRxOffset 0060                           __end_ofi2_TMR1_WriteTimer A62C  
         IncludeMacCommandsResponse@bIncludeInFopts 0064                                ??_ComputeSessionKeys 0094  
                             ?_LORAWAN_SetDeviceEui 006B                           __end_of_ADC_GetConversion 9388  
                                     _timerOverflow 0044                                        _SwTimerStart 816C  
                        __size_of_SwTimersInterrupt 00FE                                  ?_RADIO_ReceiveStop 0001  
                             __size_of_timerHandler 0126                          ??_RADIO_SetSpreadingFactor 0060  
                                          _resetSDA A7C2                               RADIO_TxDone@timeOnAir 00D7  
                    ValidateChannelMask@channelMask 0060                            __size_of_TMR5_WriteTimer 001E  
                                    _averageMeasure 839A                         __size_of_DIO0_ISR_Lora_Init 0010  
                        __size_of_EncryptFRMPayload 017C                                     GenerateSubkey@i 00B9  
                                   GenerateSubkey@l 00A9      EUSART2_SetOverrunErrorHandler@interruptHandler 0060  
                           PrepareSessionKeys@index 0071                            __end_of_TMR_GetDeltaTime 63A8  
                                SwTimerStop@timerId 0060                                            _swTimers 0300  
                                 ??_GPIOAverageRead 006F                                    ??_TMR1_ReadTimer 0062  
                              RADIO_RxDone@irqFlags 00F4                         __end_of_ValidateChannelMask 9798  
                                     UpdateCfList@i 00AA                  __end_of_INTERRUPT_InterruptManager 00A4  
                        _INTERRUPT_InterruptManager 0008                                 ??_RADIO_ReceiveStop 006C  
                       PrepareSessionKeys@networkId 006F                                   _RADIO_ReleaseData A91A  
                                      ??_timerReset 0060                                   ??_TMR1_WriteTimer 0062  
                                   i2c_usdelay@time 0060                                        ?_acuadoriApp 0001  
                                       _sinGenStart 5B8C                                          _RADIO_DIO0 8286  
                                        _RADIO_DIO1 96B6                                          _RADIO_DIO2 9578  
                                        _RADIO_DIO3 A584                                          _RADIO_DIO4 A568  
                                        _RADIO_DIO5 A54C                                        _SSP2STATbits 000F6D  
                              ??_DIO5_ISR_Lora_Init 0060                __end_of_INT1_DefaultInterruptHandler A972  
             __size_of_INT1_DefaultInterruptHandler 0002                        _INT1_DefaultInterruptHandler A970  
                 __size_of_RADIO_WriteConfiguration 04FA                              __end_of_rxWindowOffset FF17  
                       i2TMR1_ReadTimer@readValHigh 0007                                   ??_TMR5_Initialize 0062  
                        __size_of_DutyCycleCallback 0306                             EncryptFRMPayload@buffer 0092  
                                ?_RADIO_ReleaseData 0001                           ?_RADIO_WriteConfiguration 009E  
                                          log@coeff FFAA                                  __end_of_modulation FF0F  
                                        _RADIO_Init 4AC6                               ?_lightSensAcquisition 0001  
                   ExecuteRxParamSetupReq@frequency 00A0                    ??_EUSART2_SetOverrunErrorHandler 0062  
                   ?_EUSART2_SetOverrunErrorHandler 0060                            __size_of_UpdateFrequency 003C  
                          ?_ValidateChannelMaskCntl 0001                          ??_LORAWAN_GetUplinkCounter 0064  
                                     __roundCounter 0043                                          _INTCONbits 000FF2  
                           ConfigureRadioTx@txPower 0078                                         ??_eval_poly 00A5  
                             acquisitionData@string 00AB                            __end_of_HALSPICSDeassert A946  
                          __size_of_UpdateDutyCycle 0034                                      ?_UpdateTxPower 0001  
                                          memcpy@d1 0060                                            memcpy@s1 0062  
                                    _EncKeySchedule 37AE                  __size_of_SetCallbackSoftwareTimers 00DE  
                           __size_of_RxJoinResponse 001C                                     ??_SwTimerCreate 0060  
                               ExecuteDutyCycle@ptr 0060                                        _UpdateCfList 4128  
                               ??_RADIO_ReleaseData 0060                              ??_INTERRUPT_Initialize 0060  
                                          memset@p1 0060                                     ??_TMR1_CallBack 002A  
                              __size_of_SwTimerStop 0020                                    _RADIO_ReadRandom 7EFE  
                         ??_EUSART2_SetErrorHandler 0062                                  _EXT_INT_Initialize A17C  
                                   ?_StartReTxTimer 0001                               _TMR_OverrideRemaining 86BA  
                                 ??_TMR3_StartTimer 0060                                            intlevel2 0000  
                    RADIO_ReceiveStart@rxWindowSize 00A9                                        _timerHandler 5F2A  
                         __end_of_RADIO_ReceiveStop A410                                     _SwTimersExecute 793C  
               SwTimerSetCallback@callbackParameter 0062                                         FillSubKey@i 0067  
                               _sensorsStringLength 01F8                       RADIO_WriteFrequency@frequency 006D  
                                  ___lwmod@dividend 00A0                               ?_LORAWAN_PlatformInit 0001  
                                  ___lldiv@dividend 0060                            __end_of_ExecuteDevStatus A830  
                           ?_PIN_MANAGER_Initialize 0001                                  _DefaultChannels433 FF80  
                                __end_of_timerReset A0D0                                  _DefaultChannels868 FF48  
                                       ??_sendValue 00FA                                 ?_EXT_INT_Initialize 0001  
                                      ___abdiv@sign 0064                            UpdateDutyCycle@channelId 0062  
                            __end_of_averageMeasure 8422                                          _RCSTA2bits 000F71  
                            GenerateSubkey@const_Rb 0099                     __size_of_ExecuteRxParamSetupReq 015C  
                                         strncat@cp 0066                                           strncat@to 0060  
                                  ??_ADC_Initialize 0060                           UpdateJoinInProgress@state 0060  
                                 ??_ValidateTxPower 0060                                 _LORAWAN_TxDone$1673 00BD  
                               _LORAWAN_TxDone$1674 00C1                                   _LORAWAN_GetStatus 9DB6  
                         __size_of_GPIODigitalWrite 00FC                                 _LORAWAN_TxDone$6790 00CA  
                __end_of_LORAWAN_LinkCheckConfigure 53CC                           __end_of_RADIO_ReleaseData A920  
                        _LORAWAN_LinkCheckConfigure 526E                                  __end_of_txPower433 FF42  
                          __size_of_EnableChannels1 006A                                  __end_of_txPower868 FF48  
                             _HALResetPinMakeOutput A94A                                         ??_timerTick 0001  
                          ??_HALResetPinOutputValue 0060                              __size_of_INT1_CallBack 0020  
                         RADIO_WriteConfiguration@i 00A3                                 _leafSensAcquisition A248  
                         ExecuteRxTimingSetup@delay 0069                                    AESEncodeLoRa@key 0080  
                         __size_of_SetJoinFailState 002C                    LORAWAN_LinkCheckConfigure@period 009E  
                                  ??_ConfigureRadio 0072      EUSART2_SetFramingErrorHandler@interruptHandler 0060  
                                ?_LORAWAN_GetStatus 0060                                  _SwTimerSetCallback 9D1E  
       __end_of_UpdateRetransmissionAckTimeoutState 8BEE        __size_of_UpdateRetransmissionAckTimeoutState 0072  
              ?_UpdateRetransmissionAckTimeoutState 0001               ??_UpdateRetransmissionAckTimeoutState 0092  
               _UpdateRetransmissionAckTimeoutState 8B7C                              ??_TMR5_InterruptTicker 0009  
                                 RADIO_ReadRandom@i 0071                        SearchAvailableChannel@result 00AF  
                             RADIO_WritePower@paDac 0065                                   ??_TMR3_WriteTimer 0003  
                                   ??_pointAddition 0062                              __size_of_INT2_CallBack 0020  
                       __size_of_DIO4_ISR_Lora_Init 0002                               __end_of_DIO0_ISR_Lora A95E  
                          __end_of_SwTimerIsRunning A328                                   ??_CheckMcastFlags 0062  
                          __end_of_ExecuteLinkCheck 9D84                               RADIO_WritePower@power 0066  
                                  _RADIO_TxDone$796 00DB                            ?_CreateAllSoftwareTimers 0001  
                  RADIO_WriteMode@currentModulation 0067                                ??_EXT_INT_Initialize 0062  
                      RADIO_SetFSKSyncWord@syncWord 006B                                        _rxWindowSize FF1F  
                               ??_LORAWAN_GetStatus 0064                              __end_of_EncKeySchedule 3A4A  
                     ?_INT1_DefaultInterruptHandler 0001                               __end_of_DIO1_ISR_Lora A95A  
                               ?_SwTimerSetCallback 0060                            __end_of_SwTimerReadValue 9ACE  
                                  ___lldiv@quotient 0068                                         ?_HALSPISend 0001  
                          __end_of_ExecuteDutyCycle 9334                                     ___lwmod@divisor 00A2  
            __end_of_UpdateReceiveWindow2Parameters A6D8             __size_of_UpdateReceiveWindow2Parameters 0016  
                    _UpdateReceiveWindow2Parameters A6C2                             UpdateTxPower@txPowerNew 0060  
                                   ___lwmod@counter 00A4                     _LORAWAN_LinkCheckConfigure$2499 00A4  
                                  ??_TMR3_StopTimer 0060                    __end_of_INT1_SetInterruptHandler A86C  
                      FindSmallestDataRate@dataRate 0063                       LORAWAN_Join@activationTypeNew 00DC  
                             __size_of_TMR_ISR_lora 0056                                   __CFG_T3CMX$PORTC0 000000  
                             __end_of_DIO2_ISR_Lora A956                                _SystemBlockingWaitMs 9ED6  
                             FindSmallestDataRate@i 0062                  ComputeSessionKeys@joinAcceptBuffer 0092  
                           __size_of_EnableChannels 001C                        __end_of_UpdateJoinInProgress A660  
                      __end_of_ExecuteRxTimingSetup A220                             __size_of_HALSPICSAssert 0004  
                              ?_leafSensAcquisition 0001                             __end_of_FskSyncWordBuff FFF5  
                __size_of_LORAWAN_SetApplicationEui 002E            __end_of_RADIO_WriteFSKFrequencyDeviation 8D9A  
         __size_of_RADIO_WriteFSKFrequencyDeviation 006A                  ??_RADIO_WriteFSKFrequencyDeviation 0071  
                 ?_RADIO_WriteFSKFrequencyDeviation 006D                    _RADIO_WriteFSKFrequencyDeviation 8D30  
                __size_of_LORAWAN_SetApplicationKey 002E                                       ___fladd@signs 0080  
                                  ExtractMic@buffer 006B                          ?_LORAWAN_SetApplicationEui 006B  
                           ??_RADIO_FSKPayloadReady 00F4                            UpdateDataRange@channelId 0062  
                        ?_LORAWAN_SetApplicationKey 006B                                   ??_TMR5_StartTimer 0060  
                          _RADIO_UnhandledInterrupt 9E16                                    ?_HALDIO5PinValue 0001  
                    __end_of_PIN_MANAGER_Initialize 9430                                   ?_LORAWAN_Mainloop 0001  
                       __end_of_RADIO_RegisterWrite A430                             __size_of_ExecuteLinkAdr 01CA  
                                _eusart2RxLastError 0126                        RADIO_WriteFSKBitRate@bitRate 006D  
                                      ___fladd@aexp 0081                                        ___fladd@bexp 0082  
                                i2_TMR_GetDeltaTime 68DC                                 GPIOAverageRead@GPIO 0072  
                                   RADIO_SetCRC@crc 0060                                   __CFG_FOSC$INTIO67 000000  
                            tempConversion@adcValue 00B6                              ??_LORAWAN_SetDeviceEui 006D  
                                   _PIN_MANAGER_IOC A8E4                                 RADIO_WritePower@ocp 0064  
                                ??_LORAWAN_Mainloop 00FA                                    i2c_sdaWrite@data 0062  
                        __size_ofi2_TMR1_WriteTimer 001C                                ??_SwTimerSetCallback 0063  
                                   ?_averageMeasure 006A                           __end_of_LORAWAN_GetStatus 9DE6  
                        __size_of_ADC_GetConversion 0054                                   ??_UpdateDataRange 0061  
                           ?_UpdateMinMaxChDataRate 0001                                     _TMR1_Initialize 9F62  
                  RADIO_WriteConfiguration@regValue 00A8                             i2TMR1_ReadTimer@readVal 0005  
                                _RadioConfiguration 0129                                       ExtractMic@mic 0071  
                                 _LORAWAN_RxTimeout 31AE                                    ??_TMR5_StopTimer 0060  
                       __end_of_RADIO_SetModulation A8BC                    __end_of_LORAWAN_SetUplinkCounter A722  
                     __size_of_HALResetPinMakeInput 0004                         __size_of_RADIO_RxFSKTimeout 003C  
                                  ??_LORAWAN_RxDone 00DB                                 ?i2_TMR_GetDeltaTime 0009  
